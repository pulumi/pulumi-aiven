// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type CassandraCassandra struct {
}

// CassandraCassandraInput is an input type that accepts CassandraCassandraArgs and CassandraCassandraOutput values.
// You can construct a concrete instance of `CassandraCassandraInput` via:
//
//          CassandraCassandraArgs{...}
type CassandraCassandraInput interface {
	pulumi.Input

	ToCassandraCassandraOutput() CassandraCassandraOutput
	ToCassandraCassandraOutputWithContext(context.Context) CassandraCassandraOutput
}

type CassandraCassandraArgs struct {
}

func (CassandraCassandraArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraCassandra)(nil)).Elem()
}

func (i CassandraCassandraArgs) ToCassandraCassandraOutput() CassandraCassandraOutput {
	return i.ToCassandraCassandraOutputWithContext(context.Background())
}

func (i CassandraCassandraArgs) ToCassandraCassandraOutputWithContext(ctx context.Context) CassandraCassandraOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraCassandraOutput)
}

func (i CassandraCassandraArgs) ToCassandraCassandraPtrOutput() CassandraCassandraPtrOutput {
	return i.ToCassandraCassandraPtrOutputWithContext(context.Background())
}

func (i CassandraCassandraArgs) ToCassandraCassandraPtrOutputWithContext(ctx context.Context) CassandraCassandraPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraCassandraOutput).ToCassandraCassandraPtrOutputWithContext(ctx)
}

// CassandraCassandraPtrInput is an input type that accepts CassandraCassandraArgs, CassandraCassandraPtr and CassandraCassandraPtrOutput values.
// You can construct a concrete instance of `CassandraCassandraPtrInput` via:
//
//          CassandraCassandraArgs{...}
//
//  or:
//
//          nil
type CassandraCassandraPtrInput interface {
	pulumi.Input

	ToCassandraCassandraPtrOutput() CassandraCassandraPtrOutput
	ToCassandraCassandraPtrOutputWithContext(context.Context) CassandraCassandraPtrOutput
}

type cassandraCassandraPtrType CassandraCassandraArgs

func CassandraCassandraPtr(v *CassandraCassandraArgs) CassandraCassandraPtrInput {
	return (*cassandraCassandraPtrType)(v)
}

func (*cassandraCassandraPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraCassandra)(nil)).Elem()
}

func (i *cassandraCassandraPtrType) ToCassandraCassandraPtrOutput() CassandraCassandraPtrOutput {
	return i.ToCassandraCassandraPtrOutputWithContext(context.Background())
}

func (i *cassandraCassandraPtrType) ToCassandraCassandraPtrOutputWithContext(ctx context.Context) CassandraCassandraPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraCassandraPtrOutput)
}

type CassandraCassandraOutput struct{ *pulumi.OutputState }

func (CassandraCassandraOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraCassandra)(nil)).Elem()
}

func (o CassandraCassandraOutput) ToCassandraCassandraOutput() CassandraCassandraOutput {
	return o
}

func (o CassandraCassandraOutput) ToCassandraCassandraOutputWithContext(ctx context.Context) CassandraCassandraOutput {
	return o
}

func (o CassandraCassandraOutput) ToCassandraCassandraPtrOutput() CassandraCassandraPtrOutput {
	return o.ToCassandraCassandraPtrOutputWithContext(context.Background())
}

func (o CassandraCassandraOutput) ToCassandraCassandraPtrOutputWithContext(ctx context.Context) CassandraCassandraPtrOutput {
	return o.ApplyT(func(v CassandraCassandra) *CassandraCassandra {
		return &v
	}).(CassandraCassandraPtrOutput)
}

type CassandraCassandraPtrOutput struct{ *pulumi.OutputState }

func (CassandraCassandraPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraCassandra)(nil)).Elem()
}

func (o CassandraCassandraPtrOutput) ToCassandraCassandraPtrOutput() CassandraCassandraPtrOutput {
	return o
}

func (o CassandraCassandraPtrOutput) ToCassandraCassandraPtrOutputWithContext(ctx context.Context) CassandraCassandraPtrOutput {
	return o
}

func (o CassandraCassandraPtrOutput) Elem() CassandraCassandraOutput {
	return o.ApplyT(func(v *CassandraCassandra) CassandraCassandra { return *v }).(CassandraCassandraOutput)
}

type CassandraCassandraUserConfig struct {
	// Cassandra configuration values
	Cassandra *CassandraCassandraUserConfigCassandra `pulumi:"cassandra"`
	// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters []string `pulumi:"ipFilters"`
	// sets the service into migration mode enabling the sstableloader
	// utility to be used to upload Cassandra data files. Available only on service create.
	MigrateSstableloader *string `pulumi:"migrateSstableloader"`
	// Allow access to selected service ports from private networks.
	PrivateAccess     *CassandraCassandraUserConfigPrivateAccess `pulumi:"privateAccess"`
	ProjectToForkFrom *string                                    `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet
	PublicAccess *CassandraCassandraUserConfigPublicAccess `pulumi:"publicAccess"`
	// Name of another service to fork from. This has effect only
	// when a new service is being created.
	ServiceToForkFrom *string `pulumi:"serviceToForkFrom"`
}

// CassandraCassandraUserConfigInput is an input type that accepts CassandraCassandraUserConfigArgs and CassandraCassandraUserConfigOutput values.
// You can construct a concrete instance of `CassandraCassandraUserConfigInput` via:
//
//          CassandraCassandraUserConfigArgs{...}
type CassandraCassandraUserConfigInput interface {
	pulumi.Input

	ToCassandraCassandraUserConfigOutput() CassandraCassandraUserConfigOutput
	ToCassandraCassandraUserConfigOutputWithContext(context.Context) CassandraCassandraUserConfigOutput
}

type CassandraCassandraUserConfigArgs struct {
	// Cassandra configuration values
	Cassandra CassandraCassandraUserConfigCassandraPtrInput `pulumi:"cassandra"`
	// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// sets the service into migration mode enabling the sstableloader
	// utility to be used to upload Cassandra data files. Available only on service create.
	MigrateSstableloader pulumi.StringPtrInput `pulumi:"migrateSstableloader"`
	// Allow access to selected service ports from private networks.
	PrivateAccess     CassandraCassandraUserConfigPrivateAccessPtrInput `pulumi:"privateAccess"`
	ProjectToForkFrom pulumi.StringPtrInput                             `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet
	PublicAccess CassandraCassandraUserConfigPublicAccessPtrInput `pulumi:"publicAccess"`
	// Name of another service to fork from. This has effect only
	// when a new service is being created.
	ServiceToForkFrom pulumi.StringPtrInput `pulumi:"serviceToForkFrom"`
}

func (CassandraCassandraUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraCassandraUserConfig)(nil)).Elem()
}

func (i CassandraCassandraUserConfigArgs) ToCassandraCassandraUserConfigOutput() CassandraCassandraUserConfigOutput {
	return i.ToCassandraCassandraUserConfigOutputWithContext(context.Background())
}

func (i CassandraCassandraUserConfigArgs) ToCassandraCassandraUserConfigOutputWithContext(ctx context.Context) CassandraCassandraUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraCassandraUserConfigOutput)
}

func (i CassandraCassandraUserConfigArgs) ToCassandraCassandraUserConfigPtrOutput() CassandraCassandraUserConfigPtrOutput {
	return i.ToCassandraCassandraUserConfigPtrOutputWithContext(context.Background())
}

func (i CassandraCassandraUserConfigArgs) ToCassandraCassandraUserConfigPtrOutputWithContext(ctx context.Context) CassandraCassandraUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraCassandraUserConfigOutput).ToCassandraCassandraUserConfigPtrOutputWithContext(ctx)
}

// CassandraCassandraUserConfigPtrInput is an input type that accepts CassandraCassandraUserConfigArgs, CassandraCassandraUserConfigPtr and CassandraCassandraUserConfigPtrOutput values.
// You can construct a concrete instance of `CassandraCassandraUserConfigPtrInput` via:
//
//          CassandraCassandraUserConfigArgs{...}
//
//  or:
//
//          nil
type CassandraCassandraUserConfigPtrInput interface {
	pulumi.Input

	ToCassandraCassandraUserConfigPtrOutput() CassandraCassandraUserConfigPtrOutput
	ToCassandraCassandraUserConfigPtrOutputWithContext(context.Context) CassandraCassandraUserConfigPtrOutput
}

type cassandraCassandraUserConfigPtrType CassandraCassandraUserConfigArgs

func CassandraCassandraUserConfigPtr(v *CassandraCassandraUserConfigArgs) CassandraCassandraUserConfigPtrInput {
	return (*cassandraCassandraUserConfigPtrType)(v)
}

func (*cassandraCassandraUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraCassandraUserConfig)(nil)).Elem()
}

func (i *cassandraCassandraUserConfigPtrType) ToCassandraCassandraUserConfigPtrOutput() CassandraCassandraUserConfigPtrOutput {
	return i.ToCassandraCassandraUserConfigPtrOutputWithContext(context.Background())
}

func (i *cassandraCassandraUserConfigPtrType) ToCassandraCassandraUserConfigPtrOutputWithContext(ctx context.Context) CassandraCassandraUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraCassandraUserConfigPtrOutput)
}

type CassandraCassandraUserConfigOutput struct{ *pulumi.OutputState }

func (CassandraCassandraUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraCassandraUserConfig)(nil)).Elem()
}

func (o CassandraCassandraUserConfigOutput) ToCassandraCassandraUserConfigOutput() CassandraCassandraUserConfigOutput {
	return o
}

func (o CassandraCassandraUserConfigOutput) ToCassandraCassandraUserConfigOutputWithContext(ctx context.Context) CassandraCassandraUserConfigOutput {
	return o
}

func (o CassandraCassandraUserConfigOutput) ToCassandraCassandraUserConfigPtrOutput() CassandraCassandraUserConfigPtrOutput {
	return o.ToCassandraCassandraUserConfigPtrOutputWithContext(context.Background())
}

func (o CassandraCassandraUserConfigOutput) ToCassandraCassandraUserConfigPtrOutputWithContext(ctx context.Context) CassandraCassandraUserConfigPtrOutput {
	return o.ApplyT(func(v CassandraCassandraUserConfig) *CassandraCassandraUserConfig {
		return &v
	}).(CassandraCassandraUserConfigPtrOutput)
}

// Cassandra configuration values
func (o CassandraCassandraUserConfigOutput) Cassandra() CassandraCassandraUserConfigCassandraPtrOutput {
	return o.ApplyT(func(v CassandraCassandraUserConfig) *CassandraCassandraUserConfigCassandra { return v.Cassandra }).(CassandraCassandraUserConfigCassandraPtrOutput)
}

// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
func (o CassandraCassandraUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CassandraCassandraUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// sets the service into migration mode enabling the sstableloader
// utility to be used to upload Cassandra data files. Available only on service create.
func (o CassandraCassandraUserConfigOutput) MigrateSstableloader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraCassandraUserConfig) *string { return v.MigrateSstableloader }).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from private networks.
func (o CassandraCassandraUserConfigOutput) PrivateAccess() CassandraCassandraUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v CassandraCassandraUserConfig) *CassandraCassandraUserConfigPrivateAccess {
		return v.PrivateAccess
	}).(CassandraCassandraUserConfigPrivateAccessPtrOutput)
}

func (o CassandraCassandraUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraCassandraUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from the public Internet
func (o CassandraCassandraUserConfigOutput) PublicAccess() CassandraCassandraUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v CassandraCassandraUserConfig) *CassandraCassandraUserConfigPublicAccess { return v.PublicAccess }).(CassandraCassandraUserConfigPublicAccessPtrOutput)
}

// Name of another service to fork from. This has effect only
// when a new service is being created.
func (o CassandraCassandraUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraCassandraUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

type CassandraCassandraUserConfigPtrOutput struct{ *pulumi.OutputState }

func (CassandraCassandraUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraCassandraUserConfig)(nil)).Elem()
}

func (o CassandraCassandraUserConfigPtrOutput) ToCassandraCassandraUserConfigPtrOutput() CassandraCassandraUserConfigPtrOutput {
	return o
}

func (o CassandraCassandraUserConfigPtrOutput) ToCassandraCassandraUserConfigPtrOutputWithContext(ctx context.Context) CassandraCassandraUserConfigPtrOutput {
	return o
}

func (o CassandraCassandraUserConfigPtrOutput) Elem() CassandraCassandraUserConfigOutput {
	return o.ApplyT(func(v *CassandraCassandraUserConfig) CassandraCassandraUserConfig { return *v }).(CassandraCassandraUserConfigOutput)
}

// Cassandra configuration values
func (o CassandraCassandraUserConfigPtrOutput) Cassandra() CassandraCassandraUserConfigCassandraPtrOutput {
	return o.ApplyT(func(v *CassandraCassandraUserConfig) *CassandraCassandraUserConfigCassandra {
		if v == nil {
			return nil
		}
		return v.Cassandra
	}).(CassandraCassandraUserConfigCassandraPtrOutput)
}

// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
func (o CassandraCassandraUserConfigPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CassandraCassandraUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

// sets the service into migration mode enabling the sstableloader
// utility to be used to upload Cassandra data files. Available only on service create.
func (o CassandraCassandraUserConfigPtrOutput) MigrateSstableloader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraCassandraUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.MigrateSstableloader
	}).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from private networks.
func (o CassandraCassandraUserConfigPtrOutput) PrivateAccess() CassandraCassandraUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v *CassandraCassandraUserConfig) *CassandraCassandraUserConfigPrivateAccess {
		if v == nil {
			return nil
		}
		return v.PrivateAccess
	}).(CassandraCassandraUserConfigPrivateAccessPtrOutput)
}

func (o CassandraCassandraUserConfigPtrOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraCassandraUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProjectToForkFrom
	}).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from the public Internet
func (o CassandraCassandraUserConfigPtrOutput) PublicAccess() CassandraCassandraUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v *CassandraCassandraUserConfig) *CassandraCassandraUserConfigPublicAccess {
		if v == nil {
			return nil
		}
		return v.PublicAccess
	}).(CassandraCassandraUserConfigPublicAccessPtrOutput)
}

// Name of another service to fork from. This has effect only
// when a new service is being created.
func (o CassandraCassandraUserConfigPtrOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraCassandraUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceToForkFrom
	}).(pulumi.StringPtrOutput)
}

type CassandraCassandraUserConfigCassandra struct {
	// Fail any multiple-partition batch exceeding this value.
	// 50kb (10x warn threshold) by default.
	BatchSizeFailThresholdInKb *string `pulumi:"batchSizeFailThresholdInKb"`
	// Log a warning message on any multiple-partition
	// batch size exceeding this value.5kb per batch by default.Caution should be taken on increasing
	// the size of this thresholdas it can lead to node instability.
	BatchSizeWarnThresholdInKb *string `pulumi:"batchSizeWarnThresholdInKb"`
}

// CassandraCassandraUserConfigCassandraInput is an input type that accepts CassandraCassandraUserConfigCassandraArgs and CassandraCassandraUserConfigCassandraOutput values.
// You can construct a concrete instance of `CassandraCassandraUserConfigCassandraInput` via:
//
//          CassandraCassandraUserConfigCassandraArgs{...}
type CassandraCassandraUserConfigCassandraInput interface {
	pulumi.Input

	ToCassandraCassandraUserConfigCassandraOutput() CassandraCassandraUserConfigCassandraOutput
	ToCassandraCassandraUserConfigCassandraOutputWithContext(context.Context) CassandraCassandraUserConfigCassandraOutput
}

type CassandraCassandraUserConfigCassandraArgs struct {
	// Fail any multiple-partition batch exceeding this value.
	// 50kb (10x warn threshold) by default.
	BatchSizeFailThresholdInKb pulumi.StringPtrInput `pulumi:"batchSizeFailThresholdInKb"`
	// Log a warning message on any multiple-partition
	// batch size exceeding this value.5kb per batch by default.Caution should be taken on increasing
	// the size of this thresholdas it can lead to node instability.
	BatchSizeWarnThresholdInKb pulumi.StringPtrInput `pulumi:"batchSizeWarnThresholdInKb"`
}

func (CassandraCassandraUserConfigCassandraArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraCassandraUserConfigCassandra)(nil)).Elem()
}

func (i CassandraCassandraUserConfigCassandraArgs) ToCassandraCassandraUserConfigCassandraOutput() CassandraCassandraUserConfigCassandraOutput {
	return i.ToCassandraCassandraUserConfigCassandraOutputWithContext(context.Background())
}

func (i CassandraCassandraUserConfigCassandraArgs) ToCassandraCassandraUserConfigCassandraOutputWithContext(ctx context.Context) CassandraCassandraUserConfigCassandraOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraCassandraUserConfigCassandraOutput)
}

func (i CassandraCassandraUserConfigCassandraArgs) ToCassandraCassandraUserConfigCassandraPtrOutput() CassandraCassandraUserConfigCassandraPtrOutput {
	return i.ToCassandraCassandraUserConfigCassandraPtrOutputWithContext(context.Background())
}

func (i CassandraCassandraUserConfigCassandraArgs) ToCassandraCassandraUserConfigCassandraPtrOutputWithContext(ctx context.Context) CassandraCassandraUserConfigCassandraPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraCassandraUserConfigCassandraOutput).ToCassandraCassandraUserConfigCassandraPtrOutputWithContext(ctx)
}

// CassandraCassandraUserConfigCassandraPtrInput is an input type that accepts CassandraCassandraUserConfigCassandraArgs, CassandraCassandraUserConfigCassandraPtr and CassandraCassandraUserConfigCassandraPtrOutput values.
// You can construct a concrete instance of `CassandraCassandraUserConfigCassandraPtrInput` via:
//
//          CassandraCassandraUserConfigCassandraArgs{...}
//
//  or:
//
//          nil
type CassandraCassandraUserConfigCassandraPtrInput interface {
	pulumi.Input

	ToCassandraCassandraUserConfigCassandraPtrOutput() CassandraCassandraUserConfigCassandraPtrOutput
	ToCassandraCassandraUserConfigCassandraPtrOutputWithContext(context.Context) CassandraCassandraUserConfigCassandraPtrOutput
}

type cassandraCassandraUserConfigCassandraPtrType CassandraCassandraUserConfigCassandraArgs

func CassandraCassandraUserConfigCassandraPtr(v *CassandraCassandraUserConfigCassandraArgs) CassandraCassandraUserConfigCassandraPtrInput {
	return (*cassandraCassandraUserConfigCassandraPtrType)(v)
}

func (*cassandraCassandraUserConfigCassandraPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraCassandraUserConfigCassandra)(nil)).Elem()
}

func (i *cassandraCassandraUserConfigCassandraPtrType) ToCassandraCassandraUserConfigCassandraPtrOutput() CassandraCassandraUserConfigCassandraPtrOutput {
	return i.ToCassandraCassandraUserConfigCassandraPtrOutputWithContext(context.Background())
}

func (i *cassandraCassandraUserConfigCassandraPtrType) ToCassandraCassandraUserConfigCassandraPtrOutputWithContext(ctx context.Context) CassandraCassandraUserConfigCassandraPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraCassandraUserConfigCassandraPtrOutput)
}

type CassandraCassandraUserConfigCassandraOutput struct{ *pulumi.OutputState }

func (CassandraCassandraUserConfigCassandraOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraCassandraUserConfigCassandra)(nil)).Elem()
}

func (o CassandraCassandraUserConfigCassandraOutput) ToCassandraCassandraUserConfigCassandraOutput() CassandraCassandraUserConfigCassandraOutput {
	return o
}

func (o CassandraCassandraUserConfigCassandraOutput) ToCassandraCassandraUserConfigCassandraOutputWithContext(ctx context.Context) CassandraCassandraUserConfigCassandraOutput {
	return o
}

func (o CassandraCassandraUserConfigCassandraOutput) ToCassandraCassandraUserConfigCassandraPtrOutput() CassandraCassandraUserConfigCassandraPtrOutput {
	return o.ToCassandraCassandraUserConfigCassandraPtrOutputWithContext(context.Background())
}

func (o CassandraCassandraUserConfigCassandraOutput) ToCassandraCassandraUserConfigCassandraPtrOutputWithContext(ctx context.Context) CassandraCassandraUserConfigCassandraPtrOutput {
	return o.ApplyT(func(v CassandraCassandraUserConfigCassandra) *CassandraCassandraUserConfigCassandra {
		return &v
	}).(CassandraCassandraUserConfigCassandraPtrOutput)
}

// Fail any multiple-partition batch exceeding this value.
// 50kb (10x warn threshold) by default.
func (o CassandraCassandraUserConfigCassandraOutput) BatchSizeFailThresholdInKb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraCassandraUserConfigCassandra) *string { return v.BatchSizeFailThresholdInKb }).(pulumi.StringPtrOutput)
}

// Log a warning message on any multiple-partition
// batch size exceeding this value.5kb per batch by default.Caution should be taken on increasing
// the size of this thresholdas it can lead to node instability.
func (o CassandraCassandraUserConfigCassandraOutput) BatchSizeWarnThresholdInKb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraCassandraUserConfigCassandra) *string { return v.BatchSizeWarnThresholdInKb }).(pulumi.StringPtrOutput)
}

type CassandraCassandraUserConfigCassandraPtrOutput struct{ *pulumi.OutputState }

func (CassandraCassandraUserConfigCassandraPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraCassandraUserConfigCassandra)(nil)).Elem()
}

func (o CassandraCassandraUserConfigCassandraPtrOutput) ToCassandraCassandraUserConfigCassandraPtrOutput() CassandraCassandraUserConfigCassandraPtrOutput {
	return o
}

func (o CassandraCassandraUserConfigCassandraPtrOutput) ToCassandraCassandraUserConfigCassandraPtrOutputWithContext(ctx context.Context) CassandraCassandraUserConfigCassandraPtrOutput {
	return o
}

func (o CassandraCassandraUserConfigCassandraPtrOutput) Elem() CassandraCassandraUserConfigCassandraOutput {
	return o.ApplyT(func(v *CassandraCassandraUserConfigCassandra) CassandraCassandraUserConfigCassandra { return *v }).(CassandraCassandraUserConfigCassandraOutput)
}

// Fail any multiple-partition batch exceeding this value.
// 50kb (10x warn threshold) by default.
func (o CassandraCassandraUserConfigCassandraPtrOutput) BatchSizeFailThresholdInKb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraCassandraUserConfigCassandra) *string {
		if v == nil {
			return nil
		}
		return v.BatchSizeFailThresholdInKb
	}).(pulumi.StringPtrOutput)
}

// Log a warning message on any multiple-partition
// batch size exceeding this value.5kb per batch by default.Caution should be taken on increasing
// the size of this thresholdas it can lead to node instability.
func (o CassandraCassandraUserConfigCassandraPtrOutput) BatchSizeWarnThresholdInKb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraCassandraUserConfigCassandra) *string {
		if v == nil {
			return nil
		}
		return v.BatchSizeWarnThresholdInKb
	}).(pulumi.StringPtrOutput)
}

type CassandraCassandraUserConfigPrivateAccess struct {
	// Allow clients to connect to prometheus from the public internet
	// for service nodes that are in a project VPC or another type of private network.
	Prometheus *string `pulumi:"prometheus"`
}

// CassandraCassandraUserConfigPrivateAccessInput is an input type that accepts CassandraCassandraUserConfigPrivateAccessArgs and CassandraCassandraUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `CassandraCassandraUserConfigPrivateAccessInput` via:
//
//          CassandraCassandraUserConfigPrivateAccessArgs{...}
type CassandraCassandraUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToCassandraCassandraUserConfigPrivateAccessOutput() CassandraCassandraUserConfigPrivateAccessOutput
	ToCassandraCassandraUserConfigPrivateAccessOutputWithContext(context.Context) CassandraCassandraUserConfigPrivateAccessOutput
}

type CassandraCassandraUserConfigPrivateAccessArgs struct {
	// Allow clients to connect to prometheus from the public internet
	// for service nodes that are in a project VPC or another type of private network.
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (CassandraCassandraUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraCassandraUserConfigPrivateAccess)(nil)).Elem()
}

func (i CassandraCassandraUserConfigPrivateAccessArgs) ToCassandraCassandraUserConfigPrivateAccessOutput() CassandraCassandraUserConfigPrivateAccessOutput {
	return i.ToCassandraCassandraUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i CassandraCassandraUserConfigPrivateAccessArgs) ToCassandraCassandraUserConfigPrivateAccessOutputWithContext(ctx context.Context) CassandraCassandraUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraCassandraUserConfigPrivateAccessOutput)
}

func (i CassandraCassandraUserConfigPrivateAccessArgs) ToCassandraCassandraUserConfigPrivateAccessPtrOutput() CassandraCassandraUserConfigPrivateAccessPtrOutput {
	return i.ToCassandraCassandraUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i CassandraCassandraUserConfigPrivateAccessArgs) ToCassandraCassandraUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) CassandraCassandraUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraCassandraUserConfigPrivateAccessOutput).ToCassandraCassandraUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// CassandraCassandraUserConfigPrivateAccessPtrInput is an input type that accepts CassandraCassandraUserConfigPrivateAccessArgs, CassandraCassandraUserConfigPrivateAccessPtr and CassandraCassandraUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `CassandraCassandraUserConfigPrivateAccessPtrInput` via:
//
//          CassandraCassandraUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type CassandraCassandraUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToCassandraCassandraUserConfigPrivateAccessPtrOutput() CassandraCassandraUserConfigPrivateAccessPtrOutput
	ToCassandraCassandraUserConfigPrivateAccessPtrOutputWithContext(context.Context) CassandraCassandraUserConfigPrivateAccessPtrOutput
}

type cassandraCassandraUserConfigPrivateAccessPtrType CassandraCassandraUserConfigPrivateAccessArgs

func CassandraCassandraUserConfigPrivateAccessPtr(v *CassandraCassandraUserConfigPrivateAccessArgs) CassandraCassandraUserConfigPrivateAccessPtrInput {
	return (*cassandraCassandraUserConfigPrivateAccessPtrType)(v)
}

func (*cassandraCassandraUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraCassandraUserConfigPrivateAccess)(nil)).Elem()
}

func (i *cassandraCassandraUserConfigPrivateAccessPtrType) ToCassandraCassandraUserConfigPrivateAccessPtrOutput() CassandraCassandraUserConfigPrivateAccessPtrOutput {
	return i.ToCassandraCassandraUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *cassandraCassandraUserConfigPrivateAccessPtrType) ToCassandraCassandraUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) CassandraCassandraUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraCassandraUserConfigPrivateAccessPtrOutput)
}

type CassandraCassandraUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (CassandraCassandraUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraCassandraUserConfigPrivateAccess)(nil)).Elem()
}

func (o CassandraCassandraUserConfigPrivateAccessOutput) ToCassandraCassandraUserConfigPrivateAccessOutput() CassandraCassandraUserConfigPrivateAccessOutput {
	return o
}

func (o CassandraCassandraUserConfigPrivateAccessOutput) ToCassandraCassandraUserConfigPrivateAccessOutputWithContext(ctx context.Context) CassandraCassandraUserConfigPrivateAccessOutput {
	return o
}

func (o CassandraCassandraUserConfigPrivateAccessOutput) ToCassandraCassandraUserConfigPrivateAccessPtrOutput() CassandraCassandraUserConfigPrivateAccessPtrOutput {
	return o.ToCassandraCassandraUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o CassandraCassandraUserConfigPrivateAccessOutput) ToCassandraCassandraUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) CassandraCassandraUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v CassandraCassandraUserConfigPrivateAccess) *CassandraCassandraUserConfigPrivateAccess {
		return &v
	}).(CassandraCassandraUserConfigPrivateAccessPtrOutput)
}

// Allow clients to connect to prometheus from the public internet
// for service nodes that are in a project VPC or another type of private network.
func (o CassandraCassandraUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraCassandraUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type CassandraCassandraUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (CassandraCassandraUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraCassandraUserConfigPrivateAccess)(nil)).Elem()
}

func (o CassandraCassandraUserConfigPrivateAccessPtrOutput) ToCassandraCassandraUserConfigPrivateAccessPtrOutput() CassandraCassandraUserConfigPrivateAccessPtrOutput {
	return o
}

func (o CassandraCassandraUserConfigPrivateAccessPtrOutput) ToCassandraCassandraUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) CassandraCassandraUserConfigPrivateAccessPtrOutput {
	return o
}

func (o CassandraCassandraUserConfigPrivateAccessPtrOutput) Elem() CassandraCassandraUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *CassandraCassandraUserConfigPrivateAccess) CassandraCassandraUserConfigPrivateAccess {
		return *v
	}).(CassandraCassandraUserConfigPrivateAccessOutput)
}

// Allow clients to connect to prometheus from the public internet
// for service nodes that are in a project VPC or another type of private network.
func (o CassandraCassandraUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraCassandraUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type CassandraCassandraUserConfigPublicAccess struct {
	// Allow clients to connect to prometheus from the public internet
	// for service nodes that are in a project VPC or another type of private network.
	Prometheus *string `pulumi:"prometheus"`
}

// CassandraCassandraUserConfigPublicAccessInput is an input type that accepts CassandraCassandraUserConfigPublicAccessArgs and CassandraCassandraUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `CassandraCassandraUserConfigPublicAccessInput` via:
//
//          CassandraCassandraUserConfigPublicAccessArgs{...}
type CassandraCassandraUserConfigPublicAccessInput interface {
	pulumi.Input

	ToCassandraCassandraUserConfigPublicAccessOutput() CassandraCassandraUserConfigPublicAccessOutput
	ToCassandraCassandraUserConfigPublicAccessOutputWithContext(context.Context) CassandraCassandraUserConfigPublicAccessOutput
}

type CassandraCassandraUserConfigPublicAccessArgs struct {
	// Allow clients to connect to prometheus from the public internet
	// for service nodes that are in a project VPC or another type of private network.
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (CassandraCassandraUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraCassandraUserConfigPublicAccess)(nil)).Elem()
}

func (i CassandraCassandraUserConfigPublicAccessArgs) ToCassandraCassandraUserConfigPublicAccessOutput() CassandraCassandraUserConfigPublicAccessOutput {
	return i.ToCassandraCassandraUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i CassandraCassandraUserConfigPublicAccessArgs) ToCassandraCassandraUserConfigPublicAccessOutputWithContext(ctx context.Context) CassandraCassandraUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraCassandraUserConfigPublicAccessOutput)
}

func (i CassandraCassandraUserConfigPublicAccessArgs) ToCassandraCassandraUserConfigPublicAccessPtrOutput() CassandraCassandraUserConfigPublicAccessPtrOutput {
	return i.ToCassandraCassandraUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i CassandraCassandraUserConfigPublicAccessArgs) ToCassandraCassandraUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) CassandraCassandraUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraCassandraUserConfigPublicAccessOutput).ToCassandraCassandraUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// CassandraCassandraUserConfigPublicAccessPtrInput is an input type that accepts CassandraCassandraUserConfigPublicAccessArgs, CassandraCassandraUserConfigPublicAccessPtr and CassandraCassandraUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `CassandraCassandraUserConfigPublicAccessPtrInput` via:
//
//          CassandraCassandraUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type CassandraCassandraUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToCassandraCassandraUserConfigPublicAccessPtrOutput() CassandraCassandraUserConfigPublicAccessPtrOutput
	ToCassandraCassandraUserConfigPublicAccessPtrOutputWithContext(context.Context) CassandraCassandraUserConfigPublicAccessPtrOutput
}

type cassandraCassandraUserConfigPublicAccessPtrType CassandraCassandraUserConfigPublicAccessArgs

func CassandraCassandraUserConfigPublicAccessPtr(v *CassandraCassandraUserConfigPublicAccessArgs) CassandraCassandraUserConfigPublicAccessPtrInput {
	return (*cassandraCassandraUserConfigPublicAccessPtrType)(v)
}

func (*cassandraCassandraUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraCassandraUserConfigPublicAccess)(nil)).Elem()
}

func (i *cassandraCassandraUserConfigPublicAccessPtrType) ToCassandraCassandraUserConfigPublicAccessPtrOutput() CassandraCassandraUserConfigPublicAccessPtrOutput {
	return i.ToCassandraCassandraUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *cassandraCassandraUserConfigPublicAccessPtrType) ToCassandraCassandraUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) CassandraCassandraUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraCassandraUserConfigPublicAccessPtrOutput)
}

type CassandraCassandraUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (CassandraCassandraUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraCassandraUserConfigPublicAccess)(nil)).Elem()
}

func (o CassandraCassandraUserConfigPublicAccessOutput) ToCassandraCassandraUserConfigPublicAccessOutput() CassandraCassandraUserConfigPublicAccessOutput {
	return o
}

func (o CassandraCassandraUserConfigPublicAccessOutput) ToCassandraCassandraUserConfigPublicAccessOutputWithContext(ctx context.Context) CassandraCassandraUserConfigPublicAccessOutput {
	return o
}

func (o CassandraCassandraUserConfigPublicAccessOutput) ToCassandraCassandraUserConfigPublicAccessPtrOutput() CassandraCassandraUserConfigPublicAccessPtrOutput {
	return o.ToCassandraCassandraUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o CassandraCassandraUserConfigPublicAccessOutput) ToCassandraCassandraUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) CassandraCassandraUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v CassandraCassandraUserConfigPublicAccess) *CassandraCassandraUserConfigPublicAccess {
		return &v
	}).(CassandraCassandraUserConfigPublicAccessPtrOutput)
}

// Allow clients to connect to prometheus from the public internet
// for service nodes that are in a project VPC or another type of private network.
func (o CassandraCassandraUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraCassandraUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type CassandraCassandraUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (CassandraCassandraUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraCassandraUserConfigPublicAccess)(nil)).Elem()
}

func (o CassandraCassandraUserConfigPublicAccessPtrOutput) ToCassandraCassandraUserConfigPublicAccessPtrOutput() CassandraCassandraUserConfigPublicAccessPtrOutput {
	return o
}

func (o CassandraCassandraUserConfigPublicAccessPtrOutput) ToCassandraCassandraUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) CassandraCassandraUserConfigPublicAccessPtrOutput {
	return o
}

func (o CassandraCassandraUserConfigPublicAccessPtrOutput) Elem() CassandraCassandraUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *CassandraCassandraUserConfigPublicAccess) CassandraCassandraUserConfigPublicAccess { return *v }).(CassandraCassandraUserConfigPublicAccessOutput)
}

// Allow clients to connect to prometheus from the public internet
// for service nodes that are in a project VPC or another type of private network.
func (o CassandraCassandraUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraCassandraUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type CassandraComponent struct {
	Component                 *string `pulumi:"component"`
	Host                      *string `pulumi:"host"`
	KafkaAuthenticationMethod *string `pulumi:"kafkaAuthenticationMethod"`
	Port                      *int    `pulumi:"port"`
	Route                     *string `pulumi:"route"`
	Ssl                       *bool   `pulumi:"ssl"`
	Usage                     *string `pulumi:"usage"`
}

// CassandraComponentInput is an input type that accepts CassandraComponentArgs and CassandraComponentOutput values.
// You can construct a concrete instance of `CassandraComponentInput` via:
//
//          CassandraComponentArgs{...}
type CassandraComponentInput interface {
	pulumi.Input

	ToCassandraComponentOutput() CassandraComponentOutput
	ToCassandraComponentOutputWithContext(context.Context) CassandraComponentOutput
}

type CassandraComponentArgs struct {
	Component                 pulumi.StringPtrInput `pulumi:"component"`
	Host                      pulumi.StringPtrInput `pulumi:"host"`
	KafkaAuthenticationMethod pulumi.StringPtrInput `pulumi:"kafkaAuthenticationMethod"`
	Port                      pulumi.IntPtrInput    `pulumi:"port"`
	Route                     pulumi.StringPtrInput `pulumi:"route"`
	Ssl                       pulumi.BoolPtrInput   `pulumi:"ssl"`
	Usage                     pulumi.StringPtrInput `pulumi:"usage"`
}

func (CassandraComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraComponent)(nil)).Elem()
}

func (i CassandraComponentArgs) ToCassandraComponentOutput() CassandraComponentOutput {
	return i.ToCassandraComponentOutputWithContext(context.Background())
}

func (i CassandraComponentArgs) ToCassandraComponentOutputWithContext(ctx context.Context) CassandraComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraComponentOutput)
}

// CassandraComponentArrayInput is an input type that accepts CassandraComponentArray and CassandraComponentArrayOutput values.
// You can construct a concrete instance of `CassandraComponentArrayInput` via:
//
//          CassandraComponentArray{ CassandraComponentArgs{...} }
type CassandraComponentArrayInput interface {
	pulumi.Input

	ToCassandraComponentArrayOutput() CassandraComponentArrayOutput
	ToCassandraComponentArrayOutputWithContext(context.Context) CassandraComponentArrayOutput
}

type CassandraComponentArray []CassandraComponentInput

func (CassandraComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraComponent)(nil)).Elem()
}

func (i CassandraComponentArray) ToCassandraComponentArrayOutput() CassandraComponentArrayOutput {
	return i.ToCassandraComponentArrayOutputWithContext(context.Background())
}

func (i CassandraComponentArray) ToCassandraComponentArrayOutputWithContext(ctx context.Context) CassandraComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraComponentArrayOutput)
}

type CassandraComponentOutput struct{ *pulumi.OutputState }

func (CassandraComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraComponent)(nil)).Elem()
}

func (o CassandraComponentOutput) ToCassandraComponentOutput() CassandraComponentOutput {
	return o
}

func (o CassandraComponentOutput) ToCassandraComponentOutputWithContext(ctx context.Context) CassandraComponentOutput {
	return o
}

func (o CassandraComponentOutput) Component() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraComponent) *string { return v.Component }).(pulumi.StringPtrOutput)
}

func (o CassandraComponentOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraComponent) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o CassandraComponentOutput) KafkaAuthenticationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraComponent) *string { return v.KafkaAuthenticationMethod }).(pulumi.StringPtrOutput)
}

func (o CassandraComponentOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CassandraComponent) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o CassandraComponentOutput) Route() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraComponent) *string { return v.Route }).(pulumi.StringPtrOutput)
}

func (o CassandraComponentOutput) Ssl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CassandraComponent) *bool { return v.Ssl }).(pulumi.BoolPtrOutput)
}

func (o CassandraComponentOutput) Usage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraComponent) *string { return v.Usage }).(pulumi.StringPtrOutput)
}

type CassandraComponentArrayOutput struct{ *pulumi.OutputState }

func (CassandraComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraComponent)(nil)).Elem()
}

func (o CassandraComponentArrayOutput) ToCassandraComponentArrayOutput() CassandraComponentArrayOutput {
	return o
}

func (o CassandraComponentArrayOutput) ToCassandraComponentArrayOutputWithContext(ctx context.Context) CassandraComponentArrayOutput {
	return o
}

func (o CassandraComponentArrayOutput) Index(i pulumi.IntInput) CassandraComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CassandraComponent {
		return vs[0].([]CassandraComponent)[vs[1].(int)]
	}).(CassandraComponentOutput)
}

type CassandraServiceIntegration struct {
	IntegrationType   string `pulumi:"integrationType"`
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// CassandraServiceIntegrationInput is an input type that accepts CassandraServiceIntegrationArgs and CassandraServiceIntegrationOutput values.
// You can construct a concrete instance of `CassandraServiceIntegrationInput` via:
//
//          CassandraServiceIntegrationArgs{...}
type CassandraServiceIntegrationInput interface {
	pulumi.Input

	ToCassandraServiceIntegrationOutput() CassandraServiceIntegrationOutput
	ToCassandraServiceIntegrationOutputWithContext(context.Context) CassandraServiceIntegrationOutput
}

type CassandraServiceIntegrationArgs struct {
	IntegrationType   pulumi.StringInput `pulumi:"integrationType"`
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (CassandraServiceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraServiceIntegration)(nil)).Elem()
}

func (i CassandraServiceIntegrationArgs) ToCassandraServiceIntegrationOutput() CassandraServiceIntegrationOutput {
	return i.ToCassandraServiceIntegrationOutputWithContext(context.Background())
}

func (i CassandraServiceIntegrationArgs) ToCassandraServiceIntegrationOutputWithContext(ctx context.Context) CassandraServiceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraServiceIntegrationOutput)
}

// CassandraServiceIntegrationArrayInput is an input type that accepts CassandraServiceIntegrationArray and CassandraServiceIntegrationArrayOutput values.
// You can construct a concrete instance of `CassandraServiceIntegrationArrayInput` via:
//
//          CassandraServiceIntegrationArray{ CassandraServiceIntegrationArgs{...} }
type CassandraServiceIntegrationArrayInput interface {
	pulumi.Input

	ToCassandraServiceIntegrationArrayOutput() CassandraServiceIntegrationArrayOutput
	ToCassandraServiceIntegrationArrayOutputWithContext(context.Context) CassandraServiceIntegrationArrayOutput
}

type CassandraServiceIntegrationArray []CassandraServiceIntegrationInput

func (CassandraServiceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraServiceIntegration)(nil)).Elem()
}

func (i CassandraServiceIntegrationArray) ToCassandraServiceIntegrationArrayOutput() CassandraServiceIntegrationArrayOutput {
	return i.ToCassandraServiceIntegrationArrayOutputWithContext(context.Background())
}

func (i CassandraServiceIntegrationArray) ToCassandraServiceIntegrationArrayOutputWithContext(ctx context.Context) CassandraServiceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraServiceIntegrationArrayOutput)
}

type CassandraServiceIntegrationOutput struct{ *pulumi.OutputState }

func (CassandraServiceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraServiceIntegration)(nil)).Elem()
}

func (o CassandraServiceIntegrationOutput) ToCassandraServiceIntegrationOutput() CassandraServiceIntegrationOutput {
	return o
}

func (o CassandraServiceIntegrationOutput) ToCassandraServiceIntegrationOutputWithContext(ctx context.Context) CassandraServiceIntegrationOutput {
	return o
}

func (o CassandraServiceIntegrationOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraServiceIntegration) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o CassandraServiceIntegrationOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraServiceIntegration) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

type CassandraServiceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (CassandraServiceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraServiceIntegration)(nil)).Elem()
}

func (o CassandraServiceIntegrationArrayOutput) ToCassandraServiceIntegrationArrayOutput() CassandraServiceIntegrationArrayOutput {
	return o
}

func (o CassandraServiceIntegrationArrayOutput) ToCassandraServiceIntegrationArrayOutputWithContext(ctx context.Context) CassandraServiceIntegrationArrayOutput {
	return o
}

func (o CassandraServiceIntegrationArrayOutput) Index(i pulumi.IntInput) CassandraServiceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CassandraServiceIntegration {
		return vs[0].([]CassandraServiceIntegration)[vs[1].(int)]
	}).(CassandraServiceIntegrationOutput)
}

type ElasticSearchAclAcl struct {
	Rules    []ElasticSearchAclAclRule `pulumi:"rules"`
	Username string                    `pulumi:"username"`
}

// ElasticSearchAclAclInput is an input type that accepts ElasticSearchAclAclArgs and ElasticSearchAclAclOutput values.
// You can construct a concrete instance of `ElasticSearchAclAclInput` via:
//
//          ElasticSearchAclAclArgs{...}
type ElasticSearchAclAclInput interface {
	pulumi.Input

	ToElasticSearchAclAclOutput() ElasticSearchAclAclOutput
	ToElasticSearchAclAclOutputWithContext(context.Context) ElasticSearchAclAclOutput
}

type ElasticSearchAclAclArgs struct {
	Rules    ElasticSearchAclAclRuleArrayInput `pulumi:"rules"`
	Username pulumi.StringInput                `pulumi:"username"`
}

func (ElasticSearchAclAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSearchAclAcl)(nil)).Elem()
}

func (i ElasticSearchAclAclArgs) ToElasticSearchAclAclOutput() ElasticSearchAclAclOutput {
	return i.ToElasticSearchAclAclOutputWithContext(context.Background())
}

func (i ElasticSearchAclAclArgs) ToElasticSearchAclAclOutputWithContext(ctx context.Context) ElasticSearchAclAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchAclAclOutput)
}

// ElasticSearchAclAclArrayInput is an input type that accepts ElasticSearchAclAclArray and ElasticSearchAclAclArrayOutput values.
// You can construct a concrete instance of `ElasticSearchAclAclArrayInput` via:
//
//          ElasticSearchAclAclArray{ ElasticSearchAclAclArgs{...} }
type ElasticSearchAclAclArrayInput interface {
	pulumi.Input

	ToElasticSearchAclAclArrayOutput() ElasticSearchAclAclArrayOutput
	ToElasticSearchAclAclArrayOutputWithContext(context.Context) ElasticSearchAclAclArrayOutput
}

type ElasticSearchAclAclArray []ElasticSearchAclAclInput

func (ElasticSearchAclAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticSearchAclAcl)(nil)).Elem()
}

func (i ElasticSearchAclAclArray) ToElasticSearchAclAclArrayOutput() ElasticSearchAclAclArrayOutput {
	return i.ToElasticSearchAclAclArrayOutputWithContext(context.Background())
}

func (i ElasticSearchAclAclArray) ToElasticSearchAclAclArrayOutputWithContext(ctx context.Context) ElasticSearchAclAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchAclAclArrayOutput)
}

type ElasticSearchAclAclOutput struct{ *pulumi.OutputState }

func (ElasticSearchAclAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSearchAclAcl)(nil)).Elem()
}

func (o ElasticSearchAclAclOutput) ToElasticSearchAclAclOutput() ElasticSearchAclAclOutput {
	return o
}

func (o ElasticSearchAclAclOutput) ToElasticSearchAclAclOutputWithContext(ctx context.Context) ElasticSearchAclAclOutput {
	return o
}

func (o ElasticSearchAclAclOutput) Rules() ElasticSearchAclAclRuleArrayOutput {
	return o.ApplyT(func(v ElasticSearchAclAcl) []ElasticSearchAclAclRule { return v.Rules }).(ElasticSearchAclAclRuleArrayOutput)
}

func (o ElasticSearchAclAclOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticSearchAclAcl) string { return v.Username }).(pulumi.StringOutput)
}

type ElasticSearchAclAclArrayOutput struct{ *pulumi.OutputState }

func (ElasticSearchAclAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticSearchAclAcl)(nil)).Elem()
}

func (o ElasticSearchAclAclArrayOutput) ToElasticSearchAclAclArrayOutput() ElasticSearchAclAclArrayOutput {
	return o
}

func (o ElasticSearchAclAclArrayOutput) ToElasticSearchAclAclArrayOutputWithContext(ctx context.Context) ElasticSearchAclAclArrayOutput {
	return o
}

func (o ElasticSearchAclAclArrayOutput) Index(i pulumi.IntInput) ElasticSearchAclAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticSearchAclAcl {
		return vs[0].([]ElasticSearchAclAcl)[vs[1].(int)]
	}).(ElasticSearchAclAclOutput)
}

type ElasticSearchAclAclRule struct {
	Index      string `pulumi:"index"`
	Permission string `pulumi:"permission"`
}

// ElasticSearchAclAclRuleInput is an input type that accepts ElasticSearchAclAclRuleArgs and ElasticSearchAclAclRuleOutput values.
// You can construct a concrete instance of `ElasticSearchAclAclRuleInput` via:
//
//          ElasticSearchAclAclRuleArgs{...}
type ElasticSearchAclAclRuleInput interface {
	pulumi.Input

	ToElasticSearchAclAclRuleOutput() ElasticSearchAclAclRuleOutput
	ToElasticSearchAclAclRuleOutputWithContext(context.Context) ElasticSearchAclAclRuleOutput
}

type ElasticSearchAclAclRuleArgs struct {
	Index      pulumi.StringInput `pulumi:"index"`
	Permission pulumi.StringInput `pulumi:"permission"`
}

func (ElasticSearchAclAclRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSearchAclAclRule)(nil)).Elem()
}

func (i ElasticSearchAclAclRuleArgs) ToElasticSearchAclAclRuleOutput() ElasticSearchAclAclRuleOutput {
	return i.ToElasticSearchAclAclRuleOutputWithContext(context.Background())
}

func (i ElasticSearchAclAclRuleArgs) ToElasticSearchAclAclRuleOutputWithContext(ctx context.Context) ElasticSearchAclAclRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchAclAclRuleOutput)
}

// ElasticSearchAclAclRuleArrayInput is an input type that accepts ElasticSearchAclAclRuleArray and ElasticSearchAclAclRuleArrayOutput values.
// You can construct a concrete instance of `ElasticSearchAclAclRuleArrayInput` via:
//
//          ElasticSearchAclAclRuleArray{ ElasticSearchAclAclRuleArgs{...} }
type ElasticSearchAclAclRuleArrayInput interface {
	pulumi.Input

	ToElasticSearchAclAclRuleArrayOutput() ElasticSearchAclAclRuleArrayOutput
	ToElasticSearchAclAclRuleArrayOutputWithContext(context.Context) ElasticSearchAclAclRuleArrayOutput
}

type ElasticSearchAclAclRuleArray []ElasticSearchAclAclRuleInput

func (ElasticSearchAclAclRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticSearchAclAclRule)(nil)).Elem()
}

func (i ElasticSearchAclAclRuleArray) ToElasticSearchAclAclRuleArrayOutput() ElasticSearchAclAclRuleArrayOutput {
	return i.ToElasticSearchAclAclRuleArrayOutputWithContext(context.Background())
}

func (i ElasticSearchAclAclRuleArray) ToElasticSearchAclAclRuleArrayOutputWithContext(ctx context.Context) ElasticSearchAclAclRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchAclAclRuleArrayOutput)
}

type ElasticSearchAclAclRuleOutput struct{ *pulumi.OutputState }

func (ElasticSearchAclAclRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSearchAclAclRule)(nil)).Elem()
}

func (o ElasticSearchAclAclRuleOutput) ToElasticSearchAclAclRuleOutput() ElasticSearchAclAclRuleOutput {
	return o
}

func (o ElasticSearchAclAclRuleOutput) ToElasticSearchAclAclRuleOutputWithContext(ctx context.Context) ElasticSearchAclAclRuleOutput {
	return o
}

func (o ElasticSearchAclAclRuleOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticSearchAclAclRule) string { return v.Index }).(pulumi.StringOutput)
}

func (o ElasticSearchAclAclRuleOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticSearchAclAclRule) string { return v.Permission }).(pulumi.StringOutput)
}

type ElasticSearchAclAclRuleArrayOutput struct{ *pulumi.OutputState }

func (ElasticSearchAclAclRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticSearchAclAclRule)(nil)).Elem()
}

func (o ElasticSearchAclAclRuleArrayOutput) ToElasticSearchAclAclRuleArrayOutput() ElasticSearchAclAclRuleArrayOutput {
	return o
}

func (o ElasticSearchAclAclRuleArrayOutput) ToElasticSearchAclAclRuleArrayOutputWithContext(ctx context.Context) ElasticSearchAclAclRuleArrayOutput {
	return o
}

func (o ElasticSearchAclAclRuleArrayOutput) Index(i pulumi.IntInput) ElasticSearchAclAclRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticSearchAclAclRule {
		return vs[0].([]ElasticSearchAclAclRule)[vs[1].(int)]
	}).(ElasticSearchAclAclRuleOutput)
}

type ElasticSearchComponent struct {
	Component                 *string `pulumi:"component"`
	Host                      *string `pulumi:"host"`
	KafkaAuthenticationMethod *string `pulumi:"kafkaAuthenticationMethod"`
	Port                      *int    `pulumi:"port"`
	Route                     *string `pulumi:"route"`
	Ssl                       *bool   `pulumi:"ssl"`
	Usage                     *string `pulumi:"usage"`
}

// ElasticSearchComponentInput is an input type that accepts ElasticSearchComponentArgs and ElasticSearchComponentOutput values.
// You can construct a concrete instance of `ElasticSearchComponentInput` via:
//
//          ElasticSearchComponentArgs{...}
type ElasticSearchComponentInput interface {
	pulumi.Input

	ToElasticSearchComponentOutput() ElasticSearchComponentOutput
	ToElasticSearchComponentOutputWithContext(context.Context) ElasticSearchComponentOutput
}

type ElasticSearchComponentArgs struct {
	Component                 pulumi.StringPtrInput `pulumi:"component"`
	Host                      pulumi.StringPtrInput `pulumi:"host"`
	KafkaAuthenticationMethod pulumi.StringPtrInput `pulumi:"kafkaAuthenticationMethod"`
	Port                      pulumi.IntPtrInput    `pulumi:"port"`
	Route                     pulumi.StringPtrInput `pulumi:"route"`
	Ssl                       pulumi.BoolPtrInput   `pulumi:"ssl"`
	Usage                     pulumi.StringPtrInput `pulumi:"usage"`
}

func (ElasticSearchComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSearchComponent)(nil)).Elem()
}

func (i ElasticSearchComponentArgs) ToElasticSearchComponentOutput() ElasticSearchComponentOutput {
	return i.ToElasticSearchComponentOutputWithContext(context.Background())
}

func (i ElasticSearchComponentArgs) ToElasticSearchComponentOutputWithContext(ctx context.Context) ElasticSearchComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchComponentOutput)
}

// ElasticSearchComponentArrayInput is an input type that accepts ElasticSearchComponentArray and ElasticSearchComponentArrayOutput values.
// You can construct a concrete instance of `ElasticSearchComponentArrayInput` via:
//
//          ElasticSearchComponentArray{ ElasticSearchComponentArgs{...} }
type ElasticSearchComponentArrayInput interface {
	pulumi.Input

	ToElasticSearchComponentArrayOutput() ElasticSearchComponentArrayOutput
	ToElasticSearchComponentArrayOutputWithContext(context.Context) ElasticSearchComponentArrayOutput
}

type ElasticSearchComponentArray []ElasticSearchComponentInput

func (ElasticSearchComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticSearchComponent)(nil)).Elem()
}

func (i ElasticSearchComponentArray) ToElasticSearchComponentArrayOutput() ElasticSearchComponentArrayOutput {
	return i.ToElasticSearchComponentArrayOutputWithContext(context.Background())
}

func (i ElasticSearchComponentArray) ToElasticSearchComponentArrayOutputWithContext(ctx context.Context) ElasticSearchComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchComponentArrayOutput)
}

type ElasticSearchComponentOutput struct{ *pulumi.OutputState }

func (ElasticSearchComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSearchComponent)(nil)).Elem()
}

func (o ElasticSearchComponentOutput) ToElasticSearchComponentOutput() ElasticSearchComponentOutput {
	return o
}

func (o ElasticSearchComponentOutput) ToElasticSearchComponentOutputWithContext(ctx context.Context) ElasticSearchComponentOutput {
	return o
}

func (o ElasticSearchComponentOutput) Component() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchComponent) *string { return v.Component }).(pulumi.StringPtrOutput)
}

func (o ElasticSearchComponentOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchComponent) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o ElasticSearchComponentOutput) KafkaAuthenticationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchComponent) *string { return v.KafkaAuthenticationMethod }).(pulumi.StringPtrOutput)
}

func (o ElasticSearchComponentOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElasticSearchComponent) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o ElasticSearchComponentOutput) Route() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchComponent) *string { return v.Route }).(pulumi.StringPtrOutput)
}

func (o ElasticSearchComponentOutput) Ssl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticSearchComponent) *bool { return v.Ssl }).(pulumi.BoolPtrOutput)
}

func (o ElasticSearchComponentOutput) Usage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchComponent) *string { return v.Usage }).(pulumi.StringPtrOutput)
}

type ElasticSearchComponentArrayOutput struct{ *pulumi.OutputState }

func (ElasticSearchComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticSearchComponent)(nil)).Elem()
}

func (o ElasticSearchComponentArrayOutput) ToElasticSearchComponentArrayOutput() ElasticSearchComponentArrayOutput {
	return o
}

func (o ElasticSearchComponentArrayOutput) ToElasticSearchComponentArrayOutputWithContext(ctx context.Context) ElasticSearchComponentArrayOutput {
	return o
}

func (o ElasticSearchComponentArrayOutput) Index(i pulumi.IntInput) ElasticSearchComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticSearchComponent {
		return vs[0].([]ElasticSearchComponent)[vs[1].(int)]
	}).(ElasticSearchComponentOutput)
}

type ElasticSearchElasticsearch struct {
	// URI for Kibana frontend.
	KibanaUri *string `pulumi:"kibanaUri"`
}

// ElasticSearchElasticsearchInput is an input type that accepts ElasticSearchElasticsearchArgs and ElasticSearchElasticsearchOutput values.
// You can construct a concrete instance of `ElasticSearchElasticsearchInput` via:
//
//          ElasticSearchElasticsearchArgs{...}
type ElasticSearchElasticsearchInput interface {
	pulumi.Input

	ToElasticSearchElasticsearchOutput() ElasticSearchElasticsearchOutput
	ToElasticSearchElasticsearchOutputWithContext(context.Context) ElasticSearchElasticsearchOutput
}

type ElasticSearchElasticsearchArgs struct {
	// URI for Kibana frontend.
	KibanaUri pulumi.StringPtrInput `pulumi:"kibanaUri"`
}

func (ElasticSearchElasticsearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSearchElasticsearch)(nil)).Elem()
}

func (i ElasticSearchElasticsearchArgs) ToElasticSearchElasticsearchOutput() ElasticSearchElasticsearchOutput {
	return i.ToElasticSearchElasticsearchOutputWithContext(context.Background())
}

func (i ElasticSearchElasticsearchArgs) ToElasticSearchElasticsearchOutputWithContext(ctx context.Context) ElasticSearchElasticsearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchElasticsearchOutput)
}

func (i ElasticSearchElasticsearchArgs) ToElasticSearchElasticsearchPtrOutput() ElasticSearchElasticsearchPtrOutput {
	return i.ToElasticSearchElasticsearchPtrOutputWithContext(context.Background())
}

func (i ElasticSearchElasticsearchArgs) ToElasticSearchElasticsearchPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchElasticsearchOutput).ToElasticSearchElasticsearchPtrOutputWithContext(ctx)
}

// ElasticSearchElasticsearchPtrInput is an input type that accepts ElasticSearchElasticsearchArgs, ElasticSearchElasticsearchPtr and ElasticSearchElasticsearchPtrOutput values.
// You can construct a concrete instance of `ElasticSearchElasticsearchPtrInput` via:
//
//          ElasticSearchElasticsearchArgs{...}
//
//  or:
//
//          nil
type ElasticSearchElasticsearchPtrInput interface {
	pulumi.Input

	ToElasticSearchElasticsearchPtrOutput() ElasticSearchElasticsearchPtrOutput
	ToElasticSearchElasticsearchPtrOutputWithContext(context.Context) ElasticSearchElasticsearchPtrOutput
}

type elasticSearchElasticsearchPtrType ElasticSearchElasticsearchArgs

func ElasticSearchElasticsearchPtr(v *ElasticSearchElasticsearchArgs) ElasticSearchElasticsearchPtrInput {
	return (*elasticSearchElasticsearchPtrType)(v)
}

func (*elasticSearchElasticsearchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticSearchElasticsearch)(nil)).Elem()
}

func (i *elasticSearchElasticsearchPtrType) ToElasticSearchElasticsearchPtrOutput() ElasticSearchElasticsearchPtrOutput {
	return i.ToElasticSearchElasticsearchPtrOutputWithContext(context.Background())
}

func (i *elasticSearchElasticsearchPtrType) ToElasticSearchElasticsearchPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchElasticsearchPtrOutput)
}

type ElasticSearchElasticsearchOutput struct{ *pulumi.OutputState }

func (ElasticSearchElasticsearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSearchElasticsearch)(nil)).Elem()
}

func (o ElasticSearchElasticsearchOutput) ToElasticSearchElasticsearchOutput() ElasticSearchElasticsearchOutput {
	return o
}

func (o ElasticSearchElasticsearchOutput) ToElasticSearchElasticsearchOutputWithContext(ctx context.Context) ElasticSearchElasticsearchOutput {
	return o
}

func (o ElasticSearchElasticsearchOutput) ToElasticSearchElasticsearchPtrOutput() ElasticSearchElasticsearchPtrOutput {
	return o.ToElasticSearchElasticsearchPtrOutputWithContext(context.Background())
}

func (o ElasticSearchElasticsearchOutput) ToElasticSearchElasticsearchPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearch) *ElasticSearchElasticsearch {
		return &v
	}).(ElasticSearchElasticsearchPtrOutput)
}

// URI for Kibana frontend.
func (o ElasticSearchElasticsearchOutput) KibanaUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearch) *string { return v.KibanaUri }).(pulumi.StringPtrOutput)
}

type ElasticSearchElasticsearchPtrOutput struct{ *pulumi.OutputState }

func (ElasticSearchElasticsearchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticSearchElasticsearch)(nil)).Elem()
}

func (o ElasticSearchElasticsearchPtrOutput) ToElasticSearchElasticsearchPtrOutput() ElasticSearchElasticsearchPtrOutput {
	return o
}

func (o ElasticSearchElasticsearchPtrOutput) ToElasticSearchElasticsearchPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchPtrOutput {
	return o
}

func (o ElasticSearchElasticsearchPtrOutput) Elem() ElasticSearchElasticsearchOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearch) ElasticSearchElasticsearch { return *v }).(ElasticSearchElasticsearchOutput)
}

// URI for Kibana frontend.
func (o ElasticSearchElasticsearchPtrOutput) KibanaUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.KibanaUri
	}).(pulumi.StringPtrOutput)
}

type ElasticSearchElasticsearchUserConfig struct {
	// Serve the web frontend using a custom CNAME pointing to the
	// Aiven DNS name.
	CustomDomain *string `pulumi:"customDomain"`
	// Disable automatic replication factor
	// adjustment for multi-node services. By default, Aiven ensures all indexes are replicated at
	// least to two nodes. Note: setting this to true increases a risk of data loss in case of
	// virtual machine failure.
	DisableReplicationFactorAdjustment *string `pulumi:"disableReplicationFactorAdjustment"`
	// Allow clients to connect to elasticsearch from the public
	// internet for service nodes that are in a project VPC or another type of private network.
	Elasticsearch *ElasticSearchElasticsearchUserConfigElasticsearch `pulumi:"elasticsearch"`
	// Elasticsearch major version.
	ElasticsearchVersion *string `pulumi:"elasticsearchVersion"`
	// Glob pattern and number of indexes matching that pattern to
	// be kept.
	IndexPatterns []ElasticSearchElasticsearchUserConfigIndexPattern `pulumi:"indexPatterns"`
	// Template settings for all new indexe.
	IndexTemplate *ElasticSearchElasticsearchUserConfigIndexTemplate `pulumi:"indexTemplate"`
	// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters []string `pulumi:"ipFilters"`
	// Allow clients to connect to kibana from the public internet for
	// service nodes that are in a project VPC or another type of private network.
	Kibana *ElasticSearchElasticsearchUserConfigKibana `pulumi:"kibana"`
	// Maximum number of indexes to keep before deleting the oldest one.
	MaxIndexCount *string `pulumi:"maxIndexCount"`
	// Allow access to selected service ports from private networks.
	PrivateAccess *ElasticSearchElasticsearchUserConfigPrivateAccess `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess *ElasticSearchElasticsearchUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom *string `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet.
	PublicAccess *ElasticSearchElasticsearchUserConfigPublicAccess `pulumi:"publicAccess"`
	// Name of the basebackup to restore in forked service.
	RecoveryBasebackupName *string `pulumi:"recoveryBasebackupName"`
	// Name of another service to fork from. This has effect
	// only when a new service is being created.
	ServiceToForkFrom *string `pulumi:"serviceToForkFrom"`
}

// ElasticSearchElasticsearchUserConfigInput is an input type that accepts ElasticSearchElasticsearchUserConfigArgs and ElasticSearchElasticsearchUserConfigOutput values.
// You can construct a concrete instance of `ElasticSearchElasticsearchUserConfigInput` via:
//
//          ElasticSearchElasticsearchUserConfigArgs{...}
type ElasticSearchElasticsearchUserConfigInput interface {
	pulumi.Input

	ToElasticSearchElasticsearchUserConfigOutput() ElasticSearchElasticsearchUserConfigOutput
	ToElasticSearchElasticsearchUserConfigOutputWithContext(context.Context) ElasticSearchElasticsearchUserConfigOutput
}

type ElasticSearchElasticsearchUserConfigArgs struct {
	// Serve the web frontend using a custom CNAME pointing to the
	// Aiven DNS name.
	CustomDomain pulumi.StringPtrInput `pulumi:"customDomain"`
	// Disable automatic replication factor
	// adjustment for multi-node services. By default, Aiven ensures all indexes are replicated at
	// least to two nodes. Note: setting this to true increases a risk of data loss in case of
	// virtual machine failure.
	DisableReplicationFactorAdjustment pulumi.StringPtrInput `pulumi:"disableReplicationFactorAdjustment"`
	// Allow clients to connect to elasticsearch from the public
	// internet for service nodes that are in a project VPC or another type of private network.
	Elasticsearch ElasticSearchElasticsearchUserConfigElasticsearchPtrInput `pulumi:"elasticsearch"`
	// Elasticsearch major version.
	ElasticsearchVersion pulumi.StringPtrInput `pulumi:"elasticsearchVersion"`
	// Glob pattern and number of indexes matching that pattern to
	// be kept.
	IndexPatterns ElasticSearchElasticsearchUserConfigIndexPatternArrayInput `pulumi:"indexPatterns"`
	// Template settings for all new indexe.
	IndexTemplate ElasticSearchElasticsearchUserConfigIndexTemplatePtrInput `pulumi:"indexTemplate"`
	// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// Allow clients to connect to kibana from the public internet for
	// service nodes that are in a project VPC or another type of private network.
	Kibana ElasticSearchElasticsearchUserConfigKibanaPtrInput `pulumi:"kibana"`
	// Maximum number of indexes to keep before deleting the oldest one.
	MaxIndexCount pulumi.StringPtrInput `pulumi:"maxIndexCount"`
	// Allow access to selected service ports from private networks.
	PrivateAccess ElasticSearchElasticsearchUserConfigPrivateAccessPtrInput `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom pulumi.StringPtrInput `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet.
	PublicAccess ElasticSearchElasticsearchUserConfigPublicAccessPtrInput `pulumi:"publicAccess"`
	// Name of the basebackup to restore in forked service.
	RecoveryBasebackupName pulumi.StringPtrInput `pulumi:"recoveryBasebackupName"`
	// Name of another service to fork from. This has effect
	// only when a new service is being created.
	ServiceToForkFrom pulumi.StringPtrInput `pulumi:"serviceToForkFrom"`
}

func (ElasticSearchElasticsearchUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSearchElasticsearchUserConfig)(nil)).Elem()
}

func (i ElasticSearchElasticsearchUserConfigArgs) ToElasticSearchElasticsearchUserConfigOutput() ElasticSearchElasticsearchUserConfigOutput {
	return i.ToElasticSearchElasticsearchUserConfigOutputWithContext(context.Background())
}

func (i ElasticSearchElasticsearchUserConfigArgs) ToElasticSearchElasticsearchUserConfigOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchElasticsearchUserConfigOutput)
}

func (i ElasticSearchElasticsearchUserConfigArgs) ToElasticSearchElasticsearchUserConfigPtrOutput() ElasticSearchElasticsearchUserConfigPtrOutput {
	return i.ToElasticSearchElasticsearchUserConfigPtrOutputWithContext(context.Background())
}

func (i ElasticSearchElasticsearchUserConfigArgs) ToElasticSearchElasticsearchUserConfigPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchElasticsearchUserConfigOutput).ToElasticSearchElasticsearchUserConfigPtrOutputWithContext(ctx)
}

// ElasticSearchElasticsearchUserConfigPtrInput is an input type that accepts ElasticSearchElasticsearchUserConfigArgs, ElasticSearchElasticsearchUserConfigPtr and ElasticSearchElasticsearchUserConfigPtrOutput values.
// You can construct a concrete instance of `ElasticSearchElasticsearchUserConfigPtrInput` via:
//
//          ElasticSearchElasticsearchUserConfigArgs{...}
//
//  or:
//
//          nil
type ElasticSearchElasticsearchUserConfigPtrInput interface {
	pulumi.Input

	ToElasticSearchElasticsearchUserConfigPtrOutput() ElasticSearchElasticsearchUserConfigPtrOutput
	ToElasticSearchElasticsearchUserConfigPtrOutputWithContext(context.Context) ElasticSearchElasticsearchUserConfigPtrOutput
}

type elasticSearchElasticsearchUserConfigPtrType ElasticSearchElasticsearchUserConfigArgs

func ElasticSearchElasticsearchUserConfigPtr(v *ElasticSearchElasticsearchUserConfigArgs) ElasticSearchElasticsearchUserConfigPtrInput {
	return (*elasticSearchElasticsearchUserConfigPtrType)(v)
}

func (*elasticSearchElasticsearchUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticSearchElasticsearchUserConfig)(nil)).Elem()
}

func (i *elasticSearchElasticsearchUserConfigPtrType) ToElasticSearchElasticsearchUserConfigPtrOutput() ElasticSearchElasticsearchUserConfigPtrOutput {
	return i.ToElasticSearchElasticsearchUserConfigPtrOutputWithContext(context.Background())
}

func (i *elasticSearchElasticsearchUserConfigPtrType) ToElasticSearchElasticsearchUserConfigPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchElasticsearchUserConfigPtrOutput)
}

type ElasticSearchElasticsearchUserConfigOutput struct{ *pulumi.OutputState }

func (ElasticSearchElasticsearchUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSearchElasticsearchUserConfig)(nil)).Elem()
}

func (o ElasticSearchElasticsearchUserConfigOutput) ToElasticSearchElasticsearchUserConfigOutput() ElasticSearchElasticsearchUserConfigOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigOutput) ToElasticSearchElasticsearchUserConfigOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigOutput) ToElasticSearchElasticsearchUserConfigPtrOutput() ElasticSearchElasticsearchUserConfigPtrOutput {
	return o.ToElasticSearchElasticsearchUserConfigPtrOutputWithContext(context.Background())
}

func (o ElasticSearchElasticsearchUserConfigOutput) ToElasticSearchElasticsearchUserConfigPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfig) *ElasticSearchElasticsearchUserConfig {
		return &v
	}).(ElasticSearchElasticsearchUserConfigPtrOutput)
}

// Serve the web frontend using a custom CNAME pointing to the
// Aiven DNS name.
func (o ElasticSearchElasticsearchUserConfigOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfig) *string { return v.CustomDomain }).(pulumi.StringPtrOutput)
}

// Disable automatic replication factor
// adjustment for multi-node services. By default, Aiven ensures all indexes are replicated at
// least to two nodes. Note: setting this to true increases a risk of data loss in case of
// virtual machine failure.
func (o ElasticSearchElasticsearchUserConfigOutput) DisableReplicationFactorAdjustment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfig) *string { return v.DisableReplicationFactorAdjustment }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to elasticsearch from the public
// internet for service nodes that are in a project VPC or another type of private network.
func (o ElasticSearchElasticsearchUserConfigOutput) Elasticsearch() ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfig) *ElasticSearchElasticsearchUserConfigElasticsearch {
		return v.Elasticsearch
	}).(ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput)
}

// Elasticsearch major version.
func (o ElasticSearchElasticsearchUserConfigOutput) ElasticsearchVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfig) *string { return v.ElasticsearchVersion }).(pulumi.StringPtrOutput)
}

// Glob pattern and number of indexes matching that pattern to
// be kept.
func (o ElasticSearchElasticsearchUserConfigOutput) IndexPatterns() ElasticSearchElasticsearchUserConfigIndexPatternArrayOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfig) []ElasticSearchElasticsearchUserConfigIndexPattern {
		return v.IndexPatterns
	}).(ElasticSearchElasticsearchUserConfigIndexPatternArrayOutput)
}

// Template settings for all new indexe.
func (o ElasticSearchElasticsearchUserConfigOutput) IndexTemplate() ElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfig) *ElasticSearchElasticsearchUserConfigIndexTemplate {
		return v.IndexTemplate
	}).(ElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput)
}

// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
func (o ElasticSearchElasticsearchUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// Allow clients to connect to kibana from the public internet for
// service nodes that are in a project VPC or another type of private network.
func (o ElasticSearchElasticsearchUserConfigOutput) Kibana() ElasticSearchElasticsearchUserConfigKibanaPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfig) *ElasticSearchElasticsearchUserConfigKibana {
		return v.Kibana
	}).(ElasticSearchElasticsearchUserConfigKibanaPtrOutput)
}

// Maximum number of indexes to keep before deleting the oldest one.
func (o ElasticSearchElasticsearchUserConfigOutput) MaxIndexCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfig) *string { return v.MaxIndexCount }).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from private networks.
func (o ElasticSearchElasticsearchUserConfigOutput) PrivateAccess() ElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfig) *ElasticSearchElasticsearchUserConfigPrivateAccess {
		return v.PrivateAccess
	}).(ElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput)
}

// Allow access to selected service components through Privatelink
func (o ElasticSearchElasticsearchUserConfigOutput) PrivatelinkAccess() ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfig) *ElasticSearchElasticsearchUserConfigPrivatelinkAccess {
		return v.PrivatelinkAccess
	}).(ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput)
}

// Name of another project to fork a service from. This has
// effect only when a new service is being created.
func (o ElasticSearchElasticsearchUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from the public Internet.
func (o ElasticSearchElasticsearchUserConfigOutput) PublicAccess() ElasticSearchElasticsearchUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfig) *ElasticSearchElasticsearchUserConfigPublicAccess {
		return v.PublicAccess
	}).(ElasticSearchElasticsearchUserConfigPublicAccessPtrOutput)
}

// Name of the basebackup to restore in forked service.
func (o ElasticSearchElasticsearchUserConfigOutput) RecoveryBasebackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfig) *string { return v.RecoveryBasebackupName }).(pulumi.StringPtrOutput)
}

// Name of another service to fork from. This has effect
// only when a new service is being created.
func (o ElasticSearchElasticsearchUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

type ElasticSearchElasticsearchUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ElasticSearchElasticsearchUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticSearchElasticsearchUserConfig)(nil)).Elem()
}

func (o ElasticSearchElasticsearchUserConfigPtrOutput) ToElasticSearchElasticsearchUserConfigPtrOutput() ElasticSearchElasticsearchUserConfigPtrOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigPtrOutput) ToElasticSearchElasticsearchUserConfigPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigPtrOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigPtrOutput) Elem() ElasticSearchElasticsearchUserConfigOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfig) ElasticSearchElasticsearchUserConfig { return *v }).(ElasticSearchElasticsearchUserConfigOutput)
}

// Serve the web frontend using a custom CNAME pointing to the
// Aiven DNS name.
func (o ElasticSearchElasticsearchUserConfigPtrOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.CustomDomain
	}).(pulumi.StringPtrOutput)
}

// Disable automatic replication factor
// adjustment for multi-node services. By default, Aiven ensures all indexes are replicated at
// least to two nodes. Note: setting this to true increases a risk of data loss in case of
// virtual machine failure.
func (o ElasticSearchElasticsearchUserConfigPtrOutput) DisableReplicationFactorAdjustment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.DisableReplicationFactorAdjustment
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to elasticsearch from the public
// internet for service nodes that are in a project VPC or another type of private network.
func (o ElasticSearchElasticsearchUserConfigPtrOutput) Elasticsearch() ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfig) *ElasticSearchElasticsearchUserConfigElasticsearch {
		if v == nil {
			return nil
		}
		return v.Elasticsearch
	}).(ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput)
}

// Elasticsearch major version.
func (o ElasticSearchElasticsearchUserConfigPtrOutput) ElasticsearchVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ElasticsearchVersion
	}).(pulumi.StringPtrOutput)
}

// Glob pattern and number of indexes matching that pattern to
// be kept.
func (o ElasticSearchElasticsearchUserConfigPtrOutput) IndexPatterns() ElasticSearchElasticsearchUserConfigIndexPatternArrayOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfig) []ElasticSearchElasticsearchUserConfigIndexPattern {
		if v == nil {
			return nil
		}
		return v.IndexPatterns
	}).(ElasticSearchElasticsearchUserConfigIndexPatternArrayOutput)
}

// Template settings for all new indexe.
func (o ElasticSearchElasticsearchUserConfigPtrOutput) IndexTemplate() ElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfig) *ElasticSearchElasticsearchUserConfigIndexTemplate {
		if v == nil {
			return nil
		}
		return v.IndexTemplate
	}).(ElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput)
}

// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
func (o ElasticSearchElasticsearchUserConfigPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

// Allow clients to connect to kibana from the public internet for
// service nodes that are in a project VPC or another type of private network.
func (o ElasticSearchElasticsearchUserConfigPtrOutput) Kibana() ElasticSearchElasticsearchUserConfigKibanaPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfig) *ElasticSearchElasticsearchUserConfigKibana {
		if v == nil {
			return nil
		}
		return v.Kibana
	}).(ElasticSearchElasticsearchUserConfigKibanaPtrOutput)
}

// Maximum number of indexes to keep before deleting the oldest one.
func (o ElasticSearchElasticsearchUserConfigPtrOutput) MaxIndexCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.MaxIndexCount
	}).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from private networks.
func (o ElasticSearchElasticsearchUserConfigPtrOutput) PrivateAccess() ElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfig) *ElasticSearchElasticsearchUserConfigPrivateAccess {
		if v == nil {
			return nil
		}
		return v.PrivateAccess
	}).(ElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput)
}

// Allow access to selected service components through Privatelink
func (o ElasticSearchElasticsearchUserConfigPtrOutput) PrivatelinkAccess() ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfig) *ElasticSearchElasticsearchUserConfigPrivatelinkAccess {
		if v == nil {
			return nil
		}
		return v.PrivatelinkAccess
	}).(ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput)
}

// Name of another project to fork a service from. This has
// effect only when a new service is being created.
func (o ElasticSearchElasticsearchUserConfigPtrOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProjectToForkFrom
	}).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from the public Internet.
func (o ElasticSearchElasticsearchUserConfigPtrOutput) PublicAccess() ElasticSearchElasticsearchUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfig) *ElasticSearchElasticsearchUserConfigPublicAccess {
		if v == nil {
			return nil
		}
		return v.PublicAccess
	}).(ElasticSearchElasticsearchUserConfigPublicAccessPtrOutput)
}

// Name of the basebackup to restore in forked service.
func (o ElasticSearchElasticsearchUserConfigPtrOutput) RecoveryBasebackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryBasebackupName
	}).(pulumi.StringPtrOutput)
}

// Name of another service to fork from. This has effect
// only when a new service is being created.
func (o ElasticSearchElasticsearchUserConfigPtrOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceToForkFrom
	}).(pulumi.StringPtrOutput)
}

type ElasticSearchElasticsearchUserConfigElasticsearch struct {
	// Explicitly allow or block automatic
	// creation of indices. Defaults to true
	ActionAutoCreateIndexEnabled *string `pulumi:"actionAutoCreateIndexEnabled"`
	// Require explicit index names when deleting
	ActionDestructiveRequiresName *string `pulumi:"actionDestructiveRequiresName"`
	// Controls the number of shards allowed in the
	// cluster per data node.
	ClusterMaxShardsPerNode *string `pulumi:"clusterMaxShardsPerNode"`
	// Maximum content length for HTTP requests to
	// the Elasticsearch HTTP API, in bytes.
	HttpMaxContentLength *string `pulumi:"httpMaxContentLength"`
	// The max size of allowed headers, in bytes.
	HttpMaxHeaderSize *string `pulumi:"httpMaxHeaderSize"`
	// The max length of an HTTP URL, in bytes.
	HttpMaxInitialLineLength *string `pulumi:"httpMaxInitialLineLength"`
	// Relative amount. Maximum amount of
	// heap memory used for field data cache. This is an expert setting; decreasing the
	// value too much will increase overhead of loading field data; too much memory used
	// for field data cache will decrease amount of heap available for other operations.
	IndicesFielddataCacheSize *string `pulumi:"indicesFielddataCacheSize"`
	// Percentage value. Default is 10%.
	// Total amount of heap used for indexing buffer, before writing segments to disk.
	// This is an expert setting. Too low value will slow down indexing; too high value
	// will increase indexing performance but causes performance issues for query performance.
	IndicesMemoryIndexBufferSize *string `pulumi:"indicesMemoryIndexBufferSize"`
	// Percentage value. Default is 10%.
	// Maximum amount of heap used for query cache. This is an expert setting.
	// Too low value will decrease query performance and increase performance for other
	// operations; too high value will cause issues with other Elasticsearch functionality.
	IndicesQueriesCacheSize *string `pulumi:"indicesQueriesCacheSize"`
	// Maximum number of clauses Lucene
	// BooleanQuery can have. The default value (1024) is relatively high, and increasing it
	// may cause performance issues. Investigate other approaches first before increasing this value.
	IndicesQueryBoolMaxClauseCount *string `pulumi:"indicesQueryBoolMaxClauseCount"`
	// Whitelisted addresses for reindexing.
	// Changing this value will cause all Elasticsearch instances to restart.
	ReindexRemoteWhitelists []string `pulumi:"reindexRemoteWhitelists"`
	// Maximum number of aggregation buckets allowed
	// in a single response. Elasticsearch default value is used when this is not defined.
	SearchMaxBuckets *string `pulumi:"searchMaxBuckets"`
	// Size for the thread pool queue.
	// See documentation for exact details.
	ThreadPoolAnalyzeQueueSize *string `pulumi:"threadPoolAnalyzeQueueSize"`
	// Size for the thread pool. See documentation
	// for exact details. Do note this may have maximum value depending on CPU count -
	// value is automatically lowered if set to higher than maximum value.
	ThreadPoolAnalyzeSize *string `pulumi:"threadPoolAnalyzeSize"`
	// Size for the thread pool. See
	// documentation for exact details. Do note this may have maximum value depending on
	// CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolForceMergeSize *string `pulumi:"threadPoolForceMergeSize"`
	// Size for the thread pool queue. See
	// documentation for exact details.
	ThreadPoolGetQueueSize *string `pulumi:"threadPoolGetQueueSize"`
	// Size for the thread pool. See documentation
	// for exact details. Do note this may have maximum value depending on CPU count -
	// value is automatically lowered if set to higher than maximum value.
	ThreadPoolGetSize *string `pulumi:"threadPoolGetSize"`
	// Size for the thread pool queue.
	// See documentation for exact details.
	ThreadPoolIndexQueueSize *string `pulumi:"threadPoolIndexQueueSize"`
	// Size for the thread pool. See documentation
	// for exact details. Do note this may have maximum value depending on CPU count -
	// value is automatically lowered if set to higher than maximum value.
	ThreadPoolIndexSize *string `pulumi:"threadPoolIndexSize"`
	// Size for the thread pool queue. See
	// documentation for exact details.
	ThreadPoolSearchQueueSize *string `pulumi:"threadPoolSearchQueueSize"`
	// Size for the thread pool. See documentation
	// for exact details. Do note this may have maximum value depending on CPU count - value
	// is automatically lowered if set to higher than maximum value.
	ThreadPoolSearchSize *string `pulumi:"threadPoolSearchSize"`
	// Size for the thread pool queue.
	// See documentation for exact details.
	ThreadPoolSearchThrottledQueueSize *string `pulumi:"threadPoolSearchThrottledQueueSize"`
	// Size for the thread pool. See
	// documentation for exact details. Do note this may have maximum value depending on
	// CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolSearchThrottledSize *string `pulumi:"threadPoolSearchThrottledSize"`
	// Size for the thread pool queue. See
	// documentation for exact details.
	ThreadPoolWriteQueueSize *string `pulumi:"threadPoolWriteQueueSize"`
	// Size for the thread pool. See documentation
	// for exact details. Do note this may have maximum value depending on CPU count - value
	// is automatically lowered if set to higher than maximum value.
	ThreadPoolWriteSize *string `pulumi:"threadPoolWriteSize"`
}

// ElasticSearchElasticsearchUserConfigElasticsearchInput is an input type that accepts ElasticSearchElasticsearchUserConfigElasticsearchArgs and ElasticSearchElasticsearchUserConfigElasticsearchOutput values.
// You can construct a concrete instance of `ElasticSearchElasticsearchUserConfigElasticsearchInput` via:
//
//          ElasticSearchElasticsearchUserConfigElasticsearchArgs{...}
type ElasticSearchElasticsearchUserConfigElasticsearchInput interface {
	pulumi.Input

	ToElasticSearchElasticsearchUserConfigElasticsearchOutput() ElasticSearchElasticsearchUserConfigElasticsearchOutput
	ToElasticSearchElasticsearchUserConfigElasticsearchOutputWithContext(context.Context) ElasticSearchElasticsearchUserConfigElasticsearchOutput
}

type ElasticSearchElasticsearchUserConfigElasticsearchArgs struct {
	// Explicitly allow or block automatic
	// creation of indices. Defaults to true
	ActionAutoCreateIndexEnabled pulumi.StringPtrInput `pulumi:"actionAutoCreateIndexEnabled"`
	// Require explicit index names when deleting
	ActionDestructiveRequiresName pulumi.StringPtrInput `pulumi:"actionDestructiveRequiresName"`
	// Controls the number of shards allowed in the
	// cluster per data node.
	ClusterMaxShardsPerNode pulumi.StringPtrInput `pulumi:"clusterMaxShardsPerNode"`
	// Maximum content length for HTTP requests to
	// the Elasticsearch HTTP API, in bytes.
	HttpMaxContentLength pulumi.StringPtrInput `pulumi:"httpMaxContentLength"`
	// The max size of allowed headers, in bytes.
	HttpMaxHeaderSize pulumi.StringPtrInput `pulumi:"httpMaxHeaderSize"`
	// The max length of an HTTP URL, in bytes.
	HttpMaxInitialLineLength pulumi.StringPtrInput `pulumi:"httpMaxInitialLineLength"`
	// Relative amount. Maximum amount of
	// heap memory used for field data cache. This is an expert setting; decreasing the
	// value too much will increase overhead of loading field data; too much memory used
	// for field data cache will decrease amount of heap available for other operations.
	IndicesFielddataCacheSize pulumi.StringPtrInput `pulumi:"indicesFielddataCacheSize"`
	// Percentage value. Default is 10%.
	// Total amount of heap used for indexing buffer, before writing segments to disk.
	// This is an expert setting. Too low value will slow down indexing; too high value
	// will increase indexing performance but causes performance issues for query performance.
	IndicesMemoryIndexBufferSize pulumi.StringPtrInput `pulumi:"indicesMemoryIndexBufferSize"`
	// Percentage value. Default is 10%.
	// Maximum amount of heap used for query cache. This is an expert setting.
	// Too low value will decrease query performance and increase performance for other
	// operations; too high value will cause issues with other Elasticsearch functionality.
	IndicesQueriesCacheSize pulumi.StringPtrInput `pulumi:"indicesQueriesCacheSize"`
	// Maximum number of clauses Lucene
	// BooleanQuery can have. The default value (1024) is relatively high, and increasing it
	// may cause performance issues. Investigate other approaches first before increasing this value.
	IndicesQueryBoolMaxClauseCount pulumi.StringPtrInput `pulumi:"indicesQueryBoolMaxClauseCount"`
	// Whitelisted addresses for reindexing.
	// Changing this value will cause all Elasticsearch instances to restart.
	ReindexRemoteWhitelists pulumi.StringArrayInput `pulumi:"reindexRemoteWhitelists"`
	// Maximum number of aggregation buckets allowed
	// in a single response. Elasticsearch default value is used when this is not defined.
	SearchMaxBuckets pulumi.StringPtrInput `pulumi:"searchMaxBuckets"`
	// Size for the thread pool queue.
	// See documentation for exact details.
	ThreadPoolAnalyzeQueueSize pulumi.StringPtrInput `pulumi:"threadPoolAnalyzeQueueSize"`
	// Size for the thread pool. See documentation
	// for exact details. Do note this may have maximum value depending on CPU count -
	// value is automatically lowered if set to higher than maximum value.
	ThreadPoolAnalyzeSize pulumi.StringPtrInput `pulumi:"threadPoolAnalyzeSize"`
	// Size for the thread pool. See
	// documentation for exact details. Do note this may have maximum value depending on
	// CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolForceMergeSize pulumi.StringPtrInput `pulumi:"threadPoolForceMergeSize"`
	// Size for the thread pool queue. See
	// documentation for exact details.
	ThreadPoolGetQueueSize pulumi.StringPtrInput `pulumi:"threadPoolGetQueueSize"`
	// Size for the thread pool. See documentation
	// for exact details. Do note this may have maximum value depending on CPU count -
	// value is automatically lowered if set to higher than maximum value.
	ThreadPoolGetSize pulumi.StringPtrInput `pulumi:"threadPoolGetSize"`
	// Size for the thread pool queue.
	// See documentation for exact details.
	ThreadPoolIndexQueueSize pulumi.StringPtrInput `pulumi:"threadPoolIndexQueueSize"`
	// Size for the thread pool. See documentation
	// for exact details. Do note this may have maximum value depending on CPU count -
	// value is automatically lowered if set to higher than maximum value.
	ThreadPoolIndexSize pulumi.StringPtrInput `pulumi:"threadPoolIndexSize"`
	// Size for the thread pool queue. See
	// documentation for exact details.
	ThreadPoolSearchQueueSize pulumi.StringPtrInput `pulumi:"threadPoolSearchQueueSize"`
	// Size for the thread pool. See documentation
	// for exact details. Do note this may have maximum value depending on CPU count - value
	// is automatically lowered if set to higher than maximum value.
	ThreadPoolSearchSize pulumi.StringPtrInput `pulumi:"threadPoolSearchSize"`
	// Size for the thread pool queue.
	// See documentation for exact details.
	ThreadPoolSearchThrottledQueueSize pulumi.StringPtrInput `pulumi:"threadPoolSearchThrottledQueueSize"`
	// Size for the thread pool. See
	// documentation for exact details. Do note this may have maximum value depending on
	// CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolSearchThrottledSize pulumi.StringPtrInput `pulumi:"threadPoolSearchThrottledSize"`
	// Size for the thread pool queue. See
	// documentation for exact details.
	ThreadPoolWriteQueueSize pulumi.StringPtrInput `pulumi:"threadPoolWriteQueueSize"`
	// Size for the thread pool. See documentation
	// for exact details. Do note this may have maximum value depending on CPU count - value
	// is automatically lowered if set to higher than maximum value.
	ThreadPoolWriteSize pulumi.StringPtrInput `pulumi:"threadPoolWriteSize"`
}

func (ElasticSearchElasticsearchUserConfigElasticsearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSearchElasticsearchUserConfigElasticsearch)(nil)).Elem()
}

func (i ElasticSearchElasticsearchUserConfigElasticsearchArgs) ToElasticSearchElasticsearchUserConfigElasticsearchOutput() ElasticSearchElasticsearchUserConfigElasticsearchOutput {
	return i.ToElasticSearchElasticsearchUserConfigElasticsearchOutputWithContext(context.Background())
}

func (i ElasticSearchElasticsearchUserConfigElasticsearchArgs) ToElasticSearchElasticsearchUserConfigElasticsearchOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigElasticsearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchElasticsearchUserConfigElasticsearchOutput)
}

func (i ElasticSearchElasticsearchUserConfigElasticsearchArgs) ToElasticSearchElasticsearchUserConfigElasticsearchPtrOutput() ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput {
	return i.ToElasticSearchElasticsearchUserConfigElasticsearchPtrOutputWithContext(context.Background())
}

func (i ElasticSearchElasticsearchUserConfigElasticsearchArgs) ToElasticSearchElasticsearchUserConfigElasticsearchPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchElasticsearchUserConfigElasticsearchOutput).ToElasticSearchElasticsearchUserConfigElasticsearchPtrOutputWithContext(ctx)
}

// ElasticSearchElasticsearchUserConfigElasticsearchPtrInput is an input type that accepts ElasticSearchElasticsearchUserConfigElasticsearchArgs, ElasticSearchElasticsearchUserConfigElasticsearchPtr and ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput values.
// You can construct a concrete instance of `ElasticSearchElasticsearchUserConfigElasticsearchPtrInput` via:
//
//          ElasticSearchElasticsearchUserConfigElasticsearchArgs{...}
//
//  or:
//
//          nil
type ElasticSearchElasticsearchUserConfigElasticsearchPtrInput interface {
	pulumi.Input

	ToElasticSearchElasticsearchUserConfigElasticsearchPtrOutput() ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput
	ToElasticSearchElasticsearchUserConfigElasticsearchPtrOutputWithContext(context.Context) ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput
}

type elasticSearchElasticsearchUserConfigElasticsearchPtrType ElasticSearchElasticsearchUserConfigElasticsearchArgs

func ElasticSearchElasticsearchUserConfigElasticsearchPtr(v *ElasticSearchElasticsearchUserConfigElasticsearchArgs) ElasticSearchElasticsearchUserConfigElasticsearchPtrInput {
	return (*elasticSearchElasticsearchUserConfigElasticsearchPtrType)(v)
}

func (*elasticSearchElasticsearchUserConfigElasticsearchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticSearchElasticsearchUserConfigElasticsearch)(nil)).Elem()
}

func (i *elasticSearchElasticsearchUserConfigElasticsearchPtrType) ToElasticSearchElasticsearchUserConfigElasticsearchPtrOutput() ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput {
	return i.ToElasticSearchElasticsearchUserConfigElasticsearchPtrOutputWithContext(context.Background())
}

func (i *elasticSearchElasticsearchUserConfigElasticsearchPtrType) ToElasticSearchElasticsearchUserConfigElasticsearchPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput)
}

type ElasticSearchElasticsearchUserConfigElasticsearchOutput struct{ *pulumi.OutputState }

func (ElasticSearchElasticsearchUserConfigElasticsearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSearchElasticsearchUserConfigElasticsearch)(nil)).Elem()
}

func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) ToElasticSearchElasticsearchUserConfigElasticsearchOutput() ElasticSearchElasticsearchUserConfigElasticsearchOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) ToElasticSearchElasticsearchUserConfigElasticsearchOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigElasticsearchOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) ToElasticSearchElasticsearchUserConfigElasticsearchPtrOutput() ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput {
	return o.ToElasticSearchElasticsearchUserConfigElasticsearchPtrOutputWithContext(context.Background())
}

func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) ToElasticSearchElasticsearchUserConfigElasticsearchPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigElasticsearch) *ElasticSearchElasticsearchUserConfigElasticsearch {
		return &v
	}).(ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput)
}

// Explicitly allow or block automatic
// creation of indices. Defaults to true
func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) ActionAutoCreateIndexEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		return v.ActionAutoCreateIndexEnabled
	}).(pulumi.StringPtrOutput)
}

// Require explicit index names when deleting
func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) ActionDestructiveRequiresName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		return v.ActionDestructiveRequiresName
	}).(pulumi.StringPtrOutput)
}

// Controls the number of shards allowed in the
// cluster per data node.
func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) ClusterMaxShardsPerNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.ClusterMaxShardsPerNode }).(pulumi.StringPtrOutput)
}

// Maximum content length for HTTP requests to
// the Elasticsearch HTTP API, in bytes.
func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) HttpMaxContentLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.HttpMaxContentLength }).(pulumi.StringPtrOutput)
}

// The max size of allowed headers, in bytes.
func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) HttpMaxHeaderSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.HttpMaxHeaderSize }).(pulumi.StringPtrOutput)
}

// The max length of an HTTP URL, in bytes.
func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) HttpMaxInitialLineLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.HttpMaxInitialLineLength }).(pulumi.StringPtrOutput)
}

// Relative amount. Maximum amount of
// heap memory used for field data cache. This is an expert setting; decreasing the
// value too much will increase overhead of loading field data; too much memory used
// for field data cache will decrease amount of heap available for other operations.
func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) IndicesFielddataCacheSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.IndicesFielddataCacheSize }).(pulumi.StringPtrOutput)
}

// Percentage value. Default is 10%.
// Total amount of heap used for indexing buffer, before writing segments to disk.
// This is an expert setting. Too low value will slow down indexing; too high value
// will increase indexing performance but causes performance issues for query performance.
func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) IndicesMemoryIndexBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		return v.IndicesMemoryIndexBufferSize
	}).(pulumi.StringPtrOutput)
}

// Percentage value. Default is 10%.
// Maximum amount of heap used for query cache. This is an expert setting.
// Too low value will decrease query performance and increase performance for other
// operations; too high value will cause issues with other Elasticsearch functionality.
func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) IndicesQueriesCacheSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.IndicesQueriesCacheSize }).(pulumi.StringPtrOutput)
}

// Maximum number of clauses Lucene
// BooleanQuery can have. The default value (1024) is relatively high, and increasing it
// may cause performance issues. Investigate other approaches first before increasing this value.
func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) IndicesQueryBoolMaxClauseCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		return v.IndicesQueryBoolMaxClauseCount
	}).(pulumi.StringPtrOutput)
}

// Whitelisted addresses for reindexing.
// Changing this value will cause all Elasticsearch instances to restart.
func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) ReindexRemoteWhitelists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigElasticsearch) []string { return v.ReindexRemoteWhitelists }).(pulumi.StringArrayOutput)
}

// Maximum number of aggregation buckets allowed
// in a single response. Elasticsearch default value is used when this is not defined.
func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) SearchMaxBuckets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.SearchMaxBuckets }).(pulumi.StringPtrOutput)
}

// Size for the thread pool queue.
// See documentation for exact details.
func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) ThreadPoolAnalyzeQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolAnalyzeQueueSize }).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See documentation
// for exact details. Do note this may have maximum value depending on CPU count -
// value is automatically lowered if set to higher than maximum value.
func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) ThreadPoolAnalyzeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolAnalyzeSize }).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See
// documentation for exact details. Do note this may have maximum value depending on
// CPU count - value is automatically lowered if set to higher than maximum value.
func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) ThreadPoolForceMergeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolForceMergeSize }).(pulumi.StringPtrOutput)
}

// Size for the thread pool queue. See
// documentation for exact details.
func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) ThreadPoolGetQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolGetQueueSize }).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See documentation
// for exact details. Do note this may have maximum value depending on CPU count -
// value is automatically lowered if set to higher than maximum value.
func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) ThreadPoolGetSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolGetSize }).(pulumi.StringPtrOutput)
}

// Size for the thread pool queue.
// See documentation for exact details.
func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) ThreadPoolIndexQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolIndexQueueSize }).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See documentation
// for exact details. Do note this may have maximum value depending on CPU count -
// value is automatically lowered if set to higher than maximum value.
func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) ThreadPoolIndexSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolIndexSize }).(pulumi.StringPtrOutput)
}

// Size for the thread pool queue. See
// documentation for exact details.
func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) ThreadPoolSearchQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolSearchQueueSize }).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See documentation
// for exact details. Do note this may have maximum value depending on CPU count - value
// is automatically lowered if set to higher than maximum value.
func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) ThreadPoolSearchSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolSearchSize }).(pulumi.StringPtrOutput)
}

// Size for the thread pool queue.
// See documentation for exact details.
func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) ThreadPoolSearchThrottledQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		return v.ThreadPoolSearchThrottledQueueSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See
// documentation for exact details. Do note this may have maximum value depending on
// CPU count - value is automatically lowered if set to higher than maximum value.
func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) ThreadPoolSearchThrottledSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		return v.ThreadPoolSearchThrottledSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool queue. See
// documentation for exact details.
func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) ThreadPoolWriteQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolWriteQueueSize }).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See documentation
// for exact details. Do note this may have maximum value depending on CPU count - value
// is automatically lowered if set to higher than maximum value.
func (o ElasticSearchElasticsearchUserConfigElasticsearchOutput) ThreadPoolWriteSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolWriteSize }).(pulumi.StringPtrOutput)
}

type ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput struct{ *pulumi.OutputState }

func (ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticSearchElasticsearchUserConfigElasticsearch)(nil)).Elem()
}

func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ToElasticSearchElasticsearchUserConfigElasticsearchPtrOutput() ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ToElasticSearchElasticsearchUserConfigElasticsearchPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) Elem() ElasticSearchElasticsearchUserConfigElasticsearchOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigElasticsearch) ElasticSearchElasticsearchUserConfigElasticsearch {
		return *v
	}).(ElasticSearchElasticsearchUserConfigElasticsearchOutput)
}

// Explicitly allow or block automatic
// creation of indices. Defaults to true
func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ActionAutoCreateIndexEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ActionAutoCreateIndexEnabled
	}).(pulumi.StringPtrOutput)
}

// Require explicit index names when deleting
func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ActionDestructiveRequiresName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ActionDestructiveRequiresName
	}).(pulumi.StringPtrOutput)
}

// Controls the number of shards allowed in the
// cluster per data node.
func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ClusterMaxShardsPerNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ClusterMaxShardsPerNode
	}).(pulumi.StringPtrOutput)
}

// Maximum content length for HTTP requests to
// the Elasticsearch HTTP API, in bytes.
func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) HttpMaxContentLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.HttpMaxContentLength
	}).(pulumi.StringPtrOutput)
}

// The max size of allowed headers, in bytes.
func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) HttpMaxHeaderSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.HttpMaxHeaderSize
	}).(pulumi.StringPtrOutput)
}

// The max length of an HTTP URL, in bytes.
func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) HttpMaxInitialLineLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.HttpMaxInitialLineLength
	}).(pulumi.StringPtrOutput)
}

// Relative amount. Maximum amount of
// heap memory used for field data cache. This is an expert setting; decreasing the
// value too much will increase overhead of loading field data; too much memory used
// for field data cache will decrease amount of heap available for other operations.
func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) IndicesFielddataCacheSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.IndicesFielddataCacheSize
	}).(pulumi.StringPtrOutput)
}

// Percentage value. Default is 10%.
// Total amount of heap used for indexing buffer, before writing segments to disk.
// This is an expert setting. Too low value will slow down indexing; too high value
// will increase indexing performance but causes performance issues for query performance.
func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) IndicesMemoryIndexBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.IndicesMemoryIndexBufferSize
	}).(pulumi.StringPtrOutput)
}

// Percentage value. Default is 10%.
// Maximum amount of heap used for query cache. This is an expert setting.
// Too low value will decrease query performance and increase performance for other
// operations; too high value will cause issues with other Elasticsearch functionality.
func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) IndicesQueriesCacheSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.IndicesQueriesCacheSize
	}).(pulumi.StringPtrOutput)
}

// Maximum number of clauses Lucene
// BooleanQuery can have. The default value (1024) is relatively high, and increasing it
// may cause performance issues. Investigate other approaches first before increasing this value.
func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) IndicesQueryBoolMaxClauseCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.IndicesQueryBoolMaxClauseCount
	}).(pulumi.StringPtrOutput)
}

// Whitelisted addresses for reindexing.
// Changing this value will cause all Elasticsearch instances to restart.
func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ReindexRemoteWhitelists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigElasticsearch) []string {
		if v == nil {
			return nil
		}
		return v.ReindexRemoteWhitelists
	}).(pulumi.StringArrayOutput)
}

// Maximum number of aggregation buckets allowed
// in a single response. Elasticsearch default value is used when this is not defined.
func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) SearchMaxBuckets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.SearchMaxBuckets
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool queue.
// See documentation for exact details.
func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolAnalyzeQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolAnalyzeQueueSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See documentation
// for exact details. Do note this may have maximum value depending on CPU count -
// value is automatically lowered if set to higher than maximum value.
func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolAnalyzeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolAnalyzeSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See
// documentation for exact details. Do note this may have maximum value depending on
// CPU count - value is automatically lowered if set to higher than maximum value.
func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolForceMergeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolForceMergeSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool queue. See
// documentation for exact details.
func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolGetQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolGetQueueSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See documentation
// for exact details. Do note this may have maximum value depending on CPU count -
// value is automatically lowered if set to higher than maximum value.
func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolGetSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolGetSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool queue.
// See documentation for exact details.
func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolIndexQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolIndexQueueSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See documentation
// for exact details. Do note this may have maximum value depending on CPU count -
// value is automatically lowered if set to higher than maximum value.
func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolIndexSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolIndexSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool queue. See
// documentation for exact details.
func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolSearchQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolSearchQueueSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See documentation
// for exact details. Do note this may have maximum value depending on CPU count - value
// is automatically lowered if set to higher than maximum value.
func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolSearchSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolSearchSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool queue.
// See documentation for exact details.
func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolSearchThrottledQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolSearchThrottledQueueSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See
// documentation for exact details. Do note this may have maximum value depending on
// CPU count - value is automatically lowered if set to higher than maximum value.
func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolSearchThrottledSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolSearchThrottledSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool queue. See
// documentation for exact details.
func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolWriteQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolWriteQueueSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See documentation
// for exact details. Do note this may have maximum value depending on CPU count - value
// is automatically lowered if set to higher than maximum value.
func (o ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolWriteSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolWriteSize
	}).(pulumi.StringPtrOutput)
}

type ElasticSearchElasticsearchUserConfigIndexPattern struct {
	// Maximum number of indexes to keep before deleting the oldest one.
	MaxIndexCount *string `pulumi:"maxIndexCount"`
	// Must consist of alpha-numeric characters, dashes, underscores,
	// dots and glob characters (* and ?)
	Pattern *string `pulumi:"pattern"`
	// Deletion sorting algorithm
	SortingAlgorithm *string `pulumi:"sortingAlgorithm"`
}

// ElasticSearchElasticsearchUserConfigIndexPatternInput is an input type that accepts ElasticSearchElasticsearchUserConfigIndexPatternArgs and ElasticSearchElasticsearchUserConfigIndexPatternOutput values.
// You can construct a concrete instance of `ElasticSearchElasticsearchUserConfigIndexPatternInput` via:
//
//          ElasticSearchElasticsearchUserConfigIndexPatternArgs{...}
type ElasticSearchElasticsearchUserConfigIndexPatternInput interface {
	pulumi.Input

	ToElasticSearchElasticsearchUserConfigIndexPatternOutput() ElasticSearchElasticsearchUserConfigIndexPatternOutput
	ToElasticSearchElasticsearchUserConfigIndexPatternOutputWithContext(context.Context) ElasticSearchElasticsearchUserConfigIndexPatternOutput
}

type ElasticSearchElasticsearchUserConfigIndexPatternArgs struct {
	// Maximum number of indexes to keep before deleting the oldest one.
	MaxIndexCount pulumi.StringPtrInput `pulumi:"maxIndexCount"`
	// Must consist of alpha-numeric characters, dashes, underscores,
	// dots and glob characters (* and ?)
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
	// Deletion sorting algorithm
	SortingAlgorithm pulumi.StringPtrInput `pulumi:"sortingAlgorithm"`
}

func (ElasticSearchElasticsearchUserConfigIndexPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSearchElasticsearchUserConfigIndexPattern)(nil)).Elem()
}

func (i ElasticSearchElasticsearchUserConfigIndexPatternArgs) ToElasticSearchElasticsearchUserConfigIndexPatternOutput() ElasticSearchElasticsearchUserConfigIndexPatternOutput {
	return i.ToElasticSearchElasticsearchUserConfigIndexPatternOutputWithContext(context.Background())
}

func (i ElasticSearchElasticsearchUserConfigIndexPatternArgs) ToElasticSearchElasticsearchUserConfigIndexPatternOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigIndexPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchElasticsearchUserConfigIndexPatternOutput)
}

// ElasticSearchElasticsearchUserConfigIndexPatternArrayInput is an input type that accepts ElasticSearchElasticsearchUserConfigIndexPatternArray and ElasticSearchElasticsearchUserConfigIndexPatternArrayOutput values.
// You can construct a concrete instance of `ElasticSearchElasticsearchUserConfigIndexPatternArrayInput` via:
//
//          ElasticSearchElasticsearchUserConfigIndexPatternArray{ ElasticSearchElasticsearchUserConfigIndexPatternArgs{...} }
type ElasticSearchElasticsearchUserConfigIndexPatternArrayInput interface {
	pulumi.Input

	ToElasticSearchElasticsearchUserConfigIndexPatternArrayOutput() ElasticSearchElasticsearchUserConfigIndexPatternArrayOutput
	ToElasticSearchElasticsearchUserConfigIndexPatternArrayOutputWithContext(context.Context) ElasticSearchElasticsearchUserConfigIndexPatternArrayOutput
}

type ElasticSearchElasticsearchUserConfigIndexPatternArray []ElasticSearchElasticsearchUserConfigIndexPatternInput

func (ElasticSearchElasticsearchUserConfigIndexPatternArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticSearchElasticsearchUserConfigIndexPattern)(nil)).Elem()
}

func (i ElasticSearchElasticsearchUserConfigIndexPatternArray) ToElasticSearchElasticsearchUserConfigIndexPatternArrayOutput() ElasticSearchElasticsearchUserConfigIndexPatternArrayOutput {
	return i.ToElasticSearchElasticsearchUserConfigIndexPatternArrayOutputWithContext(context.Background())
}

func (i ElasticSearchElasticsearchUserConfigIndexPatternArray) ToElasticSearchElasticsearchUserConfigIndexPatternArrayOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigIndexPatternArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchElasticsearchUserConfigIndexPatternArrayOutput)
}

type ElasticSearchElasticsearchUserConfigIndexPatternOutput struct{ *pulumi.OutputState }

func (ElasticSearchElasticsearchUserConfigIndexPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSearchElasticsearchUserConfigIndexPattern)(nil)).Elem()
}

func (o ElasticSearchElasticsearchUserConfigIndexPatternOutput) ToElasticSearchElasticsearchUserConfigIndexPatternOutput() ElasticSearchElasticsearchUserConfigIndexPatternOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigIndexPatternOutput) ToElasticSearchElasticsearchUserConfigIndexPatternOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigIndexPatternOutput {
	return o
}

// Maximum number of indexes to keep before deleting the oldest one.
func (o ElasticSearchElasticsearchUserConfigIndexPatternOutput) MaxIndexCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigIndexPattern) *string { return v.MaxIndexCount }).(pulumi.StringPtrOutput)
}

// Must consist of alpha-numeric characters, dashes, underscores,
// dots and glob characters (* and ?)
func (o ElasticSearchElasticsearchUserConfigIndexPatternOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigIndexPattern) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// Deletion sorting algorithm
func (o ElasticSearchElasticsearchUserConfigIndexPatternOutput) SortingAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigIndexPattern) *string { return v.SortingAlgorithm }).(pulumi.StringPtrOutput)
}

type ElasticSearchElasticsearchUserConfigIndexPatternArrayOutput struct{ *pulumi.OutputState }

func (ElasticSearchElasticsearchUserConfigIndexPatternArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticSearchElasticsearchUserConfigIndexPattern)(nil)).Elem()
}

func (o ElasticSearchElasticsearchUserConfigIndexPatternArrayOutput) ToElasticSearchElasticsearchUserConfigIndexPatternArrayOutput() ElasticSearchElasticsearchUserConfigIndexPatternArrayOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigIndexPatternArrayOutput) ToElasticSearchElasticsearchUserConfigIndexPatternArrayOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigIndexPatternArrayOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigIndexPatternArrayOutput) Index(i pulumi.IntInput) ElasticSearchElasticsearchUserConfigIndexPatternOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticSearchElasticsearchUserConfigIndexPattern {
		return vs[0].([]ElasticSearchElasticsearchUserConfigIndexPattern)[vs[1].(int)]
	}).(ElasticSearchElasticsearchUserConfigIndexPatternOutput)
}

type ElasticSearchElasticsearchUserConfigIndexTemplate struct {
	// The maximum number of nested JSON objects that
	// a single document can contain across all nested types. This limit helps to prevent out of
	// memory errors when a document contains too many nested objects. Default is 10000.
	MappingNestedObjectsLimit *string `pulumi:"mappingNestedObjectsLimit"`
	// The number of replicas each primary shard has.
	NumberOfReplicas *string `pulumi:"numberOfReplicas"`
	// The number of primary shards that an index should have.
	NumberOfShards *string `pulumi:"numberOfShards"`
}

// ElasticSearchElasticsearchUserConfigIndexTemplateInput is an input type that accepts ElasticSearchElasticsearchUserConfigIndexTemplateArgs and ElasticSearchElasticsearchUserConfigIndexTemplateOutput values.
// You can construct a concrete instance of `ElasticSearchElasticsearchUserConfigIndexTemplateInput` via:
//
//          ElasticSearchElasticsearchUserConfigIndexTemplateArgs{...}
type ElasticSearchElasticsearchUserConfigIndexTemplateInput interface {
	pulumi.Input

	ToElasticSearchElasticsearchUserConfigIndexTemplateOutput() ElasticSearchElasticsearchUserConfigIndexTemplateOutput
	ToElasticSearchElasticsearchUserConfigIndexTemplateOutputWithContext(context.Context) ElasticSearchElasticsearchUserConfigIndexTemplateOutput
}

type ElasticSearchElasticsearchUserConfigIndexTemplateArgs struct {
	// The maximum number of nested JSON objects that
	// a single document can contain across all nested types. This limit helps to prevent out of
	// memory errors when a document contains too many nested objects. Default is 10000.
	MappingNestedObjectsLimit pulumi.StringPtrInput `pulumi:"mappingNestedObjectsLimit"`
	// The number of replicas each primary shard has.
	NumberOfReplicas pulumi.StringPtrInput `pulumi:"numberOfReplicas"`
	// The number of primary shards that an index should have.
	NumberOfShards pulumi.StringPtrInput `pulumi:"numberOfShards"`
}

func (ElasticSearchElasticsearchUserConfigIndexTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSearchElasticsearchUserConfigIndexTemplate)(nil)).Elem()
}

func (i ElasticSearchElasticsearchUserConfigIndexTemplateArgs) ToElasticSearchElasticsearchUserConfigIndexTemplateOutput() ElasticSearchElasticsearchUserConfigIndexTemplateOutput {
	return i.ToElasticSearchElasticsearchUserConfigIndexTemplateOutputWithContext(context.Background())
}

func (i ElasticSearchElasticsearchUserConfigIndexTemplateArgs) ToElasticSearchElasticsearchUserConfigIndexTemplateOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigIndexTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchElasticsearchUserConfigIndexTemplateOutput)
}

func (i ElasticSearchElasticsearchUserConfigIndexTemplateArgs) ToElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput() ElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput {
	return i.ToElasticSearchElasticsearchUserConfigIndexTemplatePtrOutputWithContext(context.Background())
}

func (i ElasticSearchElasticsearchUserConfigIndexTemplateArgs) ToElasticSearchElasticsearchUserConfigIndexTemplatePtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchElasticsearchUserConfigIndexTemplateOutput).ToElasticSearchElasticsearchUserConfigIndexTemplatePtrOutputWithContext(ctx)
}

// ElasticSearchElasticsearchUserConfigIndexTemplatePtrInput is an input type that accepts ElasticSearchElasticsearchUserConfigIndexTemplateArgs, ElasticSearchElasticsearchUserConfigIndexTemplatePtr and ElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput values.
// You can construct a concrete instance of `ElasticSearchElasticsearchUserConfigIndexTemplatePtrInput` via:
//
//          ElasticSearchElasticsearchUserConfigIndexTemplateArgs{...}
//
//  or:
//
//          nil
type ElasticSearchElasticsearchUserConfigIndexTemplatePtrInput interface {
	pulumi.Input

	ToElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput() ElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput
	ToElasticSearchElasticsearchUserConfigIndexTemplatePtrOutputWithContext(context.Context) ElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput
}

type elasticSearchElasticsearchUserConfigIndexTemplatePtrType ElasticSearchElasticsearchUserConfigIndexTemplateArgs

func ElasticSearchElasticsearchUserConfigIndexTemplatePtr(v *ElasticSearchElasticsearchUserConfigIndexTemplateArgs) ElasticSearchElasticsearchUserConfigIndexTemplatePtrInput {
	return (*elasticSearchElasticsearchUserConfigIndexTemplatePtrType)(v)
}

func (*elasticSearchElasticsearchUserConfigIndexTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticSearchElasticsearchUserConfigIndexTemplate)(nil)).Elem()
}

func (i *elasticSearchElasticsearchUserConfigIndexTemplatePtrType) ToElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput() ElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput {
	return i.ToElasticSearchElasticsearchUserConfigIndexTemplatePtrOutputWithContext(context.Background())
}

func (i *elasticSearchElasticsearchUserConfigIndexTemplatePtrType) ToElasticSearchElasticsearchUserConfigIndexTemplatePtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput)
}

type ElasticSearchElasticsearchUserConfigIndexTemplateOutput struct{ *pulumi.OutputState }

func (ElasticSearchElasticsearchUserConfigIndexTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSearchElasticsearchUserConfigIndexTemplate)(nil)).Elem()
}

func (o ElasticSearchElasticsearchUserConfigIndexTemplateOutput) ToElasticSearchElasticsearchUserConfigIndexTemplateOutput() ElasticSearchElasticsearchUserConfigIndexTemplateOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigIndexTemplateOutput) ToElasticSearchElasticsearchUserConfigIndexTemplateOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigIndexTemplateOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigIndexTemplateOutput) ToElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput() ElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput {
	return o.ToElasticSearchElasticsearchUserConfigIndexTemplatePtrOutputWithContext(context.Background())
}

func (o ElasticSearchElasticsearchUserConfigIndexTemplateOutput) ToElasticSearchElasticsearchUserConfigIndexTemplatePtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigIndexTemplate) *ElasticSearchElasticsearchUserConfigIndexTemplate {
		return &v
	}).(ElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput)
}

// The maximum number of nested JSON objects that
// a single document can contain across all nested types. This limit helps to prevent out of
// memory errors when a document contains too many nested objects. Default is 10000.
func (o ElasticSearchElasticsearchUserConfigIndexTemplateOutput) MappingNestedObjectsLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigIndexTemplate) *string { return v.MappingNestedObjectsLimit }).(pulumi.StringPtrOutput)
}

// The number of replicas each primary shard has.
func (o ElasticSearchElasticsearchUserConfigIndexTemplateOutput) NumberOfReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigIndexTemplate) *string { return v.NumberOfReplicas }).(pulumi.StringPtrOutput)
}

// The number of primary shards that an index should have.
func (o ElasticSearchElasticsearchUserConfigIndexTemplateOutput) NumberOfShards() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigIndexTemplate) *string { return v.NumberOfShards }).(pulumi.StringPtrOutput)
}

type ElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput struct{ *pulumi.OutputState }

func (ElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticSearchElasticsearchUserConfigIndexTemplate)(nil)).Elem()
}

func (o ElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput) ToElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput() ElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput) ToElasticSearchElasticsearchUserConfigIndexTemplatePtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput) Elem() ElasticSearchElasticsearchUserConfigIndexTemplateOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigIndexTemplate) ElasticSearchElasticsearchUserConfigIndexTemplate {
		return *v
	}).(ElasticSearchElasticsearchUserConfigIndexTemplateOutput)
}

// The maximum number of nested JSON objects that
// a single document can contain across all nested types. This limit helps to prevent out of
// memory errors when a document contains too many nested objects. Default is 10000.
func (o ElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput) MappingNestedObjectsLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigIndexTemplate) *string {
		if v == nil {
			return nil
		}
		return v.MappingNestedObjectsLimit
	}).(pulumi.StringPtrOutput)
}

// The number of replicas each primary shard has.
func (o ElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput) NumberOfReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigIndexTemplate) *string {
		if v == nil {
			return nil
		}
		return v.NumberOfReplicas
	}).(pulumi.StringPtrOutput)
}

// The number of primary shards that an index should have.
func (o ElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput) NumberOfShards() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigIndexTemplate) *string {
		if v == nil {
			return nil
		}
		return v.NumberOfShards
	}).(pulumi.StringPtrOutput)
}

type ElasticSearchElasticsearchUserConfigKibana struct {
	// Timeout in milliseconds for requests
	// made by Kibana towards Elasticsearch.
	ElasticsearchRequestTimeout *string `pulumi:"elasticsearchRequestTimeout"`
	// Enable or disable Kibana.
	Enabled *string `pulumi:"enabled"`
	// Limits the maximum amount of memory (in MiB) the
	// Kibana process can use. This sets the maxOldSpaceSize option of the nodejs running
	// the Kibana. Note: the memory reserved by Kibana is not available for Elasticsearch.
	MaxOldSpaceSize *string `pulumi:"maxOldSpaceSize"`
}

// ElasticSearchElasticsearchUserConfigKibanaInput is an input type that accepts ElasticSearchElasticsearchUserConfigKibanaArgs and ElasticSearchElasticsearchUserConfigKibanaOutput values.
// You can construct a concrete instance of `ElasticSearchElasticsearchUserConfigKibanaInput` via:
//
//          ElasticSearchElasticsearchUserConfigKibanaArgs{...}
type ElasticSearchElasticsearchUserConfigKibanaInput interface {
	pulumi.Input

	ToElasticSearchElasticsearchUserConfigKibanaOutput() ElasticSearchElasticsearchUserConfigKibanaOutput
	ToElasticSearchElasticsearchUserConfigKibanaOutputWithContext(context.Context) ElasticSearchElasticsearchUserConfigKibanaOutput
}

type ElasticSearchElasticsearchUserConfigKibanaArgs struct {
	// Timeout in milliseconds for requests
	// made by Kibana towards Elasticsearch.
	ElasticsearchRequestTimeout pulumi.StringPtrInput `pulumi:"elasticsearchRequestTimeout"`
	// Enable or disable Kibana.
	Enabled pulumi.StringPtrInput `pulumi:"enabled"`
	// Limits the maximum amount of memory (in MiB) the
	// Kibana process can use. This sets the maxOldSpaceSize option of the nodejs running
	// the Kibana. Note: the memory reserved by Kibana is not available for Elasticsearch.
	MaxOldSpaceSize pulumi.StringPtrInput `pulumi:"maxOldSpaceSize"`
}

func (ElasticSearchElasticsearchUserConfigKibanaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSearchElasticsearchUserConfigKibana)(nil)).Elem()
}

func (i ElasticSearchElasticsearchUserConfigKibanaArgs) ToElasticSearchElasticsearchUserConfigKibanaOutput() ElasticSearchElasticsearchUserConfigKibanaOutput {
	return i.ToElasticSearchElasticsearchUserConfigKibanaOutputWithContext(context.Background())
}

func (i ElasticSearchElasticsearchUserConfigKibanaArgs) ToElasticSearchElasticsearchUserConfigKibanaOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigKibanaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchElasticsearchUserConfigKibanaOutput)
}

func (i ElasticSearchElasticsearchUserConfigKibanaArgs) ToElasticSearchElasticsearchUserConfigKibanaPtrOutput() ElasticSearchElasticsearchUserConfigKibanaPtrOutput {
	return i.ToElasticSearchElasticsearchUserConfigKibanaPtrOutputWithContext(context.Background())
}

func (i ElasticSearchElasticsearchUserConfigKibanaArgs) ToElasticSearchElasticsearchUserConfigKibanaPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigKibanaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchElasticsearchUserConfigKibanaOutput).ToElasticSearchElasticsearchUserConfigKibanaPtrOutputWithContext(ctx)
}

// ElasticSearchElasticsearchUserConfigKibanaPtrInput is an input type that accepts ElasticSearchElasticsearchUserConfigKibanaArgs, ElasticSearchElasticsearchUserConfigKibanaPtr and ElasticSearchElasticsearchUserConfigKibanaPtrOutput values.
// You can construct a concrete instance of `ElasticSearchElasticsearchUserConfigKibanaPtrInput` via:
//
//          ElasticSearchElasticsearchUserConfigKibanaArgs{...}
//
//  or:
//
//          nil
type ElasticSearchElasticsearchUserConfigKibanaPtrInput interface {
	pulumi.Input

	ToElasticSearchElasticsearchUserConfigKibanaPtrOutput() ElasticSearchElasticsearchUserConfigKibanaPtrOutput
	ToElasticSearchElasticsearchUserConfigKibanaPtrOutputWithContext(context.Context) ElasticSearchElasticsearchUserConfigKibanaPtrOutput
}

type elasticSearchElasticsearchUserConfigKibanaPtrType ElasticSearchElasticsearchUserConfigKibanaArgs

func ElasticSearchElasticsearchUserConfigKibanaPtr(v *ElasticSearchElasticsearchUserConfigKibanaArgs) ElasticSearchElasticsearchUserConfigKibanaPtrInput {
	return (*elasticSearchElasticsearchUserConfigKibanaPtrType)(v)
}

func (*elasticSearchElasticsearchUserConfigKibanaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticSearchElasticsearchUserConfigKibana)(nil)).Elem()
}

func (i *elasticSearchElasticsearchUserConfigKibanaPtrType) ToElasticSearchElasticsearchUserConfigKibanaPtrOutput() ElasticSearchElasticsearchUserConfigKibanaPtrOutput {
	return i.ToElasticSearchElasticsearchUserConfigKibanaPtrOutputWithContext(context.Background())
}

func (i *elasticSearchElasticsearchUserConfigKibanaPtrType) ToElasticSearchElasticsearchUserConfigKibanaPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigKibanaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchElasticsearchUserConfigKibanaPtrOutput)
}

type ElasticSearchElasticsearchUserConfigKibanaOutput struct{ *pulumi.OutputState }

func (ElasticSearchElasticsearchUserConfigKibanaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSearchElasticsearchUserConfigKibana)(nil)).Elem()
}

func (o ElasticSearchElasticsearchUserConfigKibanaOutput) ToElasticSearchElasticsearchUserConfigKibanaOutput() ElasticSearchElasticsearchUserConfigKibanaOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigKibanaOutput) ToElasticSearchElasticsearchUserConfigKibanaOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigKibanaOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigKibanaOutput) ToElasticSearchElasticsearchUserConfigKibanaPtrOutput() ElasticSearchElasticsearchUserConfigKibanaPtrOutput {
	return o.ToElasticSearchElasticsearchUserConfigKibanaPtrOutputWithContext(context.Background())
}

func (o ElasticSearchElasticsearchUserConfigKibanaOutput) ToElasticSearchElasticsearchUserConfigKibanaPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigKibanaPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigKibana) *ElasticSearchElasticsearchUserConfigKibana {
		return &v
	}).(ElasticSearchElasticsearchUserConfigKibanaPtrOutput)
}

// Timeout in milliseconds for requests
// made by Kibana towards Elasticsearch.
func (o ElasticSearchElasticsearchUserConfigKibanaOutput) ElasticsearchRequestTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigKibana) *string { return v.ElasticsearchRequestTimeout }).(pulumi.StringPtrOutput)
}

// Enable or disable Kibana.
func (o ElasticSearchElasticsearchUserConfigKibanaOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigKibana) *string { return v.Enabled }).(pulumi.StringPtrOutput)
}

// Limits the maximum amount of memory (in MiB) the
// Kibana process can use. This sets the maxOldSpaceSize option of the nodejs running
// the Kibana. Note: the memory reserved by Kibana is not available for Elasticsearch.
func (o ElasticSearchElasticsearchUserConfigKibanaOutput) MaxOldSpaceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigKibana) *string { return v.MaxOldSpaceSize }).(pulumi.StringPtrOutput)
}

type ElasticSearchElasticsearchUserConfigKibanaPtrOutput struct{ *pulumi.OutputState }

func (ElasticSearchElasticsearchUserConfigKibanaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticSearchElasticsearchUserConfigKibana)(nil)).Elem()
}

func (o ElasticSearchElasticsearchUserConfigKibanaPtrOutput) ToElasticSearchElasticsearchUserConfigKibanaPtrOutput() ElasticSearchElasticsearchUserConfigKibanaPtrOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigKibanaPtrOutput) ToElasticSearchElasticsearchUserConfigKibanaPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigKibanaPtrOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigKibanaPtrOutput) Elem() ElasticSearchElasticsearchUserConfigKibanaOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigKibana) ElasticSearchElasticsearchUserConfigKibana {
		return *v
	}).(ElasticSearchElasticsearchUserConfigKibanaOutput)
}

// Timeout in milliseconds for requests
// made by Kibana towards Elasticsearch.
func (o ElasticSearchElasticsearchUserConfigKibanaPtrOutput) ElasticsearchRequestTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigKibana) *string {
		if v == nil {
			return nil
		}
		return v.ElasticsearchRequestTimeout
	}).(pulumi.StringPtrOutput)
}

// Enable or disable Kibana.
func (o ElasticSearchElasticsearchUserConfigKibanaPtrOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigKibana) *string {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.StringPtrOutput)
}

// Limits the maximum amount of memory (in MiB) the
// Kibana process can use. This sets the maxOldSpaceSize option of the nodejs running
// the Kibana. Note: the memory reserved by Kibana is not available for Elasticsearch.
func (o ElasticSearchElasticsearchUserConfigKibanaPtrOutput) MaxOldSpaceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigKibana) *string {
		if v == nil {
			return nil
		}
		return v.MaxOldSpaceSize
	}).(pulumi.StringPtrOutput)
}

type ElasticSearchElasticsearchUserConfigPrivateAccess struct {
	// Allow clients to connect to elasticsearch from the public
	// internet for service nodes that are in a project VPC or another type of private network.
	Elasticsearch *string `pulumi:"elasticsearch"`
	// Allow clients to connect to kibana from the public internet for
	// service nodes that are in a project VPC or another type of private network.
	Kibana *string `pulumi:"kibana"`
	// Allow clients to connect to prometheus from the public
	// internet for service nodes that are in a project VPC or another type of private network.
	Prometheus *string `pulumi:"prometheus"`
}

// ElasticSearchElasticsearchUserConfigPrivateAccessInput is an input type that accepts ElasticSearchElasticsearchUserConfigPrivateAccessArgs and ElasticSearchElasticsearchUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `ElasticSearchElasticsearchUserConfigPrivateAccessInput` via:
//
//          ElasticSearchElasticsearchUserConfigPrivateAccessArgs{...}
type ElasticSearchElasticsearchUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToElasticSearchElasticsearchUserConfigPrivateAccessOutput() ElasticSearchElasticsearchUserConfigPrivateAccessOutput
	ToElasticSearchElasticsearchUserConfigPrivateAccessOutputWithContext(context.Context) ElasticSearchElasticsearchUserConfigPrivateAccessOutput
}

type ElasticSearchElasticsearchUserConfigPrivateAccessArgs struct {
	// Allow clients to connect to elasticsearch from the public
	// internet for service nodes that are in a project VPC or another type of private network.
	Elasticsearch pulumi.StringPtrInput `pulumi:"elasticsearch"`
	// Allow clients to connect to kibana from the public internet for
	// service nodes that are in a project VPC or another type of private network.
	Kibana pulumi.StringPtrInput `pulumi:"kibana"`
	// Allow clients to connect to prometheus from the public
	// internet for service nodes that are in a project VPC or another type of private network.
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (ElasticSearchElasticsearchUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSearchElasticsearchUserConfigPrivateAccess)(nil)).Elem()
}

func (i ElasticSearchElasticsearchUserConfigPrivateAccessArgs) ToElasticSearchElasticsearchUserConfigPrivateAccessOutput() ElasticSearchElasticsearchUserConfigPrivateAccessOutput {
	return i.ToElasticSearchElasticsearchUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i ElasticSearchElasticsearchUserConfigPrivateAccessArgs) ToElasticSearchElasticsearchUserConfigPrivateAccessOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchElasticsearchUserConfigPrivateAccessOutput)
}

func (i ElasticSearchElasticsearchUserConfigPrivateAccessArgs) ToElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput() ElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput {
	return i.ToElasticSearchElasticsearchUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i ElasticSearchElasticsearchUserConfigPrivateAccessArgs) ToElasticSearchElasticsearchUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchElasticsearchUserConfigPrivateAccessOutput).ToElasticSearchElasticsearchUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// ElasticSearchElasticsearchUserConfigPrivateAccessPtrInput is an input type that accepts ElasticSearchElasticsearchUserConfigPrivateAccessArgs, ElasticSearchElasticsearchUserConfigPrivateAccessPtr and ElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `ElasticSearchElasticsearchUserConfigPrivateAccessPtrInput` via:
//
//          ElasticSearchElasticsearchUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type ElasticSearchElasticsearchUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput() ElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput
	ToElasticSearchElasticsearchUserConfigPrivateAccessPtrOutputWithContext(context.Context) ElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput
}

type elasticSearchElasticsearchUserConfigPrivateAccessPtrType ElasticSearchElasticsearchUserConfigPrivateAccessArgs

func ElasticSearchElasticsearchUserConfigPrivateAccessPtr(v *ElasticSearchElasticsearchUserConfigPrivateAccessArgs) ElasticSearchElasticsearchUserConfigPrivateAccessPtrInput {
	return (*elasticSearchElasticsearchUserConfigPrivateAccessPtrType)(v)
}

func (*elasticSearchElasticsearchUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticSearchElasticsearchUserConfigPrivateAccess)(nil)).Elem()
}

func (i *elasticSearchElasticsearchUserConfigPrivateAccessPtrType) ToElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput() ElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput {
	return i.ToElasticSearchElasticsearchUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *elasticSearchElasticsearchUserConfigPrivateAccessPtrType) ToElasticSearchElasticsearchUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput)
}

type ElasticSearchElasticsearchUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (ElasticSearchElasticsearchUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSearchElasticsearchUserConfigPrivateAccess)(nil)).Elem()
}

func (o ElasticSearchElasticsearchUserConfigPrivateAccessOutput) ToElasticSearchElasticsearchUserConfigPrivateAccessOutput() ElasticSearchElasticsearchUserConfigPrivateAccessOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigPrivateAccessOutput) ToElasticSearchElasticsearchUserConfigPrivateAccessOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigPrivateAccessOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigPrivateAccessOutput) ToElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput() ElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput {
	return o.ToElasticSearchElasticsearchUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o ElasticSearchElasticsearchUserConfigPrivateAccessOutput) ToElasticSearchElasticsearchUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigPrivateAccess) *ElasticSearchElasticsearchUserConfigPrivateAccess {
		return &v
	}).(ElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput)
}

// Allow clients to connect to elasticsearch from the public
// internet for service nodes that are in a project VPC or another type of private network.
func (o ElasticSearchElasticsearchUserConfigPrivateAccessOutput) Elasticsearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigPrivateAccess) *string { return v.Elasticsearch }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to kibana from the public internet for
// service nodes that are in a project VPC or another type of private network.
func (o ElasticSearchElasticsearchUserConfigPrivateAccessOutput) Kibana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigPrivateAccess) *string { return v.Kibana }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public
// internet for service nodes that are in a project VPC or another type of private network.
func (o ElasticSearchElasticsearchUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type ElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (ElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticSearchElasticsearchUserConfigPrivateAccess)(nil)).Elem()
}

func (o ElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput) ToElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput() ElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput) ToElasticSearchElasticsearchUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput) Elem() ElasticSearchElasticsearchUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigPrivateAccess) ElasticSearchElasticsearchUserConfigPrivateAccess {
		return *v
	}).(ElasticSearchElasticsearchUserConfigPrivateAccessOutput)
}

// Allow clients to connect to elasticsearch from the public
// internet for service nodes that are in a project VPC or another type of private network.
func (o ElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput) Elasticsearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Elasticsearch
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to kibana from the public internet for
// service nodes that are in a project VPC or another type of private network.
func (o ElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput) Kibana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Kibana
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public
// internet for service nodes that are in a project VPC or another type of private network.
func (o ElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type ElasticSearchElasticsearchUserConfigPrivatelinkAccess struct {
	// Allow clients to connect to elasticsearch from the public
	// internet for service nodes that are in a project VPC or another type of private network.
	Elasticsearch *string `pulumi:"elasticsearch"`
	// Allow clients to connect to kibana from the public internet for
	// service nodes that are in a project VPC or another type of private network.
	Kibana *string `pulumi:"kibana"`
}

// ElasticSearchElasticsearchUserConfigPrivatelinkAccessInput is an input type that accepts ElasticSearchElasticsearchUserConfigPrivatelinkAccessArgs and ElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `ElasticSearchElasticsearchUserConfigPrivatelinkAccessInput` via:
//
//          ElasticSearchElasticsearchUserConfigPrivatelinkAccessArgs{...}
type ElasticSearchElasticsearchUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput() ElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput
	ToElasticSearchElasticsearchUserConfigPrivatelinkAccessOutputWithContext(context.Context) ElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput
}

type ElasticSearchElasticsearchUserConfigPrivatelinkAccessArgs struct {
	// Allow clients to connect to elasticsearch from the public
	// internet for service nodes that are in a project VPC or another type of private network.
	Elasticsearch pulumi.StringPtrInput `pulumi:"elasticsearch"`
	// Allow clients to connect to kibana from the public internet for
	// service nodes that are in a project VPC or another type of private network.
	Kibana pulumi.StringPtrInput `pulumi:"kibana"`
}

func (ElasticSearchElasticsearchUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSearchElasticsearchUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i ElasticSearchElasticsearchUserConfigPrivatelinkAccessArgs) ToElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput() ElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput {
	return i.ToElasticSearchElasticsearchUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i ElasticSearchElasticsearchUserConfigPrivatelinkAccessArgs) ToElasticSearchElasticsearchUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput)
}

func (i ElasticSearchElasticsearchUserConfigPrivatelinkAccessArgs) ToElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput() ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return i.ToElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i ElasticSearchElasticsearchUserConfigPrivatelinkAccessArgs) ToElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput).ToElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrInput is an input type that accepts ElasticSearchElasticsearchUserConfigPrivatelinkAccessArgs, ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtr and ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrInput` via:
//
//          ElasticSearchElasticsearchUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput() ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput
	ToElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput
}

type elasticSearchElasticsearchUserConfigPrivatelinkAccessPtrType ElasticSearchElasticsearchUserConfigPrivatelinkAccessArgs

func ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtr(v *ElasticSearchElasticsearchUserConfigPrivatelinkAccessArgs) ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrInput {
	return (*elasticSearchElasticsearchUserConfigPrivatelinkAccessPtrType)(v)
}

func (*elasticSearchElasticsearchUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticSearchElasticsearchUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *elasticSearchElasticsearchUserConfigPrivatelinkAccessPtrType) ToElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput() ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return i.ToElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *elasticSearchElasticsearchUserConfigPrivatelinkAccessPtrType) ToElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput)
}

type ElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (ElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSearchElasticsearchUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o ElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput) ToElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput() ElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput) ToElasticSearchElasticsearchUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput) ToElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput() ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return o.ToElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o ElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput) ToElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigPrivatelinkAccess) *ElasticSearchElasticsearchUserConfigPrivatelinkAccess {
		return &v
	}).(ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput)
}

// Allow clients to connect to elasticsearch from the public
// internet for service nodes that are in a project VPC or another type of private network.
func (o ElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput) Elasticsearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigPrivatelinkAccess) *string { return v.Elasticsearch }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to kibana from the public internet for
// service nodes that are in a project VPC or another type of private network.
func (o ElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput) Kibana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigPrivatelinkAccess) *string { return v.Kibana }).(pulumi.StringPtrOutput)
}

type ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticSearchElasticsearchUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput) ToElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput() ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput) ToElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput) Elem() ElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigPrivatelinkAccess) ElasticSearchElasticsearchUserConfigPrivatelinkAccess {
		return *v
	}).(ElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput)
}

// Allow clients to connect to elasticsearch from the public
// internet for service nodes that are in a project VPC or another type of private network.
func (o ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput) Elasticsearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Elasticsearch
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to kibana from the public internet for
// service nodes that are in a project VPC or another type of private network.
func (o ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput) Kibana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Kibana
	}).(pulumi.StringPtrOutput)
}

type ElasticSearchElasticsearchUserConfigPublicAccess struct {
	// Allow clients to connect to elasticsearch from the public
	// internet for service nodes that are in a project VPC or another type of private network.
	Elasticsearch *string `pulumi:"elasticsearch"`
	// Allow clients to connect to kibana from the public internet for
	// service nodes that are in a project VPC or another type of private network.
	Kibana *string `pulumi:"kibana"`
	// Allow clients to connect to prometheus from the public
	// internet for service nodes that are in a project VPC or another type of private network.
	Prometheus *string `pulumi:"prometheus"`
}

// ElasticSearchElasticsearchUserConfigPublicAccessInput is an input type that accepts ElasticSearchElasticsearchUserConfigPublicAccessArgs and ElasticSearchElasticsearchUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `ElasticSearchElasticsearchUserConfigPublicAccessInput` via:
//
//          ElasticSearchElasticsearchUserConfigPublicAccessArgs{...}
type ElasticSearchElasticsearchUserConfigPublicAccessInput interface {
	pulumi.Input

	ToElasticSearchElasticsearchUserConfigPublicAccessOutput() ElasticSearchElasticsearchUserConfigPublicAccessOutput
	ToElasticSearchElasticsearchUserConfigPublicAccessOutputWithContext(context.Context) ElasticSearchElasticsearchUserConfigPublicAccessOutput
}

type ElasticSearchElasticsearchUserConfigPublicAccessArgs struct {
	// Allow clients to connect to elasticsearch from the public
	// internet for service nodes that are in a project VPC or another type of private network.
	Elasticsearch pulumi.StringPtrInput `pulumi:"elasticsearch"`
	// Allow clients to connect to kibana from the public internet for
	// service nodes that are in a project VPC or another type of private network.
	Kibana pulumi.StringPtrInput `pulumi:"kibana"`
	// Allow clients to connect to prometheus from the public
	// internet for service nodes that are in a project VPC or another type of private network.
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (ElasticSearchElasticsearchUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSearchElasticsearchUserConfigPublicAccess)(nil)).Elem()
}

func (i ElasticSearchElasticsearchUserConfigPublicAccessArgs) ToElasticSearchElasticsearchUserConfigPublicAccessOutput() ElasticSearchElasticsearchUserConfigPublicAccessOutput {
	return i.ToElasticSearchElasticsearchUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i ElasticSearchElasticsearchUserConfigPublicAccessArgs) ToElasticSearchElasticsearchUserConfigPublicAccessOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchElasticsearchUserConfigPublicAccessOutput)
}

func (i ElasticSearchElasticsearchUserConfigPublicAccessArgs) ToElasticSearchElasticsearchUserConfigPublicAccessPtrOutput() ElasticSearchElasticsearchUserConfigPublicAccessPtrOutput {
	return i.ToElasticSearchElasticsearchUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i ElasticSearchElasticsearchUserConfigPublicAccessArgs) ToElasticSearchElasticsearchUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchElasticsearchUserConfigPublicAccessOutput).ToElasticSearchElasticsearchUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// ElasticSearchElasticsearchUserConfigPublicAccessPtrInput is an input type that accepts ElasticSearchElasticsearchUserConfigPublicAccessArgs, ElasticSearchElasticsearchUserConfigPublicAccessPtr and ElasticSearchElasticsearchUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `ElasticSearchElasticsearchUserConfigPublicAccessPtrInput` via:
//
//          ElasticSearchElasticsearchUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type ElasticSearchElasticsearchUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToElasticSearchElasticsearchUserConfigPublicAccessPtrOutput() ElasticSearchElasticsearchUserConfigPublicAccessPtrOutput
	ToElasticSearchElasticsearchUserConfigPublicAccessPtrOutputWithContext(context.Context) ElasticSearchElasticsearchUserConfigPublicAccessPtrOutput
}

type elasticSearchElasticsearchUserConfigPublicAccessPtrType ElasticSearchElasticsearchUserConfigPublicAccessArgs

func ElasticSearchElasticsearchUserConfigPublicAccessPtr(v *ElasticSearchElasticsearchUserConfigPublicAccessArgs) ElasticSearchElasticsearchUserConfigPublicAccessPtrInput {
	return (*elasticSearchElasticsearchUserConfigPublicAccessPtrType)(v)
}

func (*elasticSearchElasticsearchUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticSearchElasticsearchUserConfigPublicAccess)(nil)).Elem()
}

func (i *elasticSearchElasticsearchUserConfigPublicAccessPtrType) ToElasticSearchElasticsearchUserConfigPublicAccessPtrOutput() ElasticSearchElasticsearchUserConfigPublicAccessPtrOutput {
	return i.ToElasticSearchElasticsearchUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *elasticSearchElasticsearchUserConfigPublicAccessPtrType) ToElasticSearchElasticsearchUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchElasticsearchUserConfigPublicAccessPtrOutput)
}

type ElasticSearchElasticsearchUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (ElasticSearchElasticsearchUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSearchElasticsearchUserConfigPublicAccess)(nil)).Elem()
}

func (o ElasticSearchElasticsearchUserConfigPublicAccessOutput) ToElasticSearchElasticsearchUserConfigPublicAccessOutput() ElasticSearchElasticsearchUserConfigPublicAccessOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigPublicAccessOutput) ToElasticSearchElasticsearchUserConfigPublicAccessOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigPublicAccessOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigPublicAccessOutput) ToElasticSearchElasticsearchUserConfigPublicAccessPtrOutput() ElasticSearchElasticsearchUserConfigPublicAccessPtrOutput {
	return o.ToElasticSearchElasticsearchUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o ElasticSearchElasticsearchUserConfigPublicAccessOutput) ToElasticSearchElasticsearchUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigPublicAccess) *ElasticSearchElasticsearchUserConfigPublicAccess {
		return &v
	}).(ElasticSearchElasticsearchUserConfigPublicAccessPtrOutput)
}

// Allow clients to connect to elasticsearch from the public
// internet for service nodes that are in a project VPC or another type of private network.
func (o ElasticSearchElasticsearchUserConfigPublicAccessOutput) Elasticsearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigPublicAccess) *string { return v.Elasticsearch }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to kibana from the public internet for
// service nodes that are in a project VPC or another type of private network.
func (o ElasticSearchElasticsearchUserConfigPublicAccessOutput) Kibana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigPublicAccess) *string { return v.Kibana }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public
// internet for service nodes that are in a project VPC or another type of private network.
func (o ElasticSearchElasticsearchUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticSearchElasticsearchUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type ElasticSearchElasticsearchUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (ElasticSearchElasticsearchUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticSearchElasticsearchUserConfigPublicAccess)(nil)).Elem()
}

func (o ElasticSearchElasticsearchUserConfigPublicAccessPtrOutput) ToElasticSearchElasticsearchUserConfigPublicAccessPtrOutput() ElasticSearchElasticsearchUserConfigPublicAccessPtrOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigPublicAccessPtrOutput) ToElasticSearchElasticsearchUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ElasticSearchElasticsearchUserConfigPublicAccessPtrOutput {
	return o
}

func (o ElasticSearchElasticsearchUserConfigPublicAccessPtrOutput) Elem() ElasticSearchElasticsearchUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigPublicAccess) ElasticSearchElasticsearchUserConfigPublicAccess {
		return *v
	}).(ElasticSearchElasticsearchUserConfigPublicAccessOutput)
}

// Allow clients to connect to elasticsearch from the public
// internet for service nodes that are in a project VPC or another type of private network.
func (o ElasticSearchElasticsearchUserConfigPublicAccessPtrOutput) Elasticsearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Elasticsearch
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to kibana from the public internet for
// service nodes that are in a project VPC or another type of private network.
func (o ElasticSearchElasticsearchUserConfigPublicAccessPtrOutput) Kibana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Kibana
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public
// internet for service nodes that are in a project VPC or another type of private network.
func (o ElasticSearchElasticsearchUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticSearchElasticsearchUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type ElasticSearchServiceIntegration struct {
	IntegrationType   string `pulumi:"integrationType"`
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// ElasticSearchServiceIntegrationInput is an input type that accepts ElasticSearchServiceIntegrationArgs and ElasticSearchServiceIntegrationOutput values.
// You can construct a concrete instance of `ElasticSearchServiceIntegrationInput` via:
//
//          ElasticSearchServiceIntegrationArgs{...}
type ElasticSearchServiceIntegrationInput interface {
	pulumi.Input

	ToElasticSearchServiceIntegrationOutput() ElasticSearchServiceIntegrationOutput
	ToElasticSearchServiceIntegrationOutputWithContext(context.Context) ElasticSearchServiceIntegrationOutput
}

type ElasticSearchServiceIntegrationArgs struct {
	IntegrationType   pulumi.StringInput `pulumi:"integrationType"`
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (ElasticSearchServiceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSearchServiceIntegration)(nil)).Elem()
}

func (i ElasticSearchServiceIntegrationArgs) ToElasticSearchServiceIntegrationOutput() ElasticSearchServiceIntegrationOutput {
	return i.ToElasticSearchServiceIntegrationOutputWithContext(context.Background())
}

func (i ElasticSearchServiceIntegrationArgs) ToElasticSearchServiceIntegrationOutputWithContext(ctx context.Context) ElasticSearchServiceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchServiceIntegrationOutput)
}

// ElasticSearchServiceIntegrationArrayInput is an input type that accepts ElasticSearchServiceIntegrationArray and ElasticSearchServiceIntegrationArrayOutput values.
// You can construct a concrete instance of `ElasticSearchServiceIntegrationArrayInput` via:
//
//          ElasticSearchServiceIntegrationArray{ ElasticSearchServiceIntegrationArgs{...} }
type ElasticSearchServiceIntegrationArrayInput interface {
	pulumi.Input

	ToElasticSearchServiceIntegrationArrayOutput() ElasticSearchServiceIntegrationArrayOutput
	ToElasticSearchServiceIntegrationArrayOutputWithContext(context.Context) ElasticSearchServiceIntegrationArrayOutput
}

type ElasticSearchServiceIntegrationArray []ElasticSearchServiceIntegrationInput

func (ElasticSearchServiceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticSearchServiceIntegration)(nil)).Elem()
}

func (i ElasticSearchServiceIntegrationArray) ToElasticSearchServiceIntegrationArrayOutput() ElasticSearchServiceIntegrationArrayOutput {
	return i.ToElasticSearchServiceIntegrationArrayOutputWithContext(context.Background())
}

func (i ElasticSearchServiceIntegrationArray) ToElasticSearchServiceIntegrationArrayOutputWithContext(ctx context.Context) ElasticSearchServiceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticSearchServiceIntegrationArrayOutput)
}

type ElasticSearchServiceIntegrationOutput struct{ *pulumi.OutputState }

func (ElasticSearchServiceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSearchServiceIntegration)(nil)).Elem()
}

func (o ElasticSearchServiceIntegrationOutput) ToElasticSearchServiceIntegrationOutput() ElasticSearchServiceIntegrationOutput {
	return o
}

func (o ElasticSearchServiceIntegrationOutput) ToElasticSearchServiceIntegrationOutputWithContext(ctx context.Context) ElasticSearchServiceIntegrationOutput {
	return o
}

func (o ElasticSearchServiceIntegrationOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticSearchServiceIntegration) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o ElasticSearchServiceIntegrationOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticSearchServiceIntegration) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

type ElasticSearchServiceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (ElasticSearchServiceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticSearchServiceIntegration)(nil)).Elem()
}

func (o ElasticSearchServiceIntegrationArrayOutput) ToElasticSearchServiceIntegrationArrayOutput() ElasticSearchServiceIntegrationArrayOutput {
	return o
}

func (o ElasticSearchServiceIntegrationArrayOutput) ToElasticSearchServiceIntegrationArrayOutputWithContext(ctx context.Context) ElasticSearchServiceIntegrationArrayOutput {
	return o
}

func (o ElasticSearchServiceIntegrationArrayOutput) Index(i pulumi.IntInput) ElasticSearchServiceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticSearchServiceIntegration {
		return vs[0].([]ElasticSearchServiceIntegration)[vs[1].(int)]
	}).(ElasticSearchServiceIntegrationOutput)
}

type GrafanaComponent struct {
	Component *string `pulumi:"component"`
	// Server hostname or IP
	Host                      *string `pulumi:"host"`
	KafkaAuthenticationMethod *string `pulumi:"kafkaAuthenticationMethod"`
	// SMTP server port
	Port  *int    `pulumi:"port"`
	Route *string `pulumi:"route"`
	Ssl   *bool   `pulumi:"ssl"`
	Usage *string `pulumi:"usage"`
}

// GrafanaComponentInput is an input type that accepts GrafanaComponentArgs and GrafanaComponentOutput values.
// You can construct a concrete instance of `GrafanaComponentInput` via:
//
//          GrafanaComponentArgs{...}
type GrafanaComponentInput interface {
	pulumi.Input

	ToGrafanaComponentOutput() GrafanaComponentOutput
	ToGrafanaComponentOutputWithContext(context.Context) GrafanaComponentOutput
}

type GrafanaComponentArgs struct {
	Component pulumi.StringPtrInput `pulumi:"component"`
	// Server hostname or IP
	Host                      pulumi.StringPtrInput `pulumi:"host"`
	KafkaAuthenticationMethod pulumi.StringPtrInput `pulumi:"kafkaAuthenticationMethod"`
	// SMTP server port
	Port  pulumi.IntPtrInput    `pulumi:"port"`
	Route pulumi.StringPtrInput `pulumi:"route"`
	Ssl   pulumi.BoolPtrInput   `pulumi:"ssl"`
	Usage pulumi.StringPtrInput `pulumi:"usage"`
}

func (GrafanaComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaComponent)(nil)).Elem()
}

func (i GrafanaComponentArgs) ToGrafanaComponentOutput() GrafanaComponentOutput {
	return i.ToGrafanaComponentOutputWithContext(context.Background())
}

func (i GrafanaComponentArgs) ToGrafanaComponentOutputWithContext(ctx context.Context) GrafanaComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaComponentOutput)
}

// GrafanaComponentArrayInput is an input type that accepts GrafanaComponentArray and GrafanaComponentArrayOutput values.
// You can construct a concrete instance of `GrafanaComponentArrayInput` via:
//
//          GrafanaComponentArray{ GrafanaComponentArgs{...} }
type GrafanaComponentArrayInput interface {
	pulumi.Input

	ToGrafanaComponentArrayOutput() GrafanaComponentArrayOutput
	ToGrafanaComponentArrayOutputWithContext(context.Context) GrafanaComponentArrayOutput
}

type GrafanaComponentArray []GrafanaComponentInput

func (GrafanaComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GrafanaComponent)(nil)).Elem()
}

func (i GrafanaComponentArray) ToGrafanaComponentArrayOutput() GrafanaComponentArrayOutput {
	return i.ToGrafanaComponentArrayOutputWithContext(context.Background())
}

func (i GrafanaComponentArray) ToGrafanaComponentArrayOutputWithContext(ctx context.Context) GrafanaComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaComponentArrayOutput)
}

type GrafanaComponentOutput struct{ *pulumi.OutputState }

func (GrafanaComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaComponent)(nil)).Elem()
}

func (o GrafanaComponentOutput) ToGrafanaComponentOutput() GrafanaComponentOutput {
	return o
}

func (o GrafanaComponentOutput) ToGrafanaComponentOutputWithContext(ctx context.Context) GrafanaComponentOutput {
	return o
}

func (o GrafanaComponentOutput) Component() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaComponent) *string { return v.Component }).(pulumi.StringPtrOutput)
}

// Server hostname or IP
func (o GrafanaComponentOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaComponent) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o GrafanaComponentOutput) KafkaAuthenticationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaComponent) *string { return v.KafkaAuthenticationMethod }).(pulumi.StringPtrOutput)
}

// SMTP server port
func (o GrafanaComponentOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GrafanaComponent) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o GrafanaComponentOutput) Route() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaComponent) *string { return v.Route }).(pulumi.StringPtrOutput)
}

func (o GrafanaComponentOutput) Ssl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GrafanaComponent) *bool { return v.Ssl }).(pulumi.BoolPtrOutput)
}

func (o GrafanaComponentOutput) Usage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaComponent) *string { return v.Usage }).(pulumi.StringPtrOutput)
}

type GrafanaComponentArrayOutput struct{ *pulumi.OutputState }

func (GrafanaComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GrafanaComponent)(nil)).Elem()
}

func (o GrafanaComponentArrayOutput) ToGrafanaComponentArrayOutput() GrafanaComponentArrayOutput {
	return o
}

func (o GrafanaComponentArrayOutput) ToGrafanaComponentArrayOutputWithContext(ctx context.Context) GrafanaComponentArrayOutput {
	return o
}

func (o GrafanaComponentArrayOutput) Index(i pulumi.IntInput) GrafanaComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GrafanaComponent {
		return vs[0].([]GrafanaComponent)[vs[1].(int)]
	}).(GrafanaComponentOutput)
}

type GrafanaGrafana struct {
}

// GrafanaGrafanaInput is an input type that accepts GrafanaGrafanaArgs and GrafanaGrafanaOutput values.
// You can construct a concrete instance of `GrafanaGrafanaInput` via:
//
//          GrafanaGrafanaArgs{...}
type GrafanaGrafanaInput interface {
	pulumi.Input

	ToGrafanaGrafanaOutput() GrafanaGrafanaOutput
	ToGrafanaGrafanaOutputWithContext(context.Context) GrafanaGrafanaOutput
}

type GrafanaGrafanaArgs struct {
}

func (GrafanaGrafanaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaGrafana)(nil)).Elem()
}

func (i GrafanaGrafanaArgs) ToGrafanaGrafanaOutput() GrafanaGrafanaOutput {
	return i.ToGrafanaGrafanaOutputWithContext(context.Background())
}

func (i GrafanaGrafanaArgs) ToGrafanaGrafanaOutputWithContext(ctx context.Context) GrafanaGrafanaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaOutput)
}

func (i GrafanaGrafanaArgs) ToGrafanaGrafanaPtrOutput() GrafanaGrafanaPtrOutput {
	return i.ToGrafanaGrafanaPtrOutputWithContext(context.Background())
}

func (i GrafanaGrafanaArgs) ToGrafanaGrafanaPtrOutputWithContext(ctx context.Context) GrafanaGrafanaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaOutput).ToGrafanaGrafanaPtrOutputWithContext(ctx)
}

// GrafanaGrafanaPtrInput is an input type that accepts GrafanaGrafanaArgs, GrafanaGrafanaPtr and GrafanaGrafanaPtrOutput values.
// You can construct a concrete instance of `GrafanaGrafanaPtrInput` via:
//
//          GrafanaGrafanaArgs{...}
//
//  or:
//
//          nil
type GrafanaGrafanaPtrInput interface {
	pulumi.Input

	ToGrafanaGrafanaPtrOutput() GrafanaGrafanaPtrOutput
	ToGrafanaGrafanaPtrOutputWithContext(context.Context) GrafanaGrafanaPtrOutput
}

type grafanaGrafanaPtrType GrafanaGrafanaArgs

func GrafanaGrafanaPtr(v *GrafanaGrafanaArgs) GrafanaGrafanaPtrInput {
	return (*grafanaGrafanaPtrType)(v)
}

func (*grafanaGrafanaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaGrafana)(nil)).Elem()
}

func (i *grafanaGrafanaPtrType) ToGrafanaGrafanaPtrOutput() GrafanaGrafanaPtrOutput {
	return i.ToGrafanaGrafanaPtrOutputWithContext(context.Background())
}

func (i *grafanaGrafanaPtrType) ToGrafanaGrafanaPtrOutputWithContext(ctx context.Context) GrafanaGrafanaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaPtrOutput)
}

type GrafanaGrafanaOutput struct{ *pulumi.OutputState }

func (GrafanaGrafanaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaGrafana)(nil)).Elem()
}

func (o GrafanaGrafanaOutput) ToGrafanaGrafanaOutput() GrafanaGrafanaOutput {
	return o
}

func (o GrafanaGrafanaOutput) ToGrafanaGrafanaOutputWithContext(ctx context.Context) GrafanaGrafanaOutput {
	return o
}

func (o GrafanaGrafanaOutput) ToGrafanaGrafanaPtrOutput() GrafanaGrafanaPtrOutput {
	return o.ToGrafanaGrafanaPtrOutputWithContext(context.Background())
}

func (o GrafanaGrafanaOutput) ToGrafanaGrafanaPtrOutputWithContext(ctx context.Context) GrafanaGrafanaPtrOutput {
	return o.ApplyT(func(v GrafanaGrafana) *GrafanaGrafana {
		return &v
	}).(GrafanaGrafanaPtrOutput)
}

type GrafanaGrafanaPtrOutput struct{ *pulumi.OutputState }

func (GrafanaGrafanaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaGrafana)(nil)).Elem()
}

func (o GrafanaGrafanaPtrOutput) ToGrafanaGrafanaPtrOutput() GrafanaGrafanaPtrOutput {
	return o
}

func (o GrafanaGrafanaPtrOutput) ToGrafanaGrafanaPtrOutputWithContext(ctx context.Context) GrafanaGrafanaPtrOutput {
	return o
}

func (o GrafanaGrafanaPtrOutput) Elem() GrafanaGrafanaOutput {
	return o.ApplyT(func(v *GrafanaGrafana) GrafanaGrafana { return *v }).(GrafanaGrafanaOutput)
}

type GrafanaGrafanaUserConfig struct {
	// Enable or disable Grafana alerting functionality
	AlertingEnabled *string `pulumi:"alertingEnabled"`
	// Default error or timeout setting for new alerting rules
	AlertingErrorOrTimeout *string `pulumi:"alertingErrorOrTimeout"`
	// Default value for 'no data or null values' for
	// new alerting rules
	AlertingNodataOrNullvalues *string `pulumi:"alertingNodataOrNullvalues"`
	// Allow embedding Grafana dashboards with iframe/frame/object/embed
	// tags. Disabled by default to limit impact of clickjacking
	AllowEmbedding *string `pulumi:"allowEmbedding"`
	// Enable or disable basic authentication form, used by Grafana
	// built-in login.
	AuthBasicEnabled *string `pulumi:"authBasicEnabled"`
	// Generic OAuth integration.
	AuthGenericOauth *GrafanaGrafanaUserConfigAuthGenericOauth `pulumi:"authGenericOauth"`
	// Automatically sign-up users on successful sign-in
	AuthGithub *GrafanaGrafanaUserConfigAuthGithub `pulumi:"authGithub"`
	// GitLab Auth integration.
	AuthGitlab *GrafanaGrafanaUserConfigAuthGitlab `pulumi:"authGitlab"`
	// Google Auth integration
	AuthGoogle *GrafanaGrafanaUserConfigAuthGoogle `pulumi:"authGoogle"`
	// Cookie SameSite attribute: 'strict' prevents sending cookie for
	// cross-site requests, effectively disabling direct linking from other sites to Grafana. 'lax' is the default value.
	CookieSamesite *string `pulumi:"cookieSamesite"`
	// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
	CustomDomain *string `pulumi:"customDomain"`
	// Signed sequence of decimal numbers, followed
	// by a unit suffix (ms, s, m, h, d), e.g. 30s, 1h.
	DashboardsMinRefreshInterval *string `pulumi:"dashboardsMinRefreshInterval"`
	// Dashboard versions to keep per dashboard.
	DashboardsVersionsToKeep *string `pulumi:"dashboardsVersionsToKeep"`
	// Send 'X-Grafana-User' header to data source.
	DataproxySendUserHeader *string `pulumi:"dataproxySendUserHeader"`
	// Timeout for data proxy requests in seconds.
	DataproxyTimeout *string `pulumi:"dataproxyTimeout"`
	// Set to true to disable gravatar. Defaults to false
	// (gravatar is enabled).
	DisableGravatar *string `pulumi:"disableGravatar"`
	// Editors can manage folders, teams and dashboards created by them.
	EditorsCanAdmin *string `pulumi:"editorsCanAdmin"`
	// External image store settings
	ExternalImageStorage *GrafanaGrafanaUserConfigExternalImageStorage `pulumi:"externalImageStorage"`
	// Google Analytics Universal Analytics ID for tracking Grafana usage
	GoogleAnalyticsUaId *string `pulumi:"googleAnalyticsUaId"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
	IpFilters []string `pulumi:"ipFilters"`
	// Enable Grafana /metrics endpoint
	MetricsEnabled *string                                `pulumi:"metricsEnabled"`
	PrivateAccess  *GrafanaGrafanaUserConfigPrivateAccess `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess *GrafanaGrafanaUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom *string `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet.
	PublicAccess *GrafanaGrafanaUserConfigPublicAccess `pulumi:"publicAccess"`
	// Name of the basebackup to restore in forked service.
	RecoveryBasebackupName *string `pulumi:"recoveryBasebackupName"`
	// Name of another service to fork from. This has effect only
	// when a new service is being created.
	ServiceToForkFrom *string `pulumi:"serviceToForkFrom"`
	// SMTP server settings.
	SmtpServer *GrafanaGrafanaUserConfigSmtpServer `pulumi:"smtpServer"`
	// Auto-assign new users on signup to main organization.
	// Defaults to false.
	UserAutoAssignOrg *string `pulumi:"userAutoAssignOrg"`
	// Set role for new signups. Defaults to Viewer.
	UserAutoAssignOrgRole *string `pulumi:"userAutoAssignOrgRole"`
	// Users with view-only permission can edit but not save dashboards.
	ViewersCanEdit *string `pulumi:"viewersCanEdit"`
}

// GrafanaGrafanaUserConfigInput is an input type that accepts GrafanaGrafanaUserConfigArgs and GrafanaGrafanaUserConfigOutput values.
// You can construct a concrete instance of `GrafanaGrafanaUserConfigInput` via:
//
//          GrafanaGrafanaUserConfigArgs{...}
type GrafanaGrafanaUserConfigInput interface {
	pulumi.Input

	ToGrafanaGrafanaUserConfigOutput() GrafanaGrafanaUserConfigOutput
	ToGrafanaGrafanaUserConfigOutputWithContext(context.Context) GrafanaGrafanaUserConfigOutput
}

type GrafanaGrafanaUserConfigArgs struct {
	// Enable or disable Grafana alerting functionality
	AlertingEnabled pulumi.StringPtrInput `pulumi:"alertingEnabled"`
	// Default error or timeout setting for new alerting rules
	AlertingErrorOrTimeout pulumi.StringPtrInput `pulumi:"alertingErrorOrTimeout"`
	// Default value for 'no data or null values' for
	// new alerting rules
	AlertingNodataOrNullvalues pulumi.StringPtrInput `pulumi:"alertingNodataOrNullvalues"`
	// Allow embedding Grafana dashboards with iframe/frame/object/embed
	// tags. Disabled by default to limit impact of clickjacking
	AllowEmbedding pulumi.StringPtrInput `pulumi:"allowEmbedding"`
	// Enable or disable basic authentication form, used by Grafana
	// built-in login.
	AuthBasicEnabled pulumi.StringPtrInput `pulumi:"authBasicEnabled"`
	// Generic OAuth integration.
	AuthGenericOauth GrafanaGrafanaUserConfigAuthGenericOauthPtrInput `pulumi:"authGenericOauth"`
	// Automatically sign-up users on successful sign-in
	AuthGithub GrafanaGrafanaUserConfigAuthGithubPtrInput `pulumi:"authGithub"`
	// GitLab Auth integration.
	AuthGitlab GrafanaGrafanaUserConfigAuthGitlabPtrInput `pulumi:"authGitlab"`
	// Google Auth integration
	AuthGoogle GrafanaGrafanaUserConfigAuthGooglePtrInput `pulumi:"authGoogle"`
	// Cookie SameSite attribute: 'strict' prevents sending cookie for
	// cross-site requests, effectively disabling direct linking from other sites to Grafana. 'lax' is the default value.
	CookieSamesite pulumi.StringPtrInput `pulumi:"cookieSamesite"`
	// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
	CustomDomain pulumi.StringPtrInput `pulumi:"customDomain"`
	// Signed sequence of decimal numbers, followed
	// by a unit suffix (ms, s, m, h, d), e.g. 30s, 1h.
	DashboardsMinRefreshInterval pulumi.StringPtrInput `pulumi:"dashboardsMinRefreshInterval"`
	// Dashboard versions to keep per dashboard.
	DashboardsVersionsToKeep pulumi.StringPtrInput `pulumi:"dashboardsVersionsToKeep"`
	// Send 'X-Grafana-User' header to data source.
	DataproxySendUserHeader pulumi.StringPtrInput `pulumi:"dataproxySendUserHeader"`
	// Timeout for data proxy requests in seconds.
	DataproxyTimeout pulumi.StringPtrInput `pulumi:"dataproxyTimeout"`
	// Set to true to disable gravatar. Defaults to false
	// (gravatar is enabled).
	DisableGravatar pulumi.StringPtrInput `pulumi:"disableGravatar"`
	// Editors can manage folders, teams and dashboards created by them.
	EditorsCanAdmin pulumi.StringPtrInput `pulumi:"editorsCanAdmin"`
	// External image store settings
	ExternalImageStorage GrafanaGrafanaUserConfigExternalImageStoragePtrInput `pulumi:"externalImageStorage"`
	// Google Analytics Universal Analytics ID for tracking Grafana usage
	GoogleAnalyticsUaId pulumi.StringPtrInput `pulumi:"googleAnalyticsUaId"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// Enable Grafana /metrics endpoint
	MetricsEnabled pulumi.StringPtrInput                         `pulumi:"metricsEnabled"`
	PrivateAccess  GrafanaGrafanaUserConfigPrivateAccessPtrInput `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess GrafanaGrafanaUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom pulumi.StringPtrInput `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet.
	PublicAccess GrafanaGrafanaUserConfigPublicAccessPtrInput `pulumi:"publicAccess"`
	// Name of the basebackup to restore in forked service.
	RecoveryBasebackupName pulumi.StringPtrInput `pulumi:"recoveryBasebackupName"`
	// Name of another service to fork from. This has effect only
	// when a new service is being created.
	ServiceToForkFrom pulumi.StringPtrInput `pulumi:"serviceToForkFrom"`
	// SMTP server settings.
	SmtpServer GrafanaGrafanaUserConfigSmtpServerPtrInput `pulumi:"smtpServer"`
	// Auto-assign new users on signup to main organization.
	// Defaults to false.
	UserAutoAssignOrg pulumi.StringPtrInput `pulumi:"userAutoAssignOrg"`
	// Set role for new signups. Defaults to Viewer.
	UserAutoAssignOrgRole pulumi.StringPtrInput `pulumi:"userAutoAssignOrgRole"`
	// Users with view-only permission can edit but not save dashboards.
	ViewersCanEdit pulumi.StringPtrInput `pulumi:"viewersCanEdit"`
}

func (GrafanaGrafanaUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaGrafanaUserConfig)(nil)).Elem()
}

func (i GrafanaGrafanaUserConfigArgs) ToGrafanaGrafanaUserConfigOutput() GrafanaGrafanaUserConfigOutput {
	return i.ToGrafanaGrafanaUserConfigOutputWithContext(context.Background())
}

func (i GrafanaGrafanaUserConfigArgs) ToGrafanaGrafanaUserConfigOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigOutput)
}

func (i GrafanaGrafanaUserConfigArgs) ToGrafanaGrafanaUserConfigPtrOutput() GrafanaGrafanaUserConfigPtrOutput {
	return i.ToGrafanaGrafanaUserConfigPtrOutputWithContext(context.Background())
}

func (i GrafanaGrafanaUserConfigArgs) ToGrafanaGrafanaUserConfigPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigOutput).ToGrafanaGrafanaUserConfigPtrOutputWithContext(ctx)
}

// GrafanaGrafanaUserConfigPtrInput is an input type that accepts GrafanaGrafanaUserConfigArgs, GrafanaGrafanaUserConfigPtr and GrafanaGrafanaUserConfigPtrOutput values.
// You can construct a concrete instance of `GrafanaGrafanaUserConfigPtrInput` via:
//
//          GrafanaGrafanaUserConfigArgs{...}
//
//  or:
//
//          nil
type GrafanaGrafanaUserConfigPtrInput interface {
	pulumi.Input

	ToGrafanaGrafanaUserConfigPtrOutput() GrafanaGrafanaUserConfigPtrOutput
	ToGrafanaGrafanaUserConfigPtrOutputWithContext(context.Context) GrafanaGrafanaUserConfigPtrOutput
}

type grafanaGrafanaUserConfigPtrType GrafanaGrafanaUserConfigArgs

func GrafanaGrafanaUserConfigPtr(v *GrafanaGrafanaUserConfigArgs) GrafanaGrafanaUserConfigPtrInput {
	return (*grafanaGrafanaUserConfigPtrType)(v)
}

func (*grafanaGrafanaUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaGrafanaUserConfig)(nil)).Elem()
}

func (i *grafanaGrafanaUserConfigPtrType) ToGrafanaGrafanaUserConfigPtrOutput() GrafanaGrafanaUserConfigPtrOutput {
	return i.ToGrafanaGrafanaUserConfigPtrOutputWithContext(context.Background())
}

func (i *grafanaGrafanaUserConfigPtrType) ToGrafanaGrafanaUserConfigPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigPtrOutput)
}

type GrafanaGrafanaUserConfigOutput struct{ *pulumi.OutputState }

func (GrafanaGrafanaUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaGrafanaUserConfig)(nil)).Elem()
}

func (o GrafanaGrafanaUserConfigOutput) ToGrafanaGrafanaUserConfigOutput() GrafanaGrafanaUserConfigOutput {
	return o
}

func (o GrafanaGrafanaUserConfigOutput) ToGrafanaGrafanaUserConfigOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigOutput {
	return o
}

func (o GrafanaGrafanaUserConfigOutput) ToGrafanaGrafanaUserConfigPtrOutput() GrafanaGrafanaUserConfigPtrOutput {
	return o.ToGrafanaGrafanaUserConfigPtrOutputWithContext(context.Background())
}

func (o GrafanaGrafanaUserConfigOutput) ToGrafanaGrafanaUserConfigPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *GrafanaGrafanaUserConfig {
		return &v
	}).(GrafanaGrafanaUserConfigPtrOutput)
}

// Enable or disable Grafana alerting functionality
func (o GrafanaGrafanaUserConfigOutput) AlertingEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *string { return v.AlertingEnabled }).(pulumi.StringPtrOutput)
}

// Default error or timeout setting for new alerting rules
func (o GrafanaGrafanaUserConfigOutput) AlertingErrorOrTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *string { return v.AlertingErrorOrTimeout }).(pulumi.StringPtrOutput)
}

// Default value for 'no data or null values' for
// new alerting rules
func (o GrafanaGrafanaUserConfigOutput) AlertingNodataOrNullvalues() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *string { return v.AlertingNodataOrNullvalues }).(pulumi.StringPtrOutput)
}

// Allow embedding Grafana dashboards with iframe/frame/object/embed
// tags. Disabled by default to limit impact of clickjacking
func (o GrafanaGrafanaUserConfigOutput) AllowEmbedding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *string { return v.AllowEmbedding }).(pulumi.StringPtrOutput)
}

// Enable or disable basic authentication form, used by Grafana
// built-in login.
func (o GrafanaGrafanaUserConfigOutput) AuthBasicEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *string { return v.AuthBasicEnabled }).(pulumi.StringPtrOutput)
}

// Generic OAuth integration.
func (o GrafanaGrafanaUserConfigOutput) AuthGenericOauth() GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *GrafanaGrafanaUserConfigAuthGenericOauth { return v.AuthGenericOauth }).(GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput)
}

// Automatically sign-up users on successful sign-in
func (o GrafanaGrafanaUserConfigOutput) AuthGithub() GrafanaGrafanaUserConfigAuthGithubPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *GrafanaGrafanaUserConfigAuthGithub { return v.AuthGithub }).(GrafanaGrafanaUserConfigAuthGithubPtrOutput)
}

// GitLab Auth integration.
func (o GrafanaGrafanaUserConfigOutput) AuthGitlab() GrafanaGrafanaUserConfigAuthGitlabPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *GrafanaGrafanaUserConfigAuthGitlab { return v.AuthGitlab }).(GrafanaGrafanaUserConfigAuthGitlabPtrOutput)
}

// Google Auth integration
func (o GrafanaGrafanaUserConfigOutput) AuthGoogle() GrafanaGrafanaUserConfigAuthGooglePtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *GrafanaGrafanaUserConfigAuthGoogle { return v.AuthGoogle }).(GrafanaGrafanaUserConfigAuthGooglePtrOutput)
}

// Cookie SameSite attribute: 'strict' prevents sending cookie for
// cross-site requests, effectively disabling direct linking from other sites to Grafana. 'lax' is the default value.
func (o GrafanaGrafanaUserConfigOutput) CookieSamesite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *string { return v.CookieSamesite }).(pulumi.StringPtrOutput)
}

// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
func (o GrafanaGrafanaUserConfigOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *string { return v.CustomDomain }).(pulumi.StringPtrOutput)
}

// Signed sequence of decimal numbers, followed
// by a unit suffix (ms, s, m, h, d), e.g. 30s, 1h.
func (o GrafanaGrafanaUserConfigOutput) DashboardsMinRefreshInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *string { return v.DashboardsMinRefreshInterval }).(pulumi.StringPtrOutput)
}

// Dashboard versions to keep per dashboard.
func (o GrafanaGrafanaUserConfigOutput) DashboardsVersionsToKeep() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *string { return v.DashboardsVersionsToKeep }).(pulumi.StringPtrOutput)
}

// Send 'X-Grafana-User' header to data source.
func (o GrafanaGrafanaUserConfigOutput) DataproxySendUserHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *string { return v.DataproxySendUserHeader }).(pulumi.StringPtrOutput)
}

// Timeout for data proxy requests in seconds.
func (o GrafanaGrafanaUserConfigOutput) DataproxyTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *string { return v.DataproxyTimeout }).(pulumi.StringPtrOutput)
}

// Set to true to disable gravatar. Defaults to false
// (gravatar is enabled).
func (o GrafanaGrafanaUserConfigOutput) DisableGravatar() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *string { return v.DisableGravatar }).(pulumi.StringPtrOutput)
}

// Editors can manage folders, teams and dashboards created by them.
func (o GrafanaGrafanaUserConfigOutput) EditorsCanAdmin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *string { return v.EditorsCanAdmin }).(pulumi.StringPtrOutput)
}

// External image store settings
func (o GrafanaGrafanaUserConfigOutput) ExternalImageStorage() GrafanaGrafanaUserConfigExternalImageStoragePtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *GrafanaGrafanaUserConfigExternalImageStorage {
		return v.ExternalImageStorage
	}).(GrafanaGrafanaUserConfigExternalImageStoragePtrOutput)
}

// Google Analytics Universal Analytics ID for tracking Grafana usage
func (o GrafanaGrafanaUserConfigOutput) GoogleAnalyticsUaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *string { return v.GoogleAnalyticsUaId }).(pulumi.StringPtrOutput)
}

// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
func (o GrafanaGrafanaUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// Enable Grafana /metrics endpoint
func (o GrafanaGrafanaUserConfigOutput) MetricsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *string { return v.MetricsEnabled }).(pulumi.StringPtrOutput)
}

func (o GrafanaGrafanaUserConfigOutput) PrivateAccess() GrafanaGrafanaUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *GrafanaGrafanaUserConfigPrivateAccess { return v.PrivateAccess }).(GrafanaGrafanaUserConfigPrivateAccessPtrOutput)
}

// Allow access to selected service components through Privatelink
func (o GrafanaGrafanaUserConfigOutput) PrivatelinkAccess() GrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *GrafanaGrafanaUserConfigPrivatelinkAccess {
		return v.PrivatelinkAccess
	}).(GrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput)
}

// Name of another project to fork a service from. This has
// effect only when a new service is being created.
func (o GrafanaGrafanaUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from the public Internet.
func (o GrafanaGrafanaUserConfigOutput) PublicAccess() GrafanaGrafanaUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *GrafanaGrafanaUserConfigPublicAccess { return v.PublicAccess }).(GrafanaGrafanaUserConfigPublicAccessPtrOutput)
}

// Name of the basebackup to restore in forked service.
func (o GrafanaGrafanaUserConfigOutput) RecoveryBasebackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *string { return v.RecoveryBasebackupName }).(pulumi.StringPtrOutput)
}

// Name of another service to fork from. This has effect only
// when a new service is being created.
func (o GrafanaGrafanaUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

// SMTP server settings.
func (o GrafanaGrafanaUserConfigOutput) SmtpServer() GrafanaGrafanaUserConfigSmtpServerPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *GrafanaGrafanaUserConfigSmtpServer { return v.SmtpServer }).(GrafanaGrafanaUserConfigSmtpServerPtrOutput)
}

// Auto-assign new users on signup to main organization.
// Defaults to false.
func (o GrafanaGrafanaUserConfigOutput) UserAutoAssignOrg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *string { return v.UserAutoAssignOrg }).(pulumi.StringPtrOutput)
}

// Set role for new signups. Defaults to Viewer.
func (o GrafanaGrafanaUserConfigOutput) UserAutoAssignOrgRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *string { return v.UserAutoAssignOrgRole }).(pulumi.StringPtrOutput)
}

// Users with view-only permission can edit but not save dashboards.
func (o GrafanaGrafanaUserConfigOutput) ViewersCanEdit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfig) *string { return v.ViewersCanEdit }).(pulumi.StringPtrOutput)
}

type GrafanaGrafanaUserConfigPtrOutput struct{ *pulumi.OutputState }

func (GrafanaGrafanaUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaGrafanaUserConfig)(nil)).Elem()
}

func (o GrafanaGrafanaUserConfigPtrOutput) ToGrafanaGrafanaUserConfigPtrOutput() GrafanaGrafanaUserConfigPtrOutput {
	return o
}

func (o GrafanaGrafanaUserConfigPtrOutput) ToGrafanaGrafanaUserConfigPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigPtrOutput {
	return o
}

func (o GrafanaGrafanaUserConfigPtrOutput) Elem() GrafanaGrafanaUserConfigOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) GrafanaGrafanaUserConfig { return *v }).(GrafanaGrafanaUserConfigOutput)
}

// Enable or disable Grafana alerting functionality
func (o GrafanaGrafanaUserConfigPtrOutput) AlertingEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.AlertingEnabled
	}).(pulumi.StringPtrOutput)
}

// Default error or timeout setting for new alerting rules
func (o GrafanaGrafanaUserConfigPtrOutput) AlertingErrorOrTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.AlertingErrorOrTimeout
	}).(pulumi.StringPtrOutput)
}

// Default value for 'no data or null values' for
// new alerting rules
func (o GrafanaGrafanaUserConfigPtrOutput) AlertingNodataOrNullvalues() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.AlertingNodataOrNullvalues
	}).(pulumi.StringPtrOutput)
}

// Allow embedding Grafana dashboards with iframe/frame/object/embed
// tags. Disabled by default to limit impact of clickjacking
func (o GrafanaGrafanaUserConfigPtrOutput) AllowEmbedding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.AllowEmbedding
	}).(pulumi.StringPtrOutput)
}

// Enable or disable basic authentication form, used by Grafana
// built-in login.
func (o GrafanaGrafanaUserConfigPtrOutput) AuthBasicEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.AuthBasicEnabled
	}).(pulumi.StringPtrOutput)
}

// Generic OAuth integration.
func (o GrafanaGrafanaUserConfigPtrOutput) AuthGenericOauth() GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *GrafanaGrafanaUserConfigAuthGenericOauth {
		if v == nil {
			return nil
		}
		return v.AuthGenericOauth
	}).(GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput)
}

// Automatically sign-up users on successful sign-in
func (o GrafanaGrafanaUserConfigPtrOutput) AuthGithub() GrafanaGrafanaUserConfigAuthGithubPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *GrafanaGrafanaUserConfigAuthGithub {
		if v == nil {
			return nil
		}
		return v.AuthGithub
	}).(GrafanaGrafanaUserConfigAuthGithubPtrOutput)
}

// GitLab Auth integration.
func (o GrafanaGrafanaUserConfigPtrOutput) AuthGitlab() GrafanaGrafanaUserConfigAuthGitlabPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *GrafanaGrafanaUserConfigAuthGitlab {
		if v == nil {
			return nil
		}
		return v.AuthGitlab
	}).(GrafanaGrafanaUserConfigAuthGitlabPtrOutput)
}

// Google Auth integration
func (o GrafanaGrafanaUserConfigPtrOutput) AuthGoogle() GrafanaGrafanaUserConfigAuthGooglePtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *GrafanaGrafanaUserConfigAuthGoogle {
		if v == nil {
			return nil
		}
		return v.AuthGoogle
	}).(GrafanaGrafanaUserConfigAuthGooglePtrOutput)
}

// Cookie SameSite attribute: 'strict' prevents sending cookie for
// cross-site requests, effectively disabling direct linking from other sites to Grafana. 'lax' is the default value.
func (o GrafanaGrafanaUserConfigPtrOutput) CookieSamesite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.CookieSamesite
	}).(pulumi.StringPtrOutput)
}

// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
func (o GrafanaGrafanaUserConfigPtrOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.CustomDomain
	}).(pulumi.StringPtrOutput)
}

// Signed sequence of decimal numbers, followed
// by a unit suffix (ms, s, m, h, d), e.g. 30s, 1h.
func (o GrafanaGrafanaUserConfigPtrOutput) DashboardsMinRefreshInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.DashboardsMinRefreshInterval
	}).(pulumi.StringPtrOutput)
}

// Dashboard versions to keep per dashboard.
func (o GrafanaGrafanaUserConfigPtrOutput) DashboardsVersionsToKeep() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.DashboardsVersionsToKeep
	}).(pulumi.StringPtrOutput)
}

// Send 'X-Grafana-User' header to data source.
func (o GrafanaGrafanaUserConfigPtrOutput) DataproxySendUserHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.DataproxySendUserHeader
	}).(pulumi.StringPtrOutput)
}

// Timeout for data proxy requests in seconds.
func (o GrafanaGrafanaUserConfigPtrOutput) DataproxyTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.DataproxyTimeout
	}).(pulumi.StringPtrOutput)
}

// Set to true to disable gravatar. Defaults to false
// (gravatar is enabled).
func (o GrafanaGrafanaUserConfigPtrOutput) DisableGravatar() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.DisableGravatar
	}).(pulumi.StringPtrOutput)
}

// Editors can manage folders, teams and dashboards created by them.
func (o GrafanaGrafanaUserConfigPtrOutput) EditorsCanAdmin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.EditorsCanAdmin
	}).(pulumi.StringPtrOutput)
}

// External image store settings
func (o GrafanaGrafanaUserConfigPtrOutput) ExternalImageStorage() GrafanaGrafanaUserConfigExternalImageStoragePtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *GrafanaGrafanaUserConfigExternalImageStorage {
		if v == nil {
			return nil
		}
		return v.ExternalImageStorage
	}).(GrafanaGrafanaUserConfigExternalImageStoragePtrOutput)
}

// Google Analytics Universal Analytics ID for tracking Grafana usage
func (o GrafanaGrafanaUserConfigPtrOutput) GoogleAnalyticsUaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.GoogleAnalyticsUaId
	}).(pulumi.StringPtrOutput)
}

// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
func (o GrafanaGrafanaUserConfigPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

// Enable Grafana /metrics endpoint
func (o GrafanaGrafanaUserConfigPtrOutput) MetricsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.MetricsEnabled
	}).(pulumi.StringPtrOutput)
}

func (o GrafanaGrafanaUserConfigPtrOutput) PrivateAccess() GrafanaGrafanaUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *GrafanaGrafanaUserConfigPrivateAccess {
		if v == nil {
			return nil
		}
		return v.PrivateAccess
	}).(GrafanaGrafanaUserConfigPrivateAccessPtrOutput)
}

// Allow access to selected service components through Privatelink
func (o GrafanaGrafanaUserConfigPtrOutput) PrivatelinkAccess() GrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *GrafanaGrafanaUserConfigPrivatelinkAccess {
		if v == nil {
			return nil
		}
		return v.PrivatelinkAccess
	}).(GrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput)
}

// Name of another project to fork a service from. This has
// effect only when a new service is being created.
func (o GrafanaGrafanaUserConfigPtrOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProjectToForkFrom
	}).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from the public Internet.
func (o GrafanaGrafanaUserConfigPtrOutput) PublicAccess() GrafanaGrafanaUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *GrafanaGrafanaUserConfigPublicAccess {
		if v == nil {
			return nil
		}
		return v.PublicAccess
	}).(GrafanaGrafanaUserConfigPublicAccessPtrOutput)
}

// Name of the basebackup to restore in forked service.
func (o GrafanaGrafanaUserConfigPtrOutput) RecoveryBasebackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryBasebackupName
	}).(pulumi.StringPtrOutput)
}

// Name of another service to fork from. This has effect only
// when a new service is being created.
func (o GrafanaGrafanaUserConfigPtrOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceToForkFrom
	}).(pulumi.StringPtrOutput)
}

// SMTP server settings.
func (o GrafanaGrafanaUserConfigPtrOutput) SmtpServer() GrafanaGrafanaUserConfigSmtpServerPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *GrafanaGrafanaUserConfigSmtpServer {
		if v == nil {
			return nil
		}
		return v.SmtpServer
	}).(GrafanaGrafanaUserConfigSmtpServerPtrOutput)
}

// Auto-assign new users on signup to main organization.
// Defaults to false.
func (o GrafanaGrafanaUserConfigPtrOutput) UserAutoAssignOrg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserAutoAssignOrg
	}).(pulumi.StringPtrOutput)
}

// Set role for new signups. Defaults to Viewer.
func (o GrafanaGrafanaUserConfigPtrOutput) UserAutoAssignOrgRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserAutoAssignOrgRole
	}).(pulumi.StringPtrOutput)
}

// Users with view-only permission can edit but not save dashboards.
func (o GrafanaGrafanaUserConfigPtrOutput) ViewersCanEdit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ViewersCanEdit
	}).(pulumi.StringPtrOutput)
}

type GrafanaGrafanaUserConfigAuthGenericOauth struct {
	// Automatically sign-up users on successful sign-in
	AllowSignUp *string `pulumi:"allowSignUp"`
	// Allowed domain
	AllowedDomains []string `pulumi:"allowedDomains"`
	// Must consist of alpha-numeric characters and dashes"
	AllowedOrganizations []string `pulumi:"allowedOrganizations"`
	// API URL. This only needs to be set when using self hosted GitLab
	ApiUrl *string `pulumi:"apiUrl"`
	// Authorization URL. This only needs to be set when using self hosted GitLab
	AuthUrl *string `pulumi:"authUrl"`
	// Client ID from provider
	ClientId *string `pulumi:"clientId"`
	// Client secret from provider
	ClientSecret *string `pulumi:"clientSecret"`
	// Name of the OAuth integration
	Name *string `pulumi:"name"`
	// Scope must be non-empty string without whitespace
	Scopes []string `pulumi:"scopes"`
	// Token URL. This only needs to be set when using self hosted GitLab
	TokenUrl *string `pulumi:"tokenUrl"`
}

// GrafanaGrafanaUserConfigAuthGenericOauthInput is an input type that accepts GrafanaGrafanaUserConfigAuthGenericOauthArgs and GrafanaGrafanaUserConfigAuthGenericOauthOutput values.
// You can construct a concrete instance of `GrafanaGrafanaUserConfigAuthGenericOauthInput` via:
//
//          GrafanaGrafanaUserConfigAuthGenericOauthArgs{...}
type GrafanaGrafanaUserConfigAuthGenericOauthInput interface {
	pulumi.Input

	ToGrafanaGrafanaUserConfigAuthGenericOauthOutput() GrafanaGrafanaUserConfigAuthGenericOauthOutput
	ToGrafanaGrafanaUserConfigAuthGenericOauthOutputWithContext(context.Context) GrafanaGrafanaUserConfigAuthGenericOauthOutput
}

type GrafanaGrafanaUserConfigAuthGenericOauthArgs struct {
	// Automatically sign-up users on successful sign-in
	AllowSignUp pulumi.StringPtrInput `pulumi:"allowSignUp"`
	// Allowed domain
	AllowedDomains pulumi.StringArrayInput `pulumi:"allowedDomains"`
	// Must consist of alpha-numeric characters and dashes"
	AllowedOrganizations pulumi.StringArrayInput `pulumi:"allowedOrganizations"`
	// API URL. This only needs to be set when using self hosted GitLab
	ApiUrl pulumi.StringPtrInput `pulumi:"apiUrl"`
	// Authorization URL. This only needs to be set when using self hosted GitLab
	AuthUrl pulumi.StringPtrInput `pulumi:"authUrl"`
	// Client ID from provider
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Client secret from provider
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Name of the OAuth integration
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Scope must be non-empty string without whitespace
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
	// Token URL. This only needs to be set when using self hosted GitLab
	TokenUrl pulumi.StringPtrInput `pulumi:"tokenUrl"`
}

func (GrafanaGrafanaUserConfigAuthGenericOauthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaGrafanaUserConfigAuthGenericOauth)(nil)).Elem()
}

func (i GrafanaGrafanaUserConfigAuthGenericOauthArgs) ToGrafanaGrafanaUserConfigAuthGenericOauthOutput() GrafanaGrafanaUserConfigAuthGenericOauthOutput {
	return i.ToGrafanaGrafanaUserConfigAuthGenericOauthOutputWithContext(context.Background())
}

func (i GrafanaGrafanaUserConfigAuthGenericOauthArgs) ToGrafanaGrafanaUserConfigAuthGenericOauthOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigAuthGenericOauthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigAuthGenericOauthOutput)
}

func (i GrafanaGrafanaUserConfigAuthGenericOauthArgs) ToGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput() GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput {
	return i.ToGrafanaGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(context.Background())
}

func (i GrafanaGrafanaUserConfigAuthGenericOauthArgs) ToGrafanaGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigAuthGenericOauthOutput).ToGrafanaGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(ctx)
}

// GrafanaGrafanaUserConfigAuthGenericOauthPtrInput is an input type that accepts GrafanaGrafanaUserConfigAuthGenericOauthArgs, GrafanaGrafanaUserConfigAuthGenericOauthPtr and GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput values.
// You can construct a concrete instance of `GrafanaGrafanaUserConfigAuthGenericOauthPtrInput` via:
//
//          GrafanaGrafanaUserConfigAuthGenericOauthArgs{...}
//
//  or:
//
//          nil
type GrafanaGrafanaUserConfigAuthGenericOauthPtrInput interface {
	pulumi.Input

	ToGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput() GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput
	ToGrafanaGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(context.Context) GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput
}

type grafanaGrafanaUserConfigAuthGenericOauthPtrType GrafanaGrafanaUserConfigAuthGenericOauthArgs

func GrafanaGrafanaUserConfigAuthGenericOauthPtr(v *GrafanaGrafanaUserConfigAuthGenericOauthArgs) GrafanaGrafanaUserConfigAuthGenericOauthPtrInput {
	return (*grafanaGrafanaUserConfigAuthGenericOauthPtrType)(v)
}

func (*grafanaGrafanaUserConfigAuthGenericOauthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaGrafanaUserConfigAuthGenericOauth)(nil)).Elem()
}

func (i *grafanaGrafanaUserConfigAuthGenericOauthPtrType) ToGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput() GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput {
	return i.ToGrafanaGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(context.Background())
}

func (i *grafanaGrafanaUserConfigAuthGenericOauthPtrType) ToGrafanaGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput)
}

type GrafanaGrafanaUserConfigAuthGenericOauthOutput struct{ *pulumi.OutputState }

func (GrafanaGrafanaUserConfigAuthGenericOauthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaGrafanaUserConfigAuthGenericOauth)(nil)).Elem()
}

func (o GrafanaGrafanaUserConfigAuthGenericOauthOutput) ToGrafanaGrafanaUserConfigAuthGenericOauthOutput() GrafanaGrafanaUserConfigAuthGenericOauthOutput {
	return o
}

func (o GrafanaGrafanaUserConfigAuthGenericOauthOutput) ToGrafanaGrafanaUserConfigAuthGenericOauthOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigAuthGenericOauthOutput {
	return o
}

func (o GrafanaGrafanaUserConfigAuthGenericOauthOutput) ToGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput() GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput {
	return o.ToGrafanaGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(context.Background())
}

func (o GrafanaGrafanaUserConfigAuthGenericOauthOutput) ToGrafanaGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGenericOauth) *GrafanaGrafanaUserConfigAuthGenericOauth {
		return &v
	}).(GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput)
}

// Automatically sign-up users on successful sign-in
func (o GrafanaGrafanaUserConfigAuthGenericOauthOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGenericOauth) *string { return v.AllowSignUp }).(pulumi.StringPtrOutput)
}

// Allowed domain
func (o GrafanaGrafanaUserConfigAuthGenericOauthOutput) AllowedDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGenericOauth) []string { return v.AllowedDomains }).(pulumi.StringArrayOutput)
}

// Must consist of alpha-numeric characters and dashes"
func (o GrafanaGrafanaUserConfigAuthGenericOauthOutput) AllowedOrganizations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGenericOauth) []string { return v.AllowedOrganizations }).(pulumi.StringArrayOutput)
}

// API URL. This only needs to be set when using self hosted GitLab
func (o GrafanaGrafanaUserConfigAuthGenericOauthOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGenericOauth) *string { return v.ApiUrl }).(pulumi.StringPtrOutput)
}

// Authorization URL. This only needs to be set when using self hosted GitLab
func (o GrafanaGrafanaUserConfigAuthGenericOauthOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGenericOauth) *string { return v.AuthUrl }).(pulumi.StringPtrOutput)
}

// Client ID from provider
func (o GrafanaGrafanaUserConfigAuthGenericOauthOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGenericOauth) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Client secret from provider
func (o GrafanaGrafanaUserConfigAuthGenericOauthOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGenericOauth) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Name of the OAuth integration
func (o GrafanaGrafanaUserConfigAuthGenericOauthOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGenericOauth) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Scope must be non-empty string without whitespace
func (o GrafanaGrafanaUserConfigAuthGenericOauthOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGenericOauth) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

// Token URL. This only needs to be set when using self hosted GitLab
func (o GrafanaGrafanaUserConfigAuthGenericOauthOutput) TokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGenericOauth) *string { return v.TokenUrl }).(pulumi.StringPtrOutput)
}

type GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput struct{ *pulumi.OutputState }

func (GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaGrafanaUserConfigAuthGenericOauth)(nil)).Elem()
}

func (o GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) ToGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput() GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput {
	return o
}

func (o GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) ToGrafanaGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput {
	return o
}

func (o GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) Elem() GrafanaGrafanaUserConfigAuthGenericOauthOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGenericOauth) GrafanaGrafanaUserConfigAuthGenericOauth { return *v }).(GrafanaGrafanaUserConfigAuthGenericOauthOutput)
}

// Automatically sign-up users on successful sign-in
func (o GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.AllowSignUp
	}).(pulumi.StringPtrOutput)
}

// Allowed domain
func (o GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) AllowedDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGenericOauth) []string {
		if v == nil {
			return nil
		}
		return v.AllowedDomains
	}).(pulumi.StringArrayOutput)
}

// Must consist of alpha-numeric characters and dashes"
func (o GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) AllowedOrganizations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGenericOauth) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrganizations
	}).(pulumi.StringArrayOutput)
}

// API URL. This only needs to be set when using self hosted GitLab
func (o GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.ApiUrl
	}).(pulumi.StringPtrOutput)
}

// Authorization URL. This only needs to be set when using self hosted GitLab
func (o GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.AuthUrl
	}).(pulumi.StringPtrOutput)
}

// Client ID from provider
func (o GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client secret from provider
func (o GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Name of the OAuth integration
func (o GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Scope must be non-empty string without whitespace
func (o GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGenericOauth) []string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringArrayOutput)
}

// Token URL. This only needs to be set when using self hosted GitLab
func (o GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) TokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.TokenUrl
	}).(pulumi.StringPtrOutput)
}

type GrafanaGrafanaUserConfigAuthGithub struct {
	// Automatically sign-up users on successful sign-in
	AllowSignUp *string `pulumi:"allowSignUp"`
	// Must consist of alpha-numeric characters and dashes"
	AllowedOrganizations []string `pulumi:"allowedOrganizations"`
	// Client ID from provider
	ClientId *string `pulumi:"clientId"`
	// Client secret from provider
	ClientSecret *string `pulumi:"clientSecret"`
	// Require users to belong to one of given team IDs
	TeamIds []string `pulumi:"teamIds"`
}

// GrafanaGrafanaUserConfigAuthGithubInput is an input type that accepts GrafanaGrafanaUserConfigAuthGithubArgs and GrafanaGrafanaUserConfigAuthGithubOutput values.
// You can construct a concrete instance of `GrafanaGrafanaUserConfigAuthGithubInput` via:
//
//          GrafanaGrafanaUserConfigAuthGithubArgs{...}
type GrafanaGrafanaUserConfigAuthGithubInput interface {
	pulumi.Input

	ToGrafanaGrafanaUserConfigAuthGithubOutput() GrafanaGrafanaUserConfigAuthGithubOutput
	ToGrafanaGrafanaUserConfigAuthGithubOutputWithContext(context.Context) GrafanaGrafanaUserConfigAuthGithubOutput
}

type GrafanaGrafanaUserConfigAuthGithubArgs struct {
	// Automatically sign-up users on successful sign-in
	AllowSignUp pulumi.StringPtrInput `pulumi:"allowSignUp"`
	// Must consist of alpha-numeric characters and dashes"
	AllowedOrganizations pulumi.StringArrayInput `pulumi:"allowedOrganizations"`
	// Client ID from provider
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Client secret from provider
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Require users to belong to one of given team IDs
	TeamIds pulumi.StringArrayInput `pulumi:"teamIds"`
}

func (GrafanaGrafanaUserConfigAuthGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaGrafanaUserConfigAuthGithub)(nil)).Elem()
}

func (i GrafanaGrafanaUserConfigAuthGithubArgs) ToGrafanaGrafanaUserConfigAuthGithubOutput() GrafanaGrafanaUserConfigAuthGithubOutput {
	return i.ToGrafanaGrafanaUserConfigAuthGithubOutputWithContext(context.Background())
}

func (i GrafanaGrafanaUserConfigAuthGithubArgs) ToGrafanaGrafanaUserConfigAuthGithubOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigAuthGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigAuthGithubOutput)
}

func (i GrafanaGrafanaUserConfigAuthGithubArgs) ToGrafanaGrafanaUserConfigAuthGithubPtrOutput() GrafanaGrafanaUserConfigAuthGithubPtrOutput {
	return i.ToGrafanaGrafanaUserConfigAuthGithubPtrOutputWithContext(context.Background())
}

func (i GrafanaGrafanaUserConfigAuthGithubArgs) ToGrafanaGrafanaUserConfigAuthGithubPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigAuthGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigAuthGithubOutput).ToGrafanaGrafanaUserConfigAuthGithubPtrOutputWithContext(ctx)
}

// GrafanaGrafanaUserConfigAuthGithubPtrInput is an input type that accepts GrafanaGrafanaUserConfigAuthGithubArgs, GrafanaGrafanaUserConfigAuthGithubPtr and GrafanaGrafanaUserConfigAuthGithubPtrOutput values.
// You can construct a concrete instance of `GrafanaGrafanaUserConfigAuthGithubPtrInput` via:
//
//          GrafanaGrafanaUserConfigAuthGithubArgs{...}
//
//  or:
//
//          nil
type GrafanaGrafanaUserConfigAuthGithubPtrInput interface {
	pulumi.Input

	ToGrafanaGrafanaUserConfigAuthGithubPtrOutput() GrafanaGrafanaUserConfigAuthGithubPtrOutput
	ToGrafanaGrafanaUserConfigAuthGithubPtrOutputWithContext(context.Context) GrafanaGrafanaUserConfigAuthGithubPtrOutput
}

type grafanaGrafanaUserConfigAuthGithubPtrType GrafanaGrafanaUserConfigAuthGithubArgs

func GrafanaGrafanaUserConfigAuthGithubPtr(v *GrafanaGrafanaUserConfigAuthGithubArgs) GrafanaGrafanaUserConfigAuthGithubPtrInput {
	return (*grafanaGrafanaUserConfigAuthGithubPtrType)(v)
}

func (*grafanaGrafanaUserConfigAuthGithubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaGrafanaUserConfigAuthGithub)(nil)).Elem()
}

func (i *grafanaGrafanaUserConfigAuthGithubPtrType) ToGrafanaGrafanaUserConfigAuthGithubPtrOutput() GrafanaGrafanaUserConfigAuthGithubPtrOutput {
	return i.ToGrafanaGrafanaUserConfigAuthGithubPtrOutputWithContext(context.Background())
}

func (i *grafanaGrafanaUserConfigAuthGithubPtrType) ToGrafanaGrafanaUserConfigAuthGithubPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigAuthGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigAuthGithubPtrOutput)
}

type GrafanaGrafanaUserConfigAuthGithubOutput struct{ *pulumi.OutputState }

func (GrafanaGrafanaUserConfigAuthGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaGrafanaUserConfigAuthGithub)(nil)).Elem()
}

func (o GrafanaGrafanaUserConfigAuthGithubOutput) ToGrafanaGrafanaUserConfigAuthGithubOutput() GrafanaGrafanaUserConfigAuthGithubOutput {
	return o
}

func (o GrafanaGrafanaUserConfigAuthGithubOutput) ToGrafanaGrafanaUserConfigAuthGithubOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigAuthGithubOutput {
	return o
}

func (o GrafanaGrafanaUserConfigAuthGithubOutput) ToGrafanaGrafanaUserConfigAuthGithubPtrOutput() GrafanaGrafanaUserConfigAuthGithubPtrOutput {
	return o.ToGrafanaGrafanaUserConfigAuthGithubPtrOutputWithContext(context.Background())
}

func (o GrafanaGrafanaUserConfigAuthGithubOutput) ToGrafanaGrafanaUserConfigAuthGithubPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigAuthGithubPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGithub) *GrafanaGrafanaUserConfigAuthGithub {
		return &v
	}).(GrafanaGrafanaUserConfigAuthGithubPtrOutput)
}

// Automatically sign-up users on successful sign-in
func (o GrafanaGrafanaUserConfigAuthGithubOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGithub) *string { return v.AllowSignUp }).(pulumi.StringPtrOutput)
}

// Must consist of alpha-numeric characters and dashes"
func (o GrafanaGrafanaUserConfigAuthGithubOutput) AllowedOrganizations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGithub) []string { return v.AllowedOrganizations }).(pulumi.StringArrayOutput)
}

// Client ID from provider
func (o GrafanaGrafanaUserConfigAuthGithubOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGithub) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Client secret from provider
func (o GrafanaGrafanaUserConfigAuthGithubOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGithub) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Require users to belong to one of given team IDs
func (o GrafanaGrafanaUserConfigAuthGithubOutput) TeamIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGithub) []string { return v.TeamIds }).(pulumi.StringArrayOutput)
}

type GrafanaGrafanaUserConfigAuthGithubPtrOutput struct{ *pulumi.OutputState }

func (GrafanaGrafanaUserConfigAuthGithubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaGrafanaUserConfigAuthGithub)(nil)).Elem()
}

func (o GrafanaGrafanaUserConfigAuthGithubPtrOutput) ToGrafanaGrafanaUserConfigAuthGithubPtrOutput() GrafanaGrafanaUserConfigAuthGithubPtrOutput {
	return o
}

func (o GrafanaGrafanaUserConfigAuthGithubPtrOutput) ToGrafanaGrafanaUserConfigAuthGithubPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigAuthGithubPtrOutput {
	return o
}

func (o GrafanaGrafanaUserConfigAuthGithubPtrOutput) Elem() GrafanaGrafanaUserConfigAuthGithubOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGithub) GrafanaGrafanaUserConfigAuthGithub { return *v }).(GrafanaGrafanaUserConfigAuthGithubOutput)
}

// Automatically sign-up users on successful sign-in
func (o GrafanaGrafanaUserConfigAuthGithubPtrOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGithub) *string {
		if v == nil {
			return nil
		}
		return v.AllowSignUp
	}).(pulumi.StringPtrOutput)
}

// Must consist of alpha-numeric characters and dashes"
func (o GrafanaGrafanaUserConfigAuthGithubPtrOutput) AllowedOrganizations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGithub) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrganizations
	}).(pulumi.StringArrayOutput)
}

// Client ID from provider
func (o GrafanaGrafanaUserConfigAuthGithubPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGithub) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client secret from provider
func (o GrafanaGrafanaUserConfigAuthGithubPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGithub) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Require users to belong to one of given team IDs
func (o GrafanaGrafanaUserConfigAuthGithubPtrOutput) TeamIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGithub) []string {
		if v == nil {
			return nil
		}
		return v.TeamIds
	}).(pulumi.StringArrayOutput)
}

type GrafanaGrafanaUserConfigAuthGitlab struct {
	// Automatically sign-up users on successful sign-in
	AllowSignUp *string `pulumi:"allowSignUp"`
	// Require users to belong to one of given groups
	AllowedGroups []string `pulumi:"allowedGroups"`
	// API URL. This only needs to be set when using self hosted GitLab
	ApiUrl *string `pulumi:"apiUrl"`
	// Authorization URL. This only needs to be set when using self hosted GitLab
	AuthUrl *string `pulumi:"authUrl"`
	// Client ID from provider
	ClientId *string `pulumi:"clientId"`
	// Client secret from provider
	ClientSecret *string `pulumi:"clientSecret"`
	// Token URL. This only needs to be set when using self hosted GitLab
	TokenUrl *string `pulumi:"tokenUrl"`
}

// GrafanaGrafanaUserConfigAuthGitlabInput is an input type that accepts GrafanaGrafanaUserConfigAuthGitlabArgs and GrafanaGrafanaUserConfigAuthGitlabOutput values.
// You can construct a concrete instance of `GrafanaGrafanaUserConfigAuthGitlabInput` via:
//
//          GrafanaGrafanaUserConfigAuthGitlabArgs{...}
type GrafanaGrafanaUserConfigAuthGitlabInput interface {
	pulumi.Input

	ToGrafanaGrafanaUserConfigAuthGitlabOutput() GrafanaGrafanaUserConfigAuthGitlabOutput
	ToGrafanaGrafanaUserConfigAuthGitlabOutputWithContext(context.Context) GrafanaGrafanaUserConfigAuthGitlabOutput
}

type GrafanaGrafanaUserConfigAuthGitlabArgs struct {
	// Automatically sign-up users on successful sign-in
	AllowSignUp pulumi.StringPtrInput `pulumi:"allowSignUp"`
	// Require users to belong to one of given groups
	AllowedGroups pulumi.StringArrayInput `pulumi:"allowedGroups"`
	// API URL. This only needs to be set when using self hosted GitLab
	ApiUrl pulumi.StringPtrInput `pulumi:"apiUrl"`
	// Authorization URL. This only needs to be set when using self hosted GitLab
	AuthUrl pulumi.StringPtrInput `pulumi:"authUrl"`
	// Client ID from provider
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Client secret from provider
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Token URL. This only needs to be set when using self hosted GitLab
	TokenUrl pulumi.StringPtrInput `pulumi:"tokenUrl"`
}

func (GrafanaGrafanaUserConfigAuthGitlabArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaGrafanaUserConfigAuthGitlab)(nil)).Elem()
}

func (i GrafanaGrafanaUserConfigAuthGitlabArgs) ToGrafanaGrafanaUserConfigAuthGitlabOutput() GrafanaGrafanaUserConfigAuthGitlabOutput {
	return i.ToGrafanaGrafanaUserConfigAuthGitlabOutputWithContext(context.Background())
}

func (i GrafanaGrafanaUserConfigAuthGitlabArgs) ToGrafanaGrafanaUserConfigAuthGitlabOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigAuthGitlabOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigAuthGitlabOutput)
}

func (i GrafanaGrafanaUserConfigAuthGitlabArgs) ToGrafanaGrafanaUserConfigAuthGitlabPtrOutput() GrafanaGrafanaUserConfigAuthGitlabPtrOutput {
	return i.ToGrafanaGrafanaUserConfigAuthGitlabPtrOutputWithContext(context.Background())
}

func (i GrafanaGrafanaUserConfigAuthGitlabArgs) ToGrafanaGrafanaUserConfigAuthGitlabPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigAuthGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigAuthGitlabOutput).ToGrafanaGrafanaUserConfigAuthGitlabPtrOutputWithContext(ctx)
}

// GrafanaGrafanaUserConfigAuthGitlabPtrInput is an input type that accepts GrafanaGrafanaUserConfigAuthGitlabArgs, GrafanaGrafanaUserConfigAuthGitlabPtr and GrafanaGrafanaUserConfigAuthGitlabPtrOutput values.
// You can construct a concrete instance of `GrafanaGrafanaUserConfigAuthGitlabPtrInput` via:
//
//          GrafanaGrafanaUserConfigAuthGitlabArgs{...}
//
//  or:
//
//          nil
type GrafanaGrafanaUserConfigAuthGitlabPtrInput interface {
	pulumi.Input

	ToGrafanaGrafanaUserConfigAuthGitlabPtrOutput() GrafanaGrafanaUserConfigAuthGitlabPtrOutput
	ToGrafanaGrafanaUserConfigAuthGitlabPtrOutputWithContext(context.Context) GrafanaGrafanaUserConfigAuthGitlabPtrOutput
}

type grafanaGrafanaUserConfigAuthGitlabPtrType GrafanaGrafanaUserConfigAuthGitlabArgs

func GrafanaGrafanaUserConfigAuthGitlabPtr(v *GrafanaGrafanaUserConfigAuthGitlabArgs) GrafanaGrafanaUserConfigAuthGitlabPtrInput {
	return (*grafanaGrafanaUserConfigAuthGitlabPtrType)(v)
}

func (*grafanaGrafanaUserConfigAuthGitlabPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaGrafanaUserConfigAuthGitlab)(nil)).Elem()
}

func (i *grafanaGrafanaUserConfigAuthGitlabPtrType) ToGrafanaGrafanaUserConfigAuthGitlabPtrOutput() GrafanaGrafanaUserConfigAuthGitlabPtrOutput {
	return i.ToGrafanaGrafanaUserConfigAuthGitlabPtrOutputWithContext(context.Background())
}

func (i *grafanaGrafanaUserConfigAuthGitlabPtrType) ToGrafanaGrafanaUserConfigAuthGitlabPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigAuthGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigAuthGitlabPtrOutput)
}

type GrafanaGrafanaUserConfigAuthGitlabOutput struct{ *pulumi.OutputState }

func (GrafanaGrafanaUserConfigAuthGitlabOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaGrafanaUserConfigAuthGitlab)(nil)).Elem()
}

func (o GrafanaGrafanaUserConfigAuthGitlabOutput) ToGrafanaGrafanaUserConfigAuthGitlabOutput() GrafanaGrafanaUserConfigAuthGitlabOutput {
	return o
}

func (o GrafanaGrafanaUserConfigAuthGitlabOutput) ToGrafanaGrafanaUserConfigAuthGitlabOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigAuthGitlabOutput {
	return o
}

func (o GrafanaGrafanaUserConfigAuthGitlabOutput) ToGrafanaGrafanaUserConfigAuthGitlabPtrOutput() GrafanaGrafanaUserConfigAuthGitlabPtrOutput {
	return o.ToGrafanaGrafanaUserConfigAuthGitlabPtrOutputWithContext(context.Background())
}

func (o GrafanaGrafanaUserConfigAuthGitlabOutput) ToGrafanaGrafanaUserConfigAuthGitlabPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigAuthGitlabPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGitlab) *GrafanaGrafanaUserConfigAuthGitlab {
		return &v
	}).(GrafanaGrafanaUserConfigAuthGitlabPtrOutput)
}

// Automatically sign-up users on successful sign-in
func (o GrafanaGrafanaUserConfigAuthGitlabOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGitlab) *string { return v.AllowSignUp }).(pulumi.StringPtrOutput)
}

// Require users to belong to one of given groups
func (o GrafanaGrafanaUserConfigAuthGitlabOutput) AllowedGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGitlab) []string { return v.AllowedGroups }).(pulumi.StringArrayOutput)
}

// API URL. This only needs to be set when using self hosted GitLab
func (o GrafanaGrafanaUserConfigAuthGitlabOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGitlab) *string { return v.ApiUrl }).(pulumi.StringPtrOutput)
}

// Authorization URL. This only needs to be set when using self hosted GitLab
func (o GrafanaGrafanaUserConfigAuthGitlabOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGitlab) *string { return v.AuthUrl }).(pulumi.StringPtrOutput)
}

// Client ID from provider
func (o GrafanaGrafanaUserConfigAuthGitlabOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGitlab) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Client secret from provider
func (o GrafanaGrafanaUserConfigAuthGitlabOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGitlab) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Token URL. This only needs to be set when using self hosted GitLab
func (o GrafanaGrafanaUserConfigAuthGitlabOutput) TokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGitlab) *string { return v.TokenUrl }).(pulumi.StringPtrOutput)
}

type GrafanaGrafanaUserConfigAuthGitlabPtrOutput struct{ *pulumi.OutputState }

func (GrafanaGrafanaUserConfigAuthGitlabPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaGrafanaUserConfigAuthGitlab)(nil)).Elem()
}

func (o GrafanaGrafanaUserConfigAuthGitlabPtrOutput) ToGrafanaGrafanaUserConfigAuthGitlabPtrOutput() GrafanaGrafanaUserConfigAuthGitlabPtrOutput {
	return o
}

func (o GrafanaGrafanaUserConfigAuthGitlabPtrOutput) ToGrafanaGrafanaUserConfigAuthGitlabPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigAuthGitlabPtrOutput {
	return o
}

func (o GrafanaGrafanaUserConfigAuthGitlabPtrOutput) Elem() GrafanaGrafanaUserConfigAuthGitlabOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGitlab) GrafanaGrafanaUserConfigAuthGitlab { return *v }).(GrafanaGrafanaUserConfigAuthGitlabOutput)
}

// Automatically sign-up users on successful sign-in
func (o GrafanaGrafanaUserConfigAuthGitlabPtrOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGitlab) *string {
		if v == nil {
			return nil
		}
		return v.AllowSignUp
	}).(pulumi.StringPtrOutput)
}

// Require users to belong to one of given groups
func (o GrafanaGrafanaUserConfigAuthGitlabPtrOutput) AllowedGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGitlab) []string {
		if v == nil {
			return nil
		}
		return v.AllowedGroups
	}).(pulumi.StringArrayOutput)
}

// API URL. This only needs to be set when using self hosted GitLab
func (o GrafanaGrafanaUserConfigAuthGitlabPtrOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGitlab) *string {
		if v == nil {
			return nil
		}
		return v.ApiUrl
	}).(pulumi.StringPtrOutput)
}

// Authorization URL. This only needs to be set when using self hosted GitLab
func (o GrafanaGrafanaUserConfigAuthGitlabPtrOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGitlab) *string {
		if v == nil {
			return nil
		}
		return v.AuthUrl
	}).(pulumi.StringPtrOutput)
}

// Client ID from provider
func (o GrafanaGrafanaUserConfigAuthGitlabPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGitlab) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client secret from provider
func (o GrafanaGrafanaUserConfigAuthGitlabPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGitlab) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Token URL. This only needs to be set when using self hosted GitLab
func (o GrafanaGrafanaUserConfigAuthGitlabPtrOutput) TokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGitlab) *string {
		if v == nil {
			return nil
		}
		return v.TokenUrl
	}).(pulumi.StringPtrOutput)
}

type GrafanaGrafanaUserConfigAuthGoogle struct {
	// Automatically sign-up users on successful sign-in
	AllowSignUp *string `pulumi:"allowSignUp"`
	// Allowed domain
	AllowedDomains []string `pulumi:"allowedDomains"`
	// Client ID from provider
	ClientId *string `pulumi:"clientId"`
	// Client secret from provider
	ClientSecret *string `pulumi:"clientSecret"`
}

// GrafanaGrafanaUserConfigAuthGoogleInput is an input type that accepts GrafanaGrafanaUserConfigAuthGoogleArgs and GrafanaGrafanaUserConfigAuthGoogleOutput values.
// You can construct a concrete instance of `GrafanaGrafanaUserConfigAuthGoogleInput` via:
//
//          GrafanaGrafanaUserConfigAuthGoogleArgs{...}
type GrafanaGrafanaUserConfigAuthGoogleInput interface {
	pulumi.Input

	ToGrafanaGrafanaUserConfigAuthGoogleOutput() GrafanaGrafanaUserConfigAuthGoogleOutput
	ToGrafanaGrafanaUserConfigAuthGoogleOutputWithContext(context.Context) GrafanaGrafanaUserConfigAuthGoogleOutput
}

type GrafanaGrafanaUserConfigAuthGoogleArgs struct {
	// Automatically sign-up users on successful sign-in
	AllowSignUp pulumi.StringPtrInput `pulumi:"allowSignUp"`
	// Allowed domain
	AllowedDomains pulumi.StringArrayInput `pulumi:"allowedDomains"`
	// Client ID from provider
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Client secret from provider
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
}

func (GrafanaGrafanaUserConfigAuthGoogleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaGrafanaUserConfigAuthGoogle)(nil)).Elem()
}

func (i GrafanaGrafanaUserConfigAuthGoogleArgs) ToGrafanaGrafanaUserConfigAuthGoogleOutput() GrafanaGrafanaUserConfigAuthGoogleOutput {
	return i.ToGrafanaGrafanaUserConfigAuthGoogleOutputWithContext(context.Background())
}

func (i GrafanaGrafanaUserConfigAuthGoogleArgs) ToGrafanaGrafanaUserConfigAuthGoogleOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigAuthGoogleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigAuthGoogleOutput)
}

func (i GrafanaGrafanaUserConfigAuthGoogleArgs) ToGrafanaGrafanaUserConfigAuthGooglePtrOutput() GrafanaGrafanaUserConfigAuthGooglePtrOutput {
	return i.ToGrafanaGrafanaUserConfigAuthGooglePtrOutputWithContext(context.Background())
}

func (i GrafanaGrafanaUserConfigAuthGoogleArgs) ToGrafanaGrafanaUserConfigAuthGooglePtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigAuthGooglePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigAuthGoogleOutput).ToGrafanaGrafanaUserConfigAuthGooglePtrOutputWithContext(ctx)
}

// GrafanaGrafanaUserConfigAuthGooglePtrInput is an input type that accepts GrafanaGrafanaUserConfigAuthGoogleArgs, GrafanaGrafanaUserConfigAuthGooglePtr and GrafanaGrafanaUserConfigAuthGooglePtrOutput values.
// You can construct a concrete instance of `GrafanaGrafanaUserConfigAuthGooglePtrInput` via:
//
//          GrafanaGrafanaUserConfigAuthGoogleArgs{...}
//
//  or:
//
//          nil
type GrafanaGrafanaUserConfigAuthGooglePtrInput interface {
	pulumi.Input

	ToGrafanaGrafanaUserConfigAuthGooglePtrOutput() GrafanaGrafanaUserConfigAuthGooglePtrOutput
	ToGrafanaGrafanaUserConfigAuthGooglePtrOutputWithContext(context.Context) GrafanaGrafanaUserConfigAuthGooglePtrOutput
}

type grafanaGrafanaUserConfigAuthGooglePtrType GrafanaGrafanaUserConfigAuthGoogleArgs

func GrafanaGrafanaUserConfigAuthGooglePtr(v *GrafanaGrafanaUserConfigAuthGoogleArgs) GrafanaGrafanaUserConfigAuthGooglePtrInput {
	return (*grafanaGrafanaUserConfigAuthGooglePtrType)(v)
}

func (*grafanaGrafanaUserConfigAuthGooglePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaGrafanaUserConfigAuthGoogle)(nil)).Elem()
}

func (i *grafanaGrafanaUserConfigAuthGooglePtrType) ToGrafanaGrafanaUserConfigAuthGooglePtrOutput() GrafanaGrafanaUserConfigAuthGooglePtrOutput {
	return i.ToGrafanaGrafanaUserConfigAuthGooglePtrOutputWithContext(context.Background())
}

func (i *grafanaGrafanaUserConfigAuthGooglePtrType) ToGrafanaGrafanaUserConfigAuthGooglePtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigAuthGooglePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigAuthGooglePtrOutput)
}

type GrafanaGrafanaUserConfigAuthGoogleOutput struct{ *pulumi.OutputState }

func (GrafanaGrafanaUserConfigAuthGoogleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaGrafanaUserConfigAuthGoogle)(nil)).Elem()
}

func (o GrafanaGrafanaUserConfigAuthGoogleOutput) ToGrafanaGrafanaUserConfigAuthGoogleOutput() GrafanaGrafanaUserConfigAuthGoogleOutput {
	return o
}

func (o GrafanaGrafanaUserConfigAuthGoogleOutput) ToGrafanaGrafanaUserConfigAuthGoogleOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigAuthGoogleOutput {
	return o
}

func (o GrafanaGrafanaUserConfigAuthGoogleOutput) ToGrafanaGrafanaUserConfigAuthGooglePtrOutput() GrafanaGrafanaUserConfigAuthGooglePtrOutput {
	return o.ToGrafanaGrafanaUserConfigAuthGooglePtrOutputWithContext(context.Background())
}

func (o GrafanaGrafanaUserConfigAuthGoogleOutput) ToGrafanaGrafanaUserConfigAuthGooglePtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigAuthGooglePtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGoogle) *GrafanaGrafanaUserConfigAuthGoogle {
		return &v
	}).(GrafanaGrafanaUserConfigAuthGooglePtrOutput)
}

// Automatically sign-up users on successful sign-in
func (o GrafanaGrafanaUserConfigAuthGoogleOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGoogle) *string { return v.AllowSignUp }).(pulumi.StringPtrOutput)
}

// Allowed domain
func (o GrafanaGrafanaUserConfigAuthGoogleOutput) AllowedDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGoogle) []string { return v.AllowedDomains }).(pulumi.StringArrayOutput)
}

// Client ID from provider
func (o GrafanaGrafanaUserConfigAuthGoogleOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGoogle) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Client secret from provider
func (o GrafanaGrafanaUserConfigAuthGoogleOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigAuthGoogle) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

type GrafanaGrafanaUserConfigAuthGooglePtrOutput struct{ *pulumi.OutputState }

func (GrafanaGrafanaUserConfigAuthGooglePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaGrafanaUserConfigAuthGoogle)(nil)).Elem()
}

func (o GrafanaGrafanaUserConfigAuthGooglePtrOutput) ToGrafanaGrafanaUserConfigAuthGooglePtrOutput() GrafanaGrafanaUserConfigAuthGooglePtrOutput {
	return o
}

func (o GrafanaGrafanaUserConfigAuthGooglePtrOutput) ToGrafanaGrafanaUserConfigAuthGooglePtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigAuthGooglePtrOutput {
	return o
}

func (o GrafanaGrafanaUserConfigAuthGooglePtrOutput) Elem() GrafanaGrafanaUserConfigAuthGoogleOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGoogle) GrafanaGrafanaUserConfigAuthGoogle { return *v }).(GrafanaGrafanaUserConfigAuthGoogleOutput)
}

// Automatically sign-up users on successful sign-in
func (o GrafanaGrafanaUserConfigAuthGooglePtrOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGoogle) *string {
		if v == nil {
			return nil
		}
		return v.AllowSignUp
	}).(pulumi.StringPtrOutput)
}

// Allowed domain
func (o GrafanaGrafanaUserConfigAuthGooglePtrOutput) AllowedDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGoogle) []string {
		if v == nil {
			return nil
		}
		return v.AllowedDomains
	}).(pulumi.StringArrayOutput)
}

// Client ID from provider
func (o GrafanaGrafanaUserConfigAuthGooglePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGoogle) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client secret from provider
func (o GrafanaGrafanaUserConfigAuthGooglePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigAuthGoogle) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

type GrafanaGrafanaUserConfigExternalImageStorage struct {
	// S3 access key. Requires permissions to the S3 bucket for the
	// s3:PutObject and s3:PutObjectAcl actions
	AccessKey *string `pulumi:"accessKey"`
	// Bucket URL for S3
	BucketUrl *string `pulumi:"bucketUrl"`
	// Provider type
	Provider *string `pulumi:"provider"`
	// S3 secret key
	SecretKey *string `pulumi:"secretKey"`
}

// GrafanaGrafanaUserConfigExternalImageStorageInput is an input type that accepts GrafanaGrafanaUserConfigExternalImageStorageArgs and GrafanaGrafanaUserConfigExternalImageStorageOutput values.
// You can construct a concrete instance of `GrafanaGrafanaUserConfigExternalImageStorageInput` via:
//
//          GrafanaGrafanaUserConfigExternalImageStorageArgs{...}
type GrafanaGrafanaUserConfigExternalImageStorageInput interface {
	pulumi.Input

	ToGrafanaGrafanaUserConfigExternalImageStorageOutput() GrafanaGrafanaUserConfigExternalImageStorageOutput
	ToGrafanaGrafanaUserConfigExternalImageStorageOutputWithContext(context.Context) GrafanaGrafanaUserConfigExternalImageStorageOutput
}

type GrafanaGrafanaUserConfigExternalImageStorageArgs struct {
	// S3 access key. Requires permissions to the S3 bucket for the
	// s3:PutObject and s3:PutObjectAcl actions
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Bucket URL for S3
	BucketUrl pulumi.StringPtrInput `pulumi:"bucketUrl"`
	// Provider type
	Provider pulumi.StringPtrInput `pulumi:"provider"`
	// S3 secret key
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
}

func (GrafanaGrafanaUserConfigExternalImageStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaGrafanaUserConfigExternalImageStorage)(nil)).Elem()
}

func (i GrafanaGrafanaUserConfigExternalImageStorageArgs) ToGrafanaGrafanaUserConfigExternalImageStorageOutput() GrafanaGrafanaUserConfigExternalImageStorageOutput {
	return i.ToGrafanaGrafanaUserConfigExternalImageStorageOutputWithContext(context.Background())
}

func (i GrafanaGrafanaUserConfigExternalImageStorageArgs) ToGrafanaGrafanaUserConfigExternalImageStorageOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigExternalImageStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigExternalImageStorageOutput)
}

func (i GrafanaGrafanaUserConfigExternalImageStorageArgs) ToGrafanaGrafanaUserConfigExternalImageStoragePtrOutput() GrafanaGrafanaUserConfigExternalImageStoragePtrOutput {
	return i.ToGrafanaGrafanaUserConfigExternalImageStoragePtrOutputWithContext(context.Background())
}

func (i GrafanaGrafanaUserConfigExternalImageStorageArgs) ToGrafanaGrafanaUserConfigExternalImageStoragePtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigExternalImageStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigExternalImageStorageOutput).ToGrafanaGrafanaUserConfigExternalImageStoragePtrOutputWithContext(ctx)
}

// GrafanaGrafanaUserConfigExternalImageStoragePtrInput is an input type that accepts GrafanaGrafanaUserConfigExternalImageStorageArgs, GrafanaGrafanaUserConfigExternalImageStoragePtr and GrafanaGrafanaUserConfigExternalImageStoragePtrOutput values.
// You can construct a concrete instance of `GrafanaGrafanaUserConfigExternalImageStoragePtrInput` via:
//
//          GrafanaGrafanaUserConfigExternalImageStorageArgs{...}
//
//  or:
//
//          nil
type GrafanaGrafanaUserConfigExternalImageStoragePtrInput interface {
	pulumi.Input

	ToGrafanaGrafanaUserConfigExternalImageStoragePtrOutput() GrafanaGrafanaUserConfigExternalImageStoragePtrOutput
	ToGrafanaGrafanaUserConfigExternalImageStoragePtrOutputWithContext(context.Context) GrafanaGrafanaUserConfigExternalImageStoragePtrOutput
}

type grafanaGrafanaUserConfigExternalImageStoragePtrType GrafanaGrafanaUserConfigExternalImageStorageArgs

func GrafanaGrafanaUserConfigExternalImageStoragePtr(v *GrafanaGrafanaUserConfigExternalImageStorageArgs) GrafanaGrafanaUserConfigExternalImageStoragePtrInput {
	return (*grafanaGrafanaUserConfigExternalImageStoragePtrType)(v)
}

func (*grafanaGrafanaUserConfigExternalImageStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaGrafanaUserConfigExternalImageStorage)(nil)).Elem()
}

func (i *grafanaGrafanaUserConfigExternalImageStoragePtrType) ToGrafanaGrafanaUserConfigExternalImageStoragePtrOutput() GrafanaGrafanaUserConfigExternalImageStoragePtrOutput {
	return i.ToGrafanaGrafanaUserConfigExternalImageStoragePtrOutputWithContext(context.Background())
}

func (i *grafanaGrafanaUserConfigExternalImageStoragePtrType) ToGrafanaGrafanaUserConfigExternalImageStoragePtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigExternalImageStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigExternalImageStoragePtrOutput)
}

type GrafanaGrafanaUserConfigExternalImageStorageOutput struct{ *pulumi.OutputState }

func (GrafanaGrafanaUserConfigExternalImageStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaGrafanaUserConfigExternalImageStorage)(nil)).Elem()
}

func (o GrafanaGrafanaUserConfigExternalImageStorageOutput) ToGrafanaGrafanaUserConfigExternalImageStorageOutput() GrafanaGrafanaUserConfigExternalImageStorageOutput {
	return o
}

func (o GrafanaGrafanaUserConfigExternalImageStorageOutput) ToGrafanaGrafanaUserConfigExternalImageStorageOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigExternalImageStorageOutput {
	return o
}

func (o GrafanaGrafanaUserConfigExternalImageStorageOutput) ToGrafanaGrafanaUserConfigExternalImageStoragePtrOutput() GrafanaGrafanaUserConfigExternalImageStoragePtrOutput {
	return o.ToGrafanaGrafanaUserConfigExternalImageStoragePtrOutputWithContext(context.Background())
}

func (o GrafanaGrafanaUserConfigExternalImageStorageOutput) ToGrafanaGrafanaUserConfigExternalImageStoragePtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigExternalImageStoragePtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigExternalImageStorage) *GrafanaGrafanaUserConfigExternalImageStorage {
		return &v
	}).(GrafanaGrafanaUserConfigExternalImageStoragePtrOutput)
}

// S3 access key. Requires permissions to the S3 bucket for the
// s3:PutObject and s3:PutObjectAcl actions
func (o GrafanaGrafanaUserConfigExternalImageStorageOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigExternalImageStorage) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Bucket URL for S3
func (o GrafanaGrafanaUserConfigExternalImageStorageOutput) BucketUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigExternalImageStorage) *string { return v.BucketUrl }).(pulumi.StringPtrOutput)
}

// Provider type
func (o GrafanaGrafanaUserConfigExternalImageStorageOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigExternalImageStorage) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

// S3 secret key
func (o GrafanaGrafanaUserConfigExternalImageStorageOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigExternalImageStorage) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

type GrafanaGrafanaUserConfigExternalImageStoragePtrOutput struct{ *pulumi.OutputState }

func (GrafanaGrafanaUserConfigExternalImageStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaGrafanaUserConfigExternalImageStorage)(nil)).Elem()
}

func (o GrafanaGrafanaUserConfigExternalImageStoragePtrOutput) ToGrafanaGrafanaUserConfigExternalImageStoragePtrOutput() GrafanaGrafanaUserConfigExternalImageStoragePtrOutput {
	return o
}

func (o GrafanaGrafanaUserConfigExternalImageStoragePtrOutput) ToGrafanaGrafanaUserConfigExternalImageStoragePtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigExternalImageStoragePtrOutput {
	return o
}

func (o GrafanaGrafanaUserConfigExternalImageStoragePtrOutput) Elem() GrafanaGrafanaUserConfigExternalImageStorageOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigExternalImageStorage) GrafanaGrafanaUserConfigExternalImageStorage {
		return *v
	}).(GrafanaGrafanaUserConfigExternalImageStorageOutput)
}

// S3 access key. Requires permissions to the S3 bucket for the
// s3:PutObject and s3:PutObjectAcl actions
func (o GrafanaGrafanaUserConfigExternalImageStoragePtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigExternalImageStorage) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Bucket URL for S3
func (o GrafanaGrafanaUserConfigExternalImageStoragePtrOutput) BucketUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigExternalImageStorage) *string {
		if v == nil {
			return nil
		}
		return v.BucketUrl
	}).(pulumi.StringPtrOutput)
}

// Provider type
func (o GrafanaGrafanaUserConfigExternalImageStoragePtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigExternalImageStorage) *string {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(pulumi.StringPtrOutput)
}

// S3 secret key
func (o GrafanaGrafanaUserConfigExternalImageStoragePtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigExternalImageStorage) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

type GrafanaGrafanaUserConfigPrivateAccess struct {
	// Allow clients to connect to grafana from the public internet for service nodes that
	// are in a project VPC or another type of private network.
	Grafana *string `pulumi:"grafana"`
}

// GrafanaGrafanaUserConfigPrivateAccessInput is an input type that accepts GrafanaGrafanaUserConfigPrivateAccessArgs and GrafanaGrafanaUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `GrafanaGrafanaUserConfigPrivateAccessInput` via:
//
//          GrafanaGrafanaUserConfigPrivateAccessArgs{...}
type GrafanaGrafanaUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToGrafanaGrafanaUserConfigPrivateAccessOutput() GrafanaGrafanaUserConfigPrivateAccessOutput
	ToGrafanaGrafanaUserConfigPrivateAccessOutputWithContext(context.Context) GrafanaGrafanaUserConfigPrivateAccessOutput
}

type GrafanaGrafanaUserConfigPrivateAccessArgs struct {
	// Allow clients to connect to grafana from the public internet for service nodes that
	// are in a project VPC or another type of private network.
	Grafana pulumi.StringPtrInput `pulumi:"grafana"`
}

func (GrafanaGrafanaUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaGrafanaUserConfigPrivateAccess)(nil)).Elem()
}

func (i GrafanaGrafanaUserConfigPrivateAccessArgs) ToGrafanaGrafanaUserConfigPrivateAccessOutput() GrafanaGrafanaUserConfigPrivateAccessOutput {
	return i.ToGrafanaGrafanaUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i GrafanaGrafanaUserConfigPrivateAccessArgs) ToGrafanaGrafanaUserConfigPrivateAccessOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigPrivateAccessOutput)
}

func (i GrafanaGrafanaUserConfigPrivateAccessArgs) ToGrafanaGrafanaUserConfigPrivateAccessPtrOutput() GrafanaGrafanaUserConfigPrivateAccessPtrOutput {
	return i.ToGrafanaGrafanaUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i GrafanaGrafanaUserConfigPrivateAccessArgs) ToGrafanaGrafanaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigPrivateAccessOutput).ToGrafanaGrafanaUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// GrafanaGrafanaUserConfigPrivateAccessPtrInput is an input type that accepts GrafanaGrafanaUserConfigPrivateAccessArgs, GrafanaGrafanaUserConfigPrivateAccessPtr and GrafanaGrafanaUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `GrafanaGrafanaUserConfigPrivateAccessPtrInput` via:
//
//          GrafanaGrafanaUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type GrafanaGrafanaUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToGrafanaGrafanaUserConfigPrivateAccessPtrOutput() GrafanaGrafanaUserConfigPrivateAccessPtrOutput
	ToGrafanaGrafanaUserConfigPrivateAccessPtrOutputWithContext(context.Context) GrafanaGrafanaUserConfigPrivateAccessPtrOutput
}

type grafanaGrafanaUserConfigPrivateAccessPtrType GrafanaGrafanaUserConfigPrivateAccessArgs

func GrafanaGrafanaUserConfigPrivateAccessPtr(v *GrafanaGrafanaUserConfigPrivateAccessArgs) GrafanaGrafanaUserConfigPrivateAccessPtrInput {
	return (*grafanaGrafanaUserConfigPrivateAccessPtrType)(v)
}

func (*grafanaGrafanaUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaGrafanaUserConfigPrivateAccess)(nil)).Elem()
}

func (i *grafanaGrafanaUserConfigPrivateAccessPtrType) ToGrafanaGrafanaUserConfigPrivateAccessPtrOutput() GrafanaGrafanaUserConfigPrivateAccessPtrOutput {
	return i.ToGrafanaGrafanaUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *grafanaGrafanaUserConfigPrivateAccessPtrType) ToGrafanaGrafanaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigPrivateAccessPtrOutput)
}

type GrafanaGrafanaUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (GrafanaGrafanaUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaGrafanaUserConfigPrivateAccess)(nil)).Elem()
}

func (o GrafanaGrafanaUserConfigPrivateAccessOutput) ToGrafanaGrafanaUserConfigPrivateAccessOutput() GrafanaGrafanaUserConfigPrivateAccessOutput {
	return o
}

func (o GrafanaGrafanaUserConfigPrivateAccessOutput) ToGrafanaGrafanaUserConfigPrivateAccessOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigPrivateAccessOutput {
	return o
}

func (o GrafanaGrafanaUserConfigPrivateAccessOutput) ToGrafanaGrafanaUserConfigPrivateAccessPtrOutput() GrafanaGrafanaUserConfigPrivateAccessPtrOutput {
	return o.ToGrafanaGrafanaUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o GrafanaGrafanaUserConfigPrivateAccessOutput) ToGrafanaGrafanaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigPrivateAccess) *GrafanaGrafanaUserConfigPrivateAccess {
		return &v
	}).(GrafanaGrafanaUserConfigPrivateAccessPtrOutput)
}

// Allow clients to connect to grafana from the public internet for service nodes that
// are in a project VPC or another type of private network.
func (o GrafanaGrafanaUserConfigPrivateAccessOutput) Grafana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigPrivateAccess) *string { return v.Grafana }).(pulumi.StringPtrOutput)
}

type GrafanaGrafanaUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (GrafanaGrafanaUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaGrafanaUserConfigPrivateAccess)(nil)).Elem()
}

func (o GrafanaGrafanaUserConfigPrivateAccessPtrOutput) ToGrafanaGrafanaUserConfigPrivateAccessPtrOutput() GrafanaGrafanaUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GrafanaGrafanaUserConfigPrivateAccessPtrOutput) ToGrafanaGrafanaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GrafanaGrafanaUserConfigPrivateAccessPtrOutput) Elem() GrafanaGrafanaUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigPrivateAccess) GrafanaGrafanaUserConfigPrivateAccess { return *v }).(GrafanaGrafanaUserConfigPrivateAccessOutput)
}

// Allow clients to connect to grafana from the public internet for service nodes that
// are in a project VPC or another type of private network.
func (o GrafanaGrafanaUserConfigPrivateAccessPtrOutput) Grafana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Grafana
	}).(pulumi.StringPtrOutput)
}

type GrafanaGrafanaUserConfigPrivatelinkAccess struct {
	// Allow clients to connect to grafana from the public internet for service nodes that
	// are in a project VPC or another type of private network.
	Grafana *string `pulumi:"grafana"`
}

// GrafanaGrafanaUserConfigPrivatelinkAccessInput is an input type that accepts GrafanaGrafanaUserConfigPrivatelinkAccessArgs and GrafanaGrafanaUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `GrafanaGrafanaUserConfigPrivatelinkAccessInput` via:
//
//          GrafanaGrafanaUserConfigPrivatelinkAccessArgs{...}
type GrafanaGrafanaUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToGrafanaGrafanaUserConfigPrivatelinkAccessOutput() GrafanaGrafanaUserConfigPrivatelinkAccessOutput
	ToGrafanaGrafanaUserConfigPrivatelinkAccessOutputWithContext(context.Context) GrafanaGrafanaUserConfigPrivatelinkAccessOutput
}

type GrafanaGrafanaUserConfigPrivatelinkAccessArgs struct {
	// Allow clients to connect to grafana from the public internet for service nodes that
	// are in a project VPC or another type of private network.
	Grafana pulumi.StringPtrInput `pulumi:"grafana"`
}

func (GrafanaGrafanaUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaGrafanaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i GrafanaGrafanaUserConfigPrivatelinkAccessArgs) ToGrafanaGrafanaUserConfigPrivatelinkAccessOutput() GrafanaGrafanaUserConfigPrivatelinkAccessOutput {
	return i.ToGrafanaGrafanaUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i GrafanaGrafanaUserConfigPrivatelinkAccessArgs) ToGrafanaGrafanaUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigPrivatelinkAccessOutput)
}

func (i GrafanaGrafanaUserConfigPrivatelinkAccessArgs) ToGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput() GrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i GrafanaGrafanaUserConfigPrivatelinkAccessArgs) ToGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigPrivatelinkAccessOutput).ToGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// GrafanaGrafanaUserConfigPrivatelinkAccessPtrInput is an input type that accepts GrafanaGrafanaUserConfigPrivatelinkAccessArgs, GrafanaGrafanaUserConfigPrivatelinkAccessPtr and GrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `GrafanaGrafanaUserConfigPrivatelinkAccessPtrInput` via:
//
//          GrafanaGrafanaUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type GrafanaGrafanaUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput() GrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput
	ToGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) GrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput
}

type grafanaGrafanaUserConfigPrivatelinkAccessPtrType GrafanaGrafanaUserConfigPrivatelinkAccessArgs

func GrafanaGrafanaUserConfigPrivatelinkAccessPtr(v *GrafanaGrafanaUserConfigPrivatelinkAccessArgs) GrafanaGrafanaUserConfigPrivatelinkAccessPtrInput {
	return (*grafanaGrafanaUserConfigPrivatelinkAccessPtrType)(v)
}

func (*grafanaGrafanaUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaGrafanaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *grafanaGrafanaUserConfigPrivatelinkAccessPtrType) ToGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput() GrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *grafanaGrafanaUserConfigPrivatelinkAccessPtrType) ToGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput)
}

type GrafanaGrafanaUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (GrafanaGrafanaUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaGrafanaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GrafanaGrafanaUserConfigPrivatelinkAccessOutput) ToGrafanaGrafanaUserConfigPrivatelinkAccessOutput() GrafanaGrafanaUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GrafanaGrafanaUserConfigPrivatelinkAccessOutput) ToGrafanaGrafanaUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GrafanaGrafanaUserConfigPrivatelinkAccessOutput) ToGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput() GrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return o.ToGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o GrafanaGrafanaUserConfigPrivatelinkAccessOutput) ToGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigPrivatelinkAccess) *GrafanaGrafanaUserConfigPrivatelinkAccess {
		return &v
	}).(GrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput)
}

// Allow clients to connect to grafana from the public internet for service nodes that
// are in a project VPC or another type of private network.
func (o GrafanaGrafanaUserConfigPrivatelinkAccessOutput) Grafana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigPrivatelinkAccess) *string { return v.Grafana }).(pulumi.StringPtrOutput)
}

type GrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (GrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaGrafanaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput) ToGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput() GrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput) ToGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput) Elem() GrafanaGrafanaUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigPrivatelinkAccess) GrafanaGrafanaUserConfigPrivatelinkAccess {
		return *v
	}).(GrafanaGrafanaUserConfigPrivatelinkAccessOutput)
}

// Allow clients to connect to grafana from the public internet for service nodes that
// are in a project VPC or another type of private network.
func (o GrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput) Grafana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Grafana
	}).(pulumi.StringPtrOutput)
}

type GrafanaGrafanaUserConfigPublicAccess struct {
	// Allow clients to connect to grafana from the public internet for service nodes that
	// are in a project VPC or another type of private network.
	Grafana *string `pulumi:"grafana"`
}

// GrafanaGrafanaUserConfigPublicAccessInput is an input type that accepts GrafanaGrafanaUserConfigPublicAccessArgs and GrafanaGrafanaUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `GrafanaGrafanaUserConfigPublicAccessInput` via:
//
//          GrafanaGrafanaUserConfigPublicAccessArgs{...}
type GrafanaGrafanaUserConfigPublicAccessInput interface {
	pulumi.Input

	ToGrafanaGrafanaUserConfigPublicAccessOutput() GrafanaGrafanaUserConfigPublicAccessOutput
	ToGrafanaGrafanaUserConfigPublicAccessOutputWithContext(context.Context) GrafanaGrafanaUserConfigPublicAccessOutput
}

type GrafanaGrafanaUserConfigPublicAccessArgs struct {
	// Allow clients to connect to grafana from the public internet for service nodes that
	// are in a project VPC or another type of private network.
	Grafana pulumi.StringPtrInput `pulumi:"grafana"`
}

func (GrafanaGrafanaUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaGrafanaUserConfigPublicAccess)(nil)).Elem()
}

func (i GrafanaGrafanaUserConfigPublicAccessArgs) ToGrafanaGrafanaUserConfigPublicAccessOutput() GrafanaGrafanaUserConfigPublicAccessOutput {
	return i.ToGrafanaGrafanaUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i GrafanaGrafanaUserConfigPublicAccessArgs) ToGrafanaGrafanaUserConfigPublicAccessOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigPublicAccessOutput)
}

func (i GrafanaGrafanaUserConfigPublicAccessArgs) ToGrafanaGrafanaUserConfigPublicAccessPtrOutput() GrafanaGrafanaUserConfigPublicAccessPtrOutput {
	return i.ToGrafanaGrafanaUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i GrafanaGrafanaUserConfigPublicAccessArgs) ToGrafanaGrafanaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigPublicAccessOutput).ToGrafanaGrafanaUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// GrafanaGrafanaUserConfigPublicAccessPtrInput is an input type that accepts GrafanaGrafanaUserConfigPublicAccessArgs, GrafanaGrafanaUserConfigPublicAccessPtr and GrafanaGrafanaUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `GrafanaGrafanaUserConfigPublicAccessPtrInput` via:
//
//          GrafanaGrafanaUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type GrafanaGrafanaUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToGrafanaGrafanaUserConfigPublicAccessPtrOutput() GrafanaGrafanaUserConfigPublicAccessPtrOutput
	ToGrafanaGrafanaUserConfigPublicAccessPtrOutputWithContext(context.Context) GrafanaGrafanaUserConfigPublicAccessPtrOutput
}

type grafanaGrafanaUserConfigPublicAccessPtrType GrafanaGrafanaUserConfigPublicAccessArgs

func GrafanaGrafanaUserConfigPublicAccessPtr(v *GrafanaGrafanaUserConfigPublicAccessArgs) GrafanaGrafanaUserConfigPublicAccessPtrInput {
	return (*grafanaGrafanaUserConfigPublicAccessPtrType)(v)
}

func (*grafanaGrafanaUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaGrafanaUserConfigPublicAccess)(nil)).Elem()
}

func (i *grafanaGrafanaUserConfigPublicAccessPtrType) ToGrafanaGrafanaUserConfigPublicAccessPtrOutput() GrafanaGrafanaUserConfigPublicAccessPtrOutput {
	return i.ToGrafanaGrafanaUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *grafanaGrafanaUserConfigPublicAccessPtrType) ToGrafanaGrafanaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigPublicAccessPtrOutput)
}

type GrafanaGrafanaUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (GrafanaGrafanaUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaGrafanaUserConfigPublicAccess)(nil)).Elem()
}

func (o GrafanaGrafanaUserConfigPublicAccessOutput) ToGrafanaGrafanaUserConfigPublicAccessOutput() GrafanaGrafanaUserConfigPublicAccessOutput {
	return o
}

func (o GrafanaGrafanaUserConfigPublicAccessOutput) ToGrafanaGrafanaUserConfigPublicAccessOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigPublicAccessOutput {
	return o
}

func (o GrafanaGrafanaUserConfigPublicAccessOutput) ToGrafanaGrafanaUserConfigPublicAccessPtrOutput() GrafanaGrafanaUserConfigPublicAccessPtrOutput {
	return o.ToGrafanaGrafanaUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o GrafanaGrafanaUserConfigPublicAccessOutput) ToGrafanaGrafanaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigPublicAccess) *GrafanaGrafanaUserConfigPublicAccess {
		return &v
	}).(GrafanaGrafanaUserConfigPublicAccessPtrOutput)
}

// Allow clients to connect to grafana from the public internet for service nodes that
// are in a project VPC or another type of private network.
func (o GrafanaGrafanaUserConfigPublicAccessOutput) Grafana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigPublicAccess) *string { return v.Grafana }).(pulumi.StringPtrOutput)
}

type GrafanaGrafanaUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (GrafanaGrafanaUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaGrafanaUserConfigPublicAccess)(nil)).Elem()
}

func (o GrafanaGrafanaUserConfigPublicAccessPtrOutput) ToGrafanaGrafanaUserConfigPublicAccessPtrOutput() GrafanaGrafanaUserConfigPublicAccessPtrOutput {
	return o
}

func (o GrafanaGrafanaUserConfigPublicAccessPtrOutput) ToGrafanaGrafanaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigPublicAccessPtrOutput {
	return o
}

func (o GrafanaGrafanaUserConfigPublicAccessPtrOutput) Elem() GrafanaGrafanaUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigPublicAccess) GrafanaGrafanaUserConfigPublicAccess { return *v }).(GrafanaGrafanaUserConfigPublicAccessOutput)
}

// Allow clients to connect to grafana from the public internet for service nodes that
// are in a project VPC or another type of private network.
func (o GrafanaGrafanaUserConfigPublicAccessPtrOutput) Grafana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Grafana
	}).(pulumi.StringPtrOutput)
}

type GrafanaGrafanaUserConfigSmtpServer struct {
	// Address used for sending emails
	FromAddress *string `pulumi:"fromAddress"`
	// Name used in outgoing emails, defaults to Grafana
	FromName *string `pulumi:"fromName"`
	// Server hostname or IP
	Host *string `pulumi:"host"`
	// Password for SMTP authentication
	Password *string `pulumi:"password"`
	// SMTP server port
	Port *string `pulumi:"port"`
	// Skip verifying server certificate. Defaults to false
	SkipVerify *string `pulumi:"skipVerify"`
	// Either OpportunisticStartTLS, MandatoryStartTLS or NoStartTLS.
	// Default is OpportunisticStartTLS.
	StarttlsPolicy *string `pulumi:"starttlsPolicy"`
	// Username for SMTP authentication
	Username *string `pulumi:"username"`
}

// GrafanaGrafanaUserConfigSmtpServerInput is an input type that accepts GrafanaGrafanaUserConfigSmtpServerArgs and GrafanaGrafanaUserConfigSmtpServerOutput values.
// You can construct a concrete instance of `GrafanaGrafanaUserConfigSmtpServerInput` via:
//
//          GrafanaGrafanaUserConfigSmtpServerArgs{...}
type GrafanaGrafanaUserConfigSmtpServerInput interface {
	pulumi.Input

	ToGrafanaGrafanaUserConfigSmtpServerOutput() GrafanaGrafanaUserConfigSmtpServerOutput
	ToGrafanaGrafanaUserConfigSmtpServerOutputWithContext(context.Context) GrafanaGrafanaUserConfigSmtpServerOutput
}

type GrafanaGrafanaUserConfigSmtpServerArgs struct {
	// Address used for sending emails
	FromAddress pulumi.StringPtrInput `pulumi:"fromAddress"`
	// Name used in outgoing emails, defaults to Grafana
	FromName pulumi.StringPtrInput `pulumi:"fromName"`
	// Server hostname or IP
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Password for SMTP authentication
	Password pulumi.StringPtrInput `pulumi:"password"`
	// SMTP server port
	Port pulumi.StringPtrInput `pulumi:"port"`
	// Skip verifying server certificate. Defaults to false
	SkipVerify pulumi.StringPtrInput `pulumi:"skipVerify"`
	// Either OpportunisticStartTLS, MandatoryStartTLS or NoStartTLS.
	// Default is OpportunisticStartTLS.
	StarttlsPolicy pulumi.StringPtrInput `pulumi:"starttlsPolicy"`
	// Username for SMTP authentication
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (GrafanaGrafanaUserConfigSmtpServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaGrafanaUserConfigSmtpServer)(nil)).Elem()
}

func (i GrafanaGrafanaUserConfigSmtpServerArgs) ToGrafanaGrafanaUserConfigSmtpServerOutput() GrafanaGrafanaUserConfigSmtpServerOutput {
	return i.ToGrafanaGrafanaUserConfigSmtpServerOutputWithContext(context.Background())
}

func (i GrafanaGrafanaUserConfigSmtpServerArgs) ToGrafanaGrafanaUserConfigSmtpServerOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigSmtpServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigSmtpServerOutput)
}

func (i GrafanaGrafanaUserConfigSmtpServerArgs) ToGrafanaGrafanaUserConfigSmtpServerPtrOutput() GrafanaGrafanaUserConfigSmtpServerPtrOutput {
	return i.ToGrafanaGrafanaUserConfigSmtpServerPtrOutputWithContext(context.Background())
}

func (i GrafanaGrafanaUserConfigSmtpServerArgs) ToGrafanaGrafanaUserConfigSmtpServerPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigSmtpServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigSmtpServerOutput).ToGrafanaGrafanaUserConfigSmtpServerPtrOutputWithContext(ctx)
}

// GrafanaGrafanaUserConfigSmtpServerPtrInput is an input type that accepts GrafanaGrafanaUserConfigSmtpServerArgs, GrafanaGrafanaUserConfigSmtpServerPtr and GrafanaGrafanaUserConfigSmtpServerPtrOutput values.
// You can construct a concrete instance of `GrafanaGrafanaUserConfigSmtpServerPtrInput` via:
//
//          GrafanaGrafanaUserConfigSmtpServerArgs{...}
//
//  or:
//
//          nil
type GrafanaGrafanaUserConfigSmtpServerPtrInput interface {
	pulumi.Input

	ToGrafanaGrafanaUserConfigSmtpServerPtrOutput() GrafanaGrafanaUserConfigSmtpServerPtrOutput
	ToGrafanaGrafanaUserConfigSmtpServerPtrOutputWithContext(context.Context) GrafanaGrafanaUserConfigSmtpServerPtrOutput
}

type grafanaGrafanaUserConfigSmtpServerPtrType GrafanaGrafanaUserConfigSmtpServerArgs

func GrafanaGrafanaUserConfigSmtpServerPtr(v *GrafanaGrafanaUserConfigSmtpServerArgs) GrafanaGrafanaUserConfigSmtpServerPtrInput {
	return (*grafanaGrafanaUserConfigSmtpServerPtrType)(v)
}

func (*grafanaGrafanaUserConfigSmtpServerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaGrafanaUserConfigSmtpServer)(nil)).Elem()
}

func (i *grafanaGrafanaUserConfigSmtpServerPtrType) ToGrafanaGrafanaUserConfigSmtpServerPtrOutput() GrafanaGrafanaUserConfigSmtpServerPtrOutput {
	return i.ToGrafanaGrafanaUserConfigSmtpServerPtrOutputWithContext(context.Background())
}

func (i *grafanaGrafanaUserConfigSmtpServerPtrType) ToGrafanaGrafanaUserConfigSmtpServerPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigSmtpServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaGrafanaUserConfigSmtpServerPtrOutput)
}

type GrafanaGrafanaUserConfigSmtpServerOutput struct{ *pulumi.OutputState }

func (GrafanaGrafanaUserConfigSmtpServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaGrafanaUserConfigSmtpServer)(nil)).Elem()
}

func (o GrafanaGrafanaUserConfigSmtpServerOutput) ToGrafanaGrafanaUserConfigSmtpServerOutput() GrafanaGrafanaUserConfigSmtpServerOutput {
	return o
}

func (o GrafanaGrafanaUserConfigSmtpServerOutput) ToGrafanaGrafanaUserConfigSmtpServerOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigSmtpServerOutput {
	return o
}

func (o GrafanaGrafanaUserConfigSmtpServerOutput) ToGrafanaGrafanaUserConfigSmtpServerPtrOutput() GrafanaGrafanaUserConfigSmtpServerPtrOutput {
	return o.ToGrafanaGrafanaUserConfigSmtpServerPtrOutputWithContext(context.Background())
}

func (o GrafanaGrafanaUserConfigSmtpServerOutput) ToGrafanaGrafanaUserConfigSmtpServerPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigSmtpServerPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigSmtpServer) *GrafanaGrafanaUserConfigSmtpServer {
		return &v
	}).(GrafanaGrafanaUserConfigSmtpServerPtrOutput)
}

// Address used for sending emails
func (o GrafanaGrafanaUserConfigSmtpServerOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigSmtpServer) *string { return v.FromAddress }).(pulumi.StringPtrOutput)
}

// Name used in outgoing emails, defaults to Grafana
func (o GrafanaGrafanaUserConfigSmtpServerOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigSmtpServer) *string { return v.FromName }).(pulumi.StringPtrOutput)
}

// Server hostname or IP
func (o GrafanaGrafanaUserConfigSmtpServerOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigSmtpServer) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Password for SMTP authentication
func (o GrafanaGrafanaUserConfigSmtpServerOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigSmtpServer) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// SMTP server port
func (o GrafanaGrafanaUserConfigSmtpServerOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigSmtpServer) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// Skip verifying server certificate. Defaults to false
func (o GrafanaGrafanaUserConfigSmtpServerOutput) SkipVerify() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigSmtpServer) *string { return v.SkipVerify }).(pulumi.StringPtrOutput)
}

// Either OpportunisticStartTLS, MandatoryStartTLS or NoStartTLS.
// Default is OpportunisticStartTLS.
func (o GrafanaGrafanaUserConfigSmtpServerOutput) StarttlsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigSmtpServer) *string { return v.StarttlsPolicy }).(pulumi.StringPtrOutput)
}

// Username for SMTP authentication
func (o GrafanaGrafanaUserConfigSmtpServerOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrafanaGrafanaUserConfigSmtpServer) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GrafanaGrafanaUserConfigSmtpServerPtrOutput struct{ *pulumi.OutputState }

func (GrafanaGrafanaUserConfigSmtpServerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaGrafanaUserConfigSmtpServer)(nil)).Elem()
}

func (o GrafanaGrafanaUserConfigSmtpServerPtrOutput) ToGrafanaGrafanaUserConfigSmtpServerPtrOutput() GrafanaGrafanaUserConfigSmtpServerPtrOutput {
	return o
}

func (o GrafanaGrafanaUserConfigSmtpServerPtrOutput) ToGrafanaGrafanaUserConfigSmtpServerPtrOutputWithContext(ctx context.Context) GrafanaGrafanaUserConfigSmtpServerPtrOutput {
	return o
}

func (o GrafanaGrafanaUserConfigSmtpServerPtrOutput) Elem() GrafanaGrafanaUserConfigSmtpServerOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigSmtpServer) GrafanaGrafanaUserConfigSmtpServer { return *v }).(GrafanaGrafanaUserConfigSmtpServerOutput)
}

// Address used for sending emails
func (o GrafanaGrafanaUserConfigSmtpServerPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.FromAddress
	}).(pulumi.StringPtrOutput)
}

// Name used in outgoing emails, defaults to Grafana
func (o GrafanaGrafanaUserConfigSmtpServerPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.FromName
	}).(pulumi.StringPtrOutput)
}

// Server hostname or IP
func (o GrafanaGrafanaUserConfigSmtpServerPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Password for SMTP authentication
func (o GrafanaGrafanaUserConfigSmtpServerPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// SMTP server port
func (o GrafanaGrafanaUserConfigSmtpServerPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// Skip verifying server certificate. Defaults to false
func (o GrafanaGrafanaUserConfigSmtpServerPtrOutput) SkipVerify() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.SkipVerify
	}).(pulumi.StringPtrOutput)
}

// Either OpportunisticStartTLS, MandatoryStartTLS or NoStartTLS.
// Default is OpportunisticStartTLS.
func (o GrafanaGrafanaUserConfigSmtpServerPtrOutput) StarttlsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.StarttlsPolicy
	}).(pulumi.StringPtrOutput)
}

// Username for SMTP authentication
func (o GrafanaGrafanaUserConfigSmtpServerPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GrafanaGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type GrafanaServiceIntegration struct {
	IntegrationType   string `pulumi:"integrationType"`
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// GrafanaServiceIntegrationInput is an input type that accepts GrafanaServiceIntegrationArgs and GrafanaServiceIntegrationOutput values.
// You can construct a concrete instance of `GrafanaServiceIntegrationInput` via:
//
//          GrafanaServiceIntegrationArgs{...}
type GrafanaServiceIntegrationInput interface {
	pulumi.Input

	ToGrafanaServiceIntegrationOutput() GrafanaServiceIntegrationOutput
	ToGrafanaServiceIntegrationOutputWithContext(context.Context) GrafanaServiceIntegrationOutput
}

type GrafanaServiceIntegrationArgs struct {
	IntegrationType   pulumi.StringInput `pulumi:"integrationType"`
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (GrafanaServiceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaServiceIntegration)(nil)).Elem()
}

func (i GrafanaServiceIntegrationArgs) ToGrafanaServiceIntegrationOutput() GrafanaServiceIntegrationOutput {
	return i.ToGrafanaServiceIntegrationOutputWithContext(context.Background())
}

func (i GrafanaServiceIntegrationArgs) ToGrafanaServiceIntegrationOutputWithContext(ctx context.Context) GrafanaServiceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaServiceIntegrationOutput)
}

// GrafanaServiceIntegrationArrayInput is an input type that accepts GrafanaServiceIntegrationArray and GrafanaServiceIntegrationArrayOutput values.
// You can construct a concrete instance of `GrafanaServiceIntegrationArrayInput` via:
//
//          GrafanaServiceIntegrationArray{ GrafanaServiceIntegrationArgs{...} }
type GrafanaServiceIntegrationArrayInput interface {
	pulumi.Input

	ToGrafanaServiceIntegrationArrayOutput() GrafanaServiceIntegrationArrayOutput
	ToGrafanaServiceIntegrationArrayOutputWithContext(context.Context) GrafanaServiceIntegrationArrayOutput
}

type GrafanaServiceIntegrationArray []GrafanaServiceIntegrationInput

func (GrafanaServiceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GrafanaServiceIntegration)(nil)).Elem()
}

func (i GrafanaServiceIntegrationArray) ToGrafanaServiceIntegrationArrayOutput() GrafanaServiceIntegrationArrayOutput {
	return i.ToGrafanaServiceIntegrationArrayOutputWithContext(context.Background())
}

func (i GrafanaServiceIntegrationArray) ToGrafanaServiceIntegrationArrayOutputWithContext(ctx context.Context) GrafanaServiceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaServiceIntegrationArrayOutput)
}

type GrafanaServiceIntegrationOutput struct{ *pulumi.OutputState }

func (GrafanaServiceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrafanaServiceIntegration)(nil)).Elem()
}

func (o GrafanaServiceIntegrationOutput) ToGrafanaServiceIntegrationOutput() GrafanaServiceIntegrationOutput {
	return o
}

func (o GrafanaServiceIntegrationOutput) ToGrafanaServiceIntegrationOutputWithContext(ctx context.Context) GrafanaServiceIntegrationOutput {
	return o
}

func (o GrafanaServiceIntegrationOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v GrafanaServiceIntegration) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o GrafanaServiceIntegrationOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GrafanaServiceIntegration) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

type GrafanaServiceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (GrafanaServiceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GrafanaServiceIntegration)(nil)).Elem()
}

func (o GrafanaServiceIntegrationArrayOutput) ToGrafanaServiceIntegrationArrayOutput() GrafanaServiceIntegrationArrayOutput {
	return o
}

func (o GrafanaServiceIntegrationArrayOutput) ToGrafanaServiceIntegrationArrayOutputWithContext(ctx context.Context) GrafanaServiceIntegrationArrayOutput {
	return o
}

func (o GrafanaServiceIntegrationArrayOutput) Index(i pulumi.IntInput) GrafanaServiceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GrafanaServiceIntegration {
		return vs[0].([]GrafanaServiceIntegration)[vs[1].(int)]
	}).(GrafanaServiceIntegrationOutput)
}

type InfluxDbComponent struct {
	Component                 *string `pulumi:"component"`
	Host                      *string `pulumi:"host"`
	KafkaAuthenticationMethod *string `pulumi:"kafkaAuthenticationMethod"`
	Port                      *int    `pulumi:"port"`
	Route                     *string `pulumi:"route"`
	Ssl                       *bool   `pulumi:"ssl"`
	Usage                     *string `pulumi:"usage"`
}

// InfluxDbComponentInput is an input type that accepts InfluxDbComponentArgs and InfluxDbComponentOutput values.
// You can construct a concrete instance of `InfluxDbComponentInput` via:
//
//          InfluxDbComponentArgs{...}
type InfluxDbComponentInput interface {
	pulumi.Input

	ToInfluxDbComponentOutput() InfluxDbComponentOutput
	ToInfluxDbComponentOutputWithContext(context.Context) InfluxDbComponentOutput
}

type InfluxDbComponentArgs struct {
	Component                 pulumi.StringPtrInput `pulumi:"component"`
	Host                      pulumi.StringPtrInput `pulumi:"host"`
	KafkaAuthenticationMethod pulumi.StringPtrInput `pulumi:"kafkaAuthenticationMethod"`
	Port                      pulumi.IntPtrInput    `pulumi:"port"`
	Route                     pulumi.StringPtrInput `pulumi:"route"`
	Ssl                       pulumi.BoolPtrInput   `pulumi:"ssl"`
	Usage                     pulumi.StringPtrInput `pulumi:"usage"`
}

func (InfluxDbComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfluxDbComponent)(nil)).Elem()
}

func (i InfluxDbComponentArgs) ToInfluxDbComponentOutput() InfluxDbComponentOutput {
	return i.ToInfluxDbComponentOutputWithContext(context.Background())
}

func (i InfluxDbComponentArgs) ToInfluxDbComponentOutputWithContext(ctx context.Context) InfluxDbComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxDbComponentOutput)
}

// InfluxDbComponentArrayInput is an input type that accepts InfluxDbComponentArray and InfluxDbComponentArrayOutput values.
// You can construct a concrete instance of `InfluxDbComponentArrayInput` via:
//
//          InfluxDbComponentArray{ InfluxDbComponentArgs{...} }
type InfluxDbComponentArrayInput interface {
	pulumi.Input

	ToInfluxDbComponentArrayOutput() InfluxDbComponentArrayOutput
	ToInfluxDbComponentArrayOutputWithContext(context.Context) InfluxDbComponentArrayOutput
}

type InfluxDbComponentArray []InfluxDbComponentInput

func (InfluxDbComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfluxDbComponent)(nil)).Elem()
}

func (i InfluxDbComponentArray) ToInfluxDbComponentArrayOutput() InfluxDbComponentArrayOutput {
	return i.ToInfluxDbComponentArrayOutputWithContext(context.Background())
}

func (i InfluxDbComponentArray) ToInfluxDbComponentArrayOutputWithContext(ctx context.Context) InfluxDbComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxDbComponentArrayOutput)
}

type InfluxDbComponentOutput struct{ *pulumi.OutputState }

func (InfluxDbComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfluxDbComponent)(nil)).Elem()
}

func (o InfluxDbComponentOutput) ToInfluxDbComponentOutput() InfluxDbComponentOutput {
	return o
}

func (o InfluxDbComponentOutput) ToInfluxDbComponentOutputWithContext(ctx context.Context) InfluxDbComponentOutput {
	return o
}

func (o InfluxDbComponentOutput) Component() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfluxDbComponent) *string { return v.Component }).(pulumi.StringPtrOutput)
}

func (o InfluxDbComponentOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfluxDbComponent) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o InfluxDbComponentOutput) KafkaAuthenticationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfluxDbComponent) *string { return v.KafkaAuthenticationMethod }).(pulumi.StringPtrOutput)
}

func (o InfluxDbComponentOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InfluxDbComponent) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o InfluxDbComponentOutput) Route() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfluxDbComponent) *string { return v.Route }).(pulumi.StringPtrOutput)
}

func (o InfluxDbComponentOutput) Ssl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InfluxDbComponent) *bool { return v.Ssl }).(pulumi.BoolPtrOutput)
}

func (o InfluxDbComponentOutput) Usage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfluxDbComponent) *string { return v.Usage }).(pulumi.StringPtrOutput)
}

type InfluxDbComponentArrayOutput struct{ *pulumi.OutputState }

func (InfluxDbComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfluxDbComponent)(nil)).Elem()
}

func (o InfluxDbComponentArrayOutput) ToInfluxDbComponentArrayOutput() InfluxDbComponentArrayOutput {
	return o
}

func (o InfluxDbComponentArrayOutput) ToInfluxDbComponentArrayOutputWithContext(ctx context.Context) InfluxDbComponentArrayOutput {
	return o
}

func (o InfluxDbComponentArrayOutput) Index(i pulumi.IntInput) InfluxDbComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InfluxDbComponent {
		return vs[0].([]InfluxDbComponent)[vs[1].(int)]
	}).(InfluxDbComponentOutput)
}

type InfluxDbInfluxdb struct {
	DatabaseName *string `pulumi:"databaseName"`
}

// InfluxDbInfluxdbInput is an input type that accepts InfluxDbInfluxdbArgs and InfluxDbInfluxdbOutput values.
// You can construct a concrete instance of `InfluxDbInfluxdbInput` via:
//
//          InfluxDbInfluxdbArgs{...}
type InfluxDbInfluxdbInput interface {
	pulumi.Input

	ToInfluxDbInfluxdbOutput() InfluxDbInfluxdbOutput
	ToInfluxDbInfluxdbOutputWithContext(context.Context) InfluxDbInfluxdbOutput
}

type InfluxDbInfluxdbArgs struct {
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
}

func (InfluxDbInfluxdbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfluxDbInfluxdb)(nil)).Elem()
}

func (i InfluxDbInfluxdbArgs) ToInfluxDbInfluxdbOutput() InfluxDbInfluxdbOutput {
	return i.ToInfluxDbInfluxdbOutputWithContext(context.Background())
}

func (i InfluxDbInfluxdbArgs) ToInfluxDbInfluxdbOutputWithContext(ctx context.Context) InfluxDbInfluxdbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxDbInfluxdbOutput)
}

func (i InfluxDbInfluxdbArgs) ToInfluxDbInfluxdbPtrOutput() InfluxDbInfluxdbPtrOutput {
	return i.ToInfluxDbInfluxdbPtrOutputWithContext(context.Background())
}

func (i InfluxDbInfluxdbArgs) ToInfluxDbInfluxdbPtrOutputWithContext(ctx context.Context) InfluxDbInfluxdbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxDbInfluxdbOutput).ToInfluxDbInfluxdbPtrOutputWithContext(ctx)
}

// InfluxDbInfluxdbPtrInput is an input type that accepts InfluxDbInfluxdbArgs, InfluxDbInfluxdbPtr and InfluxDbInfluxdbPtrOutput values.
// You can construct a concrete instance of `InfluxDbInfluxdbPtrInput` via:
//
//          InfluxDbInfluxdbArgs{...}
//
//  or:
//
//          nil
type InfluxDbInfluxdbPtrInput interface {
	pulumi.Input

	ToInfluxDbInfluxdbPtrOutput() InfluxDbInfluxdbPtrOutput
	ToInfluxDbInfluxdbPtrOutputWithContext(context.Context) InfluxDbInfluxdbPtrOutput
}

type influxDbInfluxdbPtrType InfluxDbInfluxdbArgs

func InfluxDbInfluxdbPtr(v *InfluxDbInfluxdbArgs) InfluxDbInfluxdbPtrInput {
	return (*influxDbInfluxdbPtrType)(v)
}

func (*influxDbInfluxdbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InfluxDbInfluxdb)(nil)).Elem()
}

func (i *influxDbInfluxdbPtrType) ToInfluxDbInfluxdbPtrOutput() InfluxDbInfluxdbPtrOutput {
	return i.ToInfluxDbInfluxdbPtrOutputWithContext(context.Background())
}

func (i *influxDbInfluxdbPtrType) ToInfluxDbInfluxdbPtrOutputWithContext(ctx context.Context) InfluxDbInfluxdbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxDbInfluxdbPtrOutput)
}

type InfluxDbInfluxdbOutput struct{ *pulumi.OutputState }

func (InfluxDbInfluxdbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfluxDbInfluxdb)(nil)).Elem()
}

func (o InfluxDbInfluxdbOutput) ToInfluxDbInfluxdbOutput() InfluxDbInfluxdbOutput {
	return o
}

func (o InfluxDbInfluxdbOutput) ToInfluxDbInfluxdbOutputWithContext(ctx context.Context) InfluxDbInfluxdbOutput {
	return o
}

func (o InfluxDbInfluxdbOutput) ToInfluxDbInfluxdbPtrOutput() InfluxDbInfluxdbPtrOutput {
	return o.ToInfluxDbInfluxdbPtrOutputWithContext(context.Background())
}

func (o InfluxDbInfluxdbOutput) ToInfluxDbInfluxdbPtrOutputWithContext(ctx context.Context) InfluxDbInfluxdbPtrOutput {
	return o.ApplyT(func(v InfluxDbInfluxdb) *InfluxDbInfluxdb {
		return &v
	}).(InfluxDbInfluxdbPtrOutput)
}
func (o InfluxDbInfluxdbOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfluxDbInfluxdb) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

type InfluxDbInfluxdbPtrOutput struct{ *pulumi.OutputState }

func (InfluxDbInfluxdbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfluxDbInfluxdb)(nil)).Elem()
}

func (o InfluxDbInfluxdbPtrOutput) ToInfluxDbInfluxdbPtrOutput() InfluxDbInfluxdbPtrOutput {
	return o
}

func (o InfluxDbInfluxdbPtrOutput) ToInfluxDbInfluxdbPtrOutputWithContext(ctx context.Context) InfluxDbInfluxdbPtrOutput {
	return o
}

func (o InfluxDbInfluxdbPtrOutput) Elem() InfluxDbInfluxdbOutput {
	return o.ApplyT(func(v *InfluxDbInfluxdb) InfluxDbInfluxdb { return *v }).(InfluxDbInfluxdbOutput)
}

func (o InfluxDbInfluxdbPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfluxDbInfluxdb) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

type InfluxDbInfluxdbUserConfig struct {
	// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name
	CustomDomain *string `pulumi:"customDomain"`
	// influxdb.conf configuration values
	Influxdb *InfluxDbInfluxdbUserConfigInfluxdb `pulumi:"influxdb"`
	// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters []string `pulumi:"ipFilters"`
	// Allow access to selected service ports from private networks
	PrivateAccess *InfluxDbInfluxdbUserConfigPrivateAccess `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess *InfluxDbInfluxdbUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom *string `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet
	PublicAccess *InfluxDbInfluxdbUserConfigPublicAccess `pulumi:"publicAccess"`
	// Name of the basebackup to restore in forked service
	RecoveryBasebackupName *string `pulumi:"recoveryBasebackupName"`
	// Name of another service to fork from. This has effect
	// only when a new service is being created.
	ServiceToForkFrom *string `pulumi:"serviceToForkFrom"`
}

// InfluxDbInfluxdbUserConfigInput is an input type that accepts InfluxDbInfluxdbUserConfigArgs and InfluxDbInfluxdbUserConfigOutput values.
// You can construct a concrete instance of `InfluxDbInfluxdbUserConfigInput` via:
//
//          InfluxDbInfluxdbUserConfigArgs{...}
type InfluxDbInfluxdbUserConfigInput interface {
	pulumi.Input

	ToInfluxDbInfluxdbUserConfigOutput() InfluxDbInfluxdbUserConfigOutput
	ToInfluxDbInfluxdbUserConfigOutputWithContext(context.Context) InfluxDbInfluxdbUserConfigOutput
}

type InfluxDbInfluxdbUserConfigArgs struct {
	// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name
	CustomDomain pulumi.StringPtrInput `pulumi:"customDomain"`
	// influxdb.conf configuration values
	Influxdb InfluxDbInfluxdbUserConfigInfluxdbPtrInput `pulumi:"influxdb"`
	// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// Allow access to selected service ports from private networks
	PrivateAccess InfluxDbInfluxdbUserConfigPrivateAccessPtrInput `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom pulumi.StringPtrInput `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet
	PublicAccess InfluxDbInfluxdbUserConfigPublicAccessPtrInput `pulumi:"publicAccess"`
	// Name of the basebackup to restore in forked service
	RecoveryBasebackupName pulumi.StringPtrInput `pulumi:"recoveryBasebackupName"`
	// Name of another service to fork from. This has effect
	// only when a new service is being created.
	ServiceToForkFrom pulumi.StringPtrInput `pulumi:"serviceToForkFrom"`
}

func (InfluxDbInfluxdbUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfluxDbInfluxdbUserConfig)(nil)).Elem()
}

func (i InfluxDbInfluxdbUserConfigArgs) ToInfluxDbInfluxdbUserConfigOutput() InfluxDbInfluxdbUserConfigOutput {
	return i.ToInfluxDbInfluxdbUserConfigOutputWithContext(context.Background())
}

func (i InfluxDbInfluxdbUserConfigArgs) ToInfluxDbInfluxdbUserConfigOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxDbInfluxdbUserConfigOutput)
}

func (i InfluxDbInfluxdbUserConfigArgs) ToInfluxDbInfluxdbUserConfigPtrOutput() InfluxDbInfluxdbUserConfigPtrOutput {
	return i.ToInfluxDbInfluxdbUserConfigPtrOutputWithContext(context.Background())
}

func (i InfluxDbInfluxdbUserConfigArgs) ToInfluxDbInfluxdbUserConfigPtrOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxDbInfluxdbUserConfigOutput).ToInfluxDbInfluxdbUserConfigPtrOutputWithContext(ctx)
}

// InfluxDbInfluxdbUserConfigPtrInput is an input type that accepts InfluxDbInfluxdbUserConfigArgs, InfluxDbInfluxdbUserConfigPtr and InfluxDbInfluxdbUserConfigPtrOutput values.
// You can construct a concrete instance of `InfluxDbInfluxdbUserConfigPtrInput` via:
//
//          InfluxDbInfluxdbUserConfigArgs{...}
//
//  or:
//
//          nil
type InfluxDbInfluxdbUserConfigPtrInput interface {
	pulumi.Input

	ToInfluxDbInfluxdbUserConfigPtrOutput() InfluxDbInfluxdbUserConfigPtrOutput
	ToInfluxDbInfluxdbUserConfigPtrOutputWithContext(context.Context) InfluxDbInfluxdbUserConfigPtrOutput
}

type influxDbInfluxdbUserConfigPtrType InfluxDbInfluxdbUserConfigArgs

func InfluxDbInfluxdbUserConfigPtr(v *InfluxDbInfluxdbUserConfigArgs) InfluxDbInfluxdbUserConfigPtrInput {
	return (*influxDbInfluxdbUserConfigPtrType)(v)
}

func (*influxDbInfluxdbUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InfluxDbInfluxdbUserConfig)(nil)).Elem()
}

func (i *influxDbInfluxdbUserConfigPtrType) ToInfluxDbInfluxdbUserConfigPtrOutput() InfluxDbInfluxdbUserConfigPtrOutput {
	return i.ToInfluxDbInfluxdbUserConfigPtrOutputWithContext(context.Background())
}

func (i *influxDbInfluxdbUserConfigPtrType) ToInfluxDbInfluxdbUserConfigPtrOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxDbInfluxdbUserConfigPtrOutput)
}

type InfluxDbInfluxdbUserConfigOutput struct{ *pulumi.OutputState }

func (InfluxDbInfluxdbUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfluxDbInfluxdbUserConfig)(nil)).Elem()
}

func (o InfluxDbInfluxdbUserConfigOutput) ToInfluxDbInfluxdbUserConfigOutput() InfluxDbInfluxdbUserConfigOutput {
	return o
}

func (o InfluxDbInfluxdbUserConfigOutput) ToInfluxDbInfluxdbUserConfigOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigOutput {
	return o
}

func (o InfluxDbInfluxdbUserConfigOutput) ToInfluxDbInfluxdbUserConfigPtrOutput() InfluxDbInfluxdbUserConfigPtrOutput {
	return o.ToInfluxDbInfluxdbUserConfigPtrOutputWithContext(context.Background())
}

func (o InfluxDbInfluxdbUserConfigOutput) ToInfluxDbInfluxdbUserConfigPtrOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigPtrOutput {
	return o.ApplyT(func(v InfluxDbInfluxdbUserConfig) *InfluxDbInfluxdbUserConfig {
		return &v
	}).(InfluxDbInfluxdbUserConfigPtrOutput)
}

// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name
func (o InfluxDbInfluxdbUserConfigOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfluxDbInfluxdbUserConfig) *string { return v.CustomDomain }).(pulumi.StringPtrOutput)
}

// influxdb.conf configuration values
func (o InfluxDbInfluxdbUserConfigOutput) Influxdb() InfluxDbInfluxdbUserConfigInfluxdbPtrOutput {
	return o.ApplyT(func(v InfluxDbInfluxdbUserConfig) *InfluxDbInfluxdbUserConfigInfluxdb { return v.Influxdb }).(InfluxDbInfluxdbUserConfigInfluxdbPtrOutput)
}

// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
func (o InfluxDbInfluxdbUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InfluxDbInfluxdbUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// Allow access to selected service ports from private networks
func (o InfluxDbInfluxdbUserConfigOutput) PrivateAccess() InfluxDbInfluxdbUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v InfluxDbInfluxdbUserConfig) *InfluxDbInfluxdbUserConfigPrivateAccess { return v.PrivateAccess }).(InfluxDbInfluxdbUserConfigPrivateAccessPtrOutput)
}

// Allow access to selected service components through Privatelink
func (o InfluxDbInfluxdbUserConfigOutput) PrivatelinkAccess() InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v InfluxDbInfluxdbUserConfig) *InfluxDbInfluxdbUserConfigPrivatelinkAccess {
		return v.PrivatelinkAccess
	}).(InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput)
}

// Name of another project to fork a service from. This has
// effect only when a new service is being created.
func (o InfluxDbInfluxdbUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfluxDbInfluxdbUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from the public Internet
func (o InfluxDbInfluxdbUserConfigOutput) PublicAccess() InfluxDbInfluxdbUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v InfluxDbInfluxdbUserConfig) *InfluxDbInfluxdbUserConfigPublicAccess { return v.PublicAccess }).(InfluxDbInfluxdbUserConfigPublicAccessPtrOutput)
}

// Name of the basebackup to restore in forked service
func (o InfluxDbInfluxdbUserConfigOutput) RecoveryBasebackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfluxDbInfluxdbUserConfig) *string { return v.RecoveryBasebackupName }).(pulumi.StringPtrOutput)
}

// Name of another service to fork from. This has effect
// only when a new service is being created.
func (o InfluxDbInfluxdbUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfluxDbInfluxdbUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

type InfluxDbInfluxdbUserConfigPtrOutput struct{ *pulumi.OutputState }

func (InfluxDbInfluxdbUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfluxDbInfluxdbUserConfig)(nil)).Elem()
}

func (o InfluxDbInfluxdbUserConfigPtrOutput) ToInfluxDbInfluxdbUserConfigPtrOutput() InfluxDbInfluxdbUserConfigPtrOutput {
	return o
}

func (o InfluxDbInfluxdbUserConfigPtrOutput) ToInfluxDbInfluxdbUserConfigPtrOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigPtrOutput {
	return o
}

func (o InfluxDbInfluxdbUserConfigPtrOutput) Elem() InfluxDbInfluxdbUserConfigOutput {
	return o.ApplyT(func(v *InfluxDbInfluxdbUserConfig) InfluxDbInfluxdbUserConfig { return *v }).(InfluxDbInfluxdbUserConfigOutput)
}

// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name
func (o InfluxDbInfluxdbUserConfigPtrOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfluxDbInfluxdbUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.CustomDomain
	}).(pulumi.StringPtrOutput)
}

// influxdb.conf configuration values
func (o InfluxDbInfluxdbUserConfigPtrOutput) Influxdb() InfluxDbInfluxdbUserConfigInfluxdbPtrOutput {
	return o.ApplyT(func(v *InfluxDbInfluxdbUserConfig) *InfluxDbInfluxdbUserConfigInfluxdb {
		if v == nil {
			return nil
		}
		return v.Influxdb
	}).(InfluxDbInfluxdbUserConfigInfluxdbPtrOutput)
}

// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
func (o InfluxDbInfluxdbUserConfigPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InfluxDbInfluxdbUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

// Allow access to selected service ports from private networks
func (o InfluxDbInfluxdbUserConfigPtrOutput) PrivateAccess() InfluxDbInfluxdbUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v *InfluxDbInfluxdbUserConfig) *InfluxDbInfluxdbUserConfigPrivateAccess {
		if v == nil {
			return nil
		}
		return v.PrivateAccess
	}).(InfluxDbInfluxdbUserConfigPrivateAccessPtrOutput)
}

// Allow access to selected service components through Privatelink
func (o InfluxDbInfluxdbUserConfigPtrOutput) PrivatelinkAccess() InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v *InfluxDbInfluxdbUserConfig) *InfluxDbInfluxdbUserConfigPrivatelinkAccess {
		if v == nil {
			return nil
		}
		return v.PrivatelinkAccess
	}).(InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput)
}

// Name of another project to fork a service from. This has
// effect only when a new service is being created.
func (o InfluxDbInfluxdbUserConfigPtrOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfluxDbInfluxdbUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProjectToForkFrom
	}).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from the public Internet
func (o InfluxDbInfluxdbUserConfigPtrOutput) PublicAccess() InfluxDbInfluxdbUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v *InfluxDbInfluxdbUserConfig) *InfluxDbInfluxdbUserConfigPublicAccess {
		if v == nil {
			return nil
		}
		return v.PublicAccess
	}).(InfluxDbInfluxdbUserConfigPublicAccessPtrOutput)
}

// Name of the basebackup to restore in forked service
func (o InfluxDbInfluxdbUserConfigPtrOutput) RecoveryBasebackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfluxDbInfluxdbUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryBasebackupName
	}).(pulumi.StringPtrOutput)
}

// Name of another service to fork from. This has effect
// only when a new service is being created.
func (o InfluxDbInfluxdbUserConfigPtrOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfluxDbInfluxdbUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceToForkFrom
	}).(pulumi.StringPtrOutput)
}

type InfluxDbInfluxdbUserConfigInfluxdb struct {
	// The maximum duration in seconds before a query is
	// logged as a slow query. Setting this to 0 (the default) will never log slow queries.
	LogQueriesAfter *string `pulumi:"logQueriesAfter"`
	// The maximum number of rows returned in a non-chunked query.
	// Setting this to 0 (the default) allows an unlimited number to be returned.
	MaxRowLimit *string `pulumi:"maxRowLimit"`
	// The maximum number of `GROUP BY time()` buckets that
	// can be processed in a query. Setting this to 0 (the default) allows an unlimited number to
	// be processed.
	MaxSelectBuckets *string `pulumi:"maxSelectBuckets"`
	// The maximum number of points that can be processed in a
	// SELECT statement. Setting this to 0 (the default) allows an unlimited number to be processed.
	MaxSelectPoint *string `pulumi:"maxSelectPoint"`
	// The maximum duration in seconds before a query is killed.
	// Setting this to 0 (the default) will never kill slow queries.
	QueryTimeout *string `pulumi:"queryTimeout"`
}

// InfluxDbInfluxdbUserConfigInfluxdbInput is an input type that accepts InfluxDbInfluxdbUserConfigInfluxdbArgs and InfluxDbInfluxdbUserConfigInfluxdbOutput values.
// You can construct a concrete instance of `InfluxDbInfluxdbUserConfigInfluxdbInput` via:
//
//          InfluxDbInfluxdbUserConfigInfluxdbArgs{...}
type InfluxDbInfluxdbUserConfigInfluxdbInput interface {
	pulumi.Input

	ToInfluxDbInfluxdbUserConfigInfluxdbOutput() InfluxDbInfluxdbUserConfigInfluxdbOutput
	ToInfluxDbInfluxdbUserConfigInfluxdbOutputWithContext(context.Context) InfluxDbInfluxdbUserConfigInfluxdbOutput
}

type InfluxDbInfluxdbUserConfigInfluxdbArgs struct {
	// The maximum duration in seconds before a query is
	// logged as a slow query. Setting this to 0 (the default) will never log slow queries.
	LogQueriesAfter pulumi.StringPtrInput `pulumi:"logQueriesAfter"`
	// The maximum number of rows returned in a non-chunked query.
	// Setting this to 0 (the default) allows an unlimited number to be returned.
	MaxRowLimit pulumi.StringPtrInput `pulumi:"maxRowLimit"`
	// The maximum number of `GROUP BY time()` buckets that
	// can be processed in a query. Setting this to 0 (the default) allows an unlimited number to
	// be processed.
	MaxSelectBuckets pulumi.StringPtrInput `pulumi:"maxSelectBuckets"`
	// The maximum number of points that can be processed in a
	// SELECT statement. Setting this to 0 (the default) allows an unlimited number to be processed.
	MaxSelectPoint pulumi.StringPtrInput `pulumi:"maxSelectPoint"`
	// The maximum duration in seconds before a query is killed.
	// Setting this to 0 (the default) will never kill slow queries.
	QueryTimeout pulumi.StringPtrInput `pulumi:"queryTimeout"`
}

func (InfluxDbInfluxdbUserConfigInfluxdbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfluxDbInfluxdbUserConfigInfluxdb)(nil)).Elem()
}

func (i InfluxDbInfluxdbUserConfigInfluxdbArgs) ToInfluxDbInfluxdbUserConfigInfluxdbOutput() InfluxDbInfluxdbUserConfigInfluxdbOutput {
	return i.ToInfluxDbInfluxdbUserConfigInfluxdbOutputWithContext(context.Background())
}

func (i InfluxDbInfluxdbUserConfigInfluxdbArgs) ToInfluxDbInfluxdbUserConfigInfluxdbOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigInfluxdbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxDbInfluxdbUserConfigInfluxdbOutput)
}

func (i InfluxDbInfluxdbUserConfigInfluxdbArgs) ToInfluxDbInfluxdbUserConfigInfluxdbPtrOutput() InfluxDbInfluxdbUserConfigInfluxdbPtrOutput {
	return i.ToInfluxDbInfluxdbUserConfigInfluxdbPtrOutputWithContext(context.Background())
}

func (i InfluxDbInfluxdbUserConfigInfluxdbArgs) ToInfluxDbInfluxdbUserConfigInfluxdbPtrOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigInfluxdbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxDbInfluxdbUserConfigInfluxdbOutput).ToInfluxDbInfluxdbUserConfigInfluxdbPtrOutputWithContext(ctx)
}

// InfluxDbInfluxdbUserConfigInfluxdbPtrInput is an input type that accepts InfluxDbInfluxdbUserConfigInfluxdbArgs, InfluxDbInfluxdbUserConfigInfluxdbPtr and InfluxDbInfluxdbUserConfigInfluxdbPtrOutput values.
// You can construct a concrete instance of `InfluxDbInfluxdbUserConfigInfluxdbPtrInput` via:
//
//          InfluxDbInfluxdbUserConfigInfluxdbArgs{...}
//
//  or:
//
//          nil
type InfluxDbInfluxdbUserConfigInfluxdbPtrInput interface {
	pulumi.Input

	ToInfluxDbInfluxdbUserConfigInfluxdbPtrOutput() InfluxDbInfluxdbUserConfigInfluxdbPtrOutput
	ToInfluxDbInfluxdbUserConfigInfluxdbPtrOutputWithContext(context.Context) InfluxDbInfluxdbUserConfigInfluxdbPtrOutput
}

type influxDbInfluxdbUserConfigInfluxdbPtrType InfluxDbInfluxdbUserConfigInfluxdbArgs

func InfluxDbInfluxdbUserConfigInfluxdbPtr(v *InfluxDbInfluxdbUserConfigInfluxdbArgs) InfluxDbInfluxdbUserConfigInfluxdbPtrInput {
	return (*influxDbInfluxdbUserConfigInfluxdbPtrType)(v)
}

func (*influxDbInfluxdbUserConfigInfluxdbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InfluxDbInfluxdbUserConfigInfluxdb)(nil)).Elem()
}

func (i *influxDbInfluxdbUserConfigInfluxdbPtrType) ToInfluxDbInfluxdbUserConfigInfluxdbPtrOutput() InfluxDbInfluxdbUserConfigInfluxdbPtrOutput {
	return i.ToInfluxDbInfluxdbUserConfigInfluxdbPtrOutputWithContext(context.Background())
}

func (i *influxDbInfluxdbUserConfigInfluxdbPtrType) ToInfluxDbInfluxdbUserConfigInfluxdbPtrOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigInfluxdbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxDbInfluxdbUserConfigInfluxdbPtrOutput)
}

type InfluxDbInfluxdbUserConfigInfluxdbOutput struct{ *pulumi.OutputState }

func (InfluxDbInfluxdbUserConfigInfluxdbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfluxDbInfluxdbUserConfigInfluxdb)(nil)).Elem()
}

func (o InfluxDbInfluxdbUserConfigInfluxdbOutput) ToInfluxDbInfluxdbUserConfigInfluxdbOutput() InfluxDbInfluxdbUserConfigInfluxdbOutput {
	return o
}

func (o InfluxDbInfluxdbUserConfigInfluxdbOutput) ToInfluxDbInfluxdbUserConfigInfluxdbOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigInfluxdbOutput {
	return o
}

func (o InfluxDbInfluxdbUserConfigInfluxdbOutput) ToInfluxDbInfluxdbUserConfigInfluxdbPtrOutput() InfluxDbInfluxdbUserConfigInfluxdbPtrOutput {
	return o.ToInfluxDbInfluxdbUserConfigInfluxdbPtrOutputWithContext(context.Background())
}

func (o InfluxDbInfluxdbUserConfigInfluxdbOutput) ToInfluxDbInfluxdbUserConfigInfluxdbPtrOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigInfluxdbPtrOutput {
	return o.ApplyT(func(v InfluxDbInfluxdbUserConfigInfluxdb) *InfluxDbInfluxdbUserConfigInfluxdb {
		return &v
	}).(InfluxDbInfluxdbUserConfigInfluxdbPtrOutput)
}

// The maximum duration in seconds before a query is
// logged as a slow query. Setting this to 0 (the default) will never log slow queries.
func (o InfluxDbInfluxdbUserConfigInfluxdbOutput) LogQueriesAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfluxDbInfluxdbUserConfigInfluxdb) *string { return v.LogQueriesAfter }).(pulumi.StringPtrOutput)
}

// The maximum number of rows returned in a non-chunked query.
// Setting this to 0 (the default) allows an unlimited number to be returned.
func (o InfluxDbInfluxdbUserConfigInfluxdbOutput) MaxRowLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfluxDbInfluxdbUserConfigInfluxdb) *string { return v.MaxRowLimit }).(pulumi.StringPtrOutput)
}

// The maximum number of `GROUP BY time()` buckets that
// can be processed in a query. Setting this to 0 (the default) allows an unlimited number to
// be processed.
func (o InfluxDbInfluxdbUserConfigInfluxdbOutput) MaxSelectBuckets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfluxDbInfluxdbUserConfigInfluxdb) *string { return v.MaxSelectBuckets }).(pulumi.StringPtrOutput)
}

// The maximum number of points that can be processed in a
// SELECT statement. Setting this to 0 (the default) allows an unlimited number to be processed.
func (o InfluxDbInfluxdbUserConfigInfluxdbOutput) MaxSelectPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfluxDbInfluxdbUserConfigInfluxdb) *string { return v.MaxSelectPoint }).(pulumi.StringPtrOutput)
}

// The maximum duration in seconds before a query is killed.
// Setting this to 0 (the default) will never kill slow queries.
func (o InfluxDbInfluxdbUserConfigInfluxdbOutput) QueryTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfluxDbInfluxdbUserConfigInfluxdb) *string { return v.QueryTimeout }).(pulumi.StringPtrOutput)
}

type InfluxDbInfluxdbUserConfigInfluxdbPtrOutput struct{ *pulumi.OutputState }

func (InfluxDbInfluxdbUserConfigInfluxdbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfluxDbInfluxdbUserConfigInfluxdb)(nil)).Elem()
}

func (o InfluxDbInfluxdbUserConfigInfluxdbPtrOutput) ToInfluxDbInfluxdbUserConfigInfluxdbPtrOutput() InfluxDbInfluxdbUserConfigInfluxdbPtrOutput {
	return o
}

func (o InfluxDbInfluxdbUserConfigInfluxdbPtrOutput) ToInfluxDbInfluxdbUserConfigInfluxdbPtrOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigInfluxdbPtrOutput {
	return o
}

func (o InfluxDbInfluxdbUserConfigInfluxdbPtrOutput) Elem() InfluxDbInfluxdbUserConfigInfluxdbOutput {
	return o.ApplyT(func(v *InfluxDbInfluxdbUserConfigInfluxdb) InfluxDbInfluxdbUserConfigInfluxdb { return *v }).(InfluxDbInfluxdbUserConfigInfluxdbOutput)
}

// The maximum duration in seconds before a query is
// logged as a slow query. Setting this to 0 (the default) will never log slow queries.
func (o InfluxDbInfluxdbUserConfigInfluxdbPtrOutput) LogQueriesAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfluxDbInfluxdbUserConfigInfluxdb) *string {
		if v == nil {
			return nil
		}
		return v.LogQueriesAfter
	}).(pulumi.StringPtrOutput)
}

// The maximum number of rows returned in a non-chunked query.
// Setting this to 0 (the default) allows an unlimited number to be returned.
func (o InfluxDbInfluxdbUserConfigInfluxdbPtrOutput) MaxRowLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfluxDbInfluxdbUserConfigInfluxdb) *string {
		if v == nil {
			return nil
		}
		return v.MaxRowLimit
	}).(pulumi.StringPtrOutput)
}

// The maximum number of `GROUP BY time()` buckets that
// can be processed in a query. Setting this to 0 (the default) allows an unlimited number to
// be processed.
func (o InfluxDbInfluxdbUserConfigInfluxdbPtrOutput) MaxSelectBuckets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfluxDbInfluxdbUserConfigInfluxdb) *string {
		if v == nil {
			return nil
		}
		return v.MaxSelectBuckets
	}).(pulumi.StringPtrOutput)
}

// The maximum number of points that can be processed in a
// SELECT statement. Setting this to 0 (the default) allows an unlimited number to be processed.
func (o InfluxDbInfluxdbUserConfigInfluxdbPtrOutput) MaxSelectPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfluxDbInfluxdbUserConfigInfluxdb) *string {
		if v == nil {
			return nil
		}
		return v.MaxSelectPoint
	}).(pulumi.StringPtrOutput)
}

// The maximum duration in seconds before a query is killed.
// Setting this to 0 (the default) will never kill slow queries.
func (o InfluxDbInfluxdbUserConfigInfluxdbPtrOutput) QueryTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfluxDbInfluxdbUserConfigInfluxdb) *string {
		if v == nil {
			return nil
		}
		return v.QueryTimeout
	}).(pulumi.StringPtrOutput)
}

type InfluxDbInfluxdbUserConfigPrivateAccess struct {
	// influxdb.conf configuration values
	Influxdb *string `pulumi:"influxdb"`
}

// InfluxDbInfluxdbUserConfigPrivateAccessInput is an input type that accepts InfluxDbInfluxdbUserConfigPrivateAccessArgs and InfluxDbInfluxdbUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `InfluxDbInfluxdbUserConfigPrivateAccessInput` via:
//
//          InfluxDbInfluxdbUserConfigPrivateAccessArgs{...}
type InfluxDbInfluxdbUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToInfluxDbInfluxdbUserConfigPrivateAccessOutput() InfluxDbInfluxdbUserConfigPrivateAccessOutput
	ToInfluxDbInfluxdbUserConfigPrivateAccessOutputWithContext(context.Context) InfluxDbInfluxdbUserConfigPrivateAccessOutput
}

type InfluxDbInfluxdbUserConfigPrivateAccessArgs struct {
	// influxdb.conf configuration values
	Influxdb pulumi.StringPtrInput `pulumi:"influxdb"`
}

func (InfluxDbInfluxdbUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfluxDbInfluxdbUserConfigPrivateAccess)(nil)).Elem()
}

func (i InfluxDbInfluxdbUserConfigPrivateAccessArgs) ToInfluxDbInfluxdbUserConfigPrivateAccessOutput() InfluxDbInfluxdbUserConfigPrivateAccessOutput {
	return i.ToInfluxDbInfluxdbUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i InfluxDbInfluxdbUserConfigPrivateAccessArgs) ToInfluxDbInfluxdbUserConfigPrivateAccessOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxDbInfluxdbUserConfigPrivateAccessOutput)
}

func (i InfluxDbInfluxdbUserConfigPrivateAccessArgs) ToInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput() InfluxDbInfluxdbUserConfigPrivateAccessPtrOutput {
	return i.ToInfluxDbInfluxdbUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i InfluxDbInfluxdbUserConfigPrivateAccessArgs) ToInfluxDbInfluxdbUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxDbInfluxdbUserConfigPrivateAccessOutput).ToInfluxDbInfluxdbUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// InfluxDbInfluxdbUserConfigPrivateAccessPtrInput is an input type that accepts InfluxDbInfluxdbUserConfigPrivateAccessArgs, InfluxDbInfluxdbUserConfigPrivateAccessPtr and InfluxDbInfluxdbUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `InfluxDbInfluxdbUserConfigPrivateAccessPtrInput` via:
//
//          InfluxDbInfluxdbUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type InfluxDbInfluxdbUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput() InfluxDbInfluxdbUserConfigPrivateAccessPtrOutput
	ToInfluxDbInfluxdbUserConfigPrivateAccessPtrOutputWithContext(context.Context) InfluxDbInfluxdbUserConfigPrivateAccessPtrOutput
}

type influxDbInfluxdbUserConfigPrivateAccessPtrType InfluxDbInfluxdbUserConfigPrivateAccessArgs

func InfluxDbInfluxdbUserConfigPrivateAccessPtr(v *InfluxDbInfluxdbUserConfigPrivateAccessArgs) InfluxDbInfluxdbUserConfigPrivateAccessPtrInput {
	return (*influxDbInfluxdbUserConfigPrivateAccessPtrType)(v)
}

func (*influxDbInfluxdbUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InfluxDbInfluxdbUserConfigPrivateAccess)(nil)).Elem()
}

func (i *influxDbInfluxdbUserConfigPrivateAccessPtrType) ToInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput() InfluxDbInfluxdbUserConfigPrivateAccessPtrOutput {
	return i.ToInfluxDbInfluxdbUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *influxDbInfluxdbUserConfigPrivateAccessPtrType) ToInfluxDbInfluxdbUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxDbInfluxdbUserConfigPrivateAccessPtrOutput)
}

type InfluxDbInfluxdbUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (InfluxDbInfluxdbUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfluxDbInfluxdbUserConfigPrivateAccess)(nil)).Elem()
}

func (o InfluxDbInfluxdbUserConfigPrivateAccessOutput) ToInfluxDbInfluxdbUserConfigPrivateAccessOutput() InfluxDbInfluxdbUserConfigPrivateAccessOutput {
	return o
}

func (o InfluxDbInfluxdbUserConfigPrivateAccessOutput) ToInfluxDbInfluxdbUserConfigPrivateAccessOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigPrivateAccessOutput {
	return o
}

func (o InfluxDbInfluxdbUserConfigPrivateAccessOutput) ToInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput() InfluxDbInfluxdbUserConfigPrivateAccessPtrOutput {
	return o.ToInfluxDbInfluxdbUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o InfluxDbInfluxdbUserConfigPrivateAccessOutput) ToInfluxDbInfluxdbUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v InfluxDbInfluxdbUserConfigPrivateAccess) *InfluxDbInfluxdbUserConfigPrivateAccess {
		return &v
	}).(InfluxDbInfluxdbUserConfigPrivateAccessPtrOutput)
}

// influxdb.conf configuration values
func (o InfluxDbInfluxdbUserConfigPrivateAccessOutput) Influxdb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfluxDbInfluxdbUserConfigPrivateAccess) *string { return v.Influxdb }).(pulumi.StringPtrOutput)
}

type InfluxDbInfluxdbUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (InfluxDbInfluxdbUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfluxDbInfluxdbUserConfigPrivateAccess)(nil)).Elem()
}

func (o InfluxDbInfluxdbUserConfigPrivateAccessPtrOutput) ToInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput() InfluxDbInfluxdbUserConfigPrivateAccessPtrOutput {
	return o
}

func (o InfluxDbInfluxdbUserConfigPrivateAccessPtrOutput) ToInfluxDbInfluxdbUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigPrivateAccessPtrOutput {
	return o
}

func (o InfluxDbInfluxdbUserConfigPrivateAccessPtrOutput) Elem() InfluxDbInfluxdbUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *InfluxDbInfluxdbUserConfigPrivateAccess) InfluxDbInfluxdbUserConfigPrivateAccess { return *v }).(InfluxDbInfluxdbUserConfigPrivateAccessOutput)
}

// influxdb.conf configuration values
func (o InfluxDbInfluxdbUserConfigPrivateAccessPtrOutput) Influxdb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfluxDbInfluxdbUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Influxdb
	}).(pulumi.StringPtrOutput)
}

type InfluxDbInfluxdbUserConfigPrivatelinkAccess struct {
	// influxdb.conf configuration values
	Influxdb *string `pulumi:"influxdb"`
}

// InfluxDbInfluxdbUserConfigPrivatelinkAccessInput is an input type that accepts InfluxDbInfluxdbUserConfigPrivatelinkAccessArgs and InfluxDbInfluxdbUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `InfluxDbInfluxdbUserConfigPrivatelinkAccessInput` via:
//
//          InfluxDbInfluxdbUserConfigPrivatelinkAccessArgs{...}
type InfluxDbInfluxdbUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToInfluxDbInfluxdbUserConfigPrivatelinkAccessOutput() InfluxDbInfluxdbUserConfigPrivatelinkAccessOutput
	ToInfluxDbInfluxdbUserConfigPrivatelinkAccessOutputWithContext(context.Context) InfluxDbInfluxdbUserConfigPrivatelinkAccessOutput
}

type InfluxDbInfluxdbUserConfigPrivatelinkAccessArgs struct {
	// influxdb.conf configuration values
	Influxdb pulumi.StringPtrInput `pulumi:"influxdb"`
}

func (InfluxDbInfluxdbUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfluxDbInfluxdbUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i InfluxDbInfluxdbUserConfigPrivatelinkAccessArgs) ToInfluxDbInfluxdbUserConfigPrivatelinkAccessOutput() InfluxDbInfluxdbUserConfigPrivatelinkAccessOutput {
	return i.ToInfluxDbInfluxdbUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i InfluxDbInfluxdbUserConfigPrivatelinkAccessArgs) ToInfluxDbInfluxdbUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxDbInfluxdbUserConfigPrivatelinkAccessOutput)
}

func (i InfluxDbInfluxdbUserConfigPrivatelinkAccessArgs) ToInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput() InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return i.ToInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i InfluxDbInfluxdbUserConfigPrivatelinkAccessArgs) ToInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxDbInfluxdbUserConfigPrivatelinkAccessOutput).ToInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrInput is an input type that accepts InfluxDbInfluxdbUserConfigPrivatelinkAccessArgs, InfluxDbInfluxdbUserConfigPrivatelinkAccessPtr and InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrInput` via:
//
//          InfluxDbInfluxdbUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput() InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput
	ToInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput
}

type influxDbInfluxdbUserConfigPrivatelinkAccessPtrType InfluxDbInfluxdbUserConfigPrivatelinkAccessArgs

func InfluxDbInfluxdbUserConfigPrivatelinkAccessPtr(v *InfluxDbInfluxdbUserConfigPrivatelinkAccessArgs) InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrInput {
	return (*influxDbInfluxdbUserConfigPrivatelinkAccessPtrType)(v)
}

func (*influxDbInfluxdbUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InfluxDbInfluxdbUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *influxDbInfluxdbUserConfigPrivatelinkAccessPtrType) ToInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput() InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return i.ToInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *influxDbInfluxdbUserConfigPrivatelinkAccessPtrType) ToInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput)
}

type InfluxDbInfluxdbUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (InfluxDbInfluxdbUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfluxDbInfluxdbUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o InfluxDbInfluxdbUserConfigPrivatelinkAccessOutput) ToInfluxDbInfluxdbUserConfigPrivatelinkAccessOutput() InfluxDbInfluxdbUserConfigPrivatelinkAccessOutput {
	return o
}

func (o InfluxDbInfluxdbUserConfigPrivatelinkAccessOutput) ToInfluxDbInfluxdbUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigPrivatelinkAccessOutput {
	return o
}

func (o InfluxDbInfluxdbUserConfigPrivatelinkAccessOutput) ToInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput() InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return o.ToInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o InfluxDbInfluxdbUserConfigPrivatelinkAccessOutput) ToInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v InfluxDbInfluxdbUserConfigPrivatelinkAccess) *InfluxDbInfluxdbUserConfigPrivatelinkAccess {
		return &v
	}).(InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput)
}

// influxdb.conf configuration values
func (o InfluxDbInfluxdbUserConfigPrivatelinkAccessOutput) Influxdb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfluxDbInfluxdbUserConfigPrivatelinkAccess) *string { return v.Influxdb }).(pulumi.StringPtrOutput)
}

type InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfluxDbInfluxdbUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput) ToInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput() InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput) ToInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput) Elem() InfluxDbInfluxdbUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *InfluxDbInfluxdbUserConfigPrivatelinkAccess) InfluxDbInfluxdbUserConfigPrivatelinkAccess {
		return *v
	}).(InfluxDbInfluxdbUserConfigPrivatelinkAccessOutput)
}

// influxdb.conf configuration values
func (o InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput) Influxdb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfluxDbInfluxdbUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Influxdb
	}).(pulumi.StringPtrOutput)
}

type InfluxDbInfluxdbUserConfigPublicAccess struct {
	// influxdb.conf configuration values
	Influxdb *string `pulumi:"influxdb"`
}

// InfluxDbInfluxdbUserConfigPublicAccessInput is an input type that accepts InfluxDbInfluxdbUserConfigPublicAccessArgs and InfluxDbInfluxdbUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `InfluxDbInfluxdbUserConfigPublicAccessInput` via:
//
//          InfluxDbInfluxdbUserConfigPublicAccessArgs{...}
type InfluxDbInfluxdbUserConfigPublicAccessInput interface {
	pulumi.Input

	ToInfluxDbInfluxdbUserConfigPublicAccessOutput() InfluxDbInfluxdbUserConfigPublicAccessOutput
	ToInfluxDbInfluxdbUserConfigPublicAccessOutputWithContext(context.Context) InfluxDbInfluxdbUserConfigPublicAccessOutput
}

type InfluxDbInfluxdbUserConfigPublicAccessArgs struct {
	// influxdb.conf configuration values
	Influxdb pulumi.StringPtrInput `pulumi:"influxdb"`
}

func (InfluxDbInfluxdbUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfluxDbInfluxdbUserConfigPublicAccess)(nil)).Elem()
}

func (i InfluxDbInfluxdbUserConfigPublicAccessArgs) ToInfluxDbInfluxdbUserConfigPublicAccessOutput() InfluxDbInfluxdbUserConfigPublicAccessOutput {
	return i.ToInfluxDbInfluxdbUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i InfluxDbInfluxdbUserConfigPublicAccessArgs) ToInfluxDbInfluxdbUserConfigPublicAccessOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxDbInfluxdbUserConfigPublicAccessOutput)
}

func (i InfluxDbInfluxdbUserConfigPublicAccessArgs) ToInfluxDbInfluxdbUserConfigPublicAccessPtrOutput() InfluxDbInfluxdbUserConfigPublicAccessPtrOutput {
	return i.ToInfluxDbInfluxdbUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i InfluxDbInfluxdbUserConfigPublicAccessArgs) ToInfluxDbInfluxdbUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxDbInfluxdbUserConfigPublicAccessOutput).ToInfluxDbInfluxdbUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// InfluxDbInfluxdbUserConfigPublicAccessPtrInput is an input type that accepts InfluxDbInfluxdbUserConfigPublicAccessArgs, InfluxDbInfluxdbUserConfigPublicAccessPtr and InfluxDbInfluxdbUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `InfluxDbInfluxdbUserConfigPublicAccessPtrInput` via:
//
//          InfluxDbInfluxdbUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type InfluxDbInfluxdbUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToInfluxDbInfluxdbUserConfigPublicAccessPtrOutput() InfluxDbInfluxdbUserConfigPublicAccessPtrOutput
	ToInfluxDbInfluxdbUserConfigPublicAccessPtrOutputWithContext(context.Context) InfluxDbInfluxdbUserConfigPublicAccessPtrOutput
}

type influxDbInfluxdbUserConfigPublicAccessPtrType InfluxDbInfluxdbUserConfigPublicAccessArgs

func InfluxDbInfluxdbUserConfigPublicAccessPtr(v *InfluxDbInfluxdbUserConfigPublicAccessArgs) InfluxDbInfluxdbUserConfigPublicAccessPtrInput {
	return (*influxDbInfluxdbUserConfigPublicAccessPtrType)(v)
}

func (*influxDbInfluxdbUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InfluxDbInfluxdbUserConfigPublicAccess)(nil)).Elem()
}

func (i *influxDbInfluxdbUserConfigPublicAccessPtrType) ToInfluxDbInfluxdbUserConfigPublicAccessPtrOutput() InfluxDbInfluxdbUserConfigPublicAccessPtrOutput {
	return i.ToInfluxDbInfluxdbUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *influxDbInfluxdbUserConfigPublicAccessPtrType) ToInfluxDbInfluxdbUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxDbInfluxdbUserConfigPublicAccessPtrOutput)
}

type InfluxDbInfluxdbUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (InfluxDbInfluxdbUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfluxDbInfluxdbUserConfigPublicAccess)(nil)).Elem()
}

func (o InfluxDbInfluxdbUserConfigPublicAccessOutput) ToInfluxDbInfluxdbUserConfigPublicAccessOutput() InfluxDbInfluxdbUserConfigPublicAccessOutput {
	return o
}

func (o InfluxDbInfluxdbUserConfigPublicAccessOutput) ToInfluxDbInfluxdbUserConfigPublicAccessOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigPublicAccessOutput {
	return o
}

func (o InfluxDbInfluxdbUserConfigPublicAccessOutput) ToInfluxDbInfluxdbUserConfigPublicAccessPtrOutput() InfluxDbInfluxdbUserConfigPublicAccessPtrOutput {
	return o.ToInfluxDbInfluxdbUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o InfluxDbInfluxdbUserConfigPublicAccessOutput) ToInfluxDbInfluxdbUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v InfluxDbInfluxdbUserConfigPublicAccess) *InfluxDbInfluxdbUserConfigPublicAccess {
		return &v
	}).(InfluxDbInfluxdbUserConfigPublicAccessPtrOutput)
}

// influxdb.conf configuration values
func (o InfluxDbInfluxdbUserConfigPublicAccessOutput) Influxdb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfluxDbInfluxdbUserConfigPublicAccess) *string { return v.Influxdb }).(pulumi.StringPtrOutput)
}

type InfluxDbInfluxdbUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (InfluxDbInfluxdbUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfluxDbInfluxdbUserConfigPublicAccess)(nil)).Elem()
}

func (o InfluxDbInfluxdbUserConfigPublicAccessPtrOutput) ToInfluxDbInfluxdbUserConfigPublicAccessPtrOutput() InfluxDbInfluxdbUserConfigPublicAccessPtrOutput {
	return o
}

func (o InfluxDbInfluxdbUserConfigPublicAccessPtrOutput) ToInfluxDbInfluxdbUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) InfluxDbInfluxdbUserConfigPublicAccessPtrOutput {
	return o
}

func (o InfluxDbInfluxdbUserConfigPublicAccessPtrOutput) Elem() InfluxDbInfluxdbUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *InfluxDbInfluxdbUserConfigPublicAccess) InfluxDbInfluxdbUserConfigPublicAccess { return *v }).(InfluxDbInfluxdbUserConfigPublicAccessOutput)
}

// influxdb.conf configuration values
func (o InfluxDbInfluxdbUserConfigPublicAccessPtrOutput) Influxdb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfluxDbInfluxdbUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Influxdb
	}).(pulumi.StringPtrOutput)
}

type InfluxDbServiceIntegration struct {
	IntegrationType   string `pulumi:"integrationType"`
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// InfluxDbServiceIntegrationInput is an input type that accepts InfluxDbServiceIntegrationArgs and InfluxDbServiceIntegrationOutput values.
// You can construct a concrete instance of `InfluxDbServiceIntegrationInput` via:
//
//          InfluxDbServiceIntegrationArgs{...}
type InfluxDbServiceIntegrationInput interface {
	pulumi.Input

	ToInfluxDbServiceIntegrationOutput() InfluxDbServiceIntegrationOutput
	ToInfluxDbServiceIntegrationOutputWithContext(context.Context) InfluxDbServiceIntegrationOutput
}

type InfluxDbServiceIntegrationArgs struct {
	IntegrationType   pulumi.StringInput `pulumi:"integrationType"`
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (InfluxDbServiceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfluxDbServiceIntegration)(nil)).Elem()
}

func (i InfluxDbServiceIntegrationArgs) ToInfluxDbServiceIntegrationOutput() InfluxDbServiceIntegrationOutput {
	return i.ToInfluxDbServiceIntegrationOutputWithContext(context.Background())
}

func (i InfluxDbServiceIntegrationArgs) ToInfluxDbServiceIntegrationOutputWithContext(ctx context.Context) InfluxDbServiceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxDbServiceIntegrationOutput)
}

// InfluxDbServiceIntegrationArrayInput is an input type that accepts InfluxDbServiceIntegrationArray and InfluxDbServiceIntegrationArrayOutput values.
// You can construct a concrete instance of `InfluxDbServiceIntegrationArrayInput` via:
//
//          InfluxDbServiceIntegrationArray{ InfluxDbServiceIntegrationArgs{...} }
type InfluxDbServiceIntegrationArrayInput interface {
	pulumi.Input

	ToInfluxDbServiceIntegrationArrayOutput() InfluxDbServiceIntegrationArrayOutput
	ToInfluxDbServiceIntegrationArrayOutputWithContext(context.Context) InfluxDbServiceIntegrationArrayOutput
}

type InfluxDbServiceIntegrationArray []InfluxDbServiceIntegrationInput

func (InfluxDbServiceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfluxDbServiceIntegration)(nil)).Elem()
}

func (i InfluxDbServiceIntegrationArray) ToInfluxDbServiceIntegrationArrayOutput() InfluxDbServiceIntegrationArrayOutput {
	return i.ToInfluxDbServiceIntegrationArrayOutputWithContext(context.Background())
}

func (i InfluxDbServiceIntegrationArray) ToInfluxDbServiceIntegrationArrayOutputWithContext(ctx context.Context) InfluxDbServiceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxDbServiceIntegrationArrayOutput)
}

type InfluxDbServiceIntegrationOutput struct{ *pulumi.OutputState }

func (InfluxDbServiceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfluxDbServiceIntegration)(nil)).Elem()
}

func (o InfluxDbServiceIntegrationOutput) ToInfluxDbServiceIntegrationOutput() InfluxDbServiceIntegrationOutput {
	return o
}

func (o InfluxDbServiceIntegrationOutput) ToInfluxDbServiceIntegrationOutputWithContext(ctx context.Context) InfluxDbServiceIntegrationOutput {
	return o
}

func (o InfluxDbServiceIntegrationOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v InfluxDbServiceIntegration) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o InfluxDbServiceIntegrationOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v InfluxDbServiceIntegration) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

type InfluxDbServiceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (InfluxDbServiceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfluxDbServiceIntegration)(nil)).Elem()
}

func (o InfluxDbServiceIntegrationArrayOutput) ToInfluxDbServiceIntegrationArrayOutput() InfluxDbServiceIntegrationArrayOutput {
	return o
}

func (o InfluxDbServiceIntegrationArrayOutput) ToInfluxDbServiceIntegrationArrayOutputWithContext(ctx context.Context) InfluxDbServiceIntegrationArrayOutput {
	return o
}

func (o InfluxDbServiceIntegrationArrayOutput) Index(i pulumi.IntInput) InfluxDbServiceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InfluxDbServiceIntegration {
		return vs[0].([]InfluxDbServiceIntegration)[vs[1].(int)]
	}).(InfluxDbServiceIntegrationOutput)
}

type KafkaComponent struct {
	Component                 *string `pulumi:"component"`
	Host                      *string `pulumi:"host"`
	KafkaAuthenticationMethod *string `pulumi:"kafkaAuthenticationMethod"`
	Port                      *int    `pulumi:"port"`
	Route                     *string `pulumi:"route"`
	Ssl                       *bool   `pulumi:"ssl"`
	Usage                     *string `pulumi:"usage"`
}

// KafkaComponentInput is an input type that accepts KafkaComponentArgs and KafkaComponentOutput values.
// You can construct a concrete instance of `KafkaComponentInput` via:
//
//          KafkaComponentArgs{...}
type KafkaComponentInput interface {
	pulumi.Input

	ToKafkaComponentOutput() KafkaComponentOutput
	ToKafkaComponentOutputWithContext(context.Context) KafkaComponentOutput
}

type KafkaComponentArgs struct {
	Component                 pulumi.StringPtrInput `pulumi:"component"`
	Host                      pulumi.StringPtrInput `pulumi:"host"`
	KafkaAuthenticationMethod pulumi.StringPtrInput `pulumi:"kafkaAuthenticationMethod"`
	Port                      pulumi.IntPtrInput    `pulumi:"port"`
	Route                     pulumi.StringPtrInput `pulumi:"route"`
	Ssl                       pulumi.BoolPtrInput   `pulumi:"ssl"`
	Usage                     pulumi.StringPtrInput `pulumi:"usage"`
}

func (KafkaComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaComponent)(nil)).Elem()
}

func (i KafkaComponentArgs) ToKafkaComponentOutput() KafkaComponentOutput {
	return i.ToKafkaComponentOutputWithContext(context.Background())
}

func (i KafkaComponentArgs) ToKafkaComponentOutputWithContext(ctx context.Context) KafkaComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaComponentOutput)
}

// KafkaComponentArrayInput is an input type that accepts KafkaComponentArray and KafkaComponentArrayOutput values.
// You can construct a concrete instance of `KafkaComponentArrayInput` via:
//
//          KafkaComponentArray{ KafkaComponentArgs{...} }
type KafkaComponentArrayInput interface {
	pulumi.Input

	ToKafkaComponentArrayOutput() KafkaComponentArrayOutput
	ToKafkaComponentArrayOutputWithContext(context.Context) KafkaComponentArrayOutput
}

type KafkaComponentArray []KafkaComponentInput

func (KafkaComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaComponent)(nil)).Elem()
}

func (i KafkaComponentArray) ToKafkaComponentArrayOutput() KafkaComponentArrayOutput {
	return i.ToKafkaComponentArrayOutputWithContext(context.Background())
}

func (i KafkaComponentArray) ToKafkaComponentArrayOutputWithContext(ctx context.Context) KafkaComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaComponentArrayOutput)
}

type KafkaComponentOutput struct{ *pulumi.OutputState }

func (KafkaComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaComponent)(nil)).Elem()
}

func (o KafkaComponentOutput) ToKafkaComponentOutput() KafkaComponentOutput {
	return o
}

func (o KafkaComponentOutput) ToKafkaComponentOutputWithContext(ctx context.Context) KafkaComponentOutput {
	return o
}

func (o KafkaComponentOutput) Component() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaComponent) *string { return v.Component }).(pulumi.StringPtrOutput)
}

func (o KafkaComponentOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaComponent) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o KafkaComponentOutput) KafkaAuthenticationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaComponent) *string { return v.KafkaAuthenticationMethod }).(pulumi.StringPtrOutput)
}

func (o KafkaComponentOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaComponent) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o KafkaComponentOutput) Route() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaComponent) *string { return v.Route }).(pulumi.StringPtrOutput)
}

func (o KafkaComponentOutput) Ssl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaComponent) *bool { return v.Ssl }).(pulumi.BoolPtrOutput)
}

func (o KafkaComponentOutput) Usage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaComponent) *string { return v.Usage }).(pulumi.StringPtrOutput)
}

type KafkaComponentArrayOutput struct{ *pulumi.OutputState }

func (KafkaComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaComponent)(nil)).Elem()
}

func (o KafkaComponentArrayOutput) ToKafkaComponentArrayOutput() KafkaComponentArrayOutput {
	return o
}

func (o KafkaComponentArrayOutput) ToKafkaComponentArrayOutputWithContext(ctx context.Context) KafkaComponentArrayOutput {
	return o
}

func (o KafkaComponentArrayOutput) Index(i pulumi.IntInput) KafkaComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaComponent {
		return vs[0].([]KafkaComponent)[vs[1].(int)]
	}).(KafkaComponentOutput)
}

type KafkaConnectComponent struct {
	Component                 *string `pulumi:"component"`
	Host                      *string `pulumi:"host"`
	KafkaAuthenticationMethod *string `pulumi:"kafkaAuthenticationMethod"`
	Port                      *int    `pulumi:"port"`
	Route                     *string `pulumi:"route"`
	Ssl                       *bool   `pulumi:"ssl"`
	Usage                     *string `pulumi:"usage"`
}

// KafkaConnectComponentInput is an input type that accepts KafkaConnectComponentArgs and KafkaConnectComponentOutput values.
// You can construct a concrete instance of `KafkaConnectComponentInput` via:
//
//          KafkaConnectComponentArgs{...}
type KafkaConnectComponentInput interface {
	pulumi.Input

	ToKafkaConnectComponentOutput() KafkaConnectComponentOutput
	ToKafkaConnectComponentOutputWithContext(context.Context) KafkaConnectComponentOutput
}

type KafkaConnectComponentArgs struct {
	Component                 pulumi.StringPtrInput `pulumi:"component"`
	Host                      pulumi.StringPtrInput `pulumi:"host"`
	KafkaAuthenticationMethod pulumi.StringPtrInput `pulumi:"kafkaAuthenticationMethod"`
	Port                      pulumi.IntPtrInput    `pulumi:"port"`
	Route                     pulumi.StringPtrInput `pulumi:"route"`
	Ssl                       pulumi.BoolPtrInput   `pulumi:"ssl"`
	Usage                     pulumi.StringPtrInput `pulumi:"usage"`
}

func (KafkaConnectComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaConnectComponent)(nil)).Elem()
}

func (i KafkaConnectComponentArgs) ToKafkaConnectComponentOutput() KafkaConnectComponentOutput {
	return i.ToKafkaConnectComponentOutputWithContext(context.Background())
}

func (i KafkaConnectComponentArgs) ToKafkaConnectComponentOutputWithContext(ctx context.Context) KafkaConnectComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaConnectComponentOutput)
}

// KafkaConnectComponentArrayInput is an input type that accepts KafkaConnectComponentArray and KafkaConnectComponentArrayOutput values.
// You can construct a concrete instance of `KafkaConnectComponentArrayInput` via:
//
//          KafkaConnectComponentArray{ KafkaConnectComponentArgs{...} }
type KafkaConnectComponentArrayInput interface {
	pulumi.Input

	ToKafkaConnectComponentArrayOutput() KafkaConnectComponentArrayOutput
	ToKafkaConnectComponentArrayOutputWithContext(context.Context) KafkaConnectComponentArrayOutput
}

type KafkaConnectComponentArray []KafkaConnectComponentInput

func (KafkaConnectComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaConnectComponent)(nil)).Elem()
}

func (i KafkaConnectComponentArray) ToKafkaConnectComponentArrayOutput() KafkaConnectComponentArrayOutput {
	return i.ToKafkaConnectComponentArrayOutputWithContext(context.Background())
}

func (i KafkaConnectComponentArray) ToKafkaConnectComponentArrayOutputWithContext(ctx context.Context) KafkaConnectComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaConnectComponentArrayOutput)
}

type KafkaConnectComponentOutput struct{ *pulumi.OutputState }

func (KafkaConnectComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaConnectComponent)(nil)).Elem()
}

func (o KafkaConnectComponentOutput) ToKafkaConnectComponentOutput() KafkaConnectComponentOutput {
	return o
}

func (o KafkaConnectComponentOutput) ToKafkaConnectComponentOutputWithContext(ctx context.Context) KafkaConnectComponentOutput {
	return o
}

func (o KafkaConnectComponentOutput) Component() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaConnectComponent) *string { return v.Component }).(pulumi.StringPtrOutput)
}

func (o KafkaConnectComponentOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaConnectComponent) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o KafkaConnectComponentOutput) KafkaAuthenticationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaConnectComponent) *string { return v.KafkaAuthenticationMethod }).(pulumi.StringPtrOutput)
}

func (o KafkaConnectComponentOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaConnectComponent) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o KafkaConnectComponentOutput) Route() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaConnectComponent) *string { return v.Route }).(pulumi.StringPtrOutput)
}

func (o KafkaConnectComponentOutput) Ssl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaConnectComponent) *bool { return v.Ssl }).(pulumi.BoolPtrOutput)
}

func (o KafkaConnectComponentOutput) Usage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaConnectComponent) *string { return v.Usage }).(pulumi.StringPtrOutput)
}

type KafkaConnectComponentArrayOutput struct{ *pulumi.OutputState }

func (KafkaConnectComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaConnectComponent)(nil)).Elem()
}

func (o KafkaConnectComponentArrayOutput) ToKafkaConnectComponentArrayOutput() KafkaConnectComponentArrayOutput {
	return o
}

func (o KafkaConnectComponentArrayOutput) ToKafkaConnectComponentArrayOutputWithContext(ctx context.Context) KafkaConnectComponentArrayOutput {
	return o
}

func (o KafkaConnectComponentArrayOutput) Index(i pulumi.IntInput) KafkaConnectComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaConnectComponent {
		return vs[0].([]KafkaConnectComponent)[vs[1].(int)]
	}).(KafkaConnectComponentOutput)
}

type KafkaConnectKafkaConnect struct {
}

// KafkaConnectKafkaConnectInput is an input type that accepts KafkaConnectKafkaConnectArgs and KafkaConnectKafkaConnectOutput values.
// You can construct a concrete instance of `KafkaConnectKafkaConnectInput` via:
//
//          KafkaConnectKafkaConnectArgs{...}
type KafkaConnectKafkaConnectInput interface {
	pulumi.Input

	ToKafkaConnectKafkaConnectOutput() KafkaConnectKafkaConnectOutput
	ToKafkaConnectKafkaConnectOutputWithContext(context.Context) KafkaConnectKafkaConnectOutput
}

type KafkaConnectKafkaConnectArgs struct {
}

func (KafkaConnectKafkaConnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaConnectKafkaConnect)(nil)).Elem()
}

func (i KafkaConnectKafkaConnectArgs) ToKafkaConnectKafkaConnectOutput() KafkaConnectKafkaConnectOutput {
	return i.ToKafkaConnectKafkaConnectOutputWithContext(context.Background())
}

func (i KafkaConnectKafkaConnectArgs) ToKafkaConnectKafkaConnectOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaConnectKafkaConnectOutput)
}

func (i KafkaConnectKafkaConnectArgs) ToKafkaConnectKafkaConnectPtrOutput() KafkaConnectKafkaConnectPtrOutput {
	return i.ToKafkaConnectKafkaConnectPtrOutputWithContext(context.Background())
}

func (i KafkaConnectKafkaConnectArgs) ToKafkaConnectKafkaConnectPtrOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaConnectKafkaConnectOutput).ToKafkaConnectKafkaConnectPtrOutputWithContext(ctx)
}

// KafkaConnectKafkaConnectPtrInput is an input type that accepts KafkaConnectKafkaConnectArgs, KafkaConnectKafkaConnectPtr and KafkaConnectKafkaConnectPtrOutput values.
// You can construct a concrete instance of `KafkaConnectKafkaConnectPtrInput` via:
//
//          KafkaConnectKafkaConnectArgs{...}
//
//  or:
//
//          nil
type KafkaConnectKafkaConnectPtrInput interface {
	pulumi.Input

	ToKafkaConnectKafkaConnectPtrOutput() KafkaConnectKafkaConnectPtrOutput
	ToKafkaConnectKafkaConnectPtrOutputWithContext(context.Context) KafkaConnectKafkaConnectPtrOutput
}

type kafkaConnectKafkaConnectPtrType KafkaConnectKafkaConnectArgs

func KafkaConnectKafkaConnectPtr(v *KafkaConnectKafkaConnectArgs) KafkaConnectKafkaConnectPtrInput {
	return (*kafkaConnectKafkaConnectPtrType)(v)
}

func (*kafkaConnectKafkaConnectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaConnectKafkaConnect)(nil)).Elem()
}

func (i *kafkaConnectKafkaConnectPtrType) ToKafkaConnectKafkaConnectPtrOutput() KafkaConnectKafkaConnectPtrOutput {
	return i.ToKafkaConnectKafkaConnectPtrOutputWithContext(context.Background())
}

func (i *kafkaConnectKafkaConnectPtrType) ToKafkaConnectKafkaConnectPtrOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaConnectKafkaConnectPtrOutput)
}

type KafkaConnectKafkaConnectOutput struct{ *pulumi.OutputState }

func (KafkaConnectKafkaConnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaConnectKafkaConnect)(nil)).Elem()
}

func (o KafkaConnectKafkaConnectOutput) ToKafkaConnectKafkaConnectOutput() KafkaConnectKafkaConnectOutput {
	return o
}

func (o KafkaConnectKafkaConnectOutput) ToKafkaConnectKafkaConnectOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectOutput {
	return o
}

func (o KafkaConnectKafkaConnectOutput) ToKafkaConnectKafkaConnectPtrOutput() KafkaConnectKafkaConnectPtrOutput {
	return o.ToKafkaConnectKafkaConnectPtrOutputWithContext(context.Background())
}

func (o KafkaConnectKafkaConnectOutput) ToKafkaConnectKafkaConnectPtrOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectPtrOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnect) *KafkaConnectKafkaConnect {
		return &v
	}).(KafkaConnectKafkaConnectPtrOutput)
}

type KafkaConnectKafkaConnectPtrOutput struct{ *pulumi.OutputState }

func (KafkaConnectKafkaConnectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaConnectKafkaConnect)(nil)).Elem()
}

func (o KafkaConnectKafkaConnectPtrOutput) ToKafkaConnectKafkaConnectPtrOutput() KafkaConnectKafkaConnectPtrOutput {
	return o
}

func (o KafkaConnectKafkaConnectPtrOutput) ToKafkaConnectKafkaConnectPtrOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectPtrOutput {
	return o
}

func (o KafkaConnectKafkaConnectPtrOutput) Elem() KafkaConnectKafkaConnectOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnect) KafkaConnectKafkaConnect { return *v }).(KafkaConnectKafkaConnectOutput)
}

type KafkaConnectKafkaConnectUserConfig struct {
	// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters []string `pulumi:"ipFilters"`
	// Allow clients to connect to kafkaConnect from the public internet for
	// service nodes that are in a project VPC or another type of private network.
	KafkaConnect *KafkaConnectKafkaConnectUserConfigKafkaConnect `pulumi:"kafkaConnect"`
	// Allow access to selected service ports from private networks.
	PrivateAccess *KafkaConnectKafkaConnectUserConfigPrivateAccess `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess *KafkaConnectKafkaConnectUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	// Allow access to selected service ports from the public Internet.
	PublicAccess *KafkaConnectKafkaConnectUserConfigPublicAccess `pulumi:"publicAccess"`
}

// KafkaConnectKafkaConnectUserConfigInput is an input type that accepts KafkaConnectKafkaConnectUserConfigArgs and KafkaConnectKafkaConnectUserConfigOutput values.
// You can construct a concrete instance of `KafkaConnectKafkaConnectUserConfigInput` via:
//
//          KafkaConnectKafkaConnectUserConfigArgs{...}
type KafkaConnectKafkaConnectUserConfigInput interface {
	pulumi.Input

	ToKafkaConnectKafkaConnectUserConfigOutput() KafkaConnectKafkaConnectUserConfigOutput
	ToKafkaConnectKafkaConnectUserConfigOutputWithContext(context.Context) KafkaConnectKafkaConnectUserConfigOutput
}

type KafkaConnectKafkaConnectUserConfigArgs struct {
	// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// Allow clients to connect to kafkaConnect from the public internet for
	// service nodes that are in a project VPC or another type of private network.
	KafkaConnect KafkaConnectKafkaConnectUserConfigKafkaConnectPtrInput `pulumi:"kafkaConnect"`
	// Allow access to selected service ports from private networks.
	PrivateAccess KafkaConnectKafkaConnectUserConfigPrivateAccessPtrInput `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	// Allow access to selected service ports from the public Internet.
	PublicAccess KafkaConnectKafkaConnectUserConfigPublicAccessPtrInput `pulumi:"publicAccess"`
}

func (KafkaConnectKafkaConnectUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaConnectKafkaConnectUserConfig)(nil)).Elem()
}

func (i KafkaConnectKafkaConnectUserConfigArgs) ToKafkaConnectKafkaConnectUserConfigOutput() KafkaConnectKafkaConnectUserConfigOutput {
	return i.ToKafkaConnectKafkaConnectUserConfigOutputWithContext(context.Background())
}

func (i KafkaConnectKafkaConnectUserConfigArgs) ToKafkaConnectKafkaConnectUserConfigOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaConnectKafkaConnectUserConfigOutput)
}

func (i KafkaConnectKafkaConnectUserConfigArgs) ToKafkaConnectKafkaConnectUserConfigPtrOutput() KafkaConnectKafkaConnectUserConfigPtrOutput {
	return i.ToKafkaConnectKafkaConnectUserConfigPtrOutputWithContext(context.Background())
}

func (i KafkaConnectKafkaConnectUserConfigArgs) ToKafkaConnectKafkaConnectUserConfigPtrOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaConnectKafkaConnectUserConfigOutput).ToKafkaConnectKafkaConnectUserConfigPtrOutputWithContext(ctx)
}

// KafkaConnectKafkaConnectUserConfigPtrInput is an input type that accepts KafkaConnectKafkaConnectUserConfigArgs, KafkaConnectKafkaConnectUserConfigPtr and KafkaConnectKafkaConnectUserConfigPtrOutput values.
// You can construct a concrete instance of `KafkaConnectKafkaConnectUserConfigPtrInput` via:
//
//          KafkaConnectKafkaConnectUserConfigArgs{...}
//
//  or:
//
//          nil
type KafkaConnectKafkaConnectUserConfigPtrInput interface {
	pulumi.Input

	ToKafkaConnectKafkaConnectUserConfigPtrOutput() KafkaConnectKafkaConnectUserConfigPtrOutput
	ToKafkaConnectKafkaConnectUserConfigPtrOutputWithContext(context.Context) KafkaConnectKafkaConnectUserConfigPtrOutput
}

type kafkaConnectKafkaConnectUserConfigPtrType KafkaConnectKafkaConnectUserConfigArgs

func KafkaConnectKafkaConnectUserConfigPtr(v *KafkaConnectKafkaConnectUserConfigArgs) KafkaConnectKafkaConnectUserConfigPtrInput {
	return (*kafkaConnectKafkaConnectUserConfigPtrType)(v)
}

func (*kafkaConnectKafkaConnectUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaConnectKafkaConnectUserConfig)(nil)).Elem()
}

func (i *kafkaConnectKafkaConnectUserConfigPtrType) ToKafkaConnectKafkaConnectUserConfigPtrOutput() KafkaConnectKafkaConnectUserConfigPtrOutput {
	return i.ToKafkaConnectKafkaConnectUserConfigPtrOutputWithContext(context.Background())
}

func (i *kafkaConnectKafkaConnectUserConfigPtrType) ToKafkaConnectKafkaConnectUserConfigPtrOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaConnectKafkaConnectUserConfigPtrOutput)
}

type KafkaConnectKafkaConnectUserConfigOutput struct{ *pulumi.OutputState }

func (KafkaConnectKafkaConnectUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaConnectKafkaConnectUserConfig)(nil)).Elem()
}

func (o KafkaConnectKafkaConnectUserConfigOutput) ToKafkaConnectKafkaConnectUserConfigOutput() KafkaConnectKafkaConnectUserConfigOutput {
	return o
}

func (o KafkaConnectKafkaConnectUserConfigOutput) ToKafkaConnectKafkaConnectUserConfigOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigOutput {
	return o
}

func (o KafkaConnectKafkaConnectUserConfigOutput) ToKafkaConnectKafkaConnectUserConfigPtrOutput() KafkaConnectKafkaConnectUserConfigPtrOutput {
	return o.ToKafkaConnectKafkaConnectUserConfigPtrOutputWithContext(context.Background())
}

func (o KafkaConnectKafkaConnectUserConfigOutput) ToKafkaConnectKafkaConnectUserConfigPtrOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigPtrOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnectUserConfig) *KafkaConnectKafkaConnectUserConfig {
		return &v
	}).(KafkaConnectKafkaConnectUserConfigPtrOutput)
}

// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
func (o KafkaConnectKafkaConnectUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnectUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// Allow clients to connect to kafkaConnect from the public internet for
// service nodes that are in a project VPC or another type of private network.
func (o KafkaConnectKafkaConnectUserConfigOutput) KafkaConnect() KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnectUserConfig) *KafkaConnectKafkaConnectUserConfigKafkaConnect {
		return v.KafkaConnect
	}).(KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput)
}

// Allow access to selected service ports from private networks.
func (o KafkaConnectKafkaConnectUserConfigOutput) PrivateAccess() KafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnectUserConfig) *KafkaConnectKafkaConnectUserConfigPrivateAccess {
		return v.PrivateAccess
	}).(KafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput)
}

// Allow access to selected service components through Privatelink
func (o KafkaConnectKafkaConnectUserConfigOutput) PrivatelinkAccess() KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnectUserConfig) *KafkaConnectKafkaConnectUserConfigPrivatelinkAccess {
		return v.PrivatelinkAccess
	}).(KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput)
}

// Allow access to selected service ports from the public Internet.
func (o KafkaConnectKafkaConnectUserConfigOutput) PublicAccess() KafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnectUserConfig) *KafkaConnectKafkaConnectUserConfigPublicAccess {
		return v.PublicAccess
	}).(KafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput)
}

type KafkaConnectKafkaConnectUserConfigPtrOutput struct{ *pulumi.OutputState }

func (KafkaConnectKafkaConnectUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaConnectKafkaConnectUserConfig)(nil)).Elem()
}

func (o KafkaConnectKafkaConnectUserConfigPtrOutput) ToKafkaConnectKafkaConnectUserConfigPtrOutput() KafkaConnectKafkaConnectUserConfigPtrOutput {
	return o
}

func (o KafkaConnectKafkaConnectUserConfigPtrOutput) ToKafkaConnectKafkaConnectUserConfigPtrOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigPtrOutput {
	return o
}

func (o KafkaConnectKafkaConnectUserConfigPtrOutput) Elem() KafkaConnectKafkaConnectUserConfigOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnectUserConfig) KafkaConnectKafkaConnectUserConfig { return *v }).(KafkaConnectKafkaConnectUserConfigOutput)
}

// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
func (o KafkaConnectKafkaConnectUserConfigPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnectUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

// Allow clients to connect to kafkaConnect from the public internet for
// service nodes that are in a project VPC or another type of private network.
func (o KafkaConnectKafkaConnectUserConfigPtrOutput) KafkaConnect() KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnectUserConfig) *KafkaConnectKafkaConnectUserConfigKafkaConnect {
		if v == nil {
			return nil
		}
		return v.KafkaConnect
	}).(KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput)
}

// Allow access to selected service ports from private networks.
func (o KafkaConnectKafkaConnectUserConfigPtrOutput) PrivateAccess() KafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnectUserConfig) *KafkaConnectKafkaConnectUserConfigPrivateAccess {
		if v == nil {
			return nil
		}
		return v.PrivateAccess
	}).(KafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput)
}

// Allow access to selected service components through Privatelink
func (o KafkaConnectKafkaConnectUserConfigPtrOutput) PrivatelinkAccess() KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnectUserConfig) *KafkaConnectKafkaConnectUserConfigPrivatelinkAccess {
		if v == nil {
			return nil
		}
		return v.PrivatelinkAccess
	}).(KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput)
}

// Allow access to selected service ports from the public Internet.
func (o KafkaConnectKafkaConnectUserConfigPtrOutput) PublicAccess() KafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnectUserConfig) *KafkaConnectKafkaConnectUserConfigPublicAccess {
		if v == nil {
			return nil
		}
		return v.PublicAccess
	}).(KafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput)
}

type KafkaConnectKafkaConnectUserConfigKafkaConnect struct {
	// Defines what client configurations can be
	// overridden by the connector. Default is None.
	ConnectorClientConfigOverridePolicy *string `pulumi:"connectorClientConfigOverridePolicy"`
	// What to do when there is no initial offset in Kafka or
	// if the current offset does not exist any more on the server. Default is earliest.
	ConsumerAutoOffsetReset *string `pulumi:"consumerAutoOffsetReset"`
	// Records are fetched in batches by the consumer, and if
	// the first record batch in the first non-empty partition of the fetch is larger than this value,
	// the record batch will still be returned to ensure that the consumer can make progress. As such,
	// this is not a absolute maximum.
	ConsumerFetchMaxBytes *string `pulumi:"consumerFetchMaxBytes"`
	// Transaction read isolation level. readUncommitted is
	// the default, but readCommitted can be used if consume-exactly-once behavior is desired.
	ConsumerIsolationLevel *string `pulumi:"consumerIsolationLevel"`
	// Records are fetched in batches by the consumer.If
	// the first record batch in the first non-empty partition of the fetch is larger than this limit,
	// the batch will still be returned to ensure that the consumer can make progress.
	ConsumerMaxPartitionFetchBytes *string `pulumi:"consumerMaxPartitionFetchBytes"`
	// The maximum delay in milliseconds between invocations
	// of poll() when using consumer group management (defaults to 300000).
	ConsumerMaxPollIntervalMs *string `pulumi:"consumerMaxPollIntervalMs"`
	// The maximum number of records returned by a single poll.
	ConsumerMaxPollRecords *string `pulumi:"consumerMaxPollRecords"`
	// The interval at which to try committing offsets for tasks
	// (defaults to 60000).
	OffsetFlushIntervalMs *string `pulumi:"offsetFlushIntervalMs"`
	// Maximum number of milliseconds to wait for records to flush
	// and partition offset data to be committed to offset storage before cancelling the process and restoring
	// the offset data to be committed in a future attempt (defaults to 5000).
	OffsetFlushTimeoutMs *string `pulumi:"offsetFlushTimeoutMs"`
	// This setting will limit the number of record batches the
	// producer will send in a single request to avoid sending huge requests.
	ProducerMaxRequestSize *string `pulumi:"producerMaxRequestSize"`
	// The timeout in milliseconds used to detect failures when using Kafka’s
	// group management facilities (defaults to 10000).
	SessionTimeoutMs *string `pulumi:"sessionTimeoutMs"`
}

// KafkaConnectKafkaConnectUserConfigKafkaConnectInput is an input type that accepts KafkaConnectKafkaConnectUserConfigKafkaConnectArgs and KafkaConnectKafkaConnectUserConfigKafkaConnectOutput values.
// You can construct a concrete instance of `KafkaConnectKafkaConnectUserConfigKafkaConnectInput` via:
//
//          KafkaConnectKafkaConnectUserConfigKafkaConnectArgs{...}
type KafkaConnectKafkaConnectUserConfigKafkaConnectInput interface {
	pulumi.Input

	ToKafkaConnectKafkaConnectUserConfigKafkaConnectOutput() KafkaConnectKafkaConnectUserConfigKafkaConnectOutput
	ToKafkaConnectKafkaConnectUserConfigKafkaConnectOutputWithContext(context.Context) KafkaConnectKafkaConnectUserConfigKafkaConnectOutput
}

type KafkaConnectKafkaConnectUserConfigKafkaConnectArgs struct {
	// Defines what client configurations can be
	// overridden by the connector. Default is None.
	ConnectorClientConfigOverridePolicy pulumi.StringPtrInput `pulumi:"connectorClientConfigOverridePolicy"`
	// What to do when there is no initial offset in Kafka or
	// if the current offset does not exist any more on the server. Default is earliest.
	ConsumerAutoOffsetReset pulumi.StringPtrInput `pulumi:"consumerAutoOffsetReset"`
	// Records are fetched in batches by the consumer, and if
	// the first record batch in the first non-empty partition of the fetch is larger than this value,
	// the record batch will still be returned to ensure that the consumer can make progress. As such,
	// this is not a absolute maximum.
	ConsumerFetchMaxBytes pulumi.StringPtrInput `pulumi:"consumerFetchMaxBytes"`
	// Transaction read isolation level. readUncommitted is
	// the default, but readCommitted can be used if consume-exactly-once behavior is desired.
	ConsumerIsolationLevel pulumi.StringPtrInput `pulumi:"consumerIsolationLevel"`
	// Records are fetched in batches by the consumer.If
	// the first record batch in the first non-empty partition of the fetch is larger than this limit,
	// the batch will still be returned to ensure that the consumer can make progress.
	ConsumerMaxPartitionFetchBytes pulumi.StringPtrInput `pulumi:"consumerMaxPartitionFetchBytes"`
	// The maximum delay in milliseconds between invocations
	// of poll() when using consumer group management (defaults to 300000).
	ConsumerMaxPollIntervalMs pulumi.StringPtrInput `pulumi:"consumerMaxPollIntervalMs"`
	// The maximum number of records returned by a single poll.
	ConsumerMaxPollRecords pulumi.StringPtrInput `pulumi:"consumerMaxPollRecords"`
	// The interval at which to try committing offsets for tasks
	// (defaults to 60000).
	OffsetFlushIntervalMs pulumi.StringPtrInput `pulumi:"offsetFlushIntervalMs"`
	// Maximum number of milliseconds to wait for records to flush
	// and partition offset data to be committed to offset storage before cancelling the process and restoring
	// the offset data to be committed in a future attempt (defaults to 5000).
	OffsetFlushTimeoutMs pulumi.StringPtrInput `pulumi:"offsetFlushTimeoutMs"`
	// This setting will limit the number of record batches the
	// producer will send in a single request to avoid sending huge requests.
	ProducerMaxRequestSize pulumi.StringPtrInput `pulumi:"producerMaxRequestSize"`
	// The timeout in milliseconds used to detect failures when using Kafka’s
	// group management facilities (defaults to 10000).
	SessionTimeoutMs pulumi.StringPtrInput `pulumi:"sessionTimeoutMs"`
}

func (KafkaConnectKafkaConnectUserConfigKafkaConnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaConnectKafkaConnectUserConfigKafkaConnect)(nil)).Elem()
}

func (i KafkaConnectKafkaConnectUserConfigKafkaConnectArgs) ToKafkaConnectKafkaConnectUserConfigKafkaConnectOutput() KafkaConnectKafkaConnectUserConfigKafkaConnectOutput {
	return i.ToKafkaConnectKafkaConnectUserConfigKafkaConnectOutputWithContext(context.Background())
}

func (i KafkaConnectKafkaConnectUserConfigKafkaConnectArgs) ToKafkaConnectKafkaConnectUserConfigKafkaConnectOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigKafkaConnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaConnectKafkaConnectUserConfigKafkaConnectOutput)
}

func (i KafkaConnectKafkaConnectUserConfigKafkaConnectArgs) ToKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput() KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput {
	return i.ToKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(context.Background())
}

func (i KafkaConnectKafkaConnectUserConfigKafkaConnectArgs) ToKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaConnectKafkaConnectUserConfigKafkaConnectOutput).ToKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx)
}

// KafkaConnectKafkaConnectUserConfigKafkaConnectPtrInput is an input type that accepts KafkaConnectKafkaConnectUserConfigKafkaConnectArgs, KafkaConnectKafkaConnectUserConfigKafkaConnectPtr and KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput values.
// You can construct a concrete instance of `KafkaConnectKafkaConnectUserConfigKafkaConnectPtrInput` via:
//
//          KafkaConnectKafkaConnectUserConfigKafkaConnectArgs{...}
//
//  or:
//
//          nil
type KafkaConnectKafkaConnectUserConfigKafkaConnectPtrInput interface {
	pulumi.Input

	ToKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput() KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput
	ToKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(context.Context) KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput
}

type kafkaConnectKafkaConnectUserConfigKafkaConnectPtrType KafkaConnectKafkaConnectUserConfigKafkaConnectArgs

func KafkaConnectKafkaConnectUserConfigKafkaConnectPtr(v *KafkaConnectKafkaConnectUserConfigKafkaConnectArgs) KafkaConnectKafkaConnectUserConfigKafkaConnectPtrInput {
	return (*kafkaConnectKafkaConnectUserConfigKafkaConnectPtrType)(v)
}

func (*kafkaConnectKafkaConnectUserConfigKafkaConnectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaConnectKafkaConnectUserConfigKafkaConnect)(nil)).Elem()
}

func (i *kafkaConnectKafkaConnectUserConfigKafkaConnectPtrType) ToKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput() KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput {
	return i.ToKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(context.Background())
}

func (i *kafkaConnectKafkaConnectUserConfigKafkaConnectPtrType) ToKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput)
}

type KafkaConnectKafkaConnectUserConfigKafkaConnectOutput struct{ *pulumi.OutputState }

func (KafkaConnectKafkaConnectUserConfigKafkaConnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaConnectKafkaConnectUserConfigKafkaConnect)(nil)).Elem()
}

func (o KafkaConnectKafkaConnectUserConfigKafkaConnectOutput) ToKafkaConnectKafkaConnectUserConfigKafkaConnectOutput() KafkaConnectKafkaConnectUserConfigKafkaConnectOutput {
	return o
}

func (o KafkaConnectKafkaConnectUserConfigKafkaConnectOutput) ToKafkaConnectKafkaConnectUserConfigKafkaConnectOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigKafkaConnectOutput {
	return o
}

func (o KafkaConnectKafkaConnectUserConfigKafkaConnectOutput) ToKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput() KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o.ToKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(context.Background())
}

func (o KafkaConnectKafkaConnectUserConfigKafkaConnectOutput) ToKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnectUserConfigKafkaConnect) *KafkaConnectKafkaConnectUserConfigKafkaConnect {
		return &v
	}).(KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput)
}

// Defines what client configurations can be
// overridden by the connector. Default is None.
func (o KafkaConnectKafkaConnectUserConfigKafkaConnectOutput) ConnectorClientConfigOverridePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnectUserConfigKafkaConnect) *string {
		return v.ConnectorClientConfigOverridePolicy
	}).(pulumi.StringPtrOutput)
}

// What to do when there is no initial offset in Kafka or
// if the current offset does not exist any more on the server. Default is earliest.
func (o KafkaConnectKafkaConnectUserConfigKafkaConnectOutput) ConsumerAutoOffsetReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnectUserConfigKafkaConnect) *string { return v.ConsumerAutoOffsetReset }).(pulumi.StringPtrOutput)
}

// Records are fetched in batches by the consumer, and if
// the first record batch in the first non-empty partition of the fetch is larger than this value,
// the record batch will still be returned to ensure that the consumer can make progress. As such,
// this is not a absolute maximum.
func (o KafkaConnectKafkaConnectUserConfigKafkaConnectOutput) ConsumerFetchMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnectUserConfigKafkaConnect) *string { return v.ConsumerFetchMaxBytes }).(pulumi.StringPtrOutput)
}

// Transaction read isolation level. readUncommitted is
// the default, but readCommitted can be used if consume-exactly-once behavior is desired.
func (o KafkaConnectKafkaConnectUserConfigKafkaConnectOutput) ConsumerIsolationLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnectUserConfigKafkaConnect) *string { return v.ConsumerIsolationLevel }).(pulumi.StringPtrOutput)
}

// Records are fetched in batches by the consumer.If
// the first record batch in the first non-empty partition of the fetch is larger than this limit,
// the batch will still be returned to ensure that the consumer can make progress.
func (o KafkaConnectKafkaConnectUserConfigKafkaConnectOutput) ConsumerMaxPartitionFetchBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnectUserConfigKafkaConnect) *string {
		return v.ConsumerMaxPartitionFetchBytes
	}).(pulumi.StringPtrOutput)
}

// The maximum delay in milliseconds between invocations
// of poll() when using consumer group management (defaults to 300000).
func (o KafkaConnectKafkaConnectUserConfigKafkaConnectOutput) ConsumerMaxPollIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnectUserConfigKafkaConnect) *string { return v.ConsumerMaxPollIntervalMs }).(pulumi.StringPtrOutput)
}

// The maximum number of records returned by a single poll.
func (o KafkaConnectKafkaConnectUserConfigKafkaConnectOutput) ConsumerMaxPollRecords() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnectUserConfigKafkaConnect) *string { return v.ConsumerMaxPollRecords }).(pulumi.StringPtrOutput)
}

// The interval at which to try committing offsets for tasks
// (defaults to 60000).
func (o KafkaConnectKafkaConnectUserConfigKafkaConnectOutput) OffsetFlushIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnectUserConfigKafkaConnect) *string { return v.OffsetFlushIntervalMs }).(pulumi.StringPtrOutput)
}

// Maximum number of milliseconds to wait for records to flush
// and partition offset data to be committed to offset storage before cancelling the process and restoring
// the offset data to be committed in a future attempt (defaults to 5000).
func (o KafkaConnectKafkaConnectUserConfigKafkaConnectOutput) OffsetFlushTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnectUserConfigKafkaConnect) *string { return v.OffsetFlushTimeoutMs }).(pulumi.StringPtrOutput)
}

// This setting will limit the number of record batches the
// producer will send in a single request to avoid sending huge requests.
func (o KafkaConnectKafkaConnectUserConfigKafkaConnectOutput) ProducerMaxRequestSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnectUserConfigKafkaConnect) *string { return v.ProducerMaxRequestSize }).(pulumi.StringPtrOutput)
}

// The timeout in milliseconds used to detect failures when using Kafka’s
// group management facilities (defaults to 10000).
func (o KafkaConnectKafkaConnectUserConfigKafkaConnectOutput) SessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnectUserConfigKafkaConnect) *string { return v.SessionTimeoutMs }).(pulumi.StringPtrOutput)
}

type KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput struct{ *pulumi.OutputState }

func (KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaConnectKafkaConnectUserConfigKafkaConnect)(nil)).Elem()
}

func (o KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) ToKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput() KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o
}

func (o KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) ToKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o
}

func (o KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) Elem() KafkaConnectKafkaConnectUserConfigKafkaConnectOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnectUserConfigKafkaConnect) KafkaConnectKafkaConnectUserConfigKafkaConnect {
		return *v
	}).(KafkaConnectKafkaConnectUserConfigKafkaConnectOutput)
}

// Defines what client configurations can be
// overridden by the connector. Default is None.
func (o KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) ConnectorClientConfigOverridePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorClientConfigOverridePolicy
	}).(pulumi.StringPtrOutput)
}

// What to do when there is no initial offset in Kafka or
// if the current offset does not exist any more on the server. Default is earliest.
func (o KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) ConsumerAutoOffsetReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerAutoOffsetReset
	}).(pulumi.StringPtrOutput)
}

// Records are fetched in batches by the consumer, and if
// the first record batch in the first non-empty partition of the fetch is larger than this value,
// the record batch will still be returned to ensure that the consumer can make progress. As such,
// this is not a absolute maximum.
func (o KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) ConsumerFetchMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerFetchMaxBytes
	}).(pulumi.StringPtrOutput)
}

// Transaction read isolation level. readUncommitted is
// the default, but readCommitted can be used if consume-exactly-once behavior is desired.
func (o KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) ConsumerIsolationLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerIsolationLevel
	}).(pulumi.StringPtrOutput)
}

// Records are fetched in batches by the consumer.If
// the first record batch in the first non-empty partition of the fetch is larger than this limit,
// the batch will still be returned to ensure that the consumer can make progress.
func (o KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) ConsumerMaxPartitionFetchBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerMaxPartitionFetchBytes
	}).(pulumi.StringPtrOutput)
}

// The maximum delay in milliseconds between invocations
// of poll() when using consumer group management (defaults to 300000).
func (o KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) ConsumerMaxPollIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerMaxPollIntervalMs
	}).(pulumi.StringPtrOutput)
}

// The maximum number of records returned by a single poll.
func (o KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) ConsumerMaxPollRecords() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerMaxPollRecords
	}).(pulumi.StringPtrOutput)
}

// The interval at which to try committing offsets for tasks
// (defaults to 60000).
func (o KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) OffsetFlushIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.OffsetFlushIntervalMs
	}).(pulumi.StringPtrOutput)
}

// Maximum number of milliseconds to wait for records to flush
// and partition offset data to be committed to offset storage before cancelling the process and restoring
// the offset data to be committed in a future attempt (defaults to 5000).
func (o KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) OffsetFlushTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.OffsetFlushTimeoutMs
	}).(pulumi.StringPtrOutput)
}

// This setting will limit the number of record batches the
// producer will send in a single request to avoid sending huge requests.
func (o KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) ProducerMaxRequestSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ProducerMaxRequestSize
	}).(pulumi.StringPtrOutput)
}

// The timeout in milliseconds used to detect failures when using Kafka’s
// group management facilities (defaults to 10000).
func (o KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) SessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.SessionTimeoutMs
	}).(pulumi.StringPtrOutput)
}

type KafkaConnectKafkaConnectUserConfigPrivateAccess struct {
	// Allow clients to connect to kafkaConnect from the public internet for
	// service nodes that are in a project VPC or another type of private network.
	KafkaConnect *string `pulumi:"kafkaConnect"`
	// Allow clients to connect to prometheus from the public internet for service
	// nodes that are in a project VPC or another type of private network.
	Prometheus *string `pulumi:"prometheus"`
}

// KafkaConnectKafkaConnectUserConfigPrivateAccessInput is an input type that accepts KafkaConnectKafkaConnectUserConfigPrivateAccessArgs and KafkaConnectKafkaConnectUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `KafkaConnectKafkaConnectUserConfigPrivateAccessInput` via:
//
//          KafkaConnectKafkaConnectUserConfigPrivateAccessArgs{...}
type KafkaConnectKafkaConnectUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToKafkaConnectKafkaConnectUserConfigPrivateAccessOutput() KafkaConnectKafkaConnectUserConfigPrivateAccessOutput
	ToKafkaConnectKafkaConnectUserConfigPrivateAccessOutputWithContext(context.Context) KafkaConnectKafkaConnectUserConfigPrivateAccessOutput
}

type KafkaConnectKafkaConnectUserConfigPrivateAccessArgs struct {
	// Allow clients to connect to kafkaConnect from the public internet for
	// service nodes that are in a project VPC or another type of private network.
	KafkaConnect pulumi.StringPtrInput `pulumi:"kafkaConnect"`
	// Allow clients to connect to prometheus from the public internet for service
	// nodes that are in a project VPC or another type of private network.
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (KafkaConnectKafkaConnectUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaConnectKafkaConnectUserConfigPrivateAccess)(nil)).Elem()
}

func (i KafkaConnectKafkaConnectUserConfigPrivateAccessArgs) ToKafkaConnectKafkaConnectUserConfigPrivateAccessOutput() KafkaConnectKafkaConnectUserConfigPrivateAccessOutput {
	return i.ToKafkaConnectKafkaConnectUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i KafkaConnectKafkaConnectUserConfigPrivateAccessArgs) ToKafkaConnectKafkaConnectUserConfigPrivateAccessOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaConnectKafkaConnectUserConfigPrivateAccessOutput)
}

func (i KafkaConnectKafkaConnectUserConfigPrivateAccessArgs) ToKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput() KafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput {
	return i.ToKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i KafkaConnectKafkaConnectUserConfigPrivateAccessArgs) ToKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaConnectKafkaConnectUserConfigPrivateAccessOutput).ToKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// KafkaConnectKafkaConnectUserConfigPrivateAccessPtrInput is an input type that accepts KafkaConnectKafkaConnectUserConfigPrivateAccessArgs, KafkaConnectKafkaConnectUserConfigPrivateAccessPtr and KafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `KafkaConnectKafkaConnectUserConfigPrivateAccessPtrInput` via:
//
//          KafkaConnectKafkaConnectUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type KafkaConnectKafkaConnectUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput() KafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput
	ToKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(context.Context) KafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput
}

type kafkaConnectKafkaConnectUserConfigPrivateAccessPtrType KafkaConnectKafkaConnectUserConfigPrivateAccessArgs

func KafkaConnectKafkaConnectUserConfigPrivateAccessPtr(v *KafkaConnectKafkaConnectUserConfigPrivateAccessArgs) KafkaConnectKafkaConnectUserConfigPrivateAccessPtrInput {
	return (*kafkaConnectKafkaConnectUserConfigPrivateAccessPtrType)(v)
}

func (*kafkaConnectKafkaConnectUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaConnectKafkaConnectUserConfigPrivateAccess)(nil)).Elem()
}

func (i *kafkaConnectKafkaConnectUserConfigPrivateAccessPtrType) ToKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput() KafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput {
	return i.ToKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *kafkaConnectKafkaConnectUserConfigPrivateAccessPtrType) ToKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput)
}

type KafkaConnectKafkaConnectUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (KafkaConnectKafkaConnectUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaConnectKafkaConnectUserConfigPrivateAccess)(nil)).Elem()
}

func (o KafkaConnectKafkaConnectUserConfigPrivateAccessOutput) ToKafkaConnectKafkaConnectUserConfigPrivateAccessOutput() KafkaConnectKafkaConnectUserConfigPrivateAccessOutput {
	return o
}

func (o KafkaConnectKafkaConnectUserConfigPrivateAccessOutput) ToKafkaConnectKafkaConnectUserConfigPrivateAccessOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigPrivateAccessOutput {
	return o
}

func (o KafkaConnectKafkaConnectUserConfigPrivateAccessOutput) ToKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput() KafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput {
	return o.ToKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o KafkaConnectKafkaConnectUserConfigPrivateAccessOutput) ToKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnectUserConfigPrivateAccess) *KafkaConnectKafkaConnectUserConfigPrivateAccess {
		return &v
	}).(KafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput)
}

// Allow clients to connect to kafkaConnect from the public internet for
// service nodes that are in a project VPC or another type of private network.
func (o KafkaConnectKafkaConnectUserConfigPrivateAccessOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnectUserConfigPrivateAccess) *string { return v.KafkaConnect }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public internet for service
// nodes that are in a project VPC or another type of private network.
func (o KafkaConnectKafkaConnectUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnectUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type KafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (KafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaConnectKafkaConnectUserConfigPrivateAccess)(nil)).Elem()
}

func (o KafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput) ToKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput() KafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput {
	return o
}

func (o KafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput) ToKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput {
	return o
}

func (o KafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput) Elem() KafkaConnectKafkaConnectUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnectUserConfigPrivateAccess) KafkaConnectKafkaConnectUserConfigPrivateAccess {
		return *v
	}).(KafkaConnectKafkaConnectUserConfigPrivateAccessOutput)
}

// Allow clients to connect to kafkaConnect from the public internet for
// service nodes that are in a project VPC or another type of private network.
func (o KafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnectUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaConnect
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public internet for service
// nodes that are in a project VPC or another type of private network.
func (o KafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnectUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type KafkaConnectKafkaConnectUserConfigPrivatelinkAccess struct {
	// Allow clients to connect to kafkaConnect from the public internet for
	// service nodes that are in a project VPC or another type of private network.
	KafkaConnect *string `pulumi:"kafkaConnect"`
}

// KafkaConnectKafkaConnectUserConfigPrivatelinkAccessInput is an input type that accepts KafkaConnectKafkaConnectUserConfigPrivatelinkAccessArgs and KafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `KafkaConnectKafkaConnectUserConfigPrivatelinkAccessInput` via:
//
//          KafkaConnectKafkaConnectUserConfigPrivatelinkAccessArgs{...}
type KafkaConnectKafkaConnectUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput() KafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput
	ToKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutputWithContext(context.Context) KafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput
}

type KafkaConnectKafkaConnectUserConfigPrivatelinkAccessArgs struct {
	// Allow clients to connect to kafkaConnect from the public internet for
	// service nodes that are in a project VPC or another type of private network.
	KafkaConnect pulumi.StringPtrInput `pulumi:"kafkaConnect"`
}

func (KafkaConnectKafkaConnectUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaConnectKafkaConnectUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i KafkaConnectKafkaConnectUserConfigPrivatelinkAccessArgs) ToKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput() KafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput {
	return i.ToKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i KafkaConnectKafkaConnectUserConfigPrivatelinkAccessArgs) ToKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput)
}

func (i KafkaConnectKafkaConnectUserConfigPrivatelinkAccessArgs) ToKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput() KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return i.ToKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i KafkaConnectKafkaConnectUserConfigPrivatelinkAccessArgs) ToKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput).ToKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrInput is an input type that accepts KafkaConnectKafkaConnectUserConfigPrivatelinkAccessArgs, KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtr and KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrInput` via:
//
//          KafkaConnectKafkaConnectUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput() KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput
	ToKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput
}

type kafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrType KafkaConnectKafkaConnectUserConfigPrivatelinkAccessArgs

func KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtr(v *KafkaConnectKafkaConnectUserConfigPrivatelinkAccessArgs) KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrInput {
	return (*kafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrType)(v)
}

func (*kafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaConnectKafkaConnectUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *kafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrType) ToKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput() KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return i.ToKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *kafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrType) ToKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput)
}

type KafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (KafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaConnectKafkaConnectUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o KafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput) ToKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput() KafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput {
	return o
}

func (o KafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput) ToKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput {
	return o
}

func (o KafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput) ToKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput() KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return o.ToKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o KafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput) ToKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnectUserConfigPrivatelinkAccess) *KafkaConnectKafkaConnectUserConfigPrivatelinkAccess {
		return &v
	}).(KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput)
}

// Allow clients to connect to kafkaConnect from the public internet for
// service nodes that are in a project VPC or another type of private network.
func (o KafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnectUserConfigPrivatelinkAccess) *string { return v.KafkaConnect }).(pulumi.StringPtrOutput)
}

type KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaConnectKafkaConnectUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput) ToKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput() KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput) ToKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput) Elem() KafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnectUserConfigPrivatelinkAccess) KafkaConnectKafkaConnectUserConfigPrivatelinkAccess {
		return *v
	}).(KafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput)
}

// Allow clients to connect to kafkaConnect from the public internet for
// service nodes that are in a project VPC or another type of private network.
func (o KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnectUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaConnect
	}).(pulumi.StringPtrOutput)
}

type KafkaConnectKafkaConnectUserConfigPublicAccess struct {
	// Allow clients to connect to kafkaConnect from the public internet for
	// service nodes that are in a project VPC or another type of private network.
	KafkaConnect *string `pulumi:"kafkaConnect"`
	// Allow clients to connect to prometheus from the public internet for service
	// nodes that are in a project VPC or another type of private network.
	Prometheus *string `pulumi:"prometheus"`
}

// KafkaConnectKafkaConnectUserConfigPublicAccessInput is an input type that accepts KafkaConnectKafkaConnectUserConfigPublicAccessArgs and KafkaConnectKafkaConnectUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `KafkaConnectKafkaConnectUserConfigPublicAccessInput` via:
//
//          KafkaConnectKafkaConnectUserConfigPublicAccessArgs{...}
type KafkaConnectKafkaConnectUserConfigPublicAccessInput interface {
	pulumi.Input

	ToKafkaConnectKafkaConnectUserConfigPublicAccessOutput() KafkaConnectKafkaConnectUserConfigPublicAccessOutput
	ToKafkaConnectKafkaConnectUserConfigPublicAccessOutputWithContext(context.Context) KafkaConnectKafkaConnectUserConfigPublicAccessOutput
}

type KafkaConnectKafkaConnectUserConfigPublicAccessArgs struct {
	// Allow clients to connect to kafkaConnect from the public internet for
	// service nodes that are in a project VPC or another type of private network.
	KafkaConnect pulumi.StringPtrInput `pulumi:"kafkaConnect"`
	// Allow clients to connect to prometheus from the public internet for service
	// nodes that are in a project VPC or another type of private network.
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (KafkaConnectKafkaConnectUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaConnectKafkaConnectUserConfigPublicAccess)(nil)).Elem()
}

func (i KafkaConnectKafkaConnectUserConfigPublicAccessArgs) ToKafkaConnectKafkaConnectUserConfigPublicAccessOutput() KafkaConnectKafkaConnectUserConfigPublicAccessOutput {
	return i.ToKafkaConnectKafkaConnectUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i KafkaConnectKafkaConnectUserConfigPublicAccessArgs) ToKafkaConnectKafkaConnectUserConfigPublicAccessOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaConnectKafkaConnectUserConfigPublicAccessOutput)
}

func (i KafkaConnectKafkaConnectUserConfigPublicAccessArgs) ToKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput() KafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput {
	return i.ToKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i KafkaConnectKafkaConnectUserConfigPublicAccessArgs) ToKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaConnectKafkaConnectUserConfigPublicAccessOutput).ToKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// KafkaConnectKafkaConnectUserConfigPublicAccessPtrInput is an input type that accepts KafkaConnectKafkaConnectUserConfigPublicAccessArgs, KafkaConnectKafkaConnectUserConfigPublicAccessPtr and KafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `KafkaConnectKafkaConnectUserConfigPublicAccessPtrInput` via:
//
//          KafkaConnectKafkaConnectUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type KafkaConnectKafkaConnectUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput() KafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput
	ToKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutputWithContext(context.Context) KafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput
}

type kafkaConnectKafkaConnectUserConfigPublicAccessPtrType KafkaConnectKafkaConnectUserConfigPublicAccessArgs

func KafkaConnectKafkaConnectUserConfigPublicAccessPtr(v *KafkaConnectKafkaConnectUserConfigPublicAccessArgs) KafkaConnectKafkaConnectUserConfigPublicAccessPtrInput {
	return (*kafkaConnectKafkaConnectUserConfigPublicAccessPtrType)(v)
}

func (*kafkaConnectKafkaConnectUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaConnectKafkaConnectUserConfigPublicAccess)(nil)).Elem()
}

func (i *kafkaConnectKafkaConnectUserConfigPublicAccessPtrType) ToKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput() KafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput {
	return i.ToKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *kafkaConnectKafkaConnectUserConfigPublicAccessPtrType) ToKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput)
}

type KafkaConnectKafkaConnectUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (KafkaConnectKafkaConnectUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaConnectKafkaConnectUserConfigPublicAccess)(nil)).Elem()
}

func (o KafkaConnectKafkaConnectUserConfigPublicAccessOutput) ToKafkaConnectKafkaConnectUserConfigPublicAccessOutput() KafkaConnectKafkaConnectUserConfigPublicAccessOutput {
	return o
}

func (o KafkaConnectKafkaConnectUserConfigPublicAccessOutput) ToKafkaConnectKafkaConnectUserConfigPublicAccessOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigPublicAccessOutput {
	return o
}

func (o KafkaConnectKafkaConnectUserConfigPublicAccessOutput) ToKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput() KafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput {
	return o.ToKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o KafkaConnectKafkaConnectUserConfigPublicAccessOutput) ToKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnectUserConfigPublicAccess) *KafkaConnectKafkaConnectUserConfigPublicAccess {
		return &v
	}).(KafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput)
}

// Allow clients to connect to kafkaConnect from the public internet for
// service nodes that are in a project VPC or another type of private network.
func (o KafkaConnectKafkaConnectUserConfigPublicAccessOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnectUserConfigPublicAccess) *string { return v.KafkaConnect }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public internet for service
// nodes that are in a project VPC or another type of private network.
func (o KafkaConnectKafkaConnectUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaConnectKafkaConnectUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type KafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (KafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaConnectKafkaConnectUserConfigPublicAccess)(nil)).Elem()
}

func (o KafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput) ToKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput() KafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput {
	return o
}

func (o KafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput) ToKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) KafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput {
	return o
}

func (o KafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput) Elem() KafkaConnectKafkaConnectUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnectUserConfigPublicAccess) KafkaConnectKafkaConnectUserConfigPublicAccess {
		return *v
	}).(KafkaConnectKafkaConnectUserConfigPublicAccessOutput)
}

// Allow clients to connect to kafkaConnect from the public internet for
// service nodes that are in a project VPC or another type of private network.
func (o KafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnectUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaConnect
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public internet for service
// nodes that are in a project VPC or another type of private network.
func (o KafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaConnectKafkaConnectUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type KafkaConnectServiceIntegration struct {
	IntegrationType   string `pulumi:"integrationType"`
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// KafkaConnectServiceIntegrationInput is an input type that accepts KafkaConnectServiceIntegrationArgs and KafkaConnectServiceIntegrationOutput values.
// You can construct a concrete instance of `KafkaConnectServiceIntegrationInput` via:
//
//          KafkaConnectServiceIntegrationArgs{...}
type KafkaConnectServiceIntegrationInput interface {
	pulumi.Input

	ToKafkaConnectServiceIntegrationOutput() KafkaConnectServiceIntegrationOutput
	ToKafkaConnectServiceIntegrationOutputWithContext(context.Context) KafkaConnectServiceIntegrationOutput
}

type KafkaConnectServiceIntegrationArgs struct {
	IntegrationType   pulumi.StringInput `pulumi:"integrationType"`
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (KafkaConnectServiceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaConnectServiceIntegration)(nil)).Elem()
}

func (i KafkaConnectServiceIntegrationArgs) ToKafkaConnectServiceIntegrationOutput() KafkaConnectServiceIntegrationOutput {
	return i.ToKafkaConnectServiceIntegrationOutputWithContext(context.Background())
}

func (i KafkaConnectServiceIntegrationArgs) ToKafkaConnectServiceIntegrationOutputWithContext(ctx context.Context) KafkaConnectServiceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaConnectServiceIntegrationOutput)
}

// KafkaConnectServiceIntegrationArrayInput is an input type that accepts KafkaConnectServiceIntegrationArray and KafkaConnectServiceIntegrationArrayOutput values.
// You can construct a concrete instance of `KafkaConnectServiceIntegrationArrayInput` via:
//
//          KafkaConnectServiceIntegrationArray{ KafkaConnectServiceIntegrationArgs{...} }
type KafkaConnectServiceIntegrationArrayInput interface {
	pulumi.Input

	ToKafkaConnectServiceIntegrationArrayOutput() KafkaConnectServiceIntegrationArrayOutput
	ToKafkaConnectServiceIntegrationArrayOutputWithContext(context.Context) KafkaConnectServiceIntegrationArrayOutput
}

type KafkaConnectServiceIntegrationArray []KafkaConnectServiceIntegrationInput

func (KafkaConnectServiceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaConnectServiceIntegration)(nil)).Elem()
}

func (i KafkaConnectServiceIntegrationArray) ToKafkaConnectServiceIntegrationArrayOutput() KafkaConnectServiceIntegrationArrayOutput {
	return i.ToKafkaConnectServiceIntegrationArrayOutputWithContext(context.Background())
}

func (i KafkaConnectServiceIntegrationArray) ToKafkaConnectServiceIntegrationArrayOutputWithContext(ctx context.Context) KafkaConnectServiceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaConnectServiceIntegrationArrayOutput)
}

type KafkaConnectServiceIntegrationOutput struct{ *pulumi.OutputState }

func (KafkaConnectServiceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaConnectServiceIntegration)(nil)).Elem()
}

func (o KafkaConnectServiceIntegrationOutput) ToKafkaConnectServiceIntegrationOutput() KafkaConnectServiceIntegrationOutput {
	return o
}

func (o KafkaConnectServiceIntegrationOutput) ToKafkaConnectServiceIntegrationOutputWithContext(ctx context.Context) KafkaConnectServiceIntegrationOutput {
	return o
}

func (o KafkaConnectServiceIntegrationOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaConnectServiceIntegration) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o KafkaConnectServiceIntegrationOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaConnectServiceIntegration) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

type KafkaConnectServiceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (KafkaConnectServiceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaConnectServiceIntegration)(nil)).Elem()
}

func (o KafkaConnectServiceIntegrationArrayOutput) ToKafkaConnectServiceIntegrationArrayOutput() KafkaConnectServiceIntegrationArrayOutput {
	return o
}

func (o KafkaConnectServiceIntegrationArrayOutput) ToKafkaConnectServiceIntegrationArrayOutputWithContext(ctx context.Context) KafkaConnectServiceIntegrationArrayOutput {
	return o
}

func (o KafkaConnectServiceIntegrationArrayOutput) Index(i pulumi.IntInput) KafkaConnectServiceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaConnectServiceIntegration {
		return vs[0].([]KafkaConnectServiceIntegration)[vs[1].(int)]
	}).(KafkaConnectServiceIntegrationOutput)
}

type KafkaConnectorTask struct {
	Connector *string `pulumi:"connector"`
	// List of tasks of a connector, each element contains `connector`
	// (Related connector name) and `task` (Task id / number).
	Task *int `pulumi:"task"`
}

// KafkaConnectorTaskInput is an input type that accepts KafkaConnectorTaskArgs and KafkaConnectorTaskOutput values.
// You can construct a concrete instance of `KafkaConnectorTaskInput` via:
//
//          KafkaConnectorTaskArgs{...}
type KafkaConnectorTaskInput interface {
	pulumi.Input

	ToKafkaConnectorTaskOutput() KafkaConnectorTaskOutput
	ToKafkaConnectorTaskOutputWithContext(context.Context) KafkaConnectorTaskOutput
}

type KafkaConnectorTaskArgs struct {
	Connector pulumi.StringPtrInput `pulumi:"connector"`
	// List of tasks of a connector, each element contains `connector`
	// (Related connector name) and `task` (Task id / number).
	Task pulumi.IntPtrInput `pulumi:"task"`
}

func (KafkaConnectorTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaConnectorTask)(nil)).Elem()
}

func (i KafkaConnectorTaskArgs) ToKafkaConnectorTaskOutput() KafkaConnectorTaskOutput {
	return i.ToKafkaConnectorTaskOutputWithContext(context.Background())
}

func (i KafkaConnectorTaskArgs) ToKafkaConnectorTaskOutputWithContext(ctx context.Context) KafkaConnectorTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaConnectorTaskOutput)
}

// KafkaConnectorTaskArrayInput is an input type that accepts KafkaConnectorTaskArray and KafkaConnectorTaskArrayOutput values.
// You can construct a concrete instance of `KafkaConnectorTaskArrayInput` via:
//
//          KafkaConnectorTaskArray{ KafkaConnectorTaskArgs{...} }
type KafkaConnectorTaskArrayInput interface {
	pulumi.Input

	ToKafkaConnectorTaskArrayOutput() KafkaConnectorTaskArrayOutput
	ToKafkaConnectorTaskArrayOutputWithContext(context.Context) KafkaConnectorTaskArrayOutput
}

type KafkaConnectorTaskArray []KafkaConnectorTaskInput

func (KafkaConnectorTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaConnectorTask)(nil)).Elem()
}

func (i KafkaConnectorTaskArray) ToKafkaConnectorTaskArrayOutput() KafkaConnectorTaskArrayOutput {
	return i.ToKafkaConnectorTaskArrayOutputWithContext(context.Background())
}

func (i KafkaConnectorTaskArray) ToKafkaConnectorTaskArrayOutputWithContext(ctx context.Context) KafkaConnectorTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaConnectorTaskArrayOutput)
}

type KafkaConnectorTaskOutput struct{ *pulumi.OutputState }

func (KafkaConnectorTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaConnectorTask)(nil)).Elem()
}

func (o KafkaConnectorTaskOutput) ToKafkaConnectorTaskOutput() KafkaConnectorTaskOutput {
	return o
}

func (o KafkaConnectorTaskOutput) ToKafkaConnectorTaskOutputWithContext(ctx context.Context) KafkaConnectorTaskOutput {
	return o
}

func (o KafkaConnectorTaskOutput) Connector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaConnectorTask) *string { return v.Connector }).(pulumi.StringPtrOutput)
}

// List of tasks of a connector, each element contains `connector`
// (Related connector name) and `task` (Task id / number).
func (o KafkaConnectorTaskOutput) Task() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaConnectorTask) *int { return v.Task }).(pulumi.IntPtrOutput)
}

type KafkaConnectorTaskArrayOutput struct{ *pulumi.OutputState }

func (KafkaConnectorTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaConnectorTask)(nil)).Elem()
}

func (o KafkaConnectorTaskArrayOutput) ToKafkaConnectorTaskArrayOutput() KafkaConnectorTaskArrayOutput {
	return o
}

func (o KafkaConnectorTaskArrayOutput) ToKafkaConnectorTaskArrayOutputWithContext(ctx context.Context) KafkaConnectorTaskArrayOutput {
	return o
}

func (o KafkaConnectorTaskArrayOutput) Index(i pulumi.IntInput) KafkaConnectorTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaConnectorTask {
		return vs[0].([]KafkaConnectorTask)[vs[1].(int)]
	}).(KafkaConnectorTaskOutput)
}

type KafkaKafka struct {
	// The Kafka client certificate
	AccessCert *string `pulumi:"accessCert"`
	// The Kafka client certificate key
	AccessKey *string `pulumi:"accessKey"`
	// The Kafka Connect URI, if any
	ConnectUri *string `pulumi:"connectUri"`
	// The Kafka REST URI, if any
	RestUri *string `pulumi:"restUri"`
	// The Schema Registry URI, if any
	SchemaRegistryUri *string `pulumi:"schemaRegistryUri"`
}

// KafkaKafkaInput is an input type that accepts KafkaKafkaArgs and KafkaKafkaOutput values.
// You can construct a concrete instance of `KafkaKafkaInput` via:
//
//          KafkaKafkaArgs{...}
type KafkaKafkaInput interface {
	pulumi.Input

	ToKafkaKafkaOutput() KafkaKafkaOutput
	ToKafkaKafkaOutputWithContext(context.Context) KafkaKafkaOutput
}

type KafkaKafkaArgs struct {
	// The Kafka client certificate
	AccessCert pulumi.StringPtrInput `pulumi:"accessCert"`
	// The Kafka client certificate key
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// The Kafka Connect URI, if any
	ConnectUri pulumi.StringPtrInput `pulumi:"connectUri"`
	// The Kafka REST URI, if any
	RestUri pulumi.StringPtrInput `pulumi:"restUri"`
	// The Schema Registry URI, if any
	SchemaRegistryUri pulumi.StringPtrInput `pulumi:"schemaRegistryUri"`
}

func (KafkaKafkaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaKafka)(nil)).Elem()
}

func (i KafkaKafkaArgs) ToKafkaKafkaOutput() KafkaKafkaOutput {
	return i.ToKafkaKafkaOutputWithContext(context.Background())
}

func (i KafkaKafkaArgs) ToKafkaKafkaOutputWithContext(ctx context.Context) KafkaKafkaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaOutput)
}

func (i KafkaKafkaArgs) ToKafkaKafkaPtrOutput() KafkaKafkaPtrOutput {
	return i.ToKafkaKafkaPtrOutputWithContext(context.Background())
}

func (i KafkaKafkaArgs) ToKafkaKafkaPtrOutputWithContext(ctx context.Context) KafkaKafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaOutput).ToKafkaKafkaPtrOutputWithContext(ctx)
}

// KafkaKafkaPtrInput is an input type that accepts KafkaKafkaArgs, KafkaKafkaPtr and KafkaKafkaPtrOutput values.
// You can construct a concrete instance of `KafkaKafkaPtrInput` via:
//
//          KafkaKafkaArgs{...}
//
//  or:
//
//          nil
type KafkaKafkaPtrInput interface {
	pulumi.Input

	ToKafkaKafkaPtrOutput() KafkaKafkaPtrOutput
	ToKafkaKafkaPtrOutputWithContext(context.Context) KafkaKafkaPtrOutput
}

type kafkaKafkaPtrType KafkaKafkaArgs

func KafkaKafkaPtr(v *KafkaKafkaArgs) KafkaKafkaPtrInput {
	return (*kafkaKafkaPtrType)(v)
}

func (*kafkaKafkaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaKafka)(nil)).Elem()
}

func (i *kafkaKafkaPtrType) ToKafkaKafkaPtrOutput() KafkaKafkaPtrOutput {
	return i.ToKafkaKafkaPtrOutputWithContext(context.Background())
}

func (i *kafkaKafkaPtrType) ToKafkaKafkaPtrOutputWithContext(ctx context.Context) KafkaKafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaPtrOutput)
}

type KafkaKafkaOutput struct{ *pulumi.OutputState }

func (KafkaKafkaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaKafka)(nil)).Elem()
}

func (o KafkaKafkaOutput) ToKafkaKafkaOutput() KafkaKafkaOutput {
	return o
}

func (o KafkaKafkaOutput) ToKafkaKafkaOutputWithContext(ctx context.Context) KafkaKafkaOutput {
	return o
}

func (o KafkaKafkaOutput) ToKafkaKafkaPtrOutput() KafkaKafkaPtrOutput {
	return o.ToKafkaKafkaPtrOutputWithContext(context.Background())
}

func (o KafkaKafkaOutput) ToKafkaKafkaPtrOutputWithContext(ctx context.Context) KafkaKafkaPtrOutput {
	return o.ApplyT(func(v KafkaKafka) *KafkaKafka {
		return &v
	}).(KafkaKafkaPtrOutput)
}

// The Kafka client certificate
func (o KafkaKafkaOutput) AccessCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafka) *string { return v.AccessCert }).(pulumi.StringPtrOutput)
}

// The Kafka client certificate key
func (o KafkaKafkaOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafka) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// The Kafka Connect URI, if any
func (o KafkaKafkaOutput) ConnectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafka) *string { return v.ConnectUri }).(pulumi.StringPtrOutput)
}

// The Kafka REST URI, if any
func (o KafkaKafkaOutput) RestUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafka) *string { return v.RestUri }).(pulumi.StringPtrOutput)
}

// The Schema Registry URI, if any
func (o KafkaKafkaOutput) SchemaRegistryUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafka) *string { return v.SchemaRegistryUri }).(pulumi.StringPtrOutput)
}

type KafkaKafkaPtrOutput struct{ *pulumi.OutputState }

func (KafkaKafkaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaKafka)(nil)).Elem()
}

func (o KafkaKafkaPtrOutput) ToKafkaKafkaPtrOutput() KafkaKafkaPtrOutput {
	return o
}

func (o KafkaKafkaPtrOutput) ToKafkaKafkaPtrOutputWithContext(ctx context.Context) KafkaKafkaPtrOutput {
	return o
}

func (o KafkaKafkaPtrOutput) Elem() KafkaKafkaOutput {
	return o.ApplyT(func(v *KafkaKafka) KafkaKafka { return *v }).(KafkaKafkaOutput)
}

// The Kafka client certificate
func (o KafkaKafkaPtrOutput) AccessCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafka) *string {
		if v == nil {
			return nil
		}
		return v.AccessCert
	}).(pulumi.StringPtrOutput)
}

// The Kafka client certificate key
func (o KafkaKafkaPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafka) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// The Kafka Connect URI, if any
func (o KafkaKafkaPtrOutput) ConnectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafka) *string {
		if v == nil {
			return nil
		}
		return v.ConnectUri
	}).(pulumi.StringPtrOutput)
}

// The Kafka REST URI, if any
func (o KafkaKafkaPtrOutput) RestUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafka) *string {
		if v == nil {
			return nil
		}
		return v.RestUri
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry URI, if any
func (o KafkaKafkaPtrOutput) SchemaRegistryUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafka) *string {
		if v == nil {
			return nil
		}
		return v.SchemaRegistryUri
	}).(pulumi.StringPtrOutput)
}

type KafkaKafkaUserConfig struct {
	// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
	CustomDomain *string `pulumi:"customDomain"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
	IpFilters []string `pulumi:"ipFilters"`
	// Enable kafka
	Kafka *KafkaKafkaUserConfigKafka `pulumi:"kafka"`
	// Kafka authentication methods
	KafkaAuthenticationMethods *KafkaKafkaUserConfigKafkaAuthenticationMethods `pulumi:"kafkaAuthenticationMethods"`
	// Enable kafka_connect
	KafkaConnect *string `pulumi:"kafkaConnect"`
	// Kafka Connect configuration values
	KafkaConnectConfig *KafkaKafkaUserConfigKafkaConnectConfig `pulumi:"kafkaConnectConfig"`
	// Enable kafka_rest
	KafkaRest *string `pulumi:"kafkaRest"`
	// Kafka-REST configuration
	KafkaRestConfig *KafkaKafkaUserConfigKafkaRestConfig `pulumi:"kafkaRestConfig"`
	// Kafka major version
	KafkaVersion *string `pulumi:"kafkaVersion"`
	// Allow access to selected service ports from private networks
	PrivateAccess *KafkaKafkaUserConfigPrivateAccess `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess *KafkaKafkaUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	// Allow access to selected service ports from the public Internet
	PublicAccess *KafkaKafkaUserConfigPublicAccess `pulumi:"publicAccess"`
	// Enable Schema-Registry service
	SchemaRegistry *string `pulumi:"schemaRegistry"`
	// Schema Registry configuration
	SchemaRegistryConfig *KafkaKafkaUserConfigSchemaRegistryConfig `pulumi:"schemaRegistryConfig"`
}

// KafkaKafkaUserConfigInput is an input type that accepts KafkaKafkaUserConfigArgs and KafkaKafkaUserConfigOutput values.
// You can construct a concrete instance of `KafkaKafkaUserConfigInput` via:
//
//          KafkaKafkaUserConfigArgs{...}
type KafkaKafkaUserConfigInput interface {
	pulumi.Input

	ToKafkaKafkaUserConfigOutput() KafkaKafkaUserConfigOutput
	ToKafkaKafkaUserConfigOutputWithContext(context.Context) KafkaKafkaUserConfigOutput
}

type KafkaKafkaUserConfigArgs struct {
	// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
	CustomDomain pulumi.StringPtrInput `pulumi:"customDomain"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// Enable kafka
	Kafka KafkaKafkaUserConfigKafkaPtrInput `pulumi:"kafka"`
	// Kafka authentication methods
	KafkaAuthenticationMethods KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrInput `pulumi:"kafkaAuthenticationMethods"`
	// Enable kafka_connect
	KafkaConnect pulumi.StringPtrInput `pulumi:"kafkaConnect"`
	// Kafka Connect configuration values
	KafkaConnectConfig KafkaKafkaUserConfigKafkaConnectConfigPtrInput `pulumi:"kafkaConnectConfig"`
	// Enable kafka_rest
	KafkaRest pulumi.StringPtrInput `pulumi:"kafkaRest"`
	// Kafka-REST configuration
	KafkaRestConfig KafkaKafkaUserConfigKafkaRestConfigPtrInput `pulumi:"kafkaRestConfig"`
	// Kafka major version
	KafkaVersion pulumi.StringPtrInput `pulumi:"kafkaVersion"`
	// Allow access to selected service ports from private networks
	PrivateAccess KafkaKafkaUserConfigPrivateAccessPtrInput `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess KafkaKafkaUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	// Allow access to selected service ports from the public Internet
	PublicAccess KafkaKafkaUserConfigPublicAccessPtrInput `pulumi:"publicAccess"`
	// Enable Schema-Registry service
	SchemaRegistry pulumi.StringPtrInput `pulumi:"schemaRegistry"`
	// Schema Registry configuration
	SchemaRegistryConfig KafkaKafkaUserConfigSchemaRegistryConfigPtrInput `pulumi:"schemaRegistryConfig"`
}

func (KafkaKafkaUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaKafkaUserConfig)(nil)).Elem()
}

func (i KafkaKafkaUserConfigArgs) ToKafkaKafkaUserConfigOutput() KafkaKafkaUserConfigOutput {
	return i.ToKafkaKafkaUserConfigOutputWithContext(context.Background())
}

func (i KafkaKafkaUserConfigArgs) ToKafkaKafkaUserConfigOutputWithContext(ctx context.Context) KafkaKafkaUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigOutput)
}

func (i KafkaKafkaUserConfigArgs) ToKafkaKafkaUserConfigPtrOutput() KafkaKafkaUserConfigPtrOutput {
	return i.ToKafkaKafkaUserConfigPtrOutputWithContext(context.Background())
}

func (i KafkaKafkaUserConfigArgs) ToKafkaKafkaUserConfigPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigOutput).ToKafkaKafkaUserConfigPtrOutputWithContext(ctx)
}

// KafkaKafkaUserConfigPtrInput is an input type that accepts KafkaKafkaUserConfigArgs, KafkaKafkaUserConfigPtr and KafkaKafkaUserConfigPtrOutput values.
// You can construct a concrete instance of `KafkaKafkaUserConfigPtrInput` via:
//
//          KafkaKafkaUserConfigArgs{...}
//
//  or:
//
//          nil
type KafkaKafkaUserConfigPtrInput interface {
	pulumi.Input

	ToKafkaKafkaUserConfigPtrOutput() KafkaKafkaUserConfigPtrOutput
	ToKafkaKafkaUserConfigPtrOutputWithContext(context.Context) KafkaKafkaUserConfigPtrOutput
}

type kafkaKafkaUserConfigPtrType KafkaKafkaUserConfigArgs

func KafkaKafkaUserConfigPtr(v *KafkaKafkaUserConfigArgs) KafkaKafkaUserConfigPtrInput {
	return (*kafkaKafkaUserConfigPtrType)(v)
}

func (*kafkaKafkaUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaKafkaUserConfig)(nil)).Elem()
}

func (i *kafkaKafkaUserConfigPtrType) ToKafkaKafkaUserConfigPtrOutput() KafkaKafkaUserConfigPtrOutput {
	return i.ToKafkaKafkaUserConfigPtrOutputWithContext(context.Background())
}

func (i *kafkaKafkaUserConfigPtrType) ToKafkaKafkaUserConfigPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigPtrOutput)
}

type KafkaKafkaUserConfigOutput struct{ *pulumi.OutputState }

func (KafkaKafkaUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaKafkaUserConfig)(nil)).Elem()
}

func (o KafkaKafkaUserConfigOutput) ToKafkaKafkaUserConfigOutput() KafkaKafkaUserConfigOutput {
	return o
}

func (o KafkaKafkaUserConfigOutput) ToKafkaKafkaUserConfigOutputWithContext(ctx context.Context) KafkaKafkaUserConfigOutput {
	return o
}

func (o KafkaKafkaUserConfigOutput) ToKafkaKafkaUserConfigPtrOutput() KafkaKafkaUserConfigPtrOutput {
	return o.ToKafkaKafkaUserConfigPtrOutputWithContext(context.Background())
}

func (o KafkaKafkaUserConfigOutput) ToKafkaKafkaUserConfigPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfig) *KafkaKafkaUserConfig {
		return &v
	}).(KafkaKafkaUserConfigPtrOutput)
}

// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
func (o KafkaKafkaUserConfigOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfig) *string { return v.CustomDomain }).(pulumi.StringPtrOutput)
}

// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
func (o KafkaKafkaUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// Enable kafka
func (o KafkaKafkaUserConfigOutput) Kafka() KafkaKafkaUserConfigKafkaPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfig) *KafkaKafkaUserConfigKafka { return v.Kafka }).(KafkaKafkaUserConfigKafkaPtrOutput)
}

// Kafka authentication methods
func (o KafkaKafkaUserConfigOutput) KafkaAuthenticationMethods() KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfig) *KafkaKafkaUserConfigKafkaAuthenticationMethods {
		return v.KafkaAuthenticationMethods
	}).(KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput)
}

// Enable kafka_connect
func (o KafkaKafkaUserConfigOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfig) *string { return v.KafkaConnect }).(pulumi.StringPtrOutput)
}

// Kafka Connect configuration values
func (o KafkaKafkaUserConfigOutput) KafkaConnectConfig() KafkaKafkaUserConfigKafkaConnectConfigPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfig) *KafkaKafkaUserConfigKafkaConnectConfig { return v.KafkaConnectConfig }).(KafkaKafkaUserConfigKafkaConnectConfigPtrOutput)
}

// Enable kafka_rest
func (o KafkaKafkaUserConfigOutput) KafkaRest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfig) *string { return v.KafkaRest }).(pulumi.StringPtrOutput)
}

// Kafka-REST configuration
func (o KafkaKafkaUserConfigOutput) KafkaRestConfig() KafkaKafkaUserConfigKafkaRestConfigPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfig) *KafkaKafkaUserConfigKafkaRestConfig { return v.KafkaRestConfig }).(KafkaKafkaUserConfigKafkaRestConfigPtrOutput)
}

// Kafka major version
func (o KafkaKafkaUserConfigOutput) KafkaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfig) *string { return v.KafkaVersion }).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from private networks
func (o KafkaKafkaUserConfigOutput) PrivateAccess() KafkaKafkaUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfig) *KafkaKafkaUserConfigPrivateAccess { return v.PrivateAccess }).(KafkaKafkaUserConfigPrivateAccessPtrOutput)
}

// Allow access to selected service components through Privatelink
func (o KafkaKafkaUserConfigOutput) PrivatelinkAccess() KafkaKafkaUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfig) *KafkaKafkaUserConfigPrivatelinkAccess { return v.PrivatelinkAccess }).(KafkaKafkaUserConfigPrivatelinkAccessPtrOutput)
}

// Allow access to selected service ports from the public Internet
func (o KafkaKafkaUserConfigOutput) PublicAccess() KafkaKafkaUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfig) *KafkaKafkaUserConfigPublicAccess { return v.PublicAccess }).(KafkaKafkaUserConfigPublicAccessPtrOutput)
}

// Enable Schema-Registry service
func (o KafkaKafkaUserConfigOutput) SchemaRegistry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfig) *string { return v.SchemaRegistry }).(pulumi.StringPtrOutput)
}

// Schema Registry configuration
func (o KafkaKafkaUserConfigOutput) SchemaRegistryConfig() KafkaKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfig) *KafkaKafkaUserConfigSchemaRegistryConfig { return v.SchemaRegistryConfig }).(KafkaKafkaUserConfigSchemaRegistryConfigPtrOutput)
}

type KafkaKafkaUserConfigPtrOutput struct{ *pulumi.OutputState }

func (KafkaKafkaUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaKafkaUserConfig)(nil)).Elem()
}

func (o KafkaKafkaUserConfigPtrOutput) ToKafkaKafkaUserConfigPtrOutput() KafkaKafkaUserConfigPtrOutput {
	return o
}

func (o KafkaKafkaUserConfigPtrOutput) ToKafkaKafkaUserConfigPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigPtrOutput {
	return o
}

func (o KafkaKafkaUserConfigPtrOutput) Elem() KafkaKafkaUserConfigOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfig) KafkaKafkaUserConfig { return *v }).(KafkaKafkaUserConfigOutput)
}

// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
func (o KafkaKafkaUserConfigPtrOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.CustomDomain
	}).(pulumi.StringPtrOutput)
}

// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
func (o KafkaKafkaUserConfigPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

// Enable kafka
func (o KafkaKafkaUserConfigPtrOutput) Kafka() KafkaKafkaUserConfigKafkaPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfig) *KafkaKafkaUserConfigKafka {
		if v == nil {
			return nil
		}
		return v.Kafka
	}).(KafkaKafkaUserConfigKafkaPtrOutput)
}

// Kafka authentication methods
func (o KafkaKafkaUserConfigPtrOutput) KafkaAuthenticationMethods() KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfig) *KafkaKafkaUserConfigKafkaAuthenticationMethods {
		if v == nil {
			return nil
		}
		return v.KafkaAuthenticationMethods
	}).(KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput)
}

// Enable kafka_connect
func (o KafkaKafkaUserConfigPtrOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.KafkaConnect
	}).(pulumi.StringPtrOutput)
}

// Kafka Connect configuration values
func (o KafkaKafkaUserConfigPtrOutput) KafkaConnectConfig() KafkaKafkaUserConfigKafkaConnectConfigPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfig) *KafkaKafkaUserConfigKafkaConnectConfig {
		if v == nil {
			return nil
		}
		return v.KafkaConnectConfig
	}).(KafkaKafkaUserConfigKafkaConnectConfigPtrOutput)
}

// Enable kafka_rest
func (o KafkaKafkaUserConfigPtrOutput) KafkaRest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.KafkaRest
	}).(pulumi.StringPtrOutput)
}

// Kafka-REST configuration
func (o KafkaKafkaUserConfigPtrOutput) KafkaRestConfig() KafkaKafkaUserConfigKafkaRestConfigPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfig) *KafkaKafkaUserConfigKafkaRestConfig {
		if v == nil {
			return nil
		}
		return v.KafkaRestConfig
	}).(KafkaKafkaUserConfigKafkaRestConfigPtrOutput)
}

// Kafka major version
func (o KafkaKafkaUserConfigPtrOutput) KafkaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.KafkaVersion
	}).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from private networks
func (o KafkaKafkaUserConfigPtrOutput) PrivateAccess() KafkaKafkaUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfig) *KafkaKafkaUserConfigPrivateAccess {
		if v == nil {
			return nil
		}
		return v.PrivateAccess
	}).(KafkaKafkaUserConfigPrivateAccessPtrOutput)
}

// Allow access to selected service components through Privatelink
func (o KafkaKafkaUserConfigPtrOutput) PrivatelinkAccess() KafkaKafkaUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfig) *KafkaKafkaUserConfigPrivatelinkAccess {
		if v == nil {
			return nil
		}
		return v.PrivatelinkAccess
	}).(KafkaKafkaUserConfigPrivatelinkAccessPtrOutput)
}

// Allow access to selected service ports from the public Internet
func (o KafkaKafkaUserConfigPtrOutput) PublicAccess() KafkaKafkaUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfig) *KafkaKafkaUserConfigPublicAccess {
		if v == nil {
			return nil
		}
		return v.PublicAccess
	}).(KafkaKafkaUserConfigPublicAccessPtrOutput)
}

// Enable Schema-Registry service
func (o KafkaKafkaUserConfigPtrOutput) SchemaRegistry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.SchemaRegistry
	}).(pulumi.StringPtrOutput)
}

// Schema Registry configuration
func (o KafkaKafkaUserConfigPtrOutput) SchemaRegistryConfig() KafkaKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfig) *KafkaKafkaUserConfigSchemaRegistryConfig {
		if v == nil {
			return nil
		}
		return v.SchemaRegistryConfig
	}).(KafkaKafkaUserConfigSchemaRegistryConfigPtrOutput)
}

type KafkaKafkaUserConfigKafka struct {
	// Enable auto creation of topics
	AutoCreateTopicsEnable *string `pulumi:"autoCreateTopicsEnable"`
	// Specify the final compression type for a given topic. This
	// configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd').
	// It additionally accepts 'uncompressed' which is equivalent to no compression; and 'producer'
	// which means retain the original compression codec set by the producer.
	CompressionType *string `pulumi:"compressionType"`
	// Idle connections timeout: the server socket processor
	// threads close the connections that idle for longer than this.
	ConnectionsMaxIdleMs *string `pulumi:"connectionsMaxIdleMs"`
	// Replication factor for autocreated topics
	DefaultReplicationFactor *string `pulumi:"defaultReplicationFactor"`
	// The amount of time, in milliseconds, the group
	// coordinator will wait for more consumers to join a new group before performing the first rebalance.
	// A longer delay means potentially fewer rebalances, but increases the time until processing begins.
	// The default value for this is 3 seconds. During development and testing it might be desirable to set
	// this to 0 in order to not delay test execution time.
	GroupInitialRebalanceDelayMs *string `pulumi:"groupInitialRebalanceDelayMs"`
	// The maximum allowed session timeout for registered
	// consumers. Longer timeouts give consumers more time to process messages in between heartbeats
	// at the cost of a longer time to detect failures.
	GroupMaxSessionTimeoutMs *string `pulumi:"groupMaxSessionTimeoutMs"`
	// The minimum allowed session timeout for registered
	// consumers. Longer timeouts give consumers more time to process messages in between heartbeats
	// at the cost of a longer time to detect failures.
	GroupMinSessionTimeoutMs    *string `pulumi:"groupMinSessionTimeoutMs"`
	LogCleanerDeleteRetentionMs *string `pulumi:"logCleanerDeleteRetentionMs"`
	// The maximum amount of time message will
	// remain uncompacted. Only applicable for logs that are being compacted
	LogCleanerMaxCompactionLagMs *string `pulumi:"logCleanerMaxCompactionLagMs"`
	// Controls log compactor frequency. Larger
	// value means more frequent compactions but also more space wasted for logs. Consider setting
	// log.cleaner.max.compaction.lag.ms to enforce compactions sooner, instead of setting a very
	// high value for this option.
	LogCleanerMinCleanableRatio *string `pulumi:"logCleanerMinCleanableRatio"`
	// The minimum time a message will remain
	// uncompacted in the log. Only applicable for logs that are being compacted.
	LogCleanerMinCompactionLagMs *string `pulumi:"logCleanerMinCompactionLagMs"`
	// The default cleanup policy for segments beyond the retention window.
	LogCleanupPolicy *string `pulumi:"logCleanupPolicy"`
	// The number of messages accumulated on a log partition
	// before messages are flushed to disk.
	LogFlushIntervalMessages *string `pulumi:"logFlushIntervalMessages"`
	// The maximum time in ms that a message in any topic is kept
	// in memory before flushed to disk. If not set, the value in log.flush.scheduler.interval.ms is used.
	LogFlushIntervalMs *string `pulumi:"logFlushIntervalMs"`
	// The interval with which Kafka adds an entry to the offset index.
	LogIndexIntervalBytes *string `pulumi:"logIndexIntervalBytes"`
	// The maximum size in bytes of the offset index.
	LogIndexSizeMaxBytes *string `pulumi:"logIndexSizeMaxBytes"`
	// This configuration controls whether down-conversion
	// of message formats is enabled to satisfy consume requests.
	LogMessageDownconversionEnable *string `pulumi:"logMessageDownconversionEnable"`
	// The maximum difference allowed between
	// the timestamp when a broker receives a message and the timestamp specified in the message
	LogMessageTimestampDifferenceMaxMs *string `pulumi:"logMessageTimestampDifferenceMaxMs"`
	// Define whether the timestamp in the message is
	// message create time or log append time.
	LogMessageTimestampType *string `pulumi:"logMessageTimestampType"`
	// Should pre allocate file when create new segment?
	LogPreallocate *string `pulumi:"logPreallocate"`
	// The maximum size of the log before deleting messages
	LogRetentionBytes *string `pulumi:"logRetentionBytes"`
	// The number of hours to keep a log file before deleting it.
	LogRetentionHours *string `pulumi:"logRetentionHours"`
	// The number of milliseconds to keep a log file before deleting it
	// (in milliseconds), If not set, the value in log.retention.minutes is used. If set to -1, no
	// time limit is applied.
	LogRetentionMs *string `pulumi:"logRetentionMs"`
	// The maximum jitter to subtract from logRollTimeMillis
	// (in milliseconds). If not set, the value in log.roll.jitter.hours is used.
	LogRollJitterMs *string `pulumi:"logRollJitterMs"`
	// The maximum time before a new log segment is rolled out (in milliseconds).
	LogRollMs *string `pulumi:"logRollMs"`
	// The maximum size of a single log file
	LogSegmentBytes *string `pulumi:"logSegmentBytes"`
	// The amount of time to wait before deleting a file
	// from the filesystem.
	LogSegmentDeleteDelayMs *string `pulumi:"logSegmentDeleteDelayMs"`
	// The maximum number of connections allowed from each ip
	// address (defaults to 2147483647).
	MaxConnectionsPerIp *string `pulumi:"maxConnectionsPerIp"`
	// The maximum number of incremental fetch
	// sessions that the broker will maintain.
	MaxIncrementalFetchSessionCacheSlots *string `pulumi:"maxIncrementalFetchSessionCacheSlots"`
	// The maximum size of message that the server can receive.
	MessageMaxBytes *string `pulumi:"messageMaxBytes"`
	// When a producer sets acks to 'all' (or '-1'),
	// min.insync.replicas specifies the minimum number of replicas that must acknowledge a write for
	// the write to be considered successful.
	MinInsyncReplicas *string `pulumi:"minInsyncReplicas"`
	// Number of partitions for autocreated topics
	NumPartitions *string `pulumi:"numPartitions"`
	// Log retention window in minutes for offsets topic.
	OffsetsRetentionMinutes *string `pulumi:"offsetsRetentionMinutes"`
	// The purge interval (in number of
	// requests) of the producer request purgatory(defaults to 1000).
	ProducerPurgatoryPurgeIntervalRequests *string `pulumi:"producerPurgatoryPurgeIntervalRequests"`
	// The number of bytes of messages to attempt to fetch
	// for each partition (defaults to 1048576). This is not an absolute maximum, if the first record
	// batch in the first non-empty partition of the fetch is larger than this value, the record batch
	// will still be returned to ensure that progress can be made.
	ReplicaFetchMaxBytes *string `pulumi:"replicaFetchMaxBytes"`
	// Maximum bytes expected for the entire fetch
	// response (defaults to 10485760). Records are fetched in batches, and if the first record batch
	// in the first non-empty partition of the fetch is larger than this value, the record batch will
	// still be returned to ensure that progress can be made. As such, this is not an absolute maximum.
	ReplicaFetchResponseMaxBytes *string `pulumi:"replicaFetchResponseMaxBytes"`
	// The maximum number of bytes in a socket request
	// (defaults to 104857600).
	SocketRequestMaxBytes *string `pulumi:"socketRequestMaxBytes"`
	// The interval at which
	// to remove transactions that have expired due to transactional.id.expiration.ms passing (defaults
	// to 3600000 (1 hour)).
	TransactionRemoveExpiredTransactionCleanupIntervalMs *string `pulumi:"transactionRemoveExpiredTransactionCleanupIntervalMs"`
	// The transaction topic segment bytes should
	// be kept relatively small in order to facilitate faster log compaction and cache loads (defaults
	// to 104857600 (100 mebibytes)).
	TransactionStateLogSegmentBytes *string `pulumi:"transactionStateLogSegmentBytes"`
}

// KafkaKafkaUserConfigKafkaInput is an input type that accepts KafkaKafkaUserConfigKafkaArgs and KafkaKafkaUserConfigKafkaOutput values.
// You can construct a concrete instance of `KafkaKafkaUserConfigKafkaInput` via:
//
//          KafkaKafkaUserConfigKafkaArgs{...}
type KafkaKafkaUserConfigKafkaInput interface {
	pulumi.Input

	ToKafkaKafkaUserConfigKafkaOutput() KafkaKafkaUserConfigKafkaOutput
	ToKafkaKafkaUserConfigKafkaOutputWithContext(context.Context) KafkaKafkaUserConfigKafkaOutput
}

type KafkaKafkaUserConfigKafkaArgs struct {
	// Enable auto creation of topics
	AutoCreateTopicsEnable pulumi.StringPtrInput `pulumi:"autoCreateTopicsEnable"`
	// Specify the final compression type for a given topic. This
	// configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd').
	// It additionally accepts 'uncompressed' which is equivalent to no compression; and 'producer'
	// which means retain the original compression codec set by the producer.
	CompressionType pulumi.StringPtrInput `pulumi:"compressionType"`
	// Idle connections timeout: the server socket processor
	// threads close the connections that idle for longer than this.
	ConnectionsMaxIdleMs pulumi.StringPtrInput `pulumi:"connectionsMaxIdleMs"`
	// Replication factor for autocreated topics
	DefaultReplicationFactor pulumi.StringPtrInput `pulumi:"defaultReplicationFactor"`
	// The amount of time, in milliseconds, the group
	// coordinator will wait for more consumers to join a new group before performing the first rebalance.
	// A longer delay means potentially fewer rebalances, but increases the time until processing begins.
	// The default value for this is 3 seconds. During development and testing it might be desirable to set
	// this to 0 in order to not delay test execution time.
	GroupInitialRebalanceDelayMs pulumi.StringPtrInput `pulumi:"groupInitialRebalanceDelayMs"`
	// The maximum allowed session timeout for registered
	// consumers. Longer timeouts give consumers more time to process messages in between heartbeats
	// at the cost of a longer time to detect failures.
	GroupMaxSessionTimeoutMs pulumi.StringPtrInput `pulumi:"groupMaxSessionTimeoutMs"`
	// The minimum allowed session timeout for registered
	// consumers. Longer timeouts give consumers more time to process messages in between heartbeats
	// at the cost of a longer time to detect failures.
	GroupMinSessionTimeoutMs    pulumi.StringPtrInput `pulumi:"groupMinSessionTimeoutMs"`
	LogCleanerDeleteRetentionMs pulumi.StringPtrInput `pulumi:"logCleanerDeleteRetentionMs"`
	// The maximum amount of time message will
	// remain uncompacted. Only applicable for logs that are being compacted
	LogCleanerMaxCompactionLagMs pulumi.StringPtrInput `pulumi:"logCleanerMaxCompactionLagMs"`
	// Controls log compactor frequency. Larger
	// value means more frequent compactions but also more space wasted for logs. Consider setting
	// log.cleaner.max.compaction.lag.ms to enforce compactions sooner, instead of setting a very
	// high value for this option.
	LogCleanerMinCleanableRatio pulumi.StringPtrInput `pulumi:"logCleanerMinCleanableRatio"`
	// The minimum time a message will remain
	// uncompacted in the log. Only applicable for logs that are being compacted.
	LogCleanerMinCompactionLagMs pulumi.StringPtrInput `pulumi:"logCleanerMinCompactionLagMs"`
	// The default cleanup policy for segments beyond the retention window.
	LogCleanupPolicy pulumi.StringPtrInput `pulumi:"logCleanupPolicy"`
	// The number of messages accumulated on a log partition
	// before messages are flushed to disk.
	LogFlushIntervalMessages pulumi.StringPtrInput `pulumi:"logFlushIntervalMessages"`
	// The maximum time in ms that a message in any topic is kept
	// in memory before flushed to disk. If not set, the value in log.flush.scheduler.interval.ms is used.
	LogFlushIntervalMs pulumi.StringPtrInput `pulumi:"logFlushIntervalMs"`
	// The interval with which Kafka adds an entry to the offset index.
	LogIndexIntervalBytes pulumi.StringPtrInput `pulumi:"logIndexIntervalBytes"`
	// The maximum size in bytes of the offset index.
	LogIndexSizeMaxBytes pulumi.StringPtrInput `pulumi:"logIndexSizeMaxBytes"`
	// This configuration controls whether down-conversion
	// of message formats is enabled to satisfy consume requests.
	LogMessageDownconversionEnable pulumi.StringPtrInput `pulumi:"logMessageDownconversionEnable"`
	// The maximum difference allowed between
	// the timestamp when a broker receives a message and the timestamp specified in the message
	LogMessageTimestampDifferenceMaxMs pulumi.StringPtrInput `pulumi:"logMessageTimestampDifferenceMaxMs"`
	// Define whether the timestamp in the message is
	// message create time or log append time.
	LogMessageTimestampType pulumi.StringPtrInput `pulumi:"logMessageTimestampType"`
	// Should pre allocate file when create new segment?
	LogPreallocate pulumi.StringPtrInput `pulumi:"logPreallocate"`
	// The maximum size of the log before deleting messages
	LogRetentionBytes pulumi.StringPtrInput `pulumi:"logRetentionBytes"`
	// The number of hours to keep a log file before deleting it.
	LogRetentionHours pulumi.StringPtrInput `pulumi:"logRetentionHours"`
	// The number of milliseconds to keep a log file before deleting it
	// (in milliseconds), If not set, the value in log.retention.minutes is used. If set to -1, no
	// time limit is applied.
	LogRetentionMs pulumi.StringPtrInput `pulumi:"logRetentionMs"`
	// The maximum jitter to subtract from logRollTimeMillis
	// (in milliseconds). If not set, the value in log.roll.jitter.hours is used.
	LogRollJitterMs pulumi.StringPtrInput `pulumi:"logRollJitterMs"`
	// The maximum time before a new log segment is rolled out (in milliseconds).
	LogRollMs pulumi.StringPtrInput `pulumi:"logRollMs"`
	// The maximum size of a single log file
	LogSegmentBytes pulumi.StringPtrInput `pulumi:"logSegmentBytes"`
	// The amount of time to wait before deleting a file
	// from the filesystem.
	LogSegmentDeleteDelayMs pulumi.StringPtrInput `pulumi:"logSegmentDeleteDelayMs"`
	// The maximum number of connections allowed from each ip
	// address (defaults to 2147483647).
	MaxConnectionsPerIp pulumi.StringPtrInput `pulumi:"maxConnectionsPerIp"`
	// The maximum number of incremental fetch
	// sessions that the broker will maintain.
	MaxIncrementalFetchSessionCacheSlots pulumi.StringPtrInput `pulumi:"maxIncrementalFetchSessionCacheSlots"`
	// The maximum size of message that the server can receive.
	MessageMaxBytes pulumi.StringPtrInput `pulumi:"messageMaxBytes"`
	// When a producer sets acks to 'all' (or '-1'),
	// min.insync.replicas specifies the minimum number of replicas that must acknowledge a write for
	// the write to be considered successful.
	MinInsyncReplicas pulumi.StringPtrInput `pulumi:"minInsyncReplicas"`
	// Number of partitions for autocreated topics
	NumPartitions pulumi.StringPtrInput `pulumi:"numPartitions"`
	// Log retention window in minutes for offsets topic.
	OffsetsRetentionMinutes pulumi.StringPtrInput `pulumi:"offsetsRetentionMinutes"`
	// The purge interval (in number of
	// requests) of the producer request purgatory(defaults to 1000).
	ProducerPurgatoryPurgeIntervalRequests pulumi.StringPtrInput `pulumi:"producerPurgatoryPurgeIntervalRequests"`
	// The number of bytes of messages to attempt to fetch
	// for each partition (defaults to 1048576). This is not an absolute maximum, if the first record
	// batch in the first non-empty partition of the fetch is larger than this value, the record batch
	// will still be returned to ensure that progress can be made.
	ReplicaFetchMaxBytes pulumi.StringPtrInput `pulumi:"replicaFetchMaxBytes"`
	// Maximum bytes expected for the entire fetch
	// response (defaults to 10485760). Records are fetched in batches, and if the first record batch
	// in the first non-empty partition of the fetch is larger than this value, the record batch will
	// still be returned to ensure that progress can be made. As such, this is not an absolute maximum.
	ReplicaFetchResponseMaxBytes pulumi.StringPtrInput `pulumi:"replicaFetchResponseMaxBytes"`
	// The maximum number of bytes in a socket request
	// (defaults to 104857600).
	SocketRequestMaxBytes pulumi.StringPtrInput `pulumi:"socketRequestMaxBytes"`
	// The interval at which
	// to remove transactions that have expired due to transactional.id.expiration.ms passing (defaults
	// to 3600000 (1 hour)).
	TransactionRemoveExpiredTransactionCleanupIntervalMs pulumi.StringPtrInput `pulumi:"transactionRemoveExpiredTransactionCleanupIntervalMs"`
	// The transaction topic segment bytes should
	// be kept relatively small in order to facilitate faster log compaction and cache loads (defaults
	// to 104857600 (100 mebibytes)).
	TransactionStateLogSegmentBytes pulumi.StringPtrInput `pulumi:"transactionStateLogSegmentBytes"`
}

func (KafkaKafkaUserConfigKafkaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaKafkaUserConfigKafka)(nil)).Elem()
}

func (i KafkaKafkaUserConfigKafkaArgs) ToKafkaKafkaUserConfigKafkaOutput() KafkaKafkaUserConfigKafkaOutput {
	return i.ToKafkaKafkaUserConfigKafkaOutputWithContext(context.Background())
}

func (i KafkaKafkaUserConfigKafkaArgs) ToKafkaKafkaUserConfigKafkaOutputWithContext(ctx context.Context) KafkaKafkaUserConfigKafkaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigKafkaOutput)
}

func (i KafkaKafkaUserConfigKafkaArgs) ToKafkaKafkaUserConfigKafkaPtrOutput() KafkaKafkaUserConfigKafkaPtrOutput {
	return i.ToKafkaKafkaUserConfigKafkaPtrOutputWithContext(context.Background())
}

func (i KafkaKafkaUserConfigKafkaArgs) ToKafkaKafkaUserConfigKafkaPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigKafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigKafkaOutput).ToKafkaKafkaUserConfigKafkaPtrOutputWithContext(ctx)
}

// KafkaKafkaUserConfigKafkaPtrInput is an input type that accepts KafkaKafkaUserConfigKafkaArgs, KafkaKafkaUserConfigKafkaPtr and KafkaKafkaUserConfigKafkaPtrOutput values.
// You can construct a concrete instance of `KafkaKafkaUserConfigKafkaPtrInput` via:
//
//          KafkaKafkaUserConfigKafkaArgs{...}
//
//  or:
//
//          nil
type KafkaKafkaUserConfigKafkaPtrInput interface {
	pulumi.Input

	ToKafkaKafkaUserConfigKafkaPtrOutput() KafkaKafkaUserConfigKafkaPtrOutput
	ToKafkaKafkaUserConfigKafkaPtrOutputWithContext(context.Context) KafkaKafkaUserConfigKafkaPtrOutput
}

type kafkaKafkaUserConfigKafkaPtrType KafkaKafkaUserConfigKafkaArgs

func KafkaKafkaUserConfigKafkaPtr(v *KafkaKafkaUserConfigKafkaArgs) KafkaKafkaUserConfigKafkaPtrInput {
	return (*kafkaKafkaUserConfigKafkaPtrType)(v)
}

func (*kafkaKafkaUserConfigKafkaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaKafkaUserConfigKafka)(nil)).Elem()
}

func (i *kafkaKafkaUserConfigKafkaPtrType) ToKafkaKafkaUserConfigKafkaPtrOutput() KafkaKafkaUserConfigKafkaPtrOutput {
	return i.ToKafkaKafkaUserConfigKafkaPtrOutputWithContext(context.Background())
}

func (i *kafkaKafkaUserConfigKafkaPtrType) ToKafkaKafkaUserConfigKafkaPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigKafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigKafkaPtrOutput)
}

type KafkaKafkaUserConfigKafkaOutput struct{ *pulumi.OutputState }

func (KafkaKafkaUserConfigKafkaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaKafkaUserConfigKafka)(nil)).Elem()
}

func (o KafkaKafkaUserConfigKafkaOutput) ToKafkaKafkaUserConfigKafkaOutput() KafkaKafkaUserConfigKafkaOutput {
	return o
}

func (o KafkaKafkaUserConfigKafkaOutput) ToKafkaKafkaUserConfigKafkaOutputWithContext(ctx context.Context) KafkaKafkaUserConfigKafkaOutput {
	return o
}

func (o KafkaKafkaUserConfigKafkaOutput) ToKafkaKafkaUserConfigKafkaPtrOutput() KafkaKafkaUserConfigKafkaPtrOutput {
	return o.ToKafkaKafkaUserConfigKafkaPtrOutputWithContext(context.Background())
}

func (o KafkaKafkaUserConfigKafkaOutput) ToKafkaKafkaUserConfigKafkaPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigKafkaPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *KafkaKafkaUserConfigKafka {
		return &v
	}).(KafkaKafkaUserConfigKafkaPtrOutput)
}

// Enable auto creation of topics
func (o KafkaKafkaUserConfigKafkaOutput) AutoCreateTopicsEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.AutoCreateTopicsEnable }).(pulumi.StringPtrOutput)
}

// Specify the final compression type for a given topic. This
// configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd').
// It additionally accepts 'uncompressed' which is equivalent to no compression; and 'producer'
// which means retain the original compression codec set by the producer.
func (o KafkaKafkaUserConfigKafkaOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.CompressionType }).(pulumi.StringPtrOutput)
}

// Idle connections timeout: the server socket processor
// threads close the connections that idle for longer than this.
func (o KafkaKafkaUserConfigKafkaOutput) ConnectionsMaxIdleMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.ConnectionsMaxIdleMs }).(pulumi.StringPtrOutput)
}

// Replication factor for autocreated topics
func (o KafkaKafkaUserConfigKafkaOutput) DefaultReplicationFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.DefaultReplicationFactor }).(pulumi.StringPtrOutput)
}

// The amount of time, in milliseconds, the group
// coordinator will wait for more consumers to join a new group before performing the first rebalance.
// A longer delay means potentially fewer rebalances, but increases the time until processing begins.
// The default value for this is 3 seconds. During development and testing it might be desirable to set
// this to 0 in order to not delay test execution time.
func (o KafkaKafkaUserConfigKafkaOutput) GroupInitialRebalanceDelayMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.GroupInitialRebalanceDelayMs }).(pulumi.StringPtrOutput)
}

// The maximum allowed session timeout for registered
// consumers. Longer timeouts give consumers more time to process messages in between heartbeats
// at the cost of a longer time to detect failures.
func (o KafkaKafkaUserConfigKafkaOutput) GroupMaxSessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.GroupMaxSessionTimeoutMs }).(pulumi.StringPtrOutput)
}

// The minimum allowed session timeout for registered
// consumers. Longer timeouts give consumers more time to process messages in between heartbeats
// at the cost of a longer time to detect failures.
func (o KafkaKafkaUserConfigKafkaOutput) GroupMinSessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.GroupMinSessionTimeoutMs }).(pulumi.StringPtrOutput)
}

func (o KafkaKafkaUserConfigKafkaOutput) LogCleanerDeleteRetentionMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.LogCleanerDeleteRetentionMs }).(pulumi.StringPtrOutput)
}

// The maximum amount of time message will
// remain uncompacted. Only applicable for logs that are being compacted
func (o KafkaKafkaUserConfigKafkaOutput) LogCleanerMaxCompactionLagMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.LogCleanerMaxCompactionLagMs }).(pulumi.StringPtrOutput)
}

// Controls log compactor frequency. Larger
// value means more frequent compactions but also more space wasted for logs. Consider setting
// log.cleaner.max.compaction.lag.ms to enforce compactions sooner, instead of setting a very
// high value for this option.
func (o KafkaKafkaUserConfigKafkaOutput) LogCleanerMinCleanableRatio() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.LogCleanerMinCleanableRatio }).(pulumi.StringPtrOutput)
}

// The minimum time a message will remain
// uncompacted in the log. Only applicable for logs that are being compacted.
func (o KafkaKafkaUserConfigKafkaOutput) LogCleanerMinCompactionLagMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.LogCleanerMinCompactionLagMs }).(pulumi.StringPtrOutput)
}

// The default cleanup policy for segments beyond the retention window.
func (o KafkaKafkaUserConfigKafkaOutput) LogCleanupPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.LogCleanupPolicy }).(pulumi.StringPtrOutput)
}

// The number of messages accumulated on a log partition
// before messages are flushed to disk.
func (o KafkaKafkaUserConfigKafkaOutput) LogFlushIntervalMessages() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.LogFlushIntervalMessages }).(pulumi.StringPtrOutput)
}

// The maximum time in ms that a message in any topic is kept
// in memory before flushed to disk. If not set, the value in log.flush.scheduler.interval.ms is used.
func (o KafkaKafkaUserConfigKafkaOutput) LogFlushIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.LogFlushIntervalMs }).(pulumi.StringPtrOutput)
}

// The interval with which Kafka adds an entry to the offset index.
func (o KafkaKafkaUserConfigKafkaOutput) LogIndexIntervalBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.LogIndexIntervalBytes }).(pulumi.StringPtrOutput)
}

// The maximum size in bytes of the offset index.
func (o KafkaKafkaUserConfigKafkaOutput) LogIndexSizeMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.LogIndexSizeMaxBytes }).(pulumi.StringPtrOutput)
}

// This configuration controls whether down-conversion
// of message formats is enabled to satisfy consume requests.
func (o KafkaKafkaUserConfigKafkaOutput) LogMessageDownconversionEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.LogMessageDownconversionEnable }).(pulumi.StringPtrOutput)
}

// The maximum difference allowed between
// the timestamp when a broker receives a message and the timestamp specified in the message
func (o KafkaKafkaUserConfigKafkaOutput) LogMessageTimestampDifferenceMaxMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.LogMessageTimestampDifferenceMaxMs }).(pulumi.StringPtrOutput)
}

// Define whether the timestamp in the message is
// message create time or log append time.
func (o KafkaKafkaUserConfigKafkaOutput) LogMessageTimestampType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.LogMessageTimestampType }).(pulumi.StringPtrOutput)
}

// Should pre allocate file when create new segment?
func (o KafkaKafkaUserConfigKafkaOutput) LogPreallocate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.LogPreallocate }).(pulumi.StringPtrOutput)
}

// The maximum size of the log before deleting messages
func (o KafkaKafkaUserConfigKafkaOutput) LogRetentionBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.LogRetentionBytes }).(pulumi.StringPtrOutput)
}

// The number of hours to keep a log file before deleting it.
func (o KafkaKafkaUserConfigKafkaOutput) LogRetentionHours() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.LogRetentionHours }).(pulumi.StringPtrOutput)
}

// The number of milliseconds to keep a log file before deleting it
// (in milliseconds), If not set, the value in log.retention.minutes is used. If set to -1, no
// time limit is applied.
func (o KafkaKafkaUserConfigKafkaOutput) LogRetentionMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.LogRetentionMs }).(pulumi.StringPtrOutput)
}

// The maximum jitter to subtract from logRollTimeMillis
// (in milliseconds). If not set, the value in log.roll.jitter.hours is used.
func (o KafkaKafkaUserConfigKafkaOutput) LogRollJitterMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.LogRollJitterMs }).(pulumi.StringPtrOutput)
}

// The maximum time before a new log segment is rolled out (in milliseconds).
func (o KafkaKafkaUserConfigKafkaOutput) LogRollMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.LogRollMs }).(pulumi.StringPtrOutput)
}

// The maximum size of a single log file
func (o KafkaKafkaUserConfigKafkaOutput) LogSegmentBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.LogSegmentBytes }).(pulumi.StringPtrOutput)
}

// The amount of time to wait before deleting a file
// from the filesystem.
func (o KafkaKafkaUserConfigKafkaOutput) LogSegmentDeleteDelayMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.LogSegmentDeleteDelayMs }).(pulumi.StringPtrOutput)
}

// The maximum number of connections allowed from each ip
// address (defaults to 2147483647).
func (o KafkaKafkaUserConfigKafkaOutput) MaxConnectionsPerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.MaxConnectionsPerIp }).(pulumi.StringPtrOutput)
}

// The maximum number of incremental fetch
// sessions that the broker will maintain.
func (o KafkaKafkaUserConfigKafkaOutput) MaxIncrementalFetchSessionCacheSlots() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.MaxIncrementalFetchSessionCacheSlots }).(pulumi.StringPtrOutput)
}

// The maximum size of message that the server can receive.
func (o KafkaKafkaUserConfigKafkaOutput) MessageMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.MessageMaxBytes }).(pulumi.StringPtrOutput)
}

// When a producer sets acks to 'all' (or '-1'),
// min.insync.replicas specifies the minimum number of replicas that must acknowledge a write for
// the write to be considered successful.
func (o KafkaKafkaUserConfigKafkaOutput) MinInsyncReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.MinInsyncReplicas }).(pulumi.StringPtrOutput)
}

// Number of partitions for autocreated topics
func (o KafkaKafkaUserConfigKafkaOutput) NumPartitions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.NumPartitions }).(pulumi.StringPtrOutput)
}

// Log retention window in minutes for offsets topic.
func (o KafkaKafkaUserConfigKafkaOutput) OffsetsRetentionMinutes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.OffsetsRetentionMinutes }).(pulumi.StringPtrOutput)
}

// The purge interval (in number of
// requests) of the producer request purgatory(defaults to 1000).
func (o KafkaKafkaUserConfigKafkaOutput) ProducerPurgatoryPurgeIntervalRequests() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.ProducerPurgatoryPurgeIntervalRequests }).(pulumi.StringPtrOutput)
}

// The number of bytes of messages to attempt to fetch
// for each partition (defaults to 1048576). This is not an absolute maximum, if the first record
// batch in the first non-empty partition of the fetch is larger than this value, the record batch
// will still be returned to ensure that progress can be made.
func (o KafkaKafkaUserConfigKafkaOutput) ReplicaFetchMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.ReplicaFetchMaxBytes }).(pulumi.StringPtrOutput)
}

// Maximum bytes expected for the entire fetch
// response (defaults to 10485760). Records are fetched in batches, and if the first record batch
// in the first non-empty partition of the fetch is larger than this value, the record batch will
// still be returned to ensure that progress can be made. As such, this is not an absolute maximum.
func (o KafkaKafkaUserConfigKafkaOutput) ReplicaFetchResponseMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.ReplicaFetchResponseMaxBytes }).(pulumi.StringPtrOutput)
}

// The maximum number of bytes in a socket request
// (defaults to 104857600).
func (o KafkaKafkaUserConfigKafkaOutput) SocketRequestMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.SocketRequestMaxBytes }).(pulumi.StringPtrOutput)
}

// The interval at which
// to remove transactions that have expired due to transactional.id.expiration.ms passing (defaults
// to 3600000 (1 hour)).
func (o KafkaKafkaUserConfigKafkaOutput) TransactionRemoveExpiredTransactionCleanupIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string {
		return v.TransactionRemoveExpiredTransactionCleanupIntervalMs
	}).(pulumi.StringPtrOutput)
}

// The transaction topic segment bytes should
// be kept relatively small in order to facilitate faster log compaction and cache loads (defaults
// to 104857600 (100 mebibytes)).
func (o KafkaKafkaUserConfigKafkaOutput) TransactionStateLogSegmentBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafka) *string { return v.TransactionStateLogSegmentBytes }).(pulumi.StringPtrOutput)
}

type KafkaKafkaUserConfigKafkaPtrOutput struct{ *pulumi.OutputState }

func (KafkaKafkaUserConfigKafkaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaKafkaUserConfigKafka)(nil)).Elem()
}

func (o KafkaKafkaUserConfigKafkaPtrOutput) ToKafkaKafkaUserConfigKafkaPtrOutput() KafkaKafkaUserConfigKafkaPtrOutput {
	return o
}

func (o KafkaKafkaUserConfigKafkaPtrOutput) ToKafkaKafkaUserConfigKafkaPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigKafkaPtrOutput {
	return o
}

func (o KafkaKafkaUserConfigKafkaPtrOutput) Elem() KafkaKafkaUserConfigKafkaOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) KafkaKafkaUserConfigKafka { return *v }).(KafkaKafkaUserConfigKafkaOutput)
}

// Enable auto creation of topics
func (o KafkaKafkaUserConfigKafkaPtrOutput) AutoCreateTopicsEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.AutoCreateTopicsEnable
	}).(pulumi.StringPtrOutput)
}

// Specify the final compression type for a given topic. This
// configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd').
// It additionally accepts 'uncompressed' which is equivalent to no compression; and 'producer'
// which means retain the original compression codec set by the producer.
func (o KafkaKafkaUserConfigKafkaPtrOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.CompressionType
	}).(pulumi.StringPtrOutput)
}

// Idle connections timeout: the server socket processor
// threads close the connections that idle for longer than this.
func (o KafkaKafkaUserConfigKafkaPtrOutput) ConnectionsMaxIdleMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionsMaxIdleMs
	}).(pulumi.StringPtrOutput)
}

// Replication factor for autocreated topics
func (o KafkaKafkaUserConfigKafkaPtrOutput) DefaultReplicationFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.DefaultReplicationFactor
	}).(pulumi.StringPtrOutput)
}

// The amount of time, in milliseconds, the group
// coordinator will wait for more consumers to join a new group before performing the first rebalance.
// A longer delay means potentially fewer rebalances, but increases the time until processing begins.
// The default value for this is 3 seconds. During development and testing it might be desirable to set
// this to 0 in order to not delay test execution time.
func (o KafkaKafkaUserConfigKafkaPtrOutput) GroupInitialRebalanceDelayMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.GroupInitialRebalanceDelayMs
	}).(pulumi.StringPtrOutput)
}

// The maximum allowed session timeout for registered
// consumers. Longer timeouts give consumers more time to process messages in between heartbeats
// at the cost of a longer time to detect failures.
func (o KafkaKafkaUserConfigKafkaPtrOutput) GroupMaxSessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.GroupMaxSessionTimeoutMs
	}).(pulumi.StringPtrOutput)
}

// The minimum allowed session timeout for registered
// consumers. Longer timeouts give consumers more time to process messages in between heartbeats
// at the cost of a longer time to detect failures.
func (o KafkaKafkaUserConfigKafkaPtrOutput) GroupMinSessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.GroupMinSessionTimeoutMs
	}).(pulumi.StringPtrOutput)
}

func (o KafkaKafkaUserConfigKafkaPtrOutput) LogCleanerDeleteRetentionMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogCleanerDeleteRetentionMs
	}).(pulumi.StringPtrOutput)
}

// The maximum amount of time message will
// remain uncompacted. Only applicable for logs that are being compacted
func (o KafkaKafkaUserConfigKafkaPtrOutput) LogCleanerMaxCompactionLagMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogCleanerMaxCompactionLagMs
	}).(pulumi.StringPtrOutput)
}

// Controls log compactor frequency. Larger
// value means more frequent compactions but also more space wasted for logs. Consider setting
// log.cleaner.max.compaction.lag.ms to enforce compactions sooner, instead of setting a very
// high value for this option.
func (o KafkaKafkaUserConfigKafkaPtrOutput) LogCleanerMinCleanableRatio() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogCleanerMinCleanableRatio
	}).(pulumi.StringPtrOutput)
}

// The minimum time a message will remain
// uncompacted in the log. Only applicable for logs that are being compacted.
func (o KafkaKafkaUserConfigKafkaPtrOutput) LogCleanerMinCompactionLagMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogCleanerMinCompactionLagMs
	}).(pulumi.StringPtrOutput)
}

// The default cleanup policy for segments beyond the retention window.
func (o KafkaKafkaUserConfigKafkaPtrOutput) LogCleanupPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogCleanupPolicy
	}).(pulumi.StringPtrOutput)
}

// The number of messages accumulated on a log partition
// before messages are flushed to disk.
func (o KafkaKafkaUserConfigKafkaPtrOutput) LogFlushIntervalMessages() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogFlushIntervalMessages
	}).(pulumi.StringPtrOutput)
}

// The maximum time in ms that a message in any topic is kept
// in memory before flushed to disk. If not set, the value in log.flush.scheduler.interval.ms is used.
func (o KafkaKafkaUserConfigKafkaPtrOutput) LogFlushIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogFlushIntervalMs
	}).(pulumi.StringPtrOutput)
}

// The interval with which Kafka adds an entry to the offset index.
func (o KafkaKafkaUserConfigKafkaPtrOutput) LogIndexIntervalBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogIndexIntervalBytes
	}).(pulumi.StringPtrOutput)
}

// The maximum size in bytes of the offset index.
func (o KafkaKafkaUserConfigKafkaPtrOutput) LogIndexSizeMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogIndexSizeMaxBytes
	}).(pulumi.StringPtrOutput)
}

// This configuration controls whether down-conversion
// of message formats is enabled to satisfy consume requests.
func (o KafkaKafkaUserConfigKafkaPtrOutput) LogMessageDownconversionEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogMessageDownconversionEnable
	}).(pulumi.StringPtrOutput)
}

// The maximum difference allowed between
// the timestamp when a broker receives a message and the timestamp specified in the message
func (o KafkaKafkaUserConfigKafkaPtrOutput) LogMessageTimestampDifferenceMaxMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogMessageTimestampDifferenceMaxMs
	}).(pulumi.StringPtrOutput)
}

// Define whether the timestamp in the message is
// message create time or log append time.
func (o KafkaKafkaUserConfigKafkaPtrOutput) LogMessageTimestampType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogMessageTimestampType
	}).(pulumi.StringPtrOutput)
}

// Should pre allocate file when create new segment?
func (o KafkaKafkaUserConfigKafkaPtrOutput) LogPreallocate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogPreallocate
	}).(pulumi.StringPtrOutput)
}

// The maximum size of the log before deleting messages
func (o KafkaKafkaUserConfigKafkaPtrOutput) LogRetentionBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogRetentionBytes
	}).(pulumi.StringPtrOutput)
}

// The number of hours to keep a log file before deleting it.
func (o KafkaKafkaUserConfigKafkaPtrOutput) LogRetentionHours() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogRetentionHours
	}).(pulumi.StringPtrOutput)
}

// The number of milliseconds to keep a log file before deleting it
// (in milliseconds), If not set, the value in log.retention.minutes is used. If set to -1, no
// time limit is applied.
func (o KafkaKafkaUserConfigKafkaPtrOutput) LogRetentionMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogRetentionMs
	}).(pulumi.StringPtrOutput)
}

// The maximum jitter to subtract from logRollTimeMillis
// (in milliseconds). If not set, the value in log.roll.jitter.hours is used.
func (o KafkaKafkaUserConfigKafkaPtrOutput) LogRollJitterMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogRollJitterMs
	}).(pulumi.StringPtrOutput)
}

// The maximum time before a new log segment is rolled out (in milliseconds).
func (o KafkaKafkaUserConfigKafkaPtrOutput) LogRollMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogRollMs
	}).(pulumi.StringPtrOutput)
}

// The maximum size of a single log file
func (o KafkaKafkaUserConfigKafkaPtrOutput) LogSegmentBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogSegmentBytes
	}).(pulumi.StringPtrOutput)
}

// The amount of time to wait before deleting a file
// from the filesystem.
func (o KafkaKafkaUserConfigKafkaPtrOutput) LogSegmentDeleteDelayMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogSegmentDeleteDelayMs
	}).(pulumi.StringPtrOutput)
}

// The maximum number of connections allowed from each ip
// address (defaults to 2147483647).
func (o KafkaKafkaUserConfigKafkaPtrOutput) MaxConnectionsPerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.MaxConnectionsPerIp
	}).(pulumi.StringPtrOutput)
}

// The maximum number of incremental fetch
// sessions that the broker will maintain.
func (o KafkaKafkaUserConfigKafkaPtrOutput) MaxIncrementalFetchSessionCacheSlots() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.MaxIncrementalFetchSessionCacheSlots
	}).(pulumi.StringPtrOutput)
}

// The maximum size of message that the server can receive.
func (o KafkaKafkaUserConfigKafkaPtrOutput) MessageMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.MessageMaxBytes
	}).(pulumi.StringPtrOutput)
}

// When a producer sets acks to 'all' (or '-1'),
// min.insync.replicas specifies the minimum number of replicas that must acknowledge a write for
// the write to be considered successful.
func (o KafkaKafkaUserConfigKafkaPtrOutput) MinInsyncReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.MinInsyncReplicas
	}).(pulumi.StringPtrOutput)
}

// Number of partitions for autocreated topics
func (o KafkaKafkaUserConfigKafkaPtrOutput) NumPartitions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.NumPartitions
	}).(pulumi.StringPtrOutput)
}

// Log retention window in minutes for offsets topic.
func (o KafkaKafkaUserConfigKafkaPtrOutput) OffsetsRetentionMinutes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.OffsetsRetentionMinutes
	}).(pulumi.StringPtrOutput)
}

// The purge interval (in number of
// requests) of the producer request purgatory(defaults to 1000).
func (o KafkaKafkaUserConfigKafkaPtrOutput) ProducerPurgatoryPurgeIntervalRequests() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.ProducerPurgatoryPurgeIntervalRequests
	}).(pulumi.StringPtrOutput)
}

// The number of bytes of messages to attempt to fetch
// for each partition (defaults to 1048576). This is not an absolute maximum, if the first record
// batch in the first non-empty partition of the fetch is larger than this value, the record batch
// will still be returned to ensure that progress can be made.
func (o KafkaKafkaUserConfigKafkaPtrOutput) ReplicaFetchMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.ReplicaFetchMaxBytes
	}).(pulumi.StringPtrOutput)
}

// Maximum bytes expected for the entire fetch
// response (defaults to 10485760). Records are fetched in batches, and if the first record batch
// in the first non-empty partition of the fetch is larger than this value, the record batch will
// still be returned to ensure that progress can be made. As such, this is not an absolute maximum.
func (o KafkaKafkaUserConfigKafkaPtrOutput) ReplicaFetchResponseMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.ReplicaFetchResponseMaxBytes
	}).(pulumi.StringPtrOutput)
}

// The maximum number of bytes in a socket request
// (defaults to 104857600).
func (o KafkaKafkaUserConfigKafkaPtrOutput) SocketRequestMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.SocketRequestMaxBytes
	}).(pulumi.StringPtrOutput)
}

// The interval at which
// to remove transactions that have expired due to transactional.id.expiration.ms passing (defaults
// to 3600000 (1 hour)).
func (o KafkaKafkaUserConfigKafkaPtrOutput) TransactionRemoveExpiredTransactionCleanupIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.TransactionRemoveExpiredTransactionCleanupIntervalMs
	}).(pulumi.StringPtrOutput)
}

// The transaction topic segment bytes should
// be kept relatively small in order to facilitate faster log compaction and cache loads (defaults
// to 104857600 (100 mebibytes)).
func (o KafkaKafkaUserConfigKafkaPtrOutput) TransactionStateLogSegmentBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.TransactionStateLogSegmentBytes
	}).(pulumi.StringPtrOutput)
}

type KafkaKafkaUserConfigKafkaAuthenticationMethods struct {
	// Enable certificate/SSL authentication
	Certificate *string `pulumi:"certificate"`
	// Enable SASL authentication
	Sasl *string `pulumi:"sasl"`
}

// KafkaKafkaUserConfigKafkaAuthenticationMethodsInput is an input type that accepts KafkaKafkaUserConfigKafkaAuthenticationMethodsArgs and KafkaKafkaUserConfigKafkaAuthenticationMethodsOutput values.
// You can construct a concrete instance of `KafkaKafkaUserConfigKafkaAuthenticationMethodsInput` via:
//
//          KafkaKafkaUserConfigKafkaAuthenticationMethodsArgs{...}
type KafkaKafkaUserConfigKafkaAuthenticationMethodsInput interface {
	pulumi.Input

	ToKafkaKafkaUserConfigKafkaAuthenticationMethodsOutput() KafkaKafkaUserConfigKafkaAuthenticationMethodsOutput
	ToKafkaKafkaUserConfigKafkaAuthenticationMethodsOutputWithContext(context.Context) KafkaKafkaUserConfigKafkaAuthenticationMethodsOutput
}

type KafkaKafkaUserConfigKafkaAuthenticationMethodsArgs struct {
	// Enable certificate/SSL authentication
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// Enable SASL authentication
	Sasl pulumi.StringPtrInput `pulumi:"sasl"`
}

func (KafkaKafkaUserConfigKafkaAuthenticationMethodsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaKafkaUserConfigKafkaAuthenticationMethods)(nil)).Elem()
}

func (i KafkaKafkaUserConfigKafkaAuthenticationMethodsArgs) ToKafkaKafkaUserConfigKafkaAuthenticationMethodsOutput() KafkaKafkaUserConfigKafkaAuthenticationMethodsOutput {
	return i.ToKafkaKafkaUserConfigKafkaAuthenticationMethodsOutputWithContext(context.Background())
}

func (i KafkaKafkaUserConfigKafkaAuthenticationMethodsArgs) ToKafkaKafkaUserConfigKafkaAuthenticationMethodsOutputWithContext(ctx context.Context) KafkaKafkaUserConfigKafkaAuthenticationMethodsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigKafkaAuthenticationMethodsOutput)
}

func (i KafkaKafkaUserConfigKafkaAuthenticationMethodsArgs) ToKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput() KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return i.ToKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(context.Background())
}

func (i KafkaKafkaUserConfigKafkaAuthenticationMethodsArgs) ToKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigKafkaAuthenticationMethodsOutput).ToKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(ctx)
}

// KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrInput is an input type that accepts KafkaKafkaUserConfigKafkaAuthenticationMethodsArgs, KafkaKafkaUserConfigKafkaAuthenticationMethodsPtr and KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput values.
// You can construct a concrete instance of `KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrInput` via:
//
//          KafkaKafkaUserConfigKafkaAuthenticationMethodsArgs{...}
//
//  or:
//
//          nil
type KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrInput interface {
	pulumi.Input

	ToKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput() KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput
	ToKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(context.Context) KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput
}

type kafkaKafkaUserConfigKafkaAuthenticationMethodsPtrType KafkaKafkaUserConfigKafkaAuthenticationMethodsArgs

func KafkaKafkaUserConfigKafkaAuthenticationMethodsPtr(v *KafkaKafkaUserConfigKafkaAuthenticationMethodsArgs) KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrInput {
	return (*kafkaKafkaUserConfigKafkaAuthenticationMethodsPtrType)(v)
}

func (*kafkaKafkaUserConfigKafkaAuthenticationMethodsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaKafkaUserConfigKafkaAuthenticationMethods)(nil)).Elem()
}

func (i *kafkaKafkaUserConfigKafkaAuthenticationMethodsPtrType) ToKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput() KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return i.ToKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(context.Background())
}

func (i *kafkaKafkaUserConfigKafkaAuthenticationMethodsPtrType) ToKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput)
}

type KafkaKafkaUserConfigKafkaAuthenticationMethodsOutput struct{ *pulumi.OutputState }

func (KafkaKafkaUserConfigKafkaAuthenticationMethodsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaKafkaUserConfigKafkaAuthenticationMethods)(nil)).Elem()
}

func (o KafkaKafkaUserConfigKafkaAuthenticationMethodsOutput) ToKafkaKafkaUserConfigKafkaAuthenticationMethodsOutput() KafkaKafkaUserConfigKafkaAuthenticationMethodsOutput {
	return o
}

func (o KafkaKafkaUserConfigKafkaAuthenticationMethodsOutput) ToKafkaKafkaUserConfigKafkaAuthenticationMethodsOutputWithContext(ctx context.Context) KafkaKafkaUserConfigKafkaAuthenticationMethodsOutput {
	return o
}

func (o KafkaKafkaUserConfigKafkaAuthenticationMethodsOutput) ToKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput() KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return o.ToKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(context.Background())
}

func (o KafkaKafkaUserConfigKafkaAuthenticationMethodsOutput) ToKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafkaAuthenticationMethods) *KafkaKafkaUserConfigKafkaAuthenticationMethods {
		return &v
	}).(KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput)
}

// Enable certificate/SSL authentication
func (o KafkaKafkaUserConfigKafkaAuthenticationMethodsOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafkaAuthenticationMethods) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// Enable SASL authentication
func (o KafkaKafkaUserConfigKafkaAuthenticationMethodsOutput) Sasl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafkaAuthenticationMethods) *string { return v.Sasl }).(pulumi.StringPtrOutput)
}

type KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput struct{ *pulumi.OutputState }

func (KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaKafkaUserConfigKafkaAuthenticationMethods)(nil)).Elem()
}

func (o KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput) ToKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput() KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return o
}

func (o KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput) ToKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return o
}

func (o KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput) Elem() KafkaKafkaUserConfigKafkaAuthenticationMethodsOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafkaAuthenticationMethods) KafkaKafkaUserConfigKafkaAuthenticationMethods {
		return *v
	}).(KafkaKafkaUserConfigKafkaAuthenticationMethodsOutput)
}

// Enable certificate/SSL authentication
func (o KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafkaAuthenticationMethods) *string {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(pulumi.StringPtrOutput)
}

// Enable SASL authentication
func (o KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput) Sasl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafkaAuthenticationMethods) *string {
		if v == nil {
			return nil
		}
		return v.Sasl
	}).(pulumi.StringPtrOutput)
}

type KafkaKafkaUserConfigKafkaConnectConfig struct {
	// Defines what client configurations can
	// be overridden by the connector. Default is None
	ConnectorClientConfigOverridePolicy *string `pulumi:"connectorClientConfigOverridePolicy"`
	// What to do when there is no initial offset in Kafka or
	// if the current offset does not exist any more on the server. Default is earliest.
	ConsumerAutoOffsetReset *string `pulumi:"consumerAutoOffsetReset"`
	// Records are fetched in batches by the consumer, and
	// if the first record batch in the first non-empty partition of the fetch is larger than this value,
	// the record batch will still be returned to ensure that the consumer can make progress. As such,
	// this is not a absolute maximum.
	ConsumerFetchMaxBytes *string `pulumi:"consumerFetchMaxBytes"`
	// Transaction read isolation level. readUncommitted is
	// the default, but readCommitted can be used if consume-exactly-once behavior is desired.
	ConsumerIsolationLevel *string `pulumi:"consumerIsolationLevel"`
	// Records are fetched in batches by the consumer.If
	// the first record batch in the first non-empty partition of the fetch is larger than this limit,
	// the batch will still be returned to ensure that the consumer can make progress.
	ConsumerMaxPartitionFetchBytes *string `pulumi:"consumerMaxPartitionFetchBytes"`
	// The maximum delay in milliseconds between invocations
	// of poll() when using consumer group management (defaults to 300000).
	ConsumerMaxPollIntervalMs *string `pulumi:"consumerMaxPollIntervalMs"`
	// The maximum number of records returned in a single call
	// to poll() (defaults to 500).
	ConsumerMaxPollRecords *string `pulumi:"consumerMaxPollRecords"`
	// The interval at which to try committing offsets for
	// tasks (defaults to 60000).
	OffsetFlushIntervalMs *string `pulumi:"offsetFlushIntervalMs"`
	// Maximum number of milliseconds to wait for records to
	// flush and partition offset data to be committed to offset storage before cancelling the process
	// and restoring the offset data to be committed in a future attempt (defaults to 5000).
	OffsetFlushTimeoutMs *string `pulumi:"offsetFlushTimeoutMs"`
	// This setting will limit the number of record batches
	// the producer will send in a single request to avoid sending huge requests.
	ProducerMaxRequestSize *string `pulumi:"producerMaxRequestSize"`
	// The timeout in milliseconds used to detect failures when
	// using Kafka’s group management facilities (defaults to 10000).
	SessionTimeoutMs *string `pulumi:"sessionTimeoutMs"`
}

// KafkaKafkaUserConfigKafkaConnectConfigInput is an input type that accepts KafkaKafkaUserConfigKafkaConnectConfigArgs and KafkaKafkaUserConfigKafkaConnectConfigOutput values.
// You can construct a concrete instance of `KafkaKafkaUserConfigKafkaConnectConfigInput` via:
//
//          KafkaKafkaUserConfigKafkaConnectConfigArgs{...}
type KafkaKafkaUserConfigKafkaConnectConfigInput interface {
	pulumi.Input

	ToKafkaKafkaUserConfigKafkaConnectConfigOutput() KafkaKafkaUserConfigKafkaConnectConfigOutput
	ToKafkaKafkaUserConfigKafkaConnectConfigOutputWithContext(context.Context) KafkaKafkaUserConfigKafkaConnectConfigOutput
}

type KafkaKafkaUserConfigKafkaConnectConfigArgs struct {
	// Defines what client configurations can
	// be overridden by the connector. Default is None
	ConnectorClientConfigOverridePolicy pulumi.StringPtrInput `pulumi:"connectorClientConfigOverridePolicy"`
	// What to do when there is no initial offset in Kafka or
	// if the current offset does not exist any more on the server. Default is earliest.
	ConsumerAutoOffsetReset pulumi.StringPtrInput `pulumi:"consumerAutoOffsetReset"`
	// Records are fetched in batches by the consumer, and
	// if the first record batch in the first non-empty partition of the fetch is larger than this value,
	// the record batch will still be returned to ensure that the consumer can make progress. As such,
	// this is not a absolute maximum.
	ConsumerFetchMaxBytes pulumi.StringPtrInput `pulumi:"consumerFetchMaxBytes"`
	// Transaction read isolation level. readUncommitted is
	// the default, but readCommitted can be used if consume-exactly-once behavior is desired.
	ConsumerIsolationLevel pulumi.StringPtrInput `pulumi:"consumerIsolationLevel"`
	// Records are fetched in batches by the consumer.If
	// the first record batch in the first non-empty partition of the fetch is larger than this limit,
	// the batch will still be returned to ensure that the consumer can make progress.
	ConsumerMaxPartitionFetchBytes pulumi.StringPtrInput `pulumi:"consumerMaxPartitionFetchBytes"`
	// The maximum delay in milliseconds between invocations
	// of poll() when using consumer group management (defaults to 300000).
	ConsumerMaxPollIntervalMs pulumi.StringPtrInput `pulumi:"consumerMaxPollIntervalMs"`
	// The maximum number of records returned in a single call
	// to poll() (defaults to 500).
	ConsumerMaxPollRecords pulumi.StringPtrInput `pulumi:"consumerMaxPollRecords"`
	// The interval at which to try committing offsets for
	// tasks (defaults to 60000).
	OffsetFlushIntervalMs pulumi.StringPtrInput `pulumi:"offsetFlushIntervalMs"`
	// Maximum number of milliseconds to wait for records to
	// flush and partition offset data to be committed to offset storage before cancelling the process
	// and restoring the offset data to be committed in a future attempt (defaults to 5000).
	OffsetFlushTimeoutMs pulumi.StringPtrInput `pulumi:"offsetFlushTimeoutMs"`
	// This setting will limit the number of record batches
	// the producer will send in a single request to avoid sending huge requests.
	ProducerMaxRequestSize pulumi.StringPtrInput `pulumi:"producerMaxRequestSize"`
	// The timeout in milliseconds used to detect failures when
	// using Kafka’s group management facilities (defaults to 10000).
	SessionTimeoutMs pulumi.StringPtrInput `pulumi:"sessionTimeoutMs"`
}

func (KafkaKafkaUserConfigKafkaConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaKafkaUserConfigKafkaConnectConfig)(nil)).Elem()
}

func (i KafkaKafkaUserConfigKafkaConnectConfigArgs) ToKafkaKafkaUserConfigKafkaConnectConfigOutput() KafkaKafkaUserConfigKafkaConnectConfigOutput {
	return i.ToKafkaKafkaUserConfigKafkaConnectConfigOutputWithContext(context.Background())
}

func (i KafkaKafkaUserConfigKafkaConnectConfigArgs) ToKafkaKafkaUserConfigKafkaConnectConfigOutputWithContext(ctx context.Context) KafkaKafkaUserConfigKafkaConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigKafkaConnectConfigOutput)
}

func (i KafkaKafkaUserConfigKafkaConnectConfigArgs) ToKafkaKafkaUserConfigKafkaConnectConfigPtrOutput() KafkaKafkaUserConfigKafkaConnectConfigPtrOutput {
	return i.ToKafkaKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(context.Background())
}

func (i KafkaKafkaUserConfigKafkaConnectConfigArgs) ToKafkaKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigKafkaConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigKafkaConnectConfigOutput).ToKafkaKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(ctx)
}

// KafkaKafkaUserConfigKafkaConnectConfigPtrInput is an input type that accepts KafkaKafkaUserConfigKafkaConnectConfigArgs, KafkaKafkaUserConfigKafkaConnectConfigPtr and KafkaKafkaUserConfigKafkaConnectConfigPtrOutput values.
// You can construct a concrete instance of `KafkaKafkaUserConfigKafkaConnectConfigPtrInput` via:
//
//          KafkaKafkaUserConfigKafkaConnectConfigArgs{...}
//
//  or:
//
//          nil
type KafkaKafkaUserConfigKafkaConnectConfigPtrInput interface {
	pulumi.Input

	ToKafkaKafkaUserConfigKafkaConnectConfigPtrOutput() KafkaKafkaUserConfigKafkaConnectConfigPtrOutput
	ToKafkaKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(context.Context) KafkaKafkaUserConfigKafkaConnectConfigPtrOutput
}

type kafkaKafkaUserConfigKafkaConnectConfigPtrType KafkaKafkaUserConfigKafkaConnectConfigArgs

func KafkaKafkaUserConfigKafkaConnectConfigPtr(v *KafkaKafkaUserConfigKafkaConnectConfigArgs) KafkaKafkaUserConfigKafkaConnectConfigPtrInput {
	return (*kafkaKafkaUserConfigKafkaConnectConfigPtrType)(v)
}

func (*kafkaKafkaUserConfigKafkaConnectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaKafkaUserConfigKafkaConnectConfig)(nil)).Elem()
}

func (i *kafkaKafkaUserConfigKafkaConnectConfigPtrType) ToKafkaKafkaUserConfigKafkaConnectConfigPtrOutput() KafkaKafkaUserConfigKafkaConnectConfigPtrOutput {
	return i.ToKafkaKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(context.Background())
}

func (i *kafkaKafkaUserConfigKafkaConnectConfigPtrType) ToKafkaKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigKafkaConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigKafkaConnectConfigPtrOutput)
}

type KafkaKafkaUserConfigKafkaConnectConfigOutput struct{ *pulumi.OutputState }

func (KafkaKafkaUserConfigKafkaConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaKafkaUserConfigKafkaConnectConfig)(nil)).Elem()
}

func (o KafkaKafkaUserConfigKafkaConnectConfigOutput) ToKafkaKafkaUserConfigKafkaConnectConfigOutput() KafkaKafkaUserConfigKafkaConnectConfigOutput {
	return o
}

func (o KafkaKafkaUserConfigKafkaConnectConfigOutput) ToKafkaKafkaUserConfigKafkaConnectConfigOutputWithContext(ctx context.Context) KafkaKafkaUserConfigKafkaConnectConfigOutput {
	return o
}

func (o KafkaKafkaUserConfigKafkaConnectConfigOutput) ToKafkaKafkaUserConfigKafkaConnectConfigPtrOutput() KafkaKafkaUserConfigKafkaConnectConfigPtrOutput {
	return o.ToKafkaKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(context.Background())
}

func (o KafkaKafkaUserConfigKafkaConnectConfigOutput) ToKafkaKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigKafkaConnectConfigPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafkaConnectConfig) *KafkaKafkaUserConfigKafkaConnectConfig {
		return &v
	}).(KafkaKafkaUserConfigKafkaConnectConfigPtrOutput)
}

// Defines what client configurations can
// be overridden by the connector. Default is None
func (o KafkaKafkaUserConfigKafkaConnectConfigOutput) ConnectorClientConfigOverridePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafkaConnectConfig) *string { return v.ConnectorClientConfigOverridePolicy }).(pulumi.StringPtrOutput)
}

// What to do when there is no initial offset in Kafka or
// if the current offset does not exist any more on the server. Default is earliest.
func (o KafkaKafkaUserConfigKafkaConnectConfigOutput) ConsumerAutoOffsetReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafkaConnectConfig) *string { return v.ConsumerAutoOffsetReset }).(pulumi.StringPtrOutput)
}

// Records are fetched in batches by the consumer, and
// if the first record batch in the first non-empty partition of the fetch is larger than this value,
// the record batch will still be returned to ensure that the consumer can make progress. As such,
// this is not a absolute maximum.
func (o KafkaKafkaUserConfigKafkaConnectConfigOutput) ConsumerFetchMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafkaConnectConfig) *string { return v.ConsumerFetchMaxBytes }).(pulumi.StringPtrOutput)
}

// Transaction read isolation level. readUncommitted is
// the default, but readCommitted can be used if consume-exactly-once behavior is desired.
func (o KafkaKafkaUserConfigKafkaConnectConfigOutput) ConsumerIsolationLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafkaConnectConfig) *string { return v.ConsumerIsolationLevel }).(pulumi.StringPtrOutput)
}

// Records are fetched in batches by the consumer.If
// the first record batch in the first non-empty partition of the fetch is larger than this limit,
// the batch will still be returned to ensure that the consumer can make progress.
func (o KafkaKafkaUserConfigKafkaConnectConfigOutput) ConsumerMaxPartitionFetchBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafkaConnectConfig) *string { return v.ConsumerMaxPartitionFetchBytes }).(pulumi.StringPtrOutput)
}

// The maximum delay in milliseconds between invocations
// of poll() when using consumer group management (defaults to 300000).
func (o KafkaKafkaUserConfigKafkaConnectConfigOutput) ConsumerMaxPollIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafkaConnectConfig) *string { return v.ConsumerMaxPollIntervalMs }).(pulumi.StringPtrOutput)
}

// The maximum number of records returned in a single call
// to poll() (defaults to 500).
func (o KafkaKafkaUserConfigKafkaConnectConfigOutput) ConsumerMaxPollRecords() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafkaConnectConfig) *string { return v.ConsumerMaxPollRecords }).(pulumi.StringPtrOutput)
}

// The interval at which to try committing offsets for
// tasks (defaults to 60000).
func (o KafkaKafkaUserConfigKafkaConnectConfigOutput) OffsetFlushIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafkaConnectConfig) *string { return v.OffsetFlushIntervalMs }).(pulumi.StringPtrOutput)
}

// Maximum number of milliseconds to wait for records to
// flush and partition offset data to be committed to offset storage before cancelling the process
// and restoring the offset data to be committed in a future attempt (defaults to 5000).
func (o KafkaKafkaUserConfigKafkaConnectConfigOutput) OffsetFlushTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafkaConnectConfig) *string { return v.OffsetFlushTimeoutMs }).(pulumi.StringPtrOutput)
}

// This setting will limit the number of record batches
// the producer will send in a single request to avoid sending huge requests.
func (o KafkaKafkaUserConfigKafkaConnectConfigOutput) ProducerMaxRequestSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafkaConnectConfig) *string { return v.ProducerMaxRequestSize }).(pulumi.StringPtrOutput)
}

// The timeout in milliseconds used to detect failures when
// using Kafka’s group management facilities (defaults to 10000).
func (o KafkaKafkaUserConfigKafkaConnectConfigOutput) SessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafkaConnectConfig) *string { return v.SessionTimeoutMs }).(pulumi.StringPtrOutput)
}

type KafkaKafkaUserConfigKafkaConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (KafkaKafkaUserConfigKafkaConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaKafkaUserConfigKafkaConnectConfig)(nil)).Elem()
}

func (o KafkaKafkaUserConfigKafkaConnectConfigPtrOutput) ToKafkaKafkaUserConfigKafkaConnectConfigPtrOutput() KafkaKafkaUserConfigKafkaConnectConfigPtrOutput {
	return o
}

func (o KafkaKafkaUserConfigKafkaConnectConfigPtrOutput) ToKafkaKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigKafkaConnectConfigPtrOutput {
	return o
}

func (o KafkaKafkaUserConfigKafkaConnectConfigPtrOutput) Elem() KafkaKafkaUserConfigKafkaConnectConfigOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafkaConnectConfig) KafkaKafkaUserConfigKafkaConnectConfig { return *v }).(KafkaKafkaUserConfigKafkaConnectConfigOutput)
}

// Defines what client configurations can
// be overridden by the connector. Default is None
func (o KafkaKafkaUserConfigKafkaConnectConfigPtrOutput) ConnectorClientConfigOverridePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorClientConfigOverridePolicy
	}).(pulumi.StringPtrOutput)
}

// What to do when there is no initial offset in Kafka or
// if the current offset does not exist any more on the server. Default is earliest.
func (o KafkaKafkaUserConfigKafkaConnectConfigPtrOutput) ConsumerAutoOffsetReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerAutoOffsetReset
	}).(pulumi.StringPtrOutput)
}

// Records are fetched in batches by the consumer, and
// if the first record batch in the first non-empty partition of the fetch is larger than this value,
// the record batch will still be returned to ensure that the consumer can make progress. As such,
// this is not a absolute maximum.
func (o KafkaKafkaUserConfigKafkaConnectConfigPtrOutput) ConsumerFetchMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerFetchMaxBytes
	}).(pulumi.StringPtrOutput)
}

// Transaction read isolation level. readUncommitted is
// the default, but readCommitted can be used if consume-exactly-once behavior is desired.
func (o KafkaKafkaUserConfigKafkaConnectConfigPtrOutput) ConsumerIsolationLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerIsolationLevel
	}).(pulumi.StringPtrOutput)
}

// Records are fetched in batches by the consumer.If
// the first record batch in the first non-empty partition of the fetch is larger than this limit,
// the batch will still be returned to ensure that the consumer can make progress.
func (o KafkaKafkaUserConfigKafkaConnectConfigPtrOutput) ConsumerMaxPartitionFetchBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerMaxPartitionFetchBytes
	}).(pulumi.StringPtrOutput)
}

// The maximum delay in milliseconds between invocations
// of poll() when using consumer group management (defaults to 300000).
func (o KafkaKafkaUserConfigKafkaConnectConfigPtrOutput) ConsumerMaxPollIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerMaxPollIntervalMs
	}).(pulumi.StringPtrOutput)
}

// The maximum number of records returned in a single call
// to poll() (defaults to 500).
func (o KafkaKafkaUserConfigKafkaConnectConfigPtrOutput) ConsumerMaxPollRecords() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerMaxPollRecords
	}).(pulumi.StringPtrOutput)
}

// The interval at which to try committing offsets for
// tasks (defaults to 60000).
func (o KafkaKafkaUserConfigKafkaConnectConfigPtrOutput) OffsetFlushIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.OffsetFlushIntervalMs
	}).(pulumi.StringPtrOutput)
}

// Maximum number of milliseconds to wait for records to
// flush and partition offset data to be committed to offset storage before cancelling the process
// and restoring the offset data to be committed in a future attempt (defaults to 5000).
func (o KafkaKafkaUserConfigKafkaConnectConfigPtrOutput) OffsetFlushTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.OffsetFlushTimeoutMs
	}).(pulumi.StringPtrOutput)
}

// This setting will limit the number of record batches
// the producer will send in a single request to avoid sending huge requests.
func (o KafkaKafkaUserConfigKafkaConnectConfigPtrOutput) ProducerMaxRequestSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProducerMaxRequestSize
	}).(pulumi.StringPtrOutput)
}

// The timeout in milliseconds used to detect failures when
// using Kafka’s group management facilities (defaults to 10000).
func (o KafkaKafkaUserConfigKafkaConnectConfigPtrOutput) SessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.SessionTimeoutMs
	}).(pulumi.StringPtrOutput)
}

type KafkaKafkaUserConfigKafkaRestConfig struct {
	// If true the consumer's offset will be periodically
	// committed to Kafka in the background
	ConsumerEnableAutoCommit *string `pulumi:"consumerEnableAutoCommit"`
	// Maximum number of bytes in unencoded message keys and
	// values by a single request
	ConsumerRequestMaxBytes *string `pulumi:"consumerRequestMaxBytes"`
	// The maximum total time to wait for messages for a
	// request if the maximum number of messages has not yet been reached
	ConsumerRequestTimeoutMs *string `pulumi:"consumerRequestTimeoutMs"`
	// The number of acknowledgments the producer requires the leader to
	// have received before considering a request complete. If set to 'all' or '-1', the leader will wait
	// for the full set of in-sync replicas to acknowledge the record.
	ProducerAcks *string `pulumi:"producerAcks"`
	// Wait for up to the given delay to allow batching records together
	ProducerLingerMs *string `pulumi:"producerLingerMs"`
	// Maximum number of SimpleConsumers that can be
	// instantiated per broker.
	SimpleconsumerPoolSizeMax *string `pulumi:"simpleconsumerPoolSizeMax"`
}

// KafkaKafkaUserConfigKafkaRestConfigInput is an input type that accepts KafkaKafkaUserConfigKafkaRestConfigArgs and KafkaKafkaUserConfigKafkaRestConfigOutput values.
// You can construct a concrete instance of `KafkaKafkaUserConfigKafkaRestConfigInput` via:
//
//          KafkaKafkaUserConfigKafkaRestConfigArgs{...}
type KafkaKafkaUserConfigKafkaRestConfigInput interface {
	pulumi.Input

	ToKafkaKafkaUserConfigKafkaRestConfigOutput() KafkaKafkaUserConfigKafkaRestConfigOutput
	ToKafkaKafkaUserConfigKafkaRestConfigOutputWithContext(context.Context) KafkaKafkaUserConfigKafkaRestConfigOutput
}

type KafkaKafkaUserConfigKafkaRestConfigArgs struct {
	// If true the consumer's offset will be periodically
	// committed to Kafka in the background
	ConsumerEnableAutoCommit pulumi.StringPtrInput `pulumi:"consumerEnableAutoCommit"`
	// Maximum number of bytes in unencoded message keys and
	// values by a single request
	ConsumerRequestMaxBytes pulumi.StringPtrInput `pulumi:"consumerRequestMaxBytes"`
	// The maximum total time to wait for messages for a
	// request if the maximum number of messages has not yet been reached
	ConsumerRequestTimeoutMs pulumi.StringPtrInput `pulumi:"consumerRequestTimeoutMs"`
	// The number of acknowledgments the producer requires the leader to
	// have received before considering a request complete. If set to 'all' or '-1', the leader will wait
	// for the full set of in-sync replicas to acknowledge the record.
	ProducerAcks pulumi.StringPtrInput `pulumi:"producerAcks"`
	// Wait for up to the given delay to allow batching records together
	ProducerLingerMs pulumi.StringPtrInput `pulumi:"producerLingerMs"`
	// Maximum number of SimpleConsumers that can be
	// instantiated per broker.
	SimpleconsumerPoolSizeMax pulumi.StringPtrInput `pulumi:"simpleconsumerPoolSizeMax"`
}

func (KafkaKafkaUserConfigKafkaRestConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaKafkaUserConfigKafkaRestConfig)(nil)).Elem()
}

func (i KafkaKafkaUserConfigKafkaRestConfigArgs) ToKafkaKafkaUserConfigKafkaRestConfigOutput() KafkaKafkaUserConfigKafkaRestConfigOutput {
	return i.ToKafkaKafkaUserConfigKafkaRestConfigOutputWithContext(context.Background())
}

func (i KafkaKafkaUserConfigKafkaRestConfigArgs) ToKafkaKafkaUserConfigKafkaRestConfigOutputWithContext(ctx context.Context) KafkaKafkaUserConfigKafkaRestConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigKafkaRestConfigOutput)
}

func (i KafkaKafkaUserConfigKafkaRestConfigArgs) ToKafkaKafkaUserConfigKafkaRestConfigPtrOutput() KafkaKafkaUserConfigKafkaRestConfigPtrOutput {
	return i.ToKafkaKafkaUserConfigKafkaRestConfigPtrOutputWithContext(context.Background())
}

func (i KafkaKafkaUserConfigKafkaRestConfigArgs) ToKafkaKafkaUserConfigKafkaRestConfigPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigKafkaRestConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigKafkaRestConfigOutput).ToKafkaKafkaUserConfigKafkaRestConfigPtrOutputWithContext(ctx)
}

// KafkaKafkaUserConfigKafkaRestConfigPtrInput is an input type that accepts KafkaKafkaUserConfigKafkaRestConfigArgs, KafkaKafkaUserConfigKafkaRestConfigPtr and KafkaKafkaUserConfigKafkaRestConfigPtrOutput values.
// You can construct a concrete instance of `KafkaKafkaUserConfigKafkaRestConfigPtrInput` via:
//
//          KafkaKafkaUserConfigKafkaRestConfigArgs{...}
//
//  or:
//
//          nil
type KafkaKafkaUserConfigKafkaRestConfigPtrInput interface {
	pulumi.Input

	ToKafkaKafkaUserConfigKafkaRestConfigPtrOutput() KafkaKafkaUserConfigKafkaRestConfigPtrOutput
	ToKafkaKafkaUserConfigKafkaRestConfigPtrOutputWithContext(context.Context) KafkaKafkaUserConfigKafkaRestConfigPtrOutput
}

type kafkaKafkaUserConfigKafkaRestConfigPtrType KafkaKafkaUserConfigKafkaRestConfigArgs

func KafkaKafkaUserConfigKafkaRestConfigPtr(v *KafkaKafkaUserConfigKafkaRestConfigArgs) KafkaKafkaUserConfigKafkaRestConfigPtrInput {
	return (*kafkaKafkaUserConfigKafkaRestConfigPtrType)(v)
}

func (*kafkaKafkaUserConfigKafkaRestConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaKafkaUserConfigKafkaRestConfig)(nil)).Elem()
}

func (i *kafkaKafkaUserConfigKafkaRestConfigPtrType) ToKafkaKafkaUserConfigKafkaRestConfigPtrOutput() KafkaKafkaUserConfigKafkaRestConfigPtrOutput {
	return i.ToKafkaKafkaUserConfigKafkaRestConfigPtrOutputWithContext(context.Background())
}

func (i *kafkaKafkaUserConfigKafkaRestConfigPtrType) ToKafkaKafkaUserConfigKafkaRestConfigPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigKafkaRestConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigKafkaRestConfigPtrOutput)
}

type KafkaKafkaUserConfigKafkaRestConfigOutput struct{ *pulumi.OutputState }

func (KafkaKafkaUserConfigKafkaRestConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaKafkaUserConfigKafkaRestConfig)(nil)).Elem()
}

func (o KafkaKafkaUserConfigKafkaRestConfigOutput) ToKafkaKafkaUserConfigKafkaRestConfigOutput() KafkaKafkaUserConfigKafkaRestConfigOutput {
	return o
}

func (o KafkaKafkaUserConfigKafkaRestConfigOutput) ToKafkaKafkaUserConfigKafkaRestConfigOutputWithContext(ctx context.Context) KafkaKafkaUserConfigKafkaRestConfigOutput {
	return o
}

func (o KafkaKafkaUserConfigKafkaRestConfigOutput) ToKafkaKafkaUserConfigKafkaRestConfigPtrOutput() KafkaKafkaUserConfigKafkaRestConfigPtrOutput {
	return o.ToKafkaKafkaUserConfigKafkaRestConfigPtrOutputWithContext(context.Background())
}

func (o KafkaKafkaUserConfigKafkaRestConfigOutput) ToKafkaKafkaUserConfigKafkaRestConfigPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigKafkaRestConfigPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafkaRestConfig) *KafkaKafkaUserConfigKafkaRestConfig {
		return &v
	}).(KafkaKafkaUserConfigKafkaRestConfigPtrOutput)
}

// If true the consumer's offset will be periodically
// committed to Kafka in the background
func (o KafkaKafkaUserConfigKafkaRestConfigOutput) ConsumerEnableAutoCommit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafkaRestConfig) *string { return v.ConsumerEnableAutoCommit }).(pulumi.StringPtrOutput)
}

// Maximum number of bytes in unencoded message keys and
// values by a single request
func (o KafkaKafkaUserConfigKafkaRestConfigOutput) ConsumerRequestMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafkaRestConfig) *string { return v.ConsumerRequestMaxBytes }).(pulumi.StringPtrOutput)
}

// The maximum total time to wait for messages for a
// request if the maximum number of messages has not yet been reached
func (o KafkaKafkaUserConfigKafkaRestConfigOutput) ConsumerRequestTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafkaRestConfig) *string { return v.ConsumerRequestTimeoutMs }).(pulumi.StringPtrOutput)
}

// The number of acknowledgments the producer requires the leader to
// have received before considering a request complete. If set to 'all' or '-1', the leader will wait
// for the full set of in-sync replicas to acknowledge the record.
func (o KafkaKafkaUserConfigKafkaRestConfigOutput) ProducerAcks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafkaRestConfig) *string { return v.ProducerAcks }).(pulumi.StringPtrOutput)
}

// Wait for up to the given delay to allow batching records together
func (o KafkaKafkaUserConfigKafkaRestConfigOutput) ProducerLingerMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafkaRestConfig) *string { return v.ProducerLingerMs }).(pulumi.StringPtrOutput)
}

// Maximum number of SimpleConsumers that can be
// instantiated per broker.
func (o KafkaKafkaUserConfigKafkaRestConfigOutput) SimpleconsumerPoolSizeMax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigKafkaRestConfig) *string { return v.SimpleconsumerPoolSizeMax }).(pulumi.StringPtrOutput)
}

type KafkaKafkaUserConfigKafkaRestConfigPtrOutput struct{ *pulumi.OutputState }

func (KafkaKafkaUserConfigKafkaRestConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaKafkaUserConfigKafkaRestConfig)(nil)).Elem()
}

func (o KafkaKafkaUserConfigKafkaRestConfigPtrOutput) ToKafkaKafkaUserConfigKafkaRestConfigPtrOutput() KafkaKafkaUserConfigKafkaRestConfigPtrOutput {
	return o
}

func (o KafkaKafkaUserConfigKafkaRestConfigPtrOutput) ToKafkaKafkaUserConfigKafkaRestConfigPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigKafkaRestConfigPtrOutput {
	return o
}

func (o KafkaKafkaUserConfigKafkaRestConfigPtrOutput) Elem() KafkaKafkaUserConfigKafkaRestConfigOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafkaRestConfig) KafkaKafkaUserConfigKafkaRestConfig { return *v }).(KafkaKafkaUserConfigKafkaRestConfigOutput)
}

// If true the consumer's offset will be periodically
// committed to Kafka in the background
func (o KafkaKafkaUserConfigKafkaRestConfigPtrOutput) ConsumerEnableAutoCommit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafkaRestConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerEnableAutoCommit
	}).(pulumi.StringPtrOutput)
}

// Maximum number of bytes in unencoded message keys and
// values by a single request
func (o KafkaKafkaUserConfigKafkaRestConfigPtrOutput) ConsumerRequestMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafkaRestConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerRequestMaxBytes
	}).(pulumi.StringPtrOutput)
}

// The maximum total time to wait for messages for a
// request if the maximum number of messages has not yet been reached
func (o KafkaKafkaUserConfigKafkaRestConfigPtrOutput) ConsumerRequestTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafkaRestConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerRequestTimeoutMs
	}).(pulumi.StringPtrOutput)
}

// The number of acknowledgments the producer requires the leader to
// have received before considering a request complete. If set to 'all' or '-1', the leader will wait
// for the full set of in-sync replicas to acknowledge the record.
func (o KafkaKafkaUserConfigKafkaRestConfigPtrOutput) ProducerAcks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafkaRestConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProducerAcks
	}).(pulumi.StringPtrOutput)
}

// Wait for up to the given delay to allow batching records together
func (o KafkaKafkaUserConfigKafkaRestConfigPtrOutput) ProducerLingerMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafkaRestConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProducerLingerMs
	}).(pulumi.StringPtrOutput)
}

// Maximum number of SimpleConsumers that can be
// instantiated per broker.
func (o KafkaKafkaUserConfigKafkaRestConfigPtrOutput) SimpleconsumerPoolSizeMax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigKafkaRestConfig) *string {
		if v == nil {
			return nil
		}
		return v.SimpleconsumerPoolSizeMax
	}).(pulumi.StringPtrOutput)
}

type KafkaKafkaUserConfigPrivateAccess struct {
	// Allow clients to connect to prometheus from the public internet for
	// service nodes that are in a project VPC or another type of private network
	Prometheus *string `pulumi:"prometheus"`
}

// KafkaKafkaUserConfigPrivateAccessInput is an input type that accepts KafkaKafkaUserConfigPrivateAccessArgs and KafkaKafkaUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `KafkaKafkaUserConfigPrivateAccessInput` via:
//
//          KafkaKafkaUserConfigPrivateAccessArgs{...}
type KafkaKafkaUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToKafkaKafkaUserConfigPrivateAccessOutput() KafkaKafkaUserConfigPrivateAccessOutput
	ToKafkaKafkaUserConfigPrivateAccessOutputWithContext(context.Context) KafkaKafkaUserConfigPrivateAccessOutput
}

type KafkaKafkaUserConfigPrivateAccessArgs struct {
	// Allow clients to connect to prometheus from the public internet for
	// service nodes that are in a project VPC or another type of private network
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (KafkaKafkaUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaKafkaUserConfigPrivateAccess)(nil)).Elem()
}

func (i KafkaKafkaUserConfigPrivateAccessArgs) ToKafkaKafkaUserConfigPrivateAccessOutput() KafkaKafkaUserConfigPrivateAccessOutput {
	return i.ToKafkaKafkaUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i KafkaKafkaUserConfigPrivateAccessArgs) ToKafkaKafkaUserConfigPrivateAccessOutputWithContext(ctx context.Context) KafkaKafkaUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigPrivateAccessOutput)
}

func (i KafkaKafkaUserConfigPrivateAccessArgs) ToKafkaKafkaUserConfigPrivateAccessPtrOutput() KafkaKafkaUserConfigPrivateAccessPtrOutput {
	return i.ToKafkaKafkaUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i KafkaKafkaUserConfigPrivateAccessArgs) ToKafkaKafkaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigPrivateAccessOutput).ToKafkaKafkaUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// KafkaKafkaUserConfigPrivateAccessPtrInput is an input type that accepts KafkaKafkaUserConfigPrivateAccessArgs, KafkaKafkaUserConfigPrivateAccessPtr and KafkaKafkaUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `KafkaKafkaUserConfigPrivateAccessPtrInput` via:
//
//          KafkaKafkaUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type KafkaKafkaUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToKafkaKafkaUserConfigPrivateAccessPtrOutput() KafkaKafkaUserConfigPrivateAccessPtrOutput
	ToKafkaKafkaUserConfigPrivateAccessPtrOutputWithContext(context.Context) KafkaKafkaUserConfigPrivateAccessPtrOutput
}

type kafkaKafkaUserConfigPrivateAccessPtrType KafkaKafkaUserConfigPrivateAccessArgs

func KafkaKafkaUserConfigPrivateAccessPtr(v *KafkaKafkaUserConfigPrivateAccessArgs) KafkaKafkaUserConfigPrivateAccessPtrInput {
	return (*kafkaKafkaUserConfigPrivateAccessPtrType)(v)
}

func (*kafkaKafkaUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaKafkaUserConfigPrivateAccess)(nil)).Elem()
}

func (i *kafkaKafkaUserConfigPrivateAccessPtrType) ToKafkaKafkaUserConfigPrivateAccessPtrOutput() KafkaKafkaUserConfigPrivateAccessPtrOutput {
	return i.ToKafkaKafkaUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *kafkaKafkaUserConfigPrivateAccessPtrType) ToKafkaKafkaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigPrivateAccessPtrOutput)
}

type KafkaKafkaUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (KafkaKafkaUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaKafkaUserConfigPrivateAccess)(nil)).Elem()
}

func (o KafkaKafkaUserConfigPrivateAccessOutput) ToKafkaKafkaUserConfigPrivateAccessOutput() KafkaKafkaUserConfigPrivateAccessOutput {
	return o
}

func (o KafkaKafkaUserConfigPrivateAccessOutput) ToKafkaKafkaUserConfigPrivateAccessOutputWithContext(ctx context.Context) KafkaKafkaUserConfigPrivateAccessOutput {
	return o
}

func (o KafkaKafkaUserConfigPrivateAccessOutput) ToKafkaKafkaUserConfigPrivateAccessPtrOutput() KafkaKafkaUserConfigPrivateAccessPtrOutput {
	return o.ToKafkaKafkaUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o KafkaKafkaUserConfigPrivateAccessOutput) ToKafkaKafkaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigPrivateAccess) *KafkaKafkaUserConfigPrivateAccess {
		return &v
	}).(KafkaKafkaUserConfigPrivateAccessPtrOutput)
}

// Allow clients to connect to prometheus from the public internet for
// service nodes that are in a project VPC or another type of private network
func (o KafkaKafkaUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type KafkaKafkaUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (KafkaKafkaUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaKafkaUserConfigPrivateAccess)(nil)).Elem()
}

func (o KafkaKafkaUserConfigPrivateAccessPtrOutput) ToKafkaKafkaUserConfigPrivateAccessPtrOutput() KafkaKafkaUserConfigPrivateAccessPtrOutput {
	return o
}

func (o KafkaKafkaUserConfigPrivateAccessPtrOutput) ToKafkaKafkaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigPrivateAccessPtrOutput {
	return o
}

func (o KafkaKafkaUserConfigPrivateAccessPtrOutput) Elem() KafkaKafkaUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigPrivateAccess) KafkaKafkaUserConfigPrivateAccess { return *v }).(KafkaKafkaUserConfigPrivateAccessOutput)
}

// Allow clients to connect to prometheus from the public internet for
// service nodes that are in a project VPC or another type of private network
func (o KafkaKafkaUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type KafkaKafkaUserConfigPrivatelinkAccess struct {
	// Enable kafka
	Kafka *string `pulumi:"kafka"`
	// Enable kafka_connect
	KafkaConnect *string `pulumi:"kafkaConnect"`
	// Enable kafka_rest
	KafkaRest *string `pulumi:"kafkaRest"`
	// Enable Schema-Registry service
	SchemaRegistry *string `pulumi:"schemaRegistry"`
}

// KafkaKafkaUserConfigPrivatelinkAccessInput is an input type that accepts KafkaKafkaUserConfigPrivatelinkAccessArgs and KafkaKafkaUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `KafkaKafkaUserConfigPrivatelinkAccessInput` via:
//
//          KafkaKafkaUserConfigPrivatelinkAccessArgs{...}
type KafkaKafkaUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToKafkaKafkaUserConfigPrivatelinkAccessOutput() KafkaKafkaUserConfigPrivatelinkAccessOutput
	ToKafkaKafkaUserConfigPrivatelinkAccessOutputWithContext(context.Context) KafkaKafkaUserConfigPrivatelinkAccessOutput
}

type KafkaKafkaUserConfigPrivatelinkAccessArgs struct {
	// Enable kafka
	Kafka pulumi.StringPtrInput `pulumi:"kafka"`
	// Enable kafka_connect
	KafkaConnect pulumi.StringPtrInput `pulumi:"kafkaConnect"`
	// Enable kafka_rest
	KafkaRest pulumi.StringPtrInput `pulumi:"kafkaRest"`
	// Enable Schema-Registry service
	SchemaRegistry pulumi.StringPtrInput `pulumi:"schemaRegistry"`
}

func (KafkaKafkaUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaKafkaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i KafkaKafkaUserConfigPrivatelinkAccessArgs) ToKafkaKafkaUserConfigPrivatelinkAccessOutput() KafkaKafkaUserConfigPrivatelinkAccessOutput {
	return i.ToKafkaKafkaUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i KafkaKafkaUserConfigPrivatelinkAccessArgs) ToKafkaKafkaUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) KafkaKafkaUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigPrivatelinkAccessOutput)
}

func (i KafkaKafkaUserConfigPrivatelinkAccessArgs) ToKafkaKafkaUserConfigPrivatelinkAccessPtrOutput() KafkaKafkaUserConfigPrivatelinkAccessPtrOutput {
	return i.ToKafkaKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i KafkaKafkaUserConfigPrivatelinkAccessArgs) ToKafkaKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigPrivatelinkAccessOutput).ToKafkaKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// KafkaKafkaUserConfigPrivatelinkAccessPtrInput is an input type that accepts KafkaKafkaUserConfigPrivatelinkAccessArgs, KafkaKafkaUserConfigPrivatelinkAccessPtr and KafkaKafkaUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `KafkaKafkaUserConfigPrivatelinkAccessPtrInput` via:
//
//          KafkaKafkaUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type KafkaKafkaUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToKafkaKafkaUserConfigPrivatelinkAccessPtrOutput() KafkaKafkaUserConfigPrivatelinkAccessPtrOutput
	ToKafkaKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) KafkaKafkaUserConfigPrivatelinkAccessPtrOutput
}

type kafkaKafkaUserConfigPrivatelinkAccessPtrType KafkaKafkaUserConfigPrivatelinkAccessArgs

func KafkaKafkaUserConfigPrivatelinkAccessPtr(v *KafkaKafkaUserConfigPrivatelinkAccessArgs) KafkaKafkaUserConfigPrivatelinkAccessPtrInput {
	return (*kafkaKafkaUserConfigPrivatelinkAccessPtrType)(v)
}

func (*kafkaKafkaUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaKafkaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *kafkaKafkaUserConfigPrivatelinkAccessPtrType) ToKafkaKafkaUserConfigPrivatelinkAccessPtrOutput() KafkaKafkaUserConfigPrivatelinkAccessPtrOutput {
	return i.ToKafkaKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *kafkaKafkaUserConfigPrivatelinkAccessPtrType) ToKafkaKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigPrivatelinkAccessPtrOutput)
}

type KafkaKafkaUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (KafkaKafkaUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaKafkaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o KafkaKafkaUserConfigPrivatelinkAccessOutput) ToKafkaKafkaUserConfigPrivatelinkAccessOutput() KafkaKafkaUserConfigPrivatelinkAccessOutput {
	return o
}

func (o KafkaKafkaUserConfigPrivatelinkAccessOutput) ToKafkaKafkaUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) KafkaKafkaUserConfigPrivatelinkAccessOutput {
	return o
}

func (o KafkaKafkaUserConfigPrivatelinkAccessOutput) ToKafkaKafkaUserConfigPrivatelinkAccessPtrOutput() KafkaKafkaUserConfigPrivatelinkAccessPtrOutput {
	return o.ToKafkaKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o KafkaKafkaUserConfigPrivatelinkAccessOutput) ToKafkaKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigPrivatelinkAccess) *KafkaKafkaUserConfigPrivatelinkAccess {
		return &v
	}).(KafkaKafkaUserConfigPrivatelinkAccessPtrOutput)
}

// Enable kafka
func (o KafkaKafkaUserConfigPrivatelinkAccessOutput) Kafka() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigPrivatelinkAccess) *string { return v.Kafka }).(pulumi.StringPtrOutput)
}

// Enable kafka_connect
func (o KafkaKafkaUserConfigPrivatelinkAccessOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigPrivatelinkAccess) *string { return v.KafkaConnect }).(pulumi.StringPtrOutput)
}

// Enable kafka_rest
func (o KafkaKafkaUserConfigPrivatelinkAccessOutput) KafkaRest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigPrivatelinkAccess) *string { return v.KafkaRest }).(pulumi.StringPtrOutput)
}

// Enable Schema-Registry service
func (o KafkaKafkaUserConfigPrivatelinkAccessOutput) SchemaRegistry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigPrivatelinkAccess) *string { return v.SchemaRegistry }).(pulumi.StringPtrOutput)
}

type KafkaKafkaUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (KafkaKafkaUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaKafkaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o KafkaKafkaUserConfigPrivatelinkAccessPtrOutput) ToKafkaKafkaUserConfigPrivatelinkAccessPtrOutput() KafkaKafkaUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o KafkaKafkaUserConfigPrivatelinkAccessPtrOutput) ToKafkaKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o KafkaKafkaUserConfigPrivatelinkAccessPtrOutput) Elem() KafkaKafkaUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigPrivatelinkAccess) KafkaKafkaUserConfigPrivatelinkAccess { return *v }).(KafkaKafkaUserConfigPrivatelinkAccessOutput)
}

// Enable kafka
func (o KafkaKafkaUserConfigPrivatelinkAccessPtrOutput) Kafka() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Kafka
	}).(pulumi.StringPtrOutput)
}

// Enable kafka_connect
func (o KafkaKafkaUserConfigPrivatelinkAccessPtrOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaConnect
	}).(pulumi.StringPtrOutput)
}

// Enable kafka_rest
func (o KafkaKafkaUserConfigPrivatelinkAccessPtrOutput) KafkaRest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaRest
	}).(pulumi.StringPtrOutput)
}

// Enable Schema-Registry service
func (o KafkaKafkaUserConfigPrivatelinkAccessPtrOutput) SchemaRegistry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.SchemaRegistry
	}).(pulumi.StringPtrOutput)
}

type KafkaKafkaUserConfigPublicAccess struct {
	// Enable kafka
	Kafka *string `pulumi:"kafka"`
	// Enable kafka_connect
	KafkaConnect *string `pulumi:"kafkaConnect"`
	// Enable kafka_rest
	KafkaRest *string `pulumi:"kafkaRest"`
	// Allow clients to connect to prometheus from the public internet for
	// service nodes that are in a project VPC or another type of private network
	Prometheus *string `pulumi:"prometheus"`
	// Enable Schema-Registry service
	SchemaRegistry *string `pulumi:"schemaRegistry"`
}

// KafkaKafkaUserConfigPublicAccessInput is an input type that accepts KafkaKafkaUserConfigPublicAccessArgs and KafkaKafkaUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `KafkaKafkaUserConfigPublicAccessInput` via:
//
//          KafkaKafkaUserConfigPublicAccessArgs{...}
type KafkaKafkaUserConfigPublicAccessInput interface {
	pulumi.Input

	ToKafkaKafkaUserConfigPublicAccessOutput() KafkaKafkaUserConfigPublicAccessOutput
	ToKafkaKafkaUserConfigPublicAccessOutputWithContext(context.Context) KafkaKafkaUserConfigPublicAccessOutput
}

type KafkaKafkaUserConfigPublicAccessArgs struct {
	// Enable kafka
	Kafka pulumi.StringPtrInput `pulumi:"kafka"`
	// Enable kafka_connect
	KafkaConnect pulumi.StringPtrInput `pulumi:"kafkaConnect"`
	// Enable kafka_rest
	KafkaRest pulumi.StringPtrInput `pulumi:"kafkaRest"`
	// Allow clients to connect to prometheus from the public internet for
	// service nodes that are in a project VPC or another type of private network
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
	// Enable Schema-Registry service
	SchemaRegistry pulumi.StringPtrInput `pulumi:"schemaRegistry"`
}

func (KafkaKafkaUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaKafkaUserConfigPublicAccess)(nil)).Elem()
}

func (i KafkaKafkaUserConfigPublicAccessArgs) ToKafkaKafkaUserConfigPublicAccessOutput() KafkaKafkaUserConfigPublicAccessOutput {
	return i.ToKafkaKafkaUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i KafkaKafkaUserConfigPublicAccessArgs) ToKafkaKafkaUserConfigPublicAccessOutputWithContext(ctx context.Context) KafkaKafkaUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigPublicAccessOutput)
}

func (i KafkaKafkaUserConfigPublicAccessArgs) ToKafkaKafkaUserConfigPublicAccessPtrOutput() KafkaKafkaUserConfigPublicAccessPtrOutput {
	return i.ToKafkaKafkaUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i KafkaKafkaUserConfigPublicAccessArgs) ToKafkaKafkaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigPublicAccessOutput).ToKafkaKafkaUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// KafkaKafkaUserConfigPublicAccessPtrInput is an input type that accepts KafkaKafkaUserConfigPublicAccessArgs, KafkaKafkaUserConfigPublicAccessPtr and KafkaKafkaUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `KafkaKafkaUserConfigPublicAccessPtrInput` via:
//
//          KafkaKafkaUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type KafkaKafkaUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToKafkaKafkaUserConfigPublicAccessPtrOutput() KafkaKafkaUserConfigPublicAccessPtrOutput
	ToKafkaKafkaUserConfigPublicAccessPtrOutputWithContext(context.Context) KafkaKafkaUserConfigPublicAccessPtrOutput
}

type kafkaKafkaUserConfigPublicAccessPtrType KafkaKafkaUserConfigPublicAccessArgs

func KafkaKafkaUserConfigPublicAccessPtr(v *KafkaKafkaUserConfigPublicAccessArgs) KafkaKafkaUserConfigPublicAccessPtrInput {
	return (*kafkaKafkaUserConfigPublicAccessPtrType)(v)
}

func (*kafkaKafkaUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaKafkaUserConfigPublicAccess)(nil)).Elem()
}

func (i *kafkaKafkaUserConfigPublicAccessPtrType) ToKafkaKafkaUserConfigPublicAccessPtrOutput() KafkaKafkaUserConfigPublicAccessPtrOutput {
	return i.ToKafkaKafkaUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *kafkaKafkaUserConfigPublicAccessPtrType) ToKafkaKafkaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigPublicAccessPtrOutput)
}

type KafkaKafkaUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (KafkaKafkaUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaKafkaUserConfigPublicAccess)(nil)).Elem()
}

func (o KafkaKafkaUserConfigPublicAccessOutput) ToKafkaKafkaUserConfigPublicAccessOutput() KafkaKafkaUserConfigPublicAccessOutput {
	return o
}

func (o KafkaKafkaUserConfigPublicAccessOutput) ToKafkaKafkaUserConfigPublicAccessOutputWithContext(ctx context.Context) KafkaKafkaUserConfigPublicAccessOutput {
	return o
}

func (o KafkaKafkaUserConfigPublicAccessOutput) ToKafkaKafkaUserConfigPublicAccessPtrOutput() KafkaKafkaUserConfigPublicAccessPtrOutput {
	return o.ToKafkaKafkaUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o KafkaKafkaUserConfigPublicAccessOutput) ToKafkaKafkaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigPublicAccess) *KafkaKafkaUserConfigPublicAccess {
		return &v
	}).(KafkaKafkaUserConfigPublicAccessPtrOutput)
}

// Enable kafka
func (o KafkaKafkaUserConfigPublicAccessOutput) Kafka() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigPublicAccess) *string { return v.Kafka }).(pulumi.StringPtrOutput)
}

// Enable kafka_connect
func (o KafkaKafkaUserConfigPublicAccessOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigPublicAccess) *string { return v.KafkaConnect }).(pulumi.StringPtrOutput)
}

// Enable kafka_rest
func (o KafkaKafkaUserConfigPublicAccessOutput) KafkaRest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigPublicAccess) *string { return v.KafkaRest }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public internet for
// service nodes that are in a project VPC or another type of private network
func (o KafkaKafkaUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

// Enable Schema-Registry service
func (o KafkaKafkaUserConfigPublicAccessOutput) SchemaRegistry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigPublicAccess) *string { return v.SchemaRegistry }).(pulumi.StringPtrOutput)
}

type KafkaKafkaUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (KafkaKafkaUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaKafkaUserConfigPublicAccess)(nil)).Elem()
}

func (o KafkaKafkaUserConfigPublicAccessPtrOutput) ToKafkaKafkaUserConfigPublicAccessPtrOutput() KafkaKafkaUserConfigPublicAccessPtrOutput {
	return o
}

func (o KafkaKafkaUserConfigPublicAccessPtrOutput) ToKafkaKafkaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigPublicAccessPtrOutput {
	return o
}

func (o KafkaKafkaUserConfigPublicAccessPtrOutput) Elem() KafkaKafkaUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigPublicAccess) KafkaKafkaUserConfigPublicAccess { return *v }).(KafkaKafkaUserConfigPublicAccessOutput)
}

// Enable kafka
func (o KafkaKafkaUserConfigPublicAccessPtrOutput) Kafka() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Kafka
	}).(pulumi.StringPtrOutput)
}

// Enable kafka_connect
func (o KafkaKafkaUserConfigPublicAccessPtrOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaConnect
	}).(pulumi.StringPtrOutput)
}

// Enable kafka_rest
func (o KafkaKafkaUserConfigPublicAccessPtrOutput) KafkaRest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaRest
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public internet for
// service nodes that are in a project VPC or another type of private network
func (o KafkaKafkaUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

// Enable Schema-Registry service
func (o KafkaKafkaUserConfigPublicAccessPtrOutput) SchemaRegistry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.SchemaRegistry
	}).(pulumi.StringPtrOutput)
}

type KafkaKafkaUserConfigSchemaRegistryConfig struct {
	// If true, Karapace / Schema Registry on the service nodes can
	// participate in leader election. It might be needed to disable this when the schemas topic is replicated
	// to a secondary cluster and Karapace / Schema Registry there must not participate in leader election.
	// Defaults to 'true'.
	LeaderEligibility *string `pulumi:"leaderEligibility"`
	// The durable single partition topic that acts as the durable log for the
	// data. This topic must be compacted to avoid losing data due to retention policy. Please note that
	// changing this configuration in an existing Schema Registry / Karapace setup leads to previous
	// schemas being inaccessible, data encoded with them potentially unreadable and schema ID sequence
	// put out of order. It's only possible to do the switch while Schema Registry / Karapace is disabled.
	// Defaults to '_schemas'.
	TopicName *string `pulumi:"topicName"`
}

// KafkaKafkaUserConfigSchemaRegistryConfigInput is an input type that accepts KafkaKafkaUserConfigSchemaRegistryConfigArgs and KafkaKafkaUserConfigSchemaRegistryConfigOutput values.
// You can construct a concrete instance of `KafkaKafkaUserConfigSchemaRegistryConfigInput` via:
//
//          KafkaKafkaUserConfigSchemaRegistryConfigArgs{...}
type KafkaKafkaUserConfigSchemaRegistryConfigInput interface {
	pulumi.Input

	ToKafkaKafkaUserConfigSchemaRegistryConfigOutput() KafkaKafkaUserConfigSchemaRegistryConfigOutput
	ToKafkaKafkaUserConfigSchemaRegistryConfigOutputWithContext(context.Context) KafkaKafkaUserConfigSchemaRegistryConfigOutput
}

type KafkaKafkaUserConfigSchemaRegistryConfigArgs struct {
	// If true, Karapace / Schema Registry on the service nodes can
	// participate in leader election. It might be needed to disable this when the schemas topic is replicated
	// to a secondary cluster and Karapace / Schema Registry there must not participate in leader election.
	// Defaults to 'true'.
	LeaderEligibility pulumi.StringPtrInput `pulumi:"leaderEligibility"`
	// The durable single partition topic that acts as the durable log for the
	// data. This topic must be compacted to avoid losing data due to retention policy. Please note that
	// changing this configuration in an existing Schema Registry / Karapace setup leads to previous
	// schemas being inaccessible, data encoded with them potentially unreadable and schema ID sequence
	// put out of order. It's only possible to do the switch while Schema Registry / Karapace is disabled.
	// Defaults to '_schemas'.
	TopicName pulumi.StringPtrInput `pulumi:"topicName"`
}

func (KafkaKafkaUserConfigSchemaRegistryConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaKafkaUserConfigSchemaRegistryConfig)(nil)).Elem()
}

func (i KafkaKafkaUserConfigSchemaRegistryConfigArgs) ToKafkaKafkaUserConfigSchemaRegistryConfigOutput() KafkaKafkaUserConfigSchemaRegistryConfigOutput {
	return i.ToKafkaKafkaUserConfigSchemaRegistryConfigOutputWithContext(context.Background())
}

func (i KafkaKafkaUserConfigSchemaRegistryConfigArgs) ToKafkaKafkaUserConfigSchemaRegistryConfigOutputWithContext(ctx context.Context) KafkaKafkaUserConfigSchemaRegistryConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigSchemaRegistryConfigOutput)
}

func (i KafkaKafkaUserConfigSchemaRegistryConfigArgs) ToKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput() KafkaKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return i.ToKafkaKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(context.Background())
}

func (i KafkaKafkaUserConfigSchemaRegistryConfigArgs) ToKafkaKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigSchemaRegistryConfigOutput).ToKafkaKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(ctx)
}

// KafkaKafkaUserConfigSchemaRegistryConfigPtrInput is an input type that accepts KafkaKafkaUserConfigSchemaRegistryConfigArgs, KafkaKafkaUserConfigSchemaRegistryConfigPtr and KafkaKafkaUserConfigSchemaRegistryConfigPtrOutput values.
// You can construct a concrete instance of `KafkaKafkaUserConfigSchemaRegistryConfigPtrInput` via:
//
//          KafkaKafkaUserConfigSchemaRegistryConfigArgs{...}
//
//  or:
//
//          nil
type KafkaKafkaUserConfigSchemaRegistryConfigPtrInput interface {
	pulumi.Input

	ToKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput() KafkaKafkaUserConfigSchemaRegistryConfigPtrOutput
	ToKafkaKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(context.Context) KafkaKafkaUserConfigSchemaRegistryConfigPtrOutput
}

type kafkaKafkaUserConfigSchemaRegistryConfigPtrType KafkaKafkaUserConfigSchemaRegistryConfigArgs

func KafkaKafkaUserConfigSchemaRegistryConfigPtr(v *KafkaKafkaUserConfigSchemaRegistryConfigArgs) KafkaKafkaUserConfigSchemaRegistryConfigPtrInput {
	return (*kafkaKafkaUserConfigSchemaRegistryConfigPtrType)(v)
}

func (*kafkaKafkaUserConfigSchemaRegistryConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaKafkaUserConfigSchemaRegistryConfig)(nil)).Elem()
}

func (i *kafkaKafkaUserConfigSchemaRegistryConfigPtrType) ToKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput() KafkaKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return i.ToKafkaKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(context.Background())
}

func (i *kafkaKafkaUserConfigSchemaRegistryConfigPtrType) ToKafkaKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaKafkaUserConfigSchemaRegistryConfigPtrOutput)
}

type KafkaKafkaUserConfigSchemaRegistryConfigOutput struct{ *pulumi.OutputState }

func (KafkaKafkaUserConfigSchemaRegistryConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaKafkaUserConfigSchemaRegistryConfig)(nil)).Elem()
}

func (o KafkaKafkaUserConfigSchemaRegistryConfigOutput) ToKafkaKafkaUserConfigSchemaRegistryConfigOutput() KafkaKafkaUserConfigSchemaRegistryConfigOutput {
	return o
}

func (o KafkaKafkaUserConfigSchemaRegistryConfigOutput) ToKafkaKafkaUserConfigSchemaRegistryConfigOutputWithContext(ctx context.Context) KafkaKafkaUserConfigSchemaRegistryConfigOutput {
	return o
}

func (o KafkaKafkaUserConfigSchemaRegistryConfigOutput) ToKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput() KafkaKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return o.ToKafkaKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(context.Background())
}

func (o KafkaKafkaUserConfigSchemaRegistryConfigOutput) ToKafkaKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigSchemaRegistryConfig) *KafkaKafkaUserConfigSchemaRegistryConfig {
		return &v
	}).(KafkaKafkaUserConfigSchemaRegistryConfigPtrOutput)
}

// If true, Karapace / Schema Registry on the service nodes can
// participate in leader election. It might be needed to disable this when the schemas topic is replicated
// to a secondary cluster and Karapace / Schema Registry there must not participate in leader election.
// Defaults to 'true'.
func (o KafkaKafkaUserConfigSchemaRegistryConfigOutput) LeaderEligibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigSchemaRegistryConfig) *string { return v.LeaderEligibility }).(pulumi.StringPtrOutput)
}

// The durable single partition topic that acts as the durable log for the
// data. This topic must be compacted to avoid losing data due to retention policy. Please note that
// changing this configuration in an existing Schema Registry / Karapace setup leads to previous
// schemas being inaccessible, data encoded with them potentially unreadable and schema ID sequence
// put out of order. It's only possible to do the switch while Schema Registry / Karapace is disabled.
// Defaults to '_schemas'.
func (o KafkaKafkaUserConfigSchemaRegistryConfigOutput) TopicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaKafkaUserConfigSchemaRegistryConfig) *string { return v.TopicName }).(pulumi.StringPtrOutput)
}

type KafkaKafkaUserConfigSchemaRegistryConfigPtrOutput struct{ *pulumi.OutputState }

func (KafkaKafkaUserConfigSchemaRegistryConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaKafkaUserConfigSchemaRegistryConfig)(nil)).Elem()
}

func (o KafkaKafkaUserConfigSchemaRegistryConfigPtrOutput) ToKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput() KafkaKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return o
}

func (o KafkaKafkaUserConfigSchemaRegistryConfigPtrOutput) ToKafkaKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(ctx context.Context) KafkaKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return o
}

func (o KafkaKafkaUserConfigSchemaRegistryConfigPtrOutput) Elem() KafkaKafkaUserConfigSchemaRegistryConfigOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigSchemaRegistryConfig) KafkaKafkaUserConfigSchemaRegistryConfig { return *v }).(KafkaKafkaUserConfigSchemaRegistryConfigOutput)
}

// If true, Karapace / Schema Registry on the service nodes can
// participate in leader election. It might be needed to disable this when the schemas topic is replicated
// to a secondary cluster and Karapace / Schema Registry there must not participate in leader election.
// Defaults to 'true'.
func (o KafkaKafkaUserConfigSchemaRegistryConfigPtrOutput) LeaderEligibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigSchemaRegistryConfig) *string {
		if v == nil {
			return nil
		}
		return v.LeaderEligibility
	}).(pulumi.StringPtrOutput)
}

// The durable single partition topic that acts as the durable log for the
// data. This topic must be compacted to avoid losing data due to retention policy. Please note that
// changing this configuration in an existing Schema Registry / Karapace setup leads to previous
// schemas being inaccessible, data encoded with them potentially unreadable and schema ID sequence
// put out of order. It's only possible to do the switch while Schema Registry / Karapace is disabled.
// Defaults to '_schemas'.
func (o KafkaKafkaUserConfigSchemaRegistryConfigPtrOutput) TopicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaKafkaUserConfigSchemaRegistryConfig) *string {
		if v == nil {
			return nil
		}
		return v.TopicName
	}).(pulumi.StringPtrOutput)
}

type KafkaMirrorMakerComponent struct {
	Component                 *string `pulumi:"component"`
	Host                      *string `pulumi:"host"`
	KafkaAuthenticationMethod *string `pulumi:"kafkaAuthenticationMethod"`
	Port                      *int    `pulumi:"port"`
	Route                     *string `pulumi:"route"`
	Ssl                       *bool   `pulumi:"ssl"`
	Usage                     *string `pulumi:"usage"`
}

// KafkaMirrorMakerComponentInput is an input type that accepts KafkaMirrorMakerComponentArgs and KafkaMirrorMakerComponentOutput values.
// You can construct a concrete instance of `KafkaMirrorMakerComponentInput` via:
//
//          KafkaMirrorMakerComponentArgs{...}
type KafkaMirrorMakerComponentInput interface {
	pulumi.Input

	ToKafkaMirrorMakerComponentOutput() KafkaMirrorMakerComponentOutput
	ToKafkaMirrorMakerComponentOutputWithContext(context.Context) KafkaMirrorMakerComponentOutput
}

type KafkaMirrorMakerComponentArgs struct {
	Component                 pulumi.StringPtrInput `pulumi:"component"`
	Host                      pulumi.StringPtrInput `pulumi:"host"`
	KafkaAuthenticationMethod pulumi.StringPtrInput `pulumi:"kafkaAuthenticationMethod"`
	Port                      pulumi.IntPtrInput    `pulumi:"port"`
	Route                     pulumi.StringPtrInput `pulumi:"route"`
	Ssl                       pulumi.BoolPtrInput   `pulumi:"ssl"`
	Usage                     pulumi.StringPtrInput `pulumi:"usage"`
}

func (KafkaMirrorMakerComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaMirrorMakerComponent)(nil)).Elem()
}

func (i KafkaMirrorMakerComponentArgs) ToKafkaMirrorMakerComponentOutput() KafkaMirrorMakerComponentOutput {
	return i.ToKafkaMirrorMakerComponentOutputWithContext(context.Background())
}

func (i KafkaMirrorMakerComponentArgs) ToKafkaMirrorMakerComponentOutputWithContext(ctx context.Context) KafkaMirrorMakerComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorMakerComponentOutput)
}

// KafkaMirrorMakerComponentArrayInput is an input type that accepts KafkaMirrorMakerComponentArray and KafkaMirrorMakerComponentArrayOutput values.
// You can construct a concrete instance of `KafkaMirrorMakerComponentArrayInput` via:
//
//          KafkaMirrorMakerComponentArray{ KafkaMirrorMakerComponentArgs{...} }
type KafkaMirrorMakerComponentArrayInput interface {
	pulumi.Input

	ToKafkaMirrorMakerComponentArrayOutput() KafkaMirrorMakerComponentArrayOutput
	ToKafkaMirrorMakerComponentArrayOutputWithContext(context.Context) KafkaMirrorMakerComponentArrayOutput
}

type KafkaMirrorMakerComponentArray []KafkaMirrorMakerComponentInput

func (KafkaMirrorMakerComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaMirrorMakerComponent)(nil)).Elem()
}

func (i KafkaMirrorMakerComponentArray) ToKafkaMirrorMakerComponentArrayOutput() KafkaMirrorMakerComponentArrayOutput {
	return i.ToKafkaMirrorMakerComponentArrayOutputWithContext(context.Background())
}

func (i KafkaMirrorMakerComponentArray) ToKafkaMirrorMakerComponentArrayOutputWithContext(ctx context.Context) KafkaMirrorMakerComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorMakerComponentArrayOutput)
}

type KafkaMirrorMakerComponentOutput struct{ *pulumi.OutputState }

func (KafkaMirrorMakerComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaMirrorMakerComponent)(nil)).Elem()
}

func (o KafkaMirrorMakerComponentOutput) ToKafkaMirrorMakerComponentOutput() KafkaMirrorMakerComponentOutput {
	return o
}

func (o KafkaMirrorMakerComponentOutput) ToKafkaMirrorMakerComponentOutputWithContext(ctx context.Context) KafkaMirrorMakerComponentOutput {
	return o
}

func (o KafkaMirrorMakerComponentOutput) Component() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaMirrorMakerComponent) *string { return v.Component }).(pulumi.StringPtrOutput)
}

func (o KafkaMirrorMakerComponentOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaMirrorMakerComponent) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o KafkaMirrorMakerComponentOutput) KafkaAuthenticationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaMirrorMakerComponent) *string { return v.KafkaAuthenticationMethod }).(pulumi.StringPtrOutput)
}

func (o KafkaMirrorMakerComponentOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaMirrorMakerComponent) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o KafkaMirrorMakerComponentOutput) Route() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaMirrorMakerComponent) *string { return v.Route }).(pulumi.StringPtrOutput)
}

func (o KafkaMirrorMakerComponentOutput) Ssl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaMirrorMakerComponent) *bool { return v.Ssl }).(pulumi.BoolPtrOutput)
}

func (o KafkaMirrorMakerComponentOutput) Usage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaMirrorMakerComponent) *string { return v.Usage }).(pulumi.StringPtrOutput)
}

type KafkaMirrorMakerComponentArrayOutput struct{ *pulumi.OutputState }

func (KafkaMirrorMakerComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaMirrorMakerComponent)(nil)).Elem()
}

func (o KafkaMirrorMakerComponentArrayOutput) ToKafkaMirrorMakerComponentArrayOutput() KafkaMirrorMakerComponentArrayOutput {
	return o
}

func (o KafkaMirrorMakerComponentArrayOutput) ToKafkaMirrorMakerComponentArrayOutputWithContext(ctx context.Context) KafkaMirrorMakerComponentArrayOutput {
	return o
}

func (o KafkaMirrorMakerComponentArrayOutput) Index(i pulumi.IntInput) KafkaMirrorMakerComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaMirrorMakerComponent {
		return vs[0].([]KafkaMirrorMakerComponent)[vs[1].(int)]
	}).(KafkaMirrorMakerComponentOutput)
}

type KafkaMirrorMakerKafkaMirrormaker struct {
}

// KafkaMirrorMakerKafkaMirrormakerInput is an input type that accepts KafkaMirrorMakerKafkaMirrormakerArgs and KafkaMirrorMakerKafkaMirrormakerOutput values.
// You can construct a concrete instance of `KafkaMirrorMakerKafkaMirrormakerInput` via:
//
//          KafkaMirrorMakerKafkaMirrormakerArgs{...}
type KafkaMirrorMakerKafkaMirrormakerInput interface {
	pulumi.Input

	ToKafkaMirrorMakerKafkaMirrormakerOutput() KafkaMirrorMakerKafkaMirrormakerOutput
	ToKafkaMirrorMakerKafkaMirrormakerOutputWithContext(context.Context) KafkaMirrorMakerKafkaMirrormakerOutput
}

type KafkaMirrorMakerKafkaMirrormakerArgs struct {
}

func (KafkaMirrorMakerKafkaMirrormakerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaMirrorMakerKafkaMirrormaker)(nil)).Elem()
}

func (i KafkaMirrorMakerKafkaMirrormakerArgs) ToKafkaMirrorMakerKafkaMirrormakerOutput() KafkaMirrorMakerKafkaMirrormakerOutput {
	return i.ToKafkaMirrorMakerKafkaMirrormakerOutputWithContext(context.Background())
}

func (i KafkaMirrorMakerKafkaMirrormakerArgs) ToKafkaMirrorMakerKafkaMirrormakerOutputWithContext(ctx context.Context) KafkaMirrorMakerKafkaMirrormakerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorMakerKafkaMirrormakerOutput)
}

func (i KafkaMirrorMakerKafkaMirrormakerArgs) ToKafkaMirrorMakerKafkaMirrormakerPtrOutput() KafkaMirrorMakerKafkaMirrormakerPtrOutput {
	return i.ToKafkaMirrorMakerKafkaMirrormakerPtrOutputWithContext(context.Background())
}

func (i KafkaMirrorMakerKafkaMirrormakerArgs) ToKafkaMirrorMakerKafkaMirrormakerPtrOutputWithContext(ctx context.Context) KafkaMirrorMakerKafkaMirrormakerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorMakerKafkaMirrormakerOutput).ToKafkaMirrorMakerKafkaMirrormakerPtrOutputWithContext(ctx)
}

// KafkaMirrorMakerKafkaMirrormakerPtrInput is an input type that accepts KafkaMirrorMakerKafkaMirrormakerArgs, KafkaMirrorMakerKafkaMirrormakerPtr and KafkaMirrorMakerKafkaMirrormakerPtrOutput values.
// You can construct a concrete instance of `KafkaMirrorMakerKafkaMirrormakerPtrInput` via:
//
//          KafkaMirrorMakerKafkaMirrormakerArgs{...}
//
//  or:
//
//          nil
type KafkaMirrorMakerKafkaMirrormakerPtrInput interface {
	pulumi.Input

	ToKafkaMirrorMakerKafkaMirrormakerPtrOutput() KafkaMirrorMakerKafkaMirrormakerPtrOutput
	ToKafkaMirrorMakerKafkaMirrormakerPtrOutputWithContext(context.Context) KafkaMirrorMakerKafkaMirrormakerPtrOutput
}

type kafkaMirrorMakerKafkaMirrormakerPtrType KafkaMirrorMakerKafkaMirrormakerArgs

func KafkaMirrorMakerKafkaMirrormakerPtr(v *KafkaMirrorMakerKafkaMirrormakerArgs) KafkaMirrorMakerKafkaMirrormakerPtrInput {
	return (*kafkaMirrorMakerKafkaMirrormakerPtrType)(v)
}

func (*kafkaMirrorMakerKafkaMirrormakerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaMirrorMakerKafkaMirrormaker)(nil)).Elem()
}

func (i *kafkaMirrorMakerKafkaMirrormakerPtrType) ToKafkaMirrorMakerKafkaMirrormakerPtrOutput() KafkaMirrorMakerKafkaMirrormakerPtrOutput {
	return i.ToKafkaMirrorMakerKafkaMirrormakerPtrOutputWithContext(context.Background())
}

func (i *kafkaMirrorMakerKafkaMirrormakerPtrType) ToKafkaMirrorMakerKafkaMirrormakerPtrOutputWithContext(ctx context.Context) KafkaMirrorMakerKafkaMirrormakerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorMakerKafkaMirrormakerPtrOutput)
}

type KafkaMirrorMakerKafkaMirrormakerOutput struct{ *pulumi.OutputState }

func (KafkaMirrorMakerKafkaMirrormakerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaMirrorMakerKafkaMirrormaker)(nil)).Elem()
}

func (o KafkaMirrorMakerKafkaMirrormakerOutput) ToKafkaMirrorMakerKafkaMirrormakerOutput() KafkaMirrorMakerKafkaMirrormakerOutput {
	return o
}

func (o KafkaMirrorMakerKafkaMirrormakerOutput) ToKafkaMirrorMakerKafkaMirrormakerOutputWithContext(ctx context.Context) KafkaMirrorMakerKafkaMirrormakerOutput {
	return o
}

func (o KafkaMirrorMakerKafkaMirrormakerOutput) ToKafkaMirrorMakerKafkaMirrormakerPtrOutput() KafkaMirrorMakerKafkaMirrormakerPtrOutput {
	return o.ToKafkaMirrorMakerKafkaMirrormakerPtrOutputWithContext(context.Background())
}

func (o KafkaMirrorMakerKafkaMirrormakerOutput) ToKafkaMirrorMakerKafkaMirrormakerPtrOutputWithContext(ctx context.Context) KafkaMirrorMakerKafkaMirrormakerPtrOutput {
	return o.ApplyT(func(v KafkaMirrorMakerKafkaMirrormaker) *KafkaMirrorMakerKafkaMirrormaker {
		return &v
	}).(KafkaMirrorMakerKafkaMirrormakerPtrOutput)
}

type KafkaMirrorMakerKafkaMirrormakerPtrOutput struct{ *pulumi.OutputState }

func (KafkaMirrorMakerKafkaMirrormakerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaMirrorMakerKafkaMirrormaker)(nil)).Elem()
}

func (o KafkaMirrorMakerKafkaMirrormakerPtrOutput) ToKafkaMirrorMakerKafkaMirrormakerPtrOutput() KafkaMirrorMakerKafkaMirrormakerPtrOutput {
	return o
}

func (o KafkaMirrorMakerKafkaMirrormakerPtrOutput) ToKafkaMirrorMakerKafkaMirrormakerPtrOutputWithContext(ctx context.Context) KafkaMirrorMakerKafkaMirrormakerPtrOutput {
	return o
}

func (o KafkaMirrorMakerKafkaMirrormakerPtrOutput) Elem() KafkaMirrorMakerKafkaMirrormakerOutput {
	return o.ApplyT(func(v *KafkaMirrorMakerKafkaMirrormaker) KafkaMirrorMakerKafkaMirrormaker { return *v }).(KafkaMirrorMakerKafkaMirrormakerOutput)
}

type KafkaMirrorMakerKafkaMirrormakerUserConfig struct {
	// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters []string `pulumi:"ipFilters"`
	// Kafka MirrorMaker configuration values
	KafkaMirrormaker *KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker `pulumi:"kafkaMirrormaker"`
}

// KafkaMirrorMakerKafkaMirrormakerUserConfigInput is an input type that accepts KafkaMirrorMakerKafkaMirrormakerUserConfigArgs and KafkaMirrorMakerKafkaMirrormakerUserConfigOutput values.
// You can construct a concrete instance of `KafkaMirrorMakerKafkaMirrormakerUserConfigInput` via:
//
//          KafkaMirrorMakerKafkaMirrormakerUserConfigArgs{...}
type KafkaMirrorMakerKafkaMirrormakerUserConfigInput interface {
	pulumi.Input

	ToKafkaMirrorMakerKafkaMirrormakerUserConfigOutput() KafkaMirrorMakerKafkaMirrormakerUserConfigOutput
	ToKafkaMirrorMakerKafkaMirrormakerUserConfigOutputWithContext(context.Context) KafkaMirrorMakerKafkaMirrormakerUserConfigOutput
}

type KafkaMirrorMakerKafkaMirrormakerUserConfigArgs struct {
	// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// Kafka MirrorMaker configuration values
	KafkaMirrormaker KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrInput `pulumi:"kafkaMirrormaker"`
}

func (KafkaMirrorMakerKafkaMirrormakerUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaMirrorMakerKafkaMirrormakerUserConfig)(nil)).Elem()
}

func (i KafkaMirrorMakerKafkaMirrormakerUserConfigArgs) ToKafkaMirrorMakerKafkaMirrormakerUserConfigOutput() KafkaMirrorMakerKafkaMirrormakerUserConfigOutput {
	return i.ToKafkaMirrorMakerKafkaMirrormakerUserConfigOutputWithContext(context.Background())
}

func (i KafkaMirrorMakerKafkaMirrormakerUserConfigArgs) ToKafkaMirrorMakerKafkaMirrormakerUserConfigOutputWithContext(ctx context.Context) KafkaMirrorMakerKafkaMirrormakerUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorMakerKafkaMirrormakerUserConfigOutput)
}

func (i KafkaMirrorMakerKafkaMirrormakerUserConfigArgs) ToKafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput() KafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput {
	return i.ToKafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutputWithContext(context.Background())
}

func (i KafkaMirrorMakerKafkaMirrormakerUserConfigArgs) ToKafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutputWithContext(ctx context.Context) KafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorMakerKafkaMirrormakerUserConfigOutput).ToKafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutputWithContext(ctx)
}

// KafkaMirrorMakerKafkaMirrormakerUserConfigPtrInput is an input type that accepts KafkaMirrorMakerKafkaMirrormakerUserConfigArgs, KafkaMirrorMakerKafkaMirrormakerUserConfigPtr and KafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput values.
// You can construct a concrete instance of `KafkaMirrorMakerKafkaMirrormakerUserConfigPtrInput` via:
//
//          KafkaMirrorMakerKafkaMirrormakerUserConfigArgs{...}
//
//  or:
//
//          nil
type KafkaMirrorMakerKafkaMirrormakerUserConfigPtrInput interface {
	pulumi.Input

	ToKafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput() KafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput
	ToKafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutputWithContext(context.Context) KafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput
}

type kafkaMirrorMakerKafkaMirrormakerUserConfigPtrType KafkaMirrorMakerKafkaMirrormakerUserConfigArgs

func KafkaMirrorMakerKafkaMirrormakerUserConfigPtr(v *KafkaMirrorMakerKafkaMirrormakerUserConfigArgs) KafkaMirrorMakerKafkaMirrormakerUserConfigPtrInput {
	return (*kafkaMirrorMakerKafkaMirrormakerUserConfigPtrType)(v)
}

func (*kafkaMirrorMakerKafkaMirrormakerUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaMirrorMakerKafkaMirrormakerUserConfig)(nil)).Elem()
}

func (i *kafkaMirrorMakerKafkaMirrormakerUserConfigPtrType) ToKafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput() KafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput {
	return i.ToKafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutputWithContext(context.Background())
}

func (i *kafkaMirrorMakerKafkaMirrormakerUserConfigPtrType) ToKafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutputWithContext(ctx context.Context) KafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput)
}

type KafkaMirrorMakerKafkaMirrormakerUserConfigOutput struct{ *pulumi.OutputState }

func (KafkaMirrorMakerKafkaMirrormakerUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaMirrorMakerKafkaMirrormakerUserConfig)(nil)).Elem()
}

func (o KafkaMirrorMakerKafkaMirrormakerUserConfigOutput) ToKafkaMirrorMakerKafkaMirrormakerUserConfigOutput() KafkaMirrorMakerKafkaMirrormakerUserConfigOutput {
	return o
}

func (o KafkaMirrorMakerKafkaMirrormakerUserConfigOutput) ToKafkaMirrorMakerKafkaMirrormakerUserConfigOutputWithContext(ctx context.Context) KafkaMirrorMakerKafkaMirrormakerUserConfigOutput {
	return o
}

func (o KafkaMirrorMakerKafkaMirrormakerUserConfigOutput) ToKafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput() KafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput {
	return o.ToKafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutputWithContext(context.Background())
}

func (o KafkaMirrorMakerKafkaMirrormakerUserConfigOutput) ToKafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutputWithContext(ctx context.Context) KafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput {
	return o.ApplyT(func(v KafkaMirrorMakerKafkaMirrormakerUserConfig) *KafkaMirrorMakerKafkaMirrormakerUserConfig {
		return &v
	}).(KafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput)
}

// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
func (o KafkaMirrorMakerKafkaMirrormakerUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaMirrorMakerKafkaMirrormakerUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// Kafka MirrorMaker configuration values
func (o KafkaMirrorMakerKafkaMirrormakerUserConfigOutput) KafkaMirrormaker() KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return o.ApplyT(func(v KafkaMirrorMakerKafkaMirrormakerUserConfig) *KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker {
		return v.KafkaMirrormaker
	}).(KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput)
}

type KafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput struct{ *pulumi.OutputState }

func (KafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaMirrorMakerKafkaMirrormakerUserConfig)(nil)).Elem()
}

func (o KafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput) ToKafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput() KafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput {
	return o
}

func (o KafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput) ToKafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutputWithContext(ctx context.Context) KafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput {
	return o
}

func (o KafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput) Elem() KafkaMirrorMakerKafkaMirrormakerUserConfigOutput {
	return o.ApplyT(func(v *KafkaMirrorMakerKafkaMirrormakerUserConfig) KafkaMirrorMakerKafkaMirrormakerUserConfig {
		return *v
	}).(KafkaMirrorMakerKafkaMirrormakerUserConfigOutput)
}

// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
func (o KafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaMirrorMakerKafkaMirrormakerUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

// Kafka MirrorMaker configuration values
func (o KafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput) KafkaMirrormaker() KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorMakerKafkaMirrormakerUserConfig) *KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker {
		if v == nil {
			return nil
		}
		return v.KafkaMirrormaker
	}).(KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput)
}

type KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker struct {
	// Whether to periodically write the translated offsets
	// of replicated consumer groups (in the source cluster) to __consumer_offsets topic in target cluster,
	// as long as no active consumers in that group are connected to the target cluster.
	EmitCheckpointsEnabled         *string `pulumi:"emitCheckpointsEnabled"`
	EmitCheckpointsIntervalSeconds *string `pulumi:"emitCheckpointsIntervalSeconds"`
	// Whether to periodically check for new consumer groups.
	// Defaults to 'true'.
	RefreshGroupsEnabled *string `pulumi:"refreshGroupsEnabled"`
	// Whether to periodically check for new topics and
	// partitions. Defaults to 'true'.
	RefreshGroupsIntervalSeconds *string `pulumi:"refreshGroupsIntervalSeconds"`
	RefreshTopicsEnabled         *string `pulumi:"refreshTopicsEnabled"`
	// Frequency of topic and partitions refresh in
	// seconds. Defaults to 600 seconds (10 minutes).
	RefreshTopicsIntervalSeconds *string `pulumi:"refreshTopicsIntervalSeconds"`
	SyncGroupOffsetsEnabled      *string `pulumi:"syncGroupOffsetsEnabled"`
	// Frequency at which consumer group offsets
	// are synced (default: 60, every minute).
	SyncGroupOffsetsIntervalSeconds *string `pulumi:"syncGroupOffsetsIntervalSeconds"`
}

// KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerInput is an input type that accepts KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs and KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput values.
// You can construct a concrete instance of `KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerInput` via:
//
//          KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs{...}
type KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerInput interface {
	pulumi.Input

	ToKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput() KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput
	ToKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutputWithContext(context.Context) KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput
}

type KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs struct {
	// Whether to periodically write the translated offsets
	// of replicated consumer groups (in the source cluster) to __consumer_offsets topic in target cluster,
	// as long as no active consumers in that group are connected to the target cluster.
	EmitCheckpointsEnabled         pulumi.StringPtrInput `pulumi:"emitCheckpointsEnabled"`
	EmitCheckpointsIntervalSeconds pulumi.StringPtrInput `pulumi:"emitCheckpointsIntervalSeconds"`
	// Whether to periodically check for new consumer groups.
	// Defaults to 'true'.
	RefreshGroupsEnabled pulumi.StringPtrInput `pulumi:"refreshGroupsEnabled"`
	// Whether to periodically check for new topics and
	// partitions. Defaults to 'true'.
	RefreshGroupsIntervalSeconds pulumi.StringPtrInput `pulumi:"refreshGroupsIntervalSeconds"`
	RefreshTopicsEnabled         pulumi.StringPtrInput `pulumi:"refreshTopicsEnabled"`
	// Frequency of topic and partitions refresh in
	// seconds. Defaults to 600 seconds (10 minutes).
	RefreshTopicsIntervalSeconds pulumi.StringPtrInput `pulumi:"refreshTopicsIntervalSeconds"`
	SyncGroupOffsetsEnabled      pulumi.StringPtrInput `pulumi:"syncGroupOffsetsEnabled"`
	// Frequency at which consumer group offsets
	// are synced (default: 60, every minute).
	SyncGroupOffsetsIntervalSeconds pulumi.StringPtrInput `pulumi:"syncGroupOffsetsIntervalSeconds"`
}

func (KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker)(nil)).Elem()
}

func (i KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs) ToKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput() KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput {
	return i.ToKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutputWithContext(context.Background())
}

func (i KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs) ToKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutputWithContext(ctx context.Context) KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput)
}

func (i KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs) ToKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput() KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return i.ToKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(context.Background())
}

func (i KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs) ToKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(ctx context.Context) KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput).ToKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(ctx)
}

// KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrInput is an input type that accepts KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs, KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtr and KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput values.
// You can construct a concrete instance of `KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrInput` via:
//
//          KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs{...}
//
//  or:
//
//          nil
type KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrInput interface {
	pulumi.Input

	ToKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput() KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput
	ToKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(context.Context) KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput
}

type kafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrType KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs

func KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtr(v *KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs) KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrInput {
	return (*kafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrType)(v)
}

func (*kafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker)(nil)).Elem()
}

func (i *kafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrType) ToKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput() KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return i.ToKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(context.Background())
}

func (i *kafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrType) ToKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(ctx context.Context) KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput)
}

type KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput struct{ *pulumi.OutputState }

func (KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker)(nil)).Elem()
}

func (o KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput) ToKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput() KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput {
	return o
}

func (o KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput) ToKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutputWithContext(ctx context.Context) KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput {
	return o
}

func (o KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput) ToKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput() KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return o.ToKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(context.Background())
}

func (o KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput) ToKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(ctx context.Context) KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return o.ApplyT(func(v KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker {
		return &v
	}).(KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput)
}

// Whether to periodically write the translated offsets
// of replicated consumer groups (in the source cluster) to __consumer_offsets topic in target cluster,
// as long as no active consumers in that group are connected to the target cluster.
func (o KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput) EmitCheckpointsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		return v.EmitCheckpointsEnabled
	}).(pulumi.StringPtrOutput)
}

func (o KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput) EmitCheckpointsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		return v.EmitCheckpointsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

// Whether to periodically check for new consumer groups.
// Defaults to 'true'.
func (o KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput) RefreshGroupsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		return v.RefreshGroupsEnabled
	}).(pulumi.StringPtrOutput)
}

// Whether to periodically check for new topics and
// partitions. Defaults to 'true'.
func (o KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput) RefreshGroupsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		return v.RefreshGroupsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

func (o KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput) RefreshTopicsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		return v.RefreshTopicsEnabled
	}).(pulumi.StringPtrOutput)
}

// Frequency of topic and partitions refresh in
// seconds. Defaults to 600 seconds (10 minutes).
func (o KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput) RefreshTopicsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		return v.RefreshTopicsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

func (o KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput) SyncGroupOffsetsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		return v.SyncGroupOffsetsEnabled
	}).(pulumi.StringPtrOutput)
}

// Frequency at which consumer group offsets
// are synced (default: 60, every minute).
func (o KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput) SyncGroupOffsetsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		return v.SyncGroupOffsetsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

type KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput struct{ *pulumi.OutputState }

func (KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker)(nil)).Elem()
}

func (o KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) ToKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput() KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return o
}

func (o KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) ToKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(ctx context.Context) KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return o
}

func (o KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) Elem() KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput {
	return o.ApplyT(func(v *KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker {
		return *v
	}).(KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput)
}

// Whether to periodically write the translated offsets
// of replicated consumer groups (in the source cluster) to __consumer_offsets topic in target cluster,
// as long as no active consumers in that group are connected to the target cluster.
func (o KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) EmitCheckpointsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.EmitCheckpointsEnabled
	}).(pulumi.StringPtrOutput)
}

func (o KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) EmitCheckpointsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.EmitCheckpointsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

// Whether to periodically check for new consumer groups.
// Defaults to 'true'.
func (o KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) RefreshGroupsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.RefreshGroupsEnabled
	}).(pulumi.StringPtrOutput)
}

// Whether to periodically check for new topics and
// partitions. Defaults to 'true'.
func (o KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) RefreshGroupsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.RefreshGroupsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

func (o KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) RefreshTopicsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.RefreshTopicsEnabled
	}).(pulumi.StringPtrOutput)
}

// Frequency of topic and partitions refresh in
// seconds. Defaults to 600 seconds (10 minutes).
func (o KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) RefreshTopicsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.RefreshTopicsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

func (o KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) SyncGroupOffsetsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.SyncGroupOffsetsEnabled
	}).(pulumi.StringPtrOutput)
}

// Frequency at which consumer group offsets
// are synced (default: 60, every minute).
func (o KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) SyncGroupOffsetsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.SyncGroupOffsetsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

type KafkaMirrorMakerServiceIntegration struct {
	IntegrationType   string `pulumi:"integrationType"`
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// KafkaMirrorMakerServiceIntegrationInput is an input type that accepts KafkaMirrorMakerServiceIntegrationArgs and KafkaMirrorMakerServiceIntegrationOutput values.
// You can construct a concrete instance of `KafkaMirrorMakerServiceIntegrationInput` via:
//
//          KafkaMirrorMakerServiceIntegrationArgs{...}
type KafkaMirrorMakerServiceIntegrationInput interface {
	pulumi.Input

	ToKafkaMirrorMakerServiceIntegrationOutput() KafkaMirrorMakerServiceIntegrationOutput
	ToKafkaMirrorMakerServiceIntegrationOutputWithContext(context.Context) KafkaMirrorMakerServiceIntegrationOutput
}

type KafkaMirrorMakerServiceIntegrationArgs struct {
	IntegrationType   pulumi.StringInput `pulumi:"integrationType"`
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (KafkaMirrorMakerServiceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaMirrorMakerServiceIntegration)(nil)).Elem()
}

func (i KafkaMirrorMakerServiceIntegrationArgs) ToKafkaMirrorMakerServiceIntegrationOutput() KafkaMirrorMakerServiceIntegrationOutput {
	return i.ToKafkaMirrorMakerServiceIntegrationOutputWithContext(context.Background())
}

func (i KafkaMirrorMakerServiceIntegrationArgs) ToKafkaMirrorMakerServiceIntegrationOutputWithContext(ctx context.Context) KafkaMirrorMakerServiceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorMakerServiceIntegrationOutput)
}

// KafkaMirrorMakerServiceIntegrationArrayInput is an input type that accepts KafkaMirrorMakerServiceIntegrationArray and KafkaMirrorMakerServiceIntegrationArrayOutput values.
// You can construct a concrete instance of `KafkaMirrorMakerServiceIntegrationArrayInput` via:
//
//          KafkaMirrorMakerServiceIntegrationArray{ KafkaMirrorMakerServiceIntegrationArgs{...} }
type KafkaMirrorMakerServiceIntegrationArrayInput interface {
	pulumi.Input

	ToKafkaMirrorMakerServiceIntegrationArrayOutput() KafkaMirrorMakerServiceIntegrationArrayOutput
	ToKafkaMirrorMakerServiceIntegrationArrayOutputWithContext(context.Context) KafkaMirrorMakerServiceIntegrationArrayOutput
}

type KafkaMirrorMakerServiceIntegrationArray []KafkaMirrorMakerServiceIntegrationInput

func (KafkaMirrorMakerServiceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaMirrorMakerServiceIntegration)(nil)).Elem()
}

func (i KafkaMirrorMakerServiceIntegrationArray) ToKafkaMirrorMakerServiceIntegrationArrayOutput() KafkaMirrorMakerServiceIntegrationArrayOutput {
	return i.ToKafkaMirrorMakerServiceIntegrationArrayOutputWithContext(context.Background())
}

func (i KafkaMirrorMakerServiceIntegrationArray) ToKafkaMirrorMakerServiceIntegrationArrayOutputWithContext(ctx context.Context) KafkaMirrorMakerServiceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorMakerServiceIntegrationArrayOutput)
}

type KafkaMirrorMakerServiceIntegrationOutput struct{ *pulumi.OutputState }

func (KafkaMirrorMakerServiceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaMirrorMakerServiceIntegration)(nil)).Elem()
}

func (o KafkaMirrorMakerServiceIntegrationOutput) ToKafkaMirrorMakerServiceIntegrationOutput() KafkaMirrorMakerServiceIntegrationOutput {
	return o
}

func (o KafkaMirrorMakerServiceIntegrationOutput) ToKafkaMirrorMakerServiceIntegrationOutputWithContext(ctx context.Context) KafkaMirrorMakerServiceIntegrationOutput {
	return o
}

func (o KafkaMirrorMakerServiceIntegrationOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaMirrorMakerServiceIntegration) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o KafkaMirrorMakerServiceIntegrationOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaMirrorMakerServiceIntegration) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

type KafkaMirrorMakerServiceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (KafkaMirrorMakerServiceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaMirrorMakerServiceIntegration)(nil)).Elem()
}

func (o KafkaMirrorMakerServiceIntegrationArrayOutput) ToKafkaMirrorMakerServiceIntegrationArrayOutput() KafkaMirrorMakerServiceIntegrationArrayOutput {
	return o
}

func (o KafkaMirrorMakerServiceIntegrationArrayOutput) ToKafkaMirrorMakerServiceIntegrationArrayOutputWithContext(ctx context.Context) KafkaMirrorMakerServiceIntegrationArrayOutput {
	return o
}

func (o KafkaMirrorMakerServiceIntegrationArrayOutput) Index(i pulumi.IntInput) KafkaMirrorMakerServiceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaMirrorMakerServiceIntegration {
		return vs[0].([]KafkaMirrorMakerServiceIntegration)[vs[1].(int)]
	}).(KafkaMirrorMakerServiceIntegrationOutput)
}

type KafkaServiceIntegration struct {
	IntegrationType   string `pulumi:"integrationType"`
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// KafkaServiceIntegrationInput is an input type that accepts KafkaServiceIntegrationArgs and KafkaServiceIntegrationOutput values.
// You can construct a concrete instance of `KafkaServiceIntegrationInput` via:
//
//          KafkaServiceIntegrationArgs{...}
type KafkaServiceIntegrationInput interface {
	pulumi.Input

	ToKafkaServiceIntegrationOutput() KafkaServiceIntegrationOutput
	ToKafkaServiceIntegrationOutputWithContext(context.Context) KafkaServiceIntegrationOutput
}

type KafkaServiceIntegrationArgs struct {
	IntegrationType   pulumi.StringInput `pulumi:"integrationType"`
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (KafkaServiceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaServiceIntegration)(nil)).Elem()
}

func (i KafkaServiceIntegrationArgs) ToKafkaServiceIntegrationOutput() KafkaServiceIntegrationOutput {
	return i.ToKafkaServiceIntegrationOutputWithContext(context.Background())
}

func (i KafkaServiceIntegrationArgs) ToKafkaServiceIntegrationOutputWithContext(ctx context.Context) KafkaServiceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaServiceIntegrationOutput)
}

// KafkaServiceIntegrationArrayInput is an input type that accepts KafkaServiceIntegrationArray and KafkaServiceIntegrationArrayOutput values.
// You can construct a concrete instance of `KafkaServiceIntegrationArrayInput` via:
//
//          KafkaServiceIntegrationArray{ KafkaServiceIntegrationArgs{...} }
type KafkaServiceIntegrationArrayInput interface {
	pulumi.Input

	ToKafkaServiceIntegrationArrayOutput() KafkaServiceIntegrationArrayOutput
	ToKafkaServiceIntegrationArrayOutputWithContext(context.Context) KafkaServiceIntegrationArrayOutput
}

type KafkaServiceIntegrationArray []KafkaServiceIntegrationInput

func (KafkaServiceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaServiceIntegration)(nil)).Elem()
}

func (i KafkaServiceIntegrationArray) ToKafkaServiceIntegrationArrayOutput() KafkaServiceIntegrationArrayOutput {
	return i.ToKafkaServiceIntegrationArrayOutputWithContext(context.Background())
}

func (i KafkaServiceIntegrationArray) ToKafkaServiceIntegrationArrayOutputWithContext(ctx context.Context) KafkaServiceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaServiceIntegrationArrayOutput)
}

type KafkaServiceIntegrationOutput struct{ *pulumi.OutputState }

func (KafkaServiceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaServiceIntegration)(nil)).Elem()
}

func (o KafkaServiceIntegrationOutput) ToKafkaServiceIntegrationOutput() KafkaServiceIntegrationOutput {
	return o
}

func (o KafkaServiceIntegrationOutput) ToKafkaServiceIntegrationOutputWithContext(ctx context.Context) KafkaServiceIntegrationOutput {
	return o
}

func (o KafkaServiceIntegrationOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaServiceIntegration) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o KafkaServiceIntegrationOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaServiceIntegration) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

type KafkaServiceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (KafkaServiceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaServiceIntegration)(nil)).Elem()
}

func (o KafkaServiceIntegrationArrayOutput) ToKafkaServiceIntegrationArrayOutput() KafkaServiceIntegrationArrayOutput {
	return o
}

func (o KafkaServiceIntegrationArrayOutput) ToKafkaServiceIntegrationArrayOutputWithContext(ctx context.Context) KafkaServiceIntegrationArrayOutput {
	return o
}

func (o KafkaServiceIntegrationArrayOutput) Index(i pulumi.IntInput) KafkaServiceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaServiceIntegration {
		return vs[0].([]KafkaServiceIntegration)[vs[1].(int)]
	}).(KafkaServiceIntegrationOutput)
}

type KafkaTopicConfig struct {
	// cleanup.policy value, can be `create`, `delete` or `compact,delete`
	CleanupPolicy *string `pulumi:"cleanupPolicy"`
	// compression.type value
	CompressionType *string `pulumi:"compressionType"`
	// delete.retention.ms value
	DeleteRetentionMs *string `pulumi:"deleteRetentionMs"`
	// file.delete.delay.ms value
	FileDeleteDelayMs *string `pulumi:"fileDeleteDelayMs"`
	// flush.messages value
	FlushMessages *string `pulumi:"flushMessages"`
	// flush.ms value
	FlushMs *string `pulumi:"flushMs"`
	// index.interval.bytes value
	IndexIntervalBytes *string `pulumi:"indexIntervalBytes"`
	// max.compaction.lag.ms value
	MaxCompactionLagMs *string `pulumi:"maxCompactionLagMs"`
	// max.message.bytes value
	MaxMessageBytes *string `pulumi:"maxMessageBytes"`
	// message.downconversion.enable value
	MessageDownconversionEnable *string `pulumi:"messageDownconversionEnable"`
	// message.format.version value
	MessageFormatVersion *string `pulumi:"messageFormatVersion"`
	// message.timestamp.difference.max.ms value
	MessageTimestampDifferenceMaxMs *string `pulumi:"messageTimestampDifferenceMaxMs"`
	// message.timestamp.type value
	MessageTimestampType *string `pulumi:"messageTimestampType"`
	// min.cleanable.dirty.ratio value
	MinCleanableDirtyRatio *string `pulumi:"minCleanableDirtyRatio"`
	// min.compaction.lag.ms value
	MinCompactionLagMs *string `pulumi:"minCompactionLagMs"`
	// min.insync.replicas value
	MinInsyncReplicas *string `pulumi:"minInsyncReplicas"`
	// preallocate value
	Preallocate *string `pulumi:"preallocate"`
	// retention.bytes value
	RetentionBytes *string `pulumi:"retentionBytes"`
	// retention.ms value
	RetentionMs *string `pulumi:"retentionMs"`
	// segment.bytes value
	SegmentBytes *string `pulumi:"segmentBytes"`
	// segment.index.bytes value
	SegmentIndexBytes *string `pulumi:"segmentIndexBytes"`
	// segment.jitter.ms value
	SegmentJitterMs *string `pulumi:"segmentJitterMs"`
	// segment.ms value
	SegmentMs *string `pulumi:"segmentMs"`
	// unclean.leader.election.enable value
	UncleanLeaderElectionEnable *string `pulumi:"uncleanLeaderElectionEnable"`
}

// KafkaTopicConfigInput is an input type that accepts KafkaTopicConfigArgs and KafkaTopicConfigOutput values.
// You can construct a concrete instance of `KafkaTopicConfigInput` via:
//
//          KafkaTopicConfigArgs{...}
type KafkaTopicConfigInput interface {
	pulumi.Input

	ToKafkaTopicConfigOutput() KafkaTopicConfigOutput
	ToKafkaTopicConfigOutputWithContext(context.Context) KafkaTopicConfigOutput
}

type KafkaTopicConfigArgs struct {
	// cleanup.policy value, can be `create`, `delete` or `compact,delete`
	CleanupPolicy pulumi.StringPtrInput `pulumi:"cleanupPolicy"`
	// compression.type value
	CompressionType pulumi.StringPtrInput `pulumi:"compressionType"`
	// delete.retention.ms value
	DeleteRetentionMs pulumi.StringPtrInput `pulumi:"deleteRetentionMs"`
	// file.delete.delay.ms value
	FileDeleteDelayMs pulumi.StringPtrInput `pulumi:"fileDeleteDelayMs"`
	// flush.messages value
	FlushMessages pulumi.StringPtrInput `pulumi:"flushMessages"`
	// flush.ms value
	FlushMs pulumi.StringPtrInput `pulumi:"flushMs"`
	// index.interval.bytes value
	IndexIntervalBytes pulumi.StringPtrInput `pulumi:"indexIntervalBytes"`
	// max.compaction.lag.ms value
	MaxCompactionLagMs pulumi.StringPtrInput `pulumi:"maxCompactionLagMs"`
	// max.message.bytes value
	MaxMessageBytes pulumi.StringPtrInput `pulumi:"maxMessageBytes"`
	// message.downconversion.enable value
	MessageDownconversionEnable pulumi.StringPtrInput `pulumi:"messageDownconversionEnable"`
	// message.format.version value
	MessageFormatVersion pulumi.StringPtrInput `pulumi:"messageFormatVersion"`
	// message.timestamp.difference.max.ms value
	MessageTimestampDifferenceMaxMs pulumi.StringPtrInput `pulumi:"messageTimestampDifferenceMaxMs"`
	// message.timestamp.type value
	MessageTimestampType pulumi.StringPtrInput `pulumi:"messageTimestampType"`
	// min.cleanable.dirty.ratio value
	MinCleanableDirtyRatio pulumi.StringPtrInput `pulumi:"minCleanableDirtyRatio"`
	// min.compaction.lag.ms value
	MinCompactionLagMs pulumi.StringPtrInput `pulumi:"minCompactionLagMs"`
	// min.insync.replicas value
	MinInsyncReplicas pulumi.StringPtrInput `pulumi:"minInsyncReplicas"`
	// preallocate value
	Preallocate pulumi.StringPtrInput `pulumi:"preallocate"`
	// retention.bytes value
	RetentionBytes pulumi.StringPtrInput `pulumi:"retentionBytes"`
	// retention.ms value
	RetentionMs pulumi.StringPtrInput `pulumi:"retentionMs"`
	// segment.bytes value
	SegmentBytes pulumi.StringPtrInput `pulumi:"segmentBytes"`
	// segment.index.bytes value
	SegmentIndexBytes pulumi.StringPtrInput `pulumi:"segmentIndexBytes"`
	// segment.jitter.ms value
	SegmentJitterMs pulumi.StringPtrInput `pulumi:"segmentJitterMs"`
	// segment.ms value
	SegmentMs pulumi.StringPtrInput `pulumi:"segmentMs"`
	// unclean.leader.election.enable value
	UncleanLeaderElectionEnable pulumi.StringPtrInput `pulumi:"uncleanLeaderElectionEnable"`
}

func (KafkaTopicConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicConfig)(nil)).Elem()
}

func (i KafkaTopicConfigArgs) ToKafkaTopicConfigOutput() KafkaTopicConfigOutput {
	return i.ToKafkaTopicConfigOutputWithContext(context.Background())
}

func (i KafkaTopicConfigArgs) ToKafkaTopicConfigOutputWithContext(ctx context.Context) KafkaTopicConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicConfigOutput)
}

func (i KafkaTopicConfigArgs) ToKafkaTopicConfigPtrOutput() KafkaTopicConfigPtrOutput {
	return i.ToKafkaTopicConfigPtrOutputWithContext(context.Background())
}

func (i KafkaTopicConfigArgs) ToKafkaTopicConfigPtrOutputWithContext(ctx context.Context) KafkaTopicConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicConfigOutput).ToKafkaTopicConfigPtrOutputWithContext(ctx)
}

// KafkaTopicConfigPtrInput is an input type that accepts KafkaTopicConfigArgs, KafkaTopicConfigPtr and KafkaTopicConfigPtrOutput values.
// You can construct a concrete instance of `KafkaTopicConfigPtrInput` via:
//
//          KafkaTopicConfigArgs{...}
//
//  or:
//
//          nil
type KafkaTopicConfigPtrInput interface {
	pulumi.Input

	ToKafkaTopicConfigPtrOutput() KafkaTopicConfigPtrOutput
	ToKafkaTopicConfigPtrOutputWithContext(context.Context) KafkaTopicConfigPtrOutput
}

type kafkaTopicConfigPtrType KafkaTopicConfigArgs

func KafkaTopicConfigPtr(v *KafkaTopicConfigArgs) KafkaTopicConfigPtrInput {
	return (*kafkaTopicConfigPtrType)(v)
}

func (*kafkaTopicConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTopicConfig)(nil)).Elem()
}

func (i *kafkaTopicConfigPtrType) ToKafkaTopicConfigPtrOutput() KafkaTopicConfigPtrOutput {
	return i.ToKafkaTopicConfigPtrOutputWithContext(context.Background())
}

func (i *kafkaTopicConfigPtrType) ToKafkaTopicConfigPtrOutputWithContext(ctx context.Context) KafkaTopicConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicConfigPtrOutput)
}

type KafkaTopicConfigOutput struct{ *pulumi.OutputState }

func (KafkaTopicConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicConfig)(nil)).Elem()
}

func (o KafkaTopicConfigOutput) ToKafkaTopicConfigOutput() KafkaTopicConfigOutput {
	return o
}

func (o KafkaTopicConfigOutput) ToKafkaTopicConfigOutputWithContext(ctx context.Context) KafkaTopicConfigOutput {
	return o
}

func (o KafkaTopicConfigOutput) ToKafkaTopicConfigPtrOutput() KafkaTopicConfigPtrOutput {
	return o.ToKafkaTopicConfigPtrOutputWithContext(context.Background())
}

func (o KafkaTopicConfigOutput) ToKafkaTopicConfigPtrOutputWithContext(ctx context.Context) KafkaTopicConfigPtrOutput {
	return o.ApplyT(func(v KafkaTopicConfig) *KafkaTopicConfig {
		return &v
	}).(KafkaTopicConfigPtrOutput)
}

// cleanup.policy value, can be `create`, `delete` or `compact,delete`
func (o KafkaTopicConfigOutput) CleanupPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicConfig) *string { return v.CleanupPolicy }).(pulumi.StringPtrOutput)
}

// compression.type value
func (o KafkaTopicConfigOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicConfig) *string { return v.CompressionType }).(pulumi.StringPtrOutput)
}

// delete.retention.ms value
func (o KafkaTopicConfigOutput) DeleteRetentionMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicConfig) *string { return v.DeleteRetentionMs }).(pulumi.StringPtrOutput)
}

// file.delete.delay.ms value
func (o KafkaTopicConfigOutput) FileDeleteDelayMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicConfig) *string { return v.FileDeleteDelayMs }).(pulumi.StringPtrOutput)
}

// flush.messages value
func (o KafkaTopicConfigOutput) FlushMessages() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicConfig) *string { return v.FlushMessages }).(pulumi.StringPtrOutput)
}

// flush.ms value
func (o KafkaTopicConfigOutput) FlushMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicConfig) *string { return v.FlushMs }).(pulumi.StringPtrOutput)
}

// index.interval.bytes value
func (o KafkaTopicConfigOutput) IndexIntervalBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicConfig) *string { return v.IndexIntervalBytes }).(pulumi.StringPtrOutput)
}

// max.compaction.lag.ms value
func (o KafkaTopicConfigOutput) MaxCompactionLagMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicConfig) *string { return v.MaxCompactionLagMs }).(pulumi.StringPtrOutput)
}

// max.message.bytes value
func (o KafkaTopicConfigOutput) MaxMessageBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicConfig) *string { return v.MaxMessageBytes }).(pulumi.StringPtrOutput)
}

// message.downconversion.enable value
func (o KafkaTopicConfigOutput) MessageDownconversionEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicConfig) *string { return v.MessageDownconversionEnable }).(pulumi.StringPtrOutput)
}

// message.format.version value
func (o KafkaTopicConfigOutput) MessageFormatVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicConfig) *string { return v.MessageFormatVersion }).(pulumi.StringPtrOutput)
}

// message.timestamp.difference.max.ms value
func (o KafkaTopicConfigOutput) MessageTimestampDifferenceMaxMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicConfig) *string { return v.MessageTimestampDifferenceMaxMs }).(pulumi.StringPtrOutput)
}

// message.timestamp.type value
func (o KafkaTopicConfigOutput) MessageTimestampType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicConfig) *string { return v.MessageTimestampType }).(pulumi.StringPtrOutput)
}

// min.cleanable.dirty.ratio value
func (o KafkaTopicConfigOutput) MinCleanableDirtyRatio() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicConfig) *string { return v.MinCleanableDirtyRatio }).(pulumi.StringPtrOutput)
}

// min.compaction.lag.ms value
func (o KafkaTopicConfigOutput) MinCompactionLagMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicConfig) *string { return v.MinCompactionLagMs }).(pulumi.StringPtrOutput)
}

// min.insync.replicas value
func (o KafkaTopicConfigOutput) MinInsyncReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicConfig) *string { return v.MinInsyncReplicas }).(pulumi.StringPtrOutput)
}

// preallocate value
func (o KafkaTopicConfigOutput) Preallocate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicConfig) *string { return v.Preallocate }).(pulumi.StringPtrOutput)
}

// retention.bytes value
func (o KafkaTopicConfigOutput) RetentionBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicConfig) *string { return v.RetentionBytes }).(pulumi.StringPtrOutput)
}

// retention.ms value
func (o KafkaTopicConfigOutput) RetentionMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicConfig) *string { return v.RetentionMs }).(pulumi.StringPtrOutput)
}

// segment.bytes value
func (o KafkaTopicConfigOutput) SegmentBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicConfig) *string { return v.SegmentBytes }).(pulumi.StringPtrOutput)
}

// segment.index.bytes value
func (o KafkaTopicConfigOutput) SegmentIndexBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicConfig) *string { return v.SegmentIndexBytes }).(pulumi.StringPtrOutput)
}

// segment.jitter.ms value
func (o KafkaTopicConfigOutput) SegmentJitterMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicConfig) *string { return v.SegmentJitterMs }).(pulumi.StringPtrOutput)
}

// segment.ms value
func (o KafkaTopicConfigOutput) SegmentMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicConfig) *string { return v.SegmentMs }).(pulumi.StringPtrOutput)
}

// unclean.leader.election.enable value
func (o KafkaTopicConfigOutput) UncleanLeaderElectionEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicConfig) *string { return v.UncleanLeaderElectionEnable }).(pulumi.StringPtrOutput)
}

type KafkaTopicConfigPtrOutput struct{ *pulumi.OutputState }

func (KafkaTopicConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTopicConfig)(nil)).Elem()
}

func (o KafkaTopicConfigPtrOutput) ToKafkaTopicConfigPtrOutput() KafkaTopicConfigPtrOutput {
	return o
}

func (o KafkaTopicConfigPtrOutput) ToKafkaTopicConfigPtrOutputWithContext(ctx context.Context) KafkaTopicConfigPtrOutput {
	return o
}

func (o KafkaTopicConfigPtrOutput) Elem() KafkaTopicConfigOutput {
	return o.ApplyT(func(v *KafkaTopicConfig) KafkaTopicConfig { return *v }).(KafkaTopicConfigOutput)
}

// cleanup.policy value, can be `create`, `delete` or `compact,delete`
func (o KafkaTopicConfigPtrOutput) CleanupPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.CleanupPolicy
	}).(pulumi.StringPtrOutput)
}

// compression.type value
func (o KafkaTopicConfigPtrOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.CompressionType
	}).(pulumi.StringPtrOutput)
}

// delete.retention.ms value
func (o KafkaTopicConfigPtrOutput) DeleteRetentionMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.DeleteRetentionMs
	}).(pulumi.StringPtrOutput)
}

// file.delete.delay.ms value
func (o KafkaTopicConfigPtrOutput) FileDeleteDelayMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.FileDeleteDelayMs
	}).(pulumi.StringPtrOutput)
}

// flush.messages value
func (o KafkaTopicConfigPtrOutput) FlushMessages() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.FlushMessages
	}).(pulumi.StringPtrOutput)
}

// flush.ms value
func (o KafkaTopicConfigPtrOutput) FlushMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.FlushMs
	}).(pulumi.StringPtrOutput)
}

// index.interval.bytes value
func (o KafkaTopicConfigPtrOutput) IndexIntervalBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.IndexIntervalBytes
	}).(pulumi.StringPtrOutput)
}

// max.compaction.lag.ms value
func (o KafkaTopicConfigPtrOutput) MaxCompactionLagMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.MaxCompactionLagMs
	}).(pulumi.StringPtrOutput)
}

// max.message.bytes value
func (o KafkaTopicConfigPtrOutput) MaxMessageBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.MaxMessageBytes
	}).(pulumi.StringPtrOutput)
}

// message.downconversion.enable value
func (o KafkaTopicConfigPtrOutput) MessageDownconversionEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.MessageDownconversionEnable
	}).(pulumi.StringPtrOutput)
}

// message.format.version value
func (o KafkaTopicConfigPtrOutput) MessageFormatVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.MessageFormatVersion
	}).(pulumi.StringPtrOutput)
}

// message.timestamp.difference.max.ms value
func (o KafkaTopicConfigPtrOutput) MessageTimestampDifferenceMaxMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.MessageTimestampDifferenceMaxMs
	}).(pulumi.StringPtrOutput)
}

// message.timestamp.type value
func (o KafkaTopicConfigPtrOutput) MessageTimestampType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.MessageTimestampType
	}).(pulumi.StringPtrOutput)
}

// min.cleanable.dirty.ratio value
func (o KafkaTopicConfigPtrOutput) MinCleanableDirtyRatio() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.MinCleanableDirtyRatio
	}).(pulumi.StringPtrOutput)
}

// min.compaction.lag.ms value
func (o KafkaTopicConfigPtrOutput) MinCompactionLagMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.MinCompactionLagMs
	}).(pulumi.StringPtrOutput)
}

// min.insync.replicas value
func (o KafkaTopicConfigPtrOutput) MinInsyncReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.MinInsyncReplicas
	}).(pulumi.StringPtrOutput)
}

// preallocate value
func (o KafkaTopicConfigPtrOutput) Preallocate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.Preallocate
	}).(pulumi.StringPtrOutput)
}

// retention.bytes value
func (o KafkaTopicConfigPtrOutput) RetentionBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.RetentionBytes
	}).(pulumi.StringPtrOutput)
}

// retention.ms value
func (o KafkaTopicConfigPtrOutput) RetentionMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.RetentionMs
	}).(pulumi.StringPtrOutput)
}

// segment.bytes value
func (o KafkaTopicConfigPtrOutput) SegmentBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.SegmentBytes
	}).(pulumi.StringPtrOutput)
}

// segment.index.bytes value
func (o KafkaTopicConfigPtrOutput) SegmentIndexBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.SegmentIndexBytes
	}).(pulumi.StringPtrOutput)
}

// segment.jitter.ms value
func (o KafkaTopicConfigPtrOutput) SegmentJitterMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.SegmentJitterMs
	}).(pulumi.StringPtrOutput)
}

// segment.ms value
func (o KafkaTopicConfigPtrOutput) SegmentMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.SegmentMs
	}).(pulumi.StringPtrOutput)
}

// unclean.leader.election.enable value
func (o KafkaTopicConfigPtrOutput) UncleanLeaderElectionEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicConfig) *string {
		if v == nil {
			return nil
		}
		return v.UncleanLeaderElectionEnable
	}).(pulumi.StringPtrOutput)
}

type KafkaTopicTag struct {
	Key   string  `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// KafkaTopicTagInput is an input type that accepts KafkaTopicTagArgs and KafkaTopicTagOutput values.
// You can construct a concrete instance of `KafkaTopicTagInput` via:
//
//          KafkaTopicTagArgs{...}
type KafkaTopicTagInput interface {
	pulumi.Input

	ToKafkaTopicTagOutput() KafkaTopicTagOutput
	ToKafkaTopicTagOutputWithContext(context.Context) KafkaTopicTagOutput
}

type KafkaTopicTagArgs struct {
	Key   pulumi.StringInput    `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (KafkaTopicTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicTag)(nil)).Elem()
}

func (i KafkaTopicTagArgs) ToKafkaTopicTagOutput() KafkaTopicTagOutput {
	return i.ToKafkaTopicTagOutputWithContext(context.Background())
}

func (i KafkaTopicTagArgs) ToKafkaTopicTagOutputWithContext(ctx context.Context) KafkaTopicTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicTagOutput)
}

// KafkaTopicTagArrayInput is an input type that accepts KafkaTopicTagArray and KafkaTopicTagArrayOutput values.
// You can construct a concrete instance of `KafkaTopicTagArrayInput` via:
//
//          KafkaTopicTagArray{ KafkaTopicTagArgs{...} }
type KafkaTopicTagArrayInput interface {
	pulumi.Input

	ToKafkaTopicTagArrayOutput() KafkaTopicTagArrayOutput
	ToKafkaTopicTagArrayOutputWithContext(context.Context) KafkaTopicTagArrayOutput
}

type KafkaTopicTagArray []KafkaTopicTagInput

func (KafkaTopicTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaTopicTag)(nil)).Elem()
}

func (i KafkaTopicTagArray) ToKafkaTopicTagArrayOutput() KafkaTopicTagArrayOutput {
	return i.ToKafkaTopicTagArrayOutputWithContext(context.Background())
}

func (i KafkaTopicTagArray) ToKafkaTopicTagArrayOutputWithContext(ctx context.Context) KafkaTopicTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicTagArrayOutput)
}

type KafkaTopicTagOutput struct{ *pulumi.OutputState }

func (KafkaTopicTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicTag)(nil)).Elem()
}

func (o KafkaTopicTagOutput) ToKafkaTopicTagOutput() KafkaTopicTagOutput {
	return o
}

func (o KafkaTopicTagOutput) ToKafkaTopicTagOutputWithContext(ctx context.Context) KafkaTopicTagOutput {
	return o
}

func (o KafkaTopicTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaTopicTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o KafkaTopicTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type KafkaTopicTagArrayOutput struct{ *pulumi.OutputState }

func (KafkaTopicTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaTopicTag)(nil)).Elem()
}

func (o KafkaTopicTagArrayOutput) ToKafkaTopicTagArrayOutput() KafkaTopicTagArrayOutput {
	return o
}

func (o KafkaTopicTagArrayOutput) ToKafkaTopicTagArrayOutputWithContext(ctx context.Context) KafkaTopicTagArrayOutput {
	return o
}

func (o KafkaTopicTagArrayOutput) Index(i pulumi.IntInput) KafkaTopicTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaTopicTag {
		return vs[0].([]KafkaTopicTag)[vs[1].(int)]
	}).(KafkaTopicTagOutput)
}

type M3AggregatorComponent struct {
	Component                 *string `pulumi:"component"`
	Host                      *string `pulumi:"host"`
	KafkaAuthenticationMethod *string `pulumi:"kafkaAuthenticationMethod"`
	Port                      *int    `pulumi:"port"`
	Route                     *string `pulumi:"route"`
	Ssl                       *bool   `pulumi:"ssl"`
	Usage                     *string `pulumi:"usage"`
}

// M3AggregatorComponentInput is an input type that accepts M3AggregatorComponentArgs and M3AggregatorComponentOutput values.
// You can construct a concrete instance of `M3AggregatorComponentInput` via:
//
//          M3AggregatorComponentArgs{...}
type M3AggregatorComponentInput interface {
	pulumi.Input

	ToM3AggregatorComponentOutput() M3AggregatorComponentOutput
	ToM3AggregatorComponentOutputWithContext(context.Context) M3AggregatorComponentOutput
}

type M3AggregatorComponentArgs struct {
	Component                 pulumi.StringPtrInput `pulumi:"component"`
	Host                      pulumi.StringPtrInput `pulumi:"host"`
	KafkaAuthenticationMethod pulumi.StringPtrInput `pulumi:"kafkaAuthenticationMethod"`
	Port                      pulumi.IntPtrInput    `pulumi:"port"`
	Route                     pulumi.StringPtrInput `pulumi:"route"`
	Ssl                       pulumi.BoolPtrInput   `pulumi:"ssl"`
	Usage                     pulumi.StringPtrInput `pulumi:"usage"`
}

func (M3AggregatorComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*M3AggregatorComponent)(nil)).Elem()
}

func (i M3AggregatorComponentArgs) ToM3AggregatorComponentOutput() M3AggregatorComponentOutput {
	return i.ToM3AggregatorComponentOutputWithContext(context.Background())
}

func (i M3AggregatorComponentArgs) ToM3AggregatorComponentOutputWithContext(ctx context.Context) M3AggregatorComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3AggregatorComponentOutput)
}

// M3AggregatorComponentArrayInput is an input type that accepts M3AggregatorComponentArray and M3AggregatorComponentArrayOutput values.
// You can construct a concrete instance of `M3AggregatorComponentArrayInput` via:
//
//          M3AggregatorComponentArray{ M3AggregatorComponentArgs{...} }
type M3AggregatorComponentArrayInput interface {
	pulumi.Input

	ToM3AggregatorComponentArrayOutput() M3AggregatorComponentArrayOutput
	ToM3AggregatorComponentArrayOutputWithContext(context.Context) M3AggregatorComponentArrayOutput
}

type M3AggregatorComponentArray []M3AggregatorComponentInput

func (M3AggregatorComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]M3AggregatorComponent)(nil)).Elem()
}

func (i M3AggregatorComponentArray) ToM3AggregatorComponentArrayOutput() M3AggregatorComponentArrayOutput {
	return i.ToM3AggregatorComponentArrayOutputWithContext(context.Background())
}

func (i M3AggregatorComponentArray) ToM3AggregatorComponentArrayOutputWithContext(ctx context.Context) M3AggregatorComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3AggregatorComponentArrayOutput)
}

type M3AggregatorComponentOutput struct{ *pulumi.OutputState }

func (M3AggregatorComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*M3AggregatorComponent)(nil)).Elem()
}

func (o M3AggregatorComponentOutput) ToM3AggregatorComponentOutput() M3AggregatorComponentOutput {
	return o
}

func (o M3AggregatorComponentOutput) ToM3AggregatorComponentOutputWithContext(ctx context.Context) M3AggregatorComponentOutput {
	return o
}

func (o M3AggregatorComponentOutput) Component() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3AggregatorComponent) *string { return v.Component }).(pulumi.StringPtrOutput)
}

func (o M3AggregatorComponentOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3AggregatorComponent) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o M3AggregatorComponentOutput) KafkaAuthenticationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3AggregatorComponent) *string { return v.KafkaAuthenticationMethod }).(pulumi.StringPtrOutput)
}

func (o M3AggregatorComponentOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v M3AggregatorComponent) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o M3AggregatorComponentOutput) Route() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3AggregatorComponent) *string { return v.Route }).(pulumi.StringPtrOutput)
}

func (o M3AggregatorComponentOutput) Ssl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v M3AggregatorComponent) *bool { return v.Ssl }).(pulumi.BoolPtrOutput)
}

func (o M3AggregatorComponentOutput) Usage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3AggregatorComponent) *string { return v.Usage }).(pulumi.StringPtrOutput)
}

type M3AggregatorComponentArrayOutput struct{ *pulumi.OutputState }

func (M3AggregatorComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]M3AggregatorComponent)(nil)).Elem()
}

func (o M3AggregatorComponentArrayOutput) ToM3AggregatorComponentArrayOutput() M3AggregatorComponentArrayOutput {
	return o
}

func (o M3AggregatorComponentArrayOutput) ToM3AggregatorComponentArrayOutputWithContext(ctx context.Context) M3AggregatorComponentArrayOutput {
	return o
}

func (o M3AggregatorComponentArrayOutput) Index(i pulumi.IntInput) M3AggregatorComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) M3AggregatorComponent {
		return vs[0].([]M3AggregatorComponent)[vs[1].(int)]
	}).(M3AggregatorComponentOutput)
}

type M3AggregatorM3aggregator struct {
}

// M3AggregatorM3aggregatorInput is an input type that accepts M3AggregatorM3aggregatorArgs and M3AggregatorM3aggregatorOutput values.
// You can construct a concrete instance of `M3AggregatorM3aggregatorInput` via:
//
//          M3AggregatorM3aggregatorArgs{...}
type M3AggregatorM3aggregatorInput interface {
	pulumi.Input

	ToM3AggregatorM3aggregatorOutput() M3AggregatorM3aggregatorOutput
	ToM3AggregatorM3aggregatorOutputWithContext(context.Context) M3AggregatorM3aggregatorOutput
}

type M3AggregatorM3aggregatorArgs struct {
}

func (M3AggregatorM3aggregatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*M3AggregatorM3aggregator)(nil)).Elem()
}

func (i M3AggregatorM3aggregatorArgs) ToM3AggregatorM3aggregatorOutput() M3AggregatorM3aggregatorOutput {
	return i.ToM3AggregatorM3aggregatorOutputWithContext(context.Background())
}

func (i M3AggregatorM3aggregatorArgs) ToM3AggregatorM3aggregatorOutputWithContext(ctx context.Context) M3AggregatorM3aggregatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3AggregatorM3aggregatorOutput)
}

func (i M3AggregatorM3aggregatorArgs) ToM3AggregatorM3aggregatorPtrOutput() M3AggregatorM3aggregatorPtrOutput {
	return i.ToM3AggregatorM3aggregatorPtrOutputWithContext(context.Background())
}

func (i M3AggregatorM3aggregatorArgs) ToM3AggregatorM3aggregatorPtrOutputWithContext(ctx context.Context) M3AggregatorM3aggregatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3AggregatorM3aggregatorOutput).ToM3AggregatorM3aggregatorPtrOutputWithContext(ctx)
}

// M3AggregatorM3aggregatorPtrInput is an input type that accepts M3AggregatorM3aggregatorArgs, M3AggregatorM3aggregatorPtr and M3AggregatorM3aggregatorPtrOutput values.
// You can construct a concrete instance of `M3AggregatorM3aggregatorPtrInput` via:
//
//          M3AggregatorM3aggregatorArgs{...}
//
//  or:
//
//          nil
type M3AggregatorM3aggregatorPtrInput interface {
	pulumi.Input

	ToM3AggregatorM3aggregatorPtrOutput() M3AggregatorM3aggregatorPtrOutput
	ToM3AggregatorM3aggregatorPtrOutputWithContext(context.Context) M3AggregatorM3aggregatorPtrOutput
}

type m3aggregatorM3aggregatorPtrType M3AggregatorM3aggregatorArgs

func M3AggregatorM3aggregatorPtr(v *M3AggregatorM3aggregatorArgs) M3AggregatorM3aggregatorPtrInput {
	return (*m3aggregatorM3aggregatorPtrType)(v)
}

func (*m3aggregatorM3aggregatorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**M3AggregatorM3aggregator)(nil)).Elem()
}

func (i *m3aggregatorM3aggregatorPtrType) ToM3AggregatorM3aggregatorPtrOutput() M3AggregatorM3aggregatorPtrOutput {
	return i.ToM3AggregatorM3aggregatorPtrOutputWithContext(context.Background())
}

func (i *m3aggregatorM3aggregatorPtrType) ToM3AggregatorM3aggregatorPtrOutputWithContext(ctx context.Context) M3AggregatorM3aggregatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3AggregatorM3aggregatorPtrOutput)
}

type M3AggregatorM3aggregatorOutput struct{ *pulumi.OutputState }

func (M3AggregatorM3aggregatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*M3AggregatorM3aggregator)(nil)).Elem()
}

func (o M3AggregatorM3aggregatorOutput) ToM3AggregatorM3aggregatorOutput() M3AggregatorM3aggregatorOutput {
	return o
}

func (o M3AggregatorM3aggregatorOutput) ToM3AggregatorM3aggregatorOutputWithContext(ctx context.Context) M3AggregatorM3aggregatorOutput {
	return o
}

func (o M3AggregatorM3aggregatorOutput) ToM3AggregatorM3aggregatorPtrOutput() M3AggregatorM3aggregatorPtrOutput {
	return o.ToM3AggregatorM3aggregatorPtrOutputWithContext(context.Background())
}

func (o M3AggregatorM3aggregatorOutput) ToM3AggregatorM3aggregatorPtrOutputWithContext(ctx context.Context) M3AggregatorM3aggregatorPtrOutput {
	return o.ApplyT(func(v M3AggregatorM3aggregator) *M3AggregatorM3aggregator {
		return &v
	}).(M3AggregatorM3aggregatorPtrOutput)
}

type M3AggregatorM3aggregatorPtrOutput struct{ *pulumi.OutputState }

func (M3AggregatorM3aggregatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**M3AggregatorM3aggregator)(nil)).Elem()
}

func (o M3AggregatorM3aggregatorPtrOutput) ToM3AggregatorM3aggregatorPtrOutput() M3AggregatorM3aggregatorPtrOutput {
	return o
}

func (o M3AggregatorM3aggregatorPtrOutput) ToM3AggregatorM3aggregatorPtrOutputWithContext(ctx context.Context) M3AggregatorM3aggregatorPtrOutput {
	return o
}

func (o M3AggregatorM3aggregatorPtrOutput) Elem() M3AggregatorM3aggregatorOutput {
	return o.ApplyT(func(v *M3AggregatorM3aggregator) M3AggregatorM3aggregator { return *v }).(M3AggregatorM3aggregatorOutput)
}

type M3AggregatorM3aggregatorUserConfig struct {
	// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
	CustomDomain *string `pulumi:"customDomain"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
	IpFilters []string `pulumi:"ipFilters"`
	M3Version *string  `pulumi:"m3Version"`
	// M3 major version
	M3aggregatorVersion *string `pulumi:"m3aggregatorVersion"`
}

// M3AggregatorM3aggregatorUserConfigInput is an input type that accepts M3AggregatorM3aggregatorUserConfigArgs and M3AggregatorM3aggregatorUserConfigOutput values.
// You can construct a concrete instance of `M3AggregatorM3aggregatorUserConfigInput` via:
//
//          M3AggregatorM3aggregatorUserConfigArgs{...}
type M3AggregatorM3aggregatorUserConfigInput interface {
	pulumi.Input

	ToM3AggregatorM3aggregatorUserConfigOutput() M3AggregatorM3aggregatorUserConfigOutput
	ToM3AggregatorM3aggregatorUserConfigOutputWithContext(context.Context) M3AggregatorM3aggregatorUserConfigOutput
}

type M3AggregatorM3aggregatorUserConfigArgs struct {
	// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
	CustomDomain pulumi.StringPtrInput `pulumi:"customDomain"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	M3Version pulumi.StringPtrInput   `pulumi:"m3Version"`
	// M3 major version
	M3aggregatorVersion pulumi.StringPtrInput `pulumi:"m3aggregatorVersion"`
}

func (M3AggregatorM3aggregatorUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*M3AggregatorM3aggregatorUserConfig)(nil)).Elem()
}

func (i M3AggregatorM3aggregatorUserConfigArgs) ToM3AggregatorM3aggregatorUserConfigOutput() M3AggregatorM3aggregatorUserConfigOutput {
	return i.ToM3AggregatorM3aggregatorUserConfigOutputWithContext(context.Background())
}

func (i M3AggregatorM3aggregatorUserConfigArgs) ToM3AggregatorM3aggregatorUserConfigOutputWithContext(ctx context.Context) M3AggregatorM3aggregatorUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3AggregatorM3aggregatorUserConfigOutput)
}

func (i M3AggregatorM3aggregatorUserConfigArgs) ToM3AggregatorM3aggregatorUserConfigPtrOutput() M3AggregatorM3aggregatorUserConfigPtrOutput {
	return i.ToM3AggregatorM3aggregatorUserConfigPtrOutputWithContext(context.Background())
}

func (i M3AggregatorM3aggregatorUserConfigArgs) ToM3AggregatorM3aggregatorUserConfigPtrOutputWithContext(ctx context.Context) M3AggregatorM3aggregatorUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3AggregatorM3aggregatorUserConfigOutput).ToM3AggregatorM3aggregatorUserConfigPtrOutputWithContext(ctx)
}

// M3AggregatorM3aggregatorUserConfigPtrInput is an input type that accepts M3AggregatorM3aggregatorUserConfigArgs, M3AggregatorM3aggregatorUserConfigPtr and M3AggregatorM3aggregatorUserConfigPtrOutput values.
// You can construct a concrete instance of `M3AggregatorM3aggregatorUserConfigPtrInput` via:
//
//          M3AggregatorM3aggregatorUserConfigArgs{...}
//
//  or:
//
//          nil
type M3AggregatorM3aggregatorUserConfigPtrInput interface {
	pulumi.Input

	ToM3AggregatorM3aggregatorUserConfigPtrOutput() M3AggregatorM3aggregatorUserConfigPtrOutput
	ToM3AggregatorM3aggregatorUserConfigPtrOutputWithContext(context.Context) M3AggregatorM3aggregatorUserConfigPtrOutput
}

type m3aggregatorM3aggregatorUserConfigPtrType M3AggregatorM3aggregatorUserConfigArgs

func M3AggregatorM3aggregatorUserConfigPtr(v *M3AggregatorM3aggregatorUserConfigArgs) M3AggregatorM3aggregatorUserConfigPtrInput {
	return (*m3aggregatorM3aggregatorUserConfigPtrType)(v)
}

func (*m3aggregatorM3aggregatorUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**M3AggregatorM3aggregatorUserConfig)(nil)).Elem()
}

func (i *m3aggregatorM3aggregatorUserConfigPtrType) ToM3AggregatorM3aggregatorUserConfigPtrOutput() M3AggregatorM3aggregatorUserConfigPtrOutput {
	return i.ToM3AggregatorM3aggregatorUserConfigPtrOutputWithContext(context.Background())
}

func (i *m3aggregatorM3aggregatorUserConfigPtrType) ToM3AggregatorM3aggregatorUserConfigPtrOutputWithContext(ctx context.Context) M3AggregatorM3aggregatorUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3AggregatorM3aggregatorUserConfigPtrOutput)
}

type M3AggregatorM3aggregatorUserConfigOutput struct{ *pulumi.OutputState }

func (M3AggregatorM3aggregatorUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*M3AggregatorM3aggregatorUserConfig)(nil)).Elem()
}

func (o M3AggregatorM3aggregatorUserConfigOutput) ToM3AggregatorM3aggregatorUserConfigOutput() M3AggregatorM3aggregatorUserConfigOutput {
	return o
}

func (o M3AggregatorM3aggregatorUserConfigOutput) ToM3AggregatorM3aggregatorUserConfigOutputWithContext(ctx context.Context) M3AggregatorM3aggregatorUserConfigOutput {
	return o
}

func (o M3AggregatorM3aggregatorUserConfigOutput) ToM3AggregatorM3aggregatorUserConfigPtrOutput() M3AggregatorM3aggregatorUserConfigPtrOutput {
	return o.ToM3AggregatorM3aggregatorUserConfigPtrOutputWithContext(context.Background())
}

func (o M3AggregatorM3aggregatorUserConfigOutput) ToM3AggregatorM3aggregatorUserConfigPtrOutputWithContext(ctx context.Context) M3AggregatorM3aggregatorUserConfigPtrOutput {
	return o.ApplyT(func(v M3AggregatorM3aggregatorUserConfig) *M3AggregatorM3aggregatorUserConfig {
		return &v
	}).(M3AggregatorM3aggregatorUserConfigPtrOutput)
}

// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
func (o M3AggregatorM3aggregatorUserConfigOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3AggregatorM3aggregatorUserConfig) *string { return v.CustomDomain }).(pulumi.StringPtrOutput)
}

// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
func (o M3AggregatorM3aggregatorUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v M3AggregatorM3aggregatorUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

func (o M3AggregatorM3aggregatorUserConfigOutput) M3Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3AggregatorM3aggregatorUserConfig) *string { return v.M3Version }).(pulumi.StringPtrOutput)
}

// M3 major version
func (o M3AggregatorM3aggregatorUserConfigOutput) M3aggregatorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3AggregatorM3aggregatorUserConfig) *string { return v.M3aggregatorVersion }).(pulumi.StringPtrOutput)
}

type M3AggregatorM3aggregatorUserConfigPtrOutput struct{ *pulumi.OutputState }

func (M3AggregatorM3aggregatorUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**M3AggregatorM3aggregatorUserConfig)(nil)).Elem()
}

func (o M3AggregatorM3aggregatorUserConfigPtrOutput) ToM3AggregatorM3aggregatorUserConfigPtrOutput() M3AggregatorM3aggregatorUserConfigPtrOutput {
	return o
}

func (o M3AggregatorM3aggregatorUserConfigPtrOutput) ToM3AggregatorM3aggregatorUserConfigPtrOutputWithContext(ctx context.Context) M3AggregatorM3aggregatorUserConfigPtrOutput {
	return o
}

func (o M3AggregatorM3aggregatorUserConfigPtrOutput) Elem() M3AggregatorM3aggregatorUserConfigOutput {
	return o.ApplyT(func(v *M3AggregatorM3aggregatorUserConfig) M3AggregatorM3aggregatorUserConfig { return *v }).(M3AggregatorM3aggregatorUserConfigOutput)
}

// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
func (o M3AggregatorM3aggregatorUserConfigPtrOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M3AggregatorM3aggregatorUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.CustomDomain
	}).(pulumi.StringPtrOutput)
}

// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
func (o M3AggregatorM3aggregatorUserConfigPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *M3AggregatorM3aggregatorUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

func (o M3AggregatorM3aggregatorUserConfigPtrOutput) M3Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M3AggregatorM3aggregatorUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.M3Version
	}).(pulumi.StringPtrOutput)
}

// M3 major version
func (o M3AggregatorM3aggregatorUserConfigPtrOutput) M3aggregatorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M3AggregatorM3aggregatorUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.M3aggregatorVersion
	}).(pulumi.StringPtrOutput)
}

type M3AggregatorServiceIntegration struct {
	IntegrationType   string `pulumi:"integrationType"`
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// M3AggregatorServiceIntegrationInput is an input type that accepts M3AggregatorServiceIntegrationArgs and M3AggregatorServiceIntegrationOutput values.
// You can construct a concrete instance of `M3AggregatorServiceIntegrationInput` via:
//
//          M3AggregatorServiceIntegrationArgs{...}
type M3AggregatorServiceIntegrationInput interface {
	pulumi.Input

	ToM3AggregatorServiceIntegrationOutput() M3AggregatorServiceIntegrationOutput
	ToM3AggregatorServiceIntegrationOutputWithContext(context.Context) M3AggregatorServiceIntegrationOutput
}

type M3AggregatorServiceIntegrationArgs struct {
	IntegrationType   pulumi.StringInput `pulumi:"integrationType"`
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (M3AggregatorServiceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*M3AggregatorServiceIntegration)(nil)).Elem()
}

func (i M3AggregatorServiceIntegrationArgs) ToM3AggregatorServiceIntegrationOutput() M3AggregatorServiceIntegrationOutput {
	return i.ToM3AggregatorServiceIntegrationOutputWithContext(context.Background())
}

func (i M3AggregatorServiceIntegrationArgs) ToM3AggregatorServiceIntegrationOutputWithContext(ctx context.Context) M3AggregatorServiceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3AggregatorServiceIntegrationOutput)
}

// M3AggregatorServiceIntegrationArrayInput is an input type that accepts M3AggregatorServiceIntegrationArray and M3AggregatorServiceIntegrationArrayOutput values.
// You can construct a concrete instance of `M3AggregatorServiceIntegrationArrayInput` via:
//
//          M3AggregatorServiceIntegrationArray{ M3AggregatorServiceIntegrationArgs{...} }
type M3AggregatorServiceIntegrationArrayInput interface {
	pulumi.Input

	ToM3AggregatorServiceIntegrationArrayOutput() M3AggregatorServiceIntegrationArrayOutput
	ToM3AggregatorServiceIntegrationArrayOutputWithContext(context.Context) M3AggregatorServiceIntegrationArrayOutput
}

type M3AggregatorServiceIntegrationArray []M3AggregatorServiceIntegrationInput

func (M3AggregatorServiceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]M3AggregatorServiceIntegration)(nil)).Elem()
}

func (i M3AggregatorServiceIntegrationArray) ToM3AggregatorServiceIntegrationArrayOutput() M3AggregatorServiceIntegrationArrayOutput {
	return i.ToM3AggregatorServiceIntegrationArrayOutputWithContext(context.Background())
}

func (i M3AggregatorServiceIntegrationArray) ToM3AggregatorServiceIntegrationArrayOutputWithContext(ctx context.Context) M3AggregatorServiceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3AggregatorServiceIntegrationArrayOutput)
}

type M3AggregatorServiceIntegrationOutput struct{ *pulumi.OutputState }

func (M3AggregatorServiceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*M3AggregatorServiceIntegration)(nil)).Elem()
}

func (o M3AggregatorServiceIntegrationOutput) ToM3AggregatorServiceIntegrationOutput() M3AggregatorServiceIntegrationOutput {
	return o
}

func (o M3AggregatorServiceIntegrationOutput) ToM3AggregatorServiceIntegrationOutputWithContext(ctx context.Context) M3AggregatorServiceIntegrationOutput {
	return o
}

func (o M3AggregatorServiceIntegrationOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v M3AggregatorServiceIntegration) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o M3AggregatorServiceIntegrationOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v M3AggregatorServiceIntegration) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

type M3AggregatorServiceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (M3AggregatorServiceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]M3AggregatorServiceIntegration)(nil)).Elem()
}

func (o M3AggregatorServiceIntegrationArrayOutput) ToM3AggregatorServiceIntegrationArrayOutput() M3AggregatorServiceIntegrationArrayOutput {
	return o
}

func (o M3AggregatorServiceIntegrationArrayOutput) ToM3AggregatorServiceIntegrationArrayOutputWithContext(ctx context.Context) M3AggregatorServiceIntegrationArrayOutput {
	return o
}

func (o M3AggregatorServiceIntegrationArrayOutput) Index(i pulumi.IntInput) M3AggregatorServiceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) M3AggregatorServiceIntegration {
		return vs[0].([]M3AggregatorServiceIntegration)[vs[1].(int)]
	}).(M3AggregatorServiceIntegrationOutput)
}

type M3DbComponent struct {
	Component                 *string `pulumi:"component"`
	Host                      *string `pulumi:"host"`
	KafkaAuthenticationMethod *string `pulumi:"kafkaAuthenticationMethod"`
	Port                      *int    `pulumi:"port"`
	Route                     *string `pulumi:"route"`
	Ssl                       *bool   `pulumi:"ssl"`
	Usage                     *string `pulumi:"usage"`
}

// M3DbComponentInput is an input type that accepts M3DbComponentArgs and M3DbComponentOutput values.
// You can construct a concrete instance of `M3DbComponentInput` via:
//
//          M3DbComponentArgs{...}
type M3DbComponentInput interface {
	pulumi.Input

	ToM3DbComponentOutput() M3DbComponentOutput
	ToM3DbComponentOutputWithContext(context.Context) M3DbComponentOutput
}

type M3DbComponentArgs struct {
	Component                 pulumi.StringPtrInput `pulumi:"component"`
	Host                      pulumi.StringPtrInput `pulumi:"host"`
	KafkaAuthenticationMethod pulumi.StringPtrInput `pulumi:"kafkaAuthenticationMethod"`
	Port                      pulumi.IntPtrInput    `pulumi:"port"`
	Route                     pulumi.StringPtrInput `pulumi:"route"`
	Ssl                       pulumi.BoolPtrInput   `pulumi:"ssl"`
	Usage                     pulumi.StringPtrInput `pulumi:"usage"`
}

func (M3DbComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*M3DbComponent)(nil)).Elem()
}

func (i M3DbComponentArgs) ToM3DbComponentOutput() M3DbComponentOutput {
	return i.ToM3DbComponentOutputWithContext(context.Background())
}

func (i M3DbComponentArgs) ToM3DbComponentOutputWithContext(ctx context.Context) M3DbComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbComponentOutput)
}

// M3DbComponentArrayInput is an input type that accepts M3DbComponentArray and M3DbComponentArrayOutput values.
// You can construct a concrete instance of `M3DbComponentArrayInput` via:
//
//          M3DbComponentArray{ M3DbComponentArgs{...} }
type M3DbComponentArrayInput interface {
	pulumi.Input

	ToM3DbComponentArrayOutput() M3DbComponentArrayOutput
	ToM3DbComponentArrayOutputWithContext(context.Context) M3DbComponentArrayOutput
}

type M3DbComponentArray []M3DbComponentInput

func (M3DbComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]M3DbComponent)(nil)).Elem()
}

func (i M3DbComponentArray) ToM3DbComponentArrayOutput() M3DbComponentArrayOutput {
	return i.ToM3DbComponentArrayOutputWithContext(context.Background())
}

func (i M3DbComponentArray) ToM3DbComponentArrayOutputWithContext(ctx context.Context) M3DbComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbComponentArrayOutput)
}

type M3DbComponentOutput struct{ *pulumi.OutputState }

func (M3DbComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*M3DbComponent)(nil)).Elem()
}

func (o M3DbComponentOutput) ToM3DbComponentOutput() M3DbComponentOutput {
	return o
}

func (o M3DbComponentOutput) ToM3DbComponentOutputWithContext(ctx context.Context) M3DbComponentOutput {
	return o
}

func (o M3DbComponentOutput) Component() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbComponent) *string { return v.Component }).(pulumi.StringPtrOutput)
}

func (o M3DbComponentOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbComponent) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o M3DbComponentOutput) KafkaAuthenticationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbComponent) *string { return v.KafkaAuthenticationMethod }).(pulumi.StringPtrOutput)
}

func (o M3DbComponentOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v M3DbComponent) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o M3DbComponentOutput) Route() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbComponent) *string { return v.Route }).(pulumi.StringPtrOutput)
}

func (o M3DbComponentOutput) Ssl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v M3DbComponent) *bool { return v.Ssl }).(pulumi.BoolPtrOutput)
}

func (o M3DbComponentOutput) Usage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbComponent) *string { return v.Usage }).(pulumi.StringPtrOutput)
}

type M3DbComponentArrayOutput struct{ *pulumi.OutputState }

func (M3DbComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]M3DbComponent)(nil)).Elem()
}

func (o M3DbComponentArrayOutput) ToM3DbComponentArrayOutput() M3DbComponentArrayOutput {
	return o
}

func (o M3DbComponentArrayOutput) ToM3DbComponentArrayOutputWithContext(ctx context.Context) M3DbComponentArrayOutput {
	return o
}

func (o M3DbComponentArrayOutput) Index(i pulumi.IntInput) M3DbComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) M3DbComponent {
		return vs[0].([]M3DbComponent)[vs[1].(int)]
	}).(M3DbComponentOutput)
}

type M3DbM3db struct {
}

// M3DbM3dbInput is an input type that accepts M3DbM3dbArgs and M3DbM3dbOutput values.
// You can construct a concrete instance of `M3DbM3dbInput` via:
//
//          M3DbM3dbArgs{...}
type M3DbM3dbInput interface {
	pulumi.Input

	ToM3DbM3dbOutput() M3DbM3dbOutput
	ToM3DbM3dbOutputWithContext(context.Context) M3DbM3dbOutput
}

type M3DbM3dbArgs struct {
}

func (M3DbM3dbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*M3DbM3db)(nil)).Elem()
}

func (i M3DbM3dbArgs) ToM3DbM3dbOutput() M3DbM3dbOutput {
	return i.ToM3DbM3dbOutputWithContext(context.Background())
}

func (i M3DbM3dbArgs) ToM3DbM3dbOutputWithContext(ctx context.Context) M3DbM3dbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbOutput)
}

func (i M3DbM3dbArgs) ToM3DbM3dbPtrOutput() M3DbM3dbPtrOutput {
	return i.ToM3DbM3dbPtrOutputWithContext(context.Background())
}

func (i M3DbM3dbArgs) ToM3DbM3dbPtrOutputWithContext(ctx context.Context) M3DbM3dbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbOutput).ToM3DbM3dbPtrOutputWithContext(ctx)
}

// M3DbM3dbPtrInput is an input type that accepts M3DbM3dbArgs, M3DbM3dbPtr and M3DbM3dbPtrOutput values.
// You can construct a concrete instance of `M3DbM3dbPtrInput` via:
//
//          M3DbM3dbArgs{...}
//
//  or:
//
//          nil
type M3DbM3dbPtrInput interface {
	pulumi.Input

	ToM3DbM3dbPtrOutput() M3DbM3dbPtrOutput
	ToM3DbM3dbPtrOutputWithContext(context.Context) M3DbM3dbPtrOutput
}

type m3dbM3dbPtrType M3DbM3dbArgs

func M3DbM3dbPtr(v *M3DbM3dbArgs) M3DbM3dbPtrInput {
	return (*m3dbM3dbPtrType)(v)
}

func (*m3dbM3dbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**M3DbM3db)(nil)).Elem()
}

func (i *m3dbM3dbPtrType) ToM3DbM3dbPtrOutput() M3DbM3dbPtrOutput {
	return i.ToM3DbM3dbPtrOutputWithContext(context.Background())
}

func (i *m3dbM3dbPtrType) ToM3DbM3dbPtrOutputWithContext(ctx context.Context) M3DbM3dbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbPtrOutput)
}

type M3DbM3dbOutput struct{ *pulumi.OutputState }

func (M3DbM3dbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*M3DbM3db)(nil)).Elem()
}

func (o M3DbM3dbOutput) ToM3DbM3dbOutput() M3DbM3dbOutput {
	return o
}

func (o M3DbM3dbOutput) ToM3DbM3dbOutputWithContext(ctx context.Context) M3DbM3dbOutput {
	return o
}

func (o M3DbM3dbOutput) ToM3DbM3dbPtrOutput() M3DbM3dbPtrOutput {
	return o.ToM3DbM3dbPtrOutputWithContext(context.Background())
}

func (o M3DbM3dbOutput) ToM3DbM3dbPtrOutputWithContext(ctx context.Context) M3DbM3dbPtrOutput {
	return o.ApplyT(func(v M3DbM3db) *M3DbM3db {
		return &v
	}).(M3DbM3dbPtrOutput)
}

type M3DbM3dbPtrOutput struct{ *pulumi.OutputState }

func (M3DbM3dbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**M3DbM3db)(nil)).Elem()
}

func (o M3DbM3dbPtrOutput) ToM3DbM3dbPtrOutput() M3DbM3dbPtrOutput {
	return o
}

func (o M3DbM3dbPtrOutput) ToM3DbM3dbPtrOutputWithContext(ctx context.Context) M3DbM3dbPtrOutput {
	return o
}

func (o M3DbM3dbPtrOutput) Elem() M3DbM3dbOutput {
	return o.ApplyT(func(v *M3DbM3db) M3DbM3db { return *v }).(M3DbM3dbOutput)
}

type M3DbM3dbUserConfig struct {
	// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
	CustomDomain *string `pulumi:"customDomain"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
	IpFilters []string `pulumi:"ipFilters"`
	// M3 limits
	Limits    *M3DbM3dbUserConfigLimits `pulumi:"limits"`
	M3Version *string                   `pulumi:"m3Version"`
	// Enables access to Graphite Carbon
	// plaintext metrics ingestion. It can be enabled only for services inside VPCs. The
	// metrics are written to aggregated namespaces only.
	M3coordinatorEnableGraphiteCarbonIngest *string `pulumi:"m3coordinatorEnableGraphiteCarbonIngest"`
	// M3 major version
	M3dbVersion *string `pulumi:"m3dbVersion"`
	// List of M3 namespaces
	Namespaces []M3DbM3dbUserConfigNamespace `pulumi:"namespaces"`
	// Allow access to selected service ports from private networks.
	PrivateAccess *M3DbM3dbUserConfigPrivateAccess `pulumi:"privateAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom *string `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet.
	PublicAccess *M3DbM3dbUserConfigPublicAccess `pulumi:"publicAccess"`
	// Mapping rules allow more granular use of aggregation, not simply sending
	// everything to a namespace. If mapping rules exist that target a namespace, only data matching mapping
	// rules will be sent to it and nothing else.
	Rules *M3DbM3dbUserConfigRules `pulumi:"rules"`
	// Name of another service to fork from. This has effect only
	// when a new service is being created.
	ServiceToForkFrom *string `pulumi:"serviceToForkFrom"`
}

// M3DbM3dbUserConfigInput is an input type that accepts M3DbM3dbUserConfigArgs and M3DbM3dbUserConfigOutput values.
// You can construct a concrete instance of `M3DbM3dbUserConfigInput` via:
//
//          M3DbM3dbUserConfigArgs{...}
type M3DbM3dbUserConfigInput interface {
	pulumi.Input

	ToM3DbM3dbUserConfigOutput() M3DbM3dbUserConfigOutput
	ToM3DbM3dbUserConfigOutputWithContext(context.Context) M3DbM3dbUserConfigOutput
}

type M3DbM3dbUserConfigArgs struct {
	// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
	CustomDomain pulumi.StringPtrInput `pulumi:"customDomain"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// M3 limits
	Limits    M3DbM3dbUserConfigLimitsPtrInput `pulumi:"limits"`
	M3Version pulumi.StringPtrInput            `pulumi:"m3Version"`
	// Enables access to Graphite Carbon
	// plaintext metrics ingestion. It can be enabled only for services inside VPCs. The
	// metrics are written to aggregated namespaces only.
	M3coordinatorEnableGraphiteCarbonIngest pulumi.StringPtrInput `pulumi:"m3coordinatorEnableGraphiteCarbonIngest"`
	// M3 major version
	M3dbVersion pulumi.StringPtrInput `pulumi:"m3dbVersion"`
	// List of M3 namespaces
	Namespaces M3DbM3dbUserConfigNamespaceArrayInput `pulumi:"namespaces"`
	// Allow access to selected service ports from private networks.
	PrivateAccess M3DbM3dbUserConfigPrivateAccessPtrInput `pulumi:"privateAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom pulumi.StringPtrInput `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet.
	PublicAccess M3DbM3dbUserConfigPublicAccessPtrInput `pulumi:"publicAccess"`
	// Mapping rules allow more granular use of aggregation, not simply sending
	// everything to a namespace. If mapping rules exist that target a namespace, only data matching mapping
	// rules will be sent to it and nothing else.
	Rules M3DbM3dbUserConfigRulesPtrInput `pulumi:"rules"`
	// Name of another service to fork from. This has effect only
	// when a new service is being created.
	ServiceToForkFrom pulumi.StringPtrInput `pulumi:"serviceToForkFrom"`
}

func (M3DbM3dbUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*M3DbM3dbUserConfig)(nil)).Elem()
}

func (i M3DbM3dbUserConfigArgs) ToM3DbM3dbUserConfigOutput() M3DbM3dbUserConfigOutput {
	return i.ToM3DbM3dbUserConfigOutputWithContext(context.Background())
}

func (i M3DbM3dbUserConfigArgs) ToM3DbM3dbUserConfigOutputWithContext(ctx context.Context) M3DbM3dbUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigOutput)
}

func (i M3DbM3dbUserConfigArgs) ToM3DbM3dbUserConfigPtrOutput() M3DbM3dbUserConfigPtrOutput {
	return i.ToM3DbM3dbUserConfigPtrOutputWithContext(context.Background())
}

func (i M3DbM3dbUserConfigArgs) ToM3DbM3dbUserConfigPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigOutput).ToM3DbM3dbUserConfigPtrOutputWithContext(ctx)
}

// M3DbM3dbUserConfigPtrInput is an input type that accepts M3DbM3dbUserConfigArgs, M3DbM3dbUserConfigPtr and M3DbM3dbUserConfigPtrOutput values.
// You can construct a concrete instance of `M3DbM3dbUserConfigPtrInput` via:
//
//          M3DbM3dbUserConfigArgs{...}
//
//  or:
//
//          nil
type M3DbM3dbUserConfigPtrInput interface {
	pulumi.Input

	ToM3DbM3dbUserConfigPtrOutput() M3DbM3dbUserConfigPtrOutput
	ToM3DbM3dbUserConfigPtrOutputWithContext(context.Context) M3DbM3dbUserConfigPtrOutput
}

type m3dbM3dbUserConfigPtrType M3DbM3dbUserConfigArgs

func M3DbM3dbUserConfigPtr(v *M3DbM3dbUserConfigArgs) M3DbM3dbUserConfigPtrInput {
	return (*m3dbM3dbUserConfigPtrType)(v)
}

func (*m3dbM3dbUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**M3DbM3dbUserConfig)(nil)).Elem()
}

func (i *m3dbM3dbUserConfigPtrType) ToM3DbM3dbUserConfigPtrOutput() M3DbM3dbUserConfigPtrOutput {
	return i.ToM3DbM3dbUserConfigPtrOutputWithContext(context.Background())
}

func (i *m3dbM3dbUserConfigPtrType) ToM3DbM3dbUserConfigPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigPtrOutput)
}

type M3DbM3dbUserConfigOutput struct{ *pulumi.OutputState }

func (M3DbM3dbUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*M3DbM3dbUserConfig)(nil)).Elem()
}

func (o M3DbM3dbUserConfigOutput) ToM3DbM3dbUserConfigOutput() M3DbM3dbUserConfigOutput {
	return o
}

func (o M3DbM3dbUserConfigOutput) ToM3DbM3dbUserConfigOutputWithContext(ctx context.Context) M3DbM3dbUserConfigOutput {
	return o
}

func (o M3DbM3dbUserConfigOutput) ToM3DbM3dbUserConfigPtrOutput() M3DbM3dbUserConfigPtrOutput {
	return o.ToM3DbM3dbUserConfigPtrOutputWithContext(context.Background())
}

func (o M3DbM3dbUserConfigOutput) ToM3DbM3dbUserConfigPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfig) *M3DbM3dbUserConfig {
		return &v
	}).(M3DbM3dbUserConfigPtrOutput)
}

// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
func (o M3DbM3dbUserConfigOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfig) *string { return v.CustomDomain }).(pulumi.StringPtrOutput)
}

// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
func (o M3DbM3dbUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// M3 limits
func (o M3DbM3dbUserConfigOutput) Limits() M3DbM3dbUserConfigLimitsPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfig) *M3DbM3dbUserConfigLimits { return v.Limits }).(M3DbM3dbUserConfigLimitsPtrOutput)
}

func (o M3DbM3dbUserConfigOutput) M3Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfig) *string { return v.M3Version }).(pulumi.StringPtrOutput)
}

// Enables access to Graphite Carbon
// plaintext metrics ingestion. It can be enabled only for services inside VPCs. The
// metrics are written to aggregated namespaces only.
func (o M3DbM3dbUserConfigOutput) M3coordinatorEnableGraphiteCarbonIngest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfig) *string { return v.M3coordinatorEnableGraphiteCarbonIngest }).(pulumi.StringPtrOutput)
}

// M3 major version
func (o M3DbM3dbUserConfigOutput) M3dbVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfig) *string { return v.M3dbVersion }).(pulumi.StringPtrOutput)
}

// List of M3 namespaces
func (o M3DbM3dbUserConfigOutput) Namespaces() M3DbM3dbUserConfigNamespaceArrayOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfig) []M3DbM3dbUserConfigNamespace { return v.Namespaces }).(M3DbM3dbUserConfigNamespaceArrayOutput)
}

// Allow access to selected service ports from private networks.
func (o M3DbM3dbUserConfigOutput) PrivateAccess() M3DbM3dbUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfig) *M3DbM3dbUserConfigPrivateAccess { return v.PrivateAccess }).(M3DbM3dbUserConfigPrivateAccessPtrOutput)
}

// Name of another project to fork a service from. This has
// effect only when a new service is being created.
func (o M3DbM3dbUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from the public Internet.
func (o M3DbM3dbUserConfigOutput) PublicAccess() M3DbM3dbUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfig) *M3DbM3dbUserConfigPublicAccess { return v.PublicAccess }).(M3DbM3dbUserConfigPublicAccessPtrOutput)
}

// Mapping rules allow more granular use of aggregation, not simply sending
// everything to a namespace. If mapping rules exist that target a namespace, only data matching mapping
// rules will be sent to it and nothing else.
func (o M3DbM3dbUserConfigOutput) Rules() M3DbM3dbUserConfigRulesPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfig) *M3DbM3dbUserConfigRules { return v.Rules }).(M3DbM3dbUserConfigRulesPtrOutput)
}

// Name of another service to fork from. This has effect only
// when a new service is being created.
func (o M3DbM3dbUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

type M3DbM3dbUserConfigPtrOutput struct{ *pulumi.OutputState }

func (M3DbM3dbUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**M3DbM3dbUserConfig)(nil)).Elem()
}

func (o M3DbM3dbUserConfigPtrOutput) ToM3DbM3dbUserConfigPtrOutput() M3DbM3dbUserConfigPtrOutput {
	return o
}

func (o M3DbM3dbUserConfigPtrOutput) ToM3DbM3dbUserConfigPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigPtrOutput {
	return o
}

func (o M3DbM3dbUserConfigPtrOutput) Elem() M3DbM3dbUserConfigOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfig) M3DbM3dbUserConfig { return *v }).(M3DbM3dbUserConfigOutput)
}

// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
func (o M3DbM3dbUserConfigPtrOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.CustomDomain
	}).(pulumi.StringPtrOutput)
}

// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
func (o M3DbM3dbUserConfigPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

// M3 limits
func (o M3DbM3dbUserConfigPtrOutput) Limits() M3DbM3dbUserConfigLimitsPtrOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfig) *M3DbM3dbUserConfigLimits {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(M3DbM3dbUserConfigLimitsPtrOutput)
}

func (o M3DbM3dbUserConfigPtrOutput) M3Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.M3Version
	}).(pulumi.StringPtrOutput)
}

// Enables access to Graphite Carbon
// plaintext metrics ingestion. It can be enabled only for services inside VPCs. The
// metrics are written to aggregated namespaces only.
func (o M3DbM3dbUserConfigPtrOutput) M3coordinatorEnableGraphiteCarbonIngest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.M3coordinatorEnableGraphiteCarbonIngest
	}).(pulumi.StringPtrOutput)
}

// M3 major version
func (o M3DbM3dbUserConfigPtrOutput) M3dbVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.M3dbVersion
	}).(pulumi.StringPtrOutput)
}

// List of M3 namespaces
func (o M3DbM3dbUserConfigPtrOutput) Namespaces() M3DbM3dbUserConfigNamespaceArrayOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfig) []M3DbM3dbUserConfigNamespace {
		if v == nil {
			return nil
		}
		return v.Namespaces
	}).(M3DbM3dbUserConfigNamespaceArrayOutput)
}

// Allow access to selected service ports from private networks.
func (o M3DbM3dbUserConfigPtrOutput) PrivateAccess() M3DbM3dbUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfig) *M3DbM3dbUserConfigPrivateAccess {
		if v == nil {
			return nil
		}
		return v.PrivateAccess
	}).(M3DbM3dbUserConfigPrivateAccessPtrOutput)
}

// Name of another project to fork a service from. This has
// effect only when a new service is being created.
func (o M3DbM3dbUserConfigPtrOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProjectToForkFrom
	}).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from the public Internet.
func (o M3DbM3dbUserConfigPtrOutput) PublicAccess() M3DbM3dbUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfig) *M3DbM3dbUserConfigPublicAccess {
		if v == nil {
			return nil
		}
		return v.PublicAccess
	}).(M3DbM3dbUserConfigPublicAccessPtrOutput)
}

// Mapping rules allow more granular use of aggregation, not simply sending
// everything to a namespace. If mapping rules exist that target a namespace, only data matching mapping
// rules will be sent to it and nothing else.
func (o M3DbM3dbUserConfigPtrOutput) Rules() M3DbM3dbUserConfigRulesPtrOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfig) *M3DbM3dbUserConfigRules {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(M3DbM3dbUserConfigRulesPtrOutput)
}

// Name of another service to fork from. This has effect only
// when a new service is being created.
func (o M3DbM3dbUserConfigPtrOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceToForkFrom
	}).(pulumi.StringPtrOutput)
}

type M3DbM3dbUserConfigLimits struct {
	// The maximum number of data points fetched during request
	GlobalDatapoints *string `pulumi:"globalDatapoints"`
	// The maximum number of data points fetched in single query
	QueryDatapoints *string `pulumi:"queryDatapoints"`
	// When query limits are exceeded, whether to return error
	// (if True) or return partial results (False)
	QueryRequireExhaustive *string `pulumi:"queryRequireExhaustive"`
	// The maximum number of series fetched in single query
	QuerySeries *string `pulumi:"querySeries"`
}

// M3DbM3dbUserConfigLimitsInput is an input type that accepts M3DbM3dbUserConfigLimitsArgs and M3DbM3dbUserConfigLimitsOutput values.
// You can construct a concrete instance of `M3DbM3dbUserConfigLimitsInput` via:
//
//          M3DbM3dbUserConfigLimitsArgs{...}
type M3DbM3dbUserConfigLimitsInput interface {
	pulumi.Input

	ToM3DbM3dbUserConfigLimitsOutput() M3DbM3dbUserConfigLimitsOutput
	ToM3DbM3dbUserConfigLimitsOutputWithContext(context.Context) M3DbM3dbUserConfigLimitsOutput
}

type M3DbM3dbUserConfigLimitsArgs struct {
	// The maximum number of data points fetched during request
	GlobalDatapoints pulumi.StringPtrInput `pulumi:"globalDatapoints"`
	// The maximum number of data points fetched in single query
	QueryDatapoints pulumi.StringPtrInput `pulumi:"queryDatapoints"`
	// When query limits are exceeded, whether to return error
	// (if True) or return partial results (False)
	QueryRequireExhaustive pulumi.StringPtrInput `pulumi:"queryRequireExhaustive"`
	// The maximum number of series fetched in single query
	QuerySeries pulumi.StringPtrInput `pulumi:"querySeries"`
}

func (M3DbM3dbUserConfigLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*M3DbM3dbUserConfigLimits)(nil)).Elem()
}

func (i M3DbM3dbUserConfigLimitsArgs) ToM3DbM3dbUserConfigLimitsOutput() M3DbM3dbUserConfigLimitsOutput {
	return i.ToM3DbM3dbUserConfigLimitsOutputWithContext(context.Background())
}

func (i M3DbM3dbUserConfigLimitsArgs) ToM3DbM3dbUserConfigLimitsOutputWithContext(ctx context.Context) M3DbM3dbUserConfigLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigLimitsOutput)
}

func (i M3DbM3dbUserConfigLimitsArgs) ToM3DbM3dbUserConfigLimitsPtrOutput() M3DbM3dbUserConfigLimitsPtrOutput {
	return i.ToM3DbM3dbUserConfigLimitsPtrOutputWithContext(context.Background())
}

func (i M3DbM3dbUserConfigLimitsArgs) ToM3DbM3dbUserConfigLimitsPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigLimitsOutput).ToM3DbM3dbUserConfigLimitsPtrOutputWithContext(ctx)
}

// M3DbM3dbUserConfigLimitsPtrInput is an input type that accepts M3DbM3dbUserConfigLimitsArgs, M3DbM3dbUserConfigLimitsPtr and M3DbM3dbUserConfigLimitsPtrOutput values.
// You can construct a concrete instance of `M3DbM3dbUserConfigLimitsPtrInput` via:
//
//          M3DbM3dbUserConfigLimitsArgs{...}
//
//  or:
//
//          nil
type M3DbM3dbUserConfigLimitsPtrInput interface {
	pulumi.Input

	ToM3DbM3dbUserConfigLimitsPtrOutput() M3DbM3dbUserConfigLimitsPtrOutput
	ToM3DbM3dbUserConfigLimitsPtrOutputWithContext(context.Context) M3DbM3dbUserConfigLimitsPtrOutput
}

type m3dbM3dbUserConfigLimitsPtrType M3DbM3dbUserConfigLimitsArgs

func M3DbM3dbUserConfigLimitsPtr(v *M3DbM3dbUserConfigLimitsArgs) M3DbM3dbUserConfigLimitsPtrInput {
	return (*m3dbM3dbUserConfigLimitsPtrType)(v)
}

func (*m3dbM3dbUserConfigLimitsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**M3DbM3dbUserConfigLimits)(nil)).Elem()
}

func (i *m3dbM3dbUserConfigLimitsPtrType) ToM3DbM3dbUserConfigLimitsPtrOutput() M3DbM3dbUserConfigLimitsPtrOutput {
	return i.ToM3DbM3dbUserConfigLimitsPtrOutputWithContext(context.Background())
}

func (i *m3dbM3dbUserConfigLimitsPtrType) ToM3DbM3dbUserConfigLimitsPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigLimitsPtrOutput)
}

type M3DbM3dbUserConfigLimitsOutput struct{ *pulumi.OutputState }

func (M3DbM3dbUserConfigLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*M3DbM3dbUserConfigLimits)(nil)).Elem()
}

func (o M3DbM3dbUserConfigLimitsOutput) ToM3DbM3dbUserConfigLimitsOutput() M3DbM3dbUserConfigLimitsOutput {
	return o
}

func (o M3DbM3dbUserConfigLimitsOutput) ToM3DbM3dbUserConfigLimitsOutputWithContext(ctx context.Context) M3DbM3dbUserConfigLimitsOutput {
	return o
}

func (o M3DbM3dbUserConfigLimitsOutput) ToM3DbM3dbUserConfigLimitsPtrOutput() M3DbM3dbUserConfigLimitsPtrOutput {
	return o.ToM3DbM3dbUserConfigLimitsPtrOutputWithContext(context.Background())
}

func (o M3DbM3dbUserConfigLimitsOutput) ToM3DbM3dbUserConfigLimitsPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigLimitsPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigLimits) *M3DbM3dbUserConfigLimits {
		return &v
	}).(M3DbM3dbUserConfigLimitsPtrOutput)
}

// The maximum number of data points fetched during request
func (o M3DbM3dbUserConfigLimitsOutput) GlobalDatapoints() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigLimits) *string { return v.GlobalDatapoints }).(pulumi.StringPtrOutput)
}

// The maximum number of data points fetched in single query
func (o M3DbM3dbUserConfigLimitsOutput) QueryDatapoints() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigLimits) *string { return v.QueryDatapoints }).(pulumi.StringPtrOutput)
}

// When query limits are exceeded, whether to return error
// (if True) or return partial results (False)
func (o M3DbM3dbUserConfigLimitsOutput) QueryRequireExhaustive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigLimits) *string { return v.QueryRequireExhaustive }).(pulumi.StringPtrOutput)
}

// The maximum number of series fetched in single query
func (o M3DbM3dbUserConfigLimitsOutput) QuerySeries() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigLimits) *string { return v.QuerySeries }).(pulumi.StringPtrOutput)
}

type M3DbM3dbUserConfigLimitsPtrOutput struct{ *pulumi.OutputState }

func (M3DbM3dbUserConfigLimitsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**M3DbM3dbUserConfigLimits)(nil)).Elem()
}

func (o M3DbM3dbUserConfigLimitsPtrOutput) ToM3DbM3dbUserConfigLimitsPtrOutput() M3DbM3dbUserConfigLimitsPtrOutput {
	return o
}

func (o M3DbM3dbUserConfigLimitsPtrOutput) ToM3DbM3dbUserConfigLimitsPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigLimitsPtrOutput {
	return o
}

func (o M3DbM3dbUserConfigLimitsPtrOutput) Elem() M3DbM3dbUserConfigLimitsOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfigLimits) M3DbM3dbUserConfigLimits { return *v }).(M3DbM3dbUserConfigLimitsOutput)
}

// The maximum number of data points fetched during request
func (o M3DbM3dbUserConfigLimitsPtrOutput) GlobalDatapoints() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfigLimits) *string {
		if v == nil {
			return nil
		}
		return v.GlobalDatapoints
	}).(pulumi.StringPtrOutput)
}

// The maximum number of data points fetched in single query
func (o M3DbM3dbUserConfigLimitsPtrOutput) QueryDatapoints() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfigLimits) *string {
		if v == nil {
			return nil
		}
		return v.QueryDatapoints
	}).(pulumi.StringPtrOutput)
}

// When query limits are exceeded, whether to return error
// (if True) or return partial results (False)
func (o M3DbM3dbUserConfigLimitsPtrOutput) QueryRequireExhaustive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfigLimits) *string {
		if v == nil {
			return nil
		}
		return v.QueryRequireExhaustive
	}).(pulumi.StringPtrOutput)
}

// The maximum number of series fetched in single query
func (o M3DbM3dbUserConfigLimitsPtrOutput) QuerySeries() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfigLimits) *string {
		if v == nil {
			return nil
		}
		return v.QuerySeries
	}).(pulumi.StringPtrOutput)
}

type M3DbM3dbUserConfigNamespace struct {
	// The name of the namespace
	Name *string `pulumi:"name"`
	// Namespace options
	Options *M3DbM3dbUserConfigNamespaceOptions `pulumi:"options"`
	// The resolution for an aggregated namespace
	Resolution *string `pulumi:"resolution"`
	// The type of aggregation (aggregated/unaggregated)
	Type *string `pulumi:"type"`
}

// M3DbM3dbUserConfigNamespaceInput is an input type that accepts M3DbM3dbUserConfigNamespaceArgs and M3DbM3dbUserConfigNamespaceOutput values.
// You can construct a concrete instance of `M3DbM3dbUserConfigNamespaceInput` via:
//
//          M3DbM3dbUserConfigNamespaceArgs{...}
type M3DbM3dbUserConfigNamespaceInput interface {
	pulumi.Input

	ToM3DbM3dbUserConfigNamespaceOutput() M3DbM3dbUserConfigNamespaceOutput
	ToM3DbM3dbUserConfigNamespaceOutputWithContext(context.Context) M3DbM3dbUserConfigNamespaceOutput
}

type M3DbM3dbUserConfigNamespaceArgs struct {
	// The name of the namespace
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace options
	Options M3DbM3dbUserConfigNamespaceOptionsPtrInput `pulumi:"options"`
	// The resolution for an aggregated namespace
	Resolution pulumi.StringPtrInput `pulumi:"resolution"`
	// The type of aggregation (aggregated/unaggregated)
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (M3DbM3dbUserConfigNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*M3DbM3dbUserConfigNamespace)(nil)).Elem()
}

func (i M3DbM3dbUserConfigNamespaceArgs) ToM3DbM3dbUserConfigNamespaceOutput() M3DbM3dbUserConfigNamespaceOutput {
	return i.ToM3DbM3dbUserConfigNamespaceOutputWithContext(context.Background())
}

func (i M3DbM3dbUserConfigNamespaceArgs) ToM3DbM3dbUserConfigNamespaceOutputWithContext(ctx context.Context) M3DbM3dbUserConfigNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigNamespaceOutput)
}

// M3DbM3dbUserConfigNamespaceArrayInput is an input type that accepts M3DbM3dbUserConfigNamespaceArray and M3DbM3dbUserConfigNamespaceArrayOutput values.
// You can construct a concrete instance of `M3DbM3dbUserConfigNamespaceArrayInput` via:
//
//          M3DbM3dbUserConfigNamespaceArray{ M3DbM3dbUserConfigNamespaceArgs{...} }
type M3DbM3dbUserConfigNamespaceArrayInput interface {
	pulumi.Input

	ToM3DbM3dbUserConfigNamespaceArrayOutput() M3DbM3dbUserConfigNamespaceArrayOutput
	ToM3DbM3dbUserConfigNamespaceArrayOutputWithContext(context.Context) M3DbM3dbUserConfigNamespaceArrayOutput
}

type M3DbM3dbUserConfigNamespaceArray []M3DbM3dbUserConfigNamespaceInput

func (M3DbM3dbUserConfigNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]M3DbM3dbUserConfigNamespace)(nil)).Elem()
}

func (i M3DbM3dbUserConfigNamespaceArray) ToM3DbM3dbUserConfigNamespaceArrayOutput() M3DbM3dbUserConfigNamespaceArrayOutput {
	return i.ToM3DbM3dbUserConfigNamespaceArrayOutputWithContext(context.Background())
}

func (i M3DbM3dbUserConfigNamespaceArray) ToM3DbM3dbUserConfigNamespaceArrayOutputWithContext(ctx context.Context) M3DbM3dbUserConfigNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigNamespaceArrayOutput)
}

type M3DbM3dbUserConfigNamespaceOutput struct{ *pulumi.OutputState }

func (M3DbM3dbUserConfigNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*M3DbM3dbUserConfigNamespace)(nil)).Elem()
}

func (o M3DbM3dbUserConfigNamespaceOutput) ToM3DbM3dbUserConfigNamespaceOutput() M3DbM3dbUserConfigNamespaceOutput {
	return o
}

func (o M3DbM3dbUserConfigNamespaceOutput) ToM3DbM3dbUserConfigNamespaceOutputWithContext(ctx context.Context) M3DbM3dbUserConfigNamespaceOutput {
	return o
}

// The name of the namespace
func (o M3DbM3dbUserConfigNamespaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigNamespace) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace options
func (o M3DbM3dbUserConfigNamespaceOutput) Options() M3DbM3dbUserConfigNamespaceOptionsPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigNamespace) *M3DbM3dbUserConfigNamespaceOptions { return v.Options }).(M3DbM3dbUserConfigNamespaceOptionsPtrOutput)
}

// The resolution for an aggregated namespace
func (o M3DbM3dbUserConfigNamespaceOutput) Resolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigNamespace) *string { return v.Resolution }).(pulumi.StringPtrOutput)
}

// The type of aggregation (aggregated/unaggregated)
func (o M3DbM3dbUserConfigNamespaceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigNamespace) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type M3DbM3dbUserConfigNamespaceArrayOutput struct{ *pulumi.OutputState }

func (M3DbM3dbUserConfigNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]M3DbM3dbUserConfigNamespace)(nil)).Elem()
}

func (o M3DbM3dbUserConfigNamespaceArrayOutput) ToM3DbM3dbUserConfigNamespaceArrayOutput() M3DbM3dbUserConfigNamespaceArrayOutput {
	return o
}

func (o M3DbM3dbUserConfigNamespaceArrayOutput) ToM3DbM3dbUserConfigNamespaceArrayOutputWithContext(ctx context.Context) M3DbM3dbUserConfigNamespaceArrayOutput {
	return o
}

func (o M3DbM3dbUserConfigNamespaceArrayOutput) Index(i pulumi.IntInput) M3DbM3dbUserConfigNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) M3DbM3dbUserConfigNamespace {
		return vs[0].([]M3DbM3dbUserConfigNamespace)[vs[1].(int)]
	}).(M3DbM3dbUserConfigNamespaceOutput)
}

type M3DbM3dbUserConfigNamespaceOptions struct {
	// Retention options
	RetentionOptions *M3DbM3dbUserConfigNamespaceOptionsRetentionOptions `pulumi:"retentionOptions"`
	// Controls whether M3DB will create snapshot files for
	// this namespace
	SnapshotEnabled *string `pulumi:"snapshotEnabled"`
	// Controls whether M3DB will include writes to this
	// namespace in the commitlog.
	WritesToCommitlog *string `pulumi:"writesToCommitlog"`
}

// M3DbM3dbUserConfigNamespaceOptionsInput is an input type that accepts M3DbM3dbUserConfigNamespaceOptionsArgs and M3DbM3dbUserConfigNamespaceOptionsOutput values.
// You can construct a concrete instance of `M3DbM3dbUserConfigNamespaceOptionsInput` via:
//
//          M3DbM3dbUserConfigNamespaceOptionsArgs{...}
type M3DbM3dbUserConfigNamespaceOptionsInput interface {
	pulumi.Input

	ToM3DbM3dbUserConfigNamespaceOptionsOutput() M3DbM3dbUserConfigNamespaceOptionsOutput
	ToM3DbM3dbUserConfigNamespaceOptionsOutputWithContext(context.Context) M3DbM3dbUserConfigNamespaceOptionsOutput
}

type M3DbM3dbUserConfigNamespaceOptionsArgs struct {
	// Retention options
	RetentionOptions M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrInput `pulumi:"retentionOptions"`
	// Controls whether M3DB will create snapshot files for
	// this namespace
	SnapshotEnabled pulumi.StringPtrInput `pulumi:"snapshotEnabled"`
	// Controls whether M3DB will include writes to this
	// namespace in the commitlog.
	WritesToCommitlog pulumi.StringPtrInput `pulumi:"writesToCommitlog"`
}

func (M3DbM3dbUserConfigNamespaceOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*M3DbM3dbUserConfigNamespaceOptions)(nil)).Elem()
}

func (i M3DbM3dbUserConfigNamespaceOptionsArgs) ToM3DbM3dbUserConfigNamespaceOptionsOutput() M3DbM3dbUserConfigNamespaceOptionsOutput {
	return i.ToM3DbM3dbUserConfigNamespaceOptionsOutputWithContext(context.Background())
}

func (i M3DbM3dbUserConfigNamespaceOptionsArgs) ToM3DbM3dbUserConfigNamespaceOptionsOutputWithContext(ctx context.Context) M3DbM3dbUserConfigNamespaceOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigNamespaceOptionsOutput)
}

func (i M3DbM3dbUserConfigNamespaceOptionsArgs) ToM3DbM3dbUserConfigNamespaceOptionsPtrOutput() M3DbM3dbUserConfigNamespaceOptionsPtrOutput {
	return i.ToM3DbM3dbUserConfigNamespaceOptionsPtrOutputWithContext(context.Background())
}

func (i M3DbM3dbUserConfigNamespaceOptionsArgs) ToM3DbM3dbUserConfigNamespaceOptionsPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigNamespaceOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigNamespaceOptionsOutput).ToM3DbM3dbUserConfigNamespaceOptionsPtrOutputWithContext(ctx)
}

// M3DbM3dbUserConfigNamespaceOptionsPtrInput is an input type that accepts M3DbM3dbUserConfigNamespaceOptionsArgs, M3DbM3dbUserConfigNamespaceOptionsPtr and M3DbM3dbUserConfigNamespaceOptionsPtrOutput values.
// You can construct a concrete instance of `M3DbM3dbUserConfigNamespaceOptionsPtrInput` via:
//
//          M3DbM3dbUserConfigNamespaceOptionsArgs{...}
//
//  or:
//
//          nil
type M3DbM3dbUserConfigNamespaceOptionsPtrInput interface {
	pulumi.Input

	ToM3DbM3dbUserConfigNamespaceOptionsPtrOutput() M3DbM3dbUserConfigNamespaceOptionsPtrOutput
	ToM3DbM3dbUserConfigNamespaceOptionsPtrOutputWithContext(context.Context) M3DbM3dbUserConfigNamespaceOptionsPtrOutput
}

type m3dbM3dbUserConfigNamespaceOptionsPtrType M3DbM3dbUserConfigNamespaceOptionsArgs

func M3DbM3dbUserConfigNamespaceOptionsPtr(v *M3DbM3dbUserConfigNamespaceOptionsArgs) M3DbM3dbUserConfigNamespaceOptionsPtrInput {
	return (*m3dbM3dbUserConfigNamespaceOptionsPtrType)(v)
}

func (*m3dbM3dbUserConfigNamespaceOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**M3DbM3dbUserConfigNamespaceOptions)(nil)).Elem()
}

func (i *m3dbM3dbUserConfigNamespaceOptionsPtrType) ToM3DbM3dbUserConfigNamespaceOptionsPtrOutput() M3DbM3dbUserConfigNamespaceOptionsPtrOutput {
	return i.ToM3DbM3dbUserConfigNamespaceOptionsPtrOutputWithContext(context.Background())
}

func (i *m3dbM3dbUserConfigNamespaceOptionsPtrType) ToM3DbM3dbUserConfigNamespaceOptionsPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigNamespaceOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigNamespaceOptionsPtrOutput)
}

type M3DbM3dbUserConfigNamespaceOptionsOutput struct{ *pulumi.OutputState }

func (M3DbM3dbUserConfigNamespaceOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*M3DbM3dbUserConfigNamespaceOptions)(nil)).Elem()
}

func (o M3DbM3dbUserConfigNamespaceOptionsOutput) ToM3DbM3dbUserConfigNamespaceOptionsOutput() M3DbM3dbUserConfigNamespaceOptionsOutput {
	return o
}

func (o M3DbM3dbUserConfigNamespaceOptionsOutput) ToM3DbM3dbUserConfigNamespaceOptionsOutputWithContext(ctx context.Context) M3DbM3dbUserConfigNamespaceOptionsOutput {
	return o
}

func (o M3DbM3dbUserConfigNamespaceOptionsOutput) ToM3DbM3dbUserConfigNamespaceOptionsPtrOutput() M3DbM3dbUserConfigNamespaceOptionsPtrOutput {
	return o.ToM3DbM3dbUserConfigNamespaceOptionsPtrOutputWithContext(context.Background())
}

func (o M3DbM3dbUserConfigNamespaceOptionsOutput) ToM3DbM3dbUserConfigNamespaceOptionsPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigNamespaceOptionsPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigNamespaceOptions) *M3DbM3dbUserConfigNamespaceOptions {
		return &v
	}).(M3DbM3dbUserConfigNamespaceOptionsPtrOutput)
}

// Retention options
func (o M3DbM3dbUserConfigNamespaceOptionsOutput) RetentionOptions() M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigNamespaceOptions) *M3DbM3dbUserConfigNamespaceOptionsRetentionOptions {
		return v.RetentionOptions
	}).(M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput)
}

// Controls whether M3DB will create snapshot files for
// this namespace
func (o M3DbM3dbUserConfigNamespaceOptionsOutput) SnapshotEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigNamespaceOptions) *string { return v.SnapshotEnabled }).(pulumi.StringPtrOutput)
}

// Controls whether M3DB will include writes to this
// namespace in the commitlog.
func (o M3DbM3dbUserConfigNamespaceOptionsOutput) WritesToCommitlog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigNamespaceOptions) *string { return v.WritesToCommitlog }).(pulumi.StringPtrOutput)
}

type M3DbM3dbUserConfigNamespaceOptionsPtrOutput struct{ *pulumi.OutputState }

func (M3DbM3dbUserConfigNamespaceOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**M3DbM3dbUserConfigNamespaceOptions)(nil)).Elem()
}

func (o M3DbM3dbUserConfigNamespaceOptionsPtrOutput) ToM3DbM3dbUserConfigNamespaceOptionsPtrOutput() M3DbM3dbUserConfigNamespaceOptionsPtrOutput {
	return o
}

func (o M3DbM3dbUserConfigNamespaceOptionsPtrOutput) ToM3DbM3dbUserConfigNamespaceOptionsPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigNamespaceOptionsPtrOutput {
	return o
}

func (o M3DbM3dbUserConfigNamespaceOptionsPtrOutput) Elem() M3DbM3dbUserConfigNamespaceOptionsOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfigNamespaceOptions) M3DbM3dbUserConfigNamespaceOptions { return *v }).(M3DbM3dbUserConfigNamespaceOptionsOutput)
}

// Retention options
func (o M3DbM3dbUserConfigNamespaceOptionsPtrOutput) RetentionOptions() M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfigNamespaceOptions) *M3DbM3dbUserConfigNamespaceOptionsRetentionOptions {
		if v == nil {
			return nil
		}
		return v.RetentionOptions
	}).(M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput)
}

// Controls whether M3DB will create snapshot files for
// this namespace
func (o M3DbM3dbUserConfigNamespaceOptionsPtrOutput) SnapshotEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfigNamespaceOptions) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotEnabled
	}).(pulumi.StringPtrOutput)
}

// Controls whether M3DB will include writes to this
// namespace in the commitlog.
func (o M3DbM3dbUserConfigNamespaceOptionsPtrOutput) WritesToCommitlog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfigNamespaceOptions) *string {
		if v == nil {
			return nil
		}
		return v.WritesToCommitlog
	}).(pulumi.StringPtrOutput)
}

type M3DbM3dbUserConfigNamespaceOptionsRetentionOptions struct {
	// Controls how long we wait before expiring stale data
	BlockDataExpiryDuration *string `pulumi:"blockDataExpiryDuration"`
	// Controls how long to keep a block in memory before
	// flushing to a fileset on disk
	BlocksizeDuration *string `pulumi:"blocksizeDuration"`
	// Controls how far into the future writes to
	// the namespace will be accepted
	BufferFutureDuration *string `pulumi:"bufferFutureDuration"`
	// Controls how far into the past writes to the
	// namespace will be accepted
	BufferPastDuration *string `pulumi:"bufferPastDuration"`
	// Controls the duration of time that M3DB will
	// retain data for the namespace
	RetentionPeriodDuration *string `pulumi:"retentionPeriodDuration"`
}

// M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsInput is an input type that accepts M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsArgs and M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput values.
// You can construct a concrete instance of `M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsInput` via:
//
//          M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsArgs{...}
type M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsInput interface {
	pulumi.Input

	ToM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput() M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput
	ToM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutputWithContext(context.Context) M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput
}

type M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsArgs struct {
	// Controls how long we wait before expiring stale data
	BlockDataExpiryDuration pulumi.StringPtrInput `pulumi:"blockDataExpiryDuration"`
	// Controls how long to keep a block in memory before
	// flushing to a fileset on disk
	BlocksizeDuration pulumi.StringPtrInput `pulumi:"blocksizeDuration"`
	// Controls how far into the future writes to
	// the namespace will be accepted
	BufferFutureDuration pulumi.StringPtrInput `pulumi:"bufferFutureDuration"`
	// Controls how far into the past writes to the
	// namespace will be accepted
	BufferPastDuration pulumi.StringPtrInput `pulumi:"bufferPastDuration"`
	// Controls the duration of time that M3DB will
	// retain data for the namespace
	RetentionPeriodDuration pulumi.StringPtrInput `pulumi:"retentionPeriodDuration"`
}

func (M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*M3DbM3dbUserConfigNamespaceOptionsRetentionOptions)(nil)).Elem()
}

func (i M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsArgs) ToM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput() M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput {
	return i.ToM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutputWithContext(context.Background())
}

func (i M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsArgs) ToM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutputWithContext(ctx context.Context) M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput)
}

func (i M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsArgs) ToM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput() M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput {
	return i.ToM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutputWithContext(context.Background())
}

func (i M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsArgs) ToM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput).ToM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutputWithContext(ctx)
}

// M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrInput is an input type that accepts M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsArgs, M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtr and M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput values.
// You can construct a concrete instance of `M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrInput` via:
//
//          M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsArgs{...}
//
//  or:
//
//          nil
type M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrInput interface {
	pulumi.Input

	ToM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput() M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput
	ToM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutputWithContext(context.Context) M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput
}

type m3dbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrType M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsArgs

func M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtr(v *M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsArgs) M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrInput {
	return (*m3dbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrType)(v)
}

func (*m3dbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**M3DbM3dbUserConfigNamespaceOptionsRetentionOptions)(nil)).Elem()
}

func (i *m3dbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrType) ToM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput() M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput {
	return i.ToM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutputWithContext(context.Background())
}

func (i *m3dbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrType) ToM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput)
}

type M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput struct{ *pulumi.OutputState }

func (M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*M3DbM3dbUserConfigNamespaceOptionsRetentionOptions)(nil)).Elem()
}

func (o M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput) ToM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput() M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput {
	return o
}

func (o M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput) ToM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutputWithContext(ctx context.Context) M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput {
	return o
}

func (o M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput) ToM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput() M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput {
	return o.ToM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutputWithContext(context.Background())
}

func (o M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput) ToM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigNamespaceOptionsRetentionOptions) *M3DbM3dbUserConfigNamespaceOptionsRetentionOptions {
		return &v
	}).(M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput)
}

// Controls how long we wait before expiring stale data
func (o M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput) BlockDataExpiryDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigNamespaceOptionsRetentionOptions) *string { return v.BlockDataExpiryDuration }).(pulumi.StringPtrOutput)
}

// Controls how long to keep a block in memory before
// flushing to a fileset on disk
func (o M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput) BlocksizeDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigNamespaceOptionsRetentionOptions) *string { return v.BlocksizeDuration }).(pulumi.StringPtrOutput)
}

// Controls how far into the future writes to
// the namespace will be accepted
func (o M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput) BufferFutureDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigNamespaceOptionsRetentionOptions) *string { return v.BufferFutureDuration }).(pulumi.StringPtrOutput)
}

// Controls how far into the past writes to the
// namespace will be accepted
func (o M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput) BufferPastDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigNamespaceOptionsRetentionOptions) *string { return v.BufferPastDuration }).(pulumi.StringPtrOutput)
}

// Controls the duration of time that M3DB will
// retain data for the namespace
func (o M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput) RetentionPeriodDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigNamespaceOptionsRetentionOptions) *string { return v.RetentionPeriodDuration }).(pulumi.StringPtrOutput)
}

type M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput struct{ *pulumi.OutputState }

func (M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**M3DbM3dbUserConfigNamespaceOptionsRetentionOptions)(nil)).Elem()
}

func (o M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput) ToM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput() M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput {
	return o
}

func (o M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput) ToM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput {
	return o
}

func (o M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput) Elem() M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfigNamespaceOptionsRetentionOptions) M3DbM3dbUserConfigNamespaceOptionsRetentionOptions {
		return *v
	}).(M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput)
}

// Controls how long we wait before expiring stale data
func (o M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput) BlockDataExpiryDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfigNamespaceOptionsRetentionOptions) *string {
		if v == nil {
			return nil
		}
		return v.BlockDataExpiryDuration
	}).(pulumi.StringPtrOutput)
}

// Controls how long to keep a block in memory before
// flushing to a fileset on disk
func (o M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput) BlocksizeDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfigNamespaceOptionsRetentionOptions) *string {
		if v == nil {
			return nil
		}
		return v.BlocksizeDuration
	}).(pulumi.StringPtrOutput)
}

// Controls how far into the future writes to
// the namespace will be accepted
func (o M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput) BufferFutureDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfigNamespaceOptionsRetentionOptions) *string {
		if v == nil {
			return nil
		}
		return v.BufferFutureDuration
	}).(pulumi.StringPtrOutput)
}

// Controls how far into the past writes to the
// namespace will be accepted
func (o M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput) BufferPastDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfigNamespaceOptionsRetentionOptions) *string {
		if v == nil {
			return nil
		}
		return v.BufferPastDuration
	}).(pulumi.StringPtrOutput)
}

// Controls the duration of time that M3DB will
// retain data for the namespace
func (o M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput) RetentionPeriodDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfigNamespaceOptionsRetentionOptions) *string {
		if v == nil {
			return nil
		}
		return v.RetentionPeriodDuration
	}).(pulumi.StringPtrOutput)
}

type M3DbM3dbUserConfigPrivateAccess struct {
	// Allow clients to connect to m3coordinator from the public internet
	// for service nodes that are in a project VPC or another type of private network.
	M3coordinator *string `pulumi:"m3coordinator"`
}

// M3DbM3dbUserConfigPrivateAccessInput is an input type that accepts M3DbM3dbUserConfigPrivateAccessArgs and M3DbM3dbUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `M3DbM3dbUserConfigPrivateAccessInput` via:
//
//          M3DbM3dbUserConfigPrivateAccessArgs{...}
type M3DbM3dbUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToM3DbM3dbUserConfigPrivateAccessOutput() M3DbM3dbUserConfigPrivateAccessOutput
	ToM3DbM3dbUserConfigPrivateAccessOutputWithContext(context.Context) M3DbM3dbUserConfigPrivateAccessOutput
}

type M3DbM3dbUserConfigPrivateAccessArgs struct {
	// Allow clients to connect to m3coordinator from the public internet
	// for service nodes that are in a project VPC or another type of private network.
	M3coordinator pulumi.StringPtrInput `pulumi:"m3coordinator"`
}

func (M3DbM3dbUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*M3DbM3dbUserConfigPrivateAccess)(nil)).Elem()
}

func (i M3DbM3dbUserConfigPrivateAccessArgs) ToM3DbM3dbUserConfigPrivateAccessOutput() M3DbM3dbUserConfigPrivateAccessOutput {
	return i.ToM3DbM3dbUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i M3DbM3dbUserConfigPrivateAccessArgs) ToM3DbM3dbUserConfigPrivateAccessOutputWithContext(ctx context.Context) M3DbM3dbUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigPrivateAccessOutput)
}

func (i M3DbM3dbUserConfigPrivateAccessArgs) ToM3DbM3dbUserConfigPrivateAccessPtrOutput() M3DbM3dbUserConfigPrivateAccessPtrOutput {
	return i.ToM3DbM3dbUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i M3DbM3dbUserConfigPrivateAccessArgs) ToM3DbM3dbUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigPrivateAccessOutput).ToM3DbM3dbUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// M3DbM3dbUserConfigPrivateAccessPtrInput is an input type that accepts M3DbM3dbUserConfigPrivateAccessArgs, M3DbM3dbUserConfigPrivateAccessPtr and M3DbM3dbUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `M3DbM3dbUserConfigPrivateAccessPtrInput` via:
//
//          M3DbM3dbUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type M3DbM3dbUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToM3DbM3dbUserConfigPrivateAccessPtrOutput() M3DbM3dbUserConfigPrivateAccessPtrOutput
	ToM3DbM3dbUserConfigPrivateAccessPtrOutputWithContext(context.Context) M3DbM3dbUserConfigPrivateAccessPtrOutput
}

type m3dbM3dbUserConfigPrivateAccessPtrType M3DbM3dbUserConfigPrivateAccessArgs

func M3DbM3dbUserConfigPrivateAccessPtr(v *M3DbM3dbUserConfigPrivateAccessArgs) M3DbM3dbUserConfigPrivateAccessPtrInput {
	return (*m3dbM3dbUserConfigPrivateAccessPtrType)(v)
}

func (*m3dbM3dbUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**M3DbM3dbUserConfigPrivateAccess)(nil)).Elem()
}

func (i *m3dbM3dbUserConfigPrivateAccessPtrType) ToM3DbM3dbUserConfigPrivateAccessPtrOutput() M3DbM3dbUserConfigPrivateAccessPtrOutput {
	return i.ToM3DbM3dbUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *m3dbM3dbUserConfigPrivateAccessPtrType) ToM3DbM3dbUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigPrivateAccessPtrOutput)
}

type M3DbM3dbUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (M3DbM3dbUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*M3DbM3dbUserConfigPrivateAccess)(nil)).Elem()
}

func (o M3DbM3dbUserConfigPrivateAccessOutput) ToM3DbM3dbUserConfigPrivateAccessOutput() M3DbM3dbUserConfigPrivateAccessOutput {
	return o
}

func (o M3DbM3dbUserConfigPrivateAccessOutput) ToM3DbM3dbUserConfigPrivateAccessOutputWithContext(ctx context.Context) M3DbM3dbUserConfigPrivateAccessOutput {
	return o
}

func (o M3DbM3dbUserConfigPrivateAccessOutput) ToM3DbM3dbUserConfigPrivateAccessPtrOutput() M3DbM3dbUserConfigPrivateAccessPtrOutput {
	return o.ToM3DbM3dbUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o M3DbM3dbUserConfigPrivateAccessOutput) ToM3DbM3dbUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigPrivateAccess) *M3DbM3dbUserConfigPrivateAccess {
		return &v
	}).(M3DbM3dbUserConfigPrivateAccessPtrOutput)
}

// Allow clients to connect to m3coordinator from the public internet
// for service nodes that are in a project VPC or another type of private network.
func (o M3DbM3dbUserConfigPrivateAccessOutput) M3coordinator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigPrivateAccess) *string { return v.M3coordinator }).(pulumi.StringPtrOutput)
}

type M3DbM3dbUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (M3DbM3dbUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**M3DbM3dbUserConfigPrivateAccess)(nil)).Elem()
}

func (o M3DbM3dbUserConfigPrivateAccessPtrOutput) ToM3DbM3dbUserConfigPrivateAccessPtrOutput() M3DbM3dbUserConfigPrivateAccessPtrOutput {
	return o
}

func (o M3DbM3dbUserConfigPrivateAccessPtrOutput) ToM3DbM3dbUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigPrivateAccessPtrOutput {
	return o
}

func (o M3DbM3dbUserConfigPrivateAccessPtrOutput) Elem() M3DbM3dbUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfigPrivateAccess) M3DbM3dbUserConfigPrivateAccess { return *v }).(M3DbM3dbUserConfigPrivateAccessOutput)
}

// Allow clients to connect to m3coordinator from the public internet
// for service nodes that are in a project VPC or another type of private network.
func (o M3DbM3dbUserConfigPrivateAccessPtrOutput) M3coordinator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.M3coordinator
	}).(pulumi.StringPtrOutput)
}

type M3DbM3dbUserConfigPublicAccess struct {
	// Allow clients to connect to m3coordinator from the public internet
	// for service nodes that are in a project VPC or another type of private network.
	M3coordinator *string `pulumi:"m3coordinator"`
}

// M3DbM3dbUserConfigPublicAccessInput is an input type that accepts M3DbM3dbUserConfigPublicAccessArgs and M3DbM3dbUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `M3DbM3dbUserConfigPublicAccessInput` via:
//
//          M3DbM3dbUserConfigPublicAccessArgs{...}
type M3DbM3dbUserConfigPublicAccessInput interface {
	pulumi.Input

	ToM3DbM3dbUserConfigPublicAccessOutput() M3DbM3dbUserConfigPublicAccessOutput
	ToM3DbM3dbUserConfigPublicAccessOutputWithContext(context.Context) M3DbM3dbUserConfigPublicAccessOutput
}

type M3DbM3dbUserConfigPublicAccessArgs struct {
	// Allow clients to connect to m3coordinator from the public internet
	// for service nodes that are in a project VPC or another type of private network.
	M3coordinator pulumi.StringPtrInput `pulumi:"m3coordinator"`
}

func (M3DbM3dbUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*M3DbM3dbUserConfigPublicAccess)(nil)).Elem()
}

func (i M3DbM3dbUserConfigPublicAccessArgs) ToM3DbM3dbUserConfigPublicAccessOutput() M3DbM3dbUserConfigPublicAccessOutput {
	return i.ToM3DbM3dbUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i M3DbM3dbUserConfigPublicAccessArgs) ToM3DbM3dbUserConfigPublicAccessOutputWithContext(ctx context.Context) M3DbM3dbUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigPublicAccessOutput)
}

func (i M3DbM3dbUserConfigPublicAccessArgs) ToM3DbM3dbUserConfigPublicAccessPtrOutput() M3DbM3dbUserConfigPublicAccessPtrOutput {
	return i.ToM3DbM3dbUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i M3DbM3dbUserConfigPublicAccessArgs) ToM3DbM3dbUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigPublicAccessOutput).ToM3DbM3dbUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// M3DbM3dbUserConfigPublicAccessPtrInput is an input type that accepts M3DbM3dbUserConfigPublicAccessArgs, M3DbM3dbUserConfigPublicAccessPtr and M3DbM3dbUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `M3DbM3dbUserConfigPublicAccessPtrInput` via:
//
//          M3DbM3dbUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type M3DbM3dbUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToM3DbM3dbUserConfigPublicAccessPtrOutput() M3DbM3dbUserConfigPublicAccessPtrOutput
	ToM3DbM3dbUserConfigPublicAccessPtrOutputWithContext(context.Context) M3DbM3dbUserConfigPublicAccessPtrOutput
}

type m3dbM3dbUserConfigPublicAccessPtrType M3DbM3dbUserConfigPublicAccessArgs

func M3DbM3dbUserConfigPublicAccessPtr(v *M3DbM3dbUserConfigPublicAccessArgs) M3DbM3dbUserConfigPublicAccessPtrInput {
	return (*m3dbM3dbUserConfigPublicAccessPtrType)(v)
}

func (*m3dbM3dbUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**M3DbM3dbUserConfigPublicAccess)(nil)).Elem()
}

func (i *m3dbM3dbUserConfigPublicAccessPtrType) ToM3DbM3dbUserConfigPublicAccessPtrOutput() M3DbM3dbUserConfigPublicAccessPtrOutput {
	return i.ToM3DbM3dbUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *m3dbM3dbUserConfigPublicAccessPtrType) ToM3DbM3dbUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigPublicAccessPtrOutput)
}

type M3DbM3dbUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (M3DbM3dbUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*M3DbM3dbUserConfigPublicAccess)(nil)).Elem()
}

func (o M3DbM3dbUserConfigPublicAccessOutput) ToM3DbM3dbUserConfigPublicAccessOutput() M3DbM3dbUserConfigPublicAccessOutput {
	return o
}

func (o M3DbM3dbUserConfigPublicAccessOutput) ToM3DbM3dbUserConfigPublicAccessOutputWithContext(ctx context.Context) M3DbM3dbUserConfigPublicAccessOutput {
	return o
}

func (o M3DbM3dbUserConfigPublicAccessOutput) ToM3DbM3dbUserConfigPublicAccessPtrOutput() M3DbM3dbUserConfigPublicAccessPtrOutput {
	return o.ToM3DbM3dbUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o M3DbM3dbUserConfigPublicAccessOutput) ToM3DbM3dbUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigPublicAccess) *M3DbM3dbUserConfigPublicAccess {
		return &v
	}).(M3DbM3dbUserConfigPublicAccessPtrOutput)
}

// Allow clients to connect to m3coordinator from the public internet
// for service nodes that are in a project VPC or another type of private network.
func (o M3DbM3dbUserConfigPublicAccessOutput) M3coordinator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigPublicAccess) *string { return v.M3coordinator }).(pulumi.StringPtrOutput)
}

type M3DbM3dbUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (M3DbM3dbUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**M3DbM3dbUserConfigPublicAccess)(nil)).Elem()
}

func (o M3DbM3dbUserConfigPublicAccessPtrOutput) ToM3DbM3dbUserConfigPublicAccessPtrOutput() M3DbM3dbUserConfigPublicAccessPtrOutput {
	return o
}

func (o M3DbM3dbUserConfigPublicAccessPtrOutput) ToM3DbM3dbUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigPublicAccessPtrOutput {
	return o
}

func (o M3DbM3dbUserConfigPublicAccessPtrOutput) Elem() M3DbM3dbUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfigPublicAccess) M3DbM3dbUserConfigPublicAccess { return *v }).(M3DbM3dbUserConfigPublicAccessOutput)
}

// Allow clients to connect to m3coordinator from the public internet
// for service nodes that are in a project VPC or another type of private network.
func (o M3DbM3dbUserConfigPublicAccessPtrOutput) M3coordinator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.M3coordinator
	}).(pulumi.StringPtrOutput)
}

type M3DbM3dbUserConfigRules struct {
	Mappings []M3DbM3dbUserConfigRulesMapping `pulumi:"mappings"`
}

// M3DbM3dbUserConfigRulesInput is an input type that accepts M3DbM3dbUserConfigRulesArgs and M3DbM3dbUserConfigRulesOutput values.
// You can construct a concrete instance of `M3DbM3dbUserConfigRulesInput` via:
//
//          M3DbM3dbUserConfigRulesArgs{...}
type M3DbM3dbUserConfigRulesInput interface {
	pulumi.Input

	ToM3DbM3dbUserConfigRulesOutput() M3DbM3dbUserConfigRulesOutput
	ToM3DbM3dbUserConfigRulesOutputWithContext(context.Context) M3DbM3dbUserConfigRulesOutput
}

type M3DbM3dbUserConfigRulesArgs struct {
	Mappings M3DbM3dbUserConfigRulesMappingArrayInput `pulumi:"mappings"`
}

func (M3DbM3dbUserConfigRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*M3DbM3dbUserConfigRules)(nil)).Elem()
}

func (i M3DbM3dbUserConfigRulesArgs) ToM3DbM3dbUserConfigRulesOutput() M3DbM3dbUserConfigRulesOutput {
	return i.ToM3DbM3dbUserConfigRulesOutputWithContext(context.Background())
}

func (i M3DbM3dbUserConfigRulesArgs) ToM3DbM3dbUserConfigRulesOutputWithContext(ctx context.Context) M3DbM3dbUserConfigRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigRulesOutput)
}

func (i M3DbM3dbUserConfigRulesArgs) ToM3DbM3dbUserConfigRulesPtrOutput() M3DbM3dbUserConfigRulesPtrOutput {
	return i.ToM3DbM3dbUserConfigRulesPtrOutputWithContext(context.Background())
}

func (i M3DbM3dbUserConfigRulesArgs) ToM3DbM3dbUserConfigRulesPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigRulesOutput).ToM3DbM3dbUserConfigRulesPtrOutputWithContext(ctx)
}

// M3DbM3dbUserConfigRulesPtrInput is an input type that accepts M3DbM3dbUserConfigRulesArgs, M3DbM3dbUserConfigRulesPtr and M3DbM3dbUserConfigRulesPtrOutput values.
// You can construct a concrete instance of `M3DbM3dbUserConfigRulesPtrInput` via:
//
//          M3DbM3dbUserConfigRulesArgs{...}
//
//  or:
//
//          nil
type M3DbM3dbUserConfigRulesPtrInput interface {
	pulumi.Input

	ToM3DbM3dbUserConfigRulesPtrOutput() M3DbM3dbUserConfigRulesPtrOutput
	ToM3DbM3dbUserConfigRulesPtrOutputWithContext(context.Context) M3DbM3dbUserConfigRulesPtrOutput
}

type m3dbM3dbUserConfigRulesPtrType M3DbM3dbUserConfigRulesArgs

func M3DbM3dbUserConfigRulesPtr(v *M3DbM3dbUserConfigRulesArgs) M3DbM3dbUserConfigRulesPtrInput {
	return (*m3dbM3dbUserConfigRulesPtrType)(v)
}

func (*m3dbM3dbUserConfigRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**M3DbM3dbUserConfigRules)(nil)).Elem()
}

func (i *m3dbM3dbUserConfigRulesPtrType) ToM3DbM3dbUserConfigRulesPtrOutput() M3DbM3dbUserConfigRulesPtrOutput {
	return i.ToM3DbM3dbUserConfigRulesPtrOutputWithContext(context.Background())
}

func (i *m3dbM3dbUserConfigRulesPtrType) ToM3DbM3dbUserConfigRulesPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigRulesPtrOutput)
}

type M3DbM3dbUserConfigRulesOutput struct{ *pulumi.OutputState }

func (M3DbM3dbUserConfigRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*M3DbM3dbUserConfigRules)(nil)).Elem()
}

func (o M3DbM3dbUserConfigRulesOutput) ToM3DbM3dbUserConfigRulesOutput() M3DbM3dbUserConfigRulesOutput {
	return o
}

func (o M3DbM3dbUserConfigRulesOutput) ToM3DbM3dbUserConfigRulesOutputWithContext(ctx context.Context) M3DbM3dbUserConfigRulesOutput {
	return o
}

func (o M3DbM3dbUserConfigRulesOutput) ToM3DbM3dbUserConfigRulesPtrOutput() M3DbM3dbUserConfigRulesPtrOutput {
	return o.ToM3DbM3dbUserConfigRulesPtrOutputWithContext(context.Background())
}

func (o M3DbM3dbUserConfigRulesOutput) ToM3DbM3dbUserConfigRulesPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigRulesPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigRules) *M3DbM3dbUserConfigRules {
		return &v
	}).(M3DbM3dbUserConfigRulesPtrOutput)
}
func (o M3DbM3dbUserConfigRulesOutput) Mappings() M3DbM3dbUserConfigRulesMappingArrayOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigRules) []M3DbM3dbUserConfigRulesMapping { return v.Mappings }).(M3DbM3dbUserConfigRulesMappingArrayOutput)
}

type M3DbM3dbUserConfigRulesPtrOutput struct{ *pulumi.OutputState }

func (M3DbM3dbUserConfigRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**M3DbM3dbUserConfigRules)(nil)).Elem()
}

func (o M3DbM3dbUserConfigRulesPtrOutput) ToM3DbM3dbUserConfigRulesPtrOutput() M3DbM3dbUserConfigRulesPtrOutput {
	return o
}

func (o M3DbM3dbUserConfigRulesPtrOutput) ToM3DbM3dbUserConfigRulesPtrOutputWithContext(ctx context.Context) M3DbM3dbUserConfigRulesPtrOutput {
	return o
}

func (o M3DbM3dbUserConfigRulesPtrOutput) Elem() M3DbM3dbUserConfigRulesOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfigRules) M3DbM3dbUserConfigRules { return *v }).(M3DbM3dbUserConfigRulesOutput)
}

func (o M3DbM3dbUserConfigRulesPtrOutput) Mappings() M3DbM3dbUserConfigRulesMappingArrayOutput {
	return o.ApplyT(func(v *M3DbM3dbUserConfigRules) []M3DbM3dbUserConfigRulesMapping {
		if v == nil {
			return nil
		}
		return v.Mappings
	}).(M3DbM3dbUserConfigRulesMappingArrayOutput)
}

type M3DbM3dbUserConfigRulesMapping struct {
	// List of aggregations to be applied
	Aggregations []string `pulumi:"aggregations"`
	// Drop the matching metric; Only store the derived metric (as specified in the roll-up rules), if any.
	Drop *string `pulumi:"drop"`
	// The metrics to be used with this particular rule; Matching metric names with wildcards (using
	// __name__:wildcard) or matching tags and their (optionally wildcarded) values. For value, !
	// can be used at start of value for negation, and multiple filters can be supplied using space as separator.
	Filter *string `pulumi:"filter"`
	// The name of the namespace
	Name *string `pulumi:"name"`
	// List of tags to be appended to matching metrics.
	Tags []M3DbM3dbUserConfigRulesMappingTag `pulumi:"tags"`
}

// M3DbM3dbUserConfigRulesMappingInput is an input type that accepts M3DbM3dbUserConfigRulesMappingArgs and M3DbM3dbUserConfigRulesMappingOutput values.
// You can construct a concrete instance of `M3DbM3dbUserConfigRulesMappingInput` via:
//
//          M3DbM3dbUserConfigRulesMappingArgs{...}
type M3DbM3dbUserConfigRulesMappingInput interface {
	pulumi.Input

	ToM3DbM3dbUserConfigRulesMappingOutput() M3DbM3dbUserConfigRulesMappingOutput
	ToM3DbM3dbUserConfigRulesMappingOutputWithContext(context.Context) M3DbM3dbUserConfigRulesMappingOutput
}

type M3DbM3dbUserConfigRulesMappingArgs struct {
	// List of aggregations to be applied
	Aggregations pulumi.StringArrayInput `pulumi:"aggregations"`
	// Drop the matching metric; Only store the derived metric (as specified in the roll-up rules), if any.
	Drop pulumi.StringPtrInput `pulumi:"drop"`
	// The metrics to be used with this particular rule; Matching metric names with wildcards (using
	// __name__:wildcard) or matching tags and their (optionally wildcarded) values. For value, !
	// can be used at start of value for negation, and multiple filters can be supplied using space as separator.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// The name of the namespace
	Name pulumi.StringPtrInput `pulumi:"name"`
	// List of tags to be appended to matching metrics.
	Tags M3DbM3dbUserConfigRulesMappingTagArrayInput `pulumi:"tags"`
}

func (M3DbM3dbUserConfigRulesMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*M3DbM3dbUserConfigRulesMapping)(nil)).Elem()
}

func (i M3DbM3dbUserConfigRulesMappingArgs) ToM3DbM3dbUserConfigRulesMappingOutput() M3DbM3dbUserConfigRulesMappingOutput {
	return i.ToM3DbM3dbUserConfigRulesMappingOutputWithContext(context.Background())
}

func (i M3DbM3dbUserConfigRulesMappingArgs) ToM3DbM3dbUserConfigRulesMappingOutputWithContext(ctx context.Context) M3DbM3dbUserConfigRulesMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigRulesMappingOutput)
}

// M3DbM3dbUserConfigRulesMappingArrayInput is an input type that accepts M3DbM3dbUserConfigRulesMappingArray and M3DbM3dbUserConfigRulesMappingArrayOutput values.
// You can construct a concrete instance of `M3DbM3dbUserConfigRulesMappingArrayInput` via:
//
//          M3DbM3dbUserConfigRulesMappingArray{ M3DbM3dbUserConfigRulesMappingArgs{...} }
type M3DbM3dbUserConfigRulesMappingArrayInput interface {
	pulumi.Input

	ToM3DbM3dbUserConfigRulesMappingArrayOutput() M3DbM3dbUserConfigRulesMappingArrayOutput
	ToM3DbM3dbUserConfigRulesMappingArrayOutputWithContext(context.Context) M3DbM3dbUserConfigRulesMappingArrayOutput
}

type M3DbM3dbUserConfigRulesMappingArray []M3DbM3dbUserConfigRulesMappingInput

func (M3DbM3dbUserConfigRulesMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]M3DbM3dbUserConfigRulesMapping)(nil)).Elem()
}

func (i M3DbM3dbUserConfigRulesMappingArray) ToM3DbM3dbUserConfigRulesMappingArrayOutput() M3DbM3dbUserConfigRulesMappingArrayOutput {
	return i.ToM3DbM3dbUserConfigRulesMappingArrayOutputWithContext(context.Background())
}

func (i M3DbM3dbUserConfigRulesMappingArray) ToM3DbM3dbUserConfigRulesMappingArrayOutputWithContext(ctx context.Context) M3DbM3dbUserConfigRulesMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigRulesMappingArrayOutput)
}

type M3DbM3dbUserConfigRulesMappingOutput struct{ *pulumi.OutputState }

func (M3DbM3dbUserConfigRulesMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*M3DbM3dbUserConfigRulesMapping)(nil)).Elem()
}

func (o M3DbM3dbUserConfigRulesMappingOutput) ToM3DbM3dbUserConfigRulesMappingOutput() M3DbM3dbUserConfigRulesMappingOutput {
	return o
}

func (o M3DbM3dbUserConfigRulesMappingOutput) ToM3DbM3dbUserConfigRulesMappingOutputWithContext(ctx context.Context) M3DbM3dbUserConfigRulesMappingOutput {
	return o
}

// List of aggregations to be applied
func (o M3DbM3dbUserConfigRulesMappingOutput) Aggregations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigRulesMapping) []string { return v.Aggregations }).(pulumi.StringArrayOutput)
}

// Drop the matching metric; Only store the derived metric (as specified in the roll-up rules), if any.
func (o M3DbM3dbUserConfigRulesMappingOutput) Drop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigRulesMapping) *string { return v.Drop }).(pulumi.StringPtrOutput)
}

// The metrics to be used with this particular rule; Matching metric names with wildcards (using
// __name__:wildcard) or matching tags and their (optionally wildcarded) values. For value, !
// can be used at start of value for negation, and multiple filters can be supplied using space as separator.
func (o M3DbM3dbUserConfigRulesMappingOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigRulesMapping) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// The name of the namespace
func (o M3DbM3dbUserConfigRulesMappingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigRulesMapping) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of tags to be appended to matching metrics.
func (o M3DbM3dbUserConfigRulesMappingOutput) Tags() M3DbM3dbUserConfigRulesMappingTagArrayOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigRulesMapping) []M3DbM3dbUserConfigRulesMappingTag { return v.Tags }).(M3DbM3dbUserConfigRulesMappingTagArrayOutput)
}

type M3DbM3dbUserConfigRulesMappingArrayOutput struct{ *pulumi.OutputState }

func (M3DbM3dbUserConfigRulesMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]M3DbM3dbUserConfigRulesMapping)(nil)).Elem()
}

func (o M3DbM3dbUserConfigRulesMappingArrayOutput) ToM3DbM3dbUserConfigRulesMappingArrayOutput() M3DbM3dbUserConfigRulesMappingArrayOutput {
	return o
}

func (o M3DbM3dbUserConfigRulesMappingArrayOutput) ToM3DbM3dbUserConfigRulesMappingArrayOutputWithContext(ctx context.Context) M3DbM3dbUserConfigRulesMappingArrayOutput {
	return o
}

func (o M3DbM3dbUserConfigRulesMappingArrayOutput) Index(i pulumi.IntInput) M3DbM3dbUserConfigRulesMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) M3DbM3dbUserConfigRulesMapping {
		return vs[0].([]M3DbM3dbUserConfigRulesMapping)[vs[1].(int)]
	}).(M3DbM3dbUserConfigRulesMappingOutput)
}

type M3DbM3dbUserConfigRulesMappingTag struct {
	// The name of the namespace
	Name *string `pulumi:"name"`
	// Value of the tag.
	Value *string `pulumi:"value"`
}

// M3DbM3dbUserConfigRulesMappingTagInput is an input type that accepts M3DbM3dbUserConfigRulesMappingTagArgs and M3DbM3dbUserConfigRulesMappingTagOutput values.
// You can construct a concrete instance of `M3DbM3dbUserConfigRulesMappingTagInput` via:
//
//          M3DbM3dbUserConfigRulesMappingTagArgs{...}
type M3DbM3dbUserConfigRulesMappingTagInput interface {
	pulumi.Input

	ToM3DbM3dbUserConfigRulesMappingTagOutput() M3DbM3dbUserConfigRulesMappingTagOutput
	ToM3DbM3dbUserConfigRulesMappingTagOutputWithContext(context.Context) M3DbM3dbUserConfigRulesMappingTagOutput
}

type M3DbM3dbUserConfigRulesMappingTagArgs struct {
	// The name of the namespace
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value of the tag.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (M3DbM3dbUserConfigRulesMappingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*M3DbM3dbUserConfigRulesMappingTag)(nil)).Elem()
}

func (i M3DbM3dbUserConfigRulesMappingTagArgs) ToM3DbM3dbUserConfigRulesMappingTagOutput() M3DbM3dbUserConfigRulesMappingTagOutput {
	return i.ToM3DbM3dbUserConfigRulesMappingTagOutputWithContext(context.Background())
}

func (i M3DbM3dbUserConfigRulesMappingTagArgs) ToM3DbM3dbUserConfigRulesMappingTagOutputWithContext(ctx context.Context) M3DbM3dbUserConfigRulesMappingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigRulesMappingTagOutput)
}

// M3DbM3dbUserConfigRulesMappingTagArrayInput is an input type that accepts M3DbM3dbUserConfigRulesMappingTagArray and M3DbM3dbUserConfigRulesMappingTagArrayOutput values.
// You can construct a concrete instance of `M3DbM3dbUserConfigRulesMappingTagArrayInput` via:
//
//          M3DbM3dbUserConfigRulesMappingTagArray{ M3DbM3dbUserConfigRulesMappingTagArgs{...} }
type M3DbM3dbUserConfigRulesMappingTagArrayInput interface {
	pulumi.Input

	ToM3DbM3dbUserConfigRulesMappingTagArrayOutput() M3DbM3dbUserConfigRulesMappingTagArrayOutput
	ToM3DbM3dbUserConfigRulesMappingTagArrayOutputWithContext(context.Context) M3DbM3dbUserConfigRulesMappingTagArrayOutput
}

type M3DbM3dbUserConfigRulesMappingTagArray []M3DbM3dbUserConfigRulesMappingTagInput

func (M3DbM3dbUserConfigRulesMappingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]M3DbM3dbUserConfigRulesMappingTag)(nil)).Elem()
}

func (i M3DbM3dbUserConfigRulesMappingTagArray) ToM3DbM3dbUserConfigRulesMappingTagArrayOutput() M3DbM3dbUserConfigRulesMappingTagArrayOutput {
	return i.ToM3DbM3dbUserConfigRulesMappingTagArrayOutputWithContext(context.Background())
}

func (i M3DbM3dbUserConfigRulesMappingTagArray) ToM3DbM3dbUserConfigRulesMappingTagArrayOutputWithContext(ctx context.Context) M3DbM3dbUserConfigRulesMappingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbM3dbUserConfigRulesMappingTagArrayOutput)
}

type M3DbM3dbUserConfigRulesMappingTagOutput struct{ *pulumi.OutputState }

func (M3DbM3dbUserConfigRulesMappingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*M3DbM3dbUserConfigRulesMappingTag)(nil)).Elem()
}

func (o M3DbM3dbUserConfigRulesMappingTagOutput) ToM3DbM3dbUserConfigRulesMappingTagOutput() M3DbM3dbUserConfigRulesMappingTagOutput {
	return o
}

func (o M3DbM3dbUserConfigRulesMappingTagOutput) ToM3DbM3dbUserConfigRulesMappingTagOutputWithContext(ctx context.Context) M3DbM3dbUserConfigRulesMappingTagOutput {
	return o
}

// The name of the namespace
func (o M3DbM3dbUserConfigRulesMappingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigRulesMappingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value of the tag.
func (o M3DbM3dbUserConfigRulesMappingTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v M3DbM3dbUserConfigRulesMappingTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type M3DbM3dbUserConfigRulesMappingTagArrayOutput struct{ *pulumi.OutputState }

func (M3DbM3dbUserConfigRulesMappingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]M3DbM3dbUserConfigRulesMappingTag)(nil)).Elem()
}

func (o M3DbM3dbUserConfigRulesMappingTagArrayOutput) ToM3DbM3dbUserConfigRulesMappingTagArrayOutput() M3DbM3dbUserConfigRulesMappingTagArrayOutput {
	return o
}

func (o M3DbM3dbUserConfigRulesMappingTagArrayOutput) ToM3DbM3dbUserConfigRulesMappingTagArrayOutputWithContext(ctx context.Context) M3DbM3dbUserConfigRulesMappingTagArrayOutput {
	return o
}

func (o M3DbM3dbUserConfigRulesMappingTagArrayOutput) Index(i pulumi.IntInput) M3DbM3dbUserConfigRulesMappingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) M3DbM3dbUserConfigRulesMappingTag {
		return vs[0].([]M3DbM3dbUserConfigRulesMappingTag)[vs[1].(int)]
	}).(M3DbM3dbUserConfigRulesMappingTagOutput)
}

type M3DbServiceIntegration struct {
	IntegrationType   string `pulumi:"integrationType"`
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// M3DbServiceIntegrationInput is an input type that accepts M3DbServiceIntegrationArgs and M3DbServiceIntegrationOutput values.
// You can construct a concrete instance of `M3DbServiceIntegrationInput` via:
//
//          M3DbServiceIntegrationArgs{...}
type M3DbServiceIntegrationInput interface {
	pulumi.Input

	ToM3DbServiceIntegrationOutput() M3DbServiceIntegrationOutput
	ToM3DbServiceIntegrationOutputWithContext(context.Context) M3DbServiceIntegrationOutput
}

type M3DbServiceIntegrationArgs struct {
	IntegrationType   pulumi.StringInput `pulumi:"integrationType"`
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (M3DbServiceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*M3DbServiceIntegration)(nil)).Elem()
}

func (i M3DbServiceIntegrationArgs) ToM3DbServiceIntegrationOutput() M3DbServiceIntegrationOutput {
	return i.ToM3DbServiceIntegrationOutputWithContext(context.Background())
}

func (i M3DbServiceIntegrationArgs) ToM3DbServiceIntegrationOutputWithContext(ctx context.Context) M3DbServiceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbServiceIntegrationOutput)
}

// M3DbServiceIntegrationArrayInput is an input type that accepts M3DbServiceIntegrationArray and M3DbServiceIntegrationArrayOutput values.
// You can construct a concrete instance of `M3DbServiceIntegrationArrayInput` via:
//
//          M3DbServiceIntegrationArray{ M3DbServiceIntegrationArgs{...} }
type M3DbServiceIntegrationArrayInput interface {
	pulumi.Input

	ToM3DbServiceIntegrationArrayOutput() M3DbServiceIntegrationArrayOutput
	ToM3DbServiceIntegrationArrayOutputWithContext(context.Context) M3DbServiceIntegrationArrayOutput
}

type M3DbServiceIntegrationArray []M3DbServiceIntegrationInput

func (M3DbServiceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]M3DbServiceIntegration)(nil)).Elem()
}

func (i M3DbServiceIntegrationArray) ToM3DbServiceIntegrationArrayOutput() M3DbServiceIntegrationArrayOutput {
	return i.ToM3DbServiceIntegrationArrayOutputWithContext(context.Background())
}

func (i M3DbServiceIntegrationArray) ToM3DbServiceIntegrationArrayOutputWithContext(ctx context.Context) M3DbServiceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(M3DbServiceIntegrationArrayOutput)
}

type M3DbServiceIntegrationOutput struct{ *pulumi.OutputState }

func (M3DbServiceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*M3DbServiceIntegration)(nil)).Elem()
}

func (o M3DbServiceIntegrationOutput) ToM3DbServiceIntegrationOutput() M3DbServiceIntegrationOutput {
	return o
}

func (o M3DbServiceIntegrationOutput) ToM3DbServiceIntegrationOutputWithContext(ctx context.Context) M3DbServiceIntegrationOutput {
	return o
}

func (o M3DbServiceIntegrationOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v M3DbServiceIntegration) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o M3DbServiceIntegrationOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v M3DbServiceIntegration) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

type M3DbServiceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (M3DbServiceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]M3DbServiceIntegration)(nil)).Elem()
}

func (o M3DbServiceIntegrationArrayOutput) ToM3DbServiceIntegrationArrayOutput() M3DbServiceIntegrationArrayOutput {
	return o
}

func (o M3DbServiceIntegrationArrayOutput) ToM3DbServiceIntegrationArrayOutputWithContext(ctx context.Context) M3DbServiceIntegrationArrayOutput {
	return o
}

func (o M3DbServiceIntegrationArrayOutput) Index(i pulumi.IntInput) M3DbServiceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) M3DbServiceIntegration {
		return vs[0].([]M3DbServiceIntegration)[vs[1].(int)]
	}).(M3DbServiceIntegrationOutput)
}

type MySqlComponent struct {
	Component *string `pulumi:"component"`
	// Hostname or IP address of the server where to migrate data from
	Host                      *string `pulumi:"host"`
	KafkaAuthenticationMethod *string `pulumi:"kafkaAuthenticationMethod"`
	// Port number of the server where to migrate data from
	Port  *int    `pulumi:"port"`
	Route *string `pulumi:"route"`
	// The server where to migrate data from is secured with SSL
	Ssl   *bool   `pulumi:"ssl"`
	Usage *string `pulumi:"usage"`
}

// MySqlComponentInput is an input type that accepts MySqlComponentArgs and MySqlComponentOutput values.
// You can construct a concrete instance of `MySqlComponentInput` via:
//
//          MySqlComponentArgs{...}
type MySqlComponentInput interface {
	pulumi.Input

	ToMySqlComponentOutput() MySqlComponentOutput
	ToMySqlComponentOutputWithContext(context.Context) MySqlComponentOutput
}

type MySqlComponentArgs struct {
	Component pulumi.StringPtrInput `pulumi:"component"`
	// Hostname or IP address of the server where to migrate data from
	Host                      pulumi.StringPtrInput `pulumi:"host"`
	KafkaAuthenticationMethod pulumi.StringPtrInput `pulumi:"kafkaAuthenticationMethod"`
	// Port number of the server where to migrate data from
	Port  pulumi.IntPtrInput    `pulumi:"port"`
	Route pulumi.StringPtrInput `pulumi:"route"`
	// The server where to migrate data from is secured with SSL
	Ssl   pulumi.BoolPtrInput   `pulumi:"ssl"`
	Usage pulumi.StringPtrInput `pulumi:"usage"`
}

func (MySqlComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlComponent)(nil)).Elem()
}

func (i MySqlComponentArgs) ToMySqlComponentOutput() MySqlComponentOutput {
	return i.ToMySqlComponentOutputWithContext(context.Background())
}

func (i MySqlComponentArgs) ToMySqlComponentOutputWithContext(ctx context.Context) MySqlComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlComponentOutput)
}

// MySqlComponentArrayInput is an input type that accepts MySqlComponentArray and MySqlComponentArrayOutput values.
// You can construct a concrete instance of `MySqlComponentArrayInput` via:
//
//          MySqlComponentArray{ MySqlComponentArgs{...} }
type MySqlComponentArrayInput interface {
	pulumi.Input

	ToMySqlComponentArrayOutput() MySqlComponentArrayOutput
	ToMySqlComponentArrayOutputWithContext(context.Context) MySqlComponentArrayOutput
}

type MySqlComponentArray []MySqlComponentInput

func (MySqlComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MySqlComponent)(nil)).Elem()
}

func (i MySqlComponentArray) ToMySqlComponentArrayOutput() MySqlComponentArrayOutput {
	return i.ToMySqlComponentArrayOutputWithContext(context.Background())
}

func (i MySqlComponentArray) ToMySqlComponentArrayOutputWithContext(ctx context.Context) MySqlComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlComponentArrayOutput)
}

type MySqlComponentOutput struct{ *pulumi.OutputState }

func (MySqlComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlComponent)(nil)).Elem()
}

func (o MySqlComponentOutput) ToMySqlComponentOutput() MySqlComponentOutput {
	return o
}

func (o MySqlComponentOutput) ToMySqlComponentOutputWithContext(ctx context.Context) MySqlComponentOutput {
	return o
}

func (o MySqlComponentOutput) Component() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlComponent) *string { return v.Component }).(pulumi.StringPtrOutput)
}

// Hostname or IP address of the server where to migrate data from
func (o MySqlComponentOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlComponent) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o MySqlComponentOutput) KafkaAuthenticationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlComponent) *string { return v.KafkaAuthenticationMethod }).(pulumi.StringPtrOutput)
}

// Port number of the server where to migrate data from
func (o MySqlComponentOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MySqlComponent) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o MySqlComponentOutput) Route() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlComponent) *string { return v.Route }).(pulumi.StringPtrOutput)
}

// The server where to migrate data from is secured with SSL
func (o MySqlComponentOutput) Ssl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MySqlComponent) *bool { return v.Ssl }).(pulumi.BoolPtrOutput)
}

func (o MySqlComponentOutput) Usage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlComponent) *string { return v.Usage }).(pulumi.StringPtrOutput)
}

type MySqlComponentArrayOutput struct{ *pulumi.OutputState }

func (MySqlComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MySqlComponent)(nil)).Elem()
}

func (o MySqlComponentArrayOutput) ToMySqlComponentArrayOutput() MySqlComponentArrayOutput {
	return o
}

func (o MySqlComponentArrayOutput) ToMySqlComponentArrayOutputWithContext(ctx context.Context) MySqlComponentArrayOutput {
	return o
}

func (o MySqlComponentArrayOutput) Index(i pulumi.IntInput) MySqlComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MySqlComponent {
		return vs[0].([]MySqlComponent)[vs[1].(int)]
	}).(MySqlComponentOutput)
}

type MySqlMysql struct {
}

// MySqlMysqlInput is an input type that accepts MySqlMysqlArgs and MySqlMysqlOutput values.
// You can construct a concrete instance of `MySqlMysqlInput` via:
//
//          MySqlMysqlArgs{...}
type MySqlMysqlInput interface {
	pulumi.Input

	ToMySqlMysqlOutput() MySqlMysqlOutput
	ToMySqlMysqlOutputWithContext(context.Context) MySqlMysqlOutput
}

type MySqlMysqlArgs struct {
}

func (MySqlMysqlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlMysql)(nil)).Elem()
}

func (i MySqlMysqlArgs) ToMySqlMysqlOutput() MySqlMysqlOutput {
	return i.ToMySqlMysqlOutputWithContext(context.Background())
}

func (i MySqlMysqlArgs) ToMySqlMysqlOutputWithContext(ctx context.Context) MySqlMysqlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlMysqlOutput)
}

func (i MySqlMysqlArgs) ToMySqlMysqlPtrOutput() MySqlMysqlPtrOutput {
	return i.ToMySqlMysqlPtrOutputWithContext(context.Background())
}

func (i MySqlMysqlArgs) ToMySqlMysqlPtrOutputWithContext(ctx context.Context) MySqlMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlMysqlOutput).ToMySqlMysqlPtrOutputWithContext(ctx)
}

// MySqlMysqlPtrInput is an input type that accepts MySqlMysqlArgs, MySqlMysqlPtr and MySqlMysqlPtrOutput values.
// You can construct a concrete instance of `MySqlMysqlPtrInput` via:
//
//          MySqlMysqlArgs{...}
//
//  or:
//
//          nil
type MySqlMysqlPtrInput interface {
	pulumi.Input

	ToMySqlMysqlPtrOutput() MySqlMysqlPtrOutput
	ToMySqlMysqlPtrOutputWithContext(context.Context) MySqlMysqlPtrOutput
}

type mySqlMysqlPtrType MySqlMysqlArgs

func MySqlMysqlPtr(v *MySqlMysqlArgs) MySqlMysqlPtrInput {
	return (*mySqlMysqlPtrType)(v)
}

func (*mySqlMysqlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MySqlMysql)(nil)).Elem()
}

func (i *mySqlMysqlPtrType) ToMySqlMysqlPtrOutput() MySqlMysqlPtrOutput {
	return i.ToMySqlMysqlPtrOutputWithContext(context.Background())
}

func (i *mySqlMysqlPtrType) ToMySqlMysqlPtrOutputWithContext(ctx context.Context) MySqlMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlMysqlPtrOutput)
}

type MySqlMysqlOutput struct{ *pulumi.OutputState }

func (MySqlMysqlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlMysql)(nil)).Elem()
}

func (o MySqlMysqlOutput) ToMySqlMysqlOutput() MySqlMysqlOutput {
	return o
}

func (o MySqlMysqlOutput) ToMySqlMysqlOutputWithContext(ctx context.Context) MySqlMysqlOutput {
	return o
}

func (o MySqlMysqlOutput) ToMySqlMysqlPtrOutput() MySqlMysqlPtrOutput {
	return o.ToMySqlMysqlPtrOutputWithContext(context.Background())
}

func (o MySqlMysqlOutput) ToMySqlMysqlPtrOutputWithContext(ctx context.Context) MySqlMysqlPtrOutput {
	return o.ApplyT(func(v MySqlMysql) *MySqlMysql {
		return &v
	}).(MySqlMysqlPtrOutput)
}

type MySqlMysqlPtrOutput struct{ *pulumi.OutputState }

func (MySqlMysqlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MySqlMysql)(nil)).Elem()
}

func (o MySqlMysqlPtrOutput) ToMySqlMysqlPtrOutput() MySqlMysqlPtrOutput {
	return o
}

func (o MySqlMysqlPtrOutput) ToMySqlMysqlPtrOutputWithContext(ctx context.Context) MySqlMysqlPtrOutput {
	return o
}

func (o MySqlMysqlPtrOutput) Elem() MySqlMysqlOutput {
	return o.ApplyT(func(v *MySqlMysql) MySqlMysql { return *v }).(MySqlMysqlOutput)
}

type MySqlMysqlUserConfig struct {
	// Custom password for admin user. Defaults to random string.
	// This must be set only when a new service is being created.
	AdminPassword *string `pulumi:"adminPassword"`
	// Custom username for admin user. This must be set only when a
	// new service is being created.
	AdminUsername *string `pulumi:"adminUsername"`
	// The hour of day (in UTC) when backup for the service is started.
	// New backup is only started if previous backup has already completed.
	BackupHour *string `pulumi:"backupHour"`
	// The minute of an hour when backup for the service is started.
	// New backup is only started if previous backup has already completed.
	BackupMinute *string `pulumi:"backupMinute"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
	IpFilters []string `pulumi:"ipFilters"`
	// Migrate data from existing server
	Migration *MySqlMysqlUserConfigMigration `pulumi:"migration"`
	// Allow clients to connect to mysql from the public internet for service
	// nodes that are in a project VPC or another type of private network
	Mysql *MySqlMysqlUserConfigMysql `pulumi:"mysql"`
	// MySQL major version
	MysqlVersion *string `pulumi:"mysqlVersion"`
	// Allow access to selected service ports from private networks
	PrivateAccess *MySqlMysqlUserConfigPrivateAccess `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess *MySqlMysqlUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom *string `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet
	PublicAccess *MySqlMysqlUserConfigPublicAccess `pulumi:"publicAccess"`
	// Recovery target time when forking a service. This has effect
	// only when a new service is being created.
	RecoveryTargetTime *string `pulumi:"recoveryTargetTime"`
	// Name of another service to fork from. This has effect only when
	// a new service is being created.
	ServiceToForkFrom *string `pulumi:"serviceToForkFrom"`
}

// MySqlMysqlUserConfigInput is an input type that accepts MySqlMysqlUserConfigArgs and MySqlMysqlUserConfigOutput values.
// You can construct a concrete instance of `MySqlMysqlUserConfigInput` via:
//
//          MySqlMysqlUserConfigArgs{...}
type MySqlMysqlUserConfigInput interface {
	pulumi.Input

	ToMySqlMysqlUserConfigOutput() MySqlMysqlUserConfigOutput
	ToMySqlMysqlUserConfigOutputWithContext(context.Context) MySqlMysqlUserConfigOutput
}

type MySqlMysqlUserConfigArgs struct {
	// Custom password for admin user. Defaults to random string.
	// This must be set only when a new service is being created.
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// Custom username for admin user. This must be set only when a
	// new service is being created.
	AdminUsername pulumi.StringPtrInput `pulumi:"adminUsername"`
	// The hour of day (in UTC) when backup for the service is started.
	// New backup is only started if previous backup has already completed.
	BackupHour pulumi.StringPtrInput `pulumi:"backupHour"`
	// The minute of an hour when backup for the service is started.
	// New backup is only started if previous backup has already completed.
	BackupMinute pulumi.StringPtrInput `pulumi:"backupMinute"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// Migrate data from existing server
	Migration MySqlMysqlUserConfigMigrationPtrInput `pulumi:"migration"`
	// Allow clients to connect to mysql from the public internet for service
	// nodes that are in a project VPC or another type of private network
	Mysql MySqlMysqlUserConfigMysqlPtrInput `pulumi:"mysql"`
	// MySQL major version
	MysqlVersion pulumi.StringPtrInput `pulumi:"mysqlVersion"`
	// Allow access to selected service ports from private networks
	PrivateAccess MySqlMysqlUserConfigPrivateAccessPtrInput `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess MySqlMysqlUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom pulumi.StringPtrInput `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet
	PublicAccess MySqlMysqlUserConfigPublicAccessPtrInput `pulumi:"publicAccess"`
	// Recovery target time when forking a service. This has effect
	// only when a new service is being created.
	RecoveryTargetTime pulumi.StringPtrInput `pulumi:"recoveryTargetTime"`
	// Name of another service to fork from. This has effect only when
	// a new service is being created.
	ServiceToForkFrom pulumi.StringPtrInput `pulumi:"serviceToForkFrom"`
}

func (MySqlMysqlUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlMysqlUserConfig)(nil)).Elem()
}

func (i MySqlMysqlUserConfigArgs) ToMySqlMysqlUserConfigOutput() MySqlMysqlUserConfigOutput {
	return i.ToMySqlMysqlUserConfigOutputWithContext(context.Background())
}

func (i MySqlMysqlUserConfigArgs) ToMySqlMysqlUserConfigOutputWithContext(ctx context.Context) MySqlMysqlUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlMysqlUserConfigOutput)
}

func (i MySqlMysqlUserConfigArgs) ToMySqlMysqlUserConfigPtrOutput() MySqlMysqlUserConfigPtrOutput {
	return i.ToMySqlMysqlUserConfigPtrOutputWithContext(context.Background())
}

func (i MySqlMysqlUserConfigArgs) ToMySqlMysqlUserConfigPtrOutputWithContext(ctx context.Context) MySqlMysqlUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlMysqlUserConfigOutput).ToMySqlMysqlUserConfigPtrOutputWithContext(ctx)
}

// MySqlMysqlUserConfigPtrInput is an input type that accepts MySqlMysqlUserConfigArgs, MySqlMysqlUserConfigPtr and MySqlMysqlUserConfigPtrOutput values.
// You can construct a concrete instance of `MySqlMysqlUserConfigPtrInput` via:
//
//          MySqlMysqlUserConfigArgs{...}
//
//  or:
//
//          nil
type MySqlMysqlUserConfigPtrInput interface {
	pulumi.Input

	ToMySqlMysqlUserConfigPtrOutput() MySqlMysqlUserConfigPtrOutput
	ToMySqlMysqlUserConfigPtrOutputWithContext(context.Context) MySqlMysqlUserConfigPtrOutput
}

type mySqlMysqlUserConfigPtrType MySqlMysqlUserConfigArgs

func MySqlMysqlUserConfigPtr(v *MySqlMysqlUserConfigArgs) MySqlMysqlUserConfigPtrInput {
	return (*mySqlMysqlUserConfigPtrType)(v)
}

func (*mySqlMysqlUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MySqlMysqlUserConfig)(nil)).Elem()
}

func (i *mySqlMysqlUserConfigPtrType) ToMySqlMysqlUserConfigPtrOutput() MySqlMysqlUserConfigPtrOutput {
	return i.ToMySqlMysqlUserConfigPtrOutputWithContext(context.Background())
}

func (i *mySqlMysqlUserConfigPtrType) ToMySqlMysqlUserConfigPtrOutputWithContext(ctx context.Context) MySqlMysqlUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlMysqlUserConfigPtrOutput)
}

type MySqlMysqlUserConfigOutput struct{ *pulumi.OutputState }

func (MySqlMysqlUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlMysqlUserConfig)(nil)).Elem()
}

func (o MySqlMysqlUserConfigOutput) ToMySqlMysqlUserConfigOutput() MySqlMysqlUserConfigOutput {
	return o
}

func (o MySqlMysqlUserConfigOutput) ToMySqlMysqlUserConfigOutputWithContext(ctx context.Context) MySqlMysqlUserConfigOutput {
	return o
}

func (o MySqlMysqlUserConfigOutput) ToMySqlMysqlUserConfigPtrOutput() MySqlMysqlUserConfigPtrOutput {
	return o.ToMySqlMysqlUserConfigPtrOutputWithContext(context.Background())
}

func (o MySqlMysqlUserConfigOutput) ToMySqlMysqlUserConfigPtrOutputWithContext(ctx context.Context) MySqlMysqlUserConfigPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfig) *MySqlMysqlUserConfig {
		return &v
	}).(MySqlMysqlUserConfigPtrOutput)
}

// Custom password for admin user. Defaults to random string.
// This must be set only when a new service is being created.
func (o MySqlMysqlUserConfigOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfig) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// Custom username for admin user. This must be set only when a
// new service is being created.
func (o MySqlMysqlUserConfigOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfig) *string { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

// The hour of day (in UTC) when backup for the service is started.
// New backup is only started if previous backup has already completed.
func (o MySqlMysqlUserConfigOutput) BackupHour() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfig) *string { return v.BackupHour }).(pulumi.StringPtrOutput)
}

// The minute of an hour when backup for the service is started.
// New backup is only started if previous backup has already completed.
func (o MySqlMysqlUserConfigOutput) BackupMinute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfig) *string { return v.BackupMinute }).(pulumi.StringPtrOutput)
}

// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
func (o MySqlMysqlUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// Migrate data from existing server
func (o MySqlMysqlUserConfigOutput) Migration() MySqlMysqlUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfig) *MySqlMysqlUserConfigMigration { return v.Migration }).(MySqlMysqlUserConfigMigrationPtrOutput)
}

// Allow clients to connect to mysql from the public internet for service
// nodes that are in a project VPC or another type of private network
func (o MySqlMysqlUserConfigOutput) Mysql() MySqlMysqlUserConfigMysqlPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfig) *MySqlMysqlUserConfigMysql { return v.Mysql }).(MySqlMysqlUserConfigMysqlPtrOutput)
}

// MySQL major version
func (o MySqlMysqlUserConfigOutput) MysqlVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfig) *string { return v.MysqlVersion }).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from private networks
func (o MySqlMysqlUserConfigOutput) PrivateAccess() MySqlMysqlUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfig) *MySqlMysqlUserConfigPrivateAccess { return v.PrivateAccess }).(MySqlMysqlUserConfigPrivateAccessPtrOutput)
}

// Allow access to selected service components through Privatelink
func (o MySqlMysqlUserConfigOutput) PrivatelinkAccess() MySqlMysqlUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfig) *MySqlMysqlUserConfigPrivatelinkAccess { return v.PrivatelinkAccess }).(MySqlMysqlUserConfigPrivatelinkAccessPtrOutput)
}

// Name of another project to fork a service from. This has
// effect only when a new service is being created.
func (o MySqlMysqlUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from the public Internet
func (o MySqlMysqlUserConfigOutput) PublicAccess() MySqlMysqlUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfig) *MySqlMysqlUserConfigPublicAccess { return v.PublicAccess }).(MySqlMysqlUserConfigPublicAccessPtrOutput)
}

// Recovery target time when forking a service. This has effect
// only when a new service is being created.
func (o MySqlMysqlUserConfigOutput) RecoveryTargetTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfig) *string { return v.RecoveryTargetTime }).(pulumi.StringPtrOutput)
}

// Name of another service to fork from. This has effect only when
// a new service is being created.
func (o MySqlMysqlUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

type MySqlMysqlUserConfigPtrOutput struct{ *pulumi.OutputState }

func (MySqlMysqlUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MySqlMysqlUserConfig)(nil)).Elem()
}

func (o MySqlMysqlUserConfigPtrOutput) ToMySqlMysqlUserConfigPtrOutput() MySqlMysqlUserConfigPtrOutput {
	return o
}

func (o MySqlMysqlUserConfigPtrOutput) ToMySqlMysqlUserConfigPtrOutputWithContext(ctx context.Context) MySqlMysqlUserConfigPtrOutput {
	return o
}

func (o MySqlMysqlUserConfigPtrOutput) Elem() MySqlMysqlUserConfigOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfig) MySqlMysqlUserConfig { return *v }).(MySqlMysqlUserConfigOutput)
}

// Custom password for admin user. Defaults to random string.
// This must be set only when a new service is being created.
func (o MySqlMysqlUserConfigPtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// Custom username for admin user. This must be set only when a
// new service is being created.
func (o MySqlMysqlUserConfigPtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// The hour of day (in UTC) when backup for the service is started.
// New backup is only started if previous backup has already completed.
func (o MySqlMysqlUserConfigPtrOutput) BackupHour() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.BackupHour
	}).(pulumi.StringPtrOutput)
}

// The minute of an hour when backup for the service is started.
// New backup is only started if previous backup has already completed.
func (o MySqlMysqlUserConfigPtrOutput) BackupMinute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.BackupMinute
	}).(pulumi.StringPtrOutput)
}

// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
func (o MySqlMysqlUserConfigPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

// Migrate data from existing server
func (o MySqlMysqlUserConfigPtrOutput) Migration() MySqlMysqlUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfig) *MySqlMysqlUserConfigMigration {
		if v == nil {
			return nil
		}
		return v.Migration
	}).(MySqlMysqlUserConfigMigrationPtrOutput)
}

// Allow clients to connect to mysql from the public internet for service
// nodes that are in a project VPC or another type of private network
func (o MySqlMysqlUserConfigPtrOutput) Mysql() MySqlMysqlUserConfigMysqlPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfig) *MySqlMysqlUserConfigMysql {
		if v == nil {
			return nil
		}
		return v.Mysql
	}).(MySqlMysqlUserConfigMysqlPtrOutput)
}

// MySQL major version
func (o MySqlMysqlUserConfigPtrOutput) MysqlVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.MysqlVersion
	}).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from private networks
func (o MySqlMysqlUserConfigPtrOutput) PrivateAccess() MySqlMysqlUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfig) *MySqlMysqlUserConfigPrivateAccess {
		if v == nil {
			return nil
		}
		return v.PrivateAccess
	}).(MySqlMysqlUserConfigPrivateAccessPtrOutput)
}

// Allow access to selected service components through Privatelink
func (o MySqlMysqlUserConfigPtrOutput) PrivatelinkAccess() MySqlMysqlUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfig) *MySqlMysqlUserConfigPrivatelinkAccess {
		if v == nil {
			return nil
		}
		return v.PrivatelinkAccess
	}).(MySqlMysqlUserConfigPrivatelinkAccessPtrOutput)
}

// Name of another project to fork a service from. This has
// effect only when a new service is being created.
func (o MySqlMysqlUserConfigPtrOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProjectToForkFrom
	}).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from the public Internet
func (o MySqlMysqlUserConfigPtrOutput) PublicAccess() MySqlMysqlUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfig) *MySqlMysqlUserConfigPublicAccess {
		if v == nil {
			return nil
		}
		return v.PublicAccess
	}).(MySqlMysqlUserConfigPublicAccessPtrOutput)
}

// Recovery target time when forking a service. This has effect
// only when a new service is being created.
func (o MySqlMysqlUserConfigPtrOutput) RecoveryTargetTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryTargetTime
	}).(pulumi.StringPtrOutput)
}

// Name of another service to fork from. This has effect only when
// a new service is being created.
func (o MySqlMysqlUserConfigPtrOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceToForkFrom
	}).(pulumi.StringPtrOutput)
}

type MySqlMysqlUserConfigMigration struct {
	// Database name for bootstrapping the initial connection
	Dbname *string `pulumi:"dbname"`
	// Hostname or IP address of the server where to migrate data from
	Host *string `pulumi:"host"`
	// Comma-separated list of databases, which should be ignored
	// during migration (supported by MySQL only at the moment)
	IgnoreDbs *string `pulumi:"ignoreDbs"`
	// Password for authentication with the server where to migrate data from
	Password *string `pulumi:"password"`
	// Port number of the server where to migrate data from
	Port *string `pulumi:"port"`
	// The server where to migrate data from is secured with SSL
	Ssl *string `pulumi:"ssl"`
	// User name for authentication with the server where to migrate data from
	Username *string `pulumi:"username"`
}

// MySqlMysqlUserConfigMigrationInput is an input type that accepts MySqlMysqlUserConfigMigrationArgs and MySqlMysqlUserConfigMigrationOutput values.
// You can construct a concrete instance of `MySqlMysqlUserConfigMigrationInput` via:
//
//          MySqlMysqlUserConfigMigrationArgs{...}
type MySqlMysqlUserConfigMigrationInput interface {
	pulumi.Input

	ToMySqlMysqlUserConfigMigrationOutput() MySqlMysqlUserConfigMigrationOutput
	ToMySqlMysqlUserConfigMigrationOutputWithContext(context.Context) MySqlMysqlUserConfigMigrationOutput
}

type MySqlMysqlUserConfigMigrationArgs struct {
	// Database name for bootstrapping the initial connection
	Dbname pulumi.StringPtrInput `pulumi:"dbname"`
	// Hostname or IP address of the server where to migrate data from
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Comma-separated list of databases, which should be ignored
	// during migration (supported by MySQL only at the moment)
	IgnoreDbs pulumi.StringPtrInput `pulumi:"ignoreDbs"`
	// Password for authentication with the server where to migrate data from
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Port number of the server where to migrate data from
	Port pulumi.StringPtrInput `pulumi:"port"`
	// The server where to migrate data from is secured with SSL
	Ssl pulumi.StringPtrInput `pulumi:"ssl"`
	// User name for authentication with the server where to migrate data from
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (MySqlMysqlUserConfigMigrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlMysqlUserConfigMigration)(nil)).Elem()
}

func (i MySqlMysqlUserConfigMigrationArgs) ToMySqlMysqlUserConfigMigrationOutput() MySqlMysqlUserConfigMigrationOutput {
	return i.ToMySqlMysqlUserConfigMigrationOutputWithContext(context.Background())
}

func (i MySqlMysqlUserConfigMigrationArgs) ToMySqlMysqlUserConfigMigrationOutputWithContext(ctx context.Context) MySqlMysqlUserConfigMigrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlMysqlUserConfigMigrationOutput)
}

func (i MySqlMysqlUserConfigMigrationArgs) ToMySqlMysqlUserConfigMigrationPtrOutput() MySqlMysqlUserConfigMigrationPtrOutput {
	return i.ToMySqlMysqlUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (i MySqlMysqlUserConfigMigrationArgs) ToMySqlMysqlUserConfigMigrationPtrOutputWithContext(ctx context.Context) MySqlMysqlUserConfigMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlMysqlUserConfigMigrationOutput).ToMySqlMysqlUserConfigMigrationPtrOutputWithContext(ctx)
}

// MySqlMysqlUserConfigMigrationPtrInput is an input type that accepts MySqlMysqlUserConfigMigrationArgs, MySqlMysqlUserConfigMigrationPtr and MySqlMysqlUserConfigMigrationPtrOutput values.
// You can construct a concrete instance of `MySqlMysqlUserConfigMigrationPtrInput` via:
//
//          MySqlMysqlUserConfigMigrationArgs{...}
//
//  or:
//
//          nil
type MySqlMysqlUserConfigMigrationPtrInput interface {
	pulumi.Input

	ToMySqlMysqlUserConfigMigrationPtrOutput() MySqlMysqlUserConfigMigrationPtrOutput
	ToMySqlMysqlUserConfigMigrationPtrOutputWithContext(context.Context) MySqlMysqlUserConfigMigrationPtrOutput
}

type mySqlMysqlUserConfigMigrationPtrType MySqlMysqlUserConfigMigrationArgs

func MySqlMysqlUserConfigMigrationPtr(v *MySqlMysqlUserConfigMigrationArgs) MySqlMysqlUserConfigMigrationPtrInput {
	return (*mySqlMysqlUserConfigMigrationPtrType)(v)
}

func (*mySqlMysqlUserConfigMigrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MySqlMysqlUserConfigMigration)(nil)).Elem()
}

func (i *mySqlMysqlUserConfigMigrationPtrType) ToMySqlMysqlUserConfigMigrationPtrOutput() MySqlMysqlUserConfigMigrationPtrOutput {
	return i.ToMySqlMysqlUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (i *mySqlMysqlUserConfigMigrationPtrType) ToMySqlMysqlUserConfigMigrationPtrOutputWithContext(ctx context.Context) MySqlMysqlUserConfigMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlMysqlUserConfigMigrationPtrOutput)
}

type MySqlMysqlUserConfigMigrationOutput struct{ *pulumi.OutputState }

func (MySqlMysqlUserConfigMigrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlMysqlUserConfigMigration)(nil)).Elem()
}

func (o MySqlMysqlUserConfigMigrationOutput) ToMySqlMysqlUserConfigMigrationOutput() MySqlMysqlUserConfigMigrationOutput {
	return o
}

func (o MySqlMysqlUserConfigMigrationOutput) ToMySqlMysqlUserConfigMigrationOutputWithContext(ctx context.Context) MySqlMysqlUserConfigMigrationOutput {
	return o
}

func (o MySqlMysqlUserConfigMigrationOutput) ToMySqlMysqlUserConfigMigrationPtrOutput() MySqlMysqlUserConfigMigrationPtrOutput {
	return o.ToMySqlMysqlUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (o MySqlMysqlUserConfigMigrationOutput) ToMySqlMysqlUserConfigMigrationPtrOutputWithContext(ctx context.Context) MySqlMysqlUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMigration) *MySqlMysqlUserConfigMigration {
		return &v
	}).(MySqlMysqlUserConfigMigrationPtrOutput)
}

// Database name for bootstrapping the initial connection
func (o MySqlMysqlUserConfigMigrationOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMigration) *string { return v.Dbname }).(pulumi.StringPtrOutput)
}

// Hostname or IP address of the server where to migrate data from
func (o MySqlMysqlUserConfigMigrationOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMigration) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Comma-separated list of databases, which should be ignored
// during migration (supported by MySQL only at the moment)
func (o MySqlMysqlUserConfigMigrationOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMigration) *string { return v.IgnoreDbs }).(pulumi.StringPtrOutput)
}

// Password for authentication with the server where to migrate data from
func (o MySqlMysqlUserConfigMigrationOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMigration) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Port number of the server where to migrate data from
func (o MySqlMysqlUserConfigMigrationOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMigration) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The server where to migrate data from is secured with SSL
func (o MySqlMysqlUserConfigMigrationOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMigration) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

// User name for authentication with the server where to migrate data from
func (o MySqlMysqlUserConfigMigrationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMigration) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type MySqlMysqlUserConfigMigrationPtrOutput struct{ *pulumi.OutputState }

func (MySqlMysqlUserConfigMigrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MySqlMysqlUserConfigMigration)(nil)).Elem()
}

func (o MySqlMysqlUserConfigMigrationPtrOutput) ToMySqlMysqlUserConfigMigrationPtrOutput() MySqlMysqlUserConfigMigrationPtrOutput {
	return o
}

func (o MySqlMysqlUserConfigMigrationPtrOutput) ToMySqlMysqlUserConfigMigrationPtrOutputWithContext(ctx context.Context) MySqlMysqlUserConfigMigrationPtrOutput {
	return o
}

func (o MySqlMysqlUserConfigMigrationPtrOutput) Elem() MySqlMysqlUserConfigMigrationOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMigration) MySqlMysqlUserConfigMigration { return *v }).(MySqlMysqlUserConfigMigrationOutput)
}

// Database name for bootstrapping the initial connection
func (o MySqlMysqlUserConfigMigrationPtrOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Dbname
	}).(pulumi.StringPtrOutput)
}

// Hostname or IP address of the server where to migrate data from
func (o MySqlMysqlUserConfigMigrationPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Comma-separated list of databases, which should be ignored
// during migration (supported by MySQL only at the moment)
func (o MySqlMysqlUserConfigMigrationPtrOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.IgnoreDbs
	}).(pulumi.StringPtrOutput)
}

// Password for authentication with the server where to migrate data from
func (o MySqlMysqlUserConfigMigrationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Port number of the server where to migrate data from
func (o MySqlMysqlUserConfigMigrationPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// The server where to migrate data from is secured with SSL
func (o MySqlMysqlUserConfigMigrationPtrOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Ssl
	}).(pulumi.StringPtrOutput)
}

// User name for authentication with the server where to migrate data from
func (o MySqlMysqlUserConfigMigrationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type MySqlMysqlUserConfigMysql struct {
	// The number of seconds that the mysqld server waits for a
	// connect packet before responding with Bad handshake
	ConnectTimeout *string `pulumi:"connectTimeout"`
	// Default server time zone as an offset from UTC
	// (from -12:00 to +12:00), a time zone name, or 'SYSTEM' to use the MySQL server default.
	DefaultTimeZone *string `pulumi:"defaultTimeZone"`
	// The maximum permitted result length in bytes for
	// the GROUP_CONCAT() function.
	GroupConcatMaxLen *string `pulumi:"groupConcatMaxLen"`
	// The time, in seconds, before cached
	// statistics expire
	InformationSchemaStatsExpiry *string `pulumi:"informationSchemaStatsExpiry"`
	// Minimum length of words that are stored in
	// an InnoDB FULLTEXT index.
	InnodbFtMinTokenSize *string `pulumi:"innodbFtMinTokenSize"`
	// This option is used to specify your
	// own InnoDB FULLTEXT index stopword list for all InnoDB tables.
	InnodbFtServerStopwordTable *string `pulumi:"innodbFtServerStopwordTable"`
	// The length of time in seconds an InnoDB
	// transaction waits for a row lock before giving up.
	InnodbLockWaitTimeout *string `pulumi:"innodbLockWaitTimeout"`
	// The size in bytes of the buffer that InnoDB
	// uses to write to the log files on disk.
	InnodbLogBufferSize *string `pulumi:"innodbLogBufferSize"`
	// The upper limit in bytes on the
	// size of the temporary log files used during online DDL operations for InnoDB tables.
	InnodbOnlineAlterLogMaxSize *string `pulumi:"innodbOnlineAlterLogMaxSize"`
	// When enabled, information about all
	// deadlocks in InnoDB user transactions is recorded in the error log. Disabled by default.
	InnodbPrintAllDeadlocks *string `pulumi:"innodbPrintAllDeadlocks"`
	// When enabled a transaction timeout
	// causes InnoDB to abort and roll back the entire transaction.
	InnodbRollbackOnTimeout *string `pulumi:"innodbRollbackOnTimeout"`
	// The number of seconds the server waits for
	// activity on an interactive connection before closing it.
	InteractiveTimeout *string `pulumi:"interactiveTimeout"`
	// The slowQueryLogs work as SQL statements that take
	// more than longQueryTime seconds to execute. Default is 10s
	LongQueryTime *string `pulumi:"longQueryTime"`
	// Size of the largest message in bytes that can
	// be received by the server. Default is 67108864 (64M)
	MaxAllowedPacket *string `pulumi:"maxAllowedPacket"`
	// Limits the size of internal in-memory tables.
	// Also set tmp_table_size. Default is 16777216 (16M)
	MaxHeapTableSize *string `pulumi:"maxHeapTableSize"`
	// The number of seconds to wait for more data from
	// a connection before aborting the read.
	NetReadTimeout *string `pulumi:"netReadTimeout"`
	// The number of seconds to wait for a block to be
	// written to a connection before aborting the write.
	NetWriteTimeout *string `pulumi:"netWriteTimeout"`
	// Slow query log enables capturing of slow queries.
	// Setting slowQueryLog to false also truncates the mysql.slow_log table. Default is off
	SlowQueryLog *string `pulumi:"slowQueryLog"`
	// Sort buffer size in bytes for ORDER BY optimization.
	// Default is 262144 (256K)
	SortBufferSize *string `pulumi:"sortBufferSize"`
	// Global SQL mode. Set to empty to use MySQL server defaults.
	// When creating a new service and not setting this field Aiven default SQL mode (strict,
	// SQL standard compliant) will be assigned.
	SqlMode *string `pulumi:"sqlMode"`
	// Require primary key to be defined for new
	// tables or old tables modified with ALTER TABLE and fail if missing. It is recommended
	// to always have primary keys because various functionality may break if any large table
	// is missing them.
	SqlRequirePrimaryKey *string `pulumi:"sqlRequirePrimaryKey"`
	// Limits the size of internal in-memory tables. Also set
	// max_heap_table_size. Default is 16777216 (16M)
	TmpTableSize *string `pulumi:"tmpTableSize"`
	// The number of seconds the server waits for activity on
	// a noninteractive connection before closing it.
	WaitTimeout *string `pulumi:"waitTimeout"`
}

// MySqlMysqlUserConfigMysqlInput is an input type that accepts MySqlMysqlUserConfigMysqlArgs and MySqlMysqlUserConfigMysqlOutput values.
// You can construct a concrete instance of `MySqlMysqlUserConfigMysqlInput` via:
//
//          MySqlMysqlUserConfigMysqlArgs{...}
type MySqlMysqlUserConfigMysqlInput interface {
	pulumi.Input

	ToMySqlMysqlUserConfigMysqlOutput() MySqlMysqlUserConfigMysqlOutput
	ToMySqlMysqlUserConfigMysqlOutputWithContext(context.Context) MySqlMysqlUserConfigMysqlOutput
}

type MySqlMysqlUserConfigMysqlArgs struct {
	// The number of seconds that the mysqld server waits for a
	// connect packet before responding with Bad handshake
	ConnectTimeout pulumi.StringPtrInput `pulumi:"connectTimeout"`
	// Default server time zone as an offset from UTC
	// (from -12:00 to +12:00), a time zone name, or 'SYSTEM' to use the MySQL server default.
	DefaultTimeZone pulumi.StringPtrInput `pulumi:"defaultTimeZone"`
	// The maximum permitted result length in bytes for
	// the GROUP_CONCAT() function.
	GroupConcatMaxLen pulumi.StringPtrInput `pulumi:"groupConcatMaxLen"`
	// The time, in seconds, before cached
	// statistics expire
	InformationSchemaStatsExpiry pulumi.StringPtrInput `pulumi:"informationSchemaStatsExpiry"`
	// Minimum length of words that are stored in
	// an InnoDB FULLTEXT index.
	InnodbFtMinTokenSize pulumi.StringPtrInput `pulumi:"innodbFtMinTokenSize"`
	// This option is used to specify your
	// own InnoDB FULLTEXT index stopword list for all InnoDB tables.
	InnodbFtServerStopwordTable pulumi.StringPtrInput `pulumi:"innodbFtServerStopwordTable"`
	// The length of time in seconds an InnoDB
	// transaction waits for a row lock before giving up.
	InnodbLockWaitTimeout pulumi.StringPtrInput `pulumi:"innodbLockWaitTimeout"`
	// The size in bytes of the buffer that InnoDB
	// uses to write to the log files on disk.
	InnodbLogBufferSize pulumi.StringPtrInput `pulumi:"innodbLogBufferSize"`
	// The upper limit in bytes on the
	// size of the temporary log files used during online DDL operations for InnoDB tables.
	InnodbOnlineAlterLogMaxSize pulumi.StringPtrInput `pulumi:"innodbOnlineAlterLogMaxSize"`
	// When enabled, information about all
	// deadlocks in InnoDB user transactions is recorded in the error log. Disabled by default.
	InnodbPrintAllDeadlocks pulumi.StringPtrInput `pulumi:"innodbPrintAllDeadlocks"`
	// When enabled a transaction timeout
	// causes InnoDB to abort and roll back the entire transaction.
	InnodbRollbackOnTimeout pulumi.StringPtrInput `pulumi:"innodbRollbackOnTimeout"`
	// The number of seconds the server waits for
	// activity on an interactive connection before closing it.
	InteractiveTimeout pulumi.StringPtrInput `pulumi:"interactiveTimeout"`
	// The slowQueryLogs work as SQL statements that take
	// more than longQueryTime seconds to execute. Default is 10s
	LongQueryTime pulumi.StringPtrInput `pulumi:"longQueryTime"`
	// Size of the largest message in bytes that can
	// be received by the server. Default is 67108864 (64M)
	MaxAllowedPacket pulumi.StringPtrInput `pulumi:"maxAllowedPacket"`
	// Limits the size of internal in-memory tables.
	// Also set tmp_table_size. Default is 16777216 (16M)
	MaxHeapTableSize pulumi.StringPtrInput `pulumi:"maxHeapTableSize"`
	// The number of seconds to wait for more data from
	// a connection before aborting the read.
	NetReadTimeout pulumi.StringPtrInput `pulumi:"netReadTimeout"`
	// The number of seconds to wait for a block to be
	// written to a connection before aborting the write.
	NetWriteTimeout pulumi.StringPtrInput `pulumi:"netWriteTimeout"`
	// Slow query log enables capturing of slow queries.
	// Setting slowQueryLog to false also truncates the mysql.slow_log table. Default is off
	SlowQueryLog pulumi.StringPtrInput `pulumi:"slowQueryLog"`
	// Sort buffer size in bytes for ORDER BY optimization.
	// Default is 262144 (256K)
	SortBufferSize pulumi.StringPtrInput `pulumi:"sortBufferSize"`
	// Global SQL mode. Set to empty to use MySQL server defaults.
	// When creating a new service and not setting this field Aiven default SQL mode (strict,
	// SQL standard compliant) will be assigned.
	SqlMode pulumi.StringPtrInput `pulumi:"sqlMode"`
	// Require primary key to be defined for new
	// tables or old tables modified with ALTER TABLE and fail if missing. It is recommended
	// to always have primary keys because various functionality may break if any large table
	// is missing them.
	SqlRequirePrimaryKey pulumi.StringPtrInput `pulumi:"sqlRequirePrimaryKey"`
	// Limits the size of internal in-memory tables. Also set
	// max_heap_table_size. Default is 16777216 (16M)
	TmpTableSize pulumi.StringPtrInput `pulumi:"tmpTableSize"`
	// The number of seconds the server waits for activity on
	// a noninteractive connection before closing it.
	WaitTimeout pulumi.StringPtrInput `pulumi:"waitTimeout"`
}

func (MySqlMysqlUserConfigMysqlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlMysqlUserConfigMysql)(nil)).Elem()
}

func (i MySqlMysqlUserConfigMysqlArgs) ToMySqlMysqlUserConfigMysqlOutput() MySqlMysqlUserConfigMysqlOutput {
	return i.ToMySqlMysqlUserConfigMysqlOutputWithContext(context.Background())
}

func (i MySqlMysqlUserConfigMysqlArgs) ToMySqlMysqlUserConfigMysqlOutputWithContext(ctx context.Context) MySqlMysqlUserConfigMysqlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlMysqlUserConfigMysqlOutput)
}

func (i MySqlMysqlUserConfigMysqlArgs) ToMySqlMysqlUserConfigMysqlPtrOutput() MySqlMysqlUserConfigMysqlPtrOutput {
	return i.ToMySqlMysqlUserConfigMysqlPtrOutputWithContext(context.Background())
}

func (i MySqlMysqlUserConfigMysqlArgs) ToMySqlMysqlUserConfigMysqlPtrOutputWithContext(ctx context.Context) MySqlMysqlUserConfigMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlMysqlUserConfigMysqlOutput).ToMySqlMysqlUserConfigMysqlPtrOutputWithContext(ctx)
}

// MySqlMysqlUserConfigMysqlPtrInput is an input type that accepts MySqlMysqlUserConfigMysqlArgs, MySqlMysqlUserConfigMysqlPtr and MySqlMysqlUserConfigMysqlPtrOutput values.
// You can construct a concrete instance of `MySqlMysqlUserConfigMysqlPtrInput` via:
//
//          MySqlMysqlUserConfigMysqlArgs{...}
//
//  or:
//
//          nil
type MySqlMysqlUserConfigMysqlPtrInput interface {
	pulumi.Input

	ToMySqlMysqlUserConfigMysqlPtrOutput() MySqlMysqlUserConfigMysqlPtrOutput
	ToMySqlMysqlUserConfigMysqlPtrOutputWithContext(context.Context) MySqlMysqlUserConfigMysqlPtrOutput
}

type mySqlMysqlUserConfigMysqlPtrType MySqlMysqlUserConfigMysqlArgs

func MySqlMysqlUserConfigMysqlPtr(v *MySqlMysqlUserConfigMysqlArgs) MySqlMysqlUserConfigMysqlPtrInput {
	return (*mySqlMysqlUserConfigMysqlPtrType)(v)
}

func (*mySqlMysqlUserConfigMysqlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MySqlMysqlUserConfigMysql)(nil)).Elem()
}

func (i *mySqlMysqlUserConfigMysqlPtrType) ToMySqlMysqlUserConfigMysqlPtrOutput() MySqlMysqlUserConfigMysqlPtrOutput {
	return i.ToMySqlMysqlUserConfigMysqlPtrOutputWithContext(context.Background())
}

func (i *mySqlMysqlUserConfigMysqlPtrType) ToMySqlMysqlUserConfigMysqlPtrOutputWithContext(ctx context.Context) MySqlMysqlUserConfigMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlMysqlUserConfigMysqlPtrOutput)
}

type MySqlMysqlUserConfigMysqlOutput struct{ *pulumi.OutputState }

func (MySqlMysqlUserConfigMysqlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlMysqlUserConfigMysql)(nil)).Elem()
}

func (o MySqlMysqlUserConfigMysqlOutput) ToMySqlMysqlUserConfigMysqlOutput() MySqlMysqlUserConfigMysqlOutput {
	return o
}

func (o MySqlMysqlUserConfigMysqlOutput) ToMySqlMysqlUserConfigMysqlOutputWithContext(ctx context.Context) MySqlMysqlUserConfigMysqlOutput {
	return o
}

func (o MySqlMysqlUserConfigMysqlOutput) ToMySqlMysqlUserConfigMysqlPtrOutput() MySqlMysqlUserConfigMysqlPtrOutput {
	return o.ToMySqlMysqlUserConfigMysqlPtrOutputWithContext(context.Background())
}

func (o MySqlMysqlUserConfigMysqlOutput) ToMySqlMysqlUserConfigMysqlPtrOutputWithContext(ctx context.Context) MySqlMysqlUserConfigMysqlPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMysql) *MySqlMysqlUserConfigMysql {
		return &v
	}).(MySqlMysqlUserConfigMysqlPtrOutput)
}

// The number of seconds that the mysqld server waits for a
// connect packet before responding with Bad handshake
func (o MySqlMysqlUserConfigMysqlOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMysql) *string { return v.ConnectTimeout }).(pulumi.StringPtrOutput)
}

// Default server time zone as an offset from UTC
// (from -12:00 to +12:00), a time zone name, or 'SYSTEM' to use the MySQL server default.
func (o MySqlMysqlUserConfigMysqlOutput) DefaultTimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMysql) *string { return v.DefaultTimeZone }).(pulumi.StringPtrOutput)
}

// The maximum permitted result length in bytes for
// the GROUP_CONCAT() function.
func (o MySqlMysqlUserConfigMysqlOutput) GroupConcatMaxLen() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMysql) *string { return v.GroupConcatMaxLen }).(pulumi.StringPtrOutput)
}

// The time, in seconds, before cached
// statistics expire
func (o MySqlMysqlUserConfigMysqlOutput) InformationSchemaStatsExpiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMysql) *string { return v.InformationSchemaStatsExpiry }).(pulumi.StringPtrOutput)
}

// Minimum length of words that are stored in
// an InnoDB FULLTEXT index.
func (o MySqlMysqlUserConfigMysqlOutput) InnodbFtMinTokenSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMysql) *string { return v.InnodbFtMinTokenSize }).(pulumi.StringPtrOutput)
}

// This option is used to specify your
// own InnoDB FULLTEXT index stopword list for all InnoDB tables.
func (o MySqlMysqlUserConfigMysqlOutput) InnodbFtServerStopwordTable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMysql) *string { return v.InnodbFtServerStopwordTable }).(pulumi.StringPtrOutput)
}

// The length of time in seconds an InnoDB
// transaction waits for a row lock before giving up.
func (o MySqlMysqlUserConfigMysqlOutput) InnodbLockWaitTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMysql) *string { return v.InnodbLockWaitTimeout }).(pulumi.StringPtrOutput)
}

// The size in bytes of the buffer that InnoDB
// uses to write to the log files on disk.
func (o MySqlMysqlUserConfigMysqlOutput) InnodbLogBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMysql) *string { return v.InnodbLogBufferSize }).(pulumi.StringPtrOutput)
}

// The upper limit in bytes on the
// size of the temporary log files used during online DDL operations for InnoDB tables.
func (o MySqlMysqlUserConfigMysqlOutput) InnodbOnlineAlterLogMaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMysql) *string { return v.InnodbOnlineAlterLogMaxSize }).(pulumi.StringPtrOutput)
}

// When enabled, information about all
// deadlocks in InnoDB user transactions is recorded in the error log. Disabled by default.
func (o MySqlMysqlUserConfigMysqlOutput) InnodbPrintAllDeadlocks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMysql) *string { return v.InnodbPrintAllDeadlocks }).(pulumi.StringPtrOutput)
}

// When enabled a transaction timeout
// causes InnoDB to abort and roll back the entire transaction.
func (o MySqlMysqlUserConfigMysqlOutput) InnodbRollbackOnTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMysql) *string { return v.InnodbRollbackOnTimeout }).(pulumi.StringPtrOutput)
}

// The number of seconds the server waits for
// activity on an interactive connection before closing it.
func (o MySqlMysqlUserConfigMysqlOutput) InteractiveTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMysql) *string { return v.InteractiveTimeout }).(pulumi.StringPtrOutput)
}

// The slowQueryLogs work as SQL statements that take
// more than longQueryTime seconds to execute. Default is 10s
func (o MySqlMysqlUserConfigMysqlOutput) LongQueryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMysql) *string { return v.LongQueryTime }).(pulumi.StringPtrOutput)
}

// Size of the largest message in bytes that can
// be received by the server. Default is 67108864 (64M)
func (o MySqlMysqlUserConfigMysqlOutput) MaxAllowedPacket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMysql) *string { return v.MaxAllowedPacket }).(pulumi.StringPtrOutput)
}

// Limits the size of internal in-memory tables.
// Also set tmp_table_size. Default is 16777216 (16M)
func (o MySqlMysqlUserConfigMysqlOutput) MaxHeapTableSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMysql) *string { return v.MaxHeapTableSize }).(pulumi.StringPtrOutput)
}

// The number of seconds to wait for more data from
// a connection before aborting the read.
func (o MySqlMysqlUserConfigMysqlOutput) NetReadTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMysql) *string { return v.NetReadTimeout }).(pulumi.StringPtrOutput)
}

// The number of seconds to wait for a block to be
// written to a connection before aborting the write.
func (o MySqlMysqlUserConfigMysqlOutput) NetWriteTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMysql) *string { return v.NetWriteTimeout }).(pulumi.StringPtrOutput)
}

// Slow query log enables capturing of slow queries.
// Setting slowQueryLog to false also truncates the mysql.slow_log table. Default is off
func (o MySqlMysqlUserConfigMysqlOutput) SlowQueryLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMysql) *string { return v.SlowQueryLog }).(pulumi.StringPtrOutput)
}

// Sort buffer size in bytes for ORDER BY optimization.
// Default is 262144 (256K)
func (o MySqlMysqlUserConfigMysqlOutput) SortBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMysql) *string { return v.SortBufferSize }).(pulumi.StringPtrOutput)
}

// Global SQL mode. Set to empty to use MySQL server defaults.
// When creating a new service and not setting this field Aiven default SQL mode (strict,
// SQL standard compliant) will be assigned.
func (o MySqlMysqlUserConfigMysqlOutput) SqlMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMysql) *string { return v.SqlMode }).(pulumi.StringPtrOutput)
}

// Require primary key to be defined for new
// tables or old tables modified with ALTER TABLE and fail if missing. It is recommended
// to always have primary keys because various functionality may break if any large table
// is missing them.
func (o MySqlMysqlUserConfigMysqlOutput) SqlRequirePrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMysql) *string { return v.SqlRequirePrimaryKey }).(pulumi.StringPtrOutput)
}

// Limits the size of internal in-memory tables. Also set
// max_heap_table_size. Default is 16777216 (16M)
func (o MySqlMysqlUserConfigMysqlOutput) TmpTableSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMysql) *string { return v.TmpTableSize }).(pulumi.StringPtrOutput)
}

// The number of seconds the server waits for activity on
// a noninteractive connection before closing it.
func (o MySqlMysqlUserConfigMysqlOutput) WaitTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigMysql) *string { return v.WaitTimeout }).(pulumi.StringPtrOutput)
}

type MySqlMysqlUserConfigMysqlPtrOutput struct{ *pulumi.OutputState }

func (MySqlMysqlUserConfigMysqlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MySqlMysqlUserConfigMysql)(nil)).Elem()
}

func (o MySqlMysqlUserConfigMysqlPtrOutput) ToMySqlMysqlUserConfigMysqlPtrOutput() MySqlMysqlUserConfigMysqlPtrOutput {
	return o
}

func (o MySqlMysqlUserConfigMysqlPtrOutput) ToMySqlMysqlUserConfigMysqlPtrOutputWithContext(ctx context.Context) MySqlMysqlUserConfigMysqlPtrOutput {
	return o
}

func (o MySqlMysqlUserConfigMysqlPtrOutput) Elem() MySqlMysqlUserConfigMysqlOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMysql) MySqlMysqlUserConfigMysql { return *v }).(MySqlMysqlUserConfigMysqlOutput)
}

// The number of seconds that the mysqld server waits for a
// connect packet before responding with Bad handshake
func (o MySqlMysqlUserConfigMysqlPtrOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.ConnectTimeout
	}).(pulumi.StringPtrOutput)
}

// Default server time zone as an offset from UTC
// (from -12:00 to +12:00), a time zone name, or 'SYSTEM' to use the MySQL server default.
func (o MySqlMysqlUserConfigMysqlPtrOutput) DefaultTimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.DefaultTimeZone
	}).(pulumi.StringPtrOutput)
}

// The maximum permitted result length in bytes for
// the GROUP_CONCAT() function.
func (o MySqlMysqlUserConfigMysqlPtrOutput) GroupConcatMaxLen() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.GroupConcatMaxLen
	}).(pulumi.StringPtrOutput)
}

// The time, in seconds, before cached
// statistics expire
func (o MySqlMysqlUserConfigMysqlPtrOutput) InformationSchemaStatsExpiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InformationSchemaStatsExpiry
	}).(pulumi.StringPtrOutput)
}

// Minimum length of words that are stored in
// an InnoDB FULLTEXT index.
func (o MySqlMysqlUserConfigMysqlPtrOutput) InnodbFtMinTokenSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbFtMinTokenSize
	}).(pulumi.StringPtrOutput)
}

// This option is used to specify your
// own InnoDB FULLTEXT index stopword list for all InnoDB tables.
func (o MySqlMysqlUserConfigMysqlPtrOutput) InnodbFtServerStopwordTable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbFtServerStopwordTable
	}).(pulumi.StringPtrOutput)
}

// The length of time in seconds an InnoDB
// transaction waits for a row lock before giving up.
func (o MySqlMysqlUserConfigMysqlPtrOutput) InnodbLockWaitTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbLockWaitTimeout
	}).(pulumi.StringPtrOutput)
}

// The size in bytes of the buffer that InnoDB
// uses to write to the log files on disk.
func (o MySqlMysqlUserConfigMysqlPtrOutput) InnodbLogBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbLogBufferSize
	}).(pulumi.StringPtrOutput)
}

// The upper limit in bytes on the
// size of the temporary log files used during online DDL operations for InnoDB tables.
func (o MySqlMysqlUserConfigMysqlPtrOutput) InnodbOnlineAlterLogMaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbOnlineAlterLogMaxSize
	}).(pulumi.StringPtrOutput)
}

// When enabled, information about all
// deadlocks in InnoDB user transactions is recorded in the error log. Disabled by default.
func (o MySqlMysqlUserConfigMysqlPtrOutput) InnodbPrintAllDeadlocks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbPrintAllDeadlocks
	}).(pulumi.StringPtrOutput)
}

// When enabled a transaction timeout
// causes InnoDB to abort and roll back the entire transaction.
func (o MySqlMysqlUserConfigMysqlPtrOutput) InnodbRollbackOnTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbRollbackOnTimeout
	}).(pulumi.StringPtrOutput)
}

// The number of seconds the server waits for
// activity on an interactive connection before closing it.
func (o MySqlMysqlUserConfigMysqlPtrOutput) InteractiveTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InteractiveTimeout
	}).(pulumi.StringPtrOutput)
}

// The slowQueryLogs work as SQL statements that take
// more than longQueryTime seconds to execute. Default is 10s
func (o MySqlMysqlUserConfigMysqlPtrOutput) LongQueryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.LongQueryTime
	}).(pulumi.StringPtrOutput)
}

// Size of the largest message in bytes that can
// be received by the server. Default is 67108864 (64M)
func (o MySqlMysqlUserConfigMysqlPtrOutput) MaxAllowedPacket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.MaxAllowedPacket
	}).(pulumi.StringPtrOutput)
}

// Limits the size of internal in-memory tables.
// Also set tmp_table_size. Default is 16777216 (16M)
func (o MySqlMysqlUserConfigMysqlPtrOutput) MaxHeapTableSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.MaxHeapTableSize
	}).(pulumi.StringPtrOutput)
}

// The number of seconds to wait for more data from
// a connection before aborting the read.
func (o MySqlMysqlUserConfigMysqlPtrOutput) NetReadTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.NetReadTimeout
	}).(pulumi.StringPtrOutput)
}

// The number of seconds to wait for a block to be
// written to a connection before aborting the write.
func (o MySqlMysqlUserConfigMysqlPtrOutput) NetWriteTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.NetWriteTimeout
	}).(pulumi.StringPtrOutput)
}

// Slow query log enables capturing of slow queries.
// Setting slowQueryLog to false also truncates the mysql.slow_log table. Default is off
func (o MySqlMysqlUserConfigMysqlPtrOutput) SlowQueryLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.SlowQueryLog
	}).(pulumi.StringPtrOutput)
}

// Sort buffer size in bytes for ORDER BY optimization.
// Default is 262144 (256K)
func (o MySqlMysqlUserConfigMysqlPtrOutput) SortBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.SortBufferSize
	}).(pulumi.StringPtrOutput)
}

// Global SQL mode. Set to empty to use MySQL server defaults.
// When creating a new service and not setting this field Aiven default SQL mode (strict,
// SQL standard compliant) will be assigned.
func (o MySqlMysqlUserConfigMysqlPtrOutput) SqlMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.SqlMode
	}).(pulumi.StringPtrOutput)
}

// Require primary key to be defined for new
// tables or old tables modified with ALTER TABLE and fail if missing. It is recommended
// to always have primary keys because various functionality may break if any large table
// is missing them.
func (o MySqlMysqlUserConfigMysqlPtrOutput) SqlRequirePrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.SqlRequirePrimaryKey
	}).(pulumi.StringPtrOutput)
}

// Limits the size of internal in-memory tables. Also set
// max_heap_table_size. Default is 16777216 (16M)
func (o MySqlMysqlUserConfigMysqlPtrOutput) TmpTableSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.TmpTableSize
	}).(pulumi.StringPtrOutput)
}

// The number of seconds the server waits for activity on
// a noninteractive connection before closing it.
func (o MySqlMysqlUserConfigMysqlPtrOutput) WaitTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.WaitTimeout
	}).(pulumi.StringPtrOutput)
}

type MySqlMysqlUserConfigPrivateAccess struct {
	// Allow clients to connect to mysql from the public internet for service
	// nodes that are in a project VPC or another type of private network
	Mysql *string `pulumi:"mysql"`
	// Allow clients to connect to prometheus from the public internet
	// for service nodes that are in a project VPC or another type of private network
	Prometheus *string `pulumi:"prometheus"`
}

// MySqlMysqlUserConfigPrivateAccessInput is an input type that accepts MySqlMysqlUserConfigPrivateAccessArgs and MySqlMysqlUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `MySqlMysqlUserConfigPrivateAccessInput` via:
//
//          MySqlMysqlUserConfigPrivateAccessArgs{...}
type MySqlMysqlUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToMySqlMysqlUserConfigPrivateAccessOutput() MySqlMysqlUserConfigPrivateAccessOutput
	ToMySqlMysqlUserConfigPrivateAccessOutputWithContext(context.Context) MySqlMysqlUserConfigPrivateAccessOutput
}

type MySqlMysqlUserConfigPrivateAccessArgs struct {
	// Allow clients to connect to mysql from the public internet for service
	// nodes that are in a project VPC or another type of private network
	Mysql pulumi.StringPtrInput `pulumi:"mysql"`
	// Allow clients to connect to prometheus from the public internet
	// for service nodes that are in a project VPC or another type of private network
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (MySqlMysqlUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlMysqlUserConfigPrivateAccess)(nil)).Elem()
}

func (i MySqlMysqlUserConfigPrivateAccessArgs) ToMySqlMysqlUserConfigPrivateAccessOutput() MySqlMysqlUserConfigPrivateAccessOutput {
	return i.ToMySqlMysqlUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i MySqlMysqlUserConfigPrivateAccessArgs) ToMySqlMysqlUserConfigPrivateAccessOutputWithContext(ctx context.Context) MySqlMysqlUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlMysqlUserConfigPrivateAccessOutput)
}

func (i MySqlMysqlUserConfigPrivateAccessArgs) ToMySqlMysqlUserConfigPrivateAccessPtrOutput() MySqlMysqlUserConfigPrivateAccessPtrOutput {
	return i.ToMySqlMysqlUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i MySqlMysqlUserConfigPrivateAccessArgs) ToMySqlMysqlUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) MySqlMysqlUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlMysqlUserConfigPrivateAccessOutput).ToMySqlMysqlUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// MySqlMysqlUserConfigPrivateAccessPtrInput is an input type that accepts MySqlMysqlUserConfigPrivateAccessArgs, MySqlMysqlUserConfigPrivateAccessPtr and MySqlMysqlUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `MySqlMysqlUserConfigPrivateAccessPtrInput` via:
//
//          MySqlMysqlUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type MySqlMysqlUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToMySqlMysqlUserConfigPrivateAccessPtrOutput() MySqlMysqlUserConfigPrivateAccessPtrOutput
	ToMySqlMysqlUserConfigPrivateAccessPtrOutputWithContext(context.Context) MySqlMysqlUserConfigPrivateAccessPtrOutput
}

type mySqlMysqlUserConfigPrivateAccessPtrType MySqlMysqlUserConfigPrivateAccessArgs

func MySqlMysqlUserConfigPrivateAccessPtr(v *MySqlMysqlUserConfigPrivateAccessArgs) MySqlMysqlUserConfigPrivateAccessPtrInput {
	return (*mySqlMysqlUserConfigPrivateAccessPtrType)(v)
}

func (*mySqlMysqlUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MySqlMysqlUserConfigPrivateAccess)(nil)).Elem()
}

func (i *mySqlMysqlUserConfigPrivateAccessPtrType) ToMySqlMysqlUserConfigPrivateAccessPtrOutput() MySqlMysqlUserConfigPrivateAccessPtrOutput {
	return i.ToMySqlMysqlUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *mySqlMysqlUserConfigPrivateAccessPtrType) ToMySqlMysqlUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) MySqlMysqlUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlMysqlUserConfigPrivateAccessPtrOutput)
}

type MySqlMysqlUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (MySqlMysqlUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlMysqlUserConfigPrivateAccess)(nil)).Elem()
}

func (o MySqlMysqlUserConfigPrivateAccessOutput) ToMySqlMysqlUserConfigPrivateAccessOutput() MySqlMysqlUserConfigPrivateAccessOutput {
	return o
}

func (o MySqlMysqlUserConfigPrivateAccessOutput) ToMySqlMysqlUserConfigPrivateAccessOutputWithContext(ctx context.Context) MySqlMysqlUserConfigPrivateAccessOutput {
	return o
}

func (o MySqlMysqlUserConfigPrivateAccessOutput) ToMySqlMysqlUserConfigPrivateAccessPtrOutput() MySqlMysqlUserConfigPrivateAccessPtrOutput {
	return o.ToMySqlMysqlUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o MySqlMysqlUserConfigPrivateAccessOutput) ToMySqlMysqlUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) MySqlMysqlUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigPrivateAccess) *MySqlMysqlUserConfigPrivateAccess {
		return &v
	}).(MySqlMysqlUserConfigPrivateAccessPtrOutput)
}

// Allow clients to connect to mysql from the public internet for service
// nodes that are in a project VPC or another type of private network
func (o MySqlMysqlUserConfigPrivateAccessOutput) Mysql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigPrivateAccess) *string { return v.Mysql }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public internet
// for service nodes that are in a project VPC or another type of private network
func (o MySqlMysqlUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type MySqlMysqlUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (MySqlMysqlUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MySqlMysqlUserConfigPrivateAccess)(nil)).Elem()
}

func (o MySqlMysqlUserConfigPrivateAccessPtrOutput) ToMySqlMysqlUserConfigPrivateAccessPtrOutput() MySqlMysqlUserConfigPrivateAccessPtrOutput {
	return o
}

func (o MySqlMysqlUserConfigPrivateAccessPtrOutput) ToMySqlMysqlUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) MySqlMysqlUserConfigPrivateAccessPtrOutput {
	return o
}

func (o MySqlMysqlUserConfigPrivateAccessPtrOutput) Elem() MySqlMysqlUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigPrivateAccess) MySqlMysqlUserConfigPrivateAccess { return *v }).(MySqlMysqlUserConfigPrivateAccessOutput)
}

// Allow clients to connect to mysql from the public internet for service
// nodes that are in a project VPC or another type of private network
func (o MySqlMysqlUserConfigPrivateAccessPtrOutput) Mysql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Mysql
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public internet
// for service nodes that are in a project VPC or another type of private network
func (o MySqlMysqlUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type MySqlMysqlUserConfigPrivatelinkAccess struct {
	// Allow clients to connect to mysql from the public internet for service
	// nodes that are in a project VPC or another type of private network
	Mysql *string `pulumi:"mysql"`
}

// MySqlMysqlUserConfigPrivatelinkAccessInput is an input type that accepts MySqlMysqlUserConfigPrivatelinkAccessArgs and MySqlMysqlUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `MySqlMysqlUserConfigPrivatelinkAccessInput` via:
//
//          MySqlMysqlUserConfigPrivatelinkAccessArgs{...}
type MySqlMysqlUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToMySqlMysqlUserConfigPrivatelinkAccessOutput() MySqlMysqlUserConfigPrivatelinkAccessOutput
	ToMySqlMysqlUserConfigPrivatelinkAccessOutputWithContext(context.Context) MySqlMysqlUserConfigPrivatelinkAccessOutput
}

type MySqlMysqlUserConfigPrivatelinkAccessArgs struct {
	// Allow clients to connect to mysql from the public internet for service
	// nodes that are in a project VPC or another type of private network
	Mysql pulumi.StringPtrInput `pulumi:"mysql"`
}

func (MySqlMysqlUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlMysqlUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i MySqlMysqlUserConfigPrivatelinkAccessArgs) ToMySqlMysqlUserConfigPrivatelinkAccessOutput() MySqlMysqlUserConfigPrivatelinkAccessOutput {
	return i.ToMySqlMysqlUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i MySqlMysqlUserConfigPrivatelinkAccessArgs) ToMySqlMysqlUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) MySqlMysqlUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlMysqlUserConfigPrivatelinkAccessOutput)
}

func (i MySqlMysqlUserConfigPrivatelinkAccessArgs) ToMySqlMysqlUserConfigPrivatelinkAccessPtrOutput() MySqlMysqlUserConfigPrivatelinkAccessPtrOutput {
	return i.ToMySqlMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i MySqlMysqlUserConfigPrivatelinkAccessArgs) ToMySqlMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) MySqlMysqlUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlMysqlUserConfigPrivatelinkAccessOutput).ToMySqlMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// MySqlMysqlUserConfigPrivatelinkAccessPtrInput is an input type that accepts MySqlMysqlUserConfigPrivatelinkAccessArgs, MySqlMysqlUserConfigPrivatelinkAccessPtr and MySqlMysqlUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `MySqlMysqlUserConfigPrivatelinkAccessPtrInput` via:
//
//          MySqlMysqlUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type MySqlMysqlUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToMySqlMysqlUserConfigPrivatelinkAccessPtrOutput() MySqlMysqlUserConfigPrivatelinkAccessPtrOutput
	ToMySqlMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) MySqlMysqlUserConfigPrivatelinkAccessPtrOutput
}

type mySqlMysqlUserConfigPrivatelinkAccessPtrType MySqlMysqlUserConfigPrivatelinkAccessArgs

func MySqlMysqlUserConfigPrivatelinkAccessPtr(v *MySqlMysqlUserConfigPrivatelinkAccessArgs) MySqlMysqlUserConfigPrivatelinkAccessPtrInput {
	return (*mySqlMysqlUserConfigPrivatelinkAccessPtrType)(v)
}

func (*mySqlMysqlUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MySqlMysqlUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *mySqlMysqlUserConfigPrivatelinkAccessPtrType) ToMySqlMysqlUserConfigPrivatelinkAccessPtrOutput() MySqlMysqlUserConfigPrivatelinkAccessPtrOutput {
	return i.ToMySqlMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *mySqlMysqlUserConfigPrivatelinkAccessPtrType) ToMySqlMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) MySqlMysqlUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlMysqlUserConfigPrivatelinkAccessPtrOutput)
}

type MySqlMysqlUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (MySqlMysqlUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlMysqlUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o MySqlMysqlUserConfigPrivatelinkAccessOutput) ToMySqlMysqlUserConfigPrivatelinkAccessOutput() MySqlMysqlUserConfigPrivatelinkAccessOutput {
	return o
}

func (o MySqlMysqlUserConfigPrivatelinkAccessOutput) ToMySqlMysqlUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) MySqlMysqlUserConfigPrivatelinkAccessOutput {
	return o
}

func (o MySqlMysqlUserConfigPrivatelinkAccessOutput) ToMySqlMysqlUserConfigPrivatelinkAccessPtrOutput() MySqlMysqlUserConfigPrivatelinkAccessPtrOutput {
	return o.ToMySqlMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o MySqlMysqlUserConfigPrivatelinkAccessOutput) ToMySqlMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) MySqlMysqlUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigPrivatelinkAccess) *MySqlMysqlUserConfigPrivatelinkAccess {
		return &v
	}).(MySqlMysqlUserConfigPrivatelinkAccessPtrOutput)
}

// Allow clients to connect to mysql from the public internet for service
// nodes that are in a project VPC or another type of private network
func (o MySqlMysqlUserConfigPrivatelinkAccessOutput) Mysql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigPrivatelinkAccess) *string { return v.Mysql }).(pulumi.StringPtrOutput)
}

type MySqlMysqlUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (MySqlMysqlUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MySqlMysqlUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o MySqlMysqlUserConfigPrivatelinkAccessPtrOutput) ToMySqlMysqlUserConfigPrivatelinkAccessPtrOutput() MySqlMysqlUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o MySqlMysqlUserConfigPrivatelinkAccessPtrOutput) ToMySqlMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) MySqlMysqlUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o MySqlMysqlUserConfigPrivatelinkAccessPtrOutput) Elem() MySqlMysqlUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigPrivatelinkAccess) MySqlMysqlUserConfigPrivatelinkAccess { return *v }).(MySqlMysqlUserConfigPrivatelinkAccessOutput)
}

// Allow clients to connect to mysql from the public internet for service
// nodes that are in a project VPC or another type of private network
func (o MySqlMysqlUserConfigPrivatelinkAccessPtrOutput) Mysql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Mysql
	}).(pulumi.StringPtrOutput)
}

type MySqlMysqlUserConfigPublicAccess struct {
	// Allow clients to connect to mysql from the public internet for service
	// nodes that are in a project VPC or another type of private network
	Mysql *string `pulumi:"mysql"`
	// Allow clients to connect to prometheus from the public internet
	// for service nodes that are in a project VPC or another type of private network
	Prometheus *string `pulumi:"prometheus"`
}

// MySqlMysqlUserConfigPublicAccessInput is an input type that accepts MySqlMysqlUserConfigPublicAccessArgs and MySqlMysqlUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `MySqlMysqlUserConfigPublicAccessInput` via:
//
//          MySqlMysqlUserConfigPublicAccessArgs{...}
type MySqlMysqlUserConfigPublicAccessInput interface {
	pulumi.Input

	ToMySqlMysqlUserConfigPublicAccessOutput() MySqlMysqlUserConfigPublicAccessOutput
	ToMySqlMysqlUserConfigPublicAccessOutputWithContext(context.Context) MySqlMysqlUserConfigPublicAccessOutput
}

type MySqlMysqlUserConfigPublicAccessArgs struct {
	// Allow clients to connect to mysql from the public internet for service
	// nodes that are in a project VPC or another type of private network
	Mysql pulumi.StringPtrInput `pulumi:"mysql"`
	// Allow clients to connect to prometheus from the public internet
	// for service nodes that are in a project VPC or another type of private network
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (MySqlMysqlUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlMysqlUserConfigPublicAccess)(nil)).Elem()
}

func (i MySqlMysqlUserConfigPublicAccessArgs) ToMySqlMysqlUserConfigPublicAccessOutput() MySqlMysqlUserConfigPublicAccessOutput {
	return i.ToMySqlMysqlUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i MySqlMysqlUserConfigPublicAccessArgs) ToMySqlMysqlUserConfigPublicAccessOutputWithContext(ctx context.Context) MySqlMysqlUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlMysqlUserConfigPublicAccessOutput)
}

func (i MySqlMysqlUserConfigPublicAccessArgs) ToMySqlMysqlUserConfigPublicAccessPtrOutput() MySqlMysqlUserConfigPublicAccessPtrOutput {
	return i.ToMySqlMysqlUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i MySqlMysqlUserConfigPublicAccessArgs) ToMySqlMysqlUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) MySqlMysqlUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlMysqlUserConfigPublicAccessOutput).ToMySqlMysqlUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// MySqlMysqlUserConfigPublicAccessPtrInput is an input type that accepts MySqlMysqlUserConfigPublicAccessArgs, MySqlMysqlUserConfigPublicAccessPtr and MySqlMysqlUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `MySqlMysqlUserConfigPublicAccessPtrInput` via:
//
//          MySqlMysqlUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type MySqlMysqlUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToMySqlMysqlUserConfigPublicAccessPtrOutput() MySqlMysqlUserConfigPublicAccessPtrOutput
	ToMySqlMysqlUserConfigPublicAccessPtrOutputWithContext(context.Context) MySqlMysqlUserConfigPublicAccessPtrOutput
}

type mySqlMysqlUserConfigPublicAccessPtrType MySqlMysqlUserConfigPublicAccessArgs

func MySqlMysqlUserConfigPublicAccessPtr(v *MySqlMysqlUserConfigPublicAccessArgs) MySqlMysqlUserConfigPublicAccessPtrInput {
	return (*mySqlMysqlUserConfigPublicAccessPtrType)(v)
}

func (*mySqlMysqlUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MySqlMysqlUserConfigPublicAccess)(nil)).Elem()
}

func (i *mySqlMysqlUserConfigPublicAccessPtrType) ToMySqlMysqlUserConfigPublicAccessPtrOutput() MySqlMysqlUserConfigPublicAccessPtrOutput {
	return i.ToMySqlMysqlUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *mySqlMysqlUserConfigPublicAccessPtrType) ToMySqlMysqlUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) MySqlMysqlUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlMysqlUserConfigPublicAccessPtrOutput)
}

type MySqlMysqlUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (MySqlMysqlUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlMysqlUserConfigPublicAccess)(nil)).Elem()
}

func (o MySqlMysqlUserConfigPublicAccessOutput) ToMySqlMysqlUserConfigPublicAccessOutput() MySqlMysqlUserConfigPublicAccessOutput {
	return o
}

func (o MySqlMysqlUserConfigPublicAccessOutput) ToMySqlMysqlUserConfigPublicAccessOutputWithContext(ctx context.Context) MySqlMysqlUserConfigPublicAccessOutput {
	return o
}

func (o MySqlMysqlUserConfigPublicAccessOutput) ToMySqlMysqlUserConfigPublicAccessPtrOutput() MySqlMysqlUserConfigPublicAccessPtrOutput {
	return o.ToMySqlMysqlUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o MySqlMysqlUserConfigPublicAccessOutput) ToMySqlMysqlUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) MySqlMysqlUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigPublicAccess) *MySqlMysqlUserConfigPublicAccess {
		return &v
	}).(MySqlMysqlUserConfigPublicAccessPtrOutput)
}

// Allow clients to connect to mysql from the public internet for service
// nodes that are in a project VPC or another type of private network
func (o MySqlMysqlUserConfigPublicAccessOutput) Mysql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigPublicAccess) *string { return v.Mysql }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public internet
// for service nodes that are in a project VPC or another type of private network
func (o MySqlMysqlUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlMysqlUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type MySqlMysqlUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (MySqlMysqlUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MySqlMysqlUserConfigPublicAccess)(nil)).Elem()
}

func (o MySqlMysqlUserConfigPublicAccessPtrOutput) ToMySqlMysqlUserConfigPublicAccessPtrOutput() MySqlMysqlUserConfigPublicAccessPtrOutput {
	return o
}

func (o MySqlMysqlUserConfigPublicAccessPtrOutput) ToMySqlMysqlUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) MySqlMysqlUserConfigPublicAccessPtrOutput {
	return o
}

func (o MySqlMysqlUserConfigPublicAccessPtrOutput) Elem() MySqlMysqlUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigPublicAccess) MySqlMysqlUserConfigPublicAccess { return *v }).(MySqlMysqlUserConfigPublicAccessOutput)
}

// Allow clients to connect to mysql from the public internet for service
// nodes that are in a project VPC or another type of private network
func (o MySqlMysqlUserConfigPublicAccessPtrOutput) Mysql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Mysql
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public internet
// for service nodes that are in a project VPC or another type of private network
func (o MySqlMysqlUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlMysqlUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type MySqlServiceIntegration struct {
	IntegrationType   string `pulumi:"integrationType"`
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// MySqlServiceIntegrationInput is an input type that accepts MySqlServiceIntegrationArgs and MySqlServiceIntegrationOutput values.
// You can construct a concrete instance of `MySqlServiceIntegrationInput` via:
//
//          MySqlServiceIntegrationArgs{...}
type MySqlServiceIntegrationInput interface {
	pulumi.Input

	ToMySqlServiceIntegrationOutput() MySqlServiceIntegrationOutput
	ToMySqlServiceIntegrationOutputWithContext(context.Context) MySqlServiceIntegrationOutput
}

type MySqlServiceIntegrationArgs struct {
	IntegrationType   pulumi.StringInput `pulumi:"integrationType"`
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (MySqlServiceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlServiceIntegration)(nil)).Elem()
}

func (i MySqlServiceIntegrationArgs) ToMySqlServiceIntegrationOutput() MySqlServiceIntegrationOutput {
	return i.ToMySqlServiceIntegrationOutputWithContext(context.Background())
}

func (i MySqlServiceIntegrationArgs) ToMySqlServiceIntegrationOutputWithContext(ctx context.Context) MySqlServiceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlServiceIntegrationOutput)
}

// MySqlServiceIntegrationArrayInput is an input type that accepts MySqlServiceIntegrationArray and MySqlServiceIntegrationArrayOutput values.
// You can construct a concrete instance of `MySqlServiceIntegrationArrayInput` via:
//
//          MySqlServiceIntegrationArray{ MySqlServiceIntegrationArgs{...} }
type MySqlServiceIntegrationArrayInput interface {
	pulumi.Input

	ToMySqlServiceIntegrationArrayOutput() MySqlServiceIntegrationArrayOutput
	ToMySqlServiceIntegrationArrayOutputWithContext(context.Context) MySqlServiceIntegrationArrayOutput
}

type MySqlServiceIntegrationArray []MySqlServiceIntegrationInput

func (MySqlServiceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MySqlServiceIntegration)(nil)).Elem()
}

func (i MySqlServiceIntegrationArray) ToMySqlServiceIntegrationArrayOutput() MySqlServiceIntegrationArrayOutput {
	return i.ToMySqlServiceIntegrationArrayOutputWithContext(context.Background())
}

func (i MySqlServiceIntegrationArray) ToMySqlServiceIntegrationArrayOutputWithContext(ctx context.Context) MySqlServiceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlServiceIntegrationArrayOutput)
}

type MySqlServiceIntegrationOutput struct{ *pulumi.OutputState }

func (MySqlServiceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlServiceIntegration)(nil)).Elem()
}

func (o MySqlServiceIntegrationOutput) ToMySqlServiceIntegrationOutput() MySqlServiceIntegrationOutput {
	return o
}

func (o MySqlServiceIntegrationOutput) ToMySqlServiceIntegrationOutputWithContext(ctx context.Context) MySqlServiceIntegrationOutput {
	return o
}

func (o MySqlServiceIntegrationOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v MySqlServiceIntegration) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o MySqlServiceIntegrationOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v MySqlServiceIntegration) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

type MySqlServiceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (MySqlServiceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MySqlServiceIntegration)(nil)).Elem()
}

func (o MySqlServiceIntegrationArrayOutput) ToMySqlServiceIntegrationArrayOutput() MySqlServiceIntegrationArrayOutput {
	return o
}

func (o MySqlServiceIntegrationArrayOutput) ToMySqlServiceIntegrationArrayOutputWithContext(ctx context.Context) MySqlServiceIntegrationArrayOutput {
	return o
}

func (o MySqlServiceIntegrationArrayOutput) Index(i pulumi.IntInput) MySqlServiceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MySqlServiceIntegration {
		return vs[0].([]MySqlServiceIntegration)[vs[1].(int)]
	}).(MySqlServiceIntegrationOutput)
}

type PgComponent struct {
	Component *string `pulumi:"component"`
	// hostname or IP address of the server where to migrate data from.
	Host                      *string `pulumi:"host"`
	KafkaAuthenticationMethod *string `pulumi:"kafkaAuthenticationMethod"`
	// port number of the server where to migrate data from.
	Port  *int    `pulumi:"port"`
	Route *string `pulumi:"route"`
	// the server where to migrate data from is secured with SSL.
	Ssl   *bool   `pulumi:"ssl"`
	Usage *string `pulumi:"usage"`
}

// PgComponentInput is an input type that accepts PgComponentArgs and PgComponentOutput values.
// You can construct a concrete instance of `PgComponentInput` via:
//
//          PgComponentArgs{...}
type PgComponentInput interface {
	pulumi.Input

	ToPgComponentOutput() PgComponentOutput
	ToPgComponentOutputWithContext(context.Context) PgComponentOutput
}

type PgComponentArgs struct {
	Component pulumi.StringPtrInput `pulumi:"component"`
	// hostname or IP address of the server where to migrate data from.
	Host                      pulumi.StringPtrInput `pulumi:"host"`
	KafkaAuthenticationMethod pulumi.StringPtrInput `pulumi:"kafkaAuthenticationMethod"`
	// port number of the server where to migrate data from.
	Port  pulumi.IntPtrInput    `pulumi:"port"`
	Route pulumi.StringPtrInput `pulumi:"route"`
	// the server where to migrate data from is secured with SSL.
	Ssl   pulumi.BoolPtrInput   `pulumi:"ssl"`
	Usage pulumi.StringPtrInput `pulumi:"usage"`
}

func (PgComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PgComponent)(nil)).Elem()
}

func (i PgComponentArgs) ToPgComponentOutput() PgComponentOutput {
	return i.ToPgComponentOutputWithContext(context.Background())
}

func (i PgComponentArgs) ToPgComponentOutputWithContext(ctx context.Context) PgComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgComponentOutput)
}

// PgComponentArrayInput is an input type that accepts PgComponentArray and PgComponentArrayOutput values.
// You can construct a concrete instance of `PgComponentArrayInput` via:
//
//          PgComponentArray{ PgComponentArgs{...} }
type PgComponentArrayInput interface {
	pulumi.Input

	ToPgComponentArrayOutput() PgComponentArrayOutput
	ToPgComponentArrayOutputWithContext(context.Context) PgComponentArrayOutput
}

type PgComponentArray []PgComponentInput

func (PgComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PgComponent)(nil)).Elem()
}

func (i PgComponentArray) ToPgComponentArrayOutput() PgComponentArrayOutput {
	return i.ToPgComponentArrayOutputWithContext(context.Background())
}

func (i PgComponentArray) ToPgComponentArrayOutputWithContext(ctx context.Context) PgComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgComponentArrayOutput)
}

type PgComponentOutput struct{ *pulumi.OutputState }

func (PgComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PgComponent)(nil)).Elem()
}

func (o PgComponentOutput) ToPgComponentOutput() PgComponentOutput {
	return o
}

func (o PgComponentOutput) ToPgComponentOutputWithContext(ctx context.Context) PgComponentOutput {
	return o
}

func (o PgComponentOutput) Component() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgComponent) *string { return v.Component }).(pulumi.StringPtrOutput)
}

// hostname or IP address of the server where to migrate data from.
func (o PgComponentOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgComponent) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o PgComponentOutput) KafkaAuthenticationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgComponent) *string { return v.KafkaAuthenticationMethod }).(pulumi.StringPtrOutput)
}

// port number of the server where to migrate data from.
func (o PgComponentOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PgComponent) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o PgComponentOutput) Route() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgComponent) *string { return v.Route }).(pulumi.StringPtrOutput)
}

// the server where to migrate data from is secured with SSL.
func (o PgComponentOutput) Ssl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PgComponent) *bool { return v.Ssl }).(pulumi.BoolPtrOutput)
}

func (o PgComponentOutput) Usage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgComponent) *string { return v.Usage }).(pulumi.StringPtrOutput)
}

type PgComponentArrayOutput struct{ *pulumi.OutputState }

func (PgComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PgComponent)(nil)).Elem()
}

func (o PgComponentArrayOutput) ToPgComponentArrayOutput() PgComponentArrayOutput {
	return o
}

func (o PgComponentArrayOutput) ToPgComponentArrayOutputWithContext(ctx context.Context) PgComponentArrayOutput {
	return o
}

func (o PgComponentArrayOutput) Index(i pulumi.IntInput) PgComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PgComponent {
		return vs[0].([]PgComponent)[vs[1].(int)]
	}).(PgComponentOutput)
}

type PgPg struct {
	// database name for bootstrapping the initial connection.
	Dbname *string `pulumi:"dbname"`
	// hostname or IP address of the server where to migrate data from.
	Host *string `pulumi:"host"`
	// password for authentication with the server where to migrate data from.
	Password *string `pulumi:"password"`
	// port number of the server where to migrate data from.
	Port *int `pulumi:"port"`
	// PostgreSQL replica URI for services with a replica
	ReplicaUri *string `pulumi:"replicaUri"`
	// PostgreSQL sslmode setting (currently always `require`)
	Sslmode *string `pulumi:"sslmode"`
	// PostgreSQL master connection URI
	Uri *string `pulumi:"uri"`
	// PostgreSQL admin user name
	User *string `pulumi:"user"`
}

// PgPgInput is an input type that accepts PgPgArgs and PgPgOutput values.
// You can construct a concrete instance of `PgPgInput` via:
//
//          PgPgArgs{...}
type PgPgInput interface {
	pulumi.Input

	ToPgPgOutput() PgPgOutput
	ToPgPgOutputWithContext(context.Context) PgPgOutput
}

type PgPgArgs struct {
	// database name for bootstrapping the initial connection.
	Dbname pulumi.StringPtrInput `pulumi:"dbname"`
	// hostname or IP address of the server where to migrate data from.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// password for authentication with the server where to migrate data from.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// port number of the server where to migrate data from.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// PostgreSQL replica URI for services with a replica
	ReplicaUri pulumi.StringPtrInput `pulumi:"replicaUri"`
	// PostgreSQL sslmode setting (currently always `require`)
	Sslmode pulumi.StringPtrInput `pulumi:"sslmode"`
	// PostgreSQL master connection URI
	Uri pulumi.StringPtrInput `pulumi:"uri"`
	// PostgreSQL admin user name
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (PgPgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PgPg)(nil)).Elem()
}

func (i PgPgArgs) ToPgPgOutput() PgPgOutput {
	return i.ToPgPgOutputWithContext(context.Background())
}

func (i PgPgArgs) ToPgPgOutputWithContext(ctx context.Context) PgPgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgOutput)
}

func (i PgPgArgs) ToPgPgPtrOutput() PgPgPtrOutput {
	return i.ToPgPgPtrOutputWithContext(context.Background())
}

func (i PgPgArgs) ToPgPgPtrOutputWithContext(ctx context.Context) PgPgPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgOutput).ToPgPgPtrOutputWithContext(ctx)
}

// PgPgPtrInput is an input type that accepts PgPgArgs, PgPgPtr and PgPgPtrOutput values.
// You can construct a concrete instance of `PgPgPtrInput` via:
//
//          PgPgArgs{...}
//
//  or:
//
//          nil
type PgPgPtrInput interface {
	pulumi.Input

	ToPgPgPtrOutput() PgPgPtrOutput
	ToPgPgPtrOutputWithContext(context.Context) PgPgPtrOutput
}

type pgPgPtrType PgPgArgs

func PgPgPtr(v *PgPgArgs) PgPgPtrInput {
	return (*pgPgPtrType)(v)
}

func (*pgPgPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PgPg)(nil)).Elem()
}

func (i *pgPgPtrType) ToPgPgPtrOutput() PgPgPtrOutput {
	return i.ToPgPgPtrOutputWithContext(context.Background())
}

func (i *pgPgPtrType) ToPgPgPtrOutputWithContext(ctx context.Context) PgPgPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgPtrOutput)
}

type PgPgOutput struct{ *pulumi.OutputState }

func (PgPgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PgPg)(nil)).Elem()
}

func (o PgPgOutput) ToPgPgOutput() PgPgOutput {
	return o
}

func (o PgPgOutput) ToPgPgOutputWithContext(ctx context.Context) PgPgOutput {
	return o
}

func (o PgPgOutput) ToPgPgPtrOutput() PgPgPtrOutput {
	return o.ToPgPgPtrOutputWithContext(context.Background())
}

func (o PgPgOutput) ToPgPgPtrOutputWithContext(ctx context.Context) PgPgPtrOutput {
	return o.ApplyT(func(v PgPg) *PgPg {
		return &v
	}).(PgPgPtrOutput)
}

// database name for bootstrapping the initial connection.
func (o PgPgOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPg) *string { return v.Dbname }).(pulumi.StringPtrOutput)
}

// hostname or IP address of the server where to migrate data from.
func (o PgPgOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPg) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// password for authentication with the server where to migrate data from.
func (o PgPgOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPg) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// port number of the server where to migrate data from.
func (o PgPgOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PgPg) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// PostgreSQL replica URI for services with a replica
func (o PgPgOutput) ReplicaUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPg) *string { return v.ReplicaUri }).(pulumi.StringPtrOutput)
}

// PostgreSQL sslmode setting (currently always `require`)
func (o PgPgOutput) Sslmode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPg) *string { return v.Sslmode }).(pulumi.StringPtrOutput)
}

// PostgreSQL master connection URI
func (o PgPgOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPg) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

// PostgreSQL admin user name
func (o PgPgOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPg) *string { return v.User }).(pulumi.StringPtrOutput)
}

type PgPgPtrOutput struct{ *pulumi.OutputState }

func (PgPgPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PgPg)(nil)).Elem()
}

func (o PgPgPtrOutput) ToPgPgPtrOutput() PgPgPtrOutput {
	return o
}

func (o PgPgPtrOutput) ToPgPgPtrOutputWithContext(ctx context.Context) PgPgPtrOutput {
	return o
}

func (o PgPgPtrOutput) Elem() PgPgOutput {
	return o.ApplyT(func(v *PgPg) PgPg { return *v }).(PgPgOutput)
}

// database name for bootstrapping the initial connection.
func (o PgPgPtrOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPg) *string {
		if v == nil {
			return nil
		}
		return v.Dbname
	}).(pulumi.StringPtrOutput)
}

// hostname or IP address of the server where to migrate data from.
func (o PgPgPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPg) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// password for authentication with the server where to migrate data from.
func (o PgPgPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPg) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// port number of the server where to migrate data from.
func (o PgPgPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PgPg) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// PostgreSQL replica URI for services with a replica
func (o PgPgPtrOutput) ReplicaUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPg) *string {
		if v == nil {
			return nil
		}
		return v.ReplicaUri
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL sslmode setting (currently always `require`)
func (o PgPgPtrOutput) Sslmode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPg) *string {
		if v == nil {
			return nil
		}
		return v.Sslmode
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL master connection URI
func (o PgPgPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPg) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL admin user name
func (o PgPgPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPg) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

type PgPgUserConfig struct {
	// custom password for admin user. Defaults to random string. *This must
	// be set only when a new service is being created.*
	AdminPassword *string `pulumi:"adminPassword"`
	// custom username for admin user. *This must be set only when a new service
	// is being created.*
	AdminUsername *string `pulumi:"adminUsername"`
	// the hour of day (in UTC) when backup for the service is started. New backup
	// is only started if previous backup has already completed.
	BackupHour *string `pulumi:"backupHour"`
	// the minute of an hour when backup for the service is started. New backup
	// is only started if previous backup has already completed.
	BackupMinute *string `pulumi:"backupMinute"`
	// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters []string `pulumi:"ipFilters"`
	// migrate data from existing server, has the following options:
	Migration *PgPgUserConfigMigration `pulumi:"migration"`
	// Enable pg.
	Pg *PgPgUserConfigPg `pulumi:"pg"`
	// This setting is deprecated. Use read-replica service integration instead.
	PgReadReplica *string `pulumi:"pgReadReplica"`
	// Name of the PG Service from which to fork (deprecated, use service_to_fork_from).
	// This has effect only when a new service is being created.
	PgServiceToForkFrom *string `pulumi:"pgServiceToForkFrom"`
	// PostgreSQL major version.
	PgVersion *string `pulumi:"pgVersion"`
	// Enable pgbouncer.
	Pgbouncer *PgPgUserConfigPgbouncer `pulumi:"pgbouncer"`
	// PGLookout settings.
	Pglookout *PgPgUserConfigPglookout `pulumi:"pglookout"`
	// Allow access to selected service ports from private networks.
	PrivateAccess *PgPgUserConfigPrivateAccess `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink.
	PrivatelinkAccess *PgPgUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom *string `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet
	PublicAccess *PgPgUserConfigPublicAccess `pulumi:"publicAccess"`
	// Recovery target time when forking a service. This has effect
	// only when a new service is being created.
	RecoveryTargetTime *string `pulumi:"recoveryTargetTime"`
	// Name of another service to fork from. This has effect only
	// when a new service is being created.
	ServiceToForkFrom *string `pulumi:"serviceToForkFrom"`
	// Percentage of total RAM that the database server uses for
	// memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts
	// the sharedBuffers configuration value. The absolute maximum is 12 GB.
	SharedBuffersPercentage *string `pulumi:"sharedBuffersPercentage"`
	// Synchronous replication type. Note that the service plan
	// also needs to support synchronous replication.
	SynchronousReplication *string `pulumi:"synchronousReplication"`
	// TimescaleDB extension configuration values.
	Timescaledb *PgPgUserConfigTimescaledb `pulumi:"timescaledb"`
	// Variant of the PostgreSQL service, may affect the features that are
	// exposed by default. Options: `aiven` or `timescale`.
	Variant *string `pulumi:"variant"`
	// Sets the maximum amount of memory to be used by a query operation (such
	// as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of
	// total RAM (up to 32MB).
	WorkMem *string `pulumi:"workMem"`
}

// PgPgUserConfigInput is an input type that accepts PgPgUserConfigArgs and PgPgUserConfigOutput values.
// You can construct a concrete instance of `PgPgUserConfigInput` via:
//
//          PgPgUserConfigArgs{...}
type PgPgUserConfigInput interface {
	pulumi.Input

	ToPgPgUserConfigOutput() PgPgUserConfigOutput
	ToPgPgUserConfigOutputWithContext(context.Context) PgPgUserConfigOutput
}

type PgPgUserConfigArgs struct {
	// custom password for admin user. Defaults to random string. *This must
	// be set only when a new service is being created.*
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// custom username for admin user. *This must be set only when a new service
	// is being created.*
	AdminUsername pulumi.StringPtrInput `pulumi:"adminUsername"`
	// the hour of day (in UTC) when backup for the service is started. New backup
	// is only started if previous backup has already completed.
	BackupHour pulumi.StringPtrInput `pulumi:"backupHour"`
	// the minute of an hour when backup for the service is started. New backup
	// is only started if previous backup has already completed.
	BackupMinute pulumi.StringPtrInput `pulumi:"backupMinute"`
	// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// migrate data from existing server, has the following options:
	Migration PgPgUserConfigMigrationPtrInput `pulumi:"migration"`
	// Enable pg.
	Pg PgPgUserConfigPgPtrInput `pulumi:"pg"`
	// This setting is deprecated. Use read-replica service integration instead.
	PgReadReplica pulumi.StringPtrInput `pulumi:"pgReadReplica"`
	// Name of the PG Service from which to fork (deprecated, use service_to_fork_from).
	// This has effect only when a new service is being created.
	PgServiceToForkFrom pulumi.StringPtrInput `pulumi:"pgServiceToForkFrom"`
	// PostgreSQL major version.
	PgVersion pulumi.StringPtrInput `pulumi:"pgVersion"`
	// Enable pgbouncer.
	Pgbouncer PgPgUserConfigPgbouncerPtrInput `pulumi:"pgbouncer"`
	// PGLookout settings.
	Pglookout PgPgUserConfigPglookoutPtrInput `pulumi:"pglookout"`
	// Allow access to selected service ports from private networks.
	PrivateAccess PgPgUserConfigPrivateAccessPtrInput `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink.
	PrivatelinkAccess PgPgUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom pulumi.StringPtrInput `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet
	PublicAccess PgPgUserConfigPublicAccessPtrInput `pulumi:"publicAccess"`
	// Recovery target time when forking a service. This has effect
	// only when a new service is being created.
	RecoveryTargetTime pulumi.StringPtrInput `pulumi:"recoveryTargetTime"`
	// Name of another service to fork from. This has effect only
	// when a new service is being created.
	ServiceToForkFrom pulumi.StringPtrInput `pulumi:"serviceToForkFrom"`
	// Percentage of total RAM that the database server uses for
	// memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts
	// the sharedBuffers configuration value. The absolute maximum is 12 GB.
	SharedBuffersPercentage pulumi.StringPtrInput `pulumi:"sharedBuffersPercentage"`
	// Synchronous replication type. Note that the service plan
	// also needs to support synchronous replication.
	SynchronousReplication pulumi.StringPtrInput `pulumi:"synchronousReplication"`
	// TimescaleDB extension configuration values.
	Timescaledb PgPgUserConfigTimescaledbPtrInput `pulumi:"timescaledb"`
	// Variant of the PostgreSQL service, may affect the features that are
	// exposed by default. Options: `aiven` or `timescale`.
	Variant pulumi.StringPtrInput `pulumi:"variant"`
	// Sets the maximum amount of memory to be used by a query operation (such
	// as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of
	// total RAM (up to 32MB).
	WorkMem pulumi.StringPtrInput `pulumi:"workMem"`
}

func (PgPgUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PgPgUserConfig)(nil)).Elem()
}

func (i PgPgUserConfigArgs) ToPgPgUserConfigOutput() PgPgUserConfigOutput {
	return i.ToPgPgUserConfigOutputWithContext(context.Background())
}

func (i PgPgUserConfigArgs) ToPgPgUserConfigOutputWithContext(ctx context.Context) PgPgUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigOutput)
}

func (i PgPgUserConfigArgs) ToPgPgUserConfigPtrOutput() PgPgUserConfigPtrOutput {
	return i.ToPgPgUserConfigPtrOutputWithContext(context.Background())
}

func (i PgPgUserConfigArgs) ToPgPgUserConfigPtrOutputWithContext(ctx context.Context) PgPgUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigOutput).ToPgPgUserConfigPtrOutputWithContext(ctx)
}

// PgPgUserConfigPtrInput is an input type that accepts PgPgUserConfigArgs, PgPgUserConfigPtr and PgPgUserConfigPtrOutput values.
// You can construct a concrete instance of `PgPgUserConfigPtrInput` via:
//
//          PgPgUserConfigArgs{...}
//
//  or:
//
//          nil
type PgPgUserConfigPtrInput interface {
	pulumi.Input

	ToPgPgUserConfigPtrOutput() PgPgUserConfigPtrOutput
	ToPgPgUserConfigPtrOutputWithContext(context.Context) PgPgUserConfigPtrOutput
}

type pgPgUserConfigPtrType PgPgUserConfigArgs

func PgPgUserConfigPtr(v *PgPgUserConfigArgs) PgPgUserConfigPtrInput {
	return (*pgPgUserConfigPtrType)(v)
}

func (*pgPgUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PgPgUserConfig)(nil)).Elem()
}

func (i *pgPgUserConfigPtrType) ToPgPgUserConfigPtrOutput() PgPgUserConfigPtrOutput {
	return i.ToPgPgUserConfigPtrOutputWithContext(context.Background())
}

func (i *pgPgUserConfigPtrType) ToPgPgUserConfigPtrOutputWithContext(ctx context.Context) PgPgUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigPtrOutput)
}

type PgPgUserConfigOutput struct{ *pulumi.OutputState }

func (PgPgUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PgPgUserConfig)(nil)).Elem()
}

func (o PgPgUserConfigOutput) ToPgPgUserConfigOutput() PgPgUserConfigOutput {
	return o
}

func (o PgPgUserConfigOutput) ToPgPgUserConfigOutputWithContext(ctx context.Context) PgPgUserConfigOutput {
	return o
}

func (o PgPgUserConfigOutput) ToPgPgUserConfigPtrOutput() PgPgUserConfigPtrOutput {
	return o.ToPgPgUserConfigPtrOutputWithContext(context.Background())
}

func (o PgPgUserConfigOutput) ToPgPgUserConfigPtrOutputWithContext(ctx context.Context) PgPgUserConfigPtrOutput {
	return o.ApplyT(func(v PgPgUserConfig) *PgPgUserConfig {
		return &v
	}).(PgPgUserConfigPtrOutput)
}

// custom password for admin user. Defaults to random string. *This must
// be set only when a new service is being created.*
func (o PgPgUserConfigOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfig) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// custom username for admin user. *This must be set only when a new service
// is being created.*
func (o PgPgUserConfigOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfig) *string { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

// the hour of day (in UTC) when backup for the service is started. New backup
// is only started if previous backup has already completed.
func (o PgPgUserConfigOutput) BackupHour() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfig) *string { return v.BackupHour }).(pulumi.StringPtrOutput)
}

// the minute of an hour when backup for the service is started. New backup
// is only started if previous backup has already completed.
func (o PgPgUserConfigOutput) BackupMinute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfig) *string { return v.BackupMinute }).(pulumi.StringPtrOutput)
}

// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
func (o PgPgUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PgPgUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// migrate data from existing server, has the following options:
func (o PgPgUserConfigOutput) Migration() PgPgUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v PgPgUserConfig) *PgPgUserConfigMigration { return v.Migration }).(PgPgUserConfigMigrationPtrOutput)
}

// Enable pg.
func (o PgPgUserConfigOutput) Pg() PgPgUserConfigPgPtrOutput {
	return o.ApplyT(func(v PgPgUserConfig) *PgPgUserConfigPg { return v.Pg }).(PgPgUserConfigPgPtrOutput)
}

// This setting is deprecated. Use read-replica service integration instead.
func (o PgPgUserConfigOutput) PgReadReplica() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfig) *string { return v.PgReadReplica }).(pulumi.StringPtrOutput)
}

// Name of the PG Service from which to fork (deprecated, use service_to_fork_from).
// This has effect only when a new service is being created.
func (o PgPgUserConfigOutput) PgServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfig) *string { return v.PgServiceToForkFrom }).(pulumi.StringPtrOutput)
}

// PostgreSQL major version.
func (o PgPgUserConfigOutput) PgVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfig) *string { return v.PgVersion }).(pulumi.StringPtrOutput)
}

// Enable pgbouncer.
func (o PgPgUserConfigOutput) Pgbouncer() PgPgUserConfigPgbouncerPtrOutput {
	return o.ApplyT(func(v PgPgUserConfig) *PgPgUserConfigPgbouncer { return v.Pgbouncer }).(PgPgUserConfigPgbouncerPtrOutput)
}

// PGLookout settings.
func (o PgPgUserConfigOutput) Pglookout() PgPgUserConfigPglookoutPtrOutput {
	return o.ApplyT(func(v PgPgUserConfig) *PgPgUserConfigPglookout { return v.Pglookout }).(PgPgUserConfigPglookoutPtrOutput)
}

// Allow access to selected service ports from private networks.
func (o PgPgUserConfigOutput) PrivateAccess() PgPgUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v PgPgUserConfig) *PgPgUserConfigPrivateAccess { return v.PrivateAccess }).(PgPgUserConfigPrivateAccessPtrOutput)
}

// Allow access to selected service components through Privatelink.
func (o PgPgUserConfigOutput) PrivatelinkAccess() PgPgUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v PgPgUserConfig) *PgPgUserConfigPrivatelinkAccess { return v.PrivatelinkAccess }).(PgPgUserConfigPrivatelinkAccessPtrOutput)
}

// Name of another project to fork a service from. This has
// effect only when a new service is being created.
func (o PgPgUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from the public Internet
func (o PgPgUserConfigOutput) PublicAccess() PgPgUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v PgPgUserConfig) *PgPgUserConfigPublicAccess { return v.PublicAccess }).(PgPgUserConfigPublicAccessPtrOutput)
}

// Recovery target time when forking a service. This has effect
// only when a new service is being created.
func (o PgPgUserConfigOutput) RecoveryTargetTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfig) *string { return v.RecoveryTargetTime }).(pulumi.StringPtrOutput)
}

// Name of another service to fork from. This has effect only
// when a new service is being created.
func (o PgPgUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

// Percentage of total RAM that the database server uses for
// memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts
// the sharedBuffers configuration value. The absolute maximum is 12 GB.
func (o PgPgUserConfigOutput) SharedBuffersPercentage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfig) *string { return v.SharedBuffersPercentage }).(pulumi.StringPtrOutput)
}

// Synchronous replication type. Note that the service plan
// also needs to support synchronous replication.
func (o PgPgUserConfigOutput) SynchronousReplication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfig) *string { return v.SynchronousReplication }).(pulumi.StringPtrOutput)
}

// TimescaleDB extension configuration values.
func (o PgPgUserConfigOutput) Timescaledb() PgPgUserConfigTimescaledbPtrOutput {
	return o.ApplyT(func(v PgPgUserConfig) *PgPgUserConfigTimescaledb { return v.Timescaledb }).(PgPgUserConfigTimescaledbPtrOutput)
}

// Variant of the PostgreSQL service, may affect the features that are
// exposed by default. Options: `aiven` or `timescale`.
func (o PgPgUserConfigOutput) Variant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfig) *string { return v.Variant }).(pulumi.StringPtrOutput)
}

// Sets the maximum amount of memory to be used by a query operation (such
// as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of
// total RAM (up to 32MB).
func (o PgPgUserConfigOutput) WorkMem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfig) *string { return v.WorkMem }).(pulumi.StringPtrOutput)
}

type PgPgUserConfigPtrOutput struct{ *pulumi.OutputState }

func (PgPgUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PgPgUserConfig)(nil)).Elem()
}

func (o PgPgUserConfigPtrOutput) ToPgPgUserConfigPtrOutput() PgPgUserConfigPtrOutput {
	return o
}

func (o PgPgUserConfigPtrOutput) ToPgPgUserConfigPtrOutputWithContext(ctx context.Context) PgPgUserConfigPtrOutput {
	return o
}

func (o PgPgUserConfigPtrOutput) Elem() PgPgUserConfigOutput {
	return o.ApplyT(func(v *PgPgUserConfig) PgPgUserConfig { return *v }).(PgPgUserConfigOutput)
}

// custom password for admin user. Defaults to random string. *This must
// be set only when a new service is being created.*
func (o PgPgUserConfigPtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// custom username for admin user. *This must be set only when a new service
// is being created.*
func (o PgPgUserConfigPtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// the hour of day (in UTC) when backup for the service is started. New backup
// is only started if previous backup has already completed.
func (o PgPgUserConfigPtrOutput) BackupHour() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.BackupHour
	}).(pulumi.StringPtrOutput)
}

// the minute of an hour when backup for the service is started. New backup
// is only started if previous backup has already completed.
func (o PgPgUserConfigPtrOutput) BackupMinute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.BackupMinute
	}).(pulumi.StringPtrOutput)
}

// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
func (o PgPgUserConfigPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PgPgUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

// migrate data from existing server, has the following options:
func (o PgPgUserConfigPtrOutput) Migration() PgPgUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfig) *PgPgUserConfigMigration {
		if v == nil {
			return nil
		}
		return v.Migration
	}).(PgPgUserConfigMigrationPtrOutput)
}

// Enable pg.
func (o PgPgUserConfigPtrOutput) Pg() PgPgUserConfigPgPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfig) *PgPgUserConfigPg {
		if v == nil {
			return nil
		}
		return v.Pg
	}).(PgPgUserConfigPgPtrOutput)
}

// This setting is deprecated. Use read-replica service integration instead.
func (o PgPgUserConfigPtrOutput) PgReadReplica() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.PgReadReplica
	}).(pulumi.StringPtrOutput)
}

// Name of the PG Service from which to fork (deprecated, use service_to_fork_from).
// This has effect only when a new service is being created.
func (o PgPgUserConfigPtrOutput) PgServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.PgServiceToForkFrom
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL major version.
func (o PgPgUserConfigPtrOutput) PgVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.PgVersion
	}).(pulumi.StringPtrOutput)
}

// Enable pgbouncer.
func (o PgPgUserConfigPtrOutput) Pgbouncer() PgPgUserConfigPgbouncerPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfig) *PgPgUserConfigPgbouncer {
		if v == nil {
			return nil
		}
		return v.Pgbouncer
	}).(PgPgUserConfigPgbouncerPtrOutput)
}

// PGLookout settings.
func (o PgPgUserConfigPtrOutput) Pglookout() PgPgUserConfigPglookoutPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfig) *PgPgUserConfigPglookout {
		if v == nil {
			return nil
		}
		return v.Pglookout
	}).(PgPgUserConfigPglookoutPtrOutput)
}

// Allow access to selected service ports from private networks.
func (o PgPgUserConfigPtrOutput) PrivateAccess() PgPgUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfig) *PgPgUserConfigPrivateAccess {
		if v == nil {
			return nil
		}
		return v.PrivateAccess
	}).(PgPgUserConfigPrivateAccessPtrOutput)
}

// Allow access to selected service components through Privatelink.
func (o PgPgUserConfigPtrOutput) PrivatelinkAccess() PgPgUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfig) *PgPgUserConfigPrivatelinkAccess {
		if v == nil {
			return nil
		}
		return v.PrivatelinkAccess
	}).(PgPgUserConfigPrivatelinkAccessPtrOutput)
}

// Name of another project to fork a service from. This has
// effect only when a new service is being created.
func (o PgPgUserConfigPtrOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProjectToForkFrom
	}).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from the public Internet
func (o PgPgUserConfigPtrOutput) PublicAccess() PgPgUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfig) *PgPgUserConfigPublicAccess {
		if v == nil {
			return nil
		}
		return v.PublicAccess
	}).(PgPgUserConfigPublicAccessPtrOutput)
}

// Recovery target time when forking a service. This has effect
// only when a new service is being created.
func (o PgPgUserConfigPtrOutput) RecoveryTargetTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryTargetTime
	}).(pulumi.StringPtrOutput)
}

// Name of another service to fork from. This has effect only
// when a new service is being created.
func (o PgPgUserConfigPtrOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceToForkFrom
	}).(pulumi.StringPtrOutput)
}

// Percentage of total RAM that the database server uses for
// memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts
// the sharedBuffers configuration value. The absolute maximum is 12 GB.
func (o PgPgUserConfigPtrOutput) SharedBuffersPercentage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.SharedBuffersPercentage
	}).(pulumi.StringPtrOutput)
}

// Synchronous replication type. Note that the service plan
// also needs to support synchronous replication.
func (o PgPgUserConfigPtrOutput) SynchronousReplication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.SynchronousReplication
	}).(pulumi.StringPtrOutput)
}

// TimescaleDB extension configuration values.
func (o PgPgUserConfigPtrOutput) Timescaledb() PgPgUserConfigTimescaledbPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfig) *PgPgUserConfigTimescaledb {
		if v == nil {
			return nil
		}
		return v.Timescaledb
	}).(PgPgUserConfigTimescaledbPtrOutput)
}

// Variant of the PostgreSQL service, may affect the features that are
// exposed by default. Options: `aiven` or `timescale`.
func (o PgPgUserConfigPtrOutput) Variant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.Variant
	}).(pulumi.StringPtrOutput)
}

// Sets the maximum amount of memory to be used by a query operation (such
// as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of
// total RAM (up to 32MB).
func (o PgPgUserConfigPtrOutput) WorkMem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.WorkMem
	}).(pulumi.StringPtrOutput)
}

type PgPgUserConfigMigration struct {
	// database name for bootstrapping the initial connection.
	Dbname *string `pulumi:"dbname"`
	// hostname or IP address of the server where to migrate data from.
	Host *string `pulumi:"host"`
	// Comma-separated list of databases, which should be ignored during
	// migration (supported by MySQL only at the moment)
	IgnoreDbs *string `pulumi:"ignoreDbs"`
	// password for authentication with the server where to migrate data from.
	Password *string `pulumi:"password"`
	// port number of the server where to migrate data from.
	Port *string `pulumi:"port"`
	// the server where to migrate data from is secured with SSL.
	Ssl *string `pulumi:"ssl"`
	// user name for authentication with the server where to migrate data from.
	Username *string `pulumi:"username"`
}

// PgPgUserConfigMigrationInput is an input type that accepts PgPgUserConfigMigrationArgs and PgPgUserConfigMigrationOutput values.
// You can construct a concrete instance of `PgPgUserConfigMigrationInput` via:
//
//          PgPgUserConfigMigrationArgs{...}
type PgPgUserConfigMigrationInput interface {
	pulumi.Input

	ToPgPgUserConfigMigrationOutput() PgPgUserConfigMigrationOutput
	ToPgPgUserConfigMigrationOutputWithContext(context.Context) PgPgUserConfigMigrationOutput
}

type PgPgUserConfigMigrationArgs struct {
	// database name for bootstrapping the initial connection.
	Dbname pulumi.StringPtrInput `pulumi:"dbname"`
	// hostname or IP address of the server where to migrate data from.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Comma-separated list of databases, which should be ignored during
	// migration (supported by MySQL only at the moment)
	IgnoreDbs pulumi.StringPtrInput `pulumi:"ignoreDbs"`
	// password for authentication with the server where to migrate data from.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// port number of the server where to migrate data from.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// the server where to migrate data from is secured with SSL.
	Ssl pulumi.StringPtrInput `pulumi:"ssl"`
	// user name for authentication with the server where to migrate data from.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (PgPgUserConfigMigrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PgPgUserConfigMigration)(nil)).Elem()
}

func (i PgPgUserConfigMigrationArgs) ToPgPgUserConfigMigrationOutput() PgPgUserConfigMigrationOutput {
	return i.ToPgPgUserConfigMigrationOutputWithContext(context.Background())
}

func (i PgPgUserConfigMigrationArgs) ToPgPgUserConfigMigrationOutputWithContext(ctx context.Context) PgPgUserConfigMigrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigMigrationOutput)
}

func (i PgPgUserConfigMigrationArgs) ToPgPgUserConfigMigrationPtrOutput() PgPgUserConfigMigrationPtrOutput {
	return i.ToPgPgUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (i PgPgUserConfigMigrationArgs) ToPgPgUserConfigMigrationPtrOutputWithContext(ctx context.Context) PgPgUserConfigMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigMigrationOutput).ToPgPgUserConfigMigrationPtrOutputWithContext(ctx)
}

// PgPgUserConfigMigrationPtrInput is an input type that accepts PgPgUserConfigMigrationArgs, PgPgUserConfigMigrationPtr and PgPgUserConfigMigrationPtrOutput values.
// You can construct a concrete instance of `PgPgUserConfigMigrationPtrInput` via:
//
//          PgPgUserConfigMigrationArgs{...}
//
//  or:
//
//          nil
type PgPgUserConfigMigrationPtrInput interface {
	pulumi.Input

	ToPgPgUserConfigMigrationPtrOutput() PgPgUserConfigMigrationPtrOutput
	ToPgPgUserConfigMigrationPtrOutputWithContext(context.Context) PgPgUserConfigMigrationPtrOutput
}

type pgPgUserConfigMigrationPtrType PgPgUserConfigMigrationArgs

func PgPgUserConfigMigrationPtr(v *PgPgUserConfigMigrationArgs) PgPgUserConfigMigrationPtrInput {
	return (*pgPgUserConfigMigrationPtrType)(v)
}

func (*pgPgUserConfigMigrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PgPgUserConfigMigration)(nil)).Elem()
}

func (i *pgPgUserConfigMigrationPtrType) ToPgPgUserConfigMigrationPtrOutput() PgPgUserConfigMigrationPtrOutput {
	return i.ToPgPgUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (i *pgPgUserConfigMigrationPtrType) ToPgPgUserConfigMigrationPtrOutputWithContext(ctx context.Context) PgPgUserConfigMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigMigrationPtrOutput)
}

type PgPgUserConfigMigrationOutput struct{ *pulumi.OutputState }

func (PgPgUserConfigMigrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PgPgUserConfigMigration)(nil)).Elem()
}

func (o PgPgUserConfigMigrationOutput) ToPgPgUserConfigMigrationOutput() PgPgUserConfigMigrationOutput {
	return o
}

func (o PgPgUserConfigMigrationOutput) ToPgPgUserConfigMigrationOutputWithContext(ctx context.Context) PgPgUserConfigMigrationOutput {
	return o
}

func (o PgPgUserConfigMigrationOutput) ToPgPgUserConfigMigrationPtrOutput() PgPgUserConfigMigrationPtrOutput {
	return o.ToPgPgUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (o PgPgUserConfigMigrationOutput) ToPgPgUserConfigMigrationPtrOutputWithContext(ctx context.Context) PgPgUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigMigration) *PgPgUserConfigMigration {
		return &v
	}).(PgPgUserConfigMigrationPtrOutput)
}

// database name for bootstrapping the initial connection.
func (o PgPgUserConfigMigrationOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigMigration) *string { return v.Dbname }).(pulumi.StringPtrOutput)
}

// hostname or IP address of the server where to migrate data from.
func (o PgPgUserConfigMigrationOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigMigration) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Comma-separated list of databases, which should be ignored during
// migration (supported by MySQL only at the moment)
func (o PgPgUserConfigMigrationOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigMigration) *string { return v.IgnoreDbs }).(pulumi.StringPtrOutput)
}

// password for authentication with the server where to migrate data from.
func (o PgPgUserConfigMigrationOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigMigration) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// port number of the server where to migrate data from.
func (o PgPgUserConfigMigrationOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigMigration) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// the server where to migrate data from is secured with SSL.
func (o PgPgUserConfigMigrationOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigMigration) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

// user name for authentication with the server where to migrate data from.
func (o PgPgUserConfigMigrationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigMigration) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type PgPgUserConfigMigrationPtrOutput struct{ *pulumi.OutputState }

func (PgPgUserConfigMigrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PgPgUserConfigMigration)(nil)).Elem()
}

func (o PgPgUserConfigMigrationPtrOutput) ToPgPgUserConfigMigrationPtrOutput() PgPgUserConfigMigrationPtrOutput {
	return o
}

func (o PgPgUserConfigMigrationPtrOutput) ToPgPgUserConfigMigrationPtrOutputWithContext(ctx context.Context) PgPgUserConfigMigrationPtrOutput {
	return o
}

func (o PgPgUserConfigMigrationPtrOutput) Elem() PgPgUserConfigMigrationOutput {
	return o.ApplyT(func(v *PgPgUserConfigMigration) PgPgUserConfigMigration { return *v }).(PgPgUserConfigMigrationOutput)
}

// database name for bootstrapping the initial connection.
func (o PgPgUserConfigMigrationPtrOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Dbname
	}).(pulumi.StringPtrOutput)
}

// hostname or IP address of the server where to migrate data from.
func (o PgPgUserConfigMigrationPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Comma-separated list of databases, which should be ignored during
// migration (supported by MySQL only at the moment)
func (o PgPgUserConfigMigrationPtrOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.IgnoreDbs
	}).(pulumi.StringPtrOutput)
}

// password for authentication with the server where to migrate data from.
func (o PgPgUserConfigMigrationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// port number of the server where to migrate data from.
func (o PgPgUserConfigMigrationPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// the server where to migrate data from is secured with SSL.
func (o PgPgUserConfigMigrationPtrOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Ssl
	}).(pulumi.StringPtrOutput)
}

// user name for authentication with the server where to migrate data from.
func (o PgPgUserConfigMigrationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type PgPgUserConfigPg struct {
	// Specifies a fraction of the table size to add to
	// autovacuumAnalyzeThreshold when deciding whether to trigger an ANALYZE. The default is 0.2
	// (20% of table size).
	AutovacuumAnalyzeScaleFactor *string `pulumi:"autovacuumAnalyzeScaleFactor"`
	// specifies the minimum number of inserted, updated
	// or deleted tuples needed to trigger an ANALYZE in any one table. The default is 50 tuples.
	AutovacuumAnalyzeThreshold *string `pulumi:"autovacuumAnalyzeThreshold"`
	// specifies the maximum age (in transactions) that a table's
	// pg_class.relfrozenxid field can attain before a VACUUM operation is forced to prevent transaction ID
	// wraparound within the table. Note that the system will launch autovacuum processes to prevent wraparound
	// even when autovacuum is otherwise disabled. This parameter will cause the server to be restarted.
	AutovacuumFreezeMaxAge *string `pulumi:"autovacuumFreezeMaxAge"`
	// specifies the maximum number of autovacuum processes (other
	// than the autovacuum launcher) that may be running at any one time. The default is three. This parameter
	// can only be set at server start.
	AutovacuumMaxWorkers *string `pulumi:"autovacuumMaxWorkers"`
	// specifies the minimum delay between autovacuum runs on any
	// given database. The delay is measured in seconds, and the default is one minute.
	AutovacuumNaptime *string `pulumi:"autovacuumNaptime"`
	// specifies the cost delay value that will be used
	// in automatic VACUUM operations. If -1 is specified, the regular vacuumCostDelay value will be
	// used. The default value is 20 milliseconds.
	AutovacuumVacuumCostDelay *string `pulumi:"autovacuumVacuumCostDelay"`
	// specifies the cost limit value that will be used in
	// automatic VACUUM operations. If -1 is specified (which is the default), the regular vacuumCostLimit
	// value will be used.
	AutovacuumVacuumCostLimit *string `pulumi:"autovacuumVacuumCostLimit"`
	// specifies a fraction of the table size to add to
	// autovacuumVacuumThreshold when deciding whether to trigger a VACUUM. The default is 0.2 (20% of table size).
	AutovacuumVacuumScaleFactor *string `pulumi:"autovacuumVacuumScaleFactor"`
	// specifies the minimum number of updated or deleted tuples
	// needed to trigger a VACUUM in any one table. The default is 50 tuples
	AutovacuumVacuumThreshold *string `pulumi:"autovacuumVacuumThreshold"`
	// this is the amount of time, in milliseconds, to wait on a lock before
	// checking to see if there is a deadlock condition.
	DeadlockTimeout *string `pulumi:"deadlockTimeout"`
	// Time out sessions with open transactions after
	// this number of milliseconds.
	IdleInTransactionSessionTimeout *string `pulumi:"idleInTransactionSessionTimeout"`
	// Controls system-wide use of Just-in-Time Compilation (JIT).
	Jit *string `pulumi:"jit"`
	// Causes each action executed by autovacuum to be logged
	// if it ran for at least the specified number of milliseconds. Setting this to zero logs all autovacuum
	// actions. Minus-one (the default) disables logging autovacuum actions.
	LogAutovacuumMinDuration *string `pulumi:"logAutovacuumMinDuration"`
	// Controls the amount of detail written in the server log for
	// each message that is logged. Possible values: `TERSE`, `DEFAULT` and `VERBOSE`.
	LogErrorVerbosity *string `pulumi:"logErrorVerbosity"`
	// Choose from one of the available log-formats. These can support
	// popular log analyzers like pgbadger, pganalyze etc.
	// milliseconds to run, -1 disables
	LogLinePrefix *string `pulumi:"logLinePrefix"`
	// Log statements that take more than this number of
	LogMinDurationStatement *string `pulumi:"logMinDurationStatement"`
	// PostgreSQL maximum number of files that can be open per process
	MaxFilesPerProcess *string `pulumi:"maxFilesPerProcess"`
	// PostgreSQL maximum locks per transaction
	MaxLocksPerTransaction *string `pulumi:"maxLocksPerTransaction"`
	// PostgreSQL maximum logical replication workers
	// (taken from the pool of max_parallel_workers)
	MaxLogicalReplicationWorkers *string `pulumi:"maxLogicalReplicationWorkers"`
	// Sets the maximum number of workers that the system can
	// support for parallel queries.
	MaxParallelWorkers *string `pulumi:"maxParallelWorkers"`
	// Sets the maximum number of workers that can be
	// started by a single Gather or Gather Merge node.
	MaxParallelWorkersPerGather *string `pulumi:"maxParallelWorkersPerGather"`
	// PostgreSQL maximum predicate locks per transaction
	MaxPredLocksPerTransaction *string `pulumi:"maxPredLocksPerTransaction"`
	// PostgreSQL maximum prepared transactions
	MaxPreparedTransactions *string `pulumi:"maxPreparedTransactions"`
	// PostgreSQL maximum replication slots
	MaxReplicationSlots *string `pulumi:"maxReplicationSlots"`
	// Maximum depth of the stack in bytes
	MaxStackDepth *string `pulumi:"maxStackDepth"`
	// Max standby archive delay in milliseconds
	MaxStandbyArchiveDelay *string `pulumi:"maxStandbyArchiveDelay"`
	// Max standby streaming delay in milliseconds
	MaxStandbyStreamingDelay *string `pulumi:"maxStandbyStreamingDelay"`
	// PostgreSQL maximum WAL senders
	MaxWalSenders *string `pulumi:"maxWalSenders"`
	// Sets the maximum number of background processes that the system
	// can support
	// * `pg_partman_bgw.interval` - (Optional) Sets the time interval to run pg_partman's scheduled tasks
	// * `pg_partman_bgw.role` - (Optional) Controls which role to use for pg_partman's scheduled
	//   background tasks.
	// * `pg_stat_statements.track` - (Optional) Controls which statements are counted. Specify top
	//   to track top-level statements (those issued directly by clients), all to also track nested
	//   statements (such as statements invoked within functions), or none to disable statement statistics
	//   collection. The default value is top.
	MaxWorkerProcesses       *string `pulumi:"maxWorkerProcesses"`
	PgPartmanBgwDotInterval  *string `pulumi:"pgPartmanBgwDotInterval"`
	PgPartmanBgwDotRole      *string `pulumi:"pgPartmanBgwDotRole"`
	PgStatStatementsDotTrack *string `pulumi:"pgStatStatementsDotTrack"`
	// PostgreSQL temporary file limit in KiB, -1 for unlimited
	TempFileLimit *string `pulumi:"tempFileLimit"`
	// PostgreSQL service timezone
	Timezone *string `pulumi:"timezone"`
	// Specifies the number of bytes reserved to track the currently
	// executing command for each active session.
	TrackActivityQuerySize *string `pulumi:"trackActivityQuerySize"`
	// Record commit time of transactions
	TrackCommitTimestamp *string `pulumi:"trackCommitTimestamp"`
	// Enables tracking of function call counts and time used.
	TrackFunctions *string `pulumi:"trackFunctions"`
	// Terminate replication connections that are inactive for longer than
	// this amount of time, in milliseconds.
	WalSenderTimeout *string `pulumi:"walSenderTimeout"`
	// WAL flush interval in milliseconds. Note that setting this value
	// to lower than the default 200ms may negatively impact performance
	WalWriterDelay *string `pulumi:"walWriterDelay"`
}

// PgPgUserConfigPgInput is an input type that accepts PgPgUserConfigPgArgs and PgPgUserConfigPgOutput values.
// You can construct a concrete instance of `PgPgUserConfigPgInput` via:
//
//          PgPgUserConfigPgArgs{...}
type PgPgUserConfigPgInput interface {
	pulumi.Input

	ToPgPgUserConfigPgOutput() PgPgUserConfigPgOutput
	ToPgPgUserConfigPgOutputWithContext(context.Context) PgPgUserConfigPgOutput
}

type PgPgUserConfigPgArgs struct {
	// Specifies a fraction of the table size to add to
	// autovacuumAnalyzeThreshold when deciding whether to trigger an ANALYZE. The default is 0.2
	// (20% of table size).
	AutovacuumAnalyzeScaleFactor pulumi.StringPtrInput `pulumi:"autovacuumAnalyzeScaleFactor"`
	// specifies the minimum number of inserted, updated
	// or deleted tuples needed to trigger an ANALYZE in any one table. The default is 50 tuples.
	AutovacuumAnalyzeThreshold pulumi.StringPtrInput `pulumi:"autovacuumAnalyzeThreshold"`
	// specifies the maximum age (in transactions) that a table's
	// pg_class.relfrozenxid field can attain before a VACUUM operation is forced to prevent transaction ID
	// wraparound within the table. Note that the system will launch autovacuum processes to prevent wraparound
	// even when autovacuum is otherwise disabled. This parameter will cause the server to be restarted.
	AutovacuumFreezeMaxAge pulumi.StringPtrInput `pulumi:"autovacuumFreezeMaxAge"`
	// specifies the maximum number of autovacuum processes (other
	// than the autovacuum launcher) that may be running at any one time. The default is three. This parameter
	// can only be set at server start.
	AutovacuumMaxWorkers pulumi.StringPtrInput `pulumi:"autovacuumMaxWorkers"`
	// specifies the minimum delay between autovacuum runs on any
	// given database. The delay is measured in seconds, and the default is one minute.
	AutovacuumNaptime pulumi.StringPtrInput `pulumi:"autovacuumNaptime"`
	// specifies the cost delay value that will be used
	// in automatic VACUUM operations. If -1 is specified, the regular vacuumCostDelay value will be
	// used. The default value is 20 milliseconds.
	AutovacuumVacuumCostDelay pulumi.StringPtrInput `pulumi:"autovacuumVacuumCostDelay"`
	// specifies the cost limit value that will be used in
	// automatic VACUUM operations. If -1 is specified (which is the default), the regular vacuumCostLimit
	// value will be used.
	AutovacuumVacuumCostLimit pulumi.StringPtrInput `pulumi:"autovacuumVacuumCostLimit"`
	// specifies a fraction of the table size to add to
	// autovacuumVacuumThreshold when deciding whether to trigger a VACUUM. The default is 0.2 (20% of table size).
	AutovacuumVacuumScaleFactor pulumi.StringPtrInput `pulumi:"autovacuumVacuumScaleFactor"`
	// specifies the minimum number of updated or deleted tuples
	// needed to trigger a VACUUM in any one table. The default is 50 tuples
	AutovacuumVacuumThreshold pulumi.StringPtrInput `pulumi:"autovacuumVacuumThreshold"`
	// this is the amount of time, in milliseconds, to wait on a lock before
	// checking to see if there is a deadlock condition.
	DeadlockTimeout pulumi.StringPtrInput `pulumi:"deadlockTimeout"`
	// Time out sessions with open transactions after
	// this number of milliseconds.
	IdleInTransactionSessionTimeout pulumi.StringPtrInput `pulumi:"idleInTransactionSessionTimeout"`
	// Controls system-wide use of Just-in-Time Compilation (JIT).
	Jit pulumi.StringPtrInput `pulumi:"jit"`
	// Causes each action executed by autovacuum to be logged
	// if it ran for at least the specified number of milliseconds. Setting this to zero logs all autovacuum
	// actions. Minus-one (the default) disables logging autovacuum actions.
	LogAutovacuumMinDuration pulumi.StringPtrInput `pulumi:"logAutovacuumMinDuration"`
	// Controls the amount of detail written in the server log for
	// each message that is logged. Possible values: `TERSE`, `DEFAULT` and `VERBOSE`.
	LogErrorVerbosity pulumi.StringPtrInput `pulumi:"logErrorVerbosity"`
	// Choose from one of the available log-formats. These can support
	// popular log analyzers like pgbadger, pganalyze etc.
	// milliseconds to run, -1 disables
	LogLinePrefix pulumi.StringPtrInput `pulumi:"logLinePrefix"`
	// Log statements that take more than this number of
	LogMinDurationStatement pulumi.StringPtrInput `pulumi:"logMinDurationStatement"`
	// PostgreSQL maximum number of files that can be open per process
	MaxFilesPerProcess pulumi.StringPtrInput `pulumi:"maxFilesPerProcess"`
	// PostgreSQL maximum locks per transaction
	MaxLocksPerTransaction pulumi.StringPtrInput `pulumi:"maxLocksPerTransaction"`
	// PostgreSQL maximum logical replication workers
	// (taken from the pool of max_parallel_workers)
	MaxLogicalReplicationWorkers pulumi.StringPtrInput `pulumi:"maxLogicalReplicationWorkers"`
	// Sets the maximum number of workers that the system can
	// support for parallel queries.
	MaxParallelWorkers pulumi.StringPtrInput `pulumi:"maxParallelWorkers"`
	// Sets the maximum number of workers that can be
	// started by a single Gather or Gather Merge node.
	MaxParallelWorkersPerGather pulumi.StringPtrInput `pulumi:"maxParallelWorkersPerGather"`
	// PostgreSQL maximum predicate locks per transaction
	MaxPredLocksPerTransaction pulumi.StringPtrInput `pulumi:"maxPredLocksPerTransaction"`
	// PostgreSQL maximum prepared transactions
	MaxPreparedTransactions pulumi.StringPtrInput `pulumi:"maxPreparedTransactions"`
	// PostgreSQL maximum replication slots
	MaxReplicationSlots pulumi.StringPtrInput `pulumi:"maxReplicationSlots"`
	// Maximum depth of the stack in bytes
	MaxStackDepth pulumi.StringPtrInput `pulumi:"maxStackDepth"`
	// Max standby archive delay in milliseconds
	MaxStandbyArchiveDelay pulumi.StringPtrInput `pulumi:"maxStandbyArchiveDelay"`
	// Max standby streaming delay in milliseconds
	MaxStandbyStreamingDelay pulumi.StringPtrInput `pulumi:"maxStandbyStreamingDelay"`
	// PostgreSQL maximum WAL senders
	MaxWalSenders pulumi.StringPtrInput `pulumi:"maxWalSenders"`
	// Sets the maximum number of background processes that the system
	// can support
	// * `pg_partman_bgw.interval` - (Optional) Sets the time interval to run pg_partman's scheduled tasks
	// * `pg_partman_bgw.role` - (Optional) Controls which role to use for pg_partman's scheduled
	//   background tasks.
	// * `pg_stat_statements.track` - (Optional) Controls which statements are counted. Specify top
	//   to track top-level statements (those issued directly by clients), all to also track nested
	//   statements (such as statements invoked within functions), or none to disable statement statistics
	//   collection. The default value is top.
	MaxWorkerProcesses       pulumi.StringPtrInput `pulumi:"maxWorkerProcesses"`
	PgPartmanBgwDotInterval  pulumi.StringPtrInput `pulumi:"pgPartmanBgwDotInterval"`
	PgPartmanBgwDotRole      pulumi.StringPtrInput `pulumi:"pgPartmanBgwDotRole"`
	PgStatStatementsDotTrack pulumi.StringPtrInput `pulumi:"pgStatStatementsDotTrack"`
	// PostgreSQL temporary file limit in KiB, -1 for unlimited
	TempFileLimit pulumi.StringPtrInput `pulumi:"tempFileLimit"`
	// PostgreSQL service timezone
	Timezone pulumi.StringPtrInput `pulumi:"timezone"`
	// Specifies the number of bytes reserved to track the currently
	// executing command for each active session.
	TrackActivityQuerySize pulumi.StringPtrInput `pulumi:"trackActivityQuerySize"`
	// Record commit time of transactions
	TrackCommitTimestamp pulumi.StringPtrInput `pulumi:"trackCommitTimestamp"`
	// Enables tracking of function call counts and time used.
	TrackFunctions pulumi.StringPtrInput `pulumi:"trackFunctions"`
	// Terminate replication connections that are inactive for longer than
	// this amount of time, in milliseconds.
	WalSenderTimeout pulumi.StringPtrInput `pulumi:"walSenderTimeout"`
	// WAL flush interval in milliseconds. Note that setting this value
	// to lower than the default 200ms may negatively impact performance
	WalWriterDelay pulumi.StringPtrInput `pulumi:"walWriterDelay"`
}

func (PgPgUserConfigPgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PgPgUserConfigPg)(nil)).Elem()
}

func (i PgPgUserConfigPgArgs) ToPgPgUserConfigPgOutput() PgPgUserConfigPgOutput {
	return i.ToPgPgUserConfigPgOutputWithContext(context.Background())
}

func (i PgPgUserConfigPgArgs) ToPgPgUserConfigPgOutputWithContext(ctx context.Context) PgPgUserConfigPgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigPgOutput)
}

func (i PgPgUserConfigPgArgs) ToPgPgUserConfigPgPtrOutput() PgPgUserConfigPgPtrOutput {
	return i.ToPgPgUserConfigPgPtrOutputWithContext(context.Background())
}

func (i PgPgUserConfigPgArgs) ToPgPgUserConfigPgPtrOutputWithContext(ctx context.Context) PgPgUserConfigPgPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigPgOutput).ToPgPgUserConfigPgPtrOutputWithContext(ctx)
}

// PgPgUserConfigPgPtrInput is an input type that accepts PgPgUserConfigPgArgs, PgPgUserConfigPgPtr and PgPgUserConfigPgPtrOutput values.
// You can construct a concrete instance of `PgPgUserConfigPgPtrInput` via:
//
//          PgPgUserConfigPgArgs{...}
//
//  or:
//
//          nil
type PgPgUserConfigPgPtrInput interface {
	pulumi.Input

	ToPgPgUserConfigPgPtrOutput() PgPgUserConfigPgPtrOutput
	ToPgPgUserConfigPgPtrOutputWithContext(context.Context) PgPgUserConfigPgPtrOutput
}

type pgPgUserConfigPgPtrType PgPgUserConfigPgArgs

func PgPgUserConfigPgPtr(v *PgPgUserConfigPgArgs) PgPgUserConfigPgPtrInput {
	return (*pgPgUserConfigPgPtrType)(v)
}

func (*pgPgUserConfigPgPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PgPgUserConfigPg)(nil)).Elem()
}

func (i *pgPgUserConfigPgPtrType) ToPgPgUserConfigPgPtrOutput() PgPgUserConfigPgPtrOutput {
	return i.ToPgPgUserConfigPgPtrOutputWithContext(context.Background())
}

func (i *pgPgUserConfigPgPtrType) ToPgPgUserConfigPgPtrOutputWithContext(ctx context.Context) PgPgUserConfigPgPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigPgPtrOutput)
}

type PgPgUserConfigPgOutput struct{ *pulumi.OutputState }

func (PgPgUserConfigPgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PgPgUserConfigPg)(nil)).Elem()
}

func (o PgPgUserConfigPgOutput) ToPgPgUserConfigPgOutput() PgPgUserConfigPgOutput {
	return o
}

func (o PgPgUserConfigPgOutput) ToPgPgUserConfigPgOutputWithContext(ctx context.Context) PgPgUserConfigPgOutput {
	return o
}

func (o PgPgUserConfigPgOutput) ToPgPgUserConfigPgPtrOutput() PgPgUserConfigPgPtrOutput {
	return o.ToPgPgUserConfigPgPtrOutputWithContext(context.Background())
}

func (o PgPgUserConfigPgOutput) ToPgPgUserConfigPgPtrOutputWithContext(ctx context.Context) PgPgUserConfigPgPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *PgPgUserConfigPg {
		return &v
	}).(PgPgUserConfigPgPtrOutput)
}

// Specifies a fraction of the table size to add to
// autovacuumAnalyzeThreshold when deciding whether to trigger an ANALYZE. The default is 0.2
// (20% of table size).
func (o PgPgUserConfigPgOutput) AutovacuumAnalyzeScaleFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.AutovacuumAnalyzeScaleFactor }).(pulumi.StringPtrOutput)
}

// specifies the minimum number of inserted, updated
// or deleted tuples needed to trigger an ANALYZE in any one table. The default is 50 tuples.
func (o PgPgUserConfigPgOutput) AutovacuumAnalyzeThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.AutovacuumAnalyzeThreshold }).(pulumi.StringPtrOutput)
}

// specifies the maximum age (in transactions) that a table's
// pg_class.relfrozenxid field can attain before a VACUUM operation is forced to prevent transaction ID
// wraparound within the table. Note that the system will launch autovacuum processes to prevent wraparound
// even when autovacuum is otherwise disabled. This parameter will cause the server to be restarted.
func (o PgPgUserConfigPgOutput) AutovacuumFreezeMaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.AutovacuumFreezeMaxAge }).(pulumi.StringPtrOutput)
}

// specifies the maximum number of autovacuum processes (other
// than the autovacuum launcher) that may be running at any one time. The default is three. This parameter
// can only be set at server start.
func (o PgPgUserConfigPgOutput) AutovacuumMaxWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.AutovacuumMaxWorkers }).(pulumi.StringPtrOutput)
}

// specifies the minimum delay between autovacuum runs on any
// given database. The delay is measured in seconds, and the default is one minute.
func (o PgPgUserConfigPgOutput) AutovacuumNaptime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.AutovacuumNaptime }).(pulumi.StringPtrOutput)
}

// specifies the cost delay value that will be used
// in automatic VACUUM operations. If -1 is specified, the regular vacuumCostDelay value will be
// used. The default value is 20 milliseconds.
func (o PgPgUserConfigPgOutput) AutovacuumVacuumCostDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.AutovacuumVacuumCostDelay }).(pulumi.StringPtrOutput)
}

// specifies the cost limit value that will be used in
// automatic VACUUM operations. If -1 is specified (which is the default), the regular vacuumCostLimit
// value will be used.
func (o PgPgUserConfigPgOutput) AutovacuumVacuumCostLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.AutovacuumVacuumCostLimit }).(pulumi.StringPtrOutput)
}

// specifies a fraction of the table size to add to
// autovacuumVacuumThreshold when deciding whether to trigger a VACUUM. The default is 0.2 (20% of table size).
func (o PgPgUserConfigPgOutput) AutovacuumVacuumScaleFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.AutovacuumVacuumScaleFactor }).(pulumi.StringPtrOutput)
}

// specifies the minimum number of updated or deleted tuples
// needed to trigger a VACUUM in any one table. The default is 50 tuples
func (o PgPgUserConfigPgOutput) AutovacuumVacuumThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.AutovacuumVacuumThreshold }).(pulumi.StringPtrOutput)
}

// this is the amount of time, in milliseconds, to wait on a lock before
// checking to see if there is a deadlock condition.
func (o PgPgUserConfigPgOutput) DeadlockTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.DeadlockTimeout }).(pulumi.StringPtrOutput)
}

// Time out sessions with open transactions after
// this number of milliseconds.
func (o PgPgUserConfigPgOutput) IdleInTransactionSessionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.IdleInTransactionSessionTimeout }).(pulumi.StringPtrOutput)
}

// Controls system-wide use of Just-in-Time Compilation (JIT).
func (o PgPgUserConfigPgOutput) Jit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.Jit }).(pulumi.StringPtrOutput)
}

// Causes each action executed by autovacuum to be logged
// if it ran for at least the specified number of milliseconds. Setting this to zero logs all autovacuum
// actions. Minus-one (the default) disables logging autovacuum actions.
func (o PgPgUserConfigPgOutput) LogAutovacuumMinDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.LogAutovacuumMinDuration }).(pulumi.StringPtrOutput)
}

// Controls the amount of detail written in the server log for
// each message that is logged. Possible values: `TERSE`, `DEFAULT` and `VERBOSE`.
func (o PgPgUserConfigPgOutput) LogErrorVerbosity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.LogErrorVerbosity }).(pulumi.StringPtrOutput)
}

// Choose from one of the available log-formats. These can support
// popular log analyzers like pgbadger, pganalyze etc.
// milliseconds to run, -1 disables
func (o PgPgUserConfigPgOutput) LogLinePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.LogLinePrefix }).(pulumi.StringPtrOutput)
}

// Log statements that take more than this number of
func (o PgPgUserConfigPgOutput) LogMinDurationStatement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.LogMinDurationStatement }).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum number of files that can be open per process
func (o PgPgUserConfigPgOutput) MaxFilesPerProcess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.MaxFilesPerProcess }).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum locks per transaction
func (o PgPgUserConfigPgOutput) MaxLocksPerTransaction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.MaxLocksPerTransaction }).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum logical replication workers
// (taken from the pool of max_parallel_workers)
func (o PgPgUserConfigPgOutput) MaxLogicalReplicationWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.MaxLogicalReplicationWorkers }).(pulumi.StringPtrOutput)
}

// Sets the maximum number of workers that the system can
// support for parallel queries.
func (o PgPgUserConfigPgOutput) MaxParallelWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.MaxParallelWorkers }).(pulumi.StringPtrOutput)
}

// Sets the maximum number of workers that can be
// started by a single Gather or Gather Merge node.
func (o PgPgUserConfigPgOutput) MaxParallelWorkersPerGather() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.MaxParallelWorkersPerGather }).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum predicate locks per transaction
func (o PgPgUserConfigPgOutput) MaxPredLocksPerTransaction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.MaxPredLocksPerTransaction }).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum prepared transactions
func (o PgPgUserConfigPgOutput) MaxPreparedTransactions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.MaxPreparedTransactions }).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum replication slots
func (o PgPgUserConfigPgOutput) MaxReplicationSlots() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.MaxReplicationSlots }).(pulumi.StringPtrOutput)
}

// Maximum depth of the stack in bytes
func (o PgPgUserConfigPgOutput) MaxStackDepth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.MaxStackDepth }).(pulumi.StringPtrOutput)
}

// Max standby archive delay in milliseconds
func (o PgPgUserConfigPgOutput) MaxStandbyArchiveDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.MaxStandbyArchiveDelay }).(pulumi.StringPtrOutput)
}

// Max standby streaming delay in milliseconds
func (o PgPgUserConfigPgOutput) MaxStandbyStreamingDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.MaxStandbyStreamingDelay }).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum WAL senders
func (o PgPgUserConfigPgOutput) MaxWalSenders() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.MaxWalSenders }).(pulumi.StringPtrOutput)
}

// Sets the maximum number of background processes that the system
// can support
// * `pg_partman_bgw.interval` - (Optional) Sets the time interval to run pg_partman's scheduled tasks
// * `pg_partman_bgw.role` - (Optional) Controls which role to use for pg_partman's scheduled
//   background tasks.
// * `pg_stat_statements.track` - (Optional) Controls which statements are counted. Specify top
//   to track top-level statements (those issued directly by clients), all to also track nested
//   statements (such as statements invoked within functions), or none to disable statement statistics
//   collection. The default value is top.
func (o PgPgUserConfigPgOutput) MaxWorkerProcesses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.MaxWorkerProcesses }).(pulumi.StringPtrOutput)
}

func (o PgPgUserConfigPgOutput) PgPartmanBgwDotInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.PgPartmanBgwDotInterval }).(pulumi.StringPtrOutput)
}

func (o PgPgUserConfigPgOutput) PgPartmanBgwDotRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.PgPartmanBgwDotRole }).(pulumi.StringPtrOutput)
}

func (o PgPgUserConfigPgOutput) PgStatStatementsDotTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.PgStatStatementsDotTrack }).(pulumi.StringPtrOutput)
}

// PostgreSQL temporary file limit in KiB, -1 for unlimited
func (o PgPgUserConfigPgOutput) TempFileLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.TempFileLimit }).(pulumi.StringPtrOutput)
}

// PostgreSQL service timezone
func (o PgPgUserConfigPgOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

// Specifies the number of bytes reserved to track the currently
// executing command for each active session.
func (o PgPgUserConfigPgOutput) TrackActivityQuerySize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.TrackActivityQuerySize }).(pulumi.StringPtrOutput)
}

// Record commit time of transactions
func (o PgPgUserConfigPgOutput) TrackCommitTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.TrackCommitTimestamp }).(pulumi.StringPtrOutput)
}

// Enables tracking of function call counts and time used.
func (o PgPgUserConfigPgOutput) TrackFunctions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.TrackFunctions }).(pulumi.StringPtrOutput)
}

// Terminate replication connections that are inactive for longer than
// this amount of time, in milliseconds.
func (o PgPgUserConfigPgOutput) WalSenderTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.WalSenderTimeout }).(pulumi.StringPtrOutput)
}

// WAL flush interval in milliseconds. Note that setting this value
// to lower than the default 200ms may negatively impact performance
func (o PgPgUserConfigPgOutput) WalWriterDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPg) *string { return v.WalWriterDelay }).(pulumi.StringPtrOutput)
}

type PgPgUserConfigPgPtrOutput struct{ *pulumi.OutputState }

func (PgPgUserConfigPgPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PgPgUserConfigPg)(nil)).Elem()
}

func (o PgPgUserConfigPgPtrOutput) ToPgPgUserConfigPgPtrOutput() PgPgUserConfigPgPtrOutput {
	return o
}

func (o PgPgUserConfigPgPtrOutput) ToPgPgUserConfigPgPtrOutputWithContext(ctx context.Context) PgPgUserConfigPgPtrOutput {
	return o
}

func (o PgPgUserConfigPgPtrOutput) Elem() PgPgUserConfigPgOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) PgPgUserConfigPg { return *v }).(PgPgUserConfigPgOutput)
}

// Specifies a fraction of the table size to add to
// autovacuumAnalyzeThreshold when deciding whether to trigger an ANALYZE. The default is 0.2
// (20% of table size).
func (o PgPgUserConfigPgPtrOutput) AutovacuumAnalyzeScaleFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumAnalyzeScaleFactor
	}).(pulumi.StringPtrOutput)
}

// specifies the minimum number of inserted, updated
// or deleted tuples needed to trigger an ANALYZE in any one table. The default is 50 tuples.
func (o PgPgUserConfigPgPtrOutput) AutovacuumAnalyzeThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumAnalyzeThreshold
	}).(pulumi.StringPtrOutput)
}

// specifies the maximum age (in transactions) that a table's
// pg_class.relfrozenxid field can attain before a VACUUM operation is forced to prevent transaction ID
// wraparound within the table. Note that the system will launch autovacuum processes to prevent wraparound
// even when autovacuum is otherwise disabled. This parameter will cause the server to be restarted.
func (o PgPgUserConfigPgPtrOutput) AutovacuumFreezeMaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumFreezeMaxAge
	}).(pulumi.StringPtrOutput)
}

// specifies the maximum number of autovacuum processes (other
// than the autovacuum launcher) that may be running at any one time. The default is three. This parameter
// can only be set at server start.
func (o PgPgUserConfigPgPtrOutput) AutovacuumMaxWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumMaxWorkers
	}).(pulumi.StringPtrOutput)
}

// specifies the minimum delay between autovacuum runs on any
// given database. The delay is measured in seconds, and the default is one minute.
func (o PgPgUserConfigPgPtrOutput) AutovacuumNaptime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumNaptime
	}).(pulumi.StringPtrOutput)
}

// specifies the cost delay value that will be used
// in automatic VACUUM operations. If -1 is specified, the regular vacuumCostDelay value will be
// used. The default value is 20 milliseconds.
func (o PgPgUserConfigPgPtrOutput) AutovacuumVacuumCostDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumVacuumCostDelay
	}).(pulumi.StringPtrOutput)
}

// specifies the cost limit value that will be used in
// automatic VACUUM operations. If -1 is specified (which is the default), the regular vacuumCostLimit
// value will be used.
func (o PgPgUserConfigPgPtrOutput) AutovacuumVacuumCostLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumVacuumCostLimit
	}).(pulumi.StringPtrOutput)
}

// specifies a fraction of the table size to add to
// autovacuumVacuumThreshold when deciding whether to trigger a VACUUM. The default is 0.2 (20% of table size).
func (o PgPgUserConfigPgPtrOutput) AutovacuumVacuumScaleFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumVacuumScaleFactor
	}).(pulumi.StringPtrOutput)
}

// specifies the minimum number of updated or deleted tuples
// needed to trigger a VACUUM in any one table. The default is 50 tuples
func (o PgPgUserConfigPgPtrOutput) AutovacuumVacuumThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumVacuumThreshold
	}).(pulumi.StringPtrOutput)
}

// this is the amount of time, in milliseconds, to wait on a lock before
// checking to see if there is a deadlock condition.
func (o PgPgUserConfigPgPtrOutput) DeadlockTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.DeadlockTimeout
	}).(pulumi.StringPtrOutput)
}

// Time out sessions with open transactions after
// this number of milliseconds.
func (o PgPgUserConfigPgPtrOutput) IdleInTransactionSessionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.IdleInTransactionSessionTimeout
	}).(pulumi.StringPtrOutput)
}

// Controls system-wide use of Just-in-Time Compilation (JIT).
func (o PgPgUserConfigPgPtrOutput) Jit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.Jit
	}).(pulumi.StringPtrOutput)
}

// Causes each action executed by autovacuum to be logged
// if it ran for at least the specified number of milliseconds. Setting this to zero logs all autovacuum
// actions. Minus-one (the default) disables logging autovacuum actions.
func (o PgPgUserConfigPgPtrOutput) LogAutovacuumMinDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.LogAutovacuumMinDuration
	}).(pulumi.StringPtrOutput)
}

// Controls the amount of detail written in the server log for
// each message that is logged. Possible values: `TERSE`, `DEFAULT` and `VERBOSE`.
func (o PgPgUserConfigPgPtrOutput) LogErrorVerbosity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.LogErrorVerbosity
	}).(pulumi.StringPtrOutput)
}

// Choose from one of the available log-formats. These can support
// popular log analyzers like pgbadger, pganalyze etc.
// milliseconds to run, -1 disables
func (o PgPgUserConfigPgPtrOutput) LogLinePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.LogLinePrefix
	}).(pulumi.StringPtrOutput)
}

// Log statements that take more than this number of
func (o PgPgUserConfigPgPtrOutput) LogMinDurationStatement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.LogMinDurationStatement
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum number of files that can be open per process
func (o PgPgUserConfigPgPtrOutput) MaxFilesPerProcess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxFilesPerProcess
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum locks per transaction
func (o PgPgUserConfigPgPtrOutput) MaxLocksPerTransaction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxLocksPerTransaction
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum logical replication workers
// (taken from the pool of max_parallel_workers)
func (o PgPgUserConfigPgPtrOutput) MaxLogicalReplicationWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxLogicalReplicationWorkers
	}).(pulumi.StringPtrOutput)
}

// Sets the maximum number of workers that the system can
// support for parallel queries.
func (o PgPgUserConfigPgPtrOutput) MaxParallelWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxParallelWorkers
	}).(pulumi.StringPtrOutput)
}

// Sets the maximum number of workers that can be
// started by a single Gather or Gather Merge node.
func (o PgPgUserConfigPgPtrOutput) MaxParallelWorkersPerGather() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxParallelWorkersPerGather
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum predicate locks per transaction
func (o PgPgUserConfigPgPtrOutput) MaxPredLocksPerTransaction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxPredLocksPerTransaction
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum prepared transactions
func (o PgPgUserConfigPgPtrOutput) MaxPreparedTransactions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxPreparedTransactions
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum replication slots
func (o PgPgUserConfigPgPtrOutput) MaxReplicationSlots() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxReplicationSlots
	}).(pulumi.StringPtrOutput)
}

// Maximum depth of the stack in bytes
func (o PgPgUserConfigPgPtrOutput) MaxStackDepth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxStackDepth
	}).(pulumi.StringPtrOutput)
}

// Max standby archive delay in milliseconds
func (o PgPgUserConfigPgPtrOutput) MaxStandbyArchiveDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxStandbyArchiveDelay
	}).(pulumi.StringPtrOutput)
}

// Max standby streaming delay in milliseconds
func (o PgPgUserConfigPgPtrOutput) MaxStandbyStreamingDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxStandbyStreamingDelay
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum WAL senders
func (o PgPgUserConfigPgPtrOutput) MaxWalSenders() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxWalSenders
	}).(pulumi.StringPtrOutput)
}

// Sets the maximum number of background processes that the system
// can support
// * `pg_partman_bgw.interval` - (Optional) Sets the time interval to run pg_partman's scheduled tasks
// * `pg_partman_bgw.role` - (Optional) Controls which role to use for pg_partman's scheduled
//   background tasks.
// * `pg_stat_statements.track` - (Optional) Controls which statements are counted. Specify top
//   to track top-level statements (those issued directly by clients), all to also track nested
//   statements (such as statements invoked within functions), or none to disable statement statistics
//   collection. The default value is top.
func (o PgPgUserConfigPgPtrOutput) MaxWorkerProcesses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxWorkerProcesses
	}).(pulumi.StringPtrOutput)
}

func (o PgPgUserConfigPgPtrOutput) PgPartmanBgwDotInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.PgPartmanBgwDotInterval
	}).(pulumi.StringPtrOutput)
}

func (o PgPgUserConfigPgPtrOutput) PgPartmanBgwDotRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.PgPartmanBgwDotRole
	}).(pulumi.StringPtrOutput)
}

func (o PgPgUserConfigPgPtrOutput) PgStatStatementsDotTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.PgStatStatementsDotTrack
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL temporary file limit in KiB, -1 for unlimited
func (o PgPgUserConfigPgPtrOutput) TempFileLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.TempFileLimit
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL service timezone
func (o PgPgUserConfigPgPtrOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.Timezone
	}).(pulumi.StringPtrOutput)
}

// Specifies the number of bytes reserved to track the currently
// executing command for each active session.
func (o PgPgUserConfigPgPtrOutput) TrackActivityQuerySize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.TrackActivityQuerySize
	}).(pulumi.StringPtrOutput)
}

// Record commit time of transactions
func (o PgPgUserConfigPgPtrOutput) TrackCommitTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.TrackCommitTimestamp
	}).(pulumi.StringPtrOutput)
}

// Enables tracking of function call counts and time used.
func (o PgPgUserConfigPgPtrOutput) TrackFunctions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.TrackFunctions
	}).(pulumi.StringPtrOutput)
}

// Terminate replication connections that are inactive for longer than
// this amount of time, in milliseconds.
func (o PgPgUserConfigPgPtrOutput) WalSenderTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.WalSenderTimeout
	}).(pulumi.StringPtrOutput)
}

// WAL flush interval in milliseconds. Note that setting this value
// to lower than the default 200ms may negatively impact performance
func (o PgPgUserConfigPgPtrOutput) WalWriterDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.WalWriterDelay
	}).(pulumi.StringPtrOutput)
}

type PgPgUserConfigPgbouncer struct {
	// If the automatically created database pools have been unused this
	// many seconds, they are freed. If 0 then timeout is disabled.
	AutodbIdleTimeout *string `pulumi:"autodbIdleTimeout"`
	// Do not allow more than this many server connections per database
	// (regardless of user). Setting it to 0 means unlimited.
	AutodbMaxDbConnections *string `pulumi:"autodbMaxDbConnections"`
	// PGBouncer pool mode
	AutodbPoolMode *string `pulumi:"autodbPoolMode"`
	// If non-zero then create automatically a pool of that size per user
	// when a pool doesn't exist.
	AutodbPoolSize *string `pulumi:"autodbPoolSize"`
	// Enum of parameters to ignore when given in startup packet.
	IgnoreStartupParameters []string `pulumi:"ignoreStartupParameters"`
	// Add more server connections to pool if below this number. Improves
	// behavior when usual load comes suddenly back after period of total inactivity. The value is
	// effectively capped at the pool size.
	MinPoolSize *string `pulumi:"minPoolSize"`
	// If a server connection has been idle more than this many seconds
	// it will be dropped. If 0 then timeout is disabled.
	ServerIdleTimeout *string `pulumi:"serverIdleTimeout"`
	// The pooler will close an unused server connection that has been connected
	// longer than this.
	ServerLifetime *string `pulumi:"serverLifetime"`
	// Run serverResetQuery (DISCARD ALL) in all pooling modes.
	ServerResetQueryAlways *string `pulumi:"serverResetQueryAlways"`
}

// PgPgUserConfigPgbouncerInput is an input type that accepts PgPgUserConfigPgbouncerArgs and PgPgUserConfigPgbouncerOutput values.
// You can construct a concrete instance of `PgPgUserConfigPgbouncerInput` via:
//
//          PgPgUserConfigPgbouncerArgs{...}
type PgPgUserConfigPgbouncerInput interface {
	pulumi.Input

	ToPgPgUserConfigPgbouncerOutput() PgPgUserConfigPgbouncerOutput
	ToPgPgUserConfigPgbouncerOutputWithContext(context.Context) PgPgUserConfigPgbouncerOutput
}

type PgPgUserConfigPgbouncerArgs struct {
	// If the automatically created database pools have been unused this
	// many seconds, they are freed. If 0 then timeout is disabled.
	AutodbIdleTimeout pulumi.StringPtrInput `pulumi:"autodbIdleTimeout"`
	// Do not allow more than this many server connections per database
	// (regardless of user). Setting it to 0 means unlimited.
	AutodbMaxDbConnections pulumi.StringPtrInput `pulumi:"autodbMaxDbConnections"`
	// PGBouncer pool mode
	AutodbPoolMode pulumi.StringPtrInput `pulumi:"autodbPoolMode"`
	// If non-zero then create automatically a pool of that size per user
	// when a pool doesn't exist.
	AutodbPoolSize pulumi.StringPtrInput `pulumi:"autodbPoolSize"`
	// Enum of parameters to ignore when given in startup packet.
	IgnoreStartupParameters pulumi.StringArrayInput `pulumi:"ignoreStartupParameters"`
	// Add more server connections to pool if below this number. Improves
	// behavior when usual load comes suddenly back after period of total inactivity. The value is
	// effectively capped at the pool size.
	MinPoolSize pulumi.StringPtrInput `pulumi:"minPoolSize"`
	// If a server connection has been idle more than this many seconds
	// it will be dropped. If 0 then timeout is disabled.
	ServerIdleTimeout pulumi.StringPtrInput `pulumi:"serverIdleTimeout"`
	// The pooler will close an unused server connection that has been connected
	// longer than this.
	ServerLifetime pulumi.StringPtrInput `pulumi:"serverLifetime"`
	// Run serverResetQuery (DISCARD ALL) in all pooling modes.
	ServerResetQueryAlways pulumi.StringPtrInput `pulumi:"serverResetQueryAlways"`
}

func (PgPgUserConfigPgbouncerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PgPgUserConfigPgbouncer)(nil)).Elem()
}

func (i PgPgUserConfigPgbouncerArgs) ToPgPgUserConfigPgbouncerOutput() PgPgUserConfigPgbouncerOutput {
	return i.ToPgPgUserConfigPgbouncerOutputWithContext(context.Background())
}

func (i PgPgUserConfigPgbouncerArgs) ToPgPgUserConfigPgbouncerOutputWithContext(ctx context.Context) PgPgUserConfigPgbouncerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigPgbouncerOutput)
}

func (i PgPgUserConfigPgbouncerArgs) ToPgPgUserConfigPgbouncerPtrOutput() PgPgUserConfigPgbouncerPtrOutput {
	return i.ToPgPgUserConfigPgbouncerPtrOutputWithContext(context.Background())
}

func (i PgPgUserConfigPgbouncerArgs) ToPgPgUserConfigPgbouncerPtrOutputWithContext(ctx context.Context) PgPgUserConfigPgbouncerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigPgbouncerOutput).ToPgPgUserConfigPgbouncerPtrOutputWithContext(ctx)
}

// PgPgUserConfigPgbouncerPtrInput is an input type that accepts PgPgUserConfigPgbouncerArgs, PgPgUserConfigPgbouncerPtr and PgPgUserConfigPgbouncerPtrOutput values.
// You can construct a concrete instance of `PgPgUserConfigPgbouncerPtrInput` via:
//
//          PgPgUserConfigPgbouncerArgs{...}
//
//  or:
//
//          nil
type PgPgUserConfigPgbouncerPtrInput interface {
	pulumi.Input

	ToPgPgUserConfigPgbouncerPtrOutput() PgPgUserConfigPgbouncerPtrOutput
	ToPgPgUserConfigPgbouncerPtrOutputWithContext(context.Context) PgPgUserConfigPgbouncerPtrOutput
}

type pgPgUserConfigPgbouncerPtrType PgPgUserConfigPgbouncerArgs

func PgPgUserConfigPgbouncerPtr(v *PgPgUserConfigPgbouncerArgs) PgPgUserConfigPgbouncerPtrInput {
	return (*pgPgUserConfigPgbouncerPtrType)(v)
}

func (*pgPgUserConfigPgbouncerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PgPgUserConfigPgbouncer)(nil)).Elem()
}

func (i *pgPgUserConfigPgbouncerPtrType) ToPgPgUserConfigPgbouncerPtrOutput() PgPgUserConfigPgbouncerPtrOutput {
	return i.ToPgPgUserConfigPgbouncerPtrOutputWithContext(context.Background())
}

func (i *pgPgUserConfigPgbouncerPtrType) ToPgPgUserConfigPgbouncerPtrOutputWithContext(ctx context.Context) PgPgUserConfigPgbouncerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigPgbouncerPtrOutput)
}

type PgPgUserConfigPgbouncerOutput struct{ *pulumi.OutputState }

func (PgPgUserConfigPgbouncerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PgPgUserConfigPgbouncer)(nil)).Elem()
}

func (o PgPgUserConfigPgbouncerOutput) ToPgPgUserConfigPgbouncerOutput() PgPgUserConfigPgbouncerOutput {
	return o
}

func (o PgPgUserConfigPgbouncerOutput) ToPgPgUserConfigPgbouncerOutputWithContext(ctx context.Context) PgPgUserConfigPgbouncerOutput {
	return o
}

func (o PgPgUserConfigPgbouncerOutput) ToPgPgUserConfigPgbouncerPtrOutput() PgPgUserConfigPgbouncerPtrOutput {
	return o.ToPgPgUserConfigPgbouncerPtrOutputWithContext(context.Background())
}

func (o PgPgUserConfigPgbouncerOutput) ToPgPgUserConfigPgbouncerPtrOutputWithContext(ctx context.Context) PgPgUserConfigPgbouncerPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPgbouncer) *PgPgUserConfigPgbouncer {
		return &v
	}).(PgPgUserConfigPgbouncerPtrOutput)
}

// If the automatically created database pools have been unused this
// many seconds, they are freed. If 0 then timeout is disabled.
func (o PgPgUserConfigPgbouncerOutput) AutodbIdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPgbouncer) *string { return v.AutodbIdleTimeout }).(pulumi.StringPtrOutput)
}

// Do not allow more than this many server connections per database
// (regardless of user). Setting it to 0 means unlimited.
func (o PgPgUserConfigPgbouncerOutput) AutodbMaxDbConnections() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPgbouncer) *string { return v.AutodbMaxDbConnections }).(pulumi.StringPtrOutput)
}

// PGBouncer pool mode
func (o PgPgUserConfigPgbouncerOutput) AutodbPoolMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPgbouncer) *string { return v.AutodbPoolMode }).(pulumi.StringPtrOutput)
}

// If non-zero then create automatically a pool of that size per user
// when a pool doesn't exist.
func (o PgPgUserConfigPgbouncerOutput) AutodbPoolSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPgbouncer) *string { return v.AutodbPoolSize }).(pulumi.StringPtrOutput)
}

// Enum of parameters to ignore when given in startup packet.
func (o PgPgUserConfigPgbouncerOutput) IgnoreStartupParameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PgPgUserConfigPgbouncer) []string { return v.IgnoreStartupParameters }).(pulumi.StringArrayOutput)
}

// Add more server connections to pool if below this number. Improves
// behavior when usual load comes suddenly back after period of total inactivity. The value is
// effectively capped at the pool size.
func (o PgPgUserConfigPgbouncerOutput) MinPoolSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPgbouncer) *string { return v.MinPoolSize }).(pulumi.StringPtrOutput)
}

// If a server connection has been idle more than this many seconds
// it will be dropped. If 0 then timeout is disabled.
func (o PgPgUserConfigPgbouncerOutput) ServerIdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPgbouncer) *string { return v.ServerIdleTimeout }).(pulumi.StringPtrOutput)
}

// The pooler will close an unused server connection that has been connected
// longer than this.
func (o PgPgUserConfigPgbouncerOutput) ServerLifetime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPgbouncer) *string { return v.ServerLifetime }).(pulumi.StringPtrOutput)
}

// Run serverResetQuery (DISCARD ALL) in all pooling modes.
func (o PgPgUserConfigPgbouncerOutput) ServerResetQueryAlways() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPgbouncer) *string { return v.ServerResetQueryAlways }).(pulumi.StringPtrOutput)
}

type PgPgUserConfigPgbouncerPtrOutput struct{ *pulumi.OutputState }

func (PgPgUserConfigPgbouncerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PgPgUserConfigPgbouncer)(nil)).Elem()
}

func (o PgPgUserConfigPgbouncerPtrOutput) ToPgPgUserConfigPgbouncerPtrOutput() PgPgUserConfigPgbouncerPtrOutput {
	return o
}

func (o PgPgUserConfigPgbouncerPtrOutput) ToPgPgUserConfigPgbouncerPtrOutputWithContext(ctx context.Context) PgPgUserConfigPgbouncerPtrOutput {
	return o
}

func (o PgPgUserConfigPgbouncerPtrOutput) Elem() PgPgUserConfigPgbouncerOutput {
	return o.ApplyT(func(v *PgPgUserConfigPgbouncer) PgPgUserConfigPgbouncer { return *v }).(PgPgUserConfigPgbouncerOutput)
}

// If the automatically created database pools have been unused this
// many seconds, they are freed. If 0 then timeout is disabled.
func (o PgPgUserConfigPgbouncerPtrOutput) AutodbIdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.AutodbIdleTimeout
	}).(pulumi.StringPtrOutput)
}

// Do not allow more than this many server connections per database
// (regardless of user). Setting it to 0 means unlimited.
func (o PgPgUserConfigPgbouncerPtrOutput) AutodbMaxDbConnections() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.AutodbMaxDbConnections
	}).(pulumi.StringPtrOutput)
}

// PGBouncer pool mode
func (o PgPgUserConfigPgbouncerPtrOutput) AutodbPoolMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.AutodbPoolMode
	}).(pulumi.StringPtrOutput)
}

// If non-zero then create automatically a pool of that size per user
// when a pool doesn't exist.
func (o PgPgUserConfigPgbouncerPtrOutput) AutodbPoolSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.AutodbPoolSize
	}).(pulumi.StringPtrOutput)
}

// Enum of parameters to ignore when given in startup packet.
func (o PgPgUserConfigPgbouncerPtrOutput) IgnoreStartupParameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PgPgUserConfigPgbouncer) []string {
		if v == nil {
			return nil
		}
		return v.IgnoreStartupParameters
	}).(pulumi.StringArrayOutput)
}

// Add more server connections to pool if below this number. Improves
// behavior when usual load comes suddenly back after period of total inactivity. The value is
// effectively capped at the pool size.
func (o PgPgUserConfigPgbouncerPtrOutput) MinPoolSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.MinPoolSize
	}).(pulumi.StringPtrOutput)
}

// If a server connection has been idle more than this many seconds
// it will be dropped. If 0 then timeout is disabled.
func (o PgPgUserConfigPgbouncerPtrOutput) ServerIdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.ServerIdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The pooler will close an unused server connection that has been connected
// longer than this.
func (o PgPgUserConfigPgbouncerPtrOutput) ServerLifetime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.ServerLifetime
	}).(pulumi.StringPtrOutput)
}

// Run serverResetQuery (DISCARD ALL) in all pooling modes.
func (o PgPgUserConfigPgbouncerPtrOutput) ServerResetQueryAlways() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.ServerResetQueryAlways
	}).(pulumi.StringPtrOutput)
}

type PgPgUserConfigPglookout struct {
	// Number of seconds of master unavailability before
	// triggering database failover to standby
	MaxFailoverReplicationTimeLag *string `pulumi:"maxFailoverReplicationTimeLag"`
}

// PgPgUserConfigPglookoutInput is an input type that accepts PgPgUserConfigPglookoutArgs and PgPgUserConfigPglookoutOutput values.
// You can construct a concrete instance of `PgPgUserConfigPglookoutInput` via:
//
//          PgPgUserConfigPglookoutArgs{...}
type PgPgUserConfigPglookoutInput interface {
	pulumi.Input

	ToPgPgUserConfigPglookoutOutput() PgPgUserConfigPglookoutOutput
	ToPgPgUserConfigPglookoutOutputWithContext(context.Context) PgPgUserConfigPglookoutOutput
}

type PgPgUserConfigPglookoutArgs struct {
	// Number of seconds of master unavailability before
	// triggering database failover to standby
	MaxFailoverReplicationTimeLag pulumi.StringPtrInput `pulumi:"maxFailoverReplicationTimeLag"`
}

func (PgPgUserConfigPglookoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PgPgUserConfigPglookout)(nil)).Elem()
}

func (i PgPgUserConfigPglookoutArgs) ToPgPgUserConfigPglookoutOutput() PgPgUserConfigPglookoutOutput {
	return i.ToPgPgUserConfigPglookoutOutputWithContext(context.Background())
}

func (i PgPgUserConfigPglookoutArgs) ToPgPgUserConfigPglookoutOutputWithContext(ctx context.Context) PgPgUserConfigPglookoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigPglookoutOutput)
}

func (i PgPgUserConfigPglookoutArgs) ToPgPgUserConfigPglookoutPtrOutput() PgPgUserConfigPglookoutPtrOutput {
	return i.ToPgPgUserConfigPglookoutPtrOutputWithContext(context.Background())
}

func (i PgPgUserConfigPglookoutArgs) ToPgPgUserConfigPglookoutPtrOutputWithContext(ctx context.Context) PgPgUserConfigPglookoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigPglookoutOutput).ToPgPgUserConfigPglookoutPtrOutputWithContext(ctx)
}

// PgPgUserConfigPglookoutPtrInput is an input type that accepts PgPgUserConfigPglookoutArgs, PgPgUserConfigPglookoutPtr and PgPgUserConfigPglookoutPtrOutput values.
// You can construct a concrete instance of `PgPgUserConfigPglookoutPtrInput` via:
//
//          PgPgUserConfigPglookoutArgs{...}
//
//  or:
//
//          nil
type PgPgUserConfigPglookoutPtrInput interface {
	pulumi.Input

	ToPgPgUserConfigPglookoutPtrOutput() PgPgUserConfigPglookoutPtrOutput
	ToPgPgUserConfigPglookoutPtrOutputWithContext(context.Context) PgPgUserConfigPglookoutPtrOutput
}

type pgPgUserConfigPglookoutPtrType PgPgUserConfigPglookoutArgs

func PgPgUserConfigPglookoutPtr(v *PgPgUserConfigPglookoutArgs) PgPgUserConfigPglookoutPtrInput {
	return (*pgPgUserConfigPglookoutPtrType)(v)
}

func (*pgPgUserConfigPglookoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PgPgUserConfigPglookout)(nil)).Elem()
}

func (i *pgPgUserConfigPglookoutPtrType) ToPgPgUserConfigPglookoutPtrOutput() PgPgUserConfigPglookoutPtrOutput {
	return i.ToPgPgUserConfigPglookoutPtrOutputWithContext(context.Background())
}

func (i *pgPgUserConfigPglookoutPtrType) ToPgPgUserConfigPglookoutPtrOutputWithContext(ctx context.Context) PgPgUserConfigPglookoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigPglookoutPtrOutput)
}

type PgPgUserConfigPglookoutOutput struct{ *pulumi.OutputState }

func (PgPgUserConfigPglookoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PgPgUserConfigPglookout)(nil)).Elem()
}

func (o PgPgUserConfigPglookoutOutput) ToPgPgUserConfigPglookoutOutput() PgPgUserConfigPglookoutOutput {
	return o
}

func (o PgPgUserConfigPglookoutOutput) ToPgPgUserConfigPglookoutOutputWithContext(ctx context.Context) PgPgUserConfigPglookoutOutput {
	return o
}

func (o PgPgUserConfigPglookoutOutput) ToPgPgUserConfigPglookoutPtrOutput() PgPgUserConfigPglookoutPtrOutput {
	return o.ToPgPgUserConfigPglookoutPtrOutputWithContext(context.Background())
}

func (o PgPgUserConfigPglookoutOutput) ToPgPgUserConfigPglookoutPtrOutputWithContext(ctx context.Context) PgPgUserConfigPglookoutPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPglookout) *PgPgUserConfigPglookout {
		return &v
	}).(PgPgUserConfigPglookoutPtrOutput)
}

// Number of seconds of master unavailability before
// triggering database failover to standby
func (o PgPgUserConfigPglookoutOutput) MaxFailoverReplicationTimeLag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPglookout) *string { return v.MaxFailoverReplicationTimeLag }).(pulumi.StringPtrOutput)
}

type PgPgUserConfigPglookoutPtrOutput struct{ *pulumi.OutputState }

func (PgPgUserConfigPglookoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PgPgUserConfigPglookout)(nil)).Elem()
}

func (o PgPgUserConfigPglookoutPtrOutput) ToPgPgUserConfigPglookoutPtrOutput() PgPgUserConfigPglookoutPtrOutput {
	return o
}

func (o PgPgUserConfigPglookoutPtrOutput) ToPgPgUserConfigPglookoutPtrOutputWithContext(ctx context.Context) PgPgUserConfigPglookoutPtrOutput {
	return o
}

func (o PgPgUserConfigPglookoutPtrOutput) Elem() PgPgUserConfigPglookoutOutput {
	return o.ApplyT(func(v *PgPgUserConfigPglookout) PgPgUserConfigPglookout { return *v }).(PgPgUserConfigPglookoutOutput)
}

// Number of seconds of master unavailability before
// triggering database failover to standby
func (o PgPgUserConfigPglookoutPtrOutput) MaxFailoverReplicationTimeLag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPglookout) *string {
		if v == nil {
			return nil
		}
		return v.MaxFailoverReplicationTimeLag
	}).(pulumi.StringPtrOutput)
}

type PgPgUserConfigPrivateAccess struct {
	// Enable pg.
	Pg *string `pulumi:"pg"`
	// Enable pgbouncer.
	Pgbouncer *string `pulumi:"pgbouncer"`
	// Allow clients to connect to prometheus from the public internet for
	// service nodes that are in a project VPC or another type of private network
	Prometheus *string `pulumi:"prometheus"`
}

// PgPgUserConfigPrivateAccessInput is an input type that accepts PgPgUserConfigPrivateAccessArgs and PgPgUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `PgPgUserConfigPrivateAccessInput` via:
//
//          PgPgUserConfigPrivateAccessArgs{...}
type PgPgUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToPgPgUserConfigPrivateAccessOutput() PgPgUserConfigPrivateAccessOutput
	ToPgPgUserConfigPrivateAccessOutputWithContext(context.Context) PgPgUserConfigPrivateAccessOutput
}

type PgPgUserConfigPrivateAccessArgs struct {
	// Enable pg.
	Pg pulumi.StringPtrInput `pulumi:"pg"`
	// Enable pgbouncer.
	Pgbouncer pulumi.StringPtrInput `pulumi:"pgbouncer"`
	// Allow clients to connect to prometheus from the public internet for
	// service nodes that are in a project VPC or another type of private network
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (PgPgUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PgPgUserConfigPrivateAccess)(nil)).Elem()
}

func (i PgPgUserConfigPrivateAccessArgs) ToPgPgUserConfigPrivateAccessOutput() PgPgUserConfigPrivateAccessOutput {
	return i.ToPgPgUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i PgPgUserConfigPrivateAccessArgs) ToPgPgUserConfigPrivateAccessOutputWithContext(ctx context.Context) PgPgUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigPrivateAccessOutput)
}

func (i PgPgUserConfigPrivateAccessArgs) ToPgPgUserConfigPrivateAccessPtrOutput() PgPgUserConfigPrivateAccessPtrOutput {
	return i.ToPgPgUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i PgPgUserConfigPrivateAccessArgs) ToPgPgUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) PgPgUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigPrivateAccessOutput).ToPgPgUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// PgPgUserConfigPrivateAccessPtrInput is an input type that accepts PgPgUserConfigPrivateAccessArgs, PgPgUserConfigPrivateAccessPtr and PgPgUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `PgPgUserConfigPrivateAccessPtrInput` via:
//
//          PgPgUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type PgPgUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToPgPgUserConfigPrivateAccessPtrOutput() PgPgUserConfigPrivateAccessPtrOutput
	ToPgPgUserConfigPrivateAccessPtrOutputWithContext(context.Context) PgPgUserConfigPrivateAccessPtrOutput
}

type pgPgUserConfigPrivateAccessPtrType PgPgUserConfigPrivateAccessArgs

func PgPgUserConfigPrivateAccessPtr(v *PgPgUserConfigPrivateAccessArgs) PgPgUserConfigPrivateAccessPtrInput {
	return (*pgPgUserConfigPrivateAccessPtrType)(v)
}

func (*pgPgUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PgPgUserConfigPrivateAccess)(nil)).Elem()
}

func (i *pgPgUserConfigPrivateAccessPtrType) ToPgPgUserConfigPrivateAccessPtrOutput() PgPgUserConfigPrivateAccessPtrOutput {
	return i.ToPgPgUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *pgPgUserConfigPrivateAccessPtrType) ToPgPgUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) PgPgUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigPrivateAccessPtrOutput)
}

type PgPgUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (PgPgUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PgPgUserConfigPrivateAccess)(nil)).Elem()
}

func (o PgPgUserConfigPrivateAccessOutput) ToPgPgUserConfigPrivateAccessOutput() PgPgUserConfigPrivateAccessOutput {
	return o
}

func (o PgPgUserConfigPrivateAccessOutput) ToPgPgUserConfigPrivateAccessOutputWithContext(ctx context.Context) PgPgUserConfigPrivateAccessOutput {
	return o
}

func (o PgPgUserConfigPrivateAccessOutput) ToPgPgUserConfigPrivateAccessPtrOutput() PgPgUserConfigPrivateAccessPtrOutput {
	return o.ToPgPgUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o PgPgUserConfigPrivateAccessOutput) ToPgPgUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) PgPgUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPrivateAccess) *PgPgUserConfigPrivateAccess {
		return &v
	}).(PgPgUserConfigPrivateAccessPtrOutput)
}

// Enable pg.
func (o PgPgUserConfigPrivateAccessOutput) Pg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPrivateAccess) *string { return v.Pg }).(pulumi.StringPtrOutput)
}

// Enable pgbouncer.
func (o PgPgUserConfigPrivateAccessOutput) Pgbouncer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPrivateAccess) *string { return v.Pgbouncer }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public internet for
// service nodes that are in a project VPC or another type of private network
func (o PgPgUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type PgPgUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (PgPgUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PgPgUserConfigPrivateAccess)(nil)).Elem()
}

func (o PgPgUserConfigPrivateAccessPtrOutput) ToPgPgUserConfigPrivateAccessPtrOutput() PgPgUserConfigPrivateAccessPtrOutput {
	return o
}

func (o PgPgUserConfigPrivateAccessPtrOutput) ToPgPgUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) PgPgUserConfigPrivateAccessPtrOutput {
	return o
}

func (o PgPgUserConfigPrivateAccessPtrOutput) Elem() PgPgUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *PgPgUserConfigPrivateAccess) PgPgUserConfigPrivateAccess { return *v }).(PgPgUserConfigPrivateAccessOutput)
}

// Enable pg.
func (o PgPgUserConfigPrivateAccessPtrOutput) Pg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Pg
	}).(pulumi.StringPtrOutput)
}

// Enable pgbouncer.
func (o PgPgUserConfigPrivateAccessPtrOutput) Pgbouncer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Pgbouncer
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public internet for
// service nodes that are in a project VPC or another type of private network
func (o PgPgUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type PgPgUserConfigPrivatelinkAccess struct {
	// Enable pg.
	Pg *string `pulumi:"pg"`
	// Enable pgbouncer.
	Pgbouncer *string `pulumi:"pgbouncer"`
}

// PgPgUserConfigPrivatelinkAccessInput is an input type that accepts PgPgUserConfigPrivatelinkAccessArgs and PgPgUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `PgPgUserConfigPrivatelinkAccessInput` via:
//
//          PgPgUserConfigPrivatelinkAccessArgs{...}
type PgPgUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToPgPgUserConfigPrivatelinkAccessOutput() PgPgUserConfigPrivatelinkAccessOutput
	ToPgPgUserConfigPrivatelinkAccessOutputWithContext(context.Context) PgPgUserConfigPrivatelinkAccessOutput
}

type PgPgUserConfigPrivatelinkAccessArgs struct {
	// Enable pg.
	Pg pulumi.StringPtrInput `pulumi:"pg"`
	// Enable pgbouncer.
	Pgbouncer pulumi.StringPtrInput `pulumi:"pgbouncer"`
}

func (PgPgUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PgPgUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i PgPgUserConfigPrivatelinkAccessArgs) ToPgPgUserConfigPrivatelinkAccessOutput() PgPgUserConfigPrivatelinkAccessOutput {
	return i.ToPgPgUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i PgPgUserConfigPrivatelinkAccessArgs) ToPgPgUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) PgPgUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigPrivatelinkAccessOutput)
}

func (i PgPgUserConfigPrivatelinkAccessArgs) ToPgPgUserConfigPrivatelinkAccessPtrOutput() PgPgUserConfigPrivatelinkAccessPtrOutput {
	return i.ToPgPgUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i PgPgUserConfigPrivatelinkAccessArgs) ToPgPgUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) PgPgUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigPrivatelinkAccessOutput).ToPgPgUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// PgPgUserConfigPrivatelinkAccessPtrInput is an input type that accepts PgPgUserConfigPrivatelinkAccessArgs, PgPgUserConfigPrivatelinkAccessPtr and PgPgUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `PgPgUserConfigPrivatelinkAccessPtrInput` via:
//
//          PgPgUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type PgPgUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToPgPgUserConfigPrivatelinkAccessPtrOutput() PgPgUserConfigPrivatelinkAccessPtrOutput
	ToPgPgUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) PgPgUserConfigPrivatelinkAccessPtrOutput
}

type pgPgUserConfigPrivatelinkAccessPtrType PgPgUserConfigPrivatelinkAccessArgs

func PgPgUserConfigPrivatelinkAccessPtr(v *PgPgUserConfigPrivatelinkAccessArgs) PgPgUserConfigPrivatelinkAccessPtrInput {
	return (*pgPgUserConfigPrivatelinkAccessPtrType)(v)
}

func (*pgPgUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PgPgUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *pgPgUserConfigPrivatelinkAccessPtrType) ToPgPgUserConfigPrivatelinkAccessPtrOutput() PgPgUserConfigPrivatelinkAccessPtrOutput {
	return i.ToPgPgUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *pgPgUserConfigPrivatelinkAccessPtrType) ToPgPgUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) PgPgUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigPrivatelinkAccessPtrOutput)
}

type PgPgUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (PgPgUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PgPgUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o PgPgUserConfigPrivatelinkAccessOutput) ToPgPgUserConfigPrivatelinkAccessOutput() PgPgUserConfigPrivatelinkAccessOutput {
	return o
}

func (o PgPgUserConfigPrivatelinkAccessOutput) ToPgPgUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) PgPgUserConfigPrivatelinkAccessOutput {
	return o
}

func (o PgPgUserConfigPrivatelinkAccessOutput) ToPgPgUserConfigPrivatelinkAccessPtrOutput() PgPgUserConfigPrivatelinkAccessPtrOutput {
	return o.ToPgPgUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o PgPgUserConfigPrivatelinkAccessOutput) ToPgPgUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) PgPgUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPrivatelinkAccess) *PgPgUserConfigPrivatelinkAccess {
		return &v
	}).(PgPgUserConfigPrivatelinkAccessPtrOutput)
}

// Enable pg.
func (o PgPgUserConfigPrivatelinkAccessOutput) Pg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPrivatelinkAccess) *string { return v.Pg }).(pulumi.StringPtrOutput)
}

// Enable pgbouncer.
func (o PgPgUserConfigPrivatelinkAccessOutput) Pgbouncer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPrivatelinkAccess) *string { return v.Pgbouncer }).(pulumi.StringPtrOutput)
}

type PgPgUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (PgPgUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PgPgUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o PgPgUserConfigPrivatelinkAccessPtrOutput) ToPgPgUserConfigPrivatelinkAccessPtrOutput() PgPgUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o PgPgUserConfigPrivatelinkAccessPtrOutput) ToPgPgUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) PgPgUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o PgPgUserConfigPrivatelinkAccessPtrOutput) Elem() PgPgUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *PgPgUserConfigPrivatelinkAccess) PgPgUserConfigPrivatelinkAccess { return *v }).(PgPgUserConfigPrivatelinkAccessOutput)
}

// Enable pg.
func (o PgPgUserConfigPrivatelinkAccessPtrOutput) Pg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Pg
	}).(pulumi.StringPtrOutput)
}

// Enable pgbouncer.
func (o PgPgUserConfigPrivatelinkAccessPtrOutput) Pgbouncer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Pgbouncer
	}).(pulumi.StringPtrOutput)
}

type PgPgUserConfigPublicAccess struct {
	// Enable pg.
	Pg *string `pulumi:"pg"`
	// Enable pgbouncer.
	Pgbouncer *string `pulumi:"pgbouncer"`
	// Allow clients to connect to prometheus from the public internet for
	// service nodes that are in a project VPC or another type of private network
	Prometheus *string `pulumi:"prometheus"`
}

// PgPgUserConfigPublicAccessInput is an input type that accepts PgPgUserConfigPublicAccessArgs and PgPgUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `PgPgUserConfigPublicAccessInput` via:
//
//          PgPgUserConfigPublicAccessArgs{...}
type PgPgUserConfigPublicAccessInput interface {
	pulumi.Input

	ToPgPgUserConfigPublicAccessOutput() PgPgUserConfigPublicAccessOutput
	ToPgPgUserConfigPublicAccessOutputWithContext(context.Context) PgPgUserConfigPublicAccessOutput
}

type PgPgUserConfigPublicAccessArgs struct {
	// Enable pg.
	Pg pulumi.StringPtrInput `pulumi:"pg"`
	// Enable pgbouncer.
	Pgbouncer pulumi.StringPtrInput `pulumi:"pgbouncer"`
	// Allow clients to connect to prometheus from the public internet for
	// service nodes that are in a project VPC or another type of private network
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (PgPgUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PgPgUserConfigPublicAccess)(nil)).Elem()
}

func (i PgPgUserConfigPublicAccessArgs) ToPgPgUserConfigPublicAccessOutput() PgPgUserConfigPublicAccessOutput {
	return i.ToPgPgUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i PgPgUserConfigPublicAccessArgs) ToPgPgUserConfigPublicAccessOutputWithContext(ctx context.Context) PgPgUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigPublicAccessOutput)
}

func (i PgPgUserConfigPublicAccessArgs) ToPgPgUserConfigPublicAccessPtrOutput() PgPgUserConfigPublicAccessPtrOutput {
	return i.ToPgPgUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i PgPgUserConfigPublicAccessArgs) ToPgPgUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) PgPgUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigPublicAccessOutput).ToPgPgUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// PgPgUserConfigPublicAccessPtrInput is an input type that accepts PgPgUserConfigPublicAccessArgs, PgPgUserConfigPublicAccessPtr and PgPgUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `PgPgUserConfigPublicAccessPtrInput` via:
//
//          PgPgUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type PgPgUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToPgPgUserConfigPublicAccessPtrOutput() PgPgUserConfigPublicAccessPtrOutput
	ToPgPgUserConfigPublicAccessPtrOutputWithContext(context.Context) PgPgUserConfigPublicAccessPtrOutput
}

type pgPgUserConfigPublicAccessPtrType PgPgUserConfigPublicAccessArgs

func PgPgUserConfigPublicAccessPtr(v *PgPgUserConfigPublicAccessArgs) PgPgUserConfigPublicAccessPtrInput {
	return (*pgPgUserConfigPublicAccessPtrType)(v)
}

func (*pgPgUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PgPgUserConfigPublicAccess)(nil)).Elem()
}

func (i *pgPgUserConfigPublicAccessPtrType) ToPgPgUserConfigPublicAccessPtrOutput() PgPgUserConfigPublicAccessPtrOutput {
	return i.ToPgPgUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *pgPgUserConfigPublicAccessPtrType) ToPgPgUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) PgPgUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigPublicAccessPtrOutput)
}

type PgPgUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (PgPgUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PgPgUserConfigPublicAccess)(nil)).Elem()
}

func (o PgPgUserConfigPublicAccessOutput) ToPgPgUserConfigPublicAccessOutput() PgPgUserConfigPublicAccessOutput {
	return o
}

func (o PgPgUserConfigPublicAccessOutput) ToPgPgUserConfigPublicAccessOutputWithContext(ctx context.Context) PgPgUserConfigPublicAccessOutput {
	return o
}

func (o PgPgUserConfigPublicAccessOutput) ToPgPgUserConfigPublicAccessPtrOutput() PgPgUserConfigPublicAccessPtrOutput {
	return o.ToPgPgUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o PgPgUserConfigPublicAccessOutput) ToPgPgUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) PgPgUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPublicAccess) *PgPgUserConfigPublicAccess {
		return &v
	}).(PgPgUserConfigPublicAccessPtrOutput)
}

// Enable pg.
func (o PgPgUserConfigPublicAccessOutput) Pg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPublicAccess) *string { return v.Pg }).(pulumi.StringPtrOutput)
}

// Enable pgbouncer.
func (o PgPgUserConfigPublicAccessOutput) Pgbouncer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPublicAccess) *string { return v.Pgbouncer }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public internet for
// service nodes that are in a project VPC or another type of private network
func (o PgPgUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type PgPgUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (PgPgUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PgPgUserConfigPublicAccess)(nil)).Elem()
}

func (o PgPgUserConfigPublicAccessPtrOutput) ToPgPgUserConfigPublicAccessPtrOutput() PgPgUserConfigPublicAccessPtrOutput {
	return o
}

func (o PgPgUserConfigPublicAccessPtrOutput) ToPgPgUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) PgPgUserConfigPublicAccessPtrOutput {
	return o
}

func (o PgPgUserConfigPublicAccessPtrOutput) Elem() PgPgUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *PgPgUserConfigPublicAccess) PgPgUserConfigPublicAccess { return *v }).(PgPgUserConfigPublicAccessOutput)
}

// Enable pg.
func (o PgPgUserConfigPublicAccessPtrOutput) Pg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Pg
	}).(pulumi.StringPtrOutput)
}

// Enable pgbouncer.
func (o PgPgUserConfigPublicAccessPtrOutput) Pgbouncer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Pgbouncer
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public internet for
// service nodes that are in a project VPC or another type of private network
func (o PgPgUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type PgPgUserConfigTimescaledb struct {
	// The number of background workers for timescaledb
	// operations. You should configure this setting to the sum of your number of databases and the
	// total number of concurrent background workers you want running at any given point in time.
	MaxBackgroundWorkers *string `pulumi:"maxBackgroundWorkers"`
}

// PgPgUserConfigTimescaledbInput is an input type that accepts PgPgUserConfigTimescaledbArgs and PgPgUserConfigTimescaledbOutput values.
// You can construct a concrete instance of `PgPgUserConfigTimescaledbInput` via:
//
//          PgPgUserConfigTimescaledbArgs{...}
type PgPgUserConfigTimescaledbInput interface {
	pulumi.Input

	ToPgPgUserConfigTimescaledbOutput() PgPgUserConfigTimescaledbOutput
	ToPgPgUserConfigTimescaledbOutputWithContext(context.Context) PgPgUserConfigTimescaledbOutput
}

type PgPgUserConfigTimescaledbArgs struct {
	// The number of background workers for timescaledb
	// operations. You should configure this setting to the sum of your number of databases and the
	// total number of concurrent background workers you want running at any given point in time.
	MaxBackgroundWorkers pulumi.StringPtrInput `pulumi:"maxBackgroundWorkers"`
}

func (PgPgUserConfigTimescaledbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PgPgUserConfigTimescaledb)(nil)).Elem()
}

func (i PgPgUserConfigTimescaledbArgs) ToPgPgUserConfigTimescaledbOutput() PgPgUserConfigTimescaledbOutput {
	return i.ToPgPgUserConfigTimescaledbOutputWithContext(context.Background())
}

func (i PgPgUserConfigTimescaledbArgs) ToPgPgUserConfigTimescaledbOutputWithContext(ctx context.Context) PgPgUserConfigTimescaledbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigTimescaledbOutput)
}

func (i PgPgUserConfigTimescaledbArgs) ToPgPgUserConfigTimescaledbPtrOutput() PgPgUserConfigTimescaledbPtrOutput {
	return i.ToPgPgUserConfigTimescaledbPtrOutputWithContext(context.Background())
}

func (i PgPgUserConfigTimescaledbArgs) ToPgPgUserConfigTimescaledbPtrOutputWithContext(ctx context.Context) PgPgUserConfigTimescaledbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigTimescaledbOutput).ToPgPgUserConfigTimescaledbPtrOutputWithContext(ctx)
}

// PgPgUserConfigTimescaledbPtrInput is an input type that accepts PgPgUserConfigTimescaledbArgs, PgPgUserConfigTimescaledbPtr and PgPgUserConfigTimescaledbPtrOutput values.
// You can construct a concrete instance of `PgPgUserConfigTimescaledbPtrInput` via:
//
//          PgPgUserConfigTimescaledbArgs{...}
//
//  or:
//
//          nil
type PgPgUserConfigTimescaledbPtrInput interface {
	pulumi.Input

	ToPgPgUserConfigTimescaledbPtrOutput() PgPgUserConfigTimescaledbPtrOutput
	ToPgPgUserConfigTimescaledbPtrOutputWithContext(context.Context) PgPgUserConfigTimescaledbPtrOutput
}

type pgPgUserConfigTimescaledbPtrType PgPgUserConfigTimescaledbArgs

func PgPgUserConfigTimescaledbPtr(v *PgPgUserConfigTimescaledbArgs) PgPgUserConfigTimescaledbPtrInput {
	return (*pgPgUserConfigTimescaledbPtrType)(v)
}

func (*pgPgUserConfigTimescaledbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PgPgUserConfigTimescaledb)(nil)).Elem()
}

func (i *pgPgUserConfigTimescaledbPtrType) ToPgPgUserConfigTimescaledbPtrOutput() PgPgUserConfigTimescaledbPtrOutput {
	return i.ToPgPgUserConfigTimescaledbPtrOutputWithContext(context.Background())
}

func (i *pgPgUserConfigTimescaledbPtrType) ToPgPgUserConfigTimescaledbPtrOutputWithContext(ctx context.Context) PgPgUserConfigTimescaledbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPgUserConfigTimescaledbPtrOutput)
}

type PgPgUserConfigTimescaledbOutput struct{ *pulumi.OutputState }

func (PgPgUserConfigTimescaledbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PgPgUserConfigTimescaledb)(nil)).Elem()
}

func (o PgPgUserConfigTimescaledbOutput) ToPgPgUserConfigTimescaledbOutput() PgPgUserConfigTimescaledbOutput {
	return o
}

func (o PgPgUserConfigTimescaledbOutput) ToPgPgUserConfigTimescaledbOutputWithContext(ctx context.Context) PgPgUserConfigTimescaledbOutput {
	return o
}

func (o PgPgUserConfigTimescaledbOutput) ToPgPgUserConfigTimescaledbPtrOutput() PgPgUserConfigTimescaledbPtrOutput {
	return o.ToPgPgUserConfigTimescaledbPtrOutputWithContext(context.Background())
}

func (o PgPgUserConfigTimescaledbOutput) ToPgPgUserConfigTimescaledbPtrOutputWithContext(ctx context.Context) PgPgUserConfigTimescaledbPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigTimescaledb) *PgPgUserConfigTimescaledb {
		return &v
	}).(PgPgUserConfigTimescaledbPtrOutput)
}

// The number of background workers for timescaledb
// operations. You should configure this setting to the sum of your number of databases and the
// total number of concurrent background workers you want running at any given point in time.
func (o PgPgUserConfigTimescaledbOutput) MaxBackgroundWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgPgUserConfigTimescaledb) *string { return v.MaxBackgroundWorkers }).(pulumi.StringPtrOutput)
}

type PgPgUserConfigTimescaledbPtrOutput struct{ *pulumi.OutputState }

func (PgPgUserConfigTimescaledbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PgPgUserConfigTimescaledb)(nil)).Elem()
}

func (o PgPgUserConfigTimescaledbPtrOutput) ToPgPgUserConfigTimescaledbPtrOutput() PgPgUserConfigTimescaledbPtrOutput {
	return o
}

func (o PgPgUserConfigTimescaledbPtrOutput) ToPgPgUserConfigTimescaledbPtrOutputWithContext(ctx context.Context) PgPgUserConfigTimescaledbPtrOutput {
	return o
}

func (o PgPgUserConfigTimescaledbPtrOutput) Elem() PgPgUserConfigTimescaledbOutput {
	return o.ApplyT(func(v *PgPgUserConfigTimescaledb) PgPgUserConfigTimescaledb { return *v }).(PgPgUserConfigTimescaledbOutput)
}

// The number of background workers for timescaledb
// operations. You should configure this setting to the sum of your number of databases and the
// total number of concurrent background workers you want running at any given point in time.
func (o PgPgUserConfigTimescaledbPtrOutput) MaxBackgroundWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgPgUserConfigTimescaledb) *string {
		if v == nil {
			return nil
		}
		return v.MaxBackgroundWorkers
	}).(pulumi.StringPtrOutput)
}

type PgServiceIntegration struct {
	IntegrationType   string `pulumi:"integrationType"`
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// PgServiceIntegrationInput is an input type that accepts PgServiceIntegrationArgs and PgServiceIntegrationOutput values.
// You can construct a concrete instance of `PgServiceIntegrationInput` via:
//
//          PgServiceIntegrationArgs{...}
type PgServiceIntegrationInput interface {
	pulumi.Input

	ToPgServiceIntegrationOutput() PgServiceIntegrationOutput
	ToPgServiceIntegrationOutputWithContext(context.Context) PgServiceIntegrationOutput
}

type PgServiceIntegrationArgs struct {
	IntegrationType   pulumi.StringInput `pulumi:"integrationType"`
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (PgServiceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PgServiceIntegration)(nil)).Elem()
}

func (i PgServiceIntegrationArgs) ToPgServiceIntegrationOutput() PgServiceIntegrationOutput {
	return i.ToPgServiceIntegrationOutputWithContext(context.Background())
}

func (i PgServiceIntegrationArgs) ToPgServiceIntegrationOutputWithContext(ctx context.Context) PgServiceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgServiceIntegrationOutput)
}

// PgServiceIntegrationArrayInput is an input type that accepts PgServiceIntegrationArray and PgServiceIntegrationArrayOutput values.
// You can construct a concrete instance of `PgServiceIntegrationArrayInput` via:
//
//          PgServiceIntegrationArray{ PgServiceIntegrationArgs{...} }
type PgServiceIntegrationArrayInput interface {
	pulumi.Input

	ToPgServiceIntegrationArrayOutput() PgServiceIntegrationArrayOutput
	ToPgServiceIntegrationArrayOutputWithContext(context.Context) PgServiceIntegrationArrayOutput
}

type PgServiceIntegrationArray []PgServiceIntegrationInput

func (PgServiceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PgServiceIntegration)(nil)).Elem()
}

func (i PgServiceIntegrationArray) ToPgServiceIntegrationArrayOutput() PgServiceIntegrationArrayOutput {
	return i.ToPgServiceIntegrationArrayOutputWithContext(context.Background())
}

func (i PgServiceIntegrationArray) ToPgServiceIntegrationArrayOutputWithContext(ctx context.Context) PgServiceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgServiceIntegrationArrayOutput)
}

type PgServiceIntegrationOutput struct{ *pulumi.OutputState }

func (PgServiceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PgServiceIntegration)(nil)).Elem()
}

func (o PgServiceIntegrationOutput) ToPgServiceIntegrationOutput() PgServiceIntegrationOutput {
	return o
}

func (o PgServiceIntegrationOutput) ToPgServiceIntegrationOutputWithContext(ctx context.Context) PgServiceIntegrationOutput {
	return o
}

func (o PgServiceIntegrationOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v PgServiceIntegration) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o PgServiceIntegrationOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v PgServiceIntegration) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

type PgServiceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (PgServiceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PgServiceIntegration)(nil)).Elem()
}

func (o PgServiceIntegrationArrayOutput) ToPgServiceIntegrationArrayOutput() PgServiceIntegrationArrayOutput {
	return o
}

func (o PgServiceIntegrationArrayOutput) ToPgServiceIntegrationArrayOutputWithContext(ctx context.Context) PgServiceIntegrationArrayOutput {
	return o
}

func (o PgServiceIntegrationArrayOutput) Index(i pulumi.IntInput) PgServiceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PgServiceIntegration {
		return vs[0].([]PgServiceIntegration)[vs[1].(int)]
	}).(PgServiceIntegrationOutput)
}

type RedisComponent struct {
	Component *string `pulumi:"component"`
	// Hostname or IP address of the server where to migrate data from
	Host                      *string `pulumi:"host"`
	KafkaAuthenticationMethod *string `pulumi:"kafkaAuthenticationMethod"`
	// Port number of the server where to migrate data from
	Port  *int    `pulumi:"port"`
	Route *string `pulumi:"route"`
	// The server where to migrate data from is secured with SSL
	Ssl   *bool   `pulumi:"ssl"`
	Usage *string `pulumi:"usage"`
}

// RedisComponentInput is an input type that accepts RedisComponentArgs and RedisComponentOutput values.
// You can construct a concrete instance of `RedisComponentInput` via:
//
//          RedisComponentArgs{...}
type RedisComponentInput interface {
	pulumi.Input

	ToRedisComponentOutput() RedisComponentOutput
	ToRedisComponentOutputWithContext(context.Context) RedisComponentOutput
}

type RedisComponentArgs struct {
	Component pulumi.StringPtrInput `pulumi:"component"`
	// Hostname or IP address of the server where to migrate data from
	Host                      pulumi.StringPtrInput `pulumi:"host"`
	KafkaAuthenticationMethod pulumi.StringPtrInput `pulumi:"kafkaAuthenticationMethod"`
	// Port number of the server where to migrate data from
	Port  pulumi.IntPtrInput    `pulumi:"port"`
	Route pulumi.StringPtrInput `pulumi:"route"`
	// The server where to migrate data from is secured with SSL
	Ssl   pulumi.BoolPtrInput   `pulumi:"ssl"`
	Usage pulumi.StringPtrInput `pulumi:"usage"`
}

func (RedisComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisComponent)(nil)).Elem()
}

func (i RedisComponentArgs) ToRedisComponentOutput() RedisComponentOutput {
	return i.ToRedisComponentOutputWithContext(context.Background())
}

func (i RedisComponentArgs) ToRedisComponentOutputWithContext(ctx context.Context) RedisComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisComponentOutput)
}

// RedisComponentArrayInput is an input type that accepts RedisComponentArray and RedisComponentArrayOutput values.
// You can construct a concrete instance of `RedisComponentArrayInput` via:
//
//          RedisComponentArray{ RedisComponentArgs{...} }
type RedisComponentArrayInput interface {
	pulumi.Input

	ToRedisComponentArrayOutput() RedisComponentArrayOutput
	ToRedisComponentArrayOutputWithContext(context.Context) RedisComponentArrayOutput
}

type RedisComponentArray []RedisComponentInput

func (RedisComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RedisComponent)(nil)).Elem()
}

func (i RedisComponentArray) ToRedisComponentArrayOutput() RedisComponentArrayOutput {
	return i.ToRedisComponentArrayOutputWithContext(context.Background())
}

func (i RedisComponentArray) ToRedisComponentArrayOutputWithContext(ctx context.Context) RedisComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisComponentArrayOutput)
}

type RedisComponentOutput struct{ *pulumi.OutputState }

func (RedisComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisComponent)(nil)).Elem()
}

func (o RedisComponentOutput) ToRedisComponentOutput() RedisComponentOutput {
	return o
}

func (o RedisComponentOutput) ToRedisComponentOutputWithContext(ctx context.Context) RedisComponentOutput {
	return o
}

func (o RedisComponentOutput) Component() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisComponent) *string { return v.Component }).(pulumi.StringPtrOutput)
}

// Hostname or IP address of the server where to migrate data from
func (o RedisComponentOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisComponent) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o RedisComponentOutput) KafkaAuthenticationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisComponent) *string { return v.KafkaAuthenticationMethod }).(pulumi.StringPtrOutput)
}

// Port number of the server where to migrate data from
func (o RedisComponentOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RedisComponent) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o RedisComponentOutput) Route() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisComponent) *string { return v.Route }).(pulumi.StringPtrOutput)
}

// The server where to migrate data from is secured with SSL
func (o RedisComponentOutput) Ssl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RedisComponent) *bool { return v.Ssl }).(pulumi.BoolPtrOutput)
}

func (o RedisComponentOutput) Usage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisComponent) *string { return v.Usage }).(pulumi.StringPtrOutput)
}

type RedisComponentArrayOutput struct{ *pulumi.OutputState }

func (RedisComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RedisComponent)(nil)).Elem()
}

func (o RedisComponentArrayOutput) ToRedisComponentArrayOutput() RedisComponentArrayOutput {
	return o
}

func (o RedisComponentArrayOutput) ToRedisComponentArrayOutputWithContext(ctx context.Context) RedisComponentArrayOutput {
	return o
}

func (o RedisComponentArrayOutput) Index(i pulumi.IntInput) RedisComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RedisComponent {
		return vs[0].([]RedisComponent)[vs[1].(int)]
	}).(RedisComponentOutput)
}

type RedisRedis struct {
}

// RedisRedisInput is an input type that accepts RedisRedisArgs and RedisRedisOutput values.
// You can construct a concrete instance of `RedisRedisInput` via:
//
//          RedisRedisArgs{...}
type RedisRedisInput interface {
	pulumi.Input

	ToRedisRedisOutput() RedisRedisOutput
	ToRedisRedisOutputWithContext(context.Context) RedisRedisOutput
}

type RedisRedisArgs struct {
}

func (RedisRedisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisRedis)(nil)).Elem()
}

func (i RedisRedisArgs) ToRedisRedisOutput() RedisRedisOutput {
	return i.ToRedisRedisOutputWithContext(context.Background())
}

func (i RedisRedisArgs) ToRedisRedisOutputWithContext(ctx context.Context) RedisRedisOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisRedisOutput)
}

func (i RedisRedisArgs) ToRedisRedisPtrOutput() RedisRedisPtrOutput {
	return i.ToRedisRedisPtrOutputWithContext(context.Background())
}

func (i RedisRedisArgs) ToRedisRedisPtrOutputWithContext(ctx context.Context) RedisRedisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisRedisOutput).ToRedisRedisPtrOutputWithContext(ctx)
}

// RedisRedisPtrInput is an input type that accepts RedisRedisArgs, RedisRedisPtr and RedisRedisPtrOutput values.
// You can construct a concrete instance of `RedisRedisPtrInput` via:
//
//          RedisRedisArgs{...}
//
//  or:
//
//          nil
type RedisRedisPtrInput interface {
	pulumi.Input

	ToRedisRedisPtrOutput() RedisRedisPtrOutput
	ToRedisRedisPtrOutputWithContext(context.Context) RedisRedisPtrOutput
}

type redisRedisPtrType RedisRedisArgs

func RedisRedisPtr(v *RedisRedisArgs) RedisRedisPtrInput {
	return (*redisRedisPtrType)(v)
}

func (*redisRedisPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisRedis)(nil)).Elem()
}

func (i *redisRedisPtrType) ToRedisRedisPtrOutput() RedisRedisPtrOutput {
	return i.ToRedisRedisPtrOutputWithContext(context.Background())
}

func (i *redisRedisPtrType) ToRedisRedisPtrOutputWithContext(ctx context.Context) RedisRedisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisRedisPtrOutput)
}

type RedisRedisOutput struct{ *pulumi.OutputState }

func (RedisRedisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisRedis)(nil)).Elem()
}

func (o RedisRedisOutput) ToRedisRedisOutput() RedisRedisOutput {
	return o
}

func (o RedisRedisOutput) ToRedisRedisOutputWithContext(ctx context.Context) RedisRedisOutput {
	return o
}

func (o RedisRedisOutput) ToRedisRedisPtrOutput() RedisRedisPtrOutput {
	return o.ToRedisRedisPtrOutputWithContext(context.Background())
}

func (o RedisRedisOutput) ToRedisRedisPtrOutputWithContext(ctx context.Context) RedisRedisPtrOutput {
	return o.ApplyT(func(v RedisRedis) *RedisRedis {
		return &v
	}).(RedisRedisPtrOutput)
}

type RedisRedisPtrOutput struct{ *pulumi.OutputState }

func (RedisRedisPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisRedis)(nil)).Elem()
}

func (o RedisRedisPtrOutput) ToRedisRedisPtrOutput() RedisRedisPtrOutput {
	return o
}

func (o RedisRedisPtrOutput) ToRedisRedisPtrOutputWithContext(ctx context.Context) RedisRedisPtrOutput {
	return o
}

func (o RedisRedisPtrOutput) Elem() RedisRedisOutput {
	return o.ApplyT(func(v *RedisRedis) RedisRedis { return *v }).(RedisRedisOutput)
}

type RedisRedisUserConfig struct {
	// Allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters []string `pulumi:"ipFilters"`
	// Migrate data from existing server
	Migration *RedisRedisUserConfigMigration `pulumi:"migration"`
	// Allow access to selected service ports from private networks
	PrivateAccess *RedisRedisUserConfigPrivateAccess `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess *RedisRedisUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom *string `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet
	PublicAccess *RedisRedisUserConfigPublicAccess `pulumi:"publicAccess"`
	// Name of the basebackup to restore in forked service
	RecoveryBasebackupName *string `pulumi:"recoveryBasebackupName"`
	// Redis IO thread count
	// * `redisLfuDecayTime"` - (Optional) LFU maxmemory-policy counter decay time in minutes
	RedisIoThreads    *string `pulumi:"redisIoThreads"`
	RedisLfuDecayTime *string `pulumi:"redisLfuDecayTime"`
	// Counter logarithm factor for volatile-lfu and allkeys-lfu
	// maxmemory-policies
	RedisLfuLogFactor *string `pulumi:"redisLfuLogFactor"`
	// Redis maxmemory-policy
	RedisMaxmemoryPolicy *string `pulumi:"redisMaxmemoryPolicy"`
	// Set notify-keyspace-events option
	RedisNotifyKeyspaceEvents *string `pulumi:"redisNotifyKeyspaceEvents"`
	// Require SSL to access Redis
	RedisSsl *string `pulumi:"redisSsl"`
	// Redis idle connection timeout
	// * `serviceToForkFrom"` - (Optional) Name of another service to fork from. This has effect only
	//   when a new service is being created.
	RedisTimeout      *string `pulumi:"redisTimeout"`
	ServiceToForkFrom *string `pulumi:"serviceToForkFrom"`
}

// RedisRedisUserConfigInput is an input type that accepts RedisRedisUserConfigArgs and RedisRedisUserConfigOutput values.
// You can construct a concrete instance of `RedisRedisUserConfigInput` via:
//
//          RedisRedisUserConfigArgs{...}
type RedisRedisUserConfigInput interface {
	pulumi.Input

	ToRedisRedisUserConfigOutput() RedisRedisUserConfigOutput
	ToRedisRedisUserConfigOutputWithContext(context.Context) RedisRedisUserConfigOutput
}

type RedisRedisUserConfigArgs struct {
	// Allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// Migrate data from existing server
	Migration RedisRedisUserConfigMigrationPtrInput `pulumi:"migration"`
	// Allow access to selected service ports from private networks
	PrivateAccess RedisRedisUserConfigPrivateAccessPtrInput `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess RedisRedisUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom pulumi.StringPtrInput `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet
	PublicAccess RedisRedisUserConfigPublicAccessPtrInput `pulumi:"publicAccess"`
	// Name of the basebackup to restore in forked service
	RecoveryBasebackupName pulumi.StringPtrInput `pulumi:"recoveryBasebackupName"`
	// Redis IO thread count
	// * `redisLfuDecayTime"` - (Optional) LFU maxmemory-policy counter decay time in minutes
	RedisIoThreads    pulumi.StringPtrInput `pulumi:"redisIoThreads"`
	RedisLfuDecayTime pulumi.StringPtrInput `pulumi:"redisLfuDecayTime"`
	// Counter logarithm factor for volatile-lfu and allkeys-lfu
	// maxmemory-policies
	RedisLfuLogFactor pulumi.StringPtrInput `pulumi:"redisLfuLogFactor"`
	// Redis maxmemory-policy
	RedisMaxmemoryPolicy pulumi.StringPtrInput `pulumi:"redisMaxmemoryPolicy"`
	// Set notify-keyspace-events option
	RedisNotifyKeyspaceEvents pulumi.StringPtrInput `pulumi:"redisNotifyKeyspaceEvents"`
	// Require SSL to access Redis
	RedisSsl pulumi.StringPtrInput `pulumi:"redisSsl"`
	// Redis idle connection timeout
	// * `serviceToForkFrom"` - (Optional) Name of another service to fork from. This has effect only
	//   when a new service is being created.
	RedisTimeout      pulumi.StringPtrInput `pulumi:"redisTimeout"`
	ServiceToForkFrom pulumi.StringPtrInput `pulumi:"serviceToForkFrom"`
}

func (RedisRedisUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisRedisUserConfig)(nil)).Elem()
}

func (i RedisRedisUserConfigArgs) ToRedisRedisUserConfigOutput() RedisRedisUserConfigOutput {
	return i.ToRedisRedisUserConfigOutputWithContext(context.Background())
}

func (i RedisRedisUserConfigArgs) ToRedisRedisUserConfigOutputWithContext(ctx context.Context) RedisRedisUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisRedisUserConfigOutput)
}

func (i RedisRedisUserConfigArgs) ToRedisRedisUserConfigPtrOutput() RedisRedisUserConfigPtrOutput {
	return i.ToRedisRedisUserConfigPtrOutputWithContext(context.Background())
}

func (i RedisRedisUserConfigArgs) ToRedisRedisUserConfigPtrOutputWithContext(ctx context.Context) RedisRedisUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisRedisUserConfigOutput).ToRedisRedisUserConfigPtrOutputWithContext(ctx)
}

// RedisRedisUserConfigPtrInput is an input type that accepts RedisRedisUserConfigArgs, RedisRedisUserConfigPtr and RedisRedisUserConfigPtrOutput values.
// You can construct a concrete instance of `RedisRedisUserConfigPtrInput` via:
//
//          RedisRedisUserConfigArgs{...}
//
//  or:
//
//          nil
type RedisRedisUserConfigPtrInput interface {
	pulumi.Input

	ToRedisRedisUserConfigPtrOutput() RedisRedisUserConfigPtrOutput
	ToRedisRedisUserConfigPtrOutputWithContext(context.Context) RedisRedisUserConfigPtrOutput
}

type redisRedisUserConfigPtrType RedisRedisUserConfigArgs

func RedisRedisUserConfigPtr(v *RedisRedisUserConfigArgs) RedisRedisUserConfigPtrInput {
	return (*redisRedisUserConfigPtrType)(v)
}

func (*redisRedisUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisRedisUserConfig)(nil)).Elem()
}

func (i *redisRedisUserConfigPtrType) ToRedisRedisUserConfigPtrOutput() RedisRedisUserConfigPtrOutput {
	return i.ToRedisRedisUserConfigPtrOutputWithContext(context.Background())
}

func (i *redisRedisUserConfigPtrType) ToRedisRedisUserConfigPtrOutputWithContext(ctx context.Context) RedisRedisUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisRedisUserConfigPtrOutput)
}

type RedisRedisUserConfigOutput struct{ *pulumi.OutputState }

func (RedisRedisUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisRedisUserConfig)(nil)).Elem()
}

func (o RedisRedisUserConfigOutput) ToRedisRedisUserConfigOutput() RedisRedisUserConfigOutput {
	return o
}

func (o RedisRedisUserConfigOutput) ToRedisRedisUserConfigOutputWithContext(ctx context.Context) RedisRedisUserConfigOutput {
	return o
}

func (o RedisRedisUserConfigOutput) ToRedisRedisUserConfigPtrOutput() RedisRedisUserConfigPtrOutput {
	return o.ToRedisRedisUserConfigPtrOutputWithContext(context.Background())
}

func (o RedisRedisUserConfigOutput) ToRedisRedisUserConfigPtrOutputWithContext(ctx context.Context) RedisRedisUserConfigPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfig) *RedisRedisUserConfig {
		return &v
	}).(RedisRedisUserConfigPtrOutput)
}

// Allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
func (o RedisRedisUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RedisRedisUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// Migrate data from existing server
func (o RedisRedisUserConfigOutput) Migration() RedisRedisUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfig) *RedisRedisUserConfigMigration { return v.Migration }).(RedisRedisUserConfigMigrationPtrOutput)
}

// Allow access to selected service ports from private networks
func (o RedisRedisUserConfigOutput) PrivateAccess() RedisRedisUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfig) *RedisRedisUserConfigPrivateAccess { return v.PrivateAccess }).(RedisRedisUserConfigPrivateAccessPtrOutput)
}

// Allow access to selected service components through Privatelink
func (o RedisRedisUserConfigOutput) PrivatelinkAccess() RedisRedisUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfig) *RedisRedisUserConfigPrivatelinkAccess { return v.PrivatelinkAccess }).(RedisRedisUserConfigPrivatelinkAccessPtrOutput)
}

// Name of another project to fork a service from. This has
// effect only when a new service is being created.
func (o RedisRedisUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from the public Internet
func (o RedisRedisUserConfigOutput) PublicAccess() RedisRedisUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfig) *RedisRedisUserConfigPublicAccess { return v.PublicAccess }).(RedisRedisUserConfigPublicAccessPtrOutput)
}

// Name of the basebackup to restore in forked service
func (o RedisRedisUserConfigOutput) RecoveryBasebackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfig) *string { return v.RecoveryBasebackupName }).(pulumi.StringPtrOutput)
}

// Redis IO thread count
// * `redisLfuDecayTime"` - (Optional) LFU maxmemory-policy counter decay time in minutes
func (o RedisRedisUserConfigOutput) RedisIoThreads() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfig) *string { return v.RedisIoThreads }).(pulumi.StringPtrOutput)
}

func (o RedisRedisUserConfigOutput) RedisLfuDecayTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfig) *string { return v.RedisLfuDecayTime }).(pulumi.StringPtrOutput)
}

// Counter logarithm factor for volatile-lfu and allkeys-lfu
// maxmemory-policies
func (o RedisRedisUserConfigOutput) RedisLfuLogFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfig) *string { return v.RedisLfuLogFactor }).(pulumi.StringPtrOutput)
}

// Redis maxmemory-policy
func (o RedisRedisUserConfigOutput) RedisMaxmemoryPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfig) *string { return v.RedisMaxmemoryPolicy }).(pulumi.StringPtrOutput)
}

// Set notify-keyspace-events option
func (o RedisRedisUserConfigOutput) RedisNotifyKeyspaceEvents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfig) *string { return v.RedisNotifyKeyspaceEvents }).(pulumi.StringPtrOutput)
}

// Require SSL to access Redis
func (o RedisRedisUserConfigOutput) RedisSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfig) *string { return v.RedisSsl }).(pulumi.StringPtrOutput)
}

// Redis idle connection timeout
// * `serviceToForkFrom"` - (Optional) Name of another service to fork from. This has effect only
//   when a new service is being created.
func (o RedisRedisUserConfigOutput) RedisTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfig) *string { return v.RedisTimeout }).(pulumi.StringPtrOutput)
}

func (o RedisRedisUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

type RedisRedisUserConfigPtrOutput struct{ *pulumi.OutputState }

func (RedisRedisUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisRedisUserConfig)(nil)).Elem()
}

func (o RedisRedisUserConfigPtrOutput) ToRedisRedisUserConfigPtrOutput() RedisRedisUserConfigPtrOutput {
	return o
}

func (o RedisRedisUserConfigPtrOutput) ToRedisRedisUserConfigPtrOutputWithContext(ctx context.Context) RedisRedisUserConfigPtrOutput {
	return o
}

func (o RedisRedisUserConfigPtrOutput) Elem() RedisRedisUserConfigOutput {
	return o.ApplyT(func(v *RedisRedisUserConfig) RedisRedisUserConfig { return *v }).(RedisRedisUserConfigOutput)
}

// Allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
func (o RedisRedisUserConfigPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RedisRedisUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

// Migrate data from existing server
func (o RedisRedisUserConfigPtrOutput) Migration() RedisRedisUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v *RedisRedisUserConfig) *RedisRedisUserConfigMigration {
		if v == nil {
			return nil
		}
		return v.Migration
	}).(RedisRedisUserConfigMigrationPtrOutput)
}

// Allow access to selected service ports from private networks
func (o RedisRedisUserConfigPtrOutput) PrivateAccess() RedisRedisUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v *RedisRedisUserConfig) *RedisRedisUserConfigPrivateAccess {
		if v == nil {
			return nil
		}
		return v.PrivateAccess
	}).(RedisRedisUserConfigPrivateAccessPtrOutput)
}

// Allow access to selected service components through Privatelink
func (o RedisRedisUserConfigPtrOutput) PrivatelinkAccess() RedisRedisUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v *RedisRedisUserConfig) *RedisRedisUserConfigPrivatelinkAccess {
		if v == nil {
			return nil
		}
		return v.PrivatelinkAccess
	}).(RedisRedisUserConfigPrivatelinkAccessPtrOutput)
}

// Name of another project to fork a service from. This has
// effect only when a new service is being created.
func (o RedisRedisUserConfigPtrOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisRedisUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProjectToForkFrom
	}).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from the public Internet
func (o RedisRedisUserConfigPtrOutput) PublicAccess() RedisRedisUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v *RedisRedisUserConfig) *RedisRedisUserConfigPublicAccess {
		if v == nil {
			return nil
		}
		return v.PublicAccess
	}).(RedisRedisUserConfigPublicAccessPtrOutput)
}

// Name of the basebackup to restore in forked service
func (o RedisRedisUserConfigPtrOutput) RecoveryBasebackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisRedisUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryBasebackupName
	}).(pulumi.StringPtrOutput)
}

// Redis IO thread count
// * `redisLfuDecayTime"` - (Optional) LFU maxmemory-policy counter decay time in minutes
func (o RedisRedisUserConfigPtrOutput) RedisIoThreads() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisRedisUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RedisIoThreads
	}).(pulumi.StringPtrOutput)
}

func (o RedisRedisUserConfigPtrOutput) RedisLfuDecayTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisRedisUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RedisLfuDecayTime
	}).(pulumi.StringPtrOutput)
}

// Counter logarithm factor for volatile-lfu and allkeys-lfu
// maxmemory-policies
func (o RedisRedisUserConfigPtrOutput) RedisLfuLogFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisRedisUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RedisLfuLogFactor
	}).(pulumi.StringPtrOutput)
}

// Redis maxmemory-policy
func (o RedisRedisUserConfigPtrOutput) RedisMaxmemoryPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisRedisUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RedisMaxmemoryPolicy
	}).(pulumi.StringPtrOutput)
}

// Set notify-keyspace-events option
func (o RedisRedisUserConfigPtrOutput) RedisNotifyKeyspaceEvents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisRedisUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RedisNotifyKeyspaceEvents
	}).(pulumi.StringPtrOutput)
}

// Require SSL to access Redis
func (o RedisRedisUserConfigPtrOutput) RedisSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisRedisUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RedisSsl
	}).(pulumi.StringPtrOutput)
}

// Redis idle connection timeout
// * `serviceToForkFrom"` - (Optional) Name of another service to fork from. This has effect only
//   when a new service is being created.
func (o RedisRedisUserConfigPtrOutput) RedisTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisRedisUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RedisTimeout
	}).(pulumi.StringPtrOutput)
}

func (o RedisRedisUserConfigPtrOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisRedisUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceToForkFrom
	}).(pulumi.StringPtrOutput)
}

type RedisRedisUserConfigMigration struct {
	// Database name for bootstrapping the initial connection
	Dbname *string `pulumi:"dbname"`
	// Hostname or IP address of the server where to migrate data from
	Host *string `pulumi:"host"`
	// Comma-separated list of databases, which should be ignored during
	// migration (supported by MySQL only at the moment)
	IgnoreDbs *string `pulumi:"ignoreDbs"`
	// Password for authentication with the server where to migrate data from
	Password *string `pulumi:"password"`
	// Port number of the server where to migrate data from
	Port *string `pulumi:"port"`
	// The server where to migrate data from is secured with SSL
	Ssl *string `pulumi:"ssl"`
	// User name for authentication with the server where to migrate data from
	Username *string `pulumi:"username"`
}

// RedisRedisUserConfigMigrationInput is an input type that accepts RedisRedisUserConfigMigrationArgs and RedisRedisUserConfigMigrationOutput values.
// You can construct a concrete instance of `RedisRedisUserConfigMigrationInput` via:
//
//          RedisRedisUserConfigMigrationArgs{...}
type RedisRedisUserConfigMigrationInput interface {
	pulumi.Input

	ToRedisRedisUserConfigMigrationOutput() RedisRedisUserConfigMigrationOutput
	ToRedisRedisUserConfigMigrationOutputWithContext(context.Context) RedisRedisUserConfigMigrationOutput
}

type RedisRedisUserConfigMigrationArgs struct {
	// Database name for bootstrapping the initial connection
	Dbname pulumi.StringPtrInput `pulumi:"dbname"`
	// Hostname or IP address of the server where to migrate data from
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Comma-separated list of databases, which should be ignored during
	// migration (supported by MySQL only at the moment)
	IgnoreDbs pulumi.StringPtrInput `pulumi:"ignoreDbs"`
	// Password for authentication with the server where to migrate data from
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Port number of the server where to migrate data from
	Port pulumi.StringPtrInput `pulumi:"port"`
	// The server where to migrate data from is secured with SSL
	Ssl pulumi.StringPtrInput `pulumi:"ssl"`
	// User name for authentication with the server where to migrate data from
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (RedisRedisUserConfigMigrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisRedisUserConfigMigration)(nil)).Elem()
}

func (i RedisRedisUserConfigMigrationArgs) ToRedisRedisUserConfigMigrationOutput() RedisRedisUserConfigMigrationOutput {
	return i.ToRedisRedisUserConfigMigrationOutputWithContext(context.Background())
}

func (i RedisRedisUserConfigMigrationArgs) ToRedisRedisUserConfigMigrationOutputWithContext(ctx context.Context) RedisRedisUserConfigMigrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisRedisUserConfigMigrationOutput)
}

func (i RedisRedisUserConfigMigrationArgs) ToRedisRedisUserConfigMigrationPtrOutput() RedisRedisUserConfigMigrationPtrOutput {
	return i.ToRedisRedisUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (i RedisRedisUserConfigMigrationArgs) ToRedisRedisUserConfigMigrationPtrOutputWithContext(ctx context.Context) RedisRedisUserConfigMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisRedisUserConfigMigrationOutput).ToRedisRedisUserConfigMigrationPtrOutputWithContext(ctx)
}

// RedisRedisUserConfigMigrationPtrInput is an input type that accepts RedisRedisUserConfigMigrationArgs, RedisRedisUserConfigMigrationPtr and RedisRedisUserConfigMigrationPtrOutput values.
// You can construct a concrete instance of `RedisRedisUserConfigMigrationPtrInput` via:
//
//          RedisRedisUserConfigMigrationArgs{...}
//
//  or:
//
//          nil
type RedisRedisUserConfigMigrationPtrInput interface {
	pulumi.Input

	ToRedisRedisUserConfigMigrationPtrOutput() RedisRedisUserConfigMigrationPtrOutput
	ToRedisRedisUserConfigMigrationPtrOutputWithContext(context.Context) RedisRedisUserConfigMigrationPtrOutput
}

type redisRedisUserConfigMigrationPtrType RedisRedisUserConfigMigrationArgs

func RedisRedisUserConfigMigrationPtr(v *RedisRedisUserConfigMigrationArgs) RedisRedisUserConfigMigrationPtrInput {
	return (*redisRedisUserConfigMigrationPtrType)(v)
}

func (*redisRedisUserConfigMigrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisRedisUserConfigMigration)(nil)).Elem()
}

func (i *redisRedisUserConfigMigrationPtrType) ToRedisRedisUserConfigMigrationPtrOutput() RedisRedisUserConfigMigrationPtrOutput {
	return i.ToRedisRedisUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (i *redisRedisUserConfigMigrationPtrType) ToRedisRedisUserConfigMigrationPtrOutputWithContext(ctx context.Context) RedisRedisUserConfigMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisRedisUserConfigMigrationPtrOutput)
}

type RedisRedisUserConfigMigrationOutput struct{ *pulumi.OutputState }

func (RedisRedisUserConfigMigrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisRedisUserConfigMigration)(nil)).Elem()
}

func (o RedisRedisUserConfigMigrationOutput) ToRedisRedisUserConfigMigrationOutput() RedisRedisUserConfigMigrationOutput {
	return o
}

func (o RedisRedisUserConfigMigrationOutput) ToRedisRedisUserConfigMigrationOutputWithContext(ctx context.Context) RedisRedisUserConfigMigrationOutput {
	return o
}

func (o RedisRedisUserConfigMigrationOutput) ToRedisRedisUserConfigMigrationPtrOutput() RedisRedisUserConfigMigrationPtrOutput {
	return o.ToRedisRedisUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (o RedisRedisUserConfigMigrationOutput) ToRedisRedisUserConfigMigrationPtrOutputWithContext(ctx context.Context) RedisRedisUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfigMigration) *RedisRedisUserConfigMigration {
		return &v
	}).(RedisRedisUserConfigMigrationPtrOutput)
}

// Database name for bootstrapping the initial connection
func (o RedisRedisUserConfigMigrationOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfigMigration) *string { return v.Dbname }).(pulumi.StringPtrOutput)
}

// Hostname or IP address of the server where to migrate data from
func (o RedisRedisUserConfigMigrationOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfigMigration) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Comma-separated list of databases, which should be ignored during
// migration (supported by MySQL only at the moment)
func (o RedisRedisUserConfigMigrationOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfigMigration) *string { return v.IgnoreDbs }).(pulumi.StringPtrOutput)
}

// Password for authentication with the server where to migrate data from
func (o RedisRedisUserConfigMigrationOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfigMigration) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Port number of the server where to migrate data from
func (o RedisRedisUserConfigMigrationOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfigMigration) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The server where to migrate data from is secured with SSL
func (o RedisRedisUserConfigMigrationOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfigMigration) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

// User name for authentication with the server where to migrate data from
func (o RedisRedisUserConfigMigrationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfigMigration) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type RedisRedisUserConfigMigrationPtrOutput struct{ *pulumi.OutputState }

func (RedisRedisUserConfigMigrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisRedisUserConfigMigration)(nil)).Elem()
}

func (o RedisRedisUserConfigMigrationPtrOutput) ToRedisRedisUserConfigMigrationPtrOutput() RedisRedisUserConfigMigrationPtrOutput {
	return o
}

func (o RedisRedisUserConfigMigrationPtrOutput) ToRedisRedisUserConfigMigrationPtrOutputWithContext(ctx context.Context) RedisRedisUserConfigMigrationPtrOutput {
	return o
}

func (o RedisRedisUserConfigMigrationPtrOutput) Elem() RedisRedisUserConfigMigrationOutput {
	return o.ApplyT(func(v *RedisRedisUserConfigMigration) RedisRedisUserConfigMigration { return *v }).(RedisRedisUserConfigMigrationOutput)
}

// Database name for bootstrapping the initial connection
func (o RedisRedisUserConfigMigrationPtrOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Dbname
	}).(pulumi.StringPtrOutput)
}

// Hostname or IP address of the server where to migrate data from
func (o RedisRedisUserConfigMigrationPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Comma-separated list of databases, which should be ignored during
// migration (supported by MySQL only at the moment)
func (o RedisRedisUserConfigMigrationPtrOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.IgnoreDbs
	}).(pulumi.StringPtrOutput)
}

// Password for authentication with the server where to migrate data from
func (o RedisRedisUserConfigMigrationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Port number of the server where to migrate data from
func (o RedisRedisUserConfigMigrationPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// The server where to migrate data from is secured with SSL
func (o RedisRedisUserConfigMigrationPtrOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Ssl
	}).(pulumi.StringPtrOutput)
}

// User name for authentication with the server where to migrate data from
func (o RedisRedisUserConfigMigrationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type RedisRedisUserConfigPrivateAccess struct {
	// Allow clients to connect to prometheus from the public internet
	// for service nodes that are in a project VPC or another type of private network
	Prometheus *string `pulumi:"prometheus"`
	// Allow clients to connect to redis from the public internet for service
	// nodes that are in a project VPC or another type of private network
	Redis *string `pulumi:"redis"`
}

// RedisRedisUserConfigPrivateAccessInput is an input type that accepts RedisRedisUserConfigPrivateAccessArgs and RedisRedisUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `RedisRedisUserConfigPrivateAccessInput` via:
//
//          RedisRedisUserConfigPrivateAccessArgs{...}
type RedisRedisUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToRedisRedisUserConfigPrivateAccessOutput() RedisRedisUserConfigPrivateAccessOutput
	ToRedisRedisUserConfigPrivateAccessOutputWithContext(context.Context) RedisRedisUserConfigPrivateAccessOutput
}

type RedisRedisUserConfigPrivateAccessArgs struct {
	// Allow clients to connect to prometheus from the public internet
	// for service nodes that are in a project VPC or another type of private network
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
	// Allow clients to connect to redis from the public internet for service
	// nodes that are in a project VPC or another type of private network
	Redis pulumi.StringPtrInput `pulumi:"redis"`
}

func (RedisRedisUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisRedisUserConfigPrivateAccess)(nil)).Elem()
}

func (i RedisRedisUserConfigPrivateAccessArgs) ToRedisRedisUserConfigPrivateAccessOutput() RedisRedisUserConfigPrivateAccessOutput {
	return i.ToRedisRedisUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i RedisRedisUserConfigPrivateAccessArgs) ToRedisRedisUserConfigPrivateAccessOutputWithContext(ctx context.Context) RedisRedisUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisRedisUserConfigPrivateAccessOutput)
}

func (i RedisRedisUserConfigPrivateAccessArgs) ToRedisRedisUserConfigPrivateAccessPtrOutput() RedisRedisUserConfigPrivateAccessPtrOutput {
	return i.ToRedisRedisUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i RedisRedisUserConfigPrivateAccessArgs) ToRedisRedisUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) RedisRedisUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisRedisUserConfigPrivateAccessOutput).ToRedisRedisUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// RedisRedisUserConfigPrivateAccessPtrInput is an input type that accepts RedisRedisUserConfigPrivateAccessArgs, RedisRedisUserConfigPrivateAccessPtr and RedisRedisUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `RedisRedisUserConfigPrivateAccessPtrInput` via:
//
//          RedisRedisUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type RedisRedisUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToRedisRedisUserConfigPrivateAccessPtrOutput() RedisRedisUserConfigPrivateAccessPtrOutput
	ToRedisRedisUserConfigPrivateAccessPtrOutputWithContext(context.Context) RedisRedisUserConfigPrivateAccessPtrOutput
}

type redisRedisUserConfigPrivateAccessPtrType RedisRedisUserConfigPrivateAccessArgs

func RedisRedisUserConfigPrivateAccessPtr(v *RedisRedisUserConfigPrivateAccessArgs) RedisRedisUserConfigPrivateAccessPtrInput {
	return (*redisRedisUserConfigPrivateAccessPtrType)(v)
}

func (*redisRedisUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisRedisUserConfigPrivateAccess)(nil)).Elem()
}

func (i *redisRedisUserConfigPrivateAccessPtrType) ToRedisRedisUserConfigPrivateAccessPtrOutput() RedisRedisUserConfigPrivateAccessPtrOutput {
	return i.ToRedisRedisUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *redisRedisUserConfigPrivateAccessPtrType) ToRedisRedisUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) RedisRedisUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisRedisUserConfigPrivateAccessPtrOutput)
}

type RedisRedisUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (RedisRedisUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisRedisUserConfigPrivateAccess)(nil)).Elem()
}

func (o RedisRedisUserConfigPrivateAccessOutput) ToRedisRedisUserConfigPrivateAccessOutput() RedisRedisUserConfigPrivateAccessOutput {
	return o
}

func (o RedisRedisUserConfigPrivateAccessOutput) ToRedisRedisUserConfigPrivateAccessOutputWithContext(ctx context.Context) RedisRedisUserConfigPrivateAccessOutput {
	return o
}

func (o RedisRedisUserConfigPrivateAccessOutput) ToRedisRedisUserConfigPrivateAccessPtrOutput() RedisRedisUserConfigPrivateAccessPtrOutput {
	return o.ToRedisRedisUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o RedisRedisUserConfigPrivateAccessOutput) ToRedisRedisUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) RedisRedisUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfigPrivateAccess) *RedisRedisUserConfigPrivateAccess {
		return &v
	}).(RedisRedisUserConfigPrivateAccessPtrOutput)
}

// Allow clients to connect to prometheus from the public internet
// for service nodes that are in a project VPC or another type of private network
func (o RedisRedisUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to redis from the public internet for service
// nodes that are in a project VPC or another type of private network
func (o RedisRedisUserConfigPrivateAccessOutput) Redis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfigPrivateAccess) *string { return v.Redis }).(pulumi.StringPtrOutput)
}

type RedisRedisUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (RedisRedisUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisRedisUserConfigPrivateAccess)(nil)).Elem()
}

func (o RedisRedisUserConfigPrivateAccessPtrOutput) ToRedisRedisUserConfigPrivateAccessPtrOutput() RedisRedisUserConfigPrivateAccessPtrOutput {
	return o
}

func (o RedisRedisUserConfigPrivateAccessPtrOutput) ToRedisRedisUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) RedisRedisUserConfigPrivateAccessPtrOutput {
	return o
}

func (o RedisRedisUserConfigPrivateAccessPtrOutput) Elem() RedisRedisUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *RedisRedisUserConfigPrivateAccess) RedisRedisUserConfigPrivateAccess { return *v }).(RedisRedisUserConfigPrivateAccessOutput)
}

// Allow clients to connect to prometheus from the public internet
// for service nodes that are in a project VPC or another type of private network
func (o RedisRedisUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisRedisUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to redis from the public internet for service
// nodes that are in a project VPC or another type of private network
func (o RedisRedisUserConfigPrivateAccessPtrOutput) Redis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisRedisUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Redis
	}).(pulumi.StringPtrOutput)
}

type RedisRedisUserConfigPrivatelinkAccess struct {
	// Allow clients to connect to redis from the public internet for service
	// nodes that are in a project VPC or another type of private network
	Redis *string `pulumi:"redis"`
}

// RedisRedisUserConfigPrivatelinkAccessInput is an input type that accepts RedisRedisUserConfigPrivatelinkAccessArgs and RedisRedisUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `RedisRedisUserConfigPrivatelinkAccessInput` via:
//
//          RedisRedisUserConfigPrivatelinkAccessArgs{...}
type RedisRedisUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToRedisRedisUserConfigPrivatelinkAccessOutput() RedisRedisUserConfigPrivatelinkAccessOutput
	ToRedisRedisUserConfigPrivatelinkAccessOutputWithContext(context.Context) RedisRedisUserConfigPrivatelinkAccessOutput
}

type RedisRedisUserConfigPrivatelinkAccessArgs struct {
	// Allow clients to connect to redis from the public internet for service
	// nodes that are in a project VPC or another type of private network
	Redis pulumi.StringPtrInput `pulumi:"redis"`
}

func (RedisRedisUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisRedisUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i RedisRedisUserConfigPrivatelinkAccessArgs) ToRedisRedisUserConfigPrivatelinkAccessOutput() RedisRedisUserConfigPrivatelinkAccessOutput {
	return i.ToRedisRedisUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i RedisRedisUserConfigPrivatelinkAccessArgs) ToRedisRedisUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) RedisRedisUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisRedisUserConfigPrivatelinkAccessOutput)
}

func (i RedisRedisUserConfigPrivatelinkAccessArgs) ToRedisRedisUserConfigPrivatelinkAccessPtrOutput() RedisRedisUserConfigPrivatelinkAccessPtrOutput {
	return i.ToRedisRedisUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i RedisRedisUserConfigPrivatelinkAccessArgs) ToRedisRedisUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) RedisRedisUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisRedisUserConfigPrivatelinkAccessOutput).ToRedisRedisUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// RedisRedisUserConfigPrivatelinkAccessPtrInput is an input type that accepts RedisRedisUserConfigPrivatelinkAccessArgs, RedisRedisUserConfigPrivatelinkAccessPtr and RedisRedisUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `RedisRedisUserConfigPrivatelinkAccessPtrInput` via:
//
//          RedisRedisUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type RedisRedisUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToRedisRedisUserConfigPrivatelinkAccessPtrOutput() RedisRedisUserConfigPrivatelinkAccessPtrOutput
	ToRedisRedisUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) RedisRedisUserConfigPrivatelinkAccessPtrOutput
}

type redisRedisUserConfigPrivatelinkAccessPtrType RedisRedisUserConfigPrivatelinkAccessArgs

func RedisRedisUserConfigPrivatelinkAccessPtr(v *RedisRedisUserConfigPrivatelinkAccessArgs) RedisRedisUserConfigPrivatelinkAccessPtrInput {
	return (*redisRedisUserConfigPrivatelinkAccessPtrType)(v)
}

func (*redisRedisUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisRedisUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *redisRedisUserConfigPrivatelinkAccessPtrType) ToRedisRedisUserConfigPrivatelinkAccessPtrOutput() RedisRedisUserConfigPrivatelinkAccessPtrOutput {
	return i.ToRedisRedisUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *redisRedisUserConfigPrivatelinkAccessPtrType) ToRedisRedisUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) RedisRedisUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisRedisUserConfigPrivatelinkAccessPtrOutput)
}

type RedisRedisUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (RedisRedisUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisRedisUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o RedisRedisUserConfigPrivatelinkAccessOutput) ToRedisRedisUserConfigPrivatelinkAccessOutput() RedisRedisUserConfigPrivatelinkAccessOutput {
	return o
}

func (o RedisRedisUserConfigPrivatelinkAccessOutput) ToRedisRedisUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) RedisRedisUserConfigPrivatelinkAccessOutput {
	return o
}

func (o RedisRedisUserConfigPrivatelinkAccessOutput) ToRedisRedisUserConfigPrivatelinkAccessPtrOutput() RedisRedisUserConfigPrivatelinkAccessPtrOutput {
	return o.ToRedisRedisUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o RedisRedisUserConfigPrivatelinkAccessOutput) ToRedisRedisUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) RedisRedisUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfigPrivatelinkAccess) *RedisRedisUserConfigPrivatelinkAccess {
		return &v
	}).(RedisRedisUserConfigPrivatelinkAccessPtrOutput)
}

// Allow clients to connect to redis from the public internet for service
// nodes that are in a project VPC or another type of private network
func (o RedisRedisUserConfigPrivatelinkAccessOutput) Redis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfigPrivatelinkAccess) *string { return v.Redis }).(pulumi.StringPtrOutput)
}

type RedisRedisUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (RedisRedisUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisRedisUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o RedisRedisUserConfigPrivatelinkAccessPtrOutput) ToRedisRedisUserConfigPrivatelinkAccessPtrOutput() RedisRedisUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o RedisRedisUserConfigPrivatelinkAccessPtrOutput) ToRedisRedisUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) RedisRedisUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o RedisRedisUserConfigPrivatelinkAccessPtrOutput) Elem() RedisRedisUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *RedisRedisUserConfigPrivatelinkAccess) RedisRedisUserConfigPrivatelinkAccess { return *v }).(RedisRedisUserConfigPrivatelinkAccessOutput)
}

// Allow clients to connect to redis from the public internet for service
// nodes that are in a project VPC or another type of private network
func (o RedisRedisUserConfigPrivatelinkAccessPtrOutput) Redis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisRedisUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Redis
	}).(pulumi.StringPtrOutput)
}

type RedisRedisUserConfigPublicAccess struct {
	// Allow clients to connect to prometheus from the public internet
	// for service nodes that are in a project VPC or another type of private network
	Prometheus *string `pulumi:"prometheus"`
	// Allow clients to connect to redis from the public internet for service
	// nodes that are in a project VPC or another type of private network
	Redis *string `pulumi:"redis"`
}

// RedisRedisUserConfigPublicAccessInput is an input type that accepts RedisRedisUserConfigPublicAccessArgs and RedisRedisUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `RedisRedisUserConfigPublicAccessInput` via:
//
//          RedisRedisUserConfigPublicAccessArgs{...}
type RedisRedisUserConfigPublicAccessInput interface {
	pulumi.Input

	ToRedisRedisUserConfigPublicAccessOutput() RedisRedisUserConfigPublicAccessOutput
	ToRedisRedisUserConfigPublicAccessOutputWithContext(context.Context) RedisRedisUserConfigPublicAccessOutput
}

type RedisRedisUserConfigPublicAccessArgs struct {
	// Allow clients to connect to prometheus from the public internet
	// for service nodes that are in a project VPC or another type of private network
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
	// Allow clients to connect to redis from the public internet for service
	// nodes that are in a project VPC or another type of private network
	Redis pulumi.StringPtrInput `pulumi:"redis"`
}

func (RedisRedisUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisRedisUserConfigPublicAccess)(nil)).Elem()
}

func (i RedisRedisUserConfigPublicAccessArgs) ToRedisRedisUserConfigPublicAccessOutput() RedisRedisUserConfigPublicAccessOutput {
	return i.ToRedisRedisUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i RedisRedisUserConfigPublicAccessArgs) ToRedisRedisUserConfigPublicAccessOutputWithContext(ctx context.Context) RedisRedisUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisRedisUserConfigPublicAccessOutput)
}

func (i RedisRedisUserConfigPublicAccessArgs) ToRedisRedisUserConfigPublicAccessPtrOutput() RedisRedisUserConfigPublicAccessPtrOutput {
	return i.ToRedisRedisUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i RedisRedisUserConfigPublicAccessArgs) ToRedisRedisUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) RedisRedisUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisRedisUserConfigPublicAccessOutput).ToRedisRedisUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// RedisRedisUserConfigPublicAccessPtrInput is an input type that accepts RedisRedisUserConfigPublicAccessArgs, RedisRedisUserConfigPublicAccessPtr and RedisRedisUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `RedisRedisUserConfigPublicAccessPtrInput` via:
//
//          RedisRedisUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type RedisRedisUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToRedisRedisUserConfigPublicAccessPtrOutput() RedisRedisUserConfigPublicAccessPtrOutput
	ToRedisRedisUserConfigPublicAccessPtrOutputWithContext(context.Context) RedisRedisUserConfigPublicAccessPtrOutput
}

type redisRedisUserConfigPublicAccessPtrType RedisRedisUserConfigPublicAccessArgs

func RedisRedisUserConfigPublicAccessPtr(v *RedisRedisUserConfigPublicAccessArgs) RedisRedisUserConfigPublicAccessPtrInput {
	return (*redisRedisUserConfigPublicAccessPtrType)(v)
}

func (*redisRedisUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisRedisUserConfigPublicAccess)(nil)).Elem()
}

func (i *redisRedisUserConfigPublicAccessPtrType) ToRedisRedisUserConfigPublicAccessPtrOutput() RedisRedisUserConfigPublicAccessPtrOutput {
	return i.ToRedisRedisUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *redisRedisUserConfigPublicAccessPtrType) ToRedisRedisUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) RedisRedisUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisRedisUserConfigPublicAccessPtrOutput)
}

type RedisRedisUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (RedisRedisUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisRedisUserConfigPublicAccess)(nil)).Elem()
}

func (o RedisRedisUserConfigPublicAccessOutput) ToRedisRedisUserConfigPublicAccessOutput() RedisRedisUserConfigPublicAccessOutput {
	return o
}

func (o RedisRedisUserConfigPublicAccessOutput) ToRedisRedisUserConfigPublicAccessOutputWithContext(ctx context.Context) RedisRedisUserConfigPublicAccessOutput {
	return o
}

func (o RedisRedisUserConfigPublicAccessOutput) ToRedisRedisUserConfigPublicAccessPtrOutput() RedisRedisUserConfigPublicAccessPtrOutput {
	return o.ToRedisRedisUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o RedisRedisUserConfigPublicAccessOutput) ToRedisRedisUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) RedisRedisUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfigPublicAccess) *RedisRedisUserConfigPublicAccess {
		return &v
	}).(RedisRedisUserConfigPublicAccessPtrOutput)
}

// Allow clients to connect to prometheus from the public internet
// for service nodes that are in a project VPC or another type of private network
func (o RedisRedisUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to redis from the public internet for service
// nodes that are in a project VPC or another type of private network
func (o RedisRedisUserConfigPublicAccessOutput) Redis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisRedisUserConfigPublicAccess) *string { return v.Redis }).(pulumi.StringPtrOutput)
}

type RedisRedisUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (RedisRedisUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisRedisUserConfigPublicAccess)(nil)).Elem()
}

func (o RedisRedisUserConfigPublicAccessPtrOutput) ToRedisRedisUserConfigPublicAccessPtrOutput() RedisRedisUserConfigPublicAccessPtrOutput {
	return o
}

func (o RedisRedisUserConfigPublicAccessPtrOutput) ToRedisRedisUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) RedisRedisUserConfigPublicAccessPtrOutput {
	return o
}

func (o RedisRedisUserConfigPublicAccessPtrOutput) Elem() RedisRedisUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *RedisRedisUserConfigPublicAccess) RedisRedisUserConfigPublicAccess { return *v }).(RedisRedisUserConfigPublicAccessOutput)
}

// Allow clients to connect to prometheus from the public internet
// for service nodes that are in a project VPC or another type of private network
func (o RedisRedisUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisRedisUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to redis from the public internet for service
// nodes that are in a project VPC or another type of private network
func (o RedisRedisUserConfigPublicAccessPtrOutput) Redis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisRedisUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Redis
	}).(pulumi.StringPtrOutput)
}

type RedisServiceIntegration struct {
	IntegrationType   string `pulumi:"integrationType"`
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// RedisServiceIntegrationInput is an input type that accepts RedisServiceIntegrationArgs and RedisServiceIntegrationOutput values.
// You can construct a concrete instance of `RedisServiceIntegrationInput` via:
//
//          RedisServiceIntegrationArgs{...}
type RedisServiceIntegrationInput interface {
	pulumi.Input

	ToRedisServiceIntegrationOutput() RedisServiceIntegrationOutput
	ToRedisServiceIntegrationOutputWithContext(context.Context) RedisServiceIntegrationOutput
}

type RedisServiceIntegrationArgs struct {
	IntegrationType   pulumi.StringInput `pulumi:"integrationType"`
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (RedisServiceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisServiceIntegration)(nil)).Elem()
}

func (i RedisServiceIntegrationArgs) ToRedisServiceIntegrationOutput() RedisServiceIntegrationOutput {
	return i.ToRedisServiceIntegrationOutputWithContext(context.Background())
}

func (i RedisServiceIntegrationArgs) ToRedisServiceIntegrationOutputWithContext(ctx context.Context) RedisServiceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisServiceIntegrationOutput)
}

// RedisServiceIntegrationArrayInput is an input type that accepts RedisServiceIntegrationArray and RedisServiceIntegrationArrayOutput values.
// You can construct a concrete instance of `RedisServiceIntegrationArrayInput` via:
//
//          RedisServiceIntegrationArray{ RedisServiceIntegrationArgs{...} }
type RedisServiceIntegrationArrayInput interface {
	pulumi.Input

	ToRedisServiceIntegrationArrayOutput() RedisServiceIntegrationArrayOutput
	ToRedisServiceIntegrationArrayOutputWithContext(context.Context) RedisServiceIntegrationArrayOutput
}

type RedisServiceIntegrationArray []RedisServiceIntegrationInput

func (RedisServiceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RedisServiceIntegration)(nil)).Elem()
}

func (i RedisServiceIntegrationArray) ToRedisServiceIntegrationArrayOutput() RedisServiceIntegrationArrayOutput {
	return i.ToRedisServiceIntegrationArrayOutputWithContext(context.Background())
}

func (i RedisServiceIntegrationArray) ToRedisServiceIntegrationArrayOutputWithContext(ctx context.Context) RedisServiceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisServiceIntegrationArrayOutput)
}

type RedisServiceIntegrationOutput struct{ *pulumi.OutputState }

func (RedisServiceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisServiceIntegration)(nil)).Elem()
}

func (o RedisServiceIntegrationOutput) ToRedisServiceIntegrationOutput() RedisServiceIntegrationOutput {
	return o
}

func (o RedisServiceIntegrationOutput) ToRedisServiceIntegrationOutputWithContext(ctx context.Context) RedisServiceIntegrationOutput {
	return o
}

func (o RedisServiceIntegrationOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v RedisServiceIntegration) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o RedisServiceIntegrationOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v RedisServiceIntegration) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

type RedisServiceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (RedisServiceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RedisServiceIntegration)(nil)).Elem()
}

func (o RedisServiceIntegrationArrayOutput) ToRedisServiceIntegrationArrayOutput() RedisServiceIntegrationArrayOutput {
	return o
}

func (o RedisServiceIntegrationArrayOutput) ToRedisServiceIntegrationArrayOutputWithContext(ctx context.Context) RedisServiceIntegrationArrayOutput {
	return o
}

func (o RedisServiceIntegrationArrayOutput) Index(i pulumi.IntInput) RedisServiceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RedisServiceIntegration {
		return vs[0].([]RedisServiceIntegration)[vs[1].(int)]
	}).(RedisServiceIntegrationOutput)
}

type ServiceCassandra struct {
}

// ServiceCassandraInput is an input type that accepts ServiceCassandraArgs and ServiceCassandraOutput values.
// You can construct a concrete instance of `ServiceCassandraInput` via:
//
//          ServiceCassandraArgs{...}
type ServiceCassandraInput interface {
	pulumi.Input

	ToServiceCassandraOutput() ServiceCassandraOutput
	ToServiceCassandraOutputWithContext(context.Context) ServiceCassandraOutput
}

type ServiceCassandraArgs struct {
}

func (ServiceCassandraArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCassandra)(nil)).Elem()
}

func (i ServiceCassandraArgs) ToServiceCassandraOutput() ServiceCassandraOutput {
	return i.ToServiceCassandraOutputWithContext(context.Background())
}

func (i ServiceCassandraArgs) ToServiceCassandraOutputWithContext(ctx context.Context) ServiceCassandraOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCassandraOutput)
}

func (i ServiceCassandraArgs) ToServiceCassandraPtrOutput() ServiceCassandraPtrOutput {
	return i.ToServiceCassandraPtrOutputWithContext(context.Background())
}

func (i ServiceCassandraArgs) ToServiceCassandraPtrOutputWithContext(ctx context.Context) ServiceCassandraPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCassandraOutput).ToServiceCassandraPtrOutputWithContext(ctx)
}

// ServiceCassandraPtrInput is an input type that accepts ServiceCassandraArgs, ServiceCassandraPtr and ServiceCassandraPtrOutput values.
// You can construct a concrete instance of `ServiceCassandraPtrInput` via:
//
//          ServiceCassandraArgs{...}
//
//  or:
//
//          nil
type ServiceCassandraPtrInput interface {
	pulumi.Input

	ToServiceCassandraPtrOutput() ServiceCassandraPtrOutput
	ToServiceCassandraPtrOutputWithContext(context.Context) ServiceCassandraPtrOutput
}

type serviceCassandraPtrType ServiceCassandraArgs

func ServiceCassandraPtr(v *ServiceCassandraArgs) ServiceCassandraPtrInput {
	return (*serviceCassandraPtrType)(v)
}

func (*serviceCassandraPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCassandra)(nil)).Elem()
}

func (i *serviceCassandraPtrType) ToServiceCassandraPtrOutput() ServiceCassandraPtrOutput {
	return i.ToServiceCassandraPtrOutputWithContext(context.Background())
}

func (i *serviceCassandraPtrType) ToServiceCassandraPtrOutputWithContext(ctx context.Context) ServiceCassandraPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCassandraPtrOutput)
}

type ServiceCassandraOutput struct{ *pulumi.OutputState }

func (ServiceCassandraOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCassandra)(nil)).Elem()
}

func (o ServiceCassandraOutput) ToServiceCassandraOutput() ServiceCassandraOutput {
	return o
}

func (o ServiceCassandraOutput) ToServiceCassandraOutputWithContext(ctx context.Context) ServiceCassandraOutput {
	return o
}

func (o ServiceCassandraOutput) ToServiceCassandraPtrOutput() ServiceCassandraPtrOutput {
	return o.ToServiceCassandraPtrOutputWithContext(context.Background())
}

func (o ServiceCassandraOutput) ToServiceCassandraPtrOutputWithContext(ctx context.Context) ServiceCassandraPtrOutput {
	return o.ApplyT(func(v ServiceCassandra) *ServiceCassandra {
		return &v
	}).(ServiceCassandraPtrOutput)
}

type ServiceCassandraPtrOutput struct{ *pulumi.OutputState }

func (ServiceCassandraPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCassandra)(nil)).Elem()
}

func (o ServiceCassandraPtrOutput) ToServiceCassandraPtrOutput() ServiceCassandraPtrOutput {
	return o
}

func (o ServiceCassandraPtrOutput) ToServiceCassandraPtrOutputWithContext(ctx context.Context) ServiceCassandraPtrOutput {
	return o
}

func (o ServiceCassandraPtrOutput) Elem() ServiceCassandraOutput {
	return o.ApplyT(func(v *ServiceCassandra) ServiceCassandra { return *v }).(ServiceCassandraOutput)
}

type ServiceCassandraUserConfig struct {
	Cassandra            *ServiceCassandraUserConfigCassandra     `pulumi:"cassandra"`
	IpFilters            []string                                 `pulumi:"ipFilters"`
	MigrateSstableloader *string                                  `pulumi:"migrateSstableloader"`
	PrivateAccess        *ServiceCassandraUserConfigPrivateAccess `pulumi:"privateAccess"`
	ProjectToForkFrom    *string                                  `pulumi:"projectToForkFrom"`
	PublicAccess         *ServiceCassandraUserConfigPublicAccess  `pulumi:"publicAccess"`
	ServiceToForkFrom    *string                                  `pulumi:"serviceToForkFrom"`
}

// ServiceCassandraUserConfigInput is an input type that accepts ServiceCassandraUserConfigArgs and ServiceCassandraUserConfigOutput values.
// You can construct a concrete instance of `ServiceCassandraUserConfigInput` via:
//
//          ServiceCassandraUserConfigArgs{...}
type ServiceCassandraUserConfigInput interface {
	pulumi.Input

	ToServiceCassandraUserConfigOutput() ServiceCassandraUserConfigOutput
	ToServiceCassandraUserConfigOutputWithContext(context.Context) ServiceCassandraUserConfigOutput
}

type ServiceCassandraUserConfigArgs struct {
	Cassandra            ServiceCassandraUserConfigCassandraPtrInput     `pulumi:"cassandra"`
	IpFilters            pulumi.StringArrayInput                         `pulumi:"ipFilters"`
	MigrateSstableloader pulumi.StringPtrInput                           `pulumi:"migrateSstableloader"`
	PrivateAccess        ServiceCassandraUserConfigPrivateAccessPtrInput `pulumi:"privateAccess"`
	ProjectToForkFrom    pulumi.StringPtrInput                           `pulumi:"projectToForkFrom"`
	PublicAccess         ServiceCassandraUserConfigPublicAccessPtrInput  `pulumi:"publicAccess"`
	ServiceToForkFrom    pulumi.StringPtrInput                           `pulumi:"serviceToForkFrom"`
}

func (ServiceCassandraUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCassandraUserConfig)(nil)).Elem()
}

func (i ServiceCassandraUserConfigArgs) ToServiceCassandraUserConfigOutput() ServiceCassandraUserConfigOutput {
	return i.ToServiceCassandraUserConfigOutputWithContext(context.Background())
}

func (i ServiceCassandraUserConfigArgs) ToServiceCassandraUserConfigOutputWithContext(ctx context.Context) ServiceCassandraUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCassandraUserConfigOutput)
}

func (i ServiceCassandraUserConfigArgs) ToServiceCassandraUserConfigPtrOutput() ServiceCassandraUserConfigPtrOutput {
	return i.ToServiceCassandraUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceCassandraUserConfigArgs) ToServiceCassandraUserConfigPtrOutputWithContext(ctx context.Context) ServiceCassandraUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCassandraUserConfigOutput).ToServiceCassandraUserConfigPtrOutputWithContext(ctx)
}

// ServiceCassandraUserConfigPtrInput is an input type that accepts ServiceCassandraUserConfigArgs, ServiceCassandraUserConfigPtr and ServiceCassandraUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceCassandraUserConfigPtrInput` via:
//
//          ServiceCassandraUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceCassandraUserConfigPtrInput interface {
	pulumi.Input

	ToServiceCassandraUserConfigPtrOutput() ServiceCassandraUserConfigPtrOutput
	ToServiceCassandraUserConfigPtrOutputWithContext(context.Context) ServiceCassandraUserConfigPtrOutput
}

type serviceCassandraUserConfigPtrType ServiceCassandraUserConfigArgs

func ServiceCassandraUserConfigPtr(v *ServiceCassandraUserConfigArgs) ServiceCassandraUserConfigPtrInput {
	return (*serviceCassandraUserConfigPtrType)(v)
}

func (*serviceCassandraUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCassandraUserConfig)(nil)).Elem()
}

func (i *serviceCassandraUserConfigPtrType) ToServiceCassandraUserConfigPtrOutput() ServiceCassandraUserConfigPtrOutput {
	return i.ToServiceCassandraUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceCassandraUserConfigPtrType) ToServiceCassandraUserConfigPtrOutputWithContext(ctx context.Context) ServiceCassandraUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCassandraUserConfigPtrOutput)
}

type ServiceCassandraUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceCassandraUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCassandraUserConfig)(nil)).Elem()
}

func (o ServiceCassandraUserConfigOutput) ToServiceCassandraUserConfigOutput() ServiceCassandraUserConfigOutput {
	return o
}

func (o ServiceCassandraUserConfigOutput) ToServiceCassandraUserConfigOutputWithContext(ctx context.Context) ServiceCassandraUserConfigOutput {
	return o
}

func (o ServiceCassandraUserConfigOutput) ToServiceCassandraUserConfigPtrOutput() ServiceCassandraUserConfigPtrOutput {
	return o.ToServiceCassandraUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceCassandraUserConfigOutput) ToServiceCassandraUserConfigPtrOutputWithContext(ctx context.Context) ServiceCassandraUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceCassandraUserConfig) *ServiceCassandraUserConfig {
		return &v
	}).(ServiceCassandraUserConfigPtrOutput)
}
func (o ServiceCassandraUserConfigOutput) Cassandra() ServiceCassandraUserConfigCassandraPtrOutput {
	return o.ApplyT(func(v ServiceCassandraUserConfig) *ServiceCassandraUserConfigCassandra { return v.Cassandra }).(ServiceCassandraUserConfigCassandraPtrOutput)
}

func (o ServiceCassandraUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceCassandraUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

func (o ServiceCassandraUserConfigOutput) MigrateSstableloader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceCassandraUserConfig) *string { return v.MigrateSstableloader }).(pulumi.StringPtrOutput)
}

func (o ServiceCassandraUserConfigOutput) PrivateAccess() ServiceCassandraUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v ServiceCassandraUserConfig) *ServiceCassandraUserConfigPrivateAccess { return v.PrivateAccess }).(ServiceCassandraUserConfigPrivateAccessPtrOutput)
}

func (o ServiceCassandraUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceCassandraUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

func (o ServiceCassandraUserConfigOutput) PublicAccess() ServiceCassandraUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v ServiceCassandraUserConfig) *ServiceCassandraUserConfigPublicAccess { return v.PublicAccess }).(ServiceCassandraUserConfigPublicAccessPtrOutput)
}

func (o ServiceCassandraUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceCassandraUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

type ServiceCassandraUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceCassandraUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCassandraUserConfig)(nil)).Elem()
}

func (o ServiceCassandraUserConfigPtrOutput) ToServiceCassandraUserConfigPtrOutput() ServiceCassandraUserConfigPtrOutput {
	return o
}

func (o ServiceCassandraUserConfigPtrOutput) ToServiceCassandraUserConfigPtrOutputWithContext(ctx context.Context) ServiceCassandraUserConfigPtrOutput {
	return o
}

func (o ServiceCassandraUserConfigPtrOutput) Elem() ServiceCassandraUserConfigOutput {
	return o.ApplyT(func(v *ServiceCassandraUserConfig) ServiceCassandraUserConfig { return *v }).(ServiceCassandraUserConfigOutput)
}

func (o ServiceCassandraUserConfigPtrOutput) Cassandra() ServiceCassandraUserConfigCassandraPtrOutput {
	return o.ApplyT(func(v *ServiceCassandraUserConfig) *ServiceCassandraUserConfigCassandra {
		if v == nil {
			return nil
		}
		return v.Cassandra
	}).(ServiceCassandraUserConfigCassandraPtrOutput)
}

func (o ServiceCassandraUserConfigPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceCassandraUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

func (o ServiceCassandraUserConfigPtrOutput) MigrateSstableloader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceCassandraUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.MigrateSstableloader
	}).(pulumi.StringPtrOutput)
}

func (o ServiceCassandraUserConfigPtrOutput) PrivateAccess() ServiceCassandraUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v *ServiceCassandraUserConfig) *ServiceCassandraUserConfigPrivateAccess {
		if v == nil {
			return nil
		}
		return v.PrivateAccess
	}).(ServiceCassandraUserConfigPrivateAccessPtrOutput)
}

func (o ServiceCassandraUserConfigPtrOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceCassandraUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProjectToForkFrom
	}).(pulumi.StringPtrOutput)
}

func (o ServiceCassandraUserConfigPtrOutput) PublicAccess() ServiceCassandraUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v *ServiceCassandraUserConfig) *ServiceCassandraUserConfigPublicAccess {
		if v == nil {
			return nil
		}
		return v.PublicAccess
	}).(ServiceCassandraUserConfigPublicAccessPtrOutput)
}

func (o ServiceCassandraUserConfigPtrOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceCassandraUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceToForkFrom
	}).(pulumi.StringPtrOutput)
}

type ServiceCassandraUserConfigCassandra struct {
	BatchSizeFailThresholdInKb *string `pulumi:"batchSizeFailThresholdInKb"`
	BatchSizeWarnThresholdInKb *string `pulumi:"batchSizeWarnThresholdInKb"`
}

// ServiceCassandraUserConfigCassandraInput is an input type that accepts ServiceCassandraUserConfigCassandraArgs and ServiceCassandraUserConfigCassandraOutput values.
// You can construct a concrete instance of `ServiceCassandraUserConfigCassandraInput` via:
//
//          ServiceCassandraUserConfigCassandraArgs{...}
type ServiceCassandraUserConfigCassandraInput interface {
	pulumi.Input

	ToServiceCassandraUserConfigCassandraOutput() ServiceCassandraUserConfigCassandraOutput
	ToServiceCassandraUserConfigCassandraOutputWithContext(context.Context) ServiceCassandraUserConfigCassandraOutput
}

type ServiceCassandraUserConfigCassandraArgs struct {
	BatchSizeFailThresholdInKb pulumi.StringPtrInput `pulumi:"batchSizeFailThresholdInKb"`
	BatchSizeWarnThresholdInKb pulumi.StringPtrInput `pulumi:"batchSizeWarnThresholdInKb"`
}

func (ServiceCassandraUserConfigCassandraArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCassandraUserConfigCassandra)(nil)).Elem()
}

func (i ServiceCassandraUserConfigCassandraArgs) ToServiceCassandraUserConfigCassandraOutput() ServiceCassandraUserConfigCassandraOutput {
	return i.ToServiceCassandraUserConfigCassandraOutputWithContext(context.Background())
}

func (i ServiceCassandraUserConfigCassandraArgs) ToServiceCassandraUserConfigCassandraOutputWithContext(ctx context.Context) ServiceCassandraUserConfigCassandraOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCassandraUserConfigCassandraOutput)
}

func (i ServiceCassandraUserConfigCassandraArgs) ToServiceCassandraUserConfigCassandraPtrOutput() ServiceCassandraUserConfigCassandraPtrOutput {
	return i.ToServiceCassandraUserConfigCassandraPtrOutputWithContext(context.Background())
}

func (i ServiceCassandraUserConfigCassandraArgs) ToServiceCassandraUserConfigCassandraPtrOutputWithContext(ctx context.Context) ServiceCassandraUserConfigCassandraPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCassandraUserConfigCassandraOutput).ToServiceCassandraUserConfigCassandraPtrOutputWithContext(ctx)
}

// ServiceCassandraUserConfigCassandraPtrInput is an input type that accepts ServiceCassandraUserConfigCassandraArgs, ServiceCassandraUserConfigCassandraPtr and ServiceCassandraUserConfigCassandraPtrOutput values.
// You can construct a concrete instance of `ServiceCassandraUserConfigCassandraPtrInput` via:
//
//          ServiceCassandraUserConfigCassandraArgs{...}
//
//  or:
//
//          nil
type ServiceCassandraUserConfigCassandraPtrInput interface {
	pulumi.Input

	ToServiceCassandraUserConfigCassandraPtrOutput() ServiceCassandraUserConfigCassandraPtrOutput
	ToServiceCassandraUserConfigCassandraPtrOutputWithContext(context.Context) ServiceCassandraUserConfigCassandraPtrOutput
}

type serviceCassandraUserConfigCassandraPtrType ServiceCassandraUserConfigCassandraArgs

func ServiceCassandraUserConfigCassandraPtr(v *ServiceCassandraUserConfigCassandraArgs) ServiceCassandraUserConfigCassandraPtrInput {
	return (*serviceCassandraUserConfigCassandraPtrType)(v)
}

func (*serviceCassandraUserConfigCassandraPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCassandraUserConfigCassandra)(nil)).Elem()
}

func (i *serviceCassandraUserConfigCassandraPtrType) ToServiceCassandraUserConfigCassandraPtrOutput() ServiceCassandraUserConfigCassandraPtrOutput {
	return i.ToServiceCassandraUserConfigCassandraPtrOutputWithContext(context.Background())
}

func (i *serviceCassandraUserConfigCassandraPtrType) ToServiceCassandraUserConfigCassandraPtrOutputWithContext(ctx context.Context) ServiceCassandraUserConfigCassandraPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCassandraUserConfigCassandraPtrOutput)
}

type ServiceCassandraUserConfigCassandraOutput struct{ *pulumi.OutputState }

func (ServiceCassandraUserConfigCassandraOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCassandraUserConfigCassandra)(nil)).Elem()
}

func (o ServiceCassandraUserConfigCassandraOutput) ToServiceCassandraUserConfigCassandraOutput() ServiceCassandraUserConfigCassandraOutput {
	return o
}

func (o ServiceCassandraUserConfigCassandraOutput) ToServiceCassandraUserConfigCassandraOutputWithContext(ctx context.Context) ServiceCassandraUserConfigCassandraOutput {
	return o
}

func (o ServiceCassandraUserConfigCassandraOutput) ToServiceCassandraUserConfigCassandraPtrOutput() ServiceCassandraUserConfigCassandraPtrOutput {
	return o.ToServiceCassandraUserConfigCassandraPtrOutputWithContext(context.Background())
}

func (o ServiceCassandraUserConfigCassandraOutput) ToServiceCassandraUserConfigCassandraPtrOutputWithContext(ctx context.Context) ServiceCassandraUserConfigCassandraPtrOutput {
	return o.ApplyT(func(v ServiceCassandraUserConfigCassandra) *ServiceCassandraUserConfigCassandra {
		return &v
	}).(ServiceCassandraUserConfigCassandraPtrOutput)
}
func (o ServiceCassandraUserConfigCassandraOutput) BatchSizeFailThresholdInKb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceCassandraUserConfigCassandra) *string { return v.BatchSizeFailThresholdInKb }).(pulumi.StringPtrOutput)
}

func (o ServiceCassandraUserConfigCassandraOutput) BatchSizeWarnThresholdInKb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceCassandraUserConfigCassandra) *string { return v.BatchSizeWarnThresholdInKb }).(pulumi.StringPtrOutput)
}

type ServiceCassandraUserConfigCassandraPtrOutput struct{ *pulumi.OutputState }

func (ServiceCassandraUserConfigCassandraPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCassandraUserConfigCassandra)(nil)).Elem()
}

func (o ServiceCassandraUserConfigCassandraPtrOutput) ToServiceCassandraUserConfigCassandraPtrOutput() ServiceCassandraUserConfigCassandraPtrOutput {
	return o
}

func (o ServiceCassandraUserConfigCassandraPtrOutput) ToServiceCassandraUserConfigCassandraPtrOutputWithContext(ctx context.Context) ServiceCassandraUserConfigCassandraPtrOutput {
	return o
}

func (o ServiceCassandraUserConfigCassandraPtrOutput) Elem() ServiceCassandraUserConfigCassandraOutput {
	return o.ApplyT(func(v *ServiceCassandraUserConfigCassandra) ServiceCassandraUserConfigCassandra { return *v }).(ServiceCassandraUserConfigCassandraOutput)
}

func (o ServiceCassandraUserConfigCassandraPtrOutput) BatchSizeFailThresholdInKb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceCassandraUserConfigCassandra) *string {
		if v == nil {
			return nil
		}
		return v.BatchSizeFailThresholdInKb
	}).(pulumi.StringPtrOutput)
}

func (o ServiceCassandraUserConfigCassandraPtrOutput) BatchSizeWarnThresholdInKb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceCassandraUserConfigCassandra) *string {
		if v == nil {
			return nil
		}
		return v.BatchSizeWarnThresholdInKb
	}).(pulumi.StringPtrOutput)
}

type ServiceCassandraUserConfigPrivateAccess struct {
	Prometheus *string `pulumi:"prometheus"`
}

// ServiceCassandraUserConfigPrivateAccessInput is an input type that accepts ServiceCassandraUserConfigPrivateAccessArgs and ServiceCassandraUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `ServiceCassandraUserConfigPrivateAccessInput` via:
//
//          ServiceCassandraUserConfigPrivateAccessArgs{...}
type ServiceCassandraUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToServiceCassandraUserConfigPrivateAccessOutput() ServiceCassandraUserConfigPrivateAccessOutput
	ToServiceCassandraUserConfigPrivateAccessOutputWithContext(context.Context) ServiceCassandraUserConfigPrivateAccessOutput
}

type ServiceCassandraUserConfigPrivateAccessArgs struct {
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (ServiceCassandraUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCassandraUserConfigPrivateAccess)(nil)).Elem()
}

func (i ServiceCassandraUserConfigPrivateAccessArgs) ToServiceCassandraUserConfigPrivateAccessOutput() ServiceCassandraUserConfigPrivateAccessOutput {
	return i.ToServiceCassandraUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i ServiceCassandraUserConfigPrivateAccessArgs) ToServiceCassandraUserConfigPrivateAccessOutputWithContext(ctx context.Context) ServiceCassandraUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCassandraUserConfigPrivateAccessOutput)
}

func (i ServiceCassandraUserConfigPrivateAccessArgs) ToServiceCassandraUserConfigPrivateAccessPtrOutput() ServiceCassandraUserConfigPrivateAccessPtrOutput {
	return i.ToServiceCassandraUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i ServiceCassandraUserConfigPrivateAccessArgs) ToServiceCassandraUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceCassandraUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCassandraUserConfigPrivateAccessOutput).ToServiceCassandraUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// ServiceCassandraUserConfigPrivateAccessPtrInput is an input type that accepts ServiceCassandraUserConfigPrivateAccessArgs, ServiceCassandraUserConfigPrivateAccessPtr and ServiceCassandraUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `ServiceCassandraUserConfigPrivateAccessPtrInput` via:
//
//          ServiceCassandraUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type ServiceCassandraUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToServiceCassandraUserConfigPrivateAccessPtrOutput() ServiceCassandraUserConfigPrivateAccessPtrOutput
	ToServiceCassandraUserConfigPrivateAccessPtrOutputWithContext(context.Context) ServiceCassandraUserConfigPrivateAccessPtrOutput
}

type serviceCassandraUserConfigPrivateAccessPtrType ServiceCassandraUserConfigPrivateAccessArgs

func ServiceCassandraUserConfigPrivateAccessPtr(v *ServiceCassandraUserConfigPrivateAccessArgs) ServiceCassandraUserConfigPrivateAccessPtrInput {
	return (*serviceCassandraUserConfigPrivateAccessPtrType)(v)
}

func (*serviceCassandraUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCassandraUserConfigPrivateAccess)(nil)).Elem()
}

func (i *serviceCassandraUserConfigPrivateAccessPtrType) ToServiceCassandraUserConfigPrivateAccessPtrOutput() ServiceCassandraUserConfigPrivateAccessPtrOutput {
	return i.ToServiceCassandraUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *serviceCassandraUserConfigPrivateAccessPtrType) ToServiceCassandraUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceCassandraUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCassandraUserConfigPrivateAccessPtrOutput)
}

type ServiceCassandraUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (ServiceCassandraUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCassandraUserConfigPrivateAccess)(nil)).Elem()
}

func (o ServiceCassandraUserConfigPrivateAccessOutput) ToServiceCassandraUserConfigPrivateAccessOutput() ServiceCassandraUserConfigPrivateAccessOutput {
	return o
}

func (o ServiceCassandraUserConfigPrivateAccessOutput) ToServiceCassandraUserConfigPrivateAccessOutputWithContext(ctx context.Context) ServiceCassandraUserConfigPrivateAccessOutput {
	return o
}

func (o ServiceCassandraUserConfigPrivateAccessOutput) ToServiceCassandraUserConfigPrivateAccessPtrOutput() ServiceCassandraUserConfigPrivateAccessPtrOutput {
	return o.ToServiceCassandraUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o ServiceCassandraUserConfigPrivateAccessOutput) ToServiceCassandraUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceCassandraUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v ServiceCassandraUserConfigPrivateAccess) *ServiceCassandraUserConfigPrivateAccess {
		return &v
	}).(ServiceCassandraUserConfigPrivateAccessPtrOutput)
}
func (o ServiceCassandraUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceCassandraUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type ServiceCassandraUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (ServiceCassandraUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCassandraUserConfigPrivateAccess)(nil)).Elem()
}

func (o ServiceCassandraUserConfigPrivateAccessPtrOutput) ToServiceCassandraUserConfigPrivateAccessPtrOutput() ServiceCassandraUserConfigPrivateAccessPtrOutput {
	return o
}

func (o ServiceCassandraUserConfigPrivateAccessPtrOutput) ToServiceCassandraUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceCassandraUserConfigPrivateAccessPtrOutput {
	return o
}

func (o ServiceCassandraUserConfigPrivateAccessPtrOutput) Elem() ServiceCassandraUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *ServiceCassandraUserConfigPrivateAccess) ServiceCassandraUserConfigPrivateAccess { return *v }).(ServiceCassandraUserConfigPrivateAccessOutput)
}

func (o ServiceCassandraUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceCassandraUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type ServiceCassandraUserConfigPublicAccess struct {
	Prometheus *string `pulumi:"prometheus"`
}

// ServiceCassandraUserConfigPublicAccessInput is an input type that accepts ServiceCassandraUserConfigPublicAccessArgs and ServiceCassandraUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `ServiceCassandraUserConfigPublicAccessInput` via:
//
//          ServiceCassandraUserConfigPublicAccessArgs{...}
type ServiceCassandraUserConfigPublicAccessInput interface {
	pulumi.Input

	ToServiceCassandraUserConfigPublicAccessOutput() ServiceCassandraUserConfigPublicAccessOutput
	ToServiceCassandraUserConfigPublicAccessOutputWithContext(context.Context) ServiceCassandraUserConfigPublicAccessOutput
}

type ServiceCassandraUserConfigPublicAccessArgs struct {
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (ServiceCassandraUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCassandraUserConfigPublicAccess)(nil)).Elem()
}

func (i ServiceCassandraUserConfigPublicAccessArgs) ToServiceCassandraUserConfigPublicAccessOutput() ServiceCassandraUserConfigPublicAccessOutput {
	return i.ToServiceCassandraUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i ServiceCassandraUserConfigPublicAccessArgs) ToServiceCassandraUserConfigPublicAccessOutputWithContext(ctx context.Context) ServiceCassandraUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCassandraUserConfigPublicAccessOutput)
}

func (i ServiceCassandraUserConfigPublicAccessArgs) ToServiceCassandraUserConfigPublicAccessPtrOutput() ServiceCassandraUserConfigPublicAccessPtrOutput {
	return i.ToServiceCassandraUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i ServiceCassandraUserConfigPublicAccessArgs) ToServiceCassandraUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceCassandraUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCassandraUserConfigPublicAccessOutput).ToServiceCassandraUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// ServiceCassandraUserConfigPublicAccessPtrInput is an input type that accepts ServiceCassandraUserConfigPublicAccessArgs, ServiceCassandraUserConfigPublicAccessPtr and ServiceCassandraUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `ServiceCassandraUserConfigPublicAccessPtrInput` via:
//
//          ServiceCassandraUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type ServiceCassandraUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToServiceCassandraUserConfigPublicAccessPtrOutput() ServiceCassandraUserConfigPublicAccessPtrOutput
	ToServiceCassandraUserConfigPublicAccessPtrOutputWithContext(context.Context) ServiceCassandraUserConfigPublicAccessPtrOutput
}

type serviceCassandraUserConfigPublicAccessPtrType ServiceCassandraUserConfigPublicAccessArgs

func ServiceCassandraUserConfigPublicAccessPtr(v *ServiceCassandraUserConfigPublicAccessArgs) ServiceCassandraUserConfigPublicAccessPtrInput {
	return (*serviceCassandraUserConfigPublicAccessPtrType)(v)
}

func (*serviceCassandraUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCassandraUserConfigPublicAccess)(nil)).Elem()
}

func (i *serviceCassandraUserConfigPublicAccessPtrType) ToServiceCassandraUserConfigPublicAccessPtrOutput() ServiceCassandraUserConfigPublicAccessPtrOutput {
	return i.ToServiceCassandraUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *serviceCassandraUserConfigPublicAccessPtrType) ToServiceCassandraUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceCassandraUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCassandraUserConfigPublicAccessPtrOutput)
}

type ServiceCassandraUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (ServiceCassandraUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCassandraUserConfigPublicAccess)(nil)).Elem()
}

func (o ServiceCassandraUserConfigPublicAccessOutput) ToServiceCassandraUserConfigPublicAccessOutput() ServiceCassandraUserConfigPublicAccessOutput {
	return o
}

func (o ServiceCassandraUserConfigPublicAccessOutput) ToServiceCassandraUserConfigPublicAccessOutputWithContext(ctx context.Context) ServiceCassandraUserConfigPublicAccessOutput {
	return o
}

func (o ServiceCassandraUserConfigPublicAccessOutput) ToServiceCassandraUserConfigPublicAccessPtrOutput() ServiceCassandraUserConfigPublicAccessPtrOutput {
	return o.ToServiceCassandraUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o ServiceCassandraUserConfigPublicAccessOutput) ToServiceCassandraUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceCassandraUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v ServiceCassandraUserConfigPublicAccess) *ServiceCassandraUserConfigPublicAccess {
		return &v
	}).(ServiceCassandraUserConfigPublicAccessPtrOutput)
}
func (o ServiceCassandraUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceCassandraUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type ServiceCassandraUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (ServiceCassandraUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCassandraUserConfigPublicAccess)(nil)).Elem()
}

func (o ServiceCassandraUserConfigPublicAccessPtrOutput) ToServiceCassandraUserConfigPublicAccessPtrOutput() ServiceCassandraUserConfigPublicAccessPtrOutput {
	return o
}

func (o ServiceCassandraUserConfigPublicAccessPtrOutput) ToServiceCassandraUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceCassandraUserConfigPublicAccessPtrOutput {
	return o
}

func (o ServiceCassandraUserConfigPublicAccessPtrOutput) Elem() ServiceCassandraUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *ServiceCassandraUserConfigPublicAccess) ServiceCassandraUserConfigPublicAccess { return *v }).(ServiceCassandraUserConfigPublicAccessOutput)
}

func (o ServiceCassandraUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceCassandraUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type ServiceComponent struct {
	Component                 *string `pulumi:"component"`
	Host                      *string `pulumi:"host"`
	KafkaAuthenticationMethod *string `pulumi:"kafkaAuthenticationMethod"`
	Port                      *int    `pulumi:"port"`
	Route                     *string `pulumi:"route"`
	Ssl                       *bool   `pulumi:"ssl"`
	Usage                     *string `pulumi:"usage"`
}

// ServiceComponentInput is an input type that accepts ServiceComponentArgs and ServiceComponentOutput values.
// You can construct a concrete instance of `ServiceComponentInput` via:
//
//          ServiceComponentArgs{...}
type ServiceComponentInput interface {
	pulumi.Input

	ToServiceComponentOutput() ServiceComponentOutput
	ToServiceComponentOutputWithContext(context.Context) ServiceComponentOutput
}

type ServiceComponentArgs struct {
	Component                 pulumi.StringPtrInput `pulumi:"component"`
	Host                      pulumi.StringPtrInput `pulumi:"host"`
	KafkaAuthenticationMethod pulumi.StringPtrInput `pulumi:"kafkaAuthenticationMethod"`
	Port                      pulumi.IntPtrInput    `pulumi:"port"`
	Route                     pulumi.StringPtrInput `pulumi:"route"`
	Ssl                       pulumi.BoolPtrInput   `pulumi:"ssl"`
	Usage                     pulumi.StringPtrInput `pulumi:"usage"`
}

func (ServiceComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceComponent)(nil)).Elem()
}

func (i ServiceComponentArgs) ToServiceComponentOutput() ServiceComponentOutput {
	return i.ToServiceComponentOutputWithContext(context.Background())
}

func (i ServiceComponentArgs) ToServiceComponentOutputWithContext(ctx context.Context) ServiceComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceComponentOutput)
}

// ServiceComponentArrayInput is an input type that accepts ServiceComponentArray and ServiceComponentArrayOutput values.
// You can construct a concrete instance of `ServiceComponentArrayInput` via:
//
//          ServiceComponentArray{ ServiceComponentArgs{...} }
type ServiceComponentArrayInput interface {
	pulumi.Input

	ToServiceComponentArrayOutput() ServiceComponentArrayOutput
	ToServiceComponentArrayOutputWithContext(context.Context) ServiceComponentArrayOutput
}

type ServiceComponentArray []ServiceComponentInput

func (ServiceComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceComponent)(nil)).Elem()
}

func (i ServiceComponentArray) ToServiceComponentArrayOutput() ServiceComponentArrayOutput {
	return i.ToServiceComponentArrayOutputWithContext(context.Background())
}

func (i ServiceComponentArray) ToServiceComponentArrayOutputWithContext(ctx context.Context) ServiceComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceComponentArrayOutput)
}

type ServiceComponentOutput struct{ *pulumi.OutputState }

func (ServiceComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceComponent)(nil)).Elem()
}

func (o ServiceComponentOutput) ToServiceComponentOutput() ServiceComponentOutput {
	return o
}

func (o ServiceComponentOutput) ToServiceComponentOutputWithContext(ctx context.Context) ServiceComponentOutput {
	return o
}

func (o ServiceComponentOutput) Component() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceComponent) *string { return v.Component }).(pulumi.StringPtrOutput)
}

func (o ServiceComponentOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceComponent) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o ServiceComponentOutput) KafkaAuthenticationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceComponent) *string { return v.KafkaAuthenticationMethod }).(pulumi.StringPtrOutput)
}

func (o ServiceComponentOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceComponent) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o ServiceComponentOutput) Route() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceComponent) *string { return v.Route }).(pulumi.StringPtrOutput)
}

func (o ServiceComponentOutput) Ssl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceComponent) *bool { return v.Ssl }).(pulumi.BoolPtrOutput)
}

func (o ServiceComponentOutput) Usage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceComponent) *string { return v.Usage }).(pulumi.StringPtrOutput)
}

type ServiceComponentArrayOutput struct{ *pulumi.OutputState }

func (ServiceComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceComponent)(nil)).Elem()
}

func (o ServiceComponentArrayOutput) ToServiceComponentArrayOutput() ServiceComponentArrayOutput {
	return o
}

func (o ServiceComponentArrayOutput) ToServiceComponentArrayOutputWithContext(ctx context.Context) ServiceComponentArrayOutput {
	return o
}

func (o ServiceComponentArrayOutput) Index(i pulumi.IntInput) ServiceComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceComponent {
		return vs[0].([]ServiceComponent)[vs[1].(int)]
	}).(ServiceComponentOutput)
}

type ServiceElasticsearch struct {
	KibanaUri *string `pulumi:"kibanaUri"`
}

// ServiceElasticsearchInput is an input type that accepts ServiceElasticsearchArgs and ServiceElasticsearchOutput values.
// You can construct a concrete instance of `ServiceElasticsearchInput` via:
//
//          ServiceElasticsearchArgs{...}
type ServiceElasticsearchInput interface {
	pulumi.Input

	ToServiceElasticsearchOutput() ServiceElasticsearchOutput
	ToServiceElasticsearchOutputWithContext(context.Context) ServiceElasticsearchOutput
}

type ServiceElasticsearchArgs struct {
	KibanaUri pulumi.StringPtrInput `pulumi:"kibanaUri"`
}

func (ServiceElasticsearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceElasticsearch)(nil)).Elem()
}

func (i ServiceElasticsearchArgs) ToServiceElasticsearchOutput() ServiceElasticsearchOutput {
	return i.ToServiceElasticsearchOutputWithContext(context.Background())
}

func (i ServiceElasticsearchArgs) ToServiceElasticsearchOutputWithContext(ctx context.Context) ServiceElasticsearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceElasticsearchOutput)
}

func (i ServiceElasticsearchArgs) ToServiceElasticsearchPtrOutput() ServiceElasticsearchPtrOutput {
	return i.ToServiceElasticsearchPtrOutputWithContext(context.Background())
}

func (i ServiceElasticsearchArgs) ToServiceElasticsearchPtrOutputWithContext(ctx context.Context) ServiceElasticsearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceElasticsearchOutput).ToServiceElasticsearchPtrOutputWithContext(ctx)
}

// ServiceElasticsearchPtrInput is an input type that accepts ServiceElasticsearchArgs, ServiceElasticsearchPtr and ServiceElasticsearchPtrOutput values.
// You can construct a concrete instance of `ServiceElasticsearchPtrInput` via:
//
//          ServiceElasticsearchArgs{...}
//
//  or:
//
//          nil
type ServiceElasticsearchPtrInput interface {
	pulumi.Input

	ToServiceElasticsearchPtrOutput() ServiceElasticsearchPtrOutput
	ToServiceElasticsearchPtrOutputWithContext(context.Context) ServiceElasticsearchPtrOutput
}

type serviceElasticsearchPtrType ServiceElasticsearchArgs

func ServiceElasticsearchPtr(v *ServiceElasticsearchArgs) ServiceElasticsearchPtrInput {
	return (*serviceElasticsearchPtrType)(v)
}

func (*serviceElasticsearchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceElasticsearch)(nil)).Elem()
}

func (i *serviceElasticsearchPtrType) ToServiceElasticsearchPtrOutput() ServiceElasticsearchPtrOutput {
	return i.ToServiceElasticsearchPtrOutputWithContext(context.Background())
}

func (i *serviceElasticsearchPtrType) ToServiceElasticsearchPtrOutputWithContext(ctx context.Context) ServiceElasticsearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceElasticsearchPtrOutput)
}

type ServiceElasticsearchOutput struct{ *pulumi.OutputState }

func (ServiceElasticsearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceElasticsearch)(nil)).Elem()
}

func (o ServiceElasticsearchOutput) ToServiceElasticsearchOutput() ServiceElasticsearchOutput {
	return o
}

func (o ServiceElasticsearchOutput) ToServiceElasticsearchOutputWithContext(ctx context.Context) ServiceElasticsearchOutput {
	return o
}

func (o ServiceElasticsearchOutput) ToServiceElasticsearchPtrOutput() ServiceElasticsearchPtrOutput {
	return o.ToServiceElasticsearchPtrOutputWithContext(context.Background())
}

func (o ServiceElasticsearchOutput) ToServiceElasticsearchPtrOutputWithContext(ctx context.Context) ServiceElasticsearchPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearch) *ServiceElasticsearch {
		return &v
	}).(ServiceElasticsearchPtrOutput)
}
func (o ServiceElasticsearchOutput) KibanaUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearch) *string { return v.KibanaUri }).(pulumi.StringPtrOutput)
}

type ServiceElasticsearchPtrOutput struct{ *pulumi.OutputState }

func (ServiceElasticsearchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceElasticsearch)(nil)).Elem()
}

func (o ServiceElasticsearchPtrOutput) ToServiceElasticsearchPtrOutput() ServiceElasticsearchPtrOutput {
	return o
}

func (o ServiceElasticsearchPtrOutput) ToServiceElasticsearchPtrOutputWithContext(ctx context.Context) ServiceElasticsearchPtrOutput {
	return o
}

func (o ServiceElasticsearchPtrOutput) Elem() ServiceElasticsearchOutput {
	return o.ApplyT(func(v *ServiceElasticsearch) ServiceElasticsearch { return *v }).(ServiceElasticsearchOutput)
}

func (o ServiceElasticsearchPtrOutput) KibanaUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.KibanaUri
	}).(pulumi.StringPtrOutput)
}

type ServiceElasticsearchUserConfig struct {
	CustomDomain                       *string                                          `pulumi:"customDomain"`
	DisableReplicationFactorAdjustment *string                                          `pulumi:"disableReplicationFactorAdjustment"`
	Elasticsearch                      *ServiceElasticsearchUserConfigElasticsearch     `pulumi:"elasticsearch"`
	ElasticsearchVersion               *string                                          `pulumi:"elasticsearchVersion"`
	IndexPatterns                      []ServiceElasticsearchUserConfigIndexPattern     `pulumi:"indexPatterns"`
	IndexTemplate                      *ServiceElasticsearchUserConfigIndexTemplate     `pulumi:"indexTemplate"`
	IpFilters                          []string                                         `pulumi:"ipFilters"`
	Kibana                             *ServiceElasticsearchUserConfigKibana            `pulumi:"kibana"`
	MaxIndexCount                      *string                                          `pulumi:"maxIndexCount"`
	PrivateAccess                      *ServiceElasticsearchUserConfigPrivateAccess     `pulumi:"privateAccess"`
	PrivatelinkAccess                  *ServiceElasticsearchUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	ProjectToForkFrom                  *string                                          `pulumi:"projectToForkFrom"`
	PublicAccess                       *ServiceElasticsearchUserConfigPublicAccess      `pulumi:"publicAccess"`
	RecoveryBasebackupName             *string                                          `pulumi:"recoveryBasebackupName"`
	ServiceToForkFrom                  *string                                          `pulumi:"serviceToForkFrom"`
}

// ServiceElasticsearchUserConfigInput is an input type that accepts ServiceElasticsearchUserConfigArgs and ServiceElasticsearchUserConfigOutput values.
// You can construct a concrete instance of `ServiceElasticsearchUserConfigInput` via:
//
//          ServiceElasticsearchUserConfigArgs{...}
type ServiceElasticsearchUserConfigInput interface {
	pulumi.Input

	ToServiceElasticsearchUserConfigOutput() ServiceElasticsearchUserConfigOutput
	ToServiceElasticsearchUserConfigOutputWithContext(context.Context) ServiceElasticsearchUserConfigOutput
}

type ServiceElasticsearchUserConfigArgs struct {
	CustomDomain                       pulumi.StringPtrInput                                   `pulumi:"customDomain"`
	DisableReplicationFactorAdjustment pulumi.StringPtrInput                                   `pulumi:"disableReplicationFactorAdjustment"`
	Elasticsearch                      ServiceElasticsearchUserConfigElasticsearchPtrInput     `pulumi:"elasticsearch"`
	ElasticsearchVersion               pulumi.StringPtrInput                                   `pulumi:"elasticsearchVersion"`
	IndexPatterns                      ServiceElasticsearchUserConfigIndexPatternArrayInput    `pulumi:"indexPatterns"`
	IndexTemplate                      ServiceElasticsearchUserConfigIndexTemplatePtrInput     `pulumi:"indexTemplate"`
	IpFilters                          pulumi.StringArrayInput                                 `pulumi:"ipFilters"`
	Kibana                             ServiceElasticsearchUserConfigKibanaPtrInput            `pulumi:"kibana"`
	MaxIndexCount                      pulumi.StringPtrInput                                   `pulumi:"maxIndexCount"`
	PrivateAccess                      ServiceElasticsearchUserConfigPrivateAccessPtrInput     `pulumi:"privateAccess"`
	PrivatelinkAccess                  ServiceElasticsearchUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	ProjectToForkFrom                  pulumi.StringPtrInput                                   `pulumi:"projectToForkFrom"`
	PublicAccess                       ServiceElasticsearchUserConfigPublicAccessPtrInput      `pulumi:"publicAccess"`
	RecoveryBasebackupName             pulumi.StringPtrInput                                   `pulumi:"recoveryBasebackupName"`
	ServiceToForkFrom                  pulumi.StringPtrInput                                   `pulumi:"serviceToForkFrom"`
}

func (ServiceElasticsearchUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceElasticsearchUserConfig)(nil)).Elem()
}

func (i ServiceElasticsearchUserConfigArgs) ToServiceElasticsearchUserConfigOutput() ServiceElasticsearchUserConfigOutput {
	return i.ToServiceElasticsearchUserConfigOutputWithContext(context.Background())
}

func (i ServiceElasticsearchUserConfigArgs) ToServiceElasticsearchUserConfigOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceElasticsearchUserConfigOutput)
}

func (i ServiceElasticsearchUserConfigArgs) ToServiceElasticsearchUserConfigPtrOutput() ServiceElasticsearchUserConfigPtrOutput {
	return i.ToServiceElasticsearchUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceElasticsearchUserConfigArgs) ToServiceElasticsearchUserConfigPtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceElasticsearchUserConfigOutput).ToServiceElasticsearchUserConfigPtrOutputWithContext(ctx)
}

// ServiceElasticsearchUserConfigPtrInput is an input type that accepts ServiceElasticsearchUserConfigArgs, ServiceElasticsearchUserConfigPtr and ServiceElasticsearchUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceElasticsearchUserConfigPtrInput` via:
//
//          ServiceElasticsearchUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceElasticsearchUserConfigPtrInput interface {
	pulumi.Input

	ToServiceElasticsearchUserConfigPtrOutput() ServiceElasticsearchUserConfigPtrOutput
	ToServiceElasticsearchUserConfigPtrOutputWithContext(context.Context) ServiceElasticsearchUserConfigPtrOutput
}

type serviceElasticsearchUserConfigPtrType ServiceElasticsearchUserConfigArgs

func ServiceElasticsearchUserConfigPtr(v *ServiceElasticsearchUserConfigArgs) ServiceElasticsearchUserConfigPtrInput {
	return (*serviceElasticsearchUserConfigPtrType)(v)
}

func (*serviceElasticsearchUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceElasticsearchUserConfig)(nil)).Elem()
}

func (i *serviceElasticsearchUserConfigPtrType) ToServiceElasticsearchUserConfigPtrOutput() ServiceElasticsearchUserConfigPtrOutput {
	return i.ToServiceElasticsearchUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceElasticsearchUserConfigPtrType) ToServiceElasticsearchUserConfigPtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceElasticsearchUserConfigPtrOutput)
}

type ServiceElasticsearchUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceElasticsearchUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceElasticsearchUserConfig)(nil)).Elem()
}

func (o ServiceElasticsearchUserConfigOutput) ToServiceElasticsearchUserConfigOutput() ServiceElasticsearchUserConfigOutput {
	return o
}

func (o ServiceElasticsearchUserConfigOutput) ToServiceElasticsearchUserConfigOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigOutput {
	return o
}

func (o ServiceElasticsearchUserConfigOutput) ToServiceElasticsearchUserConfigPtrOutput() ServiceElasticsearchUserConfigPtrOutput {
	return o.ToServiceElasticsearchUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceElasticsearchUserConfigOutput) ToServiceElasticsearchUserConfigPtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfig) *ServiceElasticsearchUserConfig {
		return &v
	}).(ServiceElasticsearchUserConfigPtrOutput)
}
func (o ServiceElasticsearchUserConfigOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfig) *string { return v.CustomDomain }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigOutput) DisableReplicationFactorAdjustment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfig) *string { return v.DisableReplicationFactorAdjustment }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigOutput) Elasticsearch() ServiceElasticsearchUserConfigElasticsearchPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfig) *ServiceElasticsearchUserConfigElasticsearch {
		return v.Elasticsearch
	}).(ServiceElasticsearchUserConfigElasticsearchPtrOutput)
}

func (o ServiceElasticsearchUserConfigOutput) ElasticsearchVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfig) *string { return v.ElasticsearchVersion }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigOutput) IndexPatterns() ServiceElasticsearchUserConfigIndexPatternArrayOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfig) []ServiceElasticsearchUserConfigIndexPattern {
		return v.IndexPatterns
	}).(ServiceElasticsearchUserConfigIndexPatternArrayOutput)
}

func (o ServiceElasticsearchUserConfigOutput) IndexTemplate() ServiceElasticsearchUserConfigIndexTemplatePtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfig) *ServiceElasticsearchUserConfigIndexTemplate {
		return v.IndexTemplate
	}).(ServiceElasticsearchUserConfigIndexTemplatePtrOutput)
}

func (o ServiceElasticsearchUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

func (o ServiceElasticsearchUserConfigOutput) Kibana() ServiceElasticsearchUserConfigKibanaPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfig) *ServiceElasticsearchUserConfigKibana { return v.Kibana }).(ServiceElasticsearchUserConfigKibanaPtrOutput)
}

func (o ServiceElasticsearchUserConfigOutput) MaxIndexCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfig) *string { return v.MaxIndexCount }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigOutput) PrivateAccess() ServiceElasticsearchUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfig) *ServiceElasticsearchUserConfigPrivateAccess {
		return v.PrivateAccess
	}).(ServiceElasticsearchUserConfigPrivateAccessPtrOutput)
}

func (o ServiceElasticsearchUserConfigOutput) PrivatelinkAccess() ServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfig) *ServiceElasticsearchUserConfigPrivatelinkAccess {
		return v.PrivatelinkAccess
	}).(ServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput)
}

func (o ServiceElasticsearchUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigOutput) PublicAccess() ServiceElasticsearchUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfig) *ServiceElasticsearchUserConfigPublicAccess {
		return v.PublicAccess
	}).(ServiceElasticsearchUserConfigPublicAccessPtrOutput)
}

func (o ServiceElasticsearchUserConfigOutput) RecoveryBasebackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfig) *string { return v.RecoveryBasebackupName }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

type ServiceElasticsearchUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceElasticsearchUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceElasticsearchUserConfig)(nil)).Elem()
}

func (o ServiceElasticsearchUserConfigPtrOutput) ToServiceElasticsearchUserConfigPtrOutput() ServiceElasticsearchUserConfigPtrOutput {
	return o
}

func (o ServiceElasticsearchUserConfigPtrOutput) ToServiceElasticsearchUserConfigPtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigPtrOutput {
	return o
}

func (o ServiceElasticsearchUserConfigPtrOutput) Elem() ServiceElasticsearchUserConfigOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfig) ServiceElasticsearchUserConfig { return *v }).(ServiceElasticsearchUserConfigOutput)
}

func (o ServiceElasticsearchUserConfigPtrOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.CustomDomain
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigPtrOutput) DisableReplicationFactorAdjustment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.DisableReplicationFactorAdjustment
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigPtrOutput) Elasticsearch() ServiceElasticsearchUserConfigElasticsearchPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfig) *ServiceElasticsearchUserConfigElasticsearch {
		if v == nil {
			return nil
		}
		return v.Elasticsearch
	}).(ServiceElasticsearchUserConfigElasticsearchPtrOutput)
}

func (o ServiceElasticsearchUserConfigPtrOutput) ElasticsearchVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ElasticsearchVersion
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigPtrOutput) IndexPatterns() ServiceElasticsearchUserConfigIndexPatternArrayOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfig) []ServiceElasticsearchUserConfigIndexPattern {
		if v == nil {
			return nil
		}
		return v.IndexPatterns
	}).(ServiceElasticsearchUserConfigIndexPatternArrayOutput)
}

func (o ServiceElasticsearchUserConfigPtrOutput) IndexTemplate() ServiceElasticsearchUserConfigIndexTemplatePtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfig) *ServiceElasticsearchUserConfigIndexTemplate {
		if v == nil {
			return nil
		}
		return v.IndexTemplate
	}).(ServiceElasticsearchUserConfigIndexTemplatePtrOutput)
}

func (o ServiceElasticsearchUserConfigPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

func (o ServiceElasticsearchUserConfigPtrOutput) Kibana() ServiceElasticsearchUserConfigKibanaPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfig) *ServiceElasticsearchUserConfigKibana {
		if v == nil {
			return nil
		}
		return v.Kibana
	}).(ServiceElasticsearchUserConfigKibanaPtrOutput)
}

func (o ServiceElasticsearchUserConfigPtrOutput) MaxIndexCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.MaxIndexCount
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigPtrOutput) PrivateAccess() ServiceElasticsearchUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfig) *ServiceElasticsearchUserConfigPrivateAccess {
		if v == nil {
			return nil
		}
		return v.PrivateAccess
	}).(ServiceElasticsearchUserConfigPrivateAccessPtrOutput)
}

func (o ServiceElasticsearchUserConfigPtrOutput) PrivatelinkAccess() ServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfig) *ServiceElasticsearchUserConfigPrivatelinkAccess {
		if v == nil {
			return nil
		}
		return v.PrivatelinkAccess
	}).(ServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput)
}

func (o ServiceElasticsearchUserConfigPtrOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProjectToForkFrom
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigPtrOutput) PublicAccess() ServiceElasticsearchUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfig) *ServiceElasticsearchUserConfigPublicAccess {
		if v == nil {
			return nil
		}
		return v.PublicAccess
	}).(ServiceElasticsearchUserConfigPublicAccessPtrOutput)
}

func (o ServiceElasticsearchUserConfigPtrOutput) RecoveryBasebackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryBasebackupName
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigPtrOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceToForkFrom
	}).(pulumi.StringPtrOutput)
}

type ServiceElasticsearchUserConfigElasticsearch struct {
	ActionAutoCreateIndexEnabled       *string  `pulumi:"actionAutoCreateIndexEnabled"`
	ActionDestructiveRequiresName      *string  `pulumi:"actionDestructiveRequiresName"`
	ClusterMaxShardsPerNode            *string  `pulumi:"clusterMaxShardsPerNode"`
	HttpMaxContentLength               *string  `pulumi:"httpMaxContentLength"`
	HttpMaxHeaderSize                  *string  `pulumi:"httpMaxHeaderSize"`
	HttpMaxInitialLineLength           *string  `pulumi:"httpMaxInitialLineLength"`
	IndicesFielddataCacheSize          *string  `pulumi:"indicesFielddataCacheSize"`
	IndicesMemoryIndexBufferSize       *string  `pulumi:"indicesMemoryIndexBufferSize"`
	IndicesQueriesCacheSize            *string  `pulumi:"indicesQueriesCacheSize"`
	IndicesQueryBoolMaxClauseCount     *string  `pulumi:"indicesQueryBoolMaxClauseCount"`
	ReindexRemoteWhitelists            []string `pulumi:"reindexRemoteWhitelists"`
	SearchMaxBuckets                   *string  `pulumi:"searchMaxBuckets"`
	ThreadPoolAnalyzeQueueSize         *string  `pulumi:"threadPoolAnalyzeQueueSize"`
	ThreadPoolAnalyzeSize              *string  `pulumi:"threadPoolAnalyzeSize"`
	ThreadPoolForceMergeSize           *string  `pulumi:"threadPoolForceMergeSize"`
	ThreadPoolGetQueueSize             *string  `pulumi:"threadPoolGetQueueSize"`
	ThreadPoolGetSize                  *string  `pulumi:"threadPoolGetSize"`
	ThreadPoolIndexQueueSize           *string  `pulumi:"threadPoolIndexQueueSize"`
	ThreadPoolIndexSize                *string  `pulumi:"threadPoolIndexSize"`
	ThreadPoolSearchQueueSize          *string  `pulumi:"threadPoolSearchQueueSize"`
	ThreadPoolSearchSize               *string  `pulumi:"threadPoolSearchSize"`
	ThreadPoolSearchThrottledQueueSize *string  `pulumi:"threadPoolSearchThrottledQueueSize"`
	ThreadPoolSearchThrottledSize      *string  `pulumi:"threadPoolSearchThrottledSize"`
	ThreadPoolWriteQueueSize           *string  `pulumi:"threadPoolWriteQueueSize"`
	ThreadPoolWriteSize                *string  `pulumi:"threadPoolWriteSize"`
}

// ServiceElasticsearchUserConfigElasticsearchInput is an input type that accepts ServiceElasticsearchUserConfigElasticsearchArgs and ServiceElasticsearchUserConfigElasticsearchOutput values.
// You can construct a concrete instance of `ServiceElasticsearchUserConfigElasticsearchInput` via:
//
//          ServiceElasticsearchUserConfigElasticsearchArgs{...}
type ServiceElasticsearchUserConfigElasticsearchInput interface {
	pulumi.Input

	ToServiceElasticsearchUserConfigElasticsearchOutput() ServiceElasticsearchUserConfigElasticsearchOutput
	ToServiceElasticsearchUserConfigElasticsearchOutputWithContext(context.Context) ServiceElasticsearchUserConfigElasticsearchOutput
}

type ServiceElasticsearchUserConfigElasticsearchArgs struct {
	ActionAutoCreateIndexEnabled       pulumi.StringPtrInput   `pulumi:"actionAutoCreateIndexEnabled"`
	ActionDestructiveRequiresName      pulumi.StringPtrInput   `pulumi:"actionDestructiveRequiresName"`
	ClusterMaxShardsPerNode            pulumi.StringPtrInput   `pulumi:"clusterMaxShardsPerNode"`
	HttpMaxContentLength               pulumi.StringPtrInput   `pulumi:"httpMaxContentLength"`
	HttpMaxHeaderSize                  pulumi.StringPtrInput   `pulumi:"httpMaxHeaderSize"`
	HttpMaxInitialLineLength           pulumi.StringPtrInput   `pulumi:"httpMaxInitialLineLength"`
	IndicesFielddataCacheSize          pulumi.StringPtrInput   `pulumi:"indicesFielddataCacheSize"`
	IndicesMemoryIndexBufferSize       pulumi.StringPtrInput   `pulumi:"indicesMemoryIndexBufferSize"`
	IndicesQueriesCacheSize            pulumi.StringPtrInput   `pulumi:"indicesQueriesCacheSize"`
	IndicesQueryBoolMaxClauseCount     pulumi.StringPtrInput   `pulumi:"indicesQueryBoolMaxClauseCount"`
	ReindexRemoteWhitelists            pulumi.StringArrayInput `pulumi:"reindexRemoteWhitelists"`
	SearchMaxBuckets                   pulumi.StringPtrInput   `pulumi:"searchMaxBuckets"`
	ThreadPoolAnalyzeQueueSize         pulumi.StringPtrInput   `pulumi:"threadPoolAnalyzeQueueSize"`
	ThreadPoolAnalyzeSize              pulumi.StringPtrInput   `pulumi:"threadPoolAnalyzeSize"`
	ThreadPoolForceMergeSize           pulumi.StringPtrInput   `pulumi:"threadPoolForceMergeSize"`
	ThreadPoolGetQueueSize             pulumi.StringPtrInput   `pulumi:"threadPoolGetQueueSize"`
	ThreadPoolGetSize                  pulumi.StringPtrInput   `pulumi:"threadPoolGetSize"`
	ThreadPoolIndexQueueSize           pulumi.StringPtrInput   `pulumi:"threadPoolIndexQueueSize"`
	ThreadPoolIndexSize                pulumi.StringPtrInput   `pulumi:"threadPoolIndexSize"`
	ThreadPoolSearchQueueSize          pulumi.StringPtrInput   `pulumi:"threadPoolSearchQueueSize"`
	ThreadPoolSearchSize               pulumi.StringPtrInput   `pulumi:"threadPoolSearchSize"`
	ThreadPoolSearchThrottledQueueSize pulumi.StringPtrInput   `pulumi:"threadPoolSearchThrottledQueueSize"`
	ThreadPoolSearchThrottledSize      pulumi.StringPtrInput   `pulumi:"threadPoolSearchThrottledSize"`
	ThreadPoolWriteQueueSize           pulumi.StringPtrInput   `pulumi:"threadPoolWriteQueueSize"`
	ThreadPoolWriteSize                pulumi.StringPtrInput   `pulumi:"threadPoolWriteSize"`
}

func (ServiceElasticsearchUserConfigElasticsearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceElasticsearchUserConfigElasticsearch)(nil)).Elem()
}

func (i ServiceElasticsearchUserConfigElasticsearchArgs) ToServiceElasticsearchUserConfigElasticsearchOutput() ServiceElasticsearchUserConfigElasticsearchOutput {
	return i.ToServiceElasticsearchUserConfigElasticsearchOutputWithContext(context.Background())
}

func (i ServiceElasticsearchUserConfigElasticsearchArgs) ToServiceElasticsearchUserConfigElasticsearchOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigElasticsearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceElasticsearchUserConfigElasticsearchOutput)
}

func (i ServiceElasticsearchUserConfigElasticsearchArgs) ToServiceElasticsearchUserConfigElasticsearchPtrOutput() ServiceElasticsearchUserConfigElasticsearchPtrOutput {
	return i.ToServiceElasticsearchUserConfigElasticsearchPtrOutputWithContext(context.Background())
}

func (i ServiceElasticsearchUserConfigElasticsearchArgs) ToServiceElasticsearchUserConfigElasticsearchPtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigElasticsearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceElasticsearchUserConfigElasticsearchOutput).ToServiceElasticsearchUserConfigElasticsearchPtrOutputWithContext(ctx)
}

// ServiceElasticsearchUserConfigElasticsearchPtrInput is an input type that accepts ServiceElasticsearchUserConfigElasticsearchArgs, ServiceElasticsearchUserConfigElasticsearchPtr and ServiceElasticsearchUserConfigElasticsearchPtrOutput values.
// You can construct a concrete instance of `ServiceElasticsearchUserConfigElasticsearchPtrInput` via:
//
//          ServiceElasticsearchUserConfigElasticsearchArgs{...}
//
//  or:
//
//          nil
type ServiceElasticsearchUserConfigElasticsearchPtrInput interface {
	pulumi.Input

	ToServiceElasticsearchUserConfigElasticsearchPtrOutput() ServiceElasticsearchUserConfigElasticsearchPtrOutput
	ToServiceElasticsearchUserConfigElasticsearchPtrOutputWithContext(context.Context) ServiceElasticsearchUserConfigElasticsearchPtrOutput
}

type serviceElasticsearchUserConfigElasticsearchPtrType ServiceElasticsearchUserConfigElasticsearchArgs

func ServiceElasticsearchUserConfigElasticsearchPtr(v *ServiceElasticsearchUserConfigElasticsearchArgs) ServiceElasticsearchUserConfigElasticsearchPtrInput {
	return (*serviceElasticsearchUserConfigElasticsearchPtrType)(v)
}

func (*serviceElasticsearchUserConfigElasticsearchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceElasticsearchUserConfigElasticsearch)(nil)).Elem()
}

func (i *serviceElasticsearchUserConfigElasticsearchPtrType) ToServiceElasticsearchUserConfigElasticsearchPtrOutput() ServiceElasticsearchUserConfigElasticsearchPtrOutput {
	return i.ToServiceElasticsearchUserConfigElasticsearchPtrOutputWithContext(context.Background())
}

func (i *serviceElasticsearchUserConfigElasticsearchPtrType) ToServiceElasticsearchUserConfigElasticsearchPtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigElasticsearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceElasticsearchUserConfigElasticsearchPtrOutput)
}

type ServiceElasticsearchUserConfigElasticsearchOutput struct{ *pulumi.OutputState }

func (ServiceElasticsearchUserConfigElasticsearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceElasticsearchUserConfigElasticsearch)(nil)).Elem()
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) ToServiceElasticsearchUserConfigElasticsearchOutput() ServiceElasticsearchUserConfigElasticsearchOutput {
	return o
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) ToServiceElasticsearchUserConfigElasticsearchOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigElasticsearchOutput {
	return o
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) ToServiceElasticsearchUserConfigElasticsearchPtrOutput() ServiceElasticsearchUserConfigElasticsearchPtrOutput {
	return o.ToServiceElasticsearchUserConfigElasticsearchPtrOutputWithContext(context.Background())
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) ToServiceElasticsearchUserConfigElasticsearchPtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigElasticsearchPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigElasticsearch) *ServiceElasticsearchUserConfigElasticsearch {
		return &v
	}).(ServiceElasticsearchUserConfigElasticsearchPtrOutput)
}
func (o ServiceElasticsearchUserConfigElasticsearchOutput) ActionAutoCreateIndexEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigElasticsearch) *string { return v.ActionAutoCreateIndexEnabled }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) ActionDestructiveRequiresName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigElasticsearch) *string { return v.ActionDestructiveRequiresName }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) ClusterMaxShardsPerNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigElasticsearch) *string { return v.ClusterMaxShardsPerNode }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) HttpMaxContentLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigElasticsearch) *string { return v.HttpMaxContentLength }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) HttpMaxHeaderSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigElasticsearch) *string { return v.HttpMaxHeaderSize }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) HttpMaxInitialLineLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigElasticsearch) *string { return v.HttpMaxInitialLineLength }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) IndicesFielddataCacheSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigElasticsearch) *string { return v.IndicesFielddataCacheSize }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) IndicesMemoryIndexBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigElasticsearch) *string { return v.IndicesMemoryIndexBufferSize }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) IndicesQueriesCacheSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigElasticsearch) *string { return v.IndicesQueriesCacheSize }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) IndicesQueryBoolMaxClauseCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigElasticsearch) *string { return v.IndicesQueryBoolMaxClauseCount }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) ReindexRemoteWhitelists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigElasticsearch) []string { return v.ReindexRemoteWhitelists }).(pulumi.StringArrayOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) SearchMaxBuckets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigElasticsearch) *string { return v.SearchMaxBuckets }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) ThreadPoolAnalyzeQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolAnalyzeQueueSize }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) ThreadPoolAnalyzeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolAnalyzeSize }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) ThreadPoolForceMergeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolForceMergeSize }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) ThreadPoolGetQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolGetQueueSize }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) ThreadPoolGetSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolGetSize }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) ThreadPoolIndexQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolIndexQueueSize }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) ThreadPoolIndexSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolIndexSize }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) ThreadPoolSearchQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolSearchQueueSize }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) ThreadPoolSearchSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolSearchSize }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) ThreadPoolSearchThrottledQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigElasticsearch) *string {
		return v.ThreadPoolSearchThrottledQueueSize
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) ThreadPoolSearchThrottledSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolSearchThrottledSize }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) ThreadPoolWriteQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolWriteQueueSize }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchOutput) ThreadPoolWriteSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolWriteSize }).(pulumi.StringPtrOutput)
}

type ServiceElasticsearchUserConfigElasticsearchPtrOutput struct{ *pulumi.OutputState }

func (ServiceElasticsearchUserConfigElasticsearchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceElasticsearchUserConfigElasticsearch)(nil)).Elem()
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) ToServiceElasticsearchUserConfigElasticsearchPtrOutput() ServiceElasticsearchUserConfigElasticsearchPtrOutput {
	return o
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) ToServiceElasticsearchUserConfigElasticsearchPtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigElasticsearchPtrOutput {
	return o
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) Elem() ServiceElasticsearchUserConfigElasticsearchOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigElasticsearch) ServiceElasticsearchUserConfigElasticsearch {
		return *v
	}).(ServiceElasticsearchUserConfigElasticsearchOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) ActionAutoCreateIndexEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ActionAutoCreateIndexEnabled
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) ActionDestructiveRequiresName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ActionDestructiveRequiresName
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) ClusterMaxShardsPerNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ClusterMaxShardsPerNode
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) HttpMaxContentLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.HttpMaxContentLength
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) HttpMaxHeaderSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.HttpMaxHeaderSize
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) HttpMaxInitialLineLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.HttpMaxInitialLineLength
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) IndicesFielddataCacheSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.IndicesFielddataCacheSize
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) IndicesMemoryIndexBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.IndicesMemoryIndexBufferSize
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) IndicesQueriesCacheSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.IndicesQueriesCacheSize
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) IndicesQueryBoolMaxClauseCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.IndicesQueryBoolMaxClauseCount
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) ReindexRemoteWhitelists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigElasticsearch) []string {
		if v == nil {
			return nil
		}
		return v.ReindexRemoteWhitelists
	}).(pulumi.StringArrayOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) SearchMaxBuckets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.SearchMaxBuckets
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolAnalyzeQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolAnalyzeQueueSize
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolAnalyzeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolAnalyzeSize
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolForceMergeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolForceMergeSize
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolGetQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolGetQueueSize
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolGetSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolGetSize
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolIndexQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolIndexQueueSize
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolIndexSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolIndexSize
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolSearchQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolSearchQueueSize
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolSearchSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolSearchSize
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolSearchThrottledQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolSearchThrottledQueueSize
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolSearchThrottledSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolSearchThrottledSize
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolWriteQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolWriteQueueSize
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolWriteSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolWriteSize
	}).(pulumi.StringPtrOutput)
}

type ServiceElasticsearchUserConfigIndexPattern struct {
	MaxIndexCount    *string `pulumi:"maxIndexCount"`
	Pattern          *string `pulumi:"pattern"`
	SortingAlgorithm *string `pulumi:"sortingAlgorithm"`
}

// ServiceElasticsearchUserConfigIndexPatternInput is an input type that accepts ServiceElasticsearchUserConfigIndexPatternArgs and ServiceElasticsearchUserConfigIndexPatternOutput values.
// You can construct a concrete instance of `ServiceElasticsearchUserConfigIndexPatternInput` via:
//
//          ServiceElasticsearchUserConfigIndexPatternArgs{...}
type ServiceElasticsearchUserConfigIndexPatternInput interface {
	pulumi.Input

	ToServiceElasticsearchUserConfigIndexPatternOutput() ServiceElasticsearchUserConfigIndexPatternOutput
	ToServiceElasticsearchUserConfigIndexPatternOutputWithContext(context.Context) ServiceElasticsearchUserConfigIndexPatternOutput
}

type ServiceElasticsearchUserConfigIndexPatternArgs struct {
	MaxIndexCount    pulumi.StringPtrInput `pulumi:"maxIndexCount"`
	Pattern          pulumi.StringPtrInput `pulumi:"pattern"`
	SortingAlgorithm pulumi.StringPtrInput `pulumi:"sortingAlgorithm"`
}

func (ServiceElasticsearchUserConfigIndexPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceElasticsearchUserConfigIndexPattern)(nil)).Elem()
}

func (i ServiceElasticsearchUserConfigIndexPatternArgs) ToServiceElasticsearchUserConfigIndexPatternOutput() ServiceElasticsearchUserConfigIndexPatternOutput {
	return i.ToServiceElasticsearchUserConfigIndexPatternOutputWithContext(context.Background())
}

func (i ServiceElasticsearchUserConfigIndexPatternArgs) ToServiceElasticsearchUserConfigIndexPatternOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigIndexPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceElasticsearchUserConfigIndexPatternOutput)
}

// ServiceElasticsearchUserConfigIndexPatternArrayInput is an input type that accepts ServiceElasticsearchUserConfigIndexPatternArray and ServiceElasticsearchUserConfigIndexPatternArrayOutput values.
// You can construct a concrete instance of `ServiceElasticsearchUserConfigIndexPatternArrayInput` via:
//
//          ServiceElasticsearchUserConfigIndexPatternArray{ ServiceElasticsearchUserConfigIndexPatternArgs{...} }
type ServiceElasticsearchUserConfigIndexPatternArrayInput interface {
	pulumi.Input

	ToServiceElasticsearchUserConfigIndexPatternArrayOutput() ServiceElasticsearchUserConfigIndexPatternArrayOutput
	ToServiceElasticsearchUserConfigIndexPatternArrayOutputWithContext(context.Context) ServiceElasticsearchUserConfigIndexPatternArrayOutput
}

type ServiceElasticsearchUserConfigIndexPatternArray []ServiceElasticsearchUserConfigIndexPatternInput

func (ServiceElasticsearchUserConfigIndexPatternArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceElasticsearchUserConfigIndexPattern)(nil)).Elem()
}

func (i ServiceElasticsearchUserConfigIndexPatternArray) ToServiceElasticsearchUserConfigIndexPatternArrayOutput() ServiceElasticsearchUserConfigIndexPatternArrayOutput {
	return i.ToServiceElasticsearchUserConfigIndexPatternArrayOutputWithContext(context.Background())
}

func (i ServiceElasticsearchUserConfigIndexPatternArray) ToServiceElasticsearchUserConfigIndexPatternArrayOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigIndexPatternArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceElasticsearchUserConfigIndexPatternArrayOutput)
}

type ServiceElasticsearchUserConfigIndexPatternOutput struct{ *pulumi.OutputState }

func (ServiceElasticsearchUserConfigIndexPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceElasticsearchUserConfigIndexPattern)(nil)).Elem()
}

func (o ServiceElasticsearchUserConfigIndexPatternOutput) ToServiceElasticsearchUserConfigIndexPatternOutput() ServiceElasticsearchUserConfigIndexPatternOutput {
	return o
}

func (o ServiceElasticsearchUserConfigIndexPatternOutput) ToServiceElasticsearchUserConfigIndexPatternOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigIndexPatternOutput {
	return o
}

func (o ServiceElasticsearchUserConfigIndexPatternOutput) MaxIndexCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigIndexPattern) *string { return v.MaxIndexCount }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigIndexPatternOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigIndexPattern) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigIndexPatternOutput) SortingAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigIndexPattern) *string { return v.SortingAlgorithm }).(pulumi.StringPtrOutput)
}

type ServiceElasticsearchUserConfigIndexPatternArrayOutput struct{ *pulumi.OutputState }

func (ServiceElasticsearchUserConfigIndexPatternArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceElasticsearchUserConfigIndexPattern)(nil)).Elem()
}

func (o ServiceElasticsearchUserConfigIndexPatternArrayOutput) ToServiceElasticsearchUserConfigIndexPatternArrayOutput() ServiceElasticsearchUserConfigIndexPatternArrayOutput {
	return o
}

func (o ServiceElasticsearchUserConfigIndexPatternArrayOutput) ToServiceElasticsearchUserConfigIndexPatternArrayOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigIndexPatternArrayOutput {
	return o
}

func (o ServiceElasticsearchUserConfigIndexPatternArrayOutput) Index(i pulumi.IntInput) ServiceElasticsearchUserConfigIndexPatternOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceElasticsearchUserConfigIndexPattern {
		return vs[0].([]ServiceElasticsearchUserConfigIndexPattern)[vs[1].(int)]
	}).(ServiceElasticsearchUserConfigIndexPatternOutput)
}

type ServiceElasticsearchUserConfigIndexTemplate struct {
	MappingNestedObjectsLimit *string `pulumi:"mappingNestedObjectsLimit"`
	NumberOfReplicas          *string `pulumi:"numberOfReplicas"`
	NumberOfShards            *string `pulumi:"numberOfShards"`
}

// ServiceElasticsearchUserConfigIndexTemplateInput is an input type that accepts ServiceElasticsearchUserConfigIndexTemplateArgs and ServiceElasticsearchUserConfigIndexTemplateOutput values.
// You can construct a concrete instance of `ServiceElasticsearchUserConfigIndexTemplateInput` via:
//
//          ServiceElasticsearchUserConfigIndexTemplateArgs{...}
type ServiceElasticsearchUserConfigIndexTemplateInput interface {
	pulumi.Input

	ToServiceElasticsearchUserConfigIndexTemplateOutput() ServiceElasticsearchUserConfigIndexTemplateOutput
	ToServiceElasticsearchUserConfigIndexTemplateOutputWithContext(context.Context) ServiceElasticsearchUserConfigIndexTemplateOutput
}

type ServiceElasticsearchUserConfigIndexTemplateArgs struct {
	MappingNestedObjectsLimit pulumi.StringPtrInput `pulumi:"mappingNestedObjectsLimit"`
	NumberOfReplicas          pulumi.StringPtrInput `pulumi:"numberOfReplicas"`
	NumberOfShards            pulumi.StringPtrInput `pulumi:"numberOfShards"`
}

func (ServiceElasticsearchUserConfigIndexTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceElasticsearchUserConfigIndexTemplate)(nil)).Elem()
}

func (i ServiceElasticsearchUserConfigIndexTemplateArgs) ToServiceElasticsearchUserConfigIndexTemplateOutput() ServiceElasticsearchUserConfigIndexTemplateOutput {
	return i.ToServiceElasticsearchUserConfigIndexTemplateOutputWithContext(context.Background())
}

func (i ServiceElasticsearchUserConfigIndexTemplateArgs) ToServiceElasticsearchUserConfigIndexTemplateOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigIndexTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceElasticsearchUserConfigIndexTemplateOutput)
}

func (i ServiceElasticsearchUserConfigIndexTemplateArgs) ToServiceElasticsearchUserConfigIndexTemplatePtrOutput() ServiceElasticsearchUserConfigIndexTemplatePtrOutput {
	return i.ToServiceElasticsearchUserConfigIndexTemplatePtrOutputWithContext(context.Background())
}

func (i ServiceElasticsearchUserConfigIndexTemplateArgs) ToServiceElasticsearchUserConfigIndexTemplatePtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigIndexTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceElasticsearchUserConfigIndexTemplateOutput).ToServiceElasticsearchUserConfigIndexTemplatePtrOutputWithContext(ctx)
}

// ServiceElasticsearchUserConfigIndexTemplatePtrInput is an input type that accepts ServiceElasticsearchUserConfigIndexTemplateArgs, ServiceElasticsearchUserConfigIndexTemplatePtr and ServiceElasticsearchUserConfigIndexTemplatePtrOutput values.
// You can construct a concrete instance of `ServiceElasticsearchUserConfigIndexTemplatePtrInput` via:
//
//          ServiceElasticsearchUserConfigIndexTemplateArgs{...}
//
//  or:
//
//          nil
type ServiceElasticsearchUserConfigIndexTemplatePtrInput interface {
	pulumi.Input

	ToServiceElasticsearchUserConfigIndexTemplatePtrOutput() ServiceElasticsearchUserConfigIndexTemplatePtrOutput
	ToServiceElasticsearchUserConfigIndexTemplatePtrOutputWithContext(context.Context) ServiceElasticsearchUserConfigIndexTemplatePtrOutput
}

type serviceElasticsearchUserConfigIndexTemplatePtrType ServiceElasticsearchUserConfigIndexTemplateArgs

func ServiceElasticsearchUserConfigIndexTemplatePtr(v *ServiceElasticsearchUserConfigIndexTemplateArgs) ServiceElasticsearchUserConfigIndexTemplatePtrInput {
	return (*serviceElasticsearchUserConfigIndexTemplatePtrType)(v)
}

func (*serviceElasticsearchUserConfigIndexTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceElasticsearchUserConfigIndexTemplate)(nil)).Elem()
}

func (i *serviceElasticsearchUserConfigIndexTemplatePtrType) ToServiceElasticsearchUserConfigIndexTemplatePtrOutput() ServiceElasticsearchUserConfigIndexTemplatePtrOutput {
	return i.ToServiceElasticsearchUserConfigIndexTemplatePtrOutputWithContext(context.Background())
}

func (i *serviceElasticsearchUserConfigIndexTemplatePtrType) ToServiceElasticsearchUserConfigIndexTemplatePtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigIndexTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceElasticsearchUserConfigIndexTemplatePtrOutput)
}

type ServiceElasticsearchUserConfigIndexTemplateOutput struct{ *pulumi.OutputState }

func (ServiceElasticsearchUserConfigIndexTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceElasticsearchUserConfigIndexTemplate)(nil)).Elem()
}

func (o ServiceElasticsearchUserConfigIndexTemplateOutput) ToServiceElasticsearchUserConfigIndexTemplateOutput() ServiceElasticsearchUserConfigIndexTemplateOutput {
	return o
}

func (o ServiceElasticsearchUserConfigIndexTemplateOutput) ToServiceElasticsearchUserConfigIndexTemplateOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigIndexTemplateOutput {
	return o
}

func (o ServiceElasticsearchUserConfigIndexTemplateOutput) ToServiceElasticsearchUserConfigIndexTemplatePtrOutput() ServiceElasticsearchUserConfigIndexTemplatePtrOutput {
	return o.ToServiceElasticsearchUserConfigIndexTemplatePtrOutputWithContext(context.Background())
}

func (o ServiceElasticsearchUserConfigIndexTemplateOutput) ToServiceElasticsearchUserConfigIndexTemplatePtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigIndexTemplatePtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigIndexTemplate) *ServiceElasticsearchUserConfigIndexTemplate {
		return &v
	}).(ServiceElasticsearchUserConfigIndexTemplatePtrOutput)
}
func (o ServiceElasticsearchUserConfigIndexTemplateOutput) MappingNestedObjectsLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigIndexTemplate) *string { return v.MappingNestedObjectsLimit }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigIndexTemplateOutput) NumberOfReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigIndexTemplate) *string { return v.NumberOfReplicas }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigIndexTemplateOutput) NumberOfShards() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigIndexTemplate) *string { return v.NumberOfShards }).(pulumi.StringPtrOutput)
}

type ServiceElasticsearchUserConfigIndexTemplatePtrOutput struct{ *pulumi.OutputState }

func (ServiceElasticsearchUserConfigIndexTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceElasticsearchUserConfigIndexTemplate)(nil)).Elem()
}

func (o ServiceElasticsearchUserConfigIndexTemplatePtrOutput) ToServiceElasticsearchUserConfigIndexTemplatePtrOutput() ServiceElasticsearchUserConfigIndexTemplatePtrOutput {
	return o
}

func (o ServiceElasticsearchUserConfigIndexTemplatePtrOutput) ToServiceElasticsearchUserConfigIndexTemplatePtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigIndexTemplatePtrOutput {
	return o
}

func (o ServiceElasticsearchUserConfigIndexTemplatePtrOutput) Elem() ServiceElasticsearchUserConfigIndexTemplateOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigIndexTemplate) ServiceElasticsearchUserConfigIndexTemplate {
		return *v
	}).(ServiceElasticsearchUserConfigIndexTemplateOutput)
}

func (o ServiceElasticsearchUserConfigIndexTemplatePtrOutput) MappingNestedObjectsLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigIndexTemplate) *string {
		if v == nil {
			return nil
		}
		return v.MappingNestedObjectsLimit
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigIndexTemplatePtrOutput) NumberOfReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigIndexTemplate) *string {
		if v == nil {
			return nil
		}
		return v.NumberOfReplicas
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigIndexTemplatePtrOutput) NumberOfShards() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigIndexTemplate) *string {
		if v == nil {
			return nil
		}
		return v.NumberOfShards
	}).(pulumi.StringPtrOutput)
}

type ServiceElasticsearchUserConfigKibana struct {
	ElasticsearchRequestTimeout *string `pulumi:"elasticsearchRequestTimeout"`
	Enabled                     *string `pulumi:"enabled"`
	MaxOldSpaceSize             *string `pulumi:"maxOldSpaceSize"`
}

// ServiceElasticsearchUserConfigKibanaInput is an input type that accepts ServiceElasticsearchUserConfigKibanaArgs and ServiceElasticsearchUserConfigKibanaOutput values.
// You can construct a concrete instance of `ServiceElasticsearchUserConfigKibanaInput` via:
//
//          ServiceElasticsearchUserConfigKibanaArgs{...}
type ServiceElasticsearchUserConfigKibanaInput interface {
	pulumi.Input

	ToServiceElasticsearchUserConfigKibanaOutput() ServiceElasticsearchUserConfigKibanaOutput
	ToServiceElasticsearchUserConfigKibanaOutputWithContext(context.Context) ServiceElasticsearchUserConfigKibanaOutput
}

type ServiceElasticsearchUserConfigKibanaArgs struct {
	ElasticsearchRequestTimeout pulumi.StringPtrInput `pulumi:"elasticsearchRequestTimeout"`
	Enabled                     pulumi.StringPtrInput `pulumi:"enabled"`
	MaxOldSpaceSize             pulumi.StringPtrInput `pulumi:"maxOldSpaceSize"`
}

func (ServiceElasticsearchUserConfigKibanaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceElasticsearchUserConfigKibana)(nil)).Elem()
}

func (i ServiceElasticsearchUserConfigKibanaArgs) ToServiceElasticsearchUserConfigKibanaOutput() ServiceElasticsearchUserConfigKibanaOutput {
	return i.ToServiceElasticsearchUserConfigKibanaOutputWithContext(context.Background())
}

func (i ServiceElasticsearchUserConfigKibanaArgs) ToServiceElasticsearchUserConfigKibanaOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigKibanaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceElasticsearchUserConfigKibanaOutput)
}

func (i ServiceElasticsearchUserConfigKibanaArgs) ToServiceElasticsearchUserConfigKibanaPtrOutput() ServiceElasticsearchUserConfigKibanaPtrOutput {
	return i.ToServiceElasticsearchUserConfigKibanaPtrOutputWithContext(context.Background())
}

func (i ServiceElasticsearchUserConfigKibanaArgs) ToServiceElasticsearchUserConfigKibanaPtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigKibanaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceElasticsearchUserConfigKibanaOutput).ToServiceElasticsearchUserConfigKibanaPtrOutputWithContext(ctx)
}

// ServiceElasticsearchUserConfigKibanaPtrInput is an input type that accepts ServiceElasticsearchUserConfigKibanaArgs, ServiceElasticsearchUserConfigKibanaPtr and ServiceElasticsearchUserConfigKibanaPtrOutput values.
// You can construct a concrete instance of `ServiceElasticsearchUserConfigKibanaPtrInput` via:
//
//          ServiceElasticsearchUserConfigKibanaArgs{...}
//
//  or:
//
//          nil
type ServiceElasticsearchUserConfigKibanaPtrInput interface {
	pulumi.Input

	ToServiceElasticsearchUserConfigKibanaPtrOutput() ServiceElasticsearchUserConfigKibanaPtrOutput
	ToServiceElasticsearchUserConfigKibanaPtrOutputWithContext(context.Context) ServiceElasticsearchUserConfigKibanaPtrOutput
}

type serviceElasticsearchUserConfigKibanaPtrType ServiceElasticsearchUserConfigKibanaArgs

func ServiceElasticsearchUserConfigKibanaPtr(v *ServiceElasticsearchUserConfigKibanaArgs) ServiceElasticsearchUserConfigKibanaPtrInput {
	return (*serviceElasticsearchUserConfigKibanaPtrType)(v)
}

func (*serviceElasticsearchUserConfigKibanaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceElasticsearchUserConfigKibana)(nil)).Elem()
}

func (i *serviceElasticsearchUserConfigKibanaPtrType) ToServiceElasticsearchUserConfigKibanaPtrOutput() ServiceElasticsearchUserConfigKibanaPtrOutput {
	return i.ToServiceElasticsearchUserConfigKibanaPtrOutputWithContext(context.Background())
}

func (i *serviceElasticsearchUserConfigKibanaPtrType) ToServiceElasticsearchUserConfigKibanaPtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigKibanaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceElasticsearchUserConfigKibanaPtrOutput)
}

type ServiceElasticsearchUserConfigKibanaOutput struct{ *pulumi.OutputState }

func (ServiceElasticsearchUserConfigKibanaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceElasticsearchUserConfigKibana)(nil)).Elem()
}

func (o ServiceElasticsearchUserConfigKibanaOutput) ToServiceElasticsearchUserConfigKibanaOutput() ServiceElasticsearchUserConfigKibanaOutput {
	return o
}

func (o ServiceElasticsearchUserConfigKibanaOutput) ToServiceElasticsearchUserConfigKibanaOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigKibanaOutput {
	return o
}

func (o ServiceElasticsearchUserConfigKibanaOutput) ToServiceElasticsearchUserConfigKibanaPtrOutput() ServiceElasticsearchUserConfigKibanaPtrOutput {
	return o.ToServiceElasticsearchUserConfigKibanaPtrOutputWithContext(context.Background())
}

func (o ServiceElasticsearchUserConfigKibanaOutput) ToServiceElasticsearchUserConfigKibanaPtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigKibanaPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigKibana) *ServiceElasticsearchUserConfigKibana {
		return &v
	}).(ServiceElasticsearchUserConfigKibanaPtrOutput)
}
func (o ServiceElasticsearchUserConfigKibanaOutput) ElasticsearchRequestTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigKibana) *string { return v.ElasticsearchRequestTimeout }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigKibanaOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigKibana) *string { return v.Enabled }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigKibanaOutput) MaxOldSpaceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigKibana) *string { return v.MaxOldSpaceSize }).(pulumi.StringPtrOutput)
}

type ServiceElasticsearchUserConfigKibanaPtrOutput struct{ *pulumi.OutputState }

func (ServiceElasticsearchUserConfigKibanaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceElasticsearchUserConfigKibana)(nil)).Elem()
}

func (o ServiceElasticsearchUserConfigKibanaPtrOutput) ToServiceElasticsearchUserConfigKibanaPtrOutput() ServiceElasticsearchUserConfigKibanaPtrOutput {
	return o
}

func (o ServiceElasticsearchUserConfigKibanaPtrOutput) ToServiceElasticsearchUserConfigKibanaPtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigKibanaPtrOutput {
	return o
}

func (o ServiceElasticsearchUserConfigKibanaPtrOutput) Elem() ServiceElasticsearchUserConfigKibanaOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigKibana) ServiceElasticsearchUserConfigKibana { return *v }).(ServiceElasticsearchUserConfigKibanaOutput)
}

func (o ServiceElasticsearchUserConfigKibanaPtrOutput) ElasticsearchRequestTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigKibana) *string {
		if v == nil {
			return nil
		}
		return v.ElasticsearchRequestTimeout
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigKibanaPtrOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigKibana) *string {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigKibanaPtrOutput) MaxOldSpaceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigKibana) *string {
		if v == nil {
			return nil
		}
		return v.MaxOldSpaceSize
	}).(pulumi.StringPtrOutput)
}

type ServiceElasticsearchUserConfigPrivateAccess struct {
	Elasticsearch *string `pulumi:"elasticsearch"`
	Kibana        *string `pulumi:"kibana"`
	Prometheus    *string `pulumi:"prometheus"`
}

// ServiceElasticsearchUserConfigPrivateAccessInput is an input type that accepts ServiceElasticsearchUserConfigPrivateAccessArgs and ServiceElasticsearchUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `ServiceElasticsearchUserConfigPrivateAccessInput` via:
//
//          ServiceElasticsearchUserConfigPrivateAccessArgs{...}
type ServiceElasticsearchUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToServiceElasticsearchUserConfigPrivateAccessOutput() ServiceElasticsearchUserConfigPrivateAccessOutput
	ToServiceElasticsearchUserConfigPrivateAccessOutputWithContext(context.Context) ServiceElasticsearchUserConfigPrivateAccessOutput
}

type ServiceElasticsearchUserConfigPrivateAccessArgs struct {
	Elasticsearch pulumi.StringPtrInput `pulumi:"elasticsearch"`
	Kibana        pulumi.StringPtrInput `pulumi:"kibana"`
	Prometheus    pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (ServiceElasticsearchUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceElasticsearchUserConfigPrivateAccess)(nil)).Elem()
}

func (i ServiceElasticsearchUserConfigPrivateAccessArgs) ToServiceElasticsearchUserConfigPrivateAccessOutput() ServiceElasticsearchUserConfigPrivateAccessOutput {
	return i.ToServiceElasticsearchUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i ServiceElasticsearchUserConfigPrivateAccessArgs) ToServiceElasticsearchUserConfigPrivateAccessOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceElasticsearchUserConfigPrivateAccessOutput)
}

func (i ServiceElasticsearchUserConfigPrivateAccessArgs) ToServiceElasticsearchUserConfigPrivateAccessPtrOutput() ServiceElasticsearchUserConfigPrivateAccessPtrOutput {
	return i.ToServiceElasticsearchUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i ServiceElasticsearchUserConfigPrivateAccessArgs) ToServiceElasticsearchUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceElasticsearchUserConfigPrivateAccessOutput).ToServiceElasticsearchUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// ServiceElasticsearchUserConfigPrivateAccessPtrInput is an input type that accepts ServiceElasticsearchUserConfigPrivateAccessArgs, ServiceElasticsearchUserConfigPrivateAccessPtr and ServiceElasticsearchUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `ServiceElasticsearchUserConfigPrivateAccessPtrInput` via:
//
//          ServiceElasticsearchUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type ServiceElasticsearchUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToServiceElasticsearchUserConfigPrivateAccessPtrOutput() ServiceElasticsearchUserConfigPrivateAccessPtrOutput
	ToServiceElasticsearchUserConfigPrivateAccessPtrOutputWithContext(context.Context) ServiceElasticsearchUserConfigPrivateAccessPtrOutput
}

type serviceElasticsearchUserConfigPrivateAccessPtrType ServiceElasticsearchUserConfigPrivateAccessArgs

func ServiceElasticsearchUserConfigPrivateAccessPtr(v *ServiceElasticsearchUserConfigPrivateAccessArgs) ServiceElasticsearchUserConfigPrivateAccessPtrInput {
	return (*serviceElasticsearchUserConfigPrivateAccessPtrType)(v)
}

func (*serviceElasticsearchUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceElasticsearchUserConfigPrivateAccess)(nil)).Elem()
}

func (i *serviceElasticsearchUserConfigPrivateAccessPtrType) ToServiceElasticsearchUserConfigPrivateAccessPtrOutput() ServiceElasticsearchUserConfigPrivateAccessPtrOutput {
	return i.ToServiceElasticsearchUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *serviceElasticsearchUserConfigPrivateAccessPtrType) ToServiceElasticsearchUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceElasticsearchUserConfigPrivateAccessPtrOutput)
}

type ServiceElasticsearchUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (ServiceElasticsearchUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceElasticsearchUserConfigPrivateAccess)(nil)).Elem()
}

func (o ServiceElasticsearchUserConfigPrivateAccessOutput) ToServiceElasticsearchUserConfigPrivateAccessOutput() ServiceElasticsearchUserConfigPrivateAccessOutput {
	return o
}

func (o ServiceElasticsearchUserConfigPrivateAccessOutput) ToServiceElasticsearchUserConfigPrivateAccessOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigPrivateAccessOutput {
	return o
}

func (o ServiceElasticsearchUserConfigPrivateAccessOutput) ToServiceElasticsearchUserConfigPrivateAccessPtrOutput() ServiceElasticsearchUserConfigPrivateAccessPtrOutput {
	return o.ToServiceElasticsearchUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o ServiceElasticsearchUserConfigPrivateAccessOutput) ToServiceElasticsearchUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigPrivateAccess) *ServiceElasticsearchUserConfigPrivateAccess {
		return &v
	}).(ServiceElasticsearchUserConfigPrivateAccessPtrOutput)
}
func (o ServiceElasticsearchUserConfigPrivateAccessOutput) Elasticsearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigPrivateAccess) *string { return v.Elasticsearch }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigPrivateAccessOutput) Kibana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigPrivateAccess) *string { return v.Kibana }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type ServiceElasticsearchUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (ServiceElasticsearchUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceElasticsearchUserConfigPrivateAccess)(nil)).Elem()
}

func (o ServiceElasticsearchUserConfigPrivateAccessPtrOutput) ToServiceElasticsearchUserConfigPrivateAccessPtrOutput() ServiceElasticsearchUserConfigPrivateAccessPtrOutput {
	return o
}

func (o ServiceElasticsearchUserConfigPrivateAccessPtrOutput) ToServiceElasticsearchUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigPrivateAccessPtrOutput {
	return o
}

func (o ServiceElasticsearchUserConfigPrivateAccessPtrOutput) Elem() ServiceElasticsearchUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigPrivateAccess) ServiceElasticsearchUserConfigPrivateAccess {
		return *v
	}).(ServiceElasticsearchUserConfigPrivateAccessOutput)
}

func (o ServiceElasticsearchUserConfigPrivateAccessPtrOutput) Elasticsearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Elasticsearch
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigPrivateAccessPtrOutput) Kibana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Kibana
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type ServiceElasticsearchUserConfigPrivatelinkAccess struct {
	Elasticsearch *string `pulumi:"elasticsearch"`
	Kibana        *string `pulumi:"kibana"`
}

// ServiceElasticsearchUserConfigPrivatelinkAccessInput is an input type that accepts ServiceElasticsearchUserConfigPrivatelinkAccessArgs and ServiceElasticsearchUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `ServiceElasticsearchUserConfigPrivatelinkAccessInput` via:
//
//          ServiceElasticsearchUserConfigPrivatelinkAccessArgs{...}
type ServiceElasticsearchUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToServiceElasticsearchUserConfigPrivatelinkAccessOutput() ServiceElasticsearchUserConfigPrivatelinkAccessOutput
	ToServiceElasticsearchUserConfigPrivatelinkAccessOutputWithContext(context.Context) ServiceElasticsearchUserConfigPrivatelinkAccessOutput
}

type ServiceElasticsearchUserConfigPrivatelinkAccessArgs struct {
	Elasticsearch pulumi.StringPtrInput `pulumi:"elasticsearch"`
	Kibana        pulumi.StringPtrInput `pulumi:"kibana"`
}

func (ServiceElasticsearchUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceElasticsearchUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i ServiceElasticsearchUserConfigPrivatelinkAccessArgs) ToServiceElasticsearchUserConfigPrivatelinkAccessOutput() ServiceElasticsearchUserConfigPrivatelinkAccessOutput {
	return i.ToServiceElasticsearchUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i ServiceElasticsearchUserConfigPrivatelinkAccessArgs) ToServiceElasticsearchUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceElasticsearchUserConfigPrivatelinkAccessOutput)
}

func (i ServiceElasticsearchUserConfigPrivatelinkAccessArgs) ToServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput() ServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return i.ToServiceElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i ServiceElasticsearchUserConfigPrivatelinkAccessArgs) ToServiceElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceElasticsearchUserConfigPrivatelinkAccessOutput).ToServiceElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// ServiceElasticsearchUserConfigPrivatelinkAccessPtrInput is an input type that accepts ServiceElasticsearchUserConfigPrivatelinkAccessArgs, ServiceElasticsearchUserConfigPrivatelinkAccessPtr and ServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `ServiceElasticsearchUserConfigPrivatelinkAccessPtrInput` via:
//
//          ServiceElasticsearchUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type ServiceElasticsearchUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput() ServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput
	ToServiceElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) ServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput
}

type serviceElasticsearchUserConfigPrivatelinkAccessPtrType ServiceElasticsearchUserConfigPrivatelinkAccessArgs

func ServiceElasticsearchUserConfigPrivatelinkAccessPtr(v *ServiceElasticsearchUserConfigPrivatelinkAccessArgs) ServiceElasticsearchUserConfigPrivatelinkAccessPtrInput {
	return (*serviceElasticsearchUserConfigPrivatelinkAccessPtrType)(v)
}

func (*serviceElasticsearchUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceElasticsearchUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *serviceElasticsearchUserConfigPrivatelinkAccessPtrType) ToServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput() ServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return i.ToServiceElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *serviceElasticsearchUserConfigPrivatelinkAccessPtrType) ToServiceElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput)
}

type ServiceElasticsearchUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (ServiceElasticsearchUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceElasticsearchUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o ServiceElasticsearchUserConfigPrivatelinkAccessOutput) ToServiceElasticsearchUserConfigPrivatelinkAccessOutput() ServiceElasticsearchUserConfigPrivatelinkAccessOutput {
	return o
}

func (o ServiceElasticsearchUserConfigPrivatelinkAccessOutput) ToServiceElasticsearchUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigPrivatelinkAccessOutput {
	return o
}

func (o ServiceElasticsearchUserConfigPrivatelinkAccessOutput) ToServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput() ServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return o.ToServiceElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o ServiceElasticsearchUserConfigPrivatelinkAccessOutput) ToServiceElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigPrivatelinkAccess) *ServiceElasticsearchUserConfigPrivatelinkAccess {
		return &v
	}).(ServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput)
}
func (o ServiceElasticsearchUserConfigPrivatelinkAccessOutput) Elasticsearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigPrivatelinkAccess) *string { return v.Elasticsearch }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigPrivatelinkAccessOutput) Kibana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigPrivatelinkAccess) *string { return v.Kibana }).(pulumi.StringPtrOutput)
}

type ServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (ServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceElasticsearchUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o ServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput) ToServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput() ServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o ServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput) ToServiceElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o ServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput) Elem() ServiceElasticsearchUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigPrivatelinkAccess) ServiceElasticsearchUserConfigPrivatelinkAccess {
		return *v
	}).(ServiceElasticsearchUserConfigPrivatelinkAccessOutput)
}

func (o ServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput) Elasticsearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Elasticsearch
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput) Kibana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Kibana
	}).(pulumi.StringPtrOutput)
}

type ServiceElasticsearchUserConfigPublicAccess struct {
	Elasticsearch *string `pulumi:"elasticsearch"`
	Kibana        *string `pulumi:"kibana"`
	Prometheus    *string `pulumi:"prometheus"`
}

// ServiceElasticsearchUserConfigPublicAccessInput is an input type that accepts ServiceElasticsearchUserConfigPublicAccessArgs and ServiceElasticsearchUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `ServiceElasticsearchUserConfigPublicAccessInput` via:
//
//          ServiceElasticsearchUserConfigPublicAccessArgs{...}
type ServiceElasticsearchUserConfigPublicAccessInput interface {
	pulumi.Input

	ToServiceElasticsearchUserConfigPublicAccessOutput() ServiceElasticsearchUserConfigPublicAccessOutput
	ToServiceElasticsearchUserConfigPublicAccessOutputWithContext(context.Context) ServiceElasticsearchUserConfigPublicAccessOutput
}

type ServiceElasticsearchUserConfigPublicAccessArgs struct {
	Elasticsearch pulumi.StringPtrInput `pulumi:"elasticsearch"`
	Kibana        pulumi.StringPtrInput `pulumi:"kibana"`
	Prometheus    pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (ServiceElasticsearchUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceElasticsearchUserConfigPublicAccess)(nil)).Elem()
}

func (i ServiceElasticsearchUserConfigPublicAccessArgs) ToServiceElasticsearchUserConfigPublicAccessOutput() ServiceElasticsearchUserConfigPublicAccessOutput {
	return i.ToServiceElasticsearchUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i ServiceElasticsearchUserConfigPublicAccessArgs) ToServiceElasticsearchUserConfigPublicAccessOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceElasticsearchUserConfigPublicAccessOutput)
}

func (i ServiceElasticsearchUserConfigPublicAccessArgs) ToServiceElasticsearchUserConfigPublicAccessPtrOutput() ServiceElasticsearchUserConfigPublicAccessPtrOutput {
	return i.ToServiceElasticsearchUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i ServiceElasticsearchUserConfigPublicAccessArgs) ToServiceElasticsearchUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceElasticsearchUserConfigPublicAccessOutput).ToServiceElasticsearchUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// ServiceElasticsearchUserConfigPublicAccessPtrInput is an input type that accepts ServiceElasticsearchUserConfigPublicAccessArgs, ServiceElasticsearchUserConfigPublicAccessPtr and ServiceElasticsearchUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `ServiceElasticsearchUserConfigPublicAccessPtrInput` via:
//
//          ServiceElasticsearchUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type ServiceElasticsearchUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToServiceElasticsearchUserConfigPublicAccessPtrOutput() ServiceElasticsearchUserConfigPublicAccessPtrOutput
	ToServiceElasticsearchUserConfigPublicAccessPtrOutputWithContext(context.Context) ServiceElasticsearchUserConfigPublicAccessPtrOutput
}

type serviceElasticsearchUserConfigPublicAccessPtrType ServiceElasticsearchUserConfigPublicAccessArgs

func ServiceElasticsearchUserConfigPublicAccessPtr(v *ServiceElasticsearchUserConfigPublicAccessArgs) ServiceElasticsearchUserConfigPublicAccessPtrInput {
	return (*serviceElasticsearchUserConfigPublicAccessPtrType)(v)
}

func (*serviceElasticsearchUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceElasticsearchUserConfigPublicAccess)(nil)).Elem()
}

func (i *serviceElasticsearchUserConfigPublicAccessPtrType) ToServiceElasticsearchUserConfigPublicAccessPtrOutput() ServiceElasticsearchUserConfigPublicAccessPtrOutput {
	return i.ToServiceElasticsearchUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *serviceElasticsearchUserConfigPublicAccessPtrType) ToServiceElasticsearchUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceElasticsearchUserConfigPublicAccessPtrOutput)
}

type ServiceElasticsearchUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (ServiceElasticsearchUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceElasticsearchUserConfigPublicAccess)(nil)).Elem()
}

func (o ServiceElasticsearchUserConfigPublicAccessOutput) ToServiceElasticsearchUserConfigPublicAccessOutput() ServiceElasticsearchUserConfigPublicAccessOutput {
	return o
}

func (o ServiceElasticsearchUserConfigPublicAccessOutput) ToServiceElasticsearchUserConfigPublicAccessOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigPublicAccessOutput {
	return o
}

func (o ServiceElasticsearchUserConfigPublicAccessOutput) ToServiceElasticsearchUserConfigPublicAccessPtrOutput() ServiceElasticsearchUserConfigPublicAccessPtrOutput {
	return o.ToServiceElasticsearchUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o ServiceElasticsearchUserConfigPublicAccessOutput) ToServiceElasticsearchUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigPublicAccess) *ServiceElasticsearchUserConfigPublicAccess {
		return &v
	}).(ServiceElasticsearchUserConfigPublicAccessPtrOutput)
}
func (o ServiceElasticsearchUserConfigPublicAccessOutput) Elasticsearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigPublicAccess) *string { return v.Elasticsearch }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigPublicAccessOutput) Kibana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigPublicAccess) *string { return v.Kibana }).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceElasticsearchUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type ServiceElasticsearchUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (ServiceElasticsearchUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceElasticsearchUserConfigPublicAccess)(nil)).Elem()
}

func (o ServiceElasticsearchUserConfigPublicAccessPtrOutput) ToServiceElasticsearchUserConfigPublicAccessPtrOutput() ServiceElasticsearchUserConfigPublicAccessPtrOutput {
	return o
}

func (o ServiceElasticsearchUserConfigPublicAccessPtrOutput) ToServiceElasticsearchUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceElasticsearchUserConfigPublicAccessPtrOutput {
	return o
}

func (o ServiceElasticsearchUserConfigPublicAccessPtrOutput) Elem() ServiceElasticsearchUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigPublicAccess) ServiceElasticsearchUserConfigPublicAccess {
		return *v
	}).(ServiceElasticsearchUserConfigPublicAccessOutput)
}

func (o ServiceElasticsearchUserConfigPublicAccessPtrOutput) Elasticsearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Elasticsearch
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigPublicAccessPtrOutput) Kibana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Kibana
	}).(pulumi.StringPtrOutput)
}

func (o ServiceElasticsearchUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceElasticsearchUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type ServiceGrafana struct {
}

// ServiceGrafanaInput is an input type that accepts ServiceGrafanaArgs and ServiceGrafanaOutput values.
// You can construct a concrete instance of `ServiceGrafanaInput` via:
//
//          ServiceGrafanaArgs{...}
type ServiceGrafanaInput interface {
	pulumi.Input

	ToServiceGrafanaOutput() ServiceGrafanaOutput
	ToServiceGrafanaOutputWithContext(context.Context) ServiceGrafanaOutput
}

type ServiceGrafanaArgs struct {
}

func (ServiceGrafanaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGrafana)(nil)).Elem()
}

func (i ServiceGrafanaArgs) ToServiceGrafanaOutput() ServiceGrafanaOutput {
	return i.ToServiceGrafanaOutputWithContext(context.Background())
}

func (i ServiceGrafanaArgs) ToServiceGrafanaOutputWithContext(ctx context.Context) ServiceGrafanaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaOutput)
}

func (i ServiceGrafanaArgs) ToServiceGrafanaPtrOutput() ServiceGrafanaPtrOutput {
	return i.ToServiceGrafanaPtrOutputWithContext(context.Background())
}

func (i ServiceGrafanaArgs) ToServiceGrafanaPtrOutputWithContext(ctx context.Context) ServiceGrafanaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaOutput).ToServiceGrafanaPtrOutputWithContext(ctx)
}

// ServiceGrafanaPtrInput is an input type that accepts ServiceGrafanaArgs, ServiceGrafanaPtr and ServiceGrafanaPtrOutput values.
// You can construct a concrete instance of `ServiceGrafanaPtrInput` via:
//
//          ServiceGrafanaArgs{...}
//
//  or:
//
//          nil
type ServiceGrafanaPtrInput interface {
	pulumi.Input

	ToServiceGrafanaPtrOutput() ServiceGrafanaPtrOutput
	ToServiceGrafanaPtrOutputWithContext(context.Context) ServiceGrafanaPtrOutput
}

type serviceGrafanaPtrType ServiceGrafanaArgs

func ServiceGrafanaPtr(v *ServiceGrafanaArgs) ServiceGrafanaPtrInput {
	return (*serviceGrafanaPtrType)(v)
}

func (*serviceGrafanaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGrafana)(nil)).Elem()
}

func (i *serviceGrafanaPtrType) ToServiceGrafanaPtrOutput() ServiceGrafanaPtrOutput {
	return i.ToServiceGrafanaPtrOutputWithContext(context.Background())
}

func (i *serviceGrafanaPtrType) ToServiceGrafanaPtrOutputWithContext(ctx context.Context) ServiceGrafanaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaPtrOutput)
}

type ServiceGrafanaOutput struct{ *pulumi.OutputState }

func (ServiceGrafanaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGrafana)(nil)).Elem()
}

func (o ServiceGrafanaOutput) ToServiceGrafanaOutput() ServiceGrafanaOutput {
	return o
}

func (o ServiceGrafanaOutput) ToServiceGrafanaOutputWithContext(ctx context.Context) ServiceGrafanaOutput {
	return o
}

func (o ServiceGrafanaOutput) ToServiceGrafanaPtrOutput() ServiceGrafanaPtrOutput {
	return o.ToServiceGrafanaPtrOutputWithContext(context.Background())
}

func (o ServiceGrafanaOutput) ToServiceGrafanaPtrOutputWithContext(ctx context.Context) ServiceGrafanaPtrOutput {
	return o.ApplyT(func(v ServiceGrafana) *ServiceGrafana {
		return &v
	}).(ServiceGrafanaPtrOutput)
}

type ServiceGrafanaPtrOutput struct{ *pulumi.OutputState }

func (ServiceGrafanaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGrafana)(nil)).Elem()
}

func (o ServiceGrafanaPtrOutput) ToServiceGrafanaPtrOutput() ServiceGrafanaPtrOutput {
	return o
}

func (o ServiceGrafanaPtrOutput) ToServiceGrafanaPtrOutputWithContext(ctx context.Context) ServiceGrafanaPtrOutput {
	return o
}

func (o ServiceGrafanaPtrOutput) Elem() ServiceGrafanaOutput {
	return o.ApplyT(func(v *ServiceGrafana) ServiceGrafana { return *v }).(ServiceGrafanaOutput)
}

type ServiceGrafanaUserConfig struct {
	AlertingEnabled              *string                                       `pulumi:"alertingEnabled"`
	AlertingErrorOrTimeout       *string                                       `pulumi:"alertingErrorOrTimeout"`
	AlertingNodataOrNullvalues   *string                                       `pulumi:"alertingNodataOrNullvalues"`
	AllowEmbedding               *string                                       `pulumi:"allowEmbedding"`
	AuthBasicEnabled             *string                                       `pulumi:"authBasicEnabled"`
	AuthGenericOauth             *ServiceGrafanaUserConfigAuthGenericOauth     `pulumi:"authGenericOauth"`
	AuthGithub                   *ServiceGrafanaUserConfigAuthGithub           `pulumi:"authGithub"`
	AuthGitlab                   *ServiceGrafanaUserConfigAuthGitlab           `pulumi:"authGitlab"`
	AuthGoogle                   *ServiceGrafanaUserConfigAuthGoogle           `pulumi:"authGoogle"`
	CookieSamesite               *string                                       `pulumi:"cookieSamesite"`
	CustomDomain                 *string                                       `pulumi:"customDomain"`
	DashboardsMinRefreshInterval *string                                       `pulumi:"dashboardsMinRefreshInterval"`
	DashboardsVersionsToKeep     *string                                       `pulumi:"dashboardsVersionsToKeep"`
	DataproxySendUserHeader      *string                                       `pulumi:"dataproxySendUserHeader"`
	DataproxyTimeout             *string                                       `pulumi:"dataproxyTimeout"`
	DisableGravatar              *string                                       `pulumi:"disableGravatar"`
	EditorsCanAdmin              *string                                       `pulumi:"editorsCanAdmin"`
	ExternalImageStorage         *ServiceGrafanaUserConfigExternalImageStorage `pulumi:"externalImageStorage"`
	GoogleAnalyticsUaId          *string                                       `pulumi:"googleAnalyticsUaId"`
	IpFilters                    []string                                      `pulumi:"ipFilters"`
	MetricsEnabled               *string                                       `pulumi:"metricsEnabled"`
	PrivateAccess                *ServiceGrafanaUserConfigPrivateAccess        `pulumi:"privateAccess"`
	PrivatelinkAccess            *ServiceGrafanaUserConfigPrivatelinkAccess    `pulumi:"privatelinkAccess"`
	ProjectToForkFrom            *string                                       `pulumi:"projectToForkFrom"`
	PublicAccess                 *ServiceGrafanaUserConfigPublicAccess         `pulumi:"publicAccess"`
	RecoveryBasebackupName       *string                                       `pulumi:"recoveryBasebackupName"`
	ServiceToForkFrom            *string                                       `pulumi:"serviceToForkFrom"`
	SmtpServer                   *ServiceGrafanaUserConfigSmtpServer           `pulumi:"smtpServer"`
	UserAutoAssignOrg            *string                                       `pulumi:"userAutoAssignOrg"`
	UserAutoAssignOrgRole        *string                                       `pulumi:"userAutoAssignOrgRole"`
	ViewersCanEdit               *string                                       `pulumi:"viewersCanEdit"`
}

// ServiceGrafanaUserConfigInput is an input type that accepts ServiceGrafanaUserConfigArgs and ServiceGrafanaUserConfigOutput values.
// You can construct a concrete instance of `ServiceGrafanaUserConfigInput` via:
//
//          ServiceGrafanaUserConfigArgs{...}
type ServiceGrafanaUserConfigInput interface {
	pulumi.Input

	ToServiceGrafanaUserConfigOutput() ServiceGrafanaUserConfigOutput
	ToServiceGrafanaUserConfigOutputWithContext(context.Context) ServiceGrafanaUserConfigOutput
}

type ServiceGrafanaUserConfigArgs struct {
	AlertingEnabled              pulumi.StringPtrInput                                `pulumi:"alertingEnabled"`
	AlertingErrorOrTimeout       pulumi.StringPtrInput                                `pulumi:"alertingErrorOrTimeout"`
	AlertingNodataOrNullvalues   pulumi.StringPtrInput                                `pulumi:"alertingNodataOrNullvalues"`
	AllowEmbedding               pulumi.StringPtrInput                                `pulumi:"allowEmbedding"`
	AuthBasicEnabled             pulumi.StringPtrInput                                `pulumi:"authBasicEnabled"`
	AuthGenericOauth             ServiceGrafanaUserConfigAuthGenericOauthPtrInput     `pulumi:"authGenericOauth"`
	AuthGithub                   ServiceGrafanaUserConfigAuthGithubPtrInput           `pulumi:"authGithub"`
	AuthGitlab                   ServiceGrafanaUserConfigAuthGitlabPtrInput           `pulumi:"authGitlab"`
	AuthGoogle                   ServiceGrafanaUserConfigAuthGooglePtrInput           `pulumi:"authGoogle"`
	CookieSamesite               pulumi.StringPtrInput                                `pulumi:"cookieSamesite"`
	CustomDomain                 pulumi.StringPtrInput                                `pulumi:"customDomain"`
	DashboardsMinRefreshInterval pulumi.StringPtrInput                                `pulumi:"dashboardsMinRefreshInterval"`
	DashboardsVersionsToKeep     pulumi.StringPtrInput                                `pulumi:"dashboardsVersionsToKeep"`
	DataproxySendUserHeader      pulumi.StringPtrInput                                `pulumi:"dataproxySendUserHeader"`
	DataproxyTimeout             pulumi.StringPtrInput                                `pulumi:"dataproxyTimeout"`
	DisableGravatar              pulumi.StringPtrInput                                `pulumi:"disableGravatar"`
	EditorsCanAdmin              pulumi.StringPtrInput                                `pulumi:"editorsCanAdmin"`
	ExternalImageStorage         ServiceGrafanaUserConfigExternalImageStoragePtrInput `pulumi:"externalImageStorage"`
	GoogleAnalyticsUaId          pulumi.StringPtrInput                                `pulumi:"googleAnalyticsUaId"`
	IpFilters                    pulumi.StringArrayInput                              `pulumi:"ipFilters"`
	MetricsEnabled               pulumi.StringPtrInput                                `pulumi:"metricsEnabled"`
	PrivateAccess                ServiceGrafanaUserConfigPrivateAccessPtrInput        `pulumi:"privateAccess"`
	PrivatelinkAccess            ServiceGrafanaUserConfigPrivatelinkAccessPtrInput    `pulumi:"privatelinkAccess"`
	ProjectToForkFrom            pulumi.StringPtrInput                                `pulumi:"projectToForkFrom"`
	PublicAccess                 ServiceGrafanaUserConfigPublicAccessPtrInput         `pulumi:"publicAccess"`
	RecoveryBasebackupName       pulumi.StringPtrInput                                `pulumi:"recoveryBasebackupName"`
	ServiceToForkFrom            pulumi.StringPtrInput                                `pulumi:"serviceToForkFrom"`
	SmtpServer                   ServiceGrafanaUserConfigSmtpServerPtrInput           `pulumi:"smtpServer"`
	UserAutoAssignOrg            pulumi.StringPtrInput                                `pulumi:"userAutoAssignOrg"`
	UserAutoAssignOrgRole        pulumi.StringPtrInput                                `pulumi:"userAutoAssignOrgRole"`
	ViewersCanEdit               pulumi.StringPtrInput                                `pulumi:"viewersCanEdit"`
}

func (ServiceGrafanaUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGrafanaUserConfig)(nil)).Elem()
}

func (i ServiceGrafanaUserConfigArgs) ToServiceGrafanaUserConfigOutput() ServiceGrafanaUserConfigOutput {
	return i.ToServiceGrafanaUserConfigOutputWithContext(context.Background())
}

func (i ServiceGrafanaUserConfigArgs) ToServiceGrafanaUserConfigOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigOutput)
}

func (i ServiceGrafanaUserConfigArgs) ToServiceGrafanaUserConfigPtrOutput() ServiceGrafanaUserConfigPtrOutput {
	return i.ToServiceGrafanaUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceGrafanaUserConfigArgs) ToServiceGrafanaUserConfigPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigOutput).ToServiceGrafanaUserConfigPtrOutputWithContext(ctx)
}

// ServiceGrafanaUserConfigPtrInput is an input type that accepts ServiceGrafanaUserConfigArgs, ServiceGrafanaUserConfigPtr and ServiceGrafanaUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceGrafanaUserConfigPtrInput` via:
//
//          ServiceGrafanaUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceGrafanaUserConfigPtrInput interface {
	pulumi.Input

	ToServiceGrafanaUserConfigPtrOutput() ServiceGrafanaUserConfigPtrOutput
	ToServiceGrafanaUserConfigPtrOutputWithContext(context.Context) ServiceGrafanaUserConfigPtrOutput
}

type serviceGrafanaUserConfigPtrType ServiceGrafanaUserConfigArgs

func ServiceGrafanaUserConfigPtr(v *ServiceGrafanaUserConfigArgs) ServiceGrafanaUserConfigPtrInput {
	return (*serviceGrafanaUserConfigPtrType)(v)
}

func (*serviceGrafanaUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGrafanaUserConfig)(nil)).Elem()
}

func (i *serviceGrafanaUserConfigPtrType) ToServiceGrafanaUserConfigPtrOutput() ServiceGrafanaUserConfigPtrOutput {
	return i.ToServiceGrafanaUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceGrafanaUserConfigPtrType) ToServiceGrafanaUserConfigPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigPtrOutput)
}

type ServiceGrafanaUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceGrafanaUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGrafanaUserConfig)(nil)).Elem()
}

func (o ServiceGrafanaUserConfigOutput) ToServiceGrafanaUserConfigOutput() ServiceGrafanaUserConfigOutput {
	return o
}

func (o ServiceGrafanaUserConfigOutput) ToServiceGrafanaUserConfigOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigOutput {
	return o
}

func (o ServiceGrafanaUserConfigOutput) ToServiceGrafanaUserConfigPtrOutput() ServiceGrafanaUserConfigPtrOutput {
	return o.ToServiceGrafanaUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceGrafanaUserConfigOutput) ToServiceGrafanaUserConfigPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *ServiceGrafanaUserConfig {
		return &v
	}).(ServiceGrafanaUserConfigPtrOutput)
}
func (o ServiceGrafanaUserConfigOutput) AlertingEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *string { return v.AlertingEnabled }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) AlertingErrorOrTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *string { return v.AlertingErrorOrTimeout }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) AlertingNodataOrNullvalues() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *string { return v.AlertingNodataOrNullvalues }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) AllowEmbedding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *string { return v.AllowEmbedding }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) AuthBasicEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *string { return v.AuthBasicEnabled }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) AuthGenericOauth() ServiceGrafanaUserConfigAuthGenericOauthPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *ServiceGrafanaUserConfigAuthGenericOauth { return v.AuthGenericOauth }).(ServiceGrafanaUserConfigAuthGenericOauthPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) AuthGithub() ServiceGrafanaUserConfigAuthGithubPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *ServiceGrafanaUserConfigAuthGithub { return v.AuthGithub }).(ServiceGrafanaUserConfigAuthGithubPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) AuthGitlab() ServiceGrafanaUserConfigAuthGitlabPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *ServiceGrafanaUserConfigAuthGitlab { return v.AuthGitlab }).(ServiceGrafanaUserConfigAuthGitlabPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) AuthGoogle() ServiceGrafanaUserConfigAuthGooglePtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *ServiceGrafanaUserConfigAuthGoogle { return v.AuthGoogle }).(ServiceGrafanaUserConfigAuthGooglePtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) CookieSamesite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *string { return v.CookieSamesite }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *string { return v.CustomDomain }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) DashboardsMinRefreshInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *string { return v.DashboardsMinRefreshInterval }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) DashboardsVersionsToKeep() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *string { return v.DashboardsVersionsToKeep }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) DataproxySendUserHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *string { return v.DataproxySendUserHeader }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) DataproxyTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *string { return v.DataproxyTimeout }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) DisableGravatar() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *string { return v.DisableGravatar }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) EditorsCanAdmin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *string { return v.EditorsCanAdmin }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) ExternalImageStorage() ServiceGrafanaUserConfigExternalImageStoragePtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *ServiceGrafanaUserConfigExternalImageStorage {
		return v.ExternalImageStorage
	}).(ServiceGrafanaUserConfigExternalImageStoragePtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) GoogleAnalyticsUaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *string { return v.GoogleAnalyticsUaId }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

func (o ServiceGrafanaUserConfigOutput) MetricsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *string { return v.MetricsEnabled }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) PrivateAccess() ServiceGrafanaUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *ServiceGrafanaUserConfigPrivateAccess { return v.PrivateAccess }).(ServiceGrafanaUserConfigPrivateAccessPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) PrivatelinkAccess() ServiceGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *ServiceGrafanaUserConfigPrivatelinkAccess {
		return v.PrivatelinkAccess
	}).(ServiceGrafanaUserConfigPrivatelinkAccessPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) PublicAccess() ServiceGrafanaUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *ServiceGrafanaUserConfigPublicAccess { return v.PublicAccess }).(ServiceGrafanaUserConfigPublicAccessPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) RecoveryBasebackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *string { return v.RecoveryBasebackupName }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) SmtpServer() ServiceGrafanaUserConfigSmtpServerPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *ServiceGrafanaUserConfigSmtpServer { return v.SmtpServer }).(ServiceGrafanaUserConfigSmtpServerPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) UserAutoAssignOrg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *string { return v.UserAutoAssignOrg }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) UserAutoAssignOrgRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *string { return v.UserAutoAssignOrgRole }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigOutput) ViewersCanEdit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfig) *string { return v.ViewersCanEdit }).(pulumi.StringPtrOutput)
}

type ServiceGrafanaUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceGrafanaUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGrafanaUserConfig)(nil)).Elem()
}

func (o ServiceGrafanaUserConfigPtrOutput) ToServiceGrafanaUserConfigPtrOutput() ServiceGrafanaUserConfigPtrOutput {
	return o
}

func (o ServiceGrafanaUserConfigPtrOutput) ToServiceGrafanaUserConfigPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigPtrOutput {
	return o
}

func (o ServiceGrafanaUserConfigPtrOutput) Elem() ServiceGrafanaUserConfigOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) ServiceGrafanaUserConfig { return *v }).(ServiceGrafanaUserConfigOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) AlertingEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.AlertingEnabled
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) AlertingErrorOrTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.AlertingErrorOrTimeout
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) AlertingNodataOrNullvalues() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.AlertingNodataOrNullvalues
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) AllowEmbedding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.AllowEmbedding
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) AuthBasicEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.AuthBasicEnabled
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) AuthGenericOauth() ServiceGrafanaUserConfigAuthGenericOauthPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *ServiceGrafanaUserConfigAuthGenericOauth {
		if v == nil {
			return nil
		}
		return v.AuthGenericOauth
	}).(ServiceGrafanaUserConfigAuthGenericOauthPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) AuthGithub() ServiceGrafanaUserConfigAuthGithubPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *ServiceGrafanaUserConfigAuthGithub {
		if v == nil {
			return nil
		}
		return v.AuthGithub
	}).(ServiceGrafanaUserConfigAuthGithubPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) AuthGitlab() ServiceGrafanaUserConfigAuthGitlabPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *ServiceGrafanaUserConfigAuthGitlab {
		if v == nil {
			return nil
		}
		return v.AuthGitlab
	}).(ServiceGrafanaUserConfigAuthGitlabPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) AuthGoogle() ServiceGrafanaUserConfigAuthGooglePtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *ServiceGrafanaUserConfigAuthGoogle {
		if v == nil {
			return nil
		}
		return v.AuthGoogle
	}).(ServiceGrafanaUserConfigAuthGooglePtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) CookieSamesite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.CookieSamesite
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.CustomDomain
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) DashboardsMinRefreshInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.DashboardsMinRefreshInterval
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) DashboardsVersionsToKeep() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.DashboardsVersionsToKeep
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) DataproxySendUserHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.DataproxySendUserHeader
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) DataproxyTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.DataproxyTimeout
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) DisableGravatar() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.DisableGravatar
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) EditorsCanAdmin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.EditorsCanAdmin
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) ExternalImageStorage() ServiceGrafanaUserConfigExternalImageStoragePtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *ServiceGrafanaUserConfigExternalImageStorage {
		if v == nil {
			return nil
		}
		return v.ExternalImageStorage
	}).(ServiceGrafanaUserConfigExternalImageStoragePtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) GoogleAnalyticsUaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.GoogleAnalyticsUaId
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) MetricsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.MetricsEnabled
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) PrivateAccess() ServiceGrafanaUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *ServiceGrafanaUserConfigPrivateAccess {
		if v == nil {
			return nil
		}
		return v.PrivateAccess
	}).(ServiceGrafanaUserConfigPrivateAccessPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) PrivatelinkAccess() ServiceGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *ServiceGrafanaUserConfigPrivatelinkAccess {
		if v == nil {
			return nil
		}
		return v.PrivatelinkAccess
	}).(ServiceGrafanaUserConfigPrivatelinkAccessPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProjectToForkFrom
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) PublicAccess() ServiceGrafanaUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *ServiceGrafanaUserConfigPublicAccess {
		if v == nil {
			return nil
		}
		return v.PublicAccess
	}).(ServiceGrafanaUserConfigPublicAccessPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) RecoveryBasebackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryBasebackupName
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceToForkFrom
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) SmtpServer() ServiceGrafanaUserConfigSmtpServerPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *ServiceGrafanaUserConfigSmtpServer {
		if v == nil {
			return nil
		}
		return v.SmtpServer
	}).(ServiceGrafanaUserConfigSmtpServerPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) UserAutoAssignOrg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserAutoAssignOrg
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) UserAutoAssignOrgRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserAutoAssignOrgRole
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigPtrOutput) ViewersCanEdit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ViewersCanEdit
	}).(pulumi.StringPtrOutput)
}

type ServiceGrafanaUserConfigAuthGenericOauth struct {
	AllowSignUp          *string  `pulumi:"allowSignUp"`
	AllowedDomains       []string `pulumi:"allowedDomains"`
	AllowedOrganizations []string `pulumi:"allowedOrganizations"`
	ApiUrl               *string  `pulumi:"apiUrl"`
	AuthUrl              *string  `pulumi:"authUrl"`
	ClientId             *string  `pulumi:"clientId"`
	ClientSecret         *string  `pulumi:"clientSecret"`
	Name                 *string  `pulumi:"name"`
	Scopes               []string `pulumi:"scopes"`
	TokenUrl             *string  `pulumi:"tokenUrl"`
}

// ServiceGrafanaUserConfigAuthGenericOauthInput is an input type that accepts ServiceGrafanaUserConfigAuthGenericOauthArgs and ServiceGrafanaUserConfigAuthGenericOauthOutput values.
// You can construct a concrete instance of `ServiceGrafanaUserConfigAuthGenericOauthInput` via:
//
//          ServiceGrafanaUserConfigAuthGenericOauthArgs{...}
type ServiceGrafanaUserConfigAuthGenericOauthInput interface {
	pulumi.Input

	ToServiceGrafanaUserConfigAuthGenericOauthOutput() ServiceGrafanaUserConfigAuthGenericOauthOutput
	ToServiceGrafanaUserConfigAuthGenericOauthOutputWithContext(context.Context) ServiceGrafanaUserConfigAuthGenericOauthOutput
}

type ServiceGrafanaUserConfigAuthGenericOauthArgs struct {
	AllowSignUp          pulumi.StringPtrInput   `pulumi:"allowSignUp"`
	AllowedDomains       pulumi.StringArrayInput `pulumi:"allowedDomains"`
	AllowedOrganizations pulumi.StringArrayInput `pulumi:"allowedOrganizations"`
	ApiUrl               pulumi.StringPtrInput   `pulumi:"apiUrl"`
	AuthUrl              pulumi.StringPtrInput   `pulumi:"authUrl"`
	ClientId             pulumi.StringPtrInput   `pulumi:"clientId"`
	ClientSecret         pulumi.StringPtrInput   `pulumi:"clientSecret"`
	Name                 pulumi.StringPtrInput   `pulumi:"name"`
	Scopes               pulumi.StringArrayInput `pulumi:"scopes"`
	TokenUrl             pulumi.StringPtrInput   `pulumi:"tokenUrl"`
}

func (ServiceGrafanaUserConfigAuthGenericOauthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGrafanaUserConfigAuthGenericOauth)(nil)).Elem()
}

func (i ServiceGrafanaUserConfigAuthGenericOauthArgs) ToServiceGrafanaUserConfigAuthGenericOauthOutput() ServiceGrafanaUserConfigAuthGenericOauthOutput {
	return i.ToServiceGrafanaUserConfigAuthGenericOauthOutputWithContext(context.Background())
}

func (i ServiceGrafanaUserConfigAuthGenericOauthArgs) ToServiceGrafanaUserConfigAuthGenericOauthOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigAuthGenericOauthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigAuthGenericOauthOutput)
}

func (i ServiceGrafanaUserConfigAuthGenericOauthArgs) ToServiceGrafanaUserConfigAuthGenericOauthPtrOutput() ServiceGrafanaUserConfigAuthGenericOauthPtrOutput {
	return i.ToServiceGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(context.Background())
}

func (i ServiceGrafanaUserConfigAuthGenericOauthArgs) ToServiceGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigAuthGenericOauthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigAuthGenericOauthOutput).ToServiceGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(ctx)
}

// ServiceGrafanaUserConfigAuthGenericOauthPtrInput is an input type that accepts ServiceGrafanaUserConfigAuthGenericOauthArgs, ServiceGrafanaUserConfigAuthGenericOauthPtr and ServiceGrafanaUserConfigAuthGenericOauthPtrOutput values.
// You can construct a concrete instance of `ServiceGrafanaUserConfigAuthGenericOauthPtrInput` via:
//
//          ServiceGrafanaUserConfigAuthGenericOauthArgs{...}
//
//  or:
//
//          nil
type ServiceGrafanaUserConfigAuthGenericOauthPtrInput interface {
	pulumi.Input

	ToServiceGrafanaUserConfigAuthGenericOauthPtrOutput() ServiceGrafanaUserConfigAuthGenericOauthPtrOutput
	ToServiceGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(context.Context) ServiceGrafanaUserConfigAuthGenericOauthPtrOutput
}

type serviceGrafanaUserConfigAuthGenericOauthPtrType ServiceGrafanaUserConfigAuthGenericOauthArgs

func ServiceGrafanaUserConfigAuthGenericOauthPtr(v *ServiceGrafanaUserConfigAuthGenericOauthArgs) ServiceGrafanaUserConfigAuthGenericOauthPtrInput {
	return (*serviceGrafanaUserConfigAuthGenericOauthPtrType)(v)
}

func (*serviceGrafanaUserConfigAuthGenericOauthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGrafanaUserConfigAuthGenericOauth)(nil)).Elem()
}

func (i *serviceGrafanaUserConfigAuthGenericOauthPtrType) ToServiceGrafanaUserConfigAuthGenericOauthPtrOutput() ServiceGrafanaUserConfigAuthGenericOauthPtrOutput {
	return i.ToServiceGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(context.Background())
}

func (i *serviceGrafanaUserConfigAuthGenericOauthPtrType) ToServiceGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigAuthGenericOauthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigAuthGenericOauthPtrOutput)
}

type ServiceGrafanaUserConfigAuthGenericOauthOutput struct{ *pulumi.OutputState }

func (ServiceGrafanaUserConfigAuthGenericOauthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGrafanaUserConfigAuthGenericOauth)(nil)).Elem()
}

func (o ServiceGrafanaUserConfigAuthGenericOauthOutput) ToServiceGrafanaUserConfigAuthGenericOauthOutput() ServiceGrafanaUserConfigAuthGenericOauthOutput {
	return o
}

func (o ServiceGrafanaUserConfigAuthGenericOauthOutput) ToServiceGrafanaUserConfigAuthGenericOauthOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigAuthGenericOauthOutput {
	return o
}

func (o ServiceGrafanaUserConfigAuthGenericOauthOutput) ToServiceGrafanaUserConfigAuthGenericOauthPtrOutput() ServiceGrafanaUserConfigAuthGenericOauthPtrOutput {
	return o.ToServiceGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(context.Background())
}

func (o ServiceGrafanaUserConfigAuthGenericOauthOutput) ToServiceGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigAuthGenericOauthPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGenericOauth) *ServiceGrafanaUserConfigAuthGenericOauth {
		return &v
	}).(ServiceGrafanaUserConfigAuthGenericOauthPtrOutput)
}
func (o ServiceGrafanaUserConfigAuthGenericOauthOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGenericOauth) *string { return v.AllowSignUp }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGenericOauthOutput) AllowedDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGenericOauth) []string { return v.AllowedDomains }).(pulumi.StringArrayOutput)
}

func (o ServiceGrafanaUserConfigAuthGenericOauthOutput) AllowedOrganizations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGenericOauth) []string { return v.AllowedOrganizations }).(pulumi.StringArrayOutput)
}

func (o ServiceGrafanaUserConfigAuthGenericOauthOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGenericOauth) *string { return v.ApiUrl }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGenericOauthOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGenericOauth) *string { return v.AuthUrl }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGenericOauthOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGenericOauth) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGenericOauthOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGenericOauth) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGenericOauthOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGenericOauth) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGenericOauthOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGenericOauth) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

func (o ServiceGrafanaUserConfigAuthGenericOauthOutput) TokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGenericOauth) *string { return v.TokenUrl }).(pulumi.StringPtrOutput)
}

type ServiceGrafanaUserConfigAuthGenericOauthPtrOutput struct{ *pulumi.OutputState }

func (ServiceGrafanaUserConfigAuthGenericOauthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGrafanaUserConfigAuthGenericOauth)(nil)).Elem()
}

func (o ServiceGrafanaUserConfigAuthGenericOauthPtrOutput) ToServiceGrafanaUserConfigAuthGenericOauthPtrOutput() ServiceGrafanaUserConfigAuthGenericOauthPtrOutput {
	return o
}

func (o ServiceGrafanaUserConfigAuthGenericOauthPtrOutput) ToServiceGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigAuthGenericOauthPtrOutput {
	return o
}

func (o ServiceGrafanaUserConfigAuthGenericOauthPtrOutput) Elem() ServiceGrafanaUserConfigAuthGenericOauthOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGenericOauth) ServiceGrafanaUserConfigAuthGenericOauth { return *v }).(ServiceGrafanaUserConfigAuthGenericOauthOutput)
}

func (o ServiceGrafanaUserConfigAuthGenericOauthPtrOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.AllowSignUp
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGenericOauthPtrOutput) AllowedDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGenericOauth) []string {
		if v == nil {
			return nil
		}
		return v.AllowedDomains
	}).(pulumi.StringArrayOutput)
}

func (o ServiceGrafanaUserConfigAuthGenericOauthPtrOutput) AllowedOrganizations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGenericOauth) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrganizations
	}).(pulumi.StringArrayOutput)
}

func (o ServiceGrafanaUserConfigAuthGenericOauthPtrOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.ApiUrl
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGenericOauthPtrOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.AuthUrl
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGenericOauthPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGenericOauthPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGenericOauthPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGenericOauthPtrOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGenericOauth) []string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringArrayOutput)
}

func (o ServiceGrafanaUserConfigAuthGenericOauthPtrOutput) TokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.TokenUrl
	}).(pulumi.StringPtrOutput)
}

type ServiceGrafanaUserConfigAuthGithub struct {
	AllowSignUp          *string  `pulumi:"allowSignUp"`
	AllowedOrganizations []string `pulumi:"allowedOrganizations"`
	ClientId             *string  `pulumi:"clientId"`
	ClientSecret         *string  `pulumi:"clientSecret"`
	TeamIds              []string `pulumi:"teamIds"`
}

// ServiceGrafanaUserConfigAuthGithubInput is an input type that accepts ServiceGrafanaUserConfigAuthGithubArgs and ServiceGrafanaUserConfigAuthGithubOutput values.
// You can construct a concrete instance of `ServiceGrafanaUserConfigAuthGithubInput` via:
//
//          ServiceGrafanaUserConfigAuthGithubArgs{...}
type ServiceGrafanaUserConfigAuthGithubInput interface {
	pulumi.Input

	ToServiceGrafanaUserConfigAuthGithubOutput() ServiceGrafanaUserConfigAuthGithubOutput
	ToServiceGrafanaUserConfigAuthGithubOutputWithContext(context.Context) ServiceGrafanaUserConfigAuthGithubOutput
}

type ServiceGrafanaUserConfigAuthGithubArgs struct {
	AllowSignUp          pulumi.StringPtrInput   `pulumi:"allowSignUp"`
	AllowedOrganizations pulumi.StringArrayInput `pulumi:"allowedOrganizations"`
	ClientId             pulumi.StringPtrInput   `pulumi:"clientId"`
	ClientSecret         pulumi.StringPtrInput   `pulumi:"clientSecret"`
	TeamIds              pulumi.StringArrayInput `pulumi:"teamIds"`
}

func (ServiceGrafanaUserConfigAuthGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGrafanaUserConfigAuthGithub)(nil)).Elem()
}

func (i ServiceGrafanaUserConfigAuthGithubArgs) ToServiceGrafanaUserConfigAuthGithubOutput() ServiceGrafanaUserConfigAuthGithubOutput {
	return i.ToServiceGrafanaUserConfigAuthGithubOutputWithContext(context.Background())
}

func (i ServiceGrafanaUserConfigAuthGithubArgs) ToServiceGrafanaUserConfigAuthGithubOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigAuthGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigAuthGithubOutput)
}

func (i ServiceGrafanaUserConfigAuthGithubArgs) ToServiceGrafanaUserConfigAuthGithubPtrOutput() ServiceGrafanaUserConfigAuthGithubPtrOutput {
	return i.ToServiceGrafanaUserConfigAuthGithubPtrOutputWithContext(context.Background())
}

func (i ServiceGrafanaUserConfigAuthGithubArgs) ToServiceGrafanaUserConfigAuthGithubPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigAuthGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigAuthGithubOutput).ToServiceGrafanaUserConfigAuthGithubPtrOutputWithContext(ctx)
}

// ServiceGrafanaUserConfigAuthGithubPtrInput is an input type that accepts ServiceGrafanaUserConfigAuthGithubArgs, ServiceGrafanaUserConfigAuthGithubPtr and ServiceGrafanaUserConfigAuthGithubPtrOutput values.
// You can construct a concrete instance of `ServiceGrafanaUserConfigAuthGithubPtrInput` via:
//
//          ServiceGrafanaUserConfigAuthGithubArgs{...}
//
//  or:
//
//          nil
type ServiceGrafanaUserConfigAuthGithubPtrInput interface {
	pulumi.Input

	ToServiceGrafanaUserConfigAuthGithubPtrOutput() ServiceGrafanaUserConfigAuthGithubPtrOutput
	ToServiceGrafanaUserConfigAuthGithubPtrOutputWithContext(context.Context) ServiceGrafanaUserConfigAuthGithubPtrOutput
}

type serviceGrafanaUserConfigAuthGithubPtrType ServiceGrafanaUserConfigAuthGithubArgs

func ServiceGrafanaUserConfigAuthGithubPtr(v *ServiceGrafanaUserConfigAuthGithubArgs) ServiceGrafanaUserConfigAuthGithubPtrInput {
	return (*serviceGrafanaUserConfigAuthGithubPtrType)(v)
}

func (*serviceGrafanaUserConfigAuthGithubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGrafanaUserConfigAuthGithub)(nil)).Elem()
}

func (i *serviceGrafanaUserConfigAuthGithubPtrType) ToServiceGrafanaUserConfigAuthGithubPtrOutput() ServiceGrafanaUserConfigAuthGithubPtrOutput {
	return i.ToServiceGrafanaUserConfigAuthGithubPtrOutputWithContext(context.Background())
}

func (i *serviceGrafanaUserConfigAuthGithubPtrType) ToServiceGrafanaUserConfigAuthGithubPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigAuthGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigAuthGithubPtrOutput)
}

type ServiceGrafanaUserConfigAuthGithubOutput struct{ *pulumi.OutputState }

func (ServiceGrafanaUserConfigAuthGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGrafanaUserConfigAuthGithub)(nil)).Elem()
}

func (o ServiceGrafanaUserConfigAuthGithubOutput) ToServiceGrafanaUserConfigAuthGithubOutput() ServiceGrafanaUserConfigAuthGithubOutput {
	return o
}

func (o ServiceGrafanaUserConfigAuthGithubOutput) ToServiceGrafanaUserConfigAuthGithubOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigAuthGithubOutput {
	return o
}

func (o ServiceGrafanaUserConfigAuthGithubOutput) ToServiceGrafanaUserConfigAuthGithubPtrOutput() ServiceGrafanaUserConfigAuthGithubPtrOutput {
	return o.ToServiceGrafanaUserConfigAuthGithubPtrOutputWithContext(context.Background())
}

func (o ServiceGrafanaUserConfigAuthGithubOutput) ToServiceGrafanaUserConfigAuthGithubPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigAuthGithubPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGithub) *ServiceGrafanaUserConfigAuthGithub {
		return &v
	}).(ServiceGrafanaUserConfigAuthGithubPtrOutput)
}
func (o ServiceGrafanaUserConfigAuthGithubOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGithub) *string { return v.AllowSignUp }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGithubOutput) AllowedOrganizations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGithub) []string { return v.AllowedOrganizations }).(pulumi.StringArrayOutput)
}

func (o ServiceGrafanaUserConfigAuthGithubOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGithub) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGithubOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGithub) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGithubOutput) TeamIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGithub) []string { return v.TeamIds }).(pulumi.StringArrayOutput)
}

type ServiceGrafanaUserConfigAuthGithubPtrOutput struct{ *pulumi.OutputState }

func (ServiceGrafanaUserConfigAuthGithubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGrafanaUserConfigAuthGithub)(nil)).Elem()
}

func (o ServiceGrafanaUserConfigAuthGithubPtrOutput) ToServiceGrafanaUserConfigAuthGithubPtrOutput() ServiceGrafanaUserConfigAuthGithubPtrOutput {
	return o
}

func (o ServiceGrafanaUserConfigAuthGithubPtrOutput) ToServiceGrafanaUserConfigAuthGithubPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigAuthGithubPtrOutput {
	return o
}

func (o ServiceGrafanaUserConfigAuthGithubPtrOutput) Elem() ServiceGrafanaUserConfigAuthGithubOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGithub) ServiceGrafanaUserConfigAuthGithub { return *v }).(ServiceGrafanaUserConfigAuthGithubOutput)
}

func (o ServiceGrafanaUserConfigAuthGithubPtrOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGithub) *string {
		if v == nil {
			return nil
		}
		return v.AllowSignUp
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGithubPtrOutput) AllowedOrganizations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGithub) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrganizations
	}).(pulumi.StringArrayOutput)
}

func (o ServiceGrafanaUserConfigAuthGithubPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGithub) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGithubPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGithub) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGithubPtrOutput) TeamIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGithub) []string {
		if v == nil {
			return nil
		}
		return v.TeamIds
	}).(pulumi.StringArrayOutput)
}

type ServiceGrafanaUserConfigAuthGitlab struct {
	AllowSignUp   *string  `pulumi:"allowSignUp"`
	AllowedGroups []string `pulumi:"allowedGroups"`
	ApiUrl        *string  `pulumi:"apiUrl"`
	AuthUrl       *string  `pulumi:"authUrl"`
	ClientId      *string  `pulumi:"clientId"`
	ClientSecret  *string  `pulumi:"clientSecret"`
	TokenUrl      *string  `pulumi:"tokenUrl"`
}

// ServiceGrafanaUserConfigAuthGitlabInput is an input type that accepts ServiceGrafanaUserConfigAuthGitlabArgs and ServiceGrafanaUserConfigAuthGitlabOutput values.
// You can construct a concrete instance of `ServiceGrafanaUserConfigAuthGitlabInput` via:
//
//          ServiceGrafanaUserConfigAuthGitlabArgs{...}
type ServiceGrafanaUserConfigAuthGitlabInput interface {
	pulumi.Input

	ToServiceGrafanaUserConfigAuthGitlabOutput() ServiceGrafanaUserConfigAuthGitlabOutput
	ToServiceGrafanaUserConfigAuthGitlabOutputWithContext(context.Context) ServiceGrafanaUserConfigAuthGitlabOutput
}

type ServiceGrafanaUserConfigAuthGitlabArgs struct {
	AllowSignUp   pulumi.StringPtrInput   `pulumi:"allowSignUp"`
	AllowedGroups pulumi.StringArrayInput `pulumi:"allowedGroups"`
	ApiUrl        pulumi.StringPtrInput   `pulumi:"apiUrl"`
	AuthUrl       pulumi.StringPtrInput   `pulumi:"authUrl"`
	ClientId      pulumi.StringPtrInput   `pulumi:"clientId"`
	ClientSecret  pulumi.StringPtrInput   `pulumi:"clientSecret"`
	TokenUrl      pulumi.StringPtrInput   `pulumi:"tokenUrl"`
}

func (ServiceGrafanaUserConfigAuthGitlabArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGrafanaUserConfigAuthGitlab)(nil)).Elem()
}

func (i ServiceGrafanaUserConfigAuthGitlabArgs) ToServiceGrafanaUserConfigAuthGitlabOutput() ServiceGrafanaUserConfigAuthGitlabOutput {
	return i.ToServiceGrafanaUserConfigAuthGitlabOutputWithContext(context.Background())
}

func (i ServiceGrafanaUserConfigAuthGitlabArgs) ToServiceGrafanaUserConfigAuthGitlabOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigAuthGitlabOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigAuthGitlabOutput)
}

func (i ServiceGrafanaUserConfigAuthGitlabArgs) ToServiceGrafanaUserConfigAuthGitlabPtrOutput() ServiceGrafanaUserConfigAuthGitlabPtrOutput {
	return i.ToServiceGrafanaUserConfigAuthGitlabPtrOutputWithContext(context.Background())
}

func (i ServiceGrafanaUserConfigAuthGitlabArgs) ToServiceGrafanaUserConfigAuthGitlabPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigAuthGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigAuthGitlabOutput).ToServiceGrafanaUserConfigAuthGitlabPtrOutputWithContext(ctx)
}

// ServiceGrafanaUserConfigAuthGitlabPtrInput is an input type that accepts ServiceGrafanaUserConfigAuthGitlabArgs, ServiceGrafanaUserConfigAuthGitlabPtr and ServiceGrafanaUserConfigAuthGitlabPtrOutput values.
// You can construct a concrete instance of `ServiceGrafanaUserConfigAuthGitlabPtrInput` via:
//
//          ServiceGrafanaUserConfigAuthGitlabArgs{...}
//
//  or:
//
//          nil
type ServiceGrafanaUserConfigAuthGitlabPtrInput interface {
	pulumi.Input

	ToServiceGrafanaUserConfigAuthGitlabPtrOutput() ServiceGrafanaUserConfigAuthGitlabPtrOutput
	ToServiceGrafanaUserConfigAuthGitlabPtrOutputWithContext(context.Context) ServiceGrafanaUserConfigAuthGitlabPtrOutput
}

type serviceGrafanaUserConfigAuthGitlabPtrType ServiceGrafanaUserConfigAuthGitlabArgs

func ServiceGrafanaUserConfigAuthGitlabPtr(v *ServiceGrafanaUserConfigAuthGitlabArgs) ServiceGrafanaUserConfigAuthGitlabPtrInput {
	return (*serviceGrafanaUserConfigAuthGitlabPtrType)(v)
}

func (*serviceGrafanaUserConfigAuthGitlabPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGrafanaUserConfigAuthGitlab)(nil)).Elem()
}

func (i *serviceGrafanaUserConfigAuthGitlabPtrType) ToServiceGrafanaUserConfigAuthGitlabPtrOutput() ServiceGrafanaUserConfigAuthGitlabPtrOutput {
	return i.ToServiceGrafanaUserConfigAuthGitlabPtrOutputWithContext(context.Background())
}

func (i *serviceGrafanaUserConfigAuthGitlabPtrType) ToServiceGrafanaUserConfigAuthGitlabPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigAuthGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigAuthGitlabPtrOutput)
}

type ServiceGrafanaUserConfigAuthGitlabOutput struct{ *pulumi.OutputState }

func (ServiceGrafanaUserConfigAuthGitlabOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGrafanaUserConfigAuthGitlab)(nil)).Elem()
}

func (o ServiceGrafanaUserConfigAuthGitlabOutput) ToServiceGrafanaUserConfigAuthGitlabOutput() ServiceGrafanaUserConfigAuthGitlabOutput {
	return o
}

func (o ServiceGrafanaUserConfigAuthGitlabOutput) ToServiceGrafanaUserConfigAuthGitlabOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigAuthGitlabOutput {
	return o
}

func (o ServiceGrafanaUserConfigAuthGitlabOutput) ToServiceGrafanaUserConfigAuthGitlabPtrOutput() ServiceGrafanaUserConfigAuthGitlabPtrOutput {
	return o.ToServiceGrafanaUserConfigAuthGitlabPtrOutputWithContext(context.Background())
}

func (o ServiceGrafanaUserConfigAuthGitlabOutput) ToServiceGrafanaUserConfigAuthGitlabPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigAuthGitlabPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGitlab) *ServiceGrafanaUserConfigAuthGitlab {
		return &v
	}).(ServiceGrafanaUserConfigAuthGitlabPtrOutput)
}
func (o ServiceGrafanaUserConfigAuthGitlabOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGitlab) *string { return v.AllowSignUp }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGitlabOutput) AllowedGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGitlab) []string { return v.AllowedGroups }).(pulumi.StringArrayOutput)
}

func (o ServiceGrafanaUserConfigAuthGitlabOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGitlab) *string { return v.ApiUrl }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGitlabOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGitlab) *string { return v.AuthUrl }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGitlabOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGitlab) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGitlabOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGitlab) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGitlabOutput) TokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGitlab) *string { return v.TokenUrl }).(pulumi.StringPtrOutput)
}

type ServiceGrafanaUserConfigAuthGitlabPtrOutput struct{ *pulumi.OutputState }

func (ServiceGrafanaUserConfigAuthGitlabPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGrafanaUserConfigAuthGitlab)(nil)).Elem()
}

func (o ServiceGrafanaUserConfigAuthGitlabPtrOutput) ToServiceGrafanaUserConfigAuthGitlabPtrOutput() ServiceGrafanaUserConfigAuthGitlabPtrOutput {
	return o
}

func (o ServiceGrafanaUserConfigAuthGitlabPtrOutput) ToServiceGrafanaUserConfigAuthGitlabPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigAuthGitlabPtrOutput {
	return o
}

func (o ServiceGrafanaUserConfigAuthGitlabPtrOutput) Elem() ServiceGrafanaUserConfigAuthGitlabOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGitlab) ServiceGrafanaUserConfigAuthGitlab { return *v }).(ServiceGrafanaUserConfigAuthGitlabOutput)
}

func (o ServiceGrafanaUserConfigAuthGitlabPtrOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGitlab) *string {
		if v == nil {
			return nil
		}
		return v.AllowSignUp
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGitlabPtrOutput) AllowedGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGitlab) []string {
		if v == nil {
			return nil
		}
		return v.AllowedGroups
	}).(pulumi.StringArrayOutput)
}

func (o ServiceGrafanaUserConfigAuthGitlabPtrOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGitlab) *string {
		if v == nil {
			return nil
		}
		return v.ApiUrl
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGitlabPtrOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGitlab) *string {
		if v == nil {
			return nil
		}
		return v.AuthUrl
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGitlabPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGitlab) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGitlabPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGitlab) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGitlabPtrOutput) TokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGitlab) *string {
		if v == nil {
			return nil
		}
		return v.TokenUrl
	}).(pulumi.StringPtrOutput)
}

type ServiceGrafanaUserConfigAuthGoogle struct {
	AllowSignUp    *string  `pulumi:"allowSignUp"`
	AllowedDomains []string `pulumi:"allowedDomains"`
	ClientId       *string  `pulumi:"clientId"`
	ClientSecret   *string  `pulumi:"clientSecret"`
}

// ServiceGrafanaUserConfigAuthGoogleInput is an input type that accepts ServiceGrafanaUserConfigAuthGoogleArgs and ServiceGrafanaUserConfigAuthGoogleOutput values.
// You can construct a concrete instance of `ServiceGrafanaUserConfigAuthGoogleInput` via:
//
//          ServiceGrafanaUserConfigAuthGoogleArgs{...}
type ServiceGrafanaUserConfigAuthGoogleInput interface {
	pulumi.Input

	ToServiceGrafanaUserConfigAuthGoogleOutput() ServiceGrafanaUserConfigAuthGoogleOutput
	ToServiceGrafanaUserConfigAuthGoogleOutputWithContext(context.Context) ServiceGrafanaUserConfigAuthGoogleOutput
}

type ServiceGrafanaUserConfigAuthGoogleArgs struct {
	AllowSignUp    pulumi.StringPtrInput   `pulumi:"allowSignUp"`
	AllowedDomains pulumi.StringArrayInput `pulumi:"allowedDomains"`
	ClientId       pulumi.StringPtrInput   `pulumi:"clientId"`
	ClientSecret   pulumi.StringPtrInput   `pulumi:"clientSecret"`
}

func (ServiceGrafanaUserConfigAuthGoogleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGrafanaUserConfigAuthGoogle)(nil)).Elem()
}

func (i ServiceGrafanaUserConfigAuthGoogleArgs) ToServiceGrafanaUserConfigAuthGoogleOutput() ServiceGrafanaUserConfigAuthGoogleOutput {
	return i.ToServiceGrafanaUserConfigAuthGoogleOutputWithContext(context.Background())
}

func (i ServiceGrafanaUserConfigAuthGoogleArgs) ToServiceGrafanaUserConfigAuthGoogleOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigAuthGoogleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigAuthGoogleOutput)
}

func (i ServiceGrafanaUserConfigAuthGoogleArgs) ToServiceGrafanaUserConfigAuthGooglePtrOutput() ServiceGrafanaUserConfigAuthGooglePtrOutput {
	return i.ToServiceGrafanaUserConfigAuthGooglePtrOutputWithContext(context.Background())
}

func (i ServiceGrafanaUserConfigAuthGoogleArgs) ToServiceGrafanaUserConfigAuthGooglePtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigAuthGooglePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigAuthGoogleOutput).ToServiceGrafanaUserConfigAuthGooglePtrOutputWithContext(ctx)
}

// ServiceGrafanaUserConfigAuthGooglePtrInput is an input type that accepts ServiceGrafanaUserConfigAuthGoogleArgs, ServiceGrafanaUserConfigAuthGooglePtr and ServiceGrafanaUserConfigAuthGooglePtrOutput values.
// You can construct a concrete instance of `ServiceGrafanaUserConfigAuthGooglePtrInput` via:
//
//          ServiceGrafanaUserConfigAuthGoogleArgs{...}
//
//  or:
//
//          nil
type ServiceGrafanaUserConfigAuthGooglePtrInput interface {
	pulumi.Input

	ToServiceGrafanaUserConfigAuthGooglePtrOutput() ServiceGrafanaUserConfigAuthGooglePtrOutput
	ToServiceGrafanaUserConfigAuthGooglePtrOutputWithContext(context.Context) ServiceGrafanaUserConfigAuthGooglePtrOutput
}

type serviceGrafanaUserConfigAuthGooglePtrType ServiceGrafanaUserConfigAuthGoogleArgs

func ServiceGrafanaUserConfigAuthGooglePtr(v *ServiceGrafanaUserConfigAuthGoogleArgs) ServiceGrafanaUserConfigAuthGooglePtrInput {
	return (*serviceGrafanaUserConfigAuthGooglePtrType)(v)
}

func (*serviceGrafanaUserConfigAuthGooglePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGrafanaUserConfigAuthGoogle)(nil)).Elem()
}

func (i *serviceGrafanaUserConfigAuthGooglePtrType) ToServiceGrafanaUserConfigAuthGooglePtrOutput() ServiceGrafanaUserConfigAuthGooglePtrOutput {
	return i.ToServiceGrafanaUserConfigAuthGooglePtrOutputWithContext(context.Background())
}

func (i *serviceGrafanaUserConfigAuthGooglePtrType) ToServiceGrafanaUserConfigAuthGooglePtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigAuthGooglePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigAuthGooglePtrOutput)
}

type ServiceGrafanaUserConfigAuthGoogleOutput struct{ *pulumi.OutputState }

func (ServiceGrafanaUserConfigAuthGoogleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGrafanaUserConfigAuthGoogle)(nil)).Elem()
}

func (o ServiceGrafanaUserConfigAuthGoogleOutput) ToServiceGrafanaUserConfigAuthGoogleOutput() ServiceGrafanaUserConfigAuthGoogleOutput {
	return o
}

func (o ServiceGrafanaUserConfigAuthGoogleOutput) ToServiceGrafanaUserConfigAuthGoogleOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigAuthGoogleOutput {
	return o
}

func (o ServiceGrafanaUserConfigAuthGoogleOutput) ToServiceGrafanaUserConfigAuthGooglePtrOutput() ServiceGrafanaUserConfigAuthGooglePtrOutput {
	return o.ToServiceGrafanaUserConfigAuthGooglePtrOutputWithContext(context.Background())
}

func (o ServiceGrafanaUserConfigAuthGoogleOutput) ToServiceGrafanaUserConfigAuthGooglePtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigAuthGooglePtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGoogle) *ServiceGrafanaUserConfigAuthGoogle {
		return &v
	}).(ServiceGrafanaUserConfigAuthGooglePtrOutput)
}
func (o ServiceGrafanaUserConfigAuthGoogleOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGoogle) *string { return v.AllowSignUp }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGoogleOutput) AllowedDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGoogle) []string { return v.AllowedDomains }).(pulumi.StringArrayOutput)
}

func (o ServiceGrafanaUserConfigAuthGoogleOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGoogle) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGoogleOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigAuthGoogle) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

type ServiceGrafanaUserConfigAuthGooglePtrOutput struct{ *pulumi.OutputState }

func (ServiceGrafanaUserConfigAuthGooglePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGrafanaUserConfigAuthGoogle)(nil)).Elem()
}

func (o ServiceGrafanaUserConfigAuthGooglePtrOutput) ToServiceGrafanaUserConfigAuthGooglePtrOutput() ServiceGrafanaUserConfigAuthGooglePtrOutput {
	return o
}

func (o ServiceGrafanaUserConfigAuthGooglePtrOutput) ToServiceGrafanaUserConfigAuthGooglePtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigAuthGooglePtrOutput {
	return o
}

func (o ServiceGrafanaUserConfigAuthGooglePtrOutput) Elem() ServiceGrafanaUserConfigAuthGoogleOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGoogle) ServiceGrafanaUserConfigAuthGoogle { return *v }).(ServiceGrafanaUserConfigAuthGoogleOutput)
}

func (o ServiceGrafanaUserConfigAuthGooglePtrOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGoogle) *string {
		if v == nil {
			return nil
		}
		return v.AllowSignUp
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGooglePtrOutput) AllowedDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGoogle) []string {
		if v == nil {
			return nil
		}
		return v.AllowedDomains
	}).(pulumi.StringArrayOutput)
}

func (o ServiceGrafanaUserConfigAuthGooglePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGoogle) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigAuthGooglePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigAuthGoogle) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

type ServiceGrafanaUserConfigExternalImageStorage struct {
	AccessKey *string `pulumi:"accessKey"`
	BucketUrl *string `pulumi:"bucketUrl"`
	Provider  *string `pulumi:"provider"`
	SecretKey *string `pulumi:"secretKey"`
}

// ServiceGrafanaUserConfigExternalImageStorageInput is an input type that accepts ServiceGrafanaUserConfigExternalImageStorageArgs and ServiceGrafanaUserConfigExternalImageStorageOutput values.
// You can construct a concrete instance of `ServiceGrafanaUserConfigExternalImageStorageInput` via:
//
//          ServiceGrafanaUserConfigExternalImageStorageArgs{...}
type ServiceGrafanaUserConfigExternalImageStorageInput interface {
	pulumi.Input

	ToServiceGrafanaUserConfigExternalImageStorageOutput() ServiceGrafanaUserConfigExternalImageStorageOutput
	ToServiceGrafanaUserConfigExternalImageStorageOutputWithContext(context.Context) ServiceGrafanaUserConfigExternalImageStorageOutput
}

type ServiceGrafanaUserConfigExternalImageStorageArgs struct {
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	BucketUrl pulumi.StringPtrInput `pulumi:"bucketUrl"`
	Provider  pulumi.StringPtrInput `pulumi:"provider"`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
}

func (ServiceGrafanaUserConfigExternalImageStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGrafanaUserConfigExternalImageStorage)(nil)).Elem()
}

func (i ServiceGrafanaUserConfigExternalImageStorageArgs) ToServiceGrafanaUserConfigExternalImageStorageOutput() ServiceGrafanaUserConfigExternalImageStorageOutput {
	return i.ToServiceGrafanaUserConfigExternalImageStorageOutputWithContext(context.Background())
}

func (i ServiceGrafanaUserConfigExternalImageStorageArgs) ToServiceGrafanaUserConfigExternalImageStorageOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigExternalImageStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigExternalImageStorageOutput)
}

func (i ServiceGrafanaUserConfigExternalImageStorageArgs) ToServiceGrafanaUserConfigExternalImageStoragePtrOutput() ServiceGrafanaUserConfigExternalImageStoragePtrOutput {
	return i.ToServiceGrafanaUserConfigExternalImageStoragePtrOutputWithContext(context.Background())
}

func (i ServiceGrafanaUserConfigExternalImageStorageArgs) ToServiceGrafanaUserConfigExternalImageStoragePtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigExternalImageStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigExternalImageStorageOutput).ToServiceGrafanaUserConfigExternalImageStoragePtrOutputWithContext(ctx)
}

// ServiceGrafanaUserConfigExternalImageStoragePtrInput is an input type that accepts ServiceGrafanaUserConfigExternalImageStorageArgs, ServiceGrafanaUserConfigExternalImageStoragePtr and ServiceGrafanaUserConfigExternalImageStoragePtrOutput values.
// You can construct a concrete instance of `ServiceGrafanaUserConfigExternalImageStoragePtrInput` via:
//
//          ServiceGrafanaUserConfigExternalImageStorageArgs{...}
//
//  or:
//
//          nil
type ServiceGrafanaUserConfigExternalImageStoragePtrInput interface {
	pulumi.Input

	ToServiceGrafanaUserConfigExternalImageStoragePtrOutput() ServiceGrafanaUserConfigExternalImageStoragePtrOutput
	ToServiceGrafanaUserConfigExternalImageStoragePtrOutputWithContext(context.Context) ServiceGrafanaUserConfigExternalImageStoragePtrOutput
}

type serviceGrafanaUserConfigExternalImageStoragePtrType ServiceGrafanaUserConfigExternalImageStorageArgs

func ServiceGrafanaUserConfigExternalImageStoragePtr(v *ServiceGrafanaUserConfigExternalImageStorageArgs) ServiceGrafanaUserConfigExternalImageStoragePtrInput {
	return (*serviceGrafanaUserConfigExternalImageStoragePtrType)(v)
}

func (*serviceGrafanaUserConfigExternalImageStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGrafanaUserConfigExternalImageStorage)(nil)).Elem()
}

func (i *serviceGrafanaUserConfigExternalImageStoragePtrType) ToServiceGrafanaUserConfigExternalImageStoragePtrOutput() ServiceGrafanaUserConfigExternalImageStoragePtrOutput {
	return i.ToServiceGrafanaUserConfigExternalImageStoragePtrOutputWithContext(context.Background())
}

func (i *serviceGrafanaUserConfigExternalImageStoragePtrType) ToServiceGrafanaUserConfigExternalImageStoragePtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigExternalImageStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigExternalImageStoragePtrOutput)
}

type ServiceGrafanaUserConfigExternalImageStorageOutput struct{ *pulumi.OutputState }

func (ServiceGrafanaUserConfigExternalImageStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGrafanaUserConfigExternalImageStorage)(nil)).Elem()
}

func (o ServiceGrafanaUserConfigExternalImageStorageOutput) ToServiceGrafanaUserConfigExternalImageStorageOutput() ServiceGrafanaUserConfigExternalImageStorageOutput {
	return o
}

func (o ServiceGrafanaUserConfigExternalImageStorageOutput) ToServiceGrafanaUserConfigExternalImageStorageOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigExternalImageStorageOutput {
	return o
}

func (o ServiceGrafanaUserConfigExternalImageStorageOutput) ToServiceGrafanaUserConfigExternalImageStoragePtrOutput() ServiceGrafanaUserConfigExternalImageStoragePtrOutput {
	return o.ToServiceGrafanaUserConfigExternalImageStoragePtrOutputWithContext(context.Background())
}

func (o ServiceGrafanaUserConfigExternalImageStorageOutput) ToServiceGrafanaUserConfigExternalImageStoragePtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigExternalImageStoragePtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigExternalImageStorage) *ServiceGrafanaUserConfigExternalImageStorage {
		return &v
	}).(ServiceGrafanaUserConfigExternalImageStoragePtrOutput)
}
func (o ServiceGrafanaUserConfigExternalImageStorageOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigExternalImageStorage) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigExternalImageStorageOutput) BucketUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigExternalImageStorage) *string { return v.BucketUrl }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigExternalImageStorageOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigExternalImageStorage) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigExternalImageStorageOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigExternalImageStorage) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

type ServiceGrafanaUserConfigExternalImageStoragePtrOutput struct{ *pulumi.OutputState }

func (ServiceGrafanaUserConfigExternalImageStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGrafanaUserConfigExternalImageStorage)(nil)).Elem()
}

func (o ServiceGrafanaUserConfigExternalImageStoragePtrOutput) ToServiceGrafanaUserConfigExternalImageStoragePtrOutput() ServiceGrafanaUserConfigExternalImageStoragePtrOutput {
	return o
}

func (o ServiceGrafanaUserConfigExternalImageStoragePtrOutput) ToServiceGrafanaUserConfigExternalImageStoragePtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigExternalImageStoragePtrOutput {
	return o
}

func (o ServiceGrafanaUserConfigExternalImageStoragePtrOutput) Elem() ServiceGrafanaUserConfigExternalImageStorageOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigExternalImageStorage) ServiceGrafanaUserConfigExternalImageStorage {
		return *v
	}).(ServiceGrafanaUserConfigExternalImageStorageOutput)
}

func (o ServiceGrafanaUserConfigExternalImageStoragePtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigExternalImageStorage) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigExternalImageStoragePtrOutput) BucketUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigExternalImageStorage) *string {
		if v == nil {
			return nil
		}
		return v.BucketUrl
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigExternalImageStoragePtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigExternalImageStorage) *string {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigExternalImageStoragePtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigExternalImageStorage) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

type ServiceGrafanaUserConfigPrivateAccess struct {
	Grafana *string `pulumi:"grafana"`
}

// ServiceGrafanaUserConfigPrivateAccessInput is an input type that accepts ServiceGrafanaUserConfigPrivateAccessArgs and ServiceGrafanaUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `ServiceGrafanaUserConfigPrivateAccessInput` via:
//
//          ServiceGrafanaUserConfigPrivateAccessArgs{...}
type ServiceGrafanaUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToServiceGrafanaUserConfigPrivateAccessOutput() ServiceGrafanaUserConfigPrivateAccessOutput
	ToServiceGrafanaUserConfigPrivateAccessOutputWithContext(context.Context) ServiceGrafanaUserConfigPrivateAccessOutput
}

type ServiceGrafanaUserConfigPrivateAccessArgs struct {
	Grafana pulumi.StringPtrInput `pulumi:"grafana"`
}

func (ServiceGrafanaUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGrafanaUserConfigPrivateAccess)(nil)).Elem()
}

func (i ServiceGrafanaUserConfigPrivateAccessArgs) ToServiceGrafanaUserConfigPrivateAccessOutput() ServiceGrafanaUserConfigPrivateAccessOutput {
	return i.ToServiceGrafanaUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i ServiceGrafanaUserConfigPrivateAccessArgs) ToServiceGrafanaUserConfigPrivateAccessOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigPrivateAccessOutput)
}

func (i ServiceGrafanaUserConfigPrivateAccessArgs) ToServiceGrafanaUserConfigPrivateAccessPtrOutput() ServiceGrafanaUserConfigPrivateAccessPtrOutput {
	return i.ToServiceGrafanaUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i ServiceGrafanaUserConfigPrivateAccessArgs) ToServiceGrafanaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigPrivateAccessOutput).ToServiceGrafanaUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// ServiceGrafanaUserConfigPrivateAccessPtrInput is an input type that accepts ServiceGrafanaUserConfigPrivateAccessArgs, ServiceGrafanaUserConfigPrivateAccessPtr and ServiceGrafanaUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `ServiceGrafanaUserConfigPrivateAccessPtrInput` via:
//
//          ServiceGrafanaUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type ServiceGrafanaUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToServiceGrafanaUserConfigPrivateAccessPtrOutput() ServiceGrafanaUserConfigPrivateAccessPtrOutput
	ToServiceGrafanaUserConfigPrivateAccessPtrOutputWithContext(context.Context) ServiceGrafanaUserConfigPrivateAccessPtrOutput
}

type serviceGrafanaUserConfigPrivateAccessPtrType ServiceGrafanaUserConfigPrivateAccessArgs

func ServiceGrafanaUserConfigPrivateAccessPtr(v *ServiceGrafanaUserConfigPrivateAccessArgs) ServiceGrafanaUserConfigPrivateAccessPtrInput {
	return (*serviceGrafanaUserConfigPrivateAccessPtrType)(v)
}

func (*serviceGrafanaUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGrafanaUserConfigPrivateAccess)(nil)).Elem()
}

func (i *serviceGrafanaUserConfigPrivateAccessPtrType) ToServiceGrafanaUserConfigPrivateAccessPtrOutput() ServiceGrafanaUserConfigPrivateAccessPtrOutput {
	return i.ToServiceGrafanaUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *serviceGrafanaUserConfigPrivateAccessPtrType) ToServiceGrafanaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigPrivateAccessPtrOutput)
}

type ServiceGrafanaUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (ServiceGrafanaUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGrafanaUserConfigPrivateAccess)(nil)).Elem()
}

func (o ServiceGrafanaUserConfigPrivateAccessOutput) ToServiceGrafanaUserConfigPrivateAccessOutput() ServiceGrafanaUserConfigPrivateAccessOutput {
	return o
}

func (o ServiceGrafanaUserConfigPrivateAccessOutput) ToServiceGrafanaUserConfigPrivateAccessOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigPrivateAccessOutput {
	return o
}

func (o ServiceGrafanaUserConfigPrivateAccessOutput) ToServiceGrafanaUserConfigPrivateAccessPtrOutput() ServiceGrafanaUserConfigPrivateAccessPtrOutput {
	return o.ToServiceGrafanaUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o ServiceGrafanaUserConfigPrivateAccessOutput) ToServiceGrafanaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigPrivateAccess) *ServiceGrafanaUserConfigPrivateAccess {
		return &v
	}).(ServiceGrafanaUserConfigPrivateAccessPtrOutput)
}
func (o ServiceGrafanaUserConfigPrivateAccessOutput) Grafana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigPrivateAccess) *string { return v.Grafana }).(pulumi.StringPtrOutput)
}

type ServiceGrafanaUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (ServiceGrafanaUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGrafanaUserConfigPrivateAccess)(nil)).Elem()
}

func (o ServiceGrafanaUserConfigPrivateAccessPtrOutput) ToServiceGrafanaUserConfigPrivateAccessPtrOutput() ServiceGrafanaUserConfigPrivateAccessPtrOutput {
	return o
}

func (o ServiceGrafanaUserConfigPrivateAccessPtrOutput) ToServiceGrafanaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigPrivateAccessPtrOutput {
	return o
}

func (o ServiceGrafanaUserConfigPrivateAccessPtrOutput) Elem() ServiceGrafanaUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigPrivateAccess) ServiceGrafanaUserConfigPrivateAccess { return *v }).(ServiceGrafanaUserConfigPrivateAccessOutput)
}

func (o ServiceGrafanaUserConfigPrivateAccessPtrOutput) Grafana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Grafana
	}).(pulumi.StringPtrOutput)
}

type ServiceGrafanaUserConfigPrivatelinkAccess struct {
	Grafana *string `pulumi:"grafana"`
}

// ServiceGrafanaUserConfigPrivatelinkAccessInput is an input type that accepts ServiceGrafanaUserConfigPrivatelinkAccessArgs and ServiceGrafanaUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `ServiceGrafanaUserConfigPrivatelinkAccessInput` via:
//
//          ServiceGrafanaUserConfigPrivatelinkAccessArgs{...}
type ServiceGrafanaUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToServiceGrafanaUserConfigPrivatelinkAccessOutput() ServiceGrafanaUserConfigPrivatelinkAccessOutput
	ToServiceGrafanaUserConfigPrivatelinkAccessOutputWithContext(context.Context) ServiceGrafanaUserConfigPrivatelinkAccessOutput
}

type ServiceGrafanaUserConfigPrivatelinkAccessArgs struct {
	Grafana pulumi.StringPtrInput `pulumi:"grafana"`
}

func (ServiceGrafanaUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGrafanaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i ServiceGrafanaUserConfigPrivatelinkAccessArgs) ToServiceGrafanaUserConfigPrivatelinkAccessOutput() ServiceGrafanaUserConfigPrivatelinkAccessOutput {
	return i.ToServiceGrafanaUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i ServiceGrafanaUserConfigPrivatelinkAccessArgs) ToServiceGrafanaUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigPrivatelinkAccessOutput)
}

func (i ServiceGrafanaUserConfigPrivatelinkAccessArgs) ToServiceGrafanaUserConfigPrivatelinkAccessPtrOutput() ServiceGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return i.ToServiceGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i ServiceGrafanaUserConfigPrivatelinkAccessArgs) ToServiceGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigPrivatelinkAccessOutput).ToServiceGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// ServiceGrafanaUserConfigPrivatelinkAccessPtrInput is an input type that accepts ServiceGrafanaUserConfigPrivatelinkAccessArgs, ServiceGrafanaUserConfigPrivatelinkAccessPtr and ServiceGrafanaUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `ServiceGrafanaUserConfigPrivatelinkAccessPtrInput` via:
//
//          ServiceGrafanaUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type ServiceGrafanaUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToServiceGrafanaUserConfigPrivatelinkAccessPtrOutput() ServiceGrafanaUserConfigPrivatelinkAccessPtrOutput
	ToServiceGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) ServiceGrafanaUserConfigPrivatelinkAccessPtrOutput
}

type serviceGrafanaUserConfigPrivatelinkAccessPtrType ServiceGrafanaUserConfigPrivatelinkAccessArgs

func ServiceGrafanaUserConfigPrivatelinkAccessPtr(v *ServiceGrafanaUserConfigPrivatelinkAccessArgs) ServiceGrafanaUserConfigPrivatelinkAccessPtrInput {
	return (*serviceGrafanaUserConfigPrivatelinkAccessPtrType)(v)
}

func (*serviceGrafanaUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGrafanaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *serviceGrafanaUserConfigPrivatelinkAccessPtrType) ToServiceGrafanaUserConfigPrivatelinkAccessPtrOutput() ServiceGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return i.ToServiceGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *serviceGrafanaUserConfigPrivatelinkAccessPtrType) ToServiceGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigPrivatelinkAccessPtrOutput)
}

type ServiceGrafanaUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (ServiceGrafanaUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGrafanaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o ServiceGrafanaUserConfigPrivatelinkAccessOutput) ToServiceGrafanaUserConfigPrivatelinkAccessOutput() ServiceGrafanaUserConfigPrivatelinkAccessOutput {
	return o
}

func (o ServiceGrafanaUserConfigPrivatelinkAccessOutput) ToServiceGrafanaUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigPrivatelinkAccessOutput {
	return o
}

func (o ServiceGrafanaUserConfigPrivatelinkAccessOutput) ToServiceGrafanaUserConfigPrivatelinkAccessPtrOutput() ServiceGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return o.ToServiceGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o ServiceGrafanaUserConfigPrivatelinkAccessOutput) ToServiceGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigPrivatelinkAccess) *ServiceGrafanaUserConfigPrivatelinkAccess {
		return &v
	}).(ServiceGrafanaUserConfigPrivatelinkAccessPtrOutput)
}
func (o ServiceGrafanaUserConfigPrivatelinkAccessOutput) Grafana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigPrivatelinkAccess) *string { return v.Grafana }).(pulumi.StringPtrOutput)
}

type ServiceGrafanaUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (ServiceGrafanaUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGrafanaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o ServiceGrafanaUserConfigPrivatelinkAccessPtrOutput) ToServiceGrafanaUserConfigPrivatelinkAccessPtrOutput() ServiceGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o ServiceGrafanaUserConfigPrivatelinkAccessPtrOutput) ToServiceGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o ServiceGrafanaUserConfigPrivatelinkAccessPtrOutput) Elem() ServiceGrafanaUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigPrivatelinkAccess) ServiceGrafanaUserConfigPrivatelinkAccess {
		return *v
	}).(ServiceGrafanaUserConfigPrivatelinkAccessOutput)
}

func (o ServiceGrafanaUserConfigPrivatelinkAccessPtrOutput) Grafana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Grafana
	}).(pulumi.StringPtrOutput)
}

type ServiceGrafanaUserConfigPublicAccess struct {
	Grafana *string `pulumi:"grafana"`
}

// ServiceGrafanaUserConfigPublicAccessInput is an input type that accepts ServiceGrafanaUserConfigPublicAccessArgs and ServiceGrafanaUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `ServiceGrafanaUserConfigPublicAccessInput` via:
//
//          ServiceGrafanaUserConfigPublicAccessArgs{...}
type ServiceGrafanaUserConfigPublicAccessInput interface {
	pulumi.Input

	ToServiceGrafanaUserConfigPublicAccessOutput() ServiceGrafanaUserConfigPublicAccessOutput
	ToServiceGrafanaUserConfigPublicAccessOutputWithContext(context.Context) ServiceGrafanaUserConfigPublicAccessOutput
}

type ServiceGrafanaUserConfigPublicAccessArgs struct {
	Grafana pulumi.StringPtrInput `pulumi:"grafana"`
}

func (ServiceGrafanaUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGrafanaUserConfigPublicAccess)(nil)).Elem()
}

func (i ServiceGrafanaUserConfigPublicAccessArgs) ToServiceGrafanaUserConfigPublicAccessOutput() ServiceGrafanaUserConfigPublicAccessOutput {
	return i.ToServiceGrafanaUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i ServiceGrafanaUserConfigPublicAccessArgs) ToServiceGrafanaUserConfigPublicAccessOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigPublicAccessOutput)
}

func (i ServiceGrafanaUserConfigPublicAccessArgs) ToServiceGrafanaUserConfigPublicAccessPtrOutput() ServiceGrafanaUserConfigPublicAccessPtrOutput {
	return i.ToServiceGrafanaUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i ServiceGrafanaUserConfigPublicAccessArgs) ToServiceGrafanaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigPublicAccessOutput).ToServiceGrafanaUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// ServiceGrafanaUserConfigPublicAccessPtrInput is an input type that accepts ServiceGrafanaUserConfigPublicAccessArgs, ServiceGrafanaUserConfigPublicAccessPtr and ServiceGrafanaUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `ServiceGrafanaUserConfigPublicAccessPtrInput` via:
//
//          ServiceGrafanaUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type ServiceGrafanaUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToServiceGrafanaUserConfigPublicAccessPtrOutput() ServiceGrafanaUserConfigPublicAccessPtrOutput
	ToServiceGrafanaUserConfigPublicAccessPtrOutputWithContext(context.Context) ServiceGrafanaUserConfigPublicAccessPtrOutput
}

type serviceGrafanaUserConfigPublicAccessPtrType ServiceGrafanaUserConfigPublicAccessArgs

func ServiceGrafanaUserConfigPublicAccessPtr(v *ServiceGrafanaUserConfigPublicAccessArgs) ServiceGrafanaUserConfigPublicAccessPtrInput {
	return (*serviceGrafanaUserConfigPublicAccessPtrType)(v)
}

func (*serviceGrafanaUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGrafanaUserConfigPublicAccess)(nil)).Elem()
}

func (i *serviceGrafanaUserConfigPublicAccessPtrType) ToServiceGrafanaUserConfigPublicAccessPtrOutput() ServiceGrafanaUserConfigPublicAccessPtrOutput {
	return i.ToServiceGrafanaUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *serviceGrafanaUserConfigPublicAccessPtrType) ToServiceGrafanaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigPublicAccessPtrOutput)
}

type ServiceGrafanaUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (ServiceGrafanaUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGrafanaUserConfigPublicAccess)(nil)).Elem()
}

func (o ServiceGrafanaUserConfigPublicAccessOutput) ToServiceGrafanaUserConfigPublicAccessOutput() ServiceGrafanaUserConfigPublicAccessOutput {
	return o
}

func (o ServiceGrafanaUserConfigPublicAccessOutput) ToServiceGrafanaUserConfigPublicAccessOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigPublicAccessOutput {
	return o
}

func (o ServiceGrafanaUserConfigPublicAccessOutput) ToServiceGrafanaUserConfigPublicAccessPtrOutput() ServiceGrafanaUserConfigPublicAccessPtrOutput {
	return o.ToServiceGrafanaUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o ServiceGrafanaUserConfigPublicAccessOutput) ToServiceGrafanaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigPublicAccess) *ServiceGrafanaUserConfigPublicAccess {
		return &v
	}).(ServiceGrafanaUserConfigPublicAccessPtrOutput)
}
func (o ServiceGrafanaUserConfigPublicAccessOutput) Grafana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigPublicAccess) *string { return v.Grafana }).(pulumi.StringPtrOutput)
}

type ServiceGrafanaUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (ServiceGrafanaUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGrafanaUserConfigPublicAccess)(nil)).Elem()
}

func (o ServiceGrafanaUserConfigPublicAccessPtrOutput) ToServiceGrafanaUserConfigPublicAccessPtrOutput() ServiceGrafanaUserConfigPublicAccessPtrOutput {
	return o
}

func (o ServiceGrafanaUserConfigPublicAccessPtrOutput) ToServiceGrafanaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigPublicAccessPtrOutput {
	return o
}

func (o ServiceGrafanaUserConfigPublicAccessPtrOutput) Elem() ServiceGrafanaUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigPublicAccess) ServiceGrafanaUserConfigPublicAccess { return *v }).(ServiceGrafanaUserConfigPublicAccessOutput)
}

func (o ServiceGrafanaUserConfigPublicAccessPtrOutput) Grafana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Grafana
	}).(pulumi.StringPtrOutput)
}

type ServiceGrafanaUserConfigSmtpServer struct {
	FromAddress    *string `pulumi:"fromAddress"`
	FromName       *string `pulumi:"fromName"`
	Host           *string `pulumi:"host"`
	Password       *string `pulumi:"password"`
	Port           *string `pulumi:"port"`
	SkipVerify     *string `pulumi:"skipVerify"`
	StarttlsPolicy *string `pulumi:"starttlsPolicy"`
	Username       *string `pulumi:"username"`
}

// ServiceGrafanaUserConfigSmtpServerInput is an input type that accepts ServiceGrafanaUserConfigSmtpServerArgs and ServiceGrafanaUserConfigSmtpServerOutput values.
// You can construct a concrete instance of `ServiceGrafanaUserConfigSmtpServerInput` via:
//
//          ServiceGrafanaUserConfigSmtpServerArgs{...}
type ServiceGrafanaUserConfigSmtpServerInput interface {
	pulumi.Input

	ToServiceGrafanaUserConfigSmtpServerOutput() ServiceGrafanaUserConfigSmtpServerOutput
	ToServiceGrafanaUserConfigSmtpServerOutputWithContext(context.Context) ServiceGrafanaUserConfigSmtpServerOutput
}

type ServiceGrafanaUserConfigSmtpServerArgs struct {
	FromAddress    pulumi.StringPtrInput `pulumi:"fromAddress"`
	FromName       pulumi.StringPtrInput `pulumi:"fromName"`
	Host           pulumi.StringPtrInput `pulumi:"host"`
	Password       pulumi.StringPtrInput `pulumi:"password"`
	Port           pulumi.StringPtrInput `pulumi:"port"`
	SkipVerify     pulumi.StringPtrInput `pulumi:"skipVerify"`
	StarttlsPolicy pulumi.StringPtrInput `pulumi:"starttlsPolicy"`
	Username       pulumi.StringPtrInput `pulumi:"username"`
}

func (ServiceGrafanaUserConfigSmtpServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGrafanaUserConfigSmtpServer)(nil)).Elem()
}

func (i ServiceGrafanaUserConfigSmtpServerArgs) ToServiceGrafanaUserConfigSmtpServerOutput() ServiceGrafanaUserConfigSmtpServerOutput {
	return i.ToServiceGrafanaUserConfigSmtpServerOutputWithContext(context.Background())
}

func (i ServiceGrafanaUserConfigSmtpServerArgs) ToServiceGrafanaUserConfigSmtpServerOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigSmtpServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigSmtpServerOutput)
}

func (i ServiceGrafanaUserConfigSmtpServerArgs) ToServiceGrafanaUserConfigSmtpServerPtrOutput() ServiceGrafanaUserConfigSmtpServerPtrOutput {
	return i.ToServiceGrafanaUserConfigSmtpServerPtrOutputWithContext(context.Background())
}

func (i ServiceGrafanaUserConfigSmtpServerArgs) ToServiceGrafanaUserConfigSmtpServerPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigSmtpServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigSmtpServerOutput).ToServiceGrafanaUserConfigSmtpServerPtrOutputWithContext(ctx)
}

// ServiceGrafanaUserConfigSmtpServerPtrInput is an input type that accepts ServiceGrafanaUserConfigSmtpServerArgs, ServiceGrafanaUserConfigSmtpServerPtr and ServiceGrafanaUserConfigSmtpServerPtrOutput values.
// You can construct a concrete instance of `ServiceGrafanaUserConfigSmtpServerPtrInput` via:
//
//          ServiceGrafanaUserConfigSmtpServerArgs{...}
//
//  or:
//
//          nil
type ServiceGrafanaUserConfigSmtpServerPtrInput interface {
	pulumi.Input

	ToServiceGrafanaUserConfigSmtpServerPtrOutput() ServiceGrafanaUserConfigSmtpServerPtrOutput
	ToServiceGrafanaUserConfigSmtpServerPtrOutputWithContext(context.Context) ServiceGrafanaUserConfigSmtpServerPtrOutput
}

type serviceGrafanaUserConfigSmtpServerPtrType ServiceGrafanaUserConfigSmtpServerArgs

func ServiceGrafanaUserConfigSmtpServerPtr(v *ServiceGrafanaUserConfigSmtpServerArgs) ServiceGrafanaUserConfigSmtpServerPtrInput {
	return (*serviceGrafanaUserConfigSmtpServerPtrType)(v)
}

func (*serviceGrafanaUserConfigSmtpServerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGrafanaUserConfigSmtpServer)(nil)).Elem()
}

func (i *serviceGrafanaUserConfigSmtpServerPtrType) ToServiceGrafanaUserConfigSmtpServerPtrOutput() ServiceGrafanaUserConfigSmtpServerPtrOutput {
	return i.ToServiceGrafanaUserConfigSmtpServerPtrOutputWithContext(context.Background())
}

func (i *serviceGrafanaUserConfigSmtpServerPtrType) ToServiceGrafanaUserConfigSmtpServerPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigSmtpServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGrafanaUserConfigSmtpServerPtrOutput)
}

type ServiceGrafanaUserConfigSmtpServerOutput struct{ *pulumi.OutputState }

func (ServiceGrafanaUserConfigSmtpServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGrafanaUserConfigSmtpServer)(nil)).Elem()
}

func (o ServiceGrafanaUserConfigSmtpServerOutput) ToServiceGrafanaUserConfigSmtpServerOutput() ServiceGrafanaUserConfigSmtpServerOutput {
	return o
}

func (o ServiceGrafanaUserConfigSmtpServerOutput) ToServiceGrafanaUserConfigSmtpServerOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigSmtpServerOutput {
	return o
}

func (o ServiceGrafanaUserConfigSmtpServerOutput) ToServiceGrafanaUserConfigSmtpServerPtrOutput() ServiceGrafanaUserConfigSmtpServerPtrOutput {
	return o.ToServiceGrafanaUserConfigSmtpServerPtrOutputWithContext(context.Background())
}

func (o ServiceGrafanaUserConfigSmtpServerOutput) ToServiceGrafanaUserConfigSmtpServerPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigSmtpServerPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigSmtpServer) *ServiceGrafanaUserConfigSmtpServer {
		return &v
	}).(ServiceGrafanaUserConfigSmtpServerPtrOutput)
}
func (o ServiceGrafanaUserConfigSmtpServerOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigSmtpServer) *string { return v.FromAddress }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigSmtpServerOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigSmtpServer) *string { return v.FromName }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigSmtpServerOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigSmtpServer) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigSmtpServerOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigSmtpServer) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigSmtpServerOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigSmtpServer) *string { return v.Port }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigSmtpServerOutput) SkipVerify() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigSmtpServer) *string { return v.SkipVerify }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigSmtpServerOutput) StarttlsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigSmtpServer) *string { return v.StarttlsPolicy }).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigSmtpServerOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGrafanaUserConfigSmtpServer) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ServiceGrafanaUserConfigSmtpServerPtrOutput struct{ *pulumi.OutputState }

func (ServiceGrafanaUserConfigSmtpServerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGrafanaUserConfigSmtpServer)(nil)).Elem()
}

func (o ServiceGrafanaUserConfigSmtpServerPtrOutput) ToServiceGrafanaUserConfigSmtpServerPtrOutput() ServiceGrafanaUserConfigSmtpServerPtrOutput {
	return o
}

func (o ServiceGrafanaUserConfigSmtpServerPtrOutput) ToServiceGrafanaUserConfigSmtpServerPtrOutputWithContext(ctx context.Context) ServiceGrafanaUserConfigSmtpServerPtrOutput {
	return o
}

func (o ServiceGrafanaUserConfigSmtpServerPtrOutput) Elem() ServiceGrafanaUserConfigSmtpServerOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigSmtpServer) ServiceGrafanaUserConfigSmtpServer { return *v }).(ServiceGrafanaUserConfigSmtpServerOutput)
}

func (o ServiceGrafanaUserConfigSmtpServerPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.FromAddress
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigSmtpServerPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.FromName
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigSmtpServerPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigSmtpServerPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigSmtpServerPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigSmtpServerPtrOutput) SkipVerify() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.SkipVerify
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigSmtpServerPtrOutput) StarttlsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.StarttlsPolicy
	}).(pulumi.StringPtrOutput)
}

func (o ServiceGrafanaUserConfigSmtpServerPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ServiceInfluxdb struct {
	DatabaseName *string `pulumi:"databaseName"`
}

// ServiceInfluxdbInput is an input type that accepts ServiceInfluxdbArgs and ServiceInfluxdbOutput values.
// You can construct a concrete instance of `ServiceInfluxdbInput` via:
//
//          ServiceInfluxdbArgs{...}
type ServiceInfluxdbInput interface {
	pulumi.Input

	ToServiceInfluxdbOutput() ServiceInfluxdbOutput
	ToServiceInfluxdbOutputWithContext(context.Context) ServiceInfluxdbOutput
}

type ServiceInfluxdbArgs struct {
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
}

func (ServiceInfluxdbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceInfluxdb)(nil)).Elem()
}

func (i ServiceInfluxdbArgs) ToServiceInfluxdbOutput() ServiceInfluxdbOutput {
	return i.ToServiceInfluxdbOutputWithContext(context.Background())
}

func (i ServiceInfluxdbArgs) ToServiceInfluxdbOutputWithContext(ctx context.Context) ServiceInfluxdbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInfluxdbOutput)
}

func (i ServiceInfluxdbArgs) ToServiceInfluxdbPtrOutput() ServiceInfluxdbPtrOutput {
	return i.ToServiceInfluxdbPtrOutputWithContext(context.Background())
}

func (i ServiceInfluxdbArgs) ToServiceInfluxdbPtrOutputWithContext(ctx context.Context) ServiceInfluxdbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInfluxdbOutput).ToServiceInfluxdbPtrOutputWithContext(ctx)
}

// ServiceInfluxdbPtrInput is an input type that accepts ServiceInfluxdbArgs, ServiceInfluxdbPtr and ServiceInfluxdbPtrOutput values.
// You can construct a concrete instance of `ServiceInfluxdbPtrInput` via:
//
//          ServiceInfluxdbArgs{...}
//
//  or:
//
//          nil
type ServiceInfluxdbPtrInput interface {
	pulumi.Input

	ToServiceInfluxdbPtrOutput() ServiceInfluxdbPtrOutput
	ToServiceInfluxdbPtrOutputWithContext(context.Context) ServiceInfluxdbPtrOutput
}

type serviceInfluxdbPtrType ServiceInfluxdbArgs

func ServiceInfluxdbPtr(v *ServiceInfluxdbArgs) ServiceInfluxdbPtrInput {
	return (*serviceInfluxdbPtrType)(v)
}

func (*serviceInfluxdbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceInfluxdb)(nil)).Elem()
}

func (i *serviceInfluxdbPtrType) ToServiceInfluxdbPtrOutput() ServiceInfluxdbPtrOutput {
	return i.ToServiceInfluxdbPtrOutputWithContext(context.Background())
}

func (i *serviceInfluxdbPtrType) ToServiceInfluxdbPtrOutputWithContext(ctx context.Context) ServiceInfluxdbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInfluxdbPtrOutput)
}

type ServiceInfluxdbOutput struct{ *pulumi.OutputState }

func (ServiceInfluxdbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceInfluxdb)(nil)).Elem()
}

func (o ServiceInfluxdbOutput) ToServiceInfluxdbOutput() ServiceInfluxdbOutput {
	return o
}

func (o ServiceInfluxdbOutput) ToServiceInfluxdbOutputWithContext(ctx context.Context) ServiceInfluxdbOutput {
	return o
}

func (o ServiceInfluxdbOutput) ToServiceInfluxdbPtrOutput() ServiceInfluxdbPtrOutput {
	return o.ToServiceInfluxdbPtrOutputWithContext(context.Background())
}

func (o ServiceInfluxdbOutput) ToServiceInfluxdbPtrOutputWithContext(ctx context.Context) ServiceInfluxdbPtrOutput {
	return o.ApplyT(func(v ServiceInfluxdb) *ServiceInfluxdb {
		return &v
	}).(ServiceInfluxdbPtrOutput)
}
func (o ServiceInfluxdbOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInfluxdb) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

type ServiceInfluxdbPtrOutput struct{ *pulumi.OutputState }

func (ServiceInfluxdbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceInfluxdb)(nil)).Elem()
}

func (o ServiceInfluxdbPtrOutput) ToServiceInfluxdbPtrOutput() ServiceInfluxdbPtrOutput {
	return o
}

func (o ServiceInfluxdbPtrOutput) ToServiceInfluxdbPtrOutputWithContext(ctx context.Context) ServiceInfluxdbPtrOutput {
	return o
}

func (o ServiceInfluxdbPtrOutput) Elem() ServiceInfluxdbOutput {
	return o.ApplyT(func(v *ServiceInfluxdb) ServiceInfluxdb { return *v }).(ServiceInfluxdbOutput)
}

func (o ServiceInfluxdbPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInfluxdb) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

type ServiceInfluxdbUserConfig struct {
	CustomDomain           *string                                     `pulumi:"customDomain"`
	Influxdb               *ServiceInfluxdbUserConfigInfluxdb          `pulumi:"influxdb"`
	IpFilters              []string                                    `pulumi:"ipFilters"`
	PrivateAccess          *ServiceInfluxdbUserConfigPrivateAccess     `pulumi:"privateAccess"`
	PrivatelinkAccess      *ServiceInfluxdbUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	ProjectToForkFrom      *string                                     `pulumi:"projectToForkFrom"`
	PublicAccess           *ServiceInfluxdbUserConfigPublicAccess      `pulumi:"publicAccess"`
	RecoveryBasebackupName *string                                     `pulumi:"recoveryBasebackupName"`
	ServiceToForkFrom      *string                                     `pulumi:"serviceToForkFrom"`
}

// ServiceInfluxdbUserConfigInput is an input type that accepts ServiceInfluxdbUserConfigArgs and ServiceInfluxdbUserConfigOutput values.
// You can construct a concrete instance of `ServiceInfluxdbUserConfigInput` via:
//
//          ServiceInfluxdbUserConfigArgs{...}
type ServiceInfluxdbUserConfigInput interface {
	pulumi.Input

	ToServiceInfluxdbUserConfigOutput() ServiceInfluxdbUserConfigOutput
	ToServiceInfluxdbUserConfigOutputWithContext(context.Context) ServiceInfluxdbUserConfigOutput
}

type ServiceInfluxdbUserConfigArgs struct {
	CustomDomain           pulumi.StringPtrInput                              `pulumi:"customDomain"`
	Influxdb               ServiceInfluxdbUserConfigInfluxdbPtrInput          `pulumi:"influxdb"`
	IpFilters              pulumi.StringArrayInput                            `pulumi:"ipFilters"`
	PrivateAccess          ServiceInfluxdbUserConfigPrivateAccessPtrInput     `pulumi:"privateAccess"`
	PrivatelinkAccess      ServiceInfluxdbUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	ProjectToForkFrom      pulumi.StringPtrInput                              `pulumi:"projectToForkFrom"`
	PublicAccess           ServiceInfluxdbUserConfigPublicAccessPtrInput      `pulumi:"publicAccess"`
	RecoveryBasebackupName pulumi.StringPtrInput                              `pulumi:"recoveryBasebackupName"`
	ServiceToForkFrom      pulumi.StringPtrInput                              `pulumi:"serviceToForkFrom"`
}

func (ServiceInfluxdbUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceInfluxdbUserConfig)(nil)).Elem()
}

func (i ServiceInfluxdbUserConfigArgs) ToServiceInfluxdbUserConfigOutput() ServiceInfluxdbUserConfigOutput {
	return i.ToServiceInfluxdbUserConfigOutputWithContext(context.Background())
}

func (i ServiceInfluxdbUserConfigArgs) ToServiceInfluxdbUserConfigOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInfluxdbUserConfigOutput)
}

func (i ServiceInfluxdbUserConfigArgs) ToServiceInfluxdbUserConfigPtrOutput() ServiceInfluxdbUserConfigPtrOutput {
	return i.ToServiceInfluxdbUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceInfluxdbUserConfigArgs) ToServiceInfluxdbUserConfigPtrOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInfluxdbUserConfigOutput).ToServiceInfluxdbUserConfigPtrOutputWithContext(ctx)
}

// ServiceInfluxdbUserConfigPtrInput is an input type that accepts ServiceInfluxdbUserConfigArgs, ServiceInfluxdbUserConfigPtr and ServiceInfluxdbUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceInfluxdbUserConfigPtrInput` via:
//
//          ServiceInfluxdbUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceInfluxdbUserConfigPtrInput interface {
	pulumi.Input

	ToServiceInfluxdbUserConfigPtrOutput() ServiceInfluxdbUserConfigPtrOutput
	ToServiceInfluxdbUserConfigPtrOutputWithContext(context.Context) ServiceInfluxdbUserConfigPtrOutput
}

type serviceInfluxdbUserConfigPtrType ServiceInfluxdbUserConfigArgs

func ServiceInfluxdbUserConfigPtr(v *ServiceInfluxdbUserConfigArgs) ServiceInfluxdbUserConfigPtrInput {
	return (*serviceInfluxdbUserConfigPtrType)(v)
}

func (*serviceInfluxdbUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceInfluxdbUserConfig)(nil)).Elem()
}

func (i *serviceInfluxdbUserConfigPtrType) ToServiceInfluxdbUserConfigPtrOutput() ServiceInfluxdbUserConfigPtrOutput {
	return i.ToServiceInfluxdbUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceInfluxdbUserConfigPtrType) ToServiceInfluxdbUserConfigPtrOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInfluxdbUserConfigPtrOutput)
}

type ServiceInfluxdbUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceInfluxdbUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceInfluxdbUserConfig)(nil)).Elem()
}

func (o ServiceInfluxdbUserConfigOutput) ToServiceInfluxdbUserConfigOutput() ServiceInfluxdbUserConfigOutput {
	return o
}

func (o ServiceInfluxdbUserConfigOutput) ToServiceInfluxdbUserConfigOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigOutput {
	return o
}

func (o ServiceInfluxdbUserConfigOutput) ToServiceInfluxdbUserConfigPtrOutput() ServiceInfluxdbUserConfigPtrOutput {
	return o.ToServiceInfluxdbUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceInfluxdbUserConfigOutput) ToServiceInfluxdbUserConfigPtrOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceInfluxdbUserConfig) *ServiceInfluxdbUserConfig {
		return &v
	}).(ServiceInfluxdbUserConfigPtrOutput)
}
func (o ServiceInfluxdbUserConfigOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInfluxdbUserConfig) *string { return v.CustomDomain }).(pulumi.StringPtrOutput)
}

func (o ServiceInfluxdbUserConfigOutput) Influxdb() ServiceInfluxdbUserConfigInfluxdbPtrOutput {
	return o.ApplyT(func(v ServiceInfluxdbUserConfig) *ServiceInfluxdbUserConfigInfluxdb { return v.Influxdb }).(ServiceInfluxdbUserConfigInfluxdbPtrOutput)
}

func (o ServiceInfluxdbUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceInfluxdbUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

func (o ServiceInfluxdbUserConfigOutput) PrivateAccess() ServiceInfluxdbUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v ServiceInfluxdbUserConfig) *ServiceInfluxdbUserConfigPrivateAccess { return v.PrivateAccess }).(ServiceInfluxdbUserConfigPrivateAccessPtrOutput)
}

func (o ServiceInfluxdbUserConfigOutput) PrivatelinkAccess() ServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v ServiceInfluxdbUserConfig) *ServiceInfluxdbUserConfigPrivatelinkAccess {
		return v.PrivatelinkAccess
	}).(ServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput)
}

func (o ServiceInfluxdbUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInfluxdbUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

func (o ServiceInfluxdbUserConfigOutput) PublicAccess() ServiceInfluxdbUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v ServiceInfluxdbUserConfig) *ServiceInfluxdbUserConfigPublicAccess { return v.PublicAccess }).(ServiceInfluxdbUserConfigPublicAccessPtrOutput)
}

func (o ServiceInfluxdbUserConfigOutput) RecoveryBasebackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInfluxdbUserConfig) *string { return v.RecoveryBasebackupName }).(pulumi.StringPtrOutput)
}

func (o ServiceInfluxdbUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInfluxdbUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

type ServiceInfluxdbUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceInfluxdbUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceInfluxdbUserConfig)(nil)).Elem()
}

func (o ServiceInfluxdbUserConfigPtrOutput) ToServiceInfluxdbUserConfigPtrOutput() ServiceInfluxdbUserConfigPtrOutput {
	return o
}

func (o ServiceInfluxdbUserConfigPtrOutput) ToServiceInfluxdbUserConfigPtrOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigPtrOutput {
	return o
}

func (o ServiceInfluxdbUserConfigPtrOutput) Elem() ServiceInfluxdbUserConfigOutput {
	return o.ApplyT(func(v *ServiceInfluxdbUserConfig) ServiceInfluxdbUserConfig { return *v }).(ServiceInfluxdbUserConfigOutput)
}

func (o ServiceInfluxdbUserConfigPtrOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInfluxdbUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.CustomDomain
	}).(pulumi.StringPtrOutput)
}

func (o ServiceInfluxdbUserConfigPtrOutput) Influxdb() ServiceInfluxdbUserConfigInfluxdbPtrOutput {
	return o.ApplyT(func(v *ServiceInfluxdbUserConfig) *ServiceInfluxdbUserConfigInfluxdb {
		if v == nil {
			return nil
		}
		return v.Influxdb
	}).(ServiceInfluxdbUserConfigInfluxdbPtrOutput)
}

func (o ServiceInfluxdbUserConfigPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceInfluxdbUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

func (o ServiceInfluxdbUserConfigPtrOutput) PrivateAccess() ServiceInfluxdbUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v *ServiceInfluxdbUserConfig) *ServiceInfluxdbUserConfigPrivateAccess {
		if v == nil {
			return nil
		}
		return v.PrivateAccess
	}).(ServiceInfluxdbUserConfigPrivateAccessPtrOutput)
}

func (o ServiceInfluxdbUserConfigPtrOutput) PrivatelinkAccess() ServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v *ServiceInfluxdbUserConfig) *ServiceInfluxdbUserConfigPrivatelinkAccess {
		if v == nil {
			return nil
		}
		return v.PrivatelinkAccess
	}).(ServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput)
}

func (o ServiceInfluxdbUserConfigPtrOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInfluxdbUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProjectToForkFrom
	}).(pulumi.StringPtrOutput)
}

func (o ServiceInfluxdbUserConfigPtrOutput) PublicAccess() ServiceInfluxdbUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v *ServiceInfluxdbUserConfig) *ServiceInfluxdbUserConfigPublicAccess {
		if v == nil {
			return nil
		}
		return v.PublicAccess
	}).(ServiceInfluxdbUserConfigPublicAccessPtrOutput)
}

func (o ServiceInfluxdbUserConfigPtrOutput) RecoveryBasebackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInfluxdbUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryBasebackupName
	}).(pulumi.StringPtrOutput)
}

func (o ServiceInfluxdbUserConfigPtrOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInfluxdbUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceToForkFrom
	}).(pulumi.StringPtrOutput)
}

type ServiceInfluxdbUserConfigInfluxdb struct {
	LogQueriesAfter  *string `pulumi:"logQueriesAfter"`
	MaxRowLimit      *string `pulumi:"maxRowLimit"`
	MaxSelectBuckets *string `pulumi:"maxSelectBuckets"`
	MaxSelectPoint   *string `pulumi:"maxSelectPoint"`
	QueryTimeout     *string `pulumi:"queryTimeout"`
}

// ServiceInfluxdbUserConfigInfluxdbInput is an input type that accepts ServiceInfluxdbUserConfigInfluxdbArgs and ServiceInfluxdbUserConfigInfluxdbOutput values.
// You can construct a concrete instance of `ServiceInfluxdbUserConfigInfluxdbInput` via:
//
//          ServiceInfluxdbUserConfigInfluxdbArgs{...}
type ServiceInfluxdbUserConfigInfluxdbInput interface {
	pulumi.Input

	ToServiceInfluxdbUserConfigInfluxdbOutput() ServiceInfluxdbUserConfigInfluxdbOutput
	ToServiceInfluxdbUserConfigInfluxdbOutputWithContext(context.Context) ServiceInfluxdbUserConfigInfluxdbOutput
}

type ServiceInfluxdbUserConfigInfluxdbArgs struct {
	LogQueriesAfter  pulumi.StringPtrInput `pulumi:"logQueriesAfter"`
	MaxRowLimit      pulumi.StringPtrInput `pulumi:"maxRowLimit"`
	MaxSelectBuckets pulumi.StringPtrInput `pulumi:"maxSelectBuckets"`
	MaxSelectPoint   pulumi.StringPtrInput `pulumi:"maxSelectPoint"`
	QueryTimeout     pulumi.StringPtrInput `pulumi:"queryTimeout"`
}

func (ServiceInfluxdbUserConfigInfluxdbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceInfluxdbUserConfigInfluxdb)(nil)).Elem()
}

func (i ServiceInfluxdbUserConfigInfluxdbArgs) ToServiceInfluxdbUserConfigInfluxdbOutput() ServiceInfluxdbUserConfigInfluxdbOutput {
	return i.ToServiceInfluxdbUserConfigInfluxdbOutputWithContext(context.Background())
}

func (i ServiceInfluxdbUserConfigInfluxdbArgs) ToServiceInfluxdbUserConfigInfluxdbOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigInfluxdbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInfluxdbUserConfigInfluxdbOutput)
}

func (i ServiceInfluxdbUserConfigInfluxdbArgs) ToServiceInfluxdbUserConfigInfluxdbPtrOutput() ServiceInfluxdbUserConfigInfluxdbPtrOutput {
	return i.ToServiceInfluxdbUserConfigInfluxdbPtrOutputWithContext(context.Background())
}

func (i ServiceInfluxdbUserConfigInfluxdbArgs) ToServiceInfluxdbUserConfigInfluxdbPtrOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigInfluxdbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInfluxdbUserConfigInfluxdbOutput).ToServiceInfluxdbUserConfigInfluxdbPtrOutputWithContext(ctx)
}

// ServiceInfluxdbUserConfigInfluxdbPtrInput is an input type that accepts ServiceInfluxdbUserConfigInfluxdbArgs, ServiceInfluxdbUserConfigInfluxdbPtr and ServiceInfluxdbUserConfigInfluxdbPtrOutput values.
// You can construct a concrete instance of `ServiceInfluxdbUserConfigInfluxdbPtrInput` via:
//
//          ServiceInfluxdbUserConfigInfluxdbArgs{...}
//
//  or:
//
//          nil
type ServiceInfluxdbUserConfigInfluxdbPtrInput interface {
	pulumi.Input

	ToServiceInfluxdbUserConfigInfluxdbPtrOutput() ServiceInfluxdbUserConfigInfluxdbPtrOutput
	ToServiceInfluxdbUserConfigInfluxdbPtrOutputWithContext(context.Context) ServiceInfluxdbUserConfigInfluxdbPtrOutput
}

type serviceInfluxdbUserConfigInfluxdbPtrType ServiceInfluxdbUserConfigInfluxdbArgs

func ServiceInfluxdbUserConfigInfluxdbPtr(v *ServiceInfluxdbUserConfigInfluxdbArgs) ServiceInfluxdbUserConfigInfluxdbPtrInput {
	return (*serviceInfluxdbUserConfigInfluxdbPtrType)(v)
}

func (*serviceInfluxdbUserConfigInfluxdbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceInfluxdbUserConfigInfluxdb)(nil)).Elem()
}

func (i *serviceInfluxdbUserConfigInfluxdbPtrType) ToServiceInfluxdbUserConfigInfluxdbPtrOutput() ServiceInfluxdbUserConfigInfluxdbPtrOutput {
	return i.ToServiceInfluxdbUserConfigInfluxdbPtrOutputWithContext(context.Background())
}

func (i *serviceInfluxdbUserConfigInfluxdbPtrType) ToServiceInfluxdbUserConfigInfluxdbPtrOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigInfluxdbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInfluxdbUserConfigInfluxdbPtrOutput)
}

type ServiceInfluxdbUserConfigInfluxdbOutput struct{ *pulumi.OutputState }

func (ServiceInfluxdbUserConfigInfluxdbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceInfluxdbUserConfigInfluxdb)(nil)).Elem()
}

func (o ServiceInfluxdbUserConfigInfluxdbOutput) ToServiceInfluxdbUserConfigInfluxdbOutput() ServiceInfluxdbUserConfigInfluxdbOutput {
	return o
}

func (o ServiceInfluxdbUserConfigInfluxdbOutput) ToServiceInfluxdbUserConfigInfluxdbOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigInfluxdbOutput {
	return o
}

func (o ServiceInfluxdbUserConfigInfluxdbOutput) ToServiceInfluxdbUserConfigInfluxdbPtrOutput() ServiceInfluxdbUserConfigInfluxdbPtrOutput {
	return o.ToServiceInfluxdbUserConfigInfluxdbPtrOutputWithContext(context.Background())
}

func (o ServiceInfluxdbUserConfigInfluxdbOutput) ToServiceInfluxdbUserConfigInfluxdbPtrOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigInfluxdbPtrOutput {
	return o.ApplyT(func(v ServiceInfluxdbUserConfigInfluxdb) *ServiceInfluxdbUserConfigInfluxdb {
		return &v
	}).(ServiceInfluxdbUserConfigInfluxdbPtrOutput)
}
func (o ServiceInfluxdbUserConfigInfluxdbOutput) LogQueriesAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInfluxdbUserConfigInfluxdb) *string { return v.LogQueriesAfter }).(pulumi.StringPtrOutput)
}

func (o ServiceInfluxdbUserConfigInfluxdbOutput) MaxRowLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInfluxdbUserConfigInfluxdb) *string { return v.MaxRowLimit }).(pulumi.StringPtrOutput)
}

func (o ServiceInfluxdbUserConfigInfluxdbOutput) MaxSelectBuckets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInfluxdbUserConfigInfluxdb) *string { return v.MaxSelectBuckets }).(pulumi.StringPtrOutput)
}

func (o ServiceInfluxdbUserConfigInfluxdbOutput) MaxSelectPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInfluxdbUserConfigInfluxdb) *string { return v.MaxSelectPoint }).(pulumi.StringPtrOutput)
}

func (o ServiceInfluxdbUserConfigInfluxdbOutput) QueryTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInfluxdbUserConfigInfluxdb) *string { return v.QueryTimeout }).(pulumi.StringPtrOutput)
}

type ServiceInfluxdbUserConfigInfluxdbPtrOutput struct{ *pulumi.OutputState }

func (ServiceInfluxdbUserConfigInfluxdbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceInfluxdbUserConfigInfluxdb)(nil)).Elem()
}

func (o ServiceInfluxdbUserConfigInfluxdbPtrOutput) ToServiceInfluxdbUserConfigInfluxdbPtrOutput() ServiceInfluxdbUserConfigInfluxdbPtrOutput {
	return o
}

func (o ServiceInfluxdbUserConfigInfluxdbPtrOutput) ToServiceInfluxdbUserConfigInfluxdbPtrOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigInfluxdbPtrOutput {
	return o
}

func (o ServiceInfluxdbUserConfigInfluxdbPtrOutput) Elem() ServiceInfluxdbUserConfigInfluxdbOutput {
	return o.ApplyT(func(v *ServiceInfluxdbUserConfigInfluxdb) ServiceInfluxdbUserConfigInfluxdb { return *v }).(ServiceInfluxdbUserConfigInfluxdbOutput)
}

func (o ServiceInfluxdbUserConfigInfluxdbPtrOutput) LogQueriesAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInfluxdbUserConfigInfluxdb) *string {
		if v == nil {
			return nil
		}
		return v.LogQueriesAfter
	}).(pulumi.StringPtrOutput)
}

func (o ServiceInfluxdbUserConfigInfluxdbPtrOutput) MaxRowLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInfluxdbUserConfigInfluxdb) *string {
		if v == nil {
			return nil
		}
		return v.MaxRowLimit
	}).(pulumi.StringPtrOutput)
}

func (o ServiceInfluxdbUserConfigInfluxdbPtrOutput) MaxSelectBuckets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInfluxdbUserConfigInfluxdb) *string {
		if v == nil {
			return nil
		}
		return v.MaxSelectBuckets
	}).(pulumi.StringPtrOutput)
}

func (o ServiceInfluxdbUserConfigInfluxdbPtrOutput) MaxSelectPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInfluxdbUserConfigInfluxdb) *string {
		if v == nil {
			return nil
		}
		return v.MaxSelectPoint
	}).(pulumi.StringPtrOutput)
}

func (o ServiceInfluxdbUserConfigInfluxdbPtrOutput) QueryTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInfluxdbUserConfigInfluxdb) *string {
		if v == nil {
			return nil
		}
		return v.QueryTimeout
	}).(pulumi.StringPtrOutput)
}

type ServiceInfluxdbUserConfigPrivateAccess struct {
	Influxdb *string `pulumi:"influxdb"`
}

// ServiceInfluxdbUserConfigPrivateAccessInput is an input type that accepts ServiceInfluxdbUserConfigPrivateAccessArgs and ServiceInfluxdbUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `ServiceInfluxdbUserConfigPrivateAccessInput` via:
//
//          ServiceInfluxdbUserConfigPrivateAccessArgs{...}
type ServiceInfluxdbUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToServiceInfluxdbUserConfigPrivateAccessOutput() ServiceInfluxdbUserConfigPrivateAccessOutput
	ToServiceInfluxdbUserConfigPrivateAccessOutputWithContext(context.Context) ServiceInfluxdbUserConfigPrivateAccessOutput
}

type ServiceInfluxdbUserConfigPrivateAccessArgs struct {
	Influxdb pulumi.StringPtrInput `pulumi:"influxdb"`
}

func (ServiceInfluxdbUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceInfluxdbUserConfigPrivateAccess)(nil)).Elem()
}

func (i ServiceInfluxdbUserConfigPrivateAccessArgs) ToServiceInfluxdbUserConfigPrivateAccessOutput() ServiceInfluxdbUserConfigPrivateAccessOutput {
	return i.ToServiceInfluxdbUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i ServiceInfluxdbUserConfigPrivateAccessArgs) ToServiceInfluxdbUserConfigPrivateAccessOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInfluxdbUserConfigPrivateAccessOutput)
}

func (i ServiceInfluxdbUserConfigPrivateAccessArgs) ToServiceInfluxdbUserConfigPrivateAccessPtrOutput() ServiceInfluxdbUserConfigPrivateAccessPtrOutput {
	return i.ToServiceInfluxdbUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i ServiceInfluxdbUserConfigPrivateAccessArgs) ToServiceInfluxdbUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInfluxdbUserConfigPrivateAccessOutput).ToServiceInfluxdbUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// ServiceInfluxdbUserConfigPrivateAccessPtrInput is an input type that accepts ServiceInfluxdbUserConfigPrivateAccessArgs, ServiceInfluxdbUserConfigPrivateAccessPtr and ServiceInfluxdbUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `ServiceInfluxdbUserConfigPrivateAccessPtrInput` via:
//
//          ServiceInfluxdbUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type ServiceInfluxdbUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToServiceInfluxdbUserConfigPrivateAccessPtrOutput() ServiceInfluxdbUserConfigPrivateAccessPtrOutput
	ToServiceInfluxdbUserConfigPrivateAccessPtrOutputWithContext(context.Context) ServiceInfluxdbUserConfigPrivateAccessPtrOutput
}

type serviceInfluxdbUserConfigPrivateAccessPtrType ServiceInfluxdbUserConfigPrivateAccessArgs

func ServiceInfluxdbUserConfigPrivateAccessPtr(v *ServiceInfluxdbUserConfigPrivateAccessArgs) ServiceInfluxdbUserConfigPrivateAccessPtrInput {
	return (*serviceInfluxdbUserConfigPrivateAccessPtrType)(v)
}

func (*serviceInfluxdbUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceInfluxdbUserConfigPrivateAccess)(nil)).Elem()
}

func (i *serviceInfluxdbUserConfigPrivateAccessPtrType) ToServiceInfluxdbUserConfigPrivateAccessPtrOutput() ServiceInfluxdbUserConfigPrivateAccessPtrOutput {
	return i.ToServiceInfluxdbUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *serviceInfluxdbUserConfigPrivateAccessPtrType) ToServiceInfluxdbUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInfluxdbUserConfigPrivateAccessPtrOutput)
}

type ServiceInfluxdbUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (ServiceInfluxdbUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceInfluxdbUserConfigPrivateAccess)(nil)).Elem()
}

func (o ServiceInfluxdbUserConfigPrivateAccessOutput) ToServiceInfluxdbUserConfigPrivateAccessOutput() ServiceInfluxdbUserConfigPrivateAccessOutput {
	return o
}

func (o ServiceInfluxdbUserConfigPrivateAccessOutput) ToServiceInfluxdbUserConfigPrivateAccessOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigPrivateAccessOutput {
	return o
}

func (o ServiceInfluxdbUserConfigPrivateAccessOutput) ToServiceInfluxdbUserConfigPrivateAccessPtrOutput() ServiceInfluxdbUserConfigPrivateAccessPtrOutput {
	return o.ToServiceInfluxdbUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o ServiceInfluxdbUserConfigPrivateAccessOutput) ToServiceInfluxdbUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v ServiceInfluxdbUserConfigPrivateAccess) *ServiceInfluxdbUserConfigPrivateAccess {
		return &v
	}).(ServiceInfluxdbUserConfigPrivateAccessPtrOutput)
}
func (o ServiceInfluxdbUserConfigPrivateAccessOutput) Influxdb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInfluxdbUserConfigPrivateAccess) *string { return v.Influxdb }).(pulumi.StringPtrOutput)
}

type ServiceInfluxdbUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (ServiceInfluxdbUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceInfluxdbUserConfigPrivateAccess)(nil)).Elem()
}

func (o ServiceInfluxdbUserConfigPrivateAccessPtrOutput) ToServiceInfluxdbUserConfigPrivateAccessPtrOutput() ServiceInfluxdbUserConfigPrivateAccessPtrOutput {
	return o
}

func (o ServiceInfluxdbUserConfigPrivateAccessPtrOutput) ToServiceInfluxdbUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigPrivateAccessPtrOutput {
	return o
}

func (o ServiceInfluxdbUserConfigPrivateAccessPtrOutput) Elem() ServiceInfluxdbUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *ServiceInfluxdbUserConfigPrivateAccess) ServiceInfluxdbUserConfigPrivateAccess { return *v }).(ServiceInfluxdbUserConfigPrivateAccessOutput)
}

func (o ServiceInfluxdbUserConfigPrivateAccessPtrOutput) Influxdb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInfluxdbUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Influxdb
	}).(pulumi.StringPtrOutput)
}

type ServiceInfluxdbUserConfigPrivatelinkAccess struct {
	Influxdb *string `pulumi:"influxdb"`
}

// ServiceInfluxdbUserConfigPrivatelinkAccessInput is an input type that accepts ServiceInfluxdbUserConfigPrivatelinkAccessArgs and ServiceInfluxdbUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `ServiceInfluxdbUserConfigPrivatelinkAccessInput` via:
//
//          ServiceInfluxdbUserConfigPrivatelinkAccessArgs{...}
type ServiceInfluxdbUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToServiceInfluxdbUserConfigPrivatelinkAccessOutput() ServiceInfluxdbUserConfigPrivatelinkAccessOutput
	ToServiceInfluxdbUserConfigPrivatelinkAccessOutputWithContext(context.Context) ServiceInfluxdbUserConfigPrivatelinkAccessOutput
}

type ServiceInfluxdbUserConfigPrivatelinkAccessArgs struct {
	Influxdb pulumi.StringPtrInput `pulumi:"influxdb"`
}

func (ServiceInfluxdbUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceInfluxdbUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i ServiceInfluxdbUserConfigPrivatelinkAccessArgs) ToServiceInfluxdbUserConfigPrivatelinkAccessOutput() ServiceInfluxdbUserConfigPrivatelinkAccessOutput {
	return i.ToServiceInfluxdbUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i ServiceInfluxdbUserConfigPrivatelinkAccessArgs) ToServiceInfluxdbUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInfluxdbUserConfigPrivatelinkAccessOutput)
}

func (i ServiceInfluxdbUserConfigPrivatelinkAccessArgs) ToServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput() ServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return i.ToServiceInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i ServiceInfluxdbUserConfigPrivatelinkAccessArgs) ToServiceInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInfluxdbUserConfigPrivatelinkAccessOutput).ToServiceInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// ServiceInfluxdbUserConfigPrivatelinkAccessPtrInput is an input type that accepts ServiceInfluxdbUserConfigPrivatelinkAccessArgs, ServiceInfluxdbUserConfigPrivatelinkAccessPtr and ServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `ServiceInfluxdbUserConfigPrivatelinkAccessPtrInput` via:
//
//          ServiceInfluxdbUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type ServiceInfluxdbUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput() ServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput
	ToServiceInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) ServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput
}

type serviceInfluxdbUserConfigPrivatelinkAccessPtrType ServiceInfluxdbUserConfigPrivatelinkAccessArgs

func ServiceInfluxdbUserConfigPrivatelinkAccessPtr(v *ServiceInfluxdbUserConfigPrivatelinkAccessArgs) ServiceInfluxdbUserConfigPrivatelinkAccessPtrInput {
	return (*serviceInfluxdbUserConfigPrivatelinkAccessPtrType)(v)
}

func (*serviceInfluxdbUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceInfluxdbUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *serviceInfluxdbUserConfigPrivatelinkAccessPtrType) ToServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput() ServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return i.ToServiceInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *serviceInfluxdbUserConfigPrivatelinkAccessPtrType) ToServiceInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput)
}

type ServiceInfluxdbUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (ServiceInfluxdbUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceInfluxdbUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o ServiceInfluxdbUserConfigPrivatelinkAccessOutput) ToServiceInfluxdbUserConfigPrivatelinkAccessOutput() ServiceInfluxdbUserConfigPrivatelinkAccessOutput {
	return o
}

func (o ServiceInfluxdbUserConfigPrivatelinkAccessOutput) ToServiceInfluxdbUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigPrivatelinkAccessOutput {
	return o
}

func (o ServiceInfluxdbUserConfigPrivatelinkAccessOutput) ToServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput() ServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return o.ToServiceInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o ServiceInfluxdbUserConfigPrivatelinkAccessOutput) ToServiceInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v ServiceInfluxdbUserConfigPrivatelinkAccess) *ServiceInfluxdbUserConfigPrivatelinkAccess {
		return &v
	}).(ServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput)
}
func (o ServiceInfluxdbUserConfigPrivatelinkAccessOutput) Influxdb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInfluxdbUserConfigPrivatelinkAccess) *string { return v.Influxdb }).(pulumi.StringPtrOutput)
}

type ServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (ServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceInfluxdbUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o ServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput) ToServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput() ServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o ServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput) ToServiceInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o ServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput) Elem() ServiceInfluxdbUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *ServiceInfluxdbUserConfigPrivatelinkAccess) ServiceInfluxdbUserConfigPrivatelinkAccess {
		return *v
	}).(ServiceInfluxdbUserConfigPrivatelinkAccessOutput)
}

func (o ServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput) Influxdb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInfluxdbUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Influxdb
	}).(pulumi.StringPtrOutput)
}

type ServiceInfluxdbUserConfigPublicAccess struct {
	Influxdb *string `pulumi:"influxdb"`
}

// ServiceInfluxdbUserConfigPublicAccessInput is an input type that accepts ServiceInfluxdbUserConfigPublicAccessArgs and ServiceInfluxdbUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `ServiceInfluxdbUserConfigPublicAccessInput` via:
//
//          ServiceInfluxdbUserConfigPublicAccessArgs{...}
type ServiceInfluxdbUserConfigPublicAccessInput interface {
	pulumi.Input

	ToServiceInfluxdbUserConfigPublicAccessOutput() ServiceInfluxdbUserConfigPublicAccessOutput
	ToServiceInfluxdbUserConfigPublicAccessOutputWithContext(context.Context) ServiceInfluxdbUserConfigPublicAccessOutput
}

type ServiceInfluxdbUserConfigPublicAccessArgs struct {
	Influxdb pulumi.StringPtrInput `pulumi:"influxdb"`
}

func (ServiceInfluxdbUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceInfluxdbUserConfigPublicAccess)(nil)).Elem()
}

func (i ServiceInfluxdbUserConfigPublicAccessArgs) ToServiceInfluxdbUserConfigPublicAccessOutput() ServiceInfluxdbUserConfigPublicAccessOutput {
	return i.ToServiceInfluxdbUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i ServiceInfluxdbUserConfigPublicAccessArgs) ToServiceInfluxdbUserConfigPublicAccessOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInfluxdbUserConfigPublicAccessOutput)
}

func (i ServiceInfluxdbUserConfigPublicAccessArgs) ToServiceInfluxdbUserConfigPublicAccessPtrOutput() ServiceInfluxdbUserConfigPublicAccessPtrOutput {
	return i.ToServiceInfluxdbUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i ServiceInfluxdbUserConfigPublicAccessArgs) ToServiceInfluxdbUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInfluxdbUserConfigPublicAccessOutput).ToServiceInfluxdbUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// ServiceInfluxdbUserConfigPublicAccessPtrInput is an input type that accepts ServiceInfluxdbUserConfigPublicAccessArgs, ServiceInfluxdbUserConfigPublicAccessPtr and ServiceInfluxdbUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `ServiceInfluxdbUserConfigPublicAccessPtrInput` via:
//
//          ServiceInfluxdbUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type ServiceInfluxdbUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToServiceInfluxdbUserConfigPublicAccessPtrOutput() ServiceInfluxdbUserConfigPublicAccessPtrOutput
	ToServiceInfluxdbUserConfigPublicAccessPtrOutputWithContext(context.Context) ServiceInfluxdbUserConfigPublicAccessPtrOutput
}

type serviceInfluxdbUserConfigPublicAccessPtrType ServiceInfluxdbUserConfigPublicAccessArgs

func ServiceInfluxdbUserConfigPublicAccessPtr(v *ServiceInfluxdbUserConfigPublicAccessArgs) ServiceInfluxdbUserConfigPublicAccessPtrInput {
	return (*serviceInfluxdbUserConfigPublicAccessPtrType)(v)
}

func (*serviceInfluxdbUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceInfluxdbUserConfigPublicAccess)(nil)).Elem()
}

func (i *serviceInfluxdbUserConfigPublicAccessPtrType) ToServiceInfluxdbUserConfigPublicAccessPtrOutput() ServiceInfluxdbUserConfigPublicAccessPtrOutput {
	return i.ToServiceInfluxdbUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *serviceInfluxdbUserConfigPublicAccessPtrType) ToServiceInfluxdbUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInfluxdbUserConfigPublicAccessPtrOutput)
}

type ServiceInfluxdbUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (ServiceInfluxdbUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceInfluxdbUserConfigPublicAccess)(nil)).Elem()
}

func (o ServiceInfluxdbUserConfigPublicAccessOutput) ToServiceInfluxdbUserConfigPublicAccessOutput() ServiceInfluxdbUserConfigPublicAccessOutput {
	return o
}

func (o ServiceInfluxdbUserConfigPublicAccessOutput) ToServiceInfluxdbUserConfigPublicAccessOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigPublicAccessOutput {
	return o
}

func (o ServiceInfluxdbUserConfigPublicAccessOutput) ToServiceInfluxdbUserConfigPublicAccessPtrOutput() ServiceInfluxdbUserConfigPublicAccessPtrOutput {
	return o.ToServiceInfluxdbUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o ServiceInfluxdbUserConfigPublicAccessOutput) ToServiceInfluxdbUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v ServiceInfluxdbUserConfigPublicAccess) *ServiceInfluxdbUserConfigPublicAccess {
		return &v
	}).(ServiceInfluxdbUserConfigPublicAccessPtrOutput)
}
func (o ServiceInfluxdbUserConfigPublicAccessOutput) Influxdb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInfluxdbUserConfigPublicAccess) *string { return v.Influxdb }).(pulumi.StringPtrOutput)
}

type ServiceInfluxdbUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (ServiceInfluxdbUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceInfluxdbUserConfigPublicAccess)(nil)).Elem()
}

func (o ServiceInfluxdbUserConfigPublicAccessPtrOutput) ToServiceInfluxdbUserConfigPublicAccessPtrOutput() ServiceInfluxdbUserConfigPublicAccessPtrOutput {
	return o
}

func (o ServiceInfluxdbUserConfigPublicAccessPtrOutput) ToServiceInfluxdbUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceInfluxdbUserConfigPublicAccessPtrOutput {
	return o
}

func (o ServiceInfluxdbUserConfigPublicAccessPtrOutput) Elem() ServiceInfluxdbUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *ServiceInfluxdbUserConfigPublicAccess) ServiceInfluxdbUserConfigPublicAccess { return *v }).(ServiceInfluxdbUserConfigPublicAccessOutput)
}

func (o ServiceInfluxdbUserConfigPublicAccessPtrOutput) Influxdb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInfluxdbUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Influxdb
	}).(pulumi.StringPtrOutput)
}

type ServiceIntegrationDashboardUserConfig struct {
}

// ServiceIntegrationDashboardUserConfigInput is an input type that accepts ServiceIntegrationDashboardUserConfigArgs and ServiceIntegrationDashboardUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationDashboardUserConfigInput` via:
//
//          ServiceIntegrationDashboardUserConfigArgs{...}
type ServiceIntegrationDashboardUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationDashboardUserConfigOutput() ServiceIntegrationDashboardUserConfigOutput
	ToServiceIntegrationDashboardUserConfigOutputWithContext(context.Context) ServiceIntegrationDashboardUserConfigOutput
}

type ServiceIntegrationDashboardUserConfigArgs struct {
}

func (ServiceIntegrationDashboardUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationDashboardUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationDashboardUserConfigArgs) ToServiceIntegrationDashboardUserConfigOutput() ServiceIntegrationDashboardUserConfigOutput {
	return i.ToServiceIntegrationDashboardUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationDashboardUserConfigArgs) ToServiceIntegrationDashboardUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationDashboardUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationDashboardUserConfigOutput)
}

func (i ServiceIntegrationDashboardUserConfigArgs) ToServiceIntegrationDashboardUserConfigPtrOutput() ServiceIntegrationDashboardUserConfigPtrOutput {
	return i.ToServiceIntegrationDashboardUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationDashboardUserConfigArgs) ToServiceIntegrationDashboardUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationDashboardUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationDashboardUserConfigOutput).ToServiceIntegrationDashboardUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationDashboardUserConfigPtrInput is an input type that accepts ServiceIntegrationDashboardUserConfigArgs, ServiceIntegrationDashboardUserConfigPtr and ServiceIntegrationDashboardUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationDashboardUserConfigPtrInput` via:
//
//          ServiceIntegrationDashboardUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationDashboardUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationDashboardUserConfigPtrOutput() ServiceIntegrationDashboardUserConfigPtrOutput
	ToServiceIntegrationDashboardUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationDashboardUserConfigPtrOutput
}

type serviceIntegrationDashboardUserConfigPtrType ServiceIntegrationDashboardUserConfigArgs

func ServiceIntegrationDashboardUserConfigPtr(v *ServiceIntegrationDashboardUserConfigArgs) ServiceIntegrationDashboardUserConfigPtrInput {
	return (*serviceIntegrationDashboardUserConfigPtrType)(v)
}

func (*serviceIntegrationDashboardUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationDashboardUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationDashboardUserConfigPtrType) ToServiceIntegrationDashboardUserConfigPtrOutput() ServiceIntegrationDashboardUserConfigPtrOutput {
	return i.ToServiceIntegrationDashboardUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationDashboardUserConfigPtrType) ToServiceIntegrationDashboardUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationDashboardUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationDashboardUserConfigPtrOutput)
}

type ServiceIntegrationDashboardUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationDashboardUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationDashboardUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationDashboardUserConfigOutput) ToServiceIntegrationDashboardUserConfigOutput() ServiceIntegrationDashboardUserConfigOutput {
	return o
}

func (o ServiceIntegrationDashboardUserConfigOutput) ToServiceIntegrationDashboardUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationDashboardUserConfigOutput {
	return o
}

func (o ServiceIntegrationDashboardUserConfigOutput) ToServiceIntegrationDashboardUserConfigPtrOutput() ServiceIntegrationDashboardUserConfigPtrOutput {
	return o.ToServiceIntegrationDashboardUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationDashboardUserConfigOutput) ToServiceIntegrationDashboardUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationDashboardUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationDashboardUserConfig) *ServiceIntegrationDashboardUserConfig {
		return &v
	}).(ServiceIntegrationDashboardUserConfigPtrOutput)
}

type ServiceIntegrationDashboardUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationDashboardUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationDashboardUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationDashboardUserConfigPtrOutput) ToServiceIntegrationDashboardUserConfigPtrOutput() ServiceIntegrationDashboardUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationDashboardUserConfigPtrOutput) ToServiceIntegrationDashboardUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationDashboardUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationDashboardUserConfigPtrOutput) Elem() ServiceIntegrationDashboardUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationDashboardUserConfig) ServiceIntegrationDashboardUserConfig { return *v }).(ServiceIntegrationDashboardUserConfigOutput)
}

type ServiceIntegrationDatadogUserConfig struct {
	DatadogTags           []ServiceIntegrationDatadogUserConfigDatadogTag `pulumi:"datadogTags"`
	ExcludeConsumerGroups []string                                        `pulumi:"excludeConsumerGroups"`
	ExcludeTopics         []string                                        `pulumi:"excludeTopics"`
	IncludeConsumerGroups []string                                        `pulumi:"includeConsumerGroups"`
	IncludeTopics         []string                                        `pulumi:"includeTopics"`
	KafkaCustomMetrics    []string                                        `pulumi:"kafkaCustomMetrics"`
}

// ServiceIntegrationDatadogUserConfigInput is an input type that accepts ServiceIntegrationDatadogUserConfigArgs and ServiceIntegrationDatadogUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationDatadogUserConfigInput` via:
//
//          ServiceIntegrationDatadogUserConfigArgs{...}
type ServiceIntegrationDatadogUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationDatadogUserConfigOutput() ServiceIntegrationDatadogUserConfigOutput
	ToServiceIntegrationDatadogUserConfigOutputWithContext(context.Context) ServiceIntegrationDatadogUserConfigOutput
}

type ServiceIntegrationDatadogUserConfigArgs struct {
	DatadogTags           ServiceIntegrationDatadogUserConfigDatadogTagArrayInput `pulumi:"datadogTags"`
	ExcludeConsumerGroups pulumi.StringArrayInput                                 `pulumi:"excludeConsumerGroups"`
	ExcludeTopics         pulumi.StringArrayInput                                 `pulumi:"excludeTopics"`
	IncludeConsumerGroups pulumi.StringArrayInput                                 `pulumi:"includeConsumerGroups"`
	IncludeTopics         pulumi.StringArrayInput                                 `pulumi:"includeTopics"`
	KafkaCustomMetrics    pulumi.StringArrayInput                                 `pulumi:"kafkaCustomMetrics"`
}

func (ServiceIntegrationDatadogUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationDatadogUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationDatadogUserConfigArgs) ToServiceIntegrationDatadogUserConfigOutput() ServiceIntegrationDatadogUserConfigOutput {
	return i.ToServiceIntegrationDatadogUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationDatadogUserConfigArgs) ToServiceIntegrationDatadogUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationDatadogUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationDatadogUserConfigOutput)
}

func (i ServiceIntegrationDatadogUserConfigArgs) ToServiceIntegrationDatadogUserConfigPtrOutput() ServiceIntegrationDatadogUserConfigPtrOutput {
	return i.ToServiceIntegrationDatadogUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationDatadogUserConfigArgs) ToServiceIntegrationDatadogUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationDatadogUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationDatadogUserConfigOutput).ToServiceIntegrationDatadogUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationDatadogUserConfigPtrInput is an input type that accepts ServiceIntegrationDatadogUserConfigArgs, ServiceIntegrationDatadogUserConfigPtr and ServiceIntegrationDatadogUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationDatadogUserConfigPtrInput` via:
//
//          ServiceIntegrationDatadogUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationDatadogUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationDatadogUserConfigPtrOutput() ServiceIntegrationDatadogUserConfigPtrOutput
	ToServiceIntegrationDatadogUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationDatadogUserConfigPtrOutput
}

type serviceIntegrationDatadogUserConfigPtrType ServiceIntegrationDatadogUserConfigArgs

func ServiceIntegrationDatadogUserConfigPtr(v *ServiceIntegrationDatadogUserConfigArgs) ServiceIntegrationDatadogUserConfigPtrInput {
	return (*serviceIntegrationDatadogUserConfigPtrType)(v)
}

func (*serviceIntegrationDatadogUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationDatadogUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationDatadogUserConfigPtrType) ToServiceIntegrationDatadogUserConfigPtrOutput() ServiceIntegrationDatadogUserConfigPtrOutput {
	return i.ToServiceIntegrationDatadogUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationDatadogUserConfigPtrType) ToServiceIntegrationDatadogUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationDatadogUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationDatadogUserConfigPtrOutput)
}

type ServiceIntegrationDatadogUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationDatadogUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationDatadogUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationDatadogUserConfigOutput) ToServiceIntegrationDatadogUserConfigOutput() ServiceIntegrationDatadogUserConfigOutput {
	return o
}

func (o ServiceIntegrationDatadogUserConfigOutput) ToServiceIntegrationDatadogUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationDatadogUserConfigOutput {
	return o
}

func (o ServiceIntegrationDatadogUserConfigOutput) ToServiceIntegrationDatadogUserConfigPtrOutput() ServiceIntegrationDatadogUserConfigPtrOutput {
	return o.ToServiceIntegrationDatadogUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationDatadogUserConfigOutput) ToServiceIntegrationDatadogUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationDatadogUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationDatadogUserConfig) *ServiceIntegrationDatadogUserConfig {
		return &v
	}).(ServiceIntegrationDatadogUserConfigPtrOutput)
}
func (o ServiceIntegrationDatadogUserConfigOutput) DatadogTags() ServiceIntegrationDatadogUserConfigDatadogTagArrayOutput {
	return o.ApplyT(func(v ServiceIntegrationDatadogUserConfig) []ServiceIntegrationDatadogUserConfigDatadogTag {
		return v.DatadogTags
	}).(ServiceIntegrationDatadogUserConfigDatadogTagArrayOutput)
}

func (o ServiceIntegrationDatadogUserConfigOutput) ExcludeConsumerGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceIntegrationDatadogUserConfig) []string { return v.ExcludeConsumerGroups }).(pulumi.StringArrayOutput)
}

func (o ServiceIntegrationDatadogUserConfigOutput) ExcludeTopics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceIntegrationDatadogUserConfig) []string { return v.ExcludeTopics }).(pulumi.StringArrayOutput)
}

func (o ServiceIntegrationDatadogUserConfigOutput) IncludeConsumerGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceIntegrationDatadogUserConfig) []string { return v.IncludeConsumerGroups }).(pulumi.StringArrayOutput)
}

func (o ServiceIntegrationDatadogUserConfigOutput) IncludeTopics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceIntegrationDatadogUserConfig) []string { return v.IncludeTopics }).(pulumi.StringArrayOutput)
}

func (o ServiceIntegrationDatadogUserConfigOutput) KafkaCustomMetrics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceIntegrationDatadogUserConfig) []string { return v.KafkaCustomMetrics }).(pulumi.StringArrayOutput)
}

type ServiceIntegrationDatadogUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationDatadogUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationDatadogUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationDatadogUserConfigPtrOutput) ToServiceIntegrationDatadogUserConfigPtrOutput() ServiceIntegrationDatadogUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationDatadogUserConfigPtrOutput) ToServiceIntegrationDatadogUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationDatadogUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationDatadogUserConfigPtrOutput) Elem() ServiceIntegrationDatadogUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationDatadogUserConfig) ServiceIntegrationDatadogUserConfig { return *v }).(ServiceIntegrationDatadogUserConfigOutput)
}

func (o ServiceIntegrationDatadogUserConfigPtrOutput) DatadogTags() ServiceIntegrationDatadogUserConfigDatadogTagArrayOutput {
	return o.ApplyT(func(v *ServiceIntegrationDatadogUserConfig) []ServiceIntegrationDatadogUserConfigDatadogTag {
		if v == nil {
			return nil
		}
		return v.DatadogTags
	}).(ServiceIntegrationDatadogUserConfigDatadogTagArrayOutput)
}

func (o ServiceIntegrationDatadogUserConfigPtrOutput) ExcludeConsumerGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceIntegrationDatadogUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.ExcludeConsumerGroups
	}).(pulumi.StringArrayOutput)
}

func (o ServiceIntegrationDatadogUserConfigPtrOutput) ExcludeTopics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceIntegrationDatadogUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.ExcludeTopics
	}).(pulumi.StringArrayOutput)
}

func (o ServiceIntegrationDatadogUserConfigPtrOutput) IncludeConsumerGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceIntegrationDatadogUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.IncludeConsumerGroups
	}).(pulumi.StringArrayOutput)
}

func (o ServiceIntegrationDatadogUserConfigPtrOutput) IncludeTopics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceIntegrationDatadogUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.IncludeTopics
	}).(pulumi.StringArrayOutput)
}

func (o ServiceIntegrationDatadogUserConfigPtrOutput) KafkaCustomMetrics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceIntegrationDatadogUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.KafkaCustomMetrics
	}).(pulumi.StringArrayOutput)
}

type ServiceIntegrationDatadogUserConfigDatadogTag struct {
	Comment *string `pulumi:"comment"`
	Tag     *string `pulumi:"tag"`
}

// ServiceIntegrationDatadogUserConfigDatadogTagInput is an input type that accepts ServiceIntegrationDatadogUserConfigDatadogTagArgs and ServiceIntegrationDatadogUserConfigDatadogTagOutput values.
// You can construct a concrete instance of `ServiceIntegrationDatadogUserConfigDatadogTagInput` via:
//
//          ServiceIntegrationDatadogUserConfigDatadogTagArgs{...}
type ServiceIntegrationDatadogUserConfigDatadogTagInput interface {
	pulumi.Input

	ToServiceIntegrationDatadogUserConfigDatadogTagOutput() ServiceIntegrationDatadogUserConfigDatadogTagOutput
	ToServiceIntegrationDatadogUserConfigDatadogTagOutputWithContext(context.Context) ServiceIntegrationDatadogUserConfigDatadogTagOutput
}

type ServiceIntegrationDatadogUserConfigDatadogTagArgs struct {
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	Tag     pulumi.StringPtrInput `pulumi:"tag"`
}

func (ServiceIntegrationDatadogUserConfigDatadogTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationDatadogUserConfigDatadogTag)(nil)).Elem()
}

func (i ServiceIntegrationDatadogUserConfigDatadogTagArgs) ToServiceIntegrationDatadogUserConfigDatadogTagOutput() ServiceIntegrationDatadogUserConfigDatadogTagOutput {
	return i.ToServiceIntegrationDatadogUserConfigDatadogTagOutputWithContext(context.Background())
}

func (i ServiceIntegrationDatadogUserConfigDatadogTagArgs) ToServiceIntegrationDatadogUserConfigDatadogTagOutputWithContext(ctx context.Context) ServiceIntegrationDatadogUserConfigDatadogTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationDatadogUserConfigDatadogTagOutput)
}

// ServiceIntegrationDatadogUserConfigDatadogTagArrayInput is an input type that accepts ServiceIntegrationDatadogUserConfigDatadogTagArray and ServiceIntegrationDatadogUserConfigDatadogTagArrayOutput values.
// You can construct a concrete instance of `ServiceIntegrationDatadogUserConfigDatadogTagArrayInput` via:
//
//          ServiceIntegrationDatadogUserConfigDatadogTagArray{ ServiceIntegrationDatadogUserConfigDatadogTagArgs{...} }
type ServiceIntegrationDatadogUserConfigDatadogTagArrayInput interface {
	pulumi.Input

	ToServiceIntegrationDatadogUserConfigDatadogTagArrayOutput() ServiceIntegrationDatadogUserConfigDatadogTagArrayOutput
	ToServiceIntegrationDatadogUserConfigDatadogTagArrayOutputWithContext(context.Context) ServiceIntegrationDatadogUserConfigDatadogTagArrayOutput
}

type ServiceIntegrationDatadogUserConfigDatadogTagArray []ServiceIntegrationDatadogUserConfigDatadogTagInput

func (ServiceIntegrationDatadogUserConfigDatadogTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceIntegrationDatadogUserConfigDatadogTag)(nil)).Elem()
}

func (i ServiceIntegrationDatadogUserConfigDatadogTagArray) ToServiceIntegrationDatadogUserConfigDatadogTagArrayOutput() ServiceIntegrationDatadogUserConfigDatadogTagArrayOutput {
	return i.ToServiceIntegrationDatadogUserConfigDatadogTagArrayOutputWithContext(context.Background())
}

func (i ServiceIntegrationDatadogUserConfigDatadogTagArray) ToServiceIntegrationDatadogUserConfigDatadogTagArrayOutputWithContext(ctx context.Context) ServiceIntegrationDatadogUserConfigDatadogTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationDatadogUserConfigDatadogTagArrayOutput)
}

type ServiceIntegrationDatadogUserConfigDatadogTagOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationDatadogUserConfigDatadogTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationDatadogUserConfigDatadogTag)(nil)).Elem()
}

func (o ServiceIntegrationDatadogUserConfigDatadogTagOutput) ToServiceIntegrationDatadogUserConfigDatadogTagOutput() ServiceIntegrationDatadogUserConfigDatadogTagOutput {
	return o
}

func (o ServiceIntegrationDatadogUserConfigDatadogTagOutput) ToServiceIntegrationDatadogUserConfigDatadogTagOutputWithContext(ctx context.Context) ServiceIntegrationDatadogUserConfigDatadogTagOutput {
	return o
}

func (o ServiceIntegrationDatadogUserConfigDatadogTagOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationDatadogUserConfigDatadogTag) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationDatadogUserConfigDatadogTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationDatadogUserConfigDatadogTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type ServiceIntegrationDatadogUserConfigDatadogTagArrayOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationDatadogUserConfigDatadogTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceIntegrationDatadogUserConfigDatadogTag)(nil)).Elem()
}

func (o ServiceIntegrationDatadogUserConfigDatadogTagArrayOutput) ToServiceIntegrationDatadogUserConfigDatadogTagArrayOutput() ServiceIntegrationDatadogUserConfigDatadogTagArrayOutput {
	return o
}

func (o ServiceIntegrationDatadogUserConfigDatadogTagArrayOutput) ToServiceIntegrationDatadogUserConfigDatadogTagArrayOutputWithContext(ctx context.Context) ServiceIntegrationDatadogUserConfigDatadogTagArrayOutput {
	return o
}

func (o ServiceIntegrationDatadogUserConfigDatadogTagArrayOutput) Index(i pulumi.IntInput) ServiceIntegrationDatadogUserConfigDatadogTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceIntegrationDatadogUserConfigDatadogTag {
		return vs[0].([]ServiceIntegrationDatadogUserConfigDatadogTag)[vs[1].(int)]
	}).(ServiceIntegrationDatadogUserConfigDatadogTagOutput)
}

type ServiceIntegrationEndpointDatadogUserConfig struct {
	DatadogApiKey        *string                                                 `pulumi:"datadogApiKey"`
	DatadogTags          []ServiceIntegrationEndpointDatadogUserConfigDatadogTag `pulumi:"datadogTags"`
	DisableConsumerStats *string                                                 `pulumi:"disableConsumerStats"`
	MaxPartitionContexts *string                                                 `pulumi:"maxPartitionContexts"`
	Site                 *string                                                 `pulumi:"site"`
}

// ServiceIntegrationEndpointDatadogUserConfigInput is an input type that accepts ServiceIntegrationEndpointDatadogUserConfigArgs and ServiceIntegrationEndpointDatadogUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationEndpointDatadogUserConfigInput` via:
//
//          ServiceIntegrationEndpointDatadogUserConfigArgs{...}
type ServiceIntegrationEndpointDatadogUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointDatadogUserConfigOutput() ServiceIntegrationEndpointDatadogUserConfigOutput
	ToServiceIntegrationEndpointDatadogUserConfigOutputWithContext(context.Context) ServiceIntegrationEndpointDatadogUserConfigOutput
}

type ServiceIntegrationEndpointDatadogUserConfigArgs struct {
	DatadogApiKey        pulumi.StringPtrInput                                           `pulumi:"datadogApiKey"`
	DatadogTags          ServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayInput `pulumi:"datadogTags"`
	DisableConsumerStats pulumi.StringPtrInput                                           `pulumi:"disableConsumerStats"`
	MaxPartitionContexts pulumi.StringPtrInput                                           `pulumi:"maxPartitionContexts"`
	Site                 pulumi.StringPtrInput                                           `pulumi:"site"`
}

func (ServiceIntegrationEndpointDatadogUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationEndpointDatadogUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationEndpointDatadogUserConfigArgs) ToServiceIntegrationEndpointDatadogUserConfigOutput() ServiceIntegrationEndpointDatadogUserConfigOutput {
	return i.ToServiceIntegrationEndpointDatadogUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationEndpointDatadogUserConfigArgs) ToServiceIntegrationEndpointDatadogUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationEndpointDatadogUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointDatadogUserConfigOutput)
}

func (i ServiceIntegrationEndpointDatadogUserConfigArgs) ToServiceIntegrationEndpointDatadogUserConfigPtrOutput() ServiceIntegrationEndpointDatadogUserConfigPtrOutput {
	return i.ToServiceIntegrationEndpointDatadogUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationEndpointDatadogUserConfigArgs) ToServiceIntegrationEndpointDatadogUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointDatadogUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointDatadogUserConfigOutput).ToServiceIntegrationEndpointDatadogUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationEndpointDatadogUserConfigPtrInput is an input type that accepts ServiceIntegrationEndpointDatadogUserConfigArgs, ServiceIntegrationEndpointDatadogUserConfigPtr and ServiceIntegrationEndpointDatadogUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationEndpointDatadogUserConfigPtrInput` via:
//
//          ServiceIntegrationEndpointDatadogUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationEndpointDatadogUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointDatadogUserConfigPtrOutput() ServiceIntegrationEndpointDatadogUserConfigPtrOutput
	ToServiceIntegrationEndpointDatadogUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationEndpointDatadogUserConfigPtrOutput
}

type serviceIntegrationEndpointDatadogUserConfigPtrType ServiceIntegrationEndpointDatadogUserConfigArgs

func ServiceIntegrationEndpointDatadogUserConfigPtr(v *ServiceIntegrationEndpointDatadogUserConfigArgs) ServiceIntegrationEndpointDatadogUserConfigPtrInput {
	return (*serviceIntegrationEndpointDatadogUserConfigPtrType)(v)
}

func (*serviceIntegrationEndpointDatadogUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationEndpointDatadogUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationEndpointDatadogUserConfigPtrType) ToServiceIntegrationEndpointDatadogUserConfigPtrOutput() ServiceIntegrationEndpointDatadogUserConfigPtrOutput {
	return i.ToServiceIntegrationEndpointDatadogUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationEndpointDatadogUserConfigPtrType) ToServiceIntegrationEndpointDatadogUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointDatadogUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointDatadogUserConfigPtrOutput)
}

type ServiceIntegrationEndpointDatadogUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointDatadogUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationEndpointDatadogUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationEndpointDatadogUserConfigOutput) ToServiceIntegrationEndpointDatadogUserConfigOutput() ServiceIntegrationEndpointDatadogUserConfigOutput {
	return o
}

func (o ServiceIntegrationEndpointDatadogUserConfigOutput) ToServiceIntegrationEndpointDatadogUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationEndpointDatadogUserConfigOutput {
	return o
}

func (o ServiceIntegrationEndpointDatadogUserConfigOutput) ToServiceIntegrationEndpointDatadogUserConfigPtrOutput() ServiceIntegrationEndpointDatadogUserConfigPtrOutput {
	return o.ToServiceIntegrationEndpointDatadogUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationEndpointDatadogUserConfigOutput) ToServiceIntegrationEndpointDatadogUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointDatadogUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointDatadogUserConfig) *ServiceIntegrationEndpointDatadogUserConfig {
		return &v
	}).(ServiceIntegrationEndpointDatadogUserConfigPtrOutput)
}
func (o ServiceIntegrationEndpointDatadogUserConfigOutput) DatadogApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointDatadogUserConfig) *string { return v.DatadogApiKey }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointDatadogUserConfigOutput) DatadogTags() ServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointDatadogUserConfig) []ServiceIntegrationEndpointDatadogUserConfigDatadogTag {
		return v.DatadogTags
	}).(ServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput)
}

func (o ServiceIntegrationEndpointDatadogUserConfigOutput) DisableConsumerStats() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointDatadogUserConfig) *string { return v.DisableConsumerStats }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointDatadogUserConfigOutput) MaxPartitionContexts() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointDatadogUserConfig) *string { return v.MaxPartitionContexts }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointDatadogUserConfigOutput) Site() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointDatadogUserConfig) *string { return v.Site }).(pulumi.StringPtrOutput)
}

type ServiceIntegrationEndpointDatadogUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointDatadogUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationEndpointDatadogUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationEndpointDatadogUserConfigPtrOutput) ToServiceIntegrationEndpointDatadogUserConfigPtrOutput() ServiceIntegrationEndpointDatadogUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationEndpointDatadogUserConfigPtrOutput) ToServiceIntegrationEndpointDatadogUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointDatadogUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationEndpointDatadogUserConfigPtrOutput) Elem() ServiceIntegrationEndpointDatadogUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointDatadogUserConfig) ServiceIntegrationEndpointDatadogUserConfig {
		return *v
	}).(ServiceIntegrationEndpointDatadogUserConfigOutput)
}

func (o ServiceIntegrationEndpointDatadogUserConfigPtrOutput) DatadogApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointDatadogUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.DatadogApiKey
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointDatadogUserConfigPtrOutput) DatadogTags() ServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointDatadogUserConfig) []ServiceIntegrationEndpointDatadogUserConfigDatadogTag {
		if v == nil {
			return nil
		}
		return v.DatadogTags
	}).(ServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput)
}

func (o ServiceIntegrationEndpointDatadogUserConfigPtrOutput) DisableConsumerStats() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointDatadogUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.DisableConsumerStats
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointDatadogUserConfigPtrOutput) MaxPartitionContexts() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointDatadogUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.MaxPartitionContexts
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointDatadogUserConfigPtrOutput) Site() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointDatadogUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.Site
	}).(pulumi.StringPtrOutput)
}

type ServiceIntegrationEndpointDatadogUserConfigDatadogTag struct {
	Comment *string `pulumi:"comment"`
	Tag     *string `pulumi:"tag"`
}

// ServiceIntegrationEndpointDatadogUserConfigDatadogTagInput is an input type that accepts ServiceIntegrationEndpointDatadogUserConfigDatadogTagArgs and ServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput values.
// You can construct a concrete instance of `ServiceIntegrationEndpointDatadogUserConfigDatadogTagInput` via:
//
//          ServiceIntegrationEndpointDatadogUserConfigDatadogTagArgs{...}
type ServiceIntegrationEndpointDatadogUserConfigDatadogTagInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput() ServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput
	ToServiceIntegrationEndpointDatadogUserConfigDatadogTagOutputWithContext(context.Context) ServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput
}

type ServiceIntegrationEndpointDatadogUserConfigDatadogTagArgs struct {
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	Tag     pulumi.StringPtrInput `pulumi:"tag"`
}

func (ServiceIntegrationEndpointDatadogUserConfigDatadogTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationEndpointDatadogUserConfigDatadogTag)(nil)).Elem()
}

func (i ServiceIntegrationEndpointDatadogUserConfigDatadogTagArgs) ToServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput() ServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput {
	return i.ToServiceIntegrationEndpointDatadogUserConfigDatadogTagOutputWithContext(context.Background())
}

func (i ServiceIntegrationEndpointDatadogUserConfigDatadogTagArgs) ToServiceIntegrationEndpointDatadogUserConfigDatadogTagOutputWithContext(ctx context.Context) ServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput)
}

// ServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayInput is an input type that accepts ServiceIntegrationEndpointDatadogUserConfigDatadogTagArray and ServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput values.
// You can construct a concrete instance of `ServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayInput` via:
//
//          ServiceIntegrationEndpointDatadogUserConfigDatadogTagArray{ ServiceIntegrationEndpointDatadogUserConfigDatadogTagArgs{...} }
type ServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput() ServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput
	ToServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutputWithContext(context.Context) ServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput
}

type ServiceIntegrationEndpointDatadogUserConfigDatadogTagArray []ServiceIntegrationEndpointDatadogUserConfigDatadogTagInput

func (ServiceIntegrationEndpointDatadogUserConfigDatadogTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceIntegrationEndpointDatadogUserConfigDatadogTag)(nil)).Elem()
}

func (i ServiceIntegrationEndpointDatadogUserConfigDatadogTagArray) ToServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput() ServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput {
	return i.ToServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutputWithContext(context.Background())
}

func (i ServiceIntegrationEndpointDatadogUserConfigDatadogTagArray) ToServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutputWithContext(ctx context.Context) ServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput)
}

type ServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationEndpointDatadogUserConfigDatadogTag)(nil)).Elem()
}

func (o ServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput) ToServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput() ServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput {
	return o
}

func (o ServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput) ToServiceIntegrationEndpointDatadogUserConfigDatadogTagOutputWithContext(ctx context.Context) ServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput {
	return o
}

func (o ServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointDatadogUserConfigDatadogTag) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointDatadogUserConfigDatadogTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type ServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceIntegrationEndpointDatadogUserConfigDatadogTag)(nil)).Elem()
}

func (o ServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput) ToServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput() ServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput {
	return o
}

func (o ServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput) ToServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutputWithContext(ctx context.Context) ServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput {
	return o
}

func (o ServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput) Index(i pulumi.IntInput) ServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceIntegrationEndpointDatadogUserConfigDatadogTag {
		return vs[0].([]ServiceIntegrationEndpointDatadogUserConfigDatadogTag)[vs[1].(int)]
	}).(ServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput)
}

type ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig struct {
	AccessKey    *string `pulumi:"accessKey"`
	LogGroupName *string `pulumi:"logGroupName"`
	Region       *string `pulumi:"region"`
	SecretKey    *string `pulumi:"secretKey"`
}

// ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigInput is an input type that accepts ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigArgs and ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigInput` via:
//
//          ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigArgs{...}
type ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput() ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput
	ToServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutputWithContext(context.Context) ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput
}

type ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigArgs struct {
	AccessKey    pulumi.StringPtrInput `pulumi:"accessKey"`
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	Region       pulumi.StringPtrInput `pulumi:"region"`
	SecretKey    pulumi.StringPtrInput `pulumi:"secretKey"`
}

func (ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigArgs) ToServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput() ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput {
	return i.ToServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigArgs) ToServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput)
}

func (i ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigArgs) ToServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput() ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput {
	return i.ToServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigArgs) ToServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput).ToServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrInput is an input type that accepts ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigArgs, ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtr and ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrInput` via:
//
//          ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput() ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput
	ToServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput
}

type serviceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrType ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigArgs

func ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtr(v *ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigArgs) ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrInput {
	return (*serviceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrType)(v)
}

func (*serviceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrType) ToServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput() ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput {
	return i.ToServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrType) ToServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput)
}

type ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput) ToServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput() ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput {
	return o
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput) ToServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput {
	return o
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput) ToServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput() ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput {
	return o.ToServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput) ToServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig) *ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig {
		return &v
	}).(ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput)
}
func (o ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig) *string { return v.LogGroupName }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

type ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput) ToServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput() ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput) ToServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput) Elem() ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig) ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig {
		return *v
	}).(ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput)
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

type ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig struct {
	AccessKey *string `pulumi:"accessKey"`
	Namespace *string `pulumi:"namespace"`
	Region    *string `pulumi:"region"`
	SecretKey *string `pulumi:"secretKey"`
}

// ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigInput is an input type that accepts ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs and ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigInput` via:
//
//          ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs{...}
type ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput() ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput
	ToServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutputWithContext(context.Context) ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput
}

type ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs struct {
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	Region    pulumi.StringPtrInput `pulumi:"region"`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
}

func (ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs) ToServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput() ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput {
	return i.ToServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs) ToServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput)
}

func (i ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs) ToServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput() ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput {
	return i.ToServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs) ToServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput).ToServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrInput is an input type that accepts ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs, ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtr and ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrInput` via:
//
//          ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput() ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput
	ToServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput
}

type serviceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrType ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs

func ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtr(v *ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs) ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrInput {
	return (*serviceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrType)(v)
}

func (*serviceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrType) ToServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput() ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput {
	return i.ToServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrType) ToServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput)
}

type ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput) ToServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput() ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput {
	return o
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput) ToServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput {
	return o
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput) ToServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput() ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput {
	return o.ToServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput) ToServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig) *ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig {
		return &v
	}).(ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput)
}
func (o ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

type ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput) ToServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput() ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput) ToServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput) Elem() ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig) ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig {
		return *v
	}).(ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput)
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

type ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig struct {
	Ca           *string `pulumi:"ca"`
	IndexDaysMax *string `pulumi:"indexDaysMax"`
	IndexPrefix  *string `pulumi:"indexPrefix"`
	Timeout      *string `pulumi:"timeout"`
	Url          *string `pulumi:"url"`
}

// ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigInput is an input type that accepts ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigArgs and ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigInput` via:
//
//          ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigArgs{...}
type ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput() ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput
	ToServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutputWithContext(context.Context) ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput
}

type ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigArgs struct {
	Ca           pulumi.StringPtrInput `pulumi:"ca"`
	IndexDaysMax pulumi.StringPtrInput `pulumi:"indexDaysMax"`
	IndexPrefix  pulumi.StringPtrInput `pulumi:"indexPrefix"`
	Timeout      pulumi.StringPtrInput `pulumi:"timeout"`
	Url          pulumi.StringPtrInput `pulumi:"url"`
}

func (ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigArgs) ToServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput() ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput {
	return i.ToServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigArgs) ToServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput)
}

func (i ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigArgs) ToServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput() ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput {
	return i.ToServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigArgs) ToServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput).ToServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrInput is an input type that accepts ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigArgs, ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtr and ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrInput` via:
//
//          ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput() ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput
	ToServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput
}

type serviceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrType ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigArgs

func ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtr(v *ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigArgs) ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrInput {
	return (*serviceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrType)(v)
}

func (*serviceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrType) ToServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput() ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput {
	return i.ToServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrType) ToServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput)
}

type ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput) ToServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput() ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput {
	return o
}

func (o ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput) ToServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput {
	return o
}

func (o ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput) ToServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput() ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput {
	return o.ToServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput) ToServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig) *ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig {
		return &v
	}).(ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput)
}
func (o ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput) Ca() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig) *string { return v.Ca }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput) IndexDaysMax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig) *string { return v.IndexDaysMax }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput) IndexPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig) *string { return v.IndexPrefix }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput) ToServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput() ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput) ToServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput) Elem() ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig) ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig {
		return *v
	}).(ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput)
}

func (o ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput) Ca() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.Ca
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput) IndexDaysMax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.IndexDaysMax
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput) IndexPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.IndexPrefix
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig struct {
	LogId                     *string `pulumi:"logId"`
	ProjectId                 *string `pulumi:"projectId"`
	ServiceAccountCredentials *string `pulumi:"serviceAccountCredentials"`
}

// ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigInput is an input type that accepts ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigArgs and ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigInput` via:
//
//          ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigArgs{...}
type ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput() ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput
	ToServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutputWithContext(context.Context) ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput
}

type ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigArgs struct {
	LogId                     pulumi.StringPtrInput `pulumi:"logId"`
	ProjectId                 pulumi.StringPtrInput `pulumi:"projectId"`
	ServiceAccountCredentials pulumi.StringPtrInput `pulumi:"serviceAccountCredentials"`
}

func (ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigArgs) ToServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput() ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput {
	return i.ToServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigArgs) ToServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput)
}

func (i ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigArgs) ToServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput() ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput {
	return i.ToServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigArgs) ToServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput).ToServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrInput is an input type that accepts ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigArgs, ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtr and ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrInput` via:
//
//          ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput() ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput
	ToServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput
}

type serviceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrType ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigArgs

func ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtr(v *ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigArgs) ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrInput {
	return (*serviceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrType)(v)
}

func (*serviceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrType) ToServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput() ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput {
	return i.ToServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrType) ToServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput)
}

type ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput) ToServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput() ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput {
	return o
}

func (o ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput) ToServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput {
	return o
}

func (o ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput) ToServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput() ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput {
	return o.ToServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput) ToServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig) *ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig {
		return &v
	}).(ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput)
}
func (o ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput) LogId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig) *string { return v.LogId }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput) ServiceAccountCredentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig) *string {
		return v.ServiceAccountCredentials
	}).(pulumi.StringPtrOutput)
}

type ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput) ToServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput() ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput) ToServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput) Elem() ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig) ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig {
		return *v
	}).(ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput)
}

func (o ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput) LogId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.LogId
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput) ServiceAccountCredentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountCredentials
	}).(pulumi.StringPtrOutput)
}

type ServiceIntegrationEndpointExternalKafkaUserConfig struct {
	BootstrapServers                   *string `pulumi:"bootstrapServers"`
	SaslMechanism                      *string `pulumi:"saslMechanism"`
	SaslPlainPassword                  *string `pulumi:"saslPlainPassword"`
	SaslPlainUsername                  *string `pulumi:"saslPlainUsername"`
	SecurityProtocol                   *string `pulumi:"securityProtocol"`
	SslCaCert                          *string `pulumi:"sslCaCert"`
	SslClientCert                      *string `pulumi:"sslClientCert"`
	SslClientKey                       *string `pulumi:"sslClientKey"`
	SslEndpointIdentificationAlgorithm *string `pulumi:"sslEndpointIdentificationAlgorithm"`
}

// ServiceIntegrationEndpointExternalKafkaUserConfigInput is an input type that accepts ServiceIntegrationEndpointExternalKafkaUserConfigArgs and ServiceIntegrationEndpointExternalKafkaUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationEndpointExternalKafkaUserConfigInput` via:
//
//          ServiceIntegrationEndpointExternalKafkaUserConfigArgs{...}
type ServiceIntegrationEndpointExternalKafkaUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointExternalKafkaUserConfigOutput() ServiceIntegrationEndpointExternalKafkaUserConfigOutput
	ToServiceIntegrationEndpointExternalKafkaUserConfigOutputWithContext(context.Context) ServiceIntegrationEndpointExternalKafkaUserConfigOutput
}

type ServiceIntegrationEndpointExternalKafkaUserConfigArgs struct {
	BootstrapServers                   pulumi.StringPtrInput `pulumi:"bootstrapServers"`
	SaslMechanism                      pulumi.StringPtrInput `pulumi:"saslMechanism"`
	SaslPlainPassword                  pulumi.StringPtrInput `pulumi:"saslPlainPassword"`
	SaslPlainUsername                  pulumi.StringPtrInput `pulumi:"saslPlainUsername"`
	SecurityProtocol                   pulumi.StringPtrInput `pulumi:"securityProtocol"`
	SslCaCert                          pulumi.StringPtrInput `pulumi:"sslCaCert"`
	SslClientCert                      pulumi.StringPtrInput `pulumi:"sslClientCert"`
	SslClientKey                       pulumi.StringPtrInput `pulumi:"sslClientKey"`
	SslEndpointIdentificationAlgorithm pulumi.StringPtrInput `pulumi:"sslEndpointIdentificationAlgorithm"`
}

func (ServiceIntegrationEndpointExternalKafkaUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationEndpointExternalKafkaUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationEndpointExternalKafkaUserConfigArgs) ToServiceIntegrationEndpointExternalKafkaUserConfigOutput() ServiceIntegrationEndpointExternalKafkaUserConfigOutput {
	return i.ToServiceIntegrationEndpointExternalKafkaUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationEndpointExternalKafkaUserConfigArgs) ToServiceIntegrationEndpointExternalKafkaUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalKafkaUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointExternalKafkaUserConfigOutput)
}

func (i ServiceIntegrationEndpointExternalKafkaUserConfigArgs) ToServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput() ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput {
	return i.ToServiceIntegrationEndpointExternalKafkaUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationEndpointExternalKafkaUserConfigArgs) ToServiceIntegrationEndpointExternalKafkaUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointExternalKafkaUserConfigOutput).ToServiceIntegrationEndpointExternalKafkaUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationEndpointExternalKafkaUserConfigPtrInput is an input type that accepts ServiceIntegrationEndpointExternalKafkaUserConfigArgs, ServiceIntegrationEndpointExternalKafkaUserConfigPtr and ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationEndpointExternalKafkaUserConfigPtrInput` via:
//
//          ServiceIntegrationEndpointExternalKafkaUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationEndpointExternalKafkaUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput() ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput
	ToServiceIntegrationEndpointExternalKafkaUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput
}

type serviceIntegrationEndpointExternalKafkaUserConfigPtrType ServiceIntegrationEndpointExternalKafkaUserConfigArgs

func ServiceIntegrationEndpointExternalKafkaUserConfigPtr(v *ServiceIntegrationEndpointExternalKafkaUserConfigArgs) ServiceIntegrationEndpointExternalKafkaUserConfigPtrInput {
	return (*serviceIntegrationEndpointExternalKafkaUserConfigPtrType)(v)
}

func (*serviceIntegrationEndpointExternalKafkaUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationEndpointExternalKafkaUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationEndpointExternalKafkaUserConfigPtrType) ToServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput() ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput {
	return i.ToServiceIntegrationEndpointExternalKafkaUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationEndpointExternalKafkaUserConfigPtrType) ToServiceIntegrationEndpointExternalKafkaUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput)
}

type ServiceIntegrationEndpointExternalKafkaUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointExternalKafkaUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationEndpointExternalKafkaUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationEndpointExternalKafkaUserConfigOutput) ToServiceIntegrationEndpointExternalKafkaUserConfigOutput() ServiceIntegrationEndpointExternalKafkaUserConfigOutput {
	return o
}

func (o ServiceIntegrationEndpointExternalKafkaUserConfigOutput) ToServiceIntegrationEndpointExternalKafkaUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalKafkaUserConfigOutput {
	return o
}

func (o ServiceIntegrationEndpointExternalKafkaUserConfigOutput) ToServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput() ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput {
	return o.ToServiceIntegrationEndpointExternalKafkaUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationEndpointExternalKafkaUserConfigOutput) ToServiceIntegrationEndpointExternalKafkaUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalKafkaUserConfig) *ServiceIntegrationEndpointExternalKafkaUserConfig {
		return &v
	}).(ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput)
}
func (o ServiceIntegrationEndpointExternalKafkaUserConfigOutput) BootstrapServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalKafkaUserConfig) *string { return v.BootstrapServers }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalKafkaUserConfigOutput) SaslMechanism() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalKafkaUserConfig) *string { return v.SaslMechanism }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalKafkaUserConfigOutput) SaslPlainPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalKafkaUserConfig) *string { return v.SaslPlainPassword }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalKafkaUserConfigOutput) SaslPlainUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalKafkaUserConfig) *string { return v.SaslPlainUsername }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalKafkaUserConfigOutput) SecurityProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalKafkaUserConfig) *string { return v.SecurityProtocol }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalKafkaUserConfigOutput) SslCaCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalKafkaUserConfig) *string { return v.SslCaCert }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalKafkaUserConfigOutput) SslClientCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalKafkaUserConfig) *string { return v.SslClientCert }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalKafkaUserConfigOutput) SslClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalKafkaUserConfig) *string { return v.SslClientKey }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalKafkaUserConfigOutput) SslEndpointIdentificationAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalKafkaUserConfig) *string {
		return v.SslEndpointIdentificationAlgorithm
	}).(pulumi.StringPtrOutput)
}

type ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationEndpointExternalKafkaUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput) ToServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput() ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput) ToServiceIntegrationEndpointExternalKafkaUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput) Elem() ServiceIntegrationEndpointExternalKafkaUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalKafkaUserConfig) ServiceIntegrationEndpointExternalKafkaUserConfig {
		return *v
	}).(ServiceIntegrationEndpointExternalKafkaUserConfigOutput)
}

func (o ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput) BootstrapServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalKafkaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.BootstrapServers
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput) SaslMechanism() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalKafkaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.SaslMechanism
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput) SaslPlainPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalKafkaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.SaslPlainPassword
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput) SaslPlainUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalKafkaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.SaslPlainUsername
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput) SecurityProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalKafkaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.SecurityProtocol
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput) SslCaCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalKafkaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.SslCaCert
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput) SslClientCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalKafkaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.SslClientCert
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput) SslClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalKafkaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.SslClientKey
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput) SslEndpointIdentificationAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalKafkaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.SslEndpointIdentificationAlgorithm
	}).(pulumi.StringPtrOutput)
}

type ServiceIntegrationEndpointExternalSchemaRegistryUserConfig struct {
	Authentication    *string `pulumi:"authentication"`
	BasicAuthPassword *string `pulumi:"basicAuthPassword"`
	BasicAuthUsername *string `pulumi:"basicAuthUsername"`
	Url               *string `pulumi:"url"`
}

// ServiceIntegrationEndpointExternalSchemaRegistryUserConfigInput is an input type that accepts ServiceIntegrationEndpointExternalSchemaRegistryUserConfigArgs and ServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationEndpointExternalSchemaRegistryUserConfigInput` via:
//
//          ServiceIntegrationEndpointExternalSchemaRegistryUserConfigArgs{...}
type ServiceIntegrationEndpointExternalSchemaRegistryUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput() ServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput
	ToServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutputWithContext(context.Context) ServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput
}

type ServiceIntegrationEndpointExternalSchemaRegistryUserConfigArgs struct {
	Authentication    pulumi.StringPtrInput `pulumi:"authentication"`
	BasicAuthPassword pulumi.StringPtrInput `pulumi:"basicAuthPassword"`
	BasicAuthUsername pulumi.StringPtrInput `pulumi:"basicAuthUsername"`
	Url               pulumi.StringPtrInput `pulumi:"url"`
}

func (ServiceIntegrationEndpointExternalSchemaRegistryUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationEndpointExternalSchemaRegistryUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationEndpointExternalSchemaRegistryUserConfigArgs) ToServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput() ServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput {
	return i.ToServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationEndpointExternalSchemaRegistryUserConfigArgs) ToServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput)
}

func (i ServiceIntegrationEndpointExternalSchemaRegistryUserConfigArgs) ToServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput() ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput {
	return i.ToServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationEndpointExternalSchemaRegistryUserConfigArgs) ToServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput).ToServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrInput is an input type that accepts ServiceIntegrationEndpointExternalSchemaRegistryUserConfigArgs, ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtr and ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrInput` via:
//
//          ServiceIntegrationEndpointExternalSchemaRegistryUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput() ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput
	ToServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput
}

type serviceIntegrationEndpointExternalSchemaRegistryUserConfigPtrType ServiceIntegrationEndpointExternalSchemaRegistryUserConfigArgs

func ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtr(v *ServiceIntegrationEndpointExternalSchemaRegistryUserConfigArgs) ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrInput {
	return (*serviceIntegrationEndpointExternalSchemaRegistryUserConfigPtrType)(v)
}

func (*serviceIntegrationEndpointExternalSchemaRegistryUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationEndpointExternalSchemaRegistryUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationEndpointExternalSchemaRegistryUserConfigPtrType) ToServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput() ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput {
	return i.ToServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationEndpointExternalSchemaRegistryUserConfigPtrType) ToServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput)
}

type ServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationEndpointExternalSchemaRegistryUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput) ToServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput() ServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput {
	return o
}

func (o ServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput) ToServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput {
	return o
}

func (o ServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput) ToServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput() ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput {
	return o.ToServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput) ToServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalSchemaRegistryUserConfig) *ServiceIntegrationEndpointExternalSchemaRegistryUserConfig {
		return &v
	}).(ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput)
}
func (o ServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalSchemaRegistryUserConfig) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput) BasicAuthPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalSchemaRegistryUserConfig) *string { return v.BasicAuthPassword }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput) BasicAuthUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalSchemaRegistryUserConfig) *string { return v.BasicAuthUsername }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointExternalSchemaRegistryUserConfig) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationEndpointExternalSchemaRegistryUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput) ToServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput() ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput) ToServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput) Elem() ServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalSchemaRegistryUserConfig) ServiceIntegrationEndpointExternalSchemaRegistryUserConfig {
		return *v
	}).(ServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput)
}

func (o ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalSchemaRegistryUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.Authentication
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput) BasicAuthPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalSchemaRegistryUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.BasicAuthPassword
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput) BasicAuthUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalSchemaRegistryUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.BasicAuthUsername
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointExternalSchemaRegistryUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type ServiceIntegrationEndpointJolokiaUserConfig struct {
	BasicAuthPassword *string `pulumi:"basicAuthPassword"`
	BasicAuthUsername *string `pulumi:"basicAuthUsername"`
}

// ServiceIntegrationEndpointJolokiaUserConfigInput is an input type that accepts ServiceIntegrationEndpointJolokiaUserConfigArgs and ServiceIntegrationEndpointJolokiaUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationEndpointJolokiaUserConfigInput` via:
//
//          ServiceIntegrationEndpointJolokiaUserConfigArgs{...}
type ServiceIntegrationEndpointJolokiaUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointJolokiaUserConfigOutput() ServiceIntegrationEndpointJolokiaUserConfigOutput
	ToServiceIntegrationEndpointJolokiaUserConfigOutputWithContext(context.Context) ServiceIntegrationEndpointJolokiaUserConfigOutput
}

type ServiceIntegrationEndpointJolokiaUserConfigArgs struct {
	BasicAuthPassword pulumi.StringPtrInput `pulumi:"basicAuthPassword"`
	BasicAuthUsername pulumi.StringPtrInput `pulumi:"basicAuthUsername"`
}

func (ServiceIntegrationEndpointJolokiaUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationEndpointJolokiaUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationEndpointJolokiaUserConfigArgs) ToServiceIntegrationEndpointJolokiaUserConfigOutput() ServiceIntegrationEndpointJolokiaUserConfigOutput {
	return i.ToServiceIntegrationEndpointJolokiaUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationEndpointJolokiaUserConfigArgs) ToServiceIntegrationEndpointJolokiaUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationEndpointJolokiaUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointJolokiaUserConfigOutput)
}

func (i ServiceIntegrationEndpointJolokiaUserConfigArgs) ToServiceIntegrationEndpointJolokiaUserConfigPtrOutput() ServiceIntegrationEndpointJolokiaUserConfigPtrOutput {
	return i.ToServiceIntegrationEndpointJolokiaUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationEndpointJolokiaUserConfigArgs) ToServiceIntegrationEndpointJolokiaUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointJolokiaUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointJolokiaUserConfigOutput).ToServiceIntegrationEndpointJolokiaUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationEndpointJolokiaUserConfigPtrInput is an input type that accepts ServiceIntegrationEndpointJolokiaUserConfigArgs, ServiceIntegrationEndpointJolokiaUserConfigPtr and ServiceIntegrationEndpointJolokiaUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationEndpointJolokiaUserConfigPtrInput` via:
//
//          ServiceIntegrationEndpointJolokiaUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationEndpointJolokiaUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointJolokiaUserConfigPtrOutput() ServiceIntegrationEndpointJolokiaUserConfigPtrOutput
	ToServiceIntegrationEndpointJolokiaUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationEndpointJolokiaUserConfigPtrOutput
}

type serviceIntegrationEndpointJolokiaUserConfigPtrType ServiceIntegrationEndpointJolokiaUserConfigArgs

func ServiceIntegrationEndpointJolokiaUserConfigPtr(v *ServiceIntegrationEndpointJolokiaUserConfigArgs) ServiceIntegrationEndpointJolokiaUserConfigPtrInput {
	return (*serviceIntegrationEndpointJolokiaUserConfigPtrType)(v)
}

func (*serviceIntegrationEndpointJolokiaUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationEndpointJolokiaUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationEndpointJolokiaUserConfigPtrType) ToServiceIntegrationEndpointJolokiaUserConfigPtrOutput() ServiceIntegrationEndpointJolokiaUserConfigPtrOutput {
	return i.ToServiceIntegrationEndpointJolokiaUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationEndpointJolokiaUserConfigPtrType) ToServiceIntegrationEndpointJolokiaUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointJolokiaUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointJolokiaUserConfigPtrOutput)
}

type ServiceIntegrationEndpointJolokiaUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointJolokiaUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationEndpointJolokiaUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationEndpointJolokiaUserConfigOutput) ToServiceIntegrationEndpointJolokiaUserConfigOutput() ServiceIntegrationEndpointJolokiaUserConfigOutput {
	return o
}

func (o ServiceIntegrationEndpointJolokiaUserConfigOutput) ToServiceIntegrationEndpointJolokiaUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationEndpointJolokiaUserConfigOutput {
	return o
}

func (o ServiceIntegrationEndpointJolokiaUserConfigOutput) ToServiceIntegrationEndpointJolokiaUserConfigPtrOutput() ServiceIntegrationEndpointJolokiaUserConfigPtrOutput {
	return o.ToServiceIntegrationEndpointJolokiaUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationEndpointJolokiaUserConfigOutput) ToServiceIntegrationEndpointJolokiaUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointJolokiaUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointJolokiaUserConfig) *ServiceIntegrationEndpointJolokiaUserConfig {
		return &v
	}).(ServiceIntegrationEndpointJolokiaUserConfigPtrOutput)
}
func (o ServiceIntegrationEndpointJolokiaUserConfigOutput) BasicAuthPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointJolokiaUserConfig) *string { return v.BasicAuthPassword }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointJolokiaUserConfigOutput) BasicAuthUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointJolokiaUserConfig) *string { return v.BasicAuthUsername }).(pulumi.StringPtrOutput)
}

type ServiceIntegrationEndpointJolokiaUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointJolokiaUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationEndpointJolokiaUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationEndpointJolokiaUserConfigPtrOutput) ToServiceIntegrationEndpointJolokiaUserConfigPtrOutput() ServiceIntegrationEndpointJolokiaUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationEndpointJolokiaUserConfigPtrOutput) ToServiceIntegrationEndpointJolokiaUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointJolokiaUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationEndpointJolokiaUserConfigPtrOutput) Elem() ServiceIntegrationEndpointJolokiaUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointJolokiaUserConfig) ServiceIntegrationEndpointJolokiaUserConfig {
		return *v
	}).(ServiceIntegrationEndpointJolokiaUserConfigOutput)
}

func (o ServiceIntegrationEndpointJolokiaUserConfigPtrOutput) BasicAuthPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointJolokiaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.BasicAuthPassword
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointJolokiaUserConfigPtrOutput) BasicAuthUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointJolokiaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.BasicAuthUsername
	}).(pulumi.StringPtrOutput)
}

type ServiceIntegrationEndpointPrometheusUserConfig struct {
	BasicAuthPassword *string `pulumi:"basicAuthPassword"`
	BasicAuthUsername *string `pulumi:"basicAuthUsername"`
}

// ServiceIntegrationEndpointPrometheusUserConfigInput is an input type that accepts ServiceIntegrationEndpointPrometheusUserConfigArgs and ServiceIntegrationEndpointPrometheusUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationEndpointPrometheusUserConfigInput` via:
//
//          ServiceIntegrationEndpointPrometheusUserConfigArgs{...}
type ServiceIntegrationEndpointPrometheusUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointPrometheusUserConfigOutput() ServiceIntegrationEndpointPrometheusUserConfigOutput
	ToServiceIntegrationEndpointPrometheusUserConfigOutputWithContext(context.Context) ServiceIntegrationEndpointPrometheusUserConfigOutput
}

type ServiceIntegrationEndpointPrometheusUserConfigArgs struct {
	BasicAuthPassword pulumi.StringPtrInput `pulumi:"basicAuthPassword"`
	BasicAuthUsername pulumi.StringPtrInput `pulumi:"basicAuthUsername"`
}

func (ServiceIntegrationEndpointPrometheusUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationEndpointPrometheusUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationEndpointPrometheusUserConfigArgs) ToServiceIntegrationEndpointPrometheusUserConfigOutput() ServiceIntegrationEndpointPrometheusUserConfigOutput {
	return i.ToServiceIntegrationEndpointPrometheusUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationEndpointPrometheusUserConfigArgs) ToServiceIntegrationEndpointPrometheusUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationEndpointPrometheusUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointPrometheusUserConfigOutput)
}

func (i ServiceIntegrationEndpointPrometheusUserConfigArgs) ToServiceIntegrationEndpointPrometheusUserConfigPtrOutput() ServiceIntegrationEndpointPrometheusUserConfigPtrOutput {
	return i.ToServiceIntegrationEndpointPrometheusUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationEndpointPrometheusUserConfigArgs) ToServiceIntegrationEndpointPrometheusUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointPrometheusUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointPrometheusUserConfigOutput).ToServiceIntegrationEndpointPrometheusUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationEndpointPrometheusUserConfigPtrInput is an input type that accepts ServiceIntegrationEndpointPrometheusUserConfigArgs, ServiceIntegrationEndpointPrometheusUserConfigPtr and ServiceIntegrationEndpointPrometheusUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationEndpointPrometheusUserConfigPtrInput` via:
//
//          ServiceIntegrationEndpointPrometheusUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationEndpointPrometheusUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointPrometheusUserConfigPtrOutput() ServiceIntegrationEndpointPrometheusUserConfigPtrOutput
	ToServiceIntegrationEndpointPrometheusUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationEndpointPrometheusUserConfigPtrOutput
}

type serviceIntegrationEndpointPrometheusUserConfigPtrType ServiceIntegrationEndpointPrometheusUserConfigArgs

func ServiceIntegrationEndpointPrometheusUserConfigPtr(v *ServiceIntegrationEndpointPrometheusUserConfigArgs) ServiceIntegrationEndpointPrometheusUserConfigPtrInput {
	return (*serviceIntegrationEndpointPrometheusUserConfigPtrType)(v)
}

func (*serviceIntegrationEndpointPrometheusUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationEndpointPrometheusUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationEndpointPrometheusUserConfigPtrType) ToServiceIntegrationEndpointPrometheusUserConfigPtrOutput() ServiceIntegrationEndpointPrometheusUserConfigPtrOutput {
	return i.ToServiceIntegrationEndpointPrometheusUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationEndpointPrometheusUserConfigPtrType) ToServiceIntegrationEndpointPrometheusUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointPrometheusUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointPrometheusUserConfigPtrOutput)
}

type ServiceIntegrationEndpointPrometheusUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointPrometheusUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationEndpointPrometheusUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationEndpointPrometheusUserConfigOutput) ToServiceIntegrationEndpointPrometheusUserConfigOutput() ServiceIntegrationEndpointPrometheusUserConfigOutput {
	return o
}

func (o ServiceIntegrationEndpointPrometheusUserConfigOutput) ToServiceIntegrationEndpointPrometheusUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationEndpointPrometheusUserConfigOutput {
	return o
}

func (o ServiceIntegrationEndpointPrometheusUserConfigOutput) ToServiceIntegrationEndpointPrometheusUserConfigPtrOutput() ServiceIntegrationEndpointPrometheusUserConfigPtrOutput {
	return o.ToServiceIntegrationEndpointPrometheusUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationEndpointPrometheusUserConfigOutput) ToServiceIntegrationEndpointPrometheusUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointPrometheusUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointPrometheusUserConfig) *ServiceIntegrationEndpointPrometheusUserConfig {
		return &v
	}).(ServiceIntegrationEndpointPrometheusUserConfigPtrOutput)
}
func (o ServiceIntegrationEndpointPrometheusUserConfigOutput) BasicAuthPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointPrometheusUserConfig) *string { return v.BasicAuthPassword }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointPrometheusUserConfigOutput) BasicAuthUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointPrometheusUserConfig) *string { return v.BasicAuthUsername }).(pulumi.StringPtrOutput)
}

type ServiceIntegrationEndpointPrometheusUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointPrometheusUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationEndpointPrometheusUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationEndpointPrometheusUserConfigPtrOutput) ToServiceIntegrationEndpointPrometheusUserConfigPtrOutput() ServiceIntegrationEndpointPrometheusUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationEndpointPrometheusUserConfigPtrOutput) ToServiceIntegrationEndpointPrometheusUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointPrometheusUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationEndpointPrometheusUserConfigPtrOutput) Elem() ServiceIntegrationEndpointPrometheusUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointPrometheusUserConfig) ServiceIntegrationEndpointPrometheusUserConfig {
		return *v
	}).(ServiceIntegrationEndpointPrometheusUserConfigOutput)
}

func (o ServiceIntegrationEndpointPrometheusUserConfigPtrOutput) BasicAuthPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointPrometheusUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.BasicAuthPassword
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointPrometheusUserConfigPtrOutput) BasicAuthUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointPrometheusUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.BasicAuthUsername
	}).(pulumi.StringPtrOutput)
}

type ServiceIntegrationEndpointRsyslogUserConfig struct {
	Ca      *string `pulumi:"ca"`
	Cert    *string `pulumi:"cert"`
	Format  *string `pulumi:"format"`
	Key     *string `pulumi:"key"`
	Logline *string `pulumi:"logline"`
	Port    *string `pulumi:"port"`
	Sd      *string `pulumi:"sd"`
	Server  *string `pulumi:"server"`
	Tls     *string `pulumi:"tls"`
}

// ServiceIntegrationEndpointRsyslogUserConfigInput is an input type that accepts ServiceIntegrationEndpointRsyslogUserConfigArgs and ServiceIntegrationEndpointRsyslogUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationEndpointRsyslogUserConfigInput` via:
//
//          ServiceIntegrationEndpointRsyslogUserConfigArgs{...}
type ServiceIntegrationEndpointRsyslogUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointRsyslogUserConfigOutput() ServiceIntegrationEndpointRsyslogUserConfigOutput
	ToServiceIntegrationEndpointRsyslogUserConfigOutputWithContext(context.Context) ServiceIntegrationEndpointRsyslogUserConfigOutput
}

type ServiceIntegrationEndpointRsyslogUserConfigArgs struct {
	Ca      pulumi.StringPtrInput `pulumi:"ca"`
	Cert    pulumi.StringPtrInput `pulumi:"cert"`
	Format  pulumi.StringPtrInput `pulumi:"format"`
	Key     pulumi.StringPtrInput `pulumi:"key"`
	Logline pulumi.StringPtrInput `pulumi:"logline"`
	Port    pulumi.StringPtrInput `pulumi:"port"`
	Sd      pulumi.StringPtrInput `pulumi:"sd"`
	Server  pulumi.StringPtrInput `pulumi:"server"`
	Tls     pulumi.StringPtrInput `pulumi:"tls"`
}

func (ServiceIntegrationEndpointRsyslogUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationEndpointRsyslogUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationEndpointRsyslogUserConfigArgs) ToServiceIntegrationEndpointRsyslogUserConfigOutput() ServiceIntegrationEndpointRsyslogUserConfigOutput {
	return i.ToServiceIntegrationEndpointRsyslogUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationEndpointRsyslogUserConfigArgs) ToServiceIntegrationEndpointRsyslogUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationEndpointRsyslogUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointRsyslogUserConfigOutput)
}

func (i ServiceIntegrationEndpointRsyslogUserConfigArgs) ToServiceIntegrationEndpointRsyslogUserConfigPtrOutput() ServiceIntegrationEndpointRsyslogUserConfigPtrOutput {
	return i.ToServiceIntegrationEndpointRsyslogUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationEndpointRsyslogUserConfigArgs) ToServiceIntegrationEndpointRsyslogUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointRsyslogUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointRsyslogUserConfigOutput).ToServiceIntegrationEndpointRsyslogUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationEndpointRsyslogUserConfigPtrInput is an input type that accepts ServiceIntegrationEndpointRsyslogUserConfigArgs, ServiceIntegrationEndpointRsyslogUserConfigPtr and ServiceIntegrationEndpointRsyslogUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationEndpointRsyslogUserConfigPtrInput` via:
//
//          ServiceIntegrationEndpointRsyslogUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationEndpointRsyslogUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointRsyslogUserConfigPtrOutput() ServiceIntegrationEndpointRsyslogUserConfigPtrOutput
	ToServiceIntegrationEndpointRsyslogUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationEndpointRsyslogUserConfigPtrOutput
}

type serviceIntegrationEndpointRsyslogUserConfigPtrType ServiceIntegrationEndpointRsyslogUserConfigArgs

func ServiceIntegrationEndpointRsyslogUserConfigPtr(v *ServiceIntegrationEndpointRsyslogUserConfigArgs) ServiceIntegrationEndpointRsyslogUserConfigPtrInput {
	return (*serviceIntegrationEndpointRsyslogUserConfigPtrType)(v)
}

func (*serviceIntegrationEndpointRsyslogUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationEndpointRsyslogUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationEndpointRsyslogUserConfigPtrType) ToServiceIntegrationEndpointRsyslogUserConfigPtrOutput() ServiceIntegrationEndpointRsyslogUserConfigPtrOutput {
	return i.ToServiceIntegrationEndpointRsyslogUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationEndpointRsyslogUserConfigPtrType) ToServiceIntegrationEndpointRsyslogUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointRsyslogUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointRsyslogUserConfigPtrOutput)
}

type ServiceIntegrationEndpointRsyslogUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointRsyslogUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationEndpointRsyslogUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationEndpointRsyslogUserConfigOutput) ToServiceIntegrationEndpointRsyslogUserConfigOutput() ServiceIntegrationEndpointRsyslogUserConfigOutput {
	return o
}

func (o ServiceIntegrationEndpointRsyslogUserConfigOutput) ToServiceIntegrationEndpointRsyslogUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationEndpointRsyslogUserConfigOutput {
	return o
}

func (o ServiceIntegrationEndpointRsyslogUserConfigOutput) ToServiceIntegrationEndpointRsyslogUserConfigPtrOutput() ServiceIntegrationEndpointRsyslogUserConfigPtrOutput {
	return o.ToServiceIntegrationEndpointRsyslogUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationEndpointRsyslogUserConfigOutput) ToServiceIntegrationEndpointRsyslogUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointRsyslogUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointRsyslogUserConfig) *ServiceIntegrationEndpointRsyslogUserConfig {
		return &v
	}).(ServiceIntegrationEndpointRsyslogUserConfigPtrOutput)
}
func (o ServiceIntegrationEndpointRsyslogUserConfigOutput) Ca() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointRsyslogUserConfig) *string { return v.Ca }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointRsyslogUserConfigOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointRsyslogUserConfig) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointRsyslogUserConfigOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointRsyslogUserConfig) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointRsyslogUserConfigOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointRsyslogUserConfig) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointRsyslogUserConfigOutput) Logline() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointRsyslogUserConfig) *string { return v.Logline }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointRsyslogUserConfigOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointRsyslogUserConfig) *string { return v.Port }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointRsyslogUserConfigOutput) Sd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointRsyslogUserConfig) *string { return v.Sd }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointRsyslogUserConfigOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointRsyslogUserConfig) *string { return v.Server }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointRsyslogUserConfigOutput) Tls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointRsyslogUserConfig) *string { return v.Tls }).(pulumi.StringPtrOutput)
}

type ServiceIntegrationEndpointRsyslogUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointRsyslogUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationEndpointRsyslogUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationEndpointRsyslogUserConfigPtrOutput) ToServiceIntegrationEndpointRsyslogUserConfigPtrOutput() ServiceIntegrationEndpointRsyslogUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationEndpointRsyslogUserConfigPtrOutput) ToServiceIntegrationEndpointRsyslogUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointRsyslogUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationEndpointRsyslogUserConfigPtrOutput) Elem() ServiceIntegrationEndpointRsyslogUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointRsyslogUserConfig) ServiceIntegrationEndpointRsyslogUserConfig {
		return *v
	}).(ServiceIntegrationEndpointRsyslogUserConfigOutput)
}

func (o ServiceIntegrationEndpointRsyslogUserConfigPtrOutput) Ca() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointRsyslogUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.Ca
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointRsyslogUserConfigPtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointRsyslogUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointRsyslogUserConfigPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointRsyslogUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointRsyslogUserConfigPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointRsyslogUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointRsyslogUserConfigPtrOutput) Logline() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointRsyslogUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.Logline
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointRsyslogUserConfigPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointRsyslogUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointRsyslogUserConfigPtrOutput) Sd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointRsyslogUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.Sd
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointRsyslogUserConfigPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointRsyslogUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.Server
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointRsyslogUserConfigPtrOutput) Tls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointRsyslogUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(pulumi.StringPtrOutput)
}

type ServiceIntegrationEndpointSignalfxUserConfig struct {
	EnabledMetrics []string `pulumi:"enabledMetrics"`
	SignalfxApiKey *string  `pulumi:"signalfxApiKey"`
	SignalfxRealm  *string  `pulumi:"signalfxRealm"`
}

// ServiceIntegrationEndpointSignalfxUserConfigInput is an input type that accepts ServiceIntegrationEndpointSignalfxUserConfigArgs and ServiceIntegrationEndpointSignalfxUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationEndpointSignalfxUserConfigInput` via:
//
//          ServiceIntegrationEndpointSignalfxUserConfigArgs{...}
type ServiceIntegrationEndpointSignalfxUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointSignalfxUserConfigOutput() ServiceIntegrationEndpointSignalfxUserConfigOutput
	ToServiceIntegrationEndpointSignalfxUserConfigOutputWithContext(context.Context) ServiceIntegrationEndpointSignalfxUserConfigOutput
}

type ServiceIntegrationEndpointSignalfxUserConfigArgs struct {
	EnabledMetrics pulumi.StringArrayInput `pulumi:"enabledMetrics"`
	SignalfxApiKey pulumi.StringPtrInput   `pulumi:"signalfxApiKey"`
	SignalfxRealm  pulumi.StringPtrInput   `pulumi:"signalfxRealm"`
}

func (ServiceIntegrationEndpointSignalfxUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationEndpointSignalfxUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationEndpointSignalfxUserConfigArgs) ToServiceIntegrationEndpointSignalfxUserConfigOutput() ServiceIntegrationEndpointSignalfxUserConfigOutput {
	return i.ToServiceIntegrationEndpointSignalfxUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationEndpointSignalfxUserConfigArgs) ToServiceIntegrationEndpointSignalfxUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationEndpointSignalfxUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointSignalfxUserConfigOutput)
}

func (i ServiceIntegrationEndpointSignalfxUserConfigArgs) ToServiceIntegrationEndpointSignalfxUserConfigPtrOutput() ServiceIntegrationEndpointSignalfxUserConfigPtrOutput {
	return i.ToServiceIntegrationEndpointSignalfxUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationEndpointSignalfxUserConfigArgs) ToServiceIntegrationEndpointSignalfxUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointSignalfxUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointSignalfxUserConfigOutput).ToServiceIntegrationEndpointSignalfxUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationEndpointSignalfxUserConfigPtrInput is an input type that accepts ServiceIntegrationEndpointSignalfxUserConfigArgs, ServiceIntegrationEndpointSignalfxUserConfigPtr and ServiceIntegrationEndpointSignalfxUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationEndpointSignalfxUserConfigPtrInput` via:
//
//          ServiceIntegrationEndpointSignalfxUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationEndpointSignalfxUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationEndpointSignalfxUserConfigPtrOutput() ServiceIntegrationEndpointSignalfxUserConfigPtrOutput
	ToServiceIntegrationEndpointSignalfxUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationEndpointSignalfxUserConfigPtrOutput
}

type serviceIntegrationEndpointSignalfxUserConfigPtrType ServiceIntegrationEndpointSignalfxUserConfigArgs

func ServiceIntegrationEndpointSignalfxUserConfigPtr(v *ServiceIntegrationEndpointSignalfxUserConfigArgs) ServiceIntegrationEndpointSignalfxUserConfigPtrInput {
	return (*serviceIntegrationEndpointSignalfxUserConfigPtrType)(v)
}

func (*serviceIntegrationEndpointSignalfxUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationEndpointSignalfxUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationEndpointSignalfxUserConfigPtrType) ToServiceIntegrationEndpointSignalfxUserConfigPtrOutput() ServiceIntegrationEndpointSignalfxUserConfigPtrOutput {
	return i.ToServiceIntegrationEndpointSignalfxUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationEndpointSignalfxUserConfigPtrType) ToServiceIntegrationEndpointSignalfxUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointSignalfxUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationEndpointSignalfxUserConfigPtrOutput)
}

type ServiceIntegrationEndpointSignalfxUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointSignalfxUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationEndpointSignalfxUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationEndpointSignalfxUserConfigOutput) ToServiceIntegrationEndpointSignalfxUserConfigOutput() ServiceIntegrationEndpointSignalfxUserConfigOutput {
	return o
}

func (o ServiceIntegrationEndpointSignalfxUserConfigOutput) ToServiceIntegrationEndpointSignalfxUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationEndpointSignalfxUserConfigOutput {
	return o
}

func (o ServiceIntegrationEndpointSignalfxUserConfigOutput) ToServiceIntegrationEndpointSignalfxUserConfigPtrOutput() ServiceIntegrationEndpointSignalfxUserConfigPtrOutput {
	return o.ToServiceIntegrationEndpointSignalfxUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationEndpointSignalfxUserConfigOutput) ToServiceIntegrationEndpointSignalfxUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointSignalfxUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointSignalfxUserConfig) *ServiceIntegrationEndpointSignalfxUserConfig {
		return &v
	}).(ServiceIntegrationEndpointSignalfxUserConfigPtrOutput)
}
func (o ServiceIntegrationEndpointSignalfxUserConfigOutput) EnabledMetrics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointSignalfxUserConfig) []string { return v.EnabledMetrics }).(pulumi.StringArrayOutput)
}

func (o ServiceIntegrationEndpointSignalfxUserConfigOutput) SignalfxApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointSignalfxUserConfig) *string { return v.SignalfxApiKey }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointSignalfxUserConfigOutput) SignalfxRealm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationEndpointSignalfxUserConfig) *string { return v.SignalfxRealm }).(pulumi.StringPtrOutput)
}

type ServiceIntegrationEndpointSignalfxUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationEndpointSignalfxUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationEndpointSignalfxUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationEndpointSignalfxUserConfigPtrOutput) ToServiceIntegrationEndpointSignalfxUserConfigPtrOutput() ServiceIntegrationEndpointSignalfxUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationEndpointSignalfxUserConfigPtrOutput) ToServiceIntegrationEndpointSignalfxUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationEndpointSignalfxUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationEndpointSignalfxUserConfigPtrOutput) Elem() ServiceIntegrationEndpointSignalfxUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointSignalfxUserConfig) ServiceIntegrationEndpointSignalfxUserConfig {
		return *v
	}).(ServiceIntegrationEndpointSignalfxUserConfigOutput)
}

func (o ServiceIntegrationEndpointSignalfxUserConfigPtrOutput) EnabledMetrics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointSignalfxUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.EnabledMetrics
	}).(pulumi.StringArrayOutput)
}

func (o ServiceIntegrationEndpointSignalfxUserConfigPtrOutput) SignalfxApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointSignalfxUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.SignalfxApiKey
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationEndpointSignalfxUserConfigPtrOutput) SignalfxRealm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationEndpointSignalfxUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.SignalfxRealm
	}).(pulumi.StringPtrOutput)
}

type ServiceIntegrationExternalAwsCloudwatchLogsUserConfig struct {
}

// ServiceIntegrationExternalAwsCloudwatchLogsUserConfigInput is an input type that accepts ServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs and ServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationExternalAwsCloudwatchLogsUserConfigInput` via:
//
//          ServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs{...}
type ServiceIntegrationExternalAwsCloudwatchLogsUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput() ServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput
	ToServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutputWithContext(context.Context) ServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput
}

type ServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs struct {
}

func (ServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationExternalAwsCloudwatchLogsUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs) ToServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput() ServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput {
	return i.ToServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs) ToServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput)
}

func (i ServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs) ToServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutput() ServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutput {
	return i.ToServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs) ToServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput).ToServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrInput is an input type that accepts ServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs, ServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtr and ServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrInput` via:
//
//          ServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutput() ServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutput
	ToServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutput
}

type serviceIntegrationExternalAwsCloudwatchLogsUserConfigPtrType ServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs

func ServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtr(v *ServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs) ServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrInput {
	return (*serviceIntegrationExternalAwsCloudwatchLogsUserConfigPtrType)(v)
}

func (*serviceIntegrationExternalAwsCloudwatchLogsUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationExternalAwsCloudwatchLogsUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationExternalAwsCloudwatchLogsUserConfigPtrType) ToServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutput() ServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutput {
	return i.ToServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationExternalAwsCloudwatchLogsUserConfigPtrType) ToServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutput)
}

type ServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationExternalAwsCloudwatchLogsUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput) ToServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput() ServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput {
	return o
}

func (o ServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput) ToServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput {
	return o
}

func (o ServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput) ToServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutput() ServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutput {
	return o.ToServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput) ToServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationExternalAwsCloudwatchLogsUserConfig) *ServiceIntegrationExternalAwsCloudwatchLogsUserConfig {
		return &v
	}).(ServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutput)
}

type ServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationExternalAwsCloudwatchLogsUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutput) ToServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutput() ServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutput) ToServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutput) Elem() ServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationExternalAwsCloudwatchLogsUserConfig) ServiceIntegrationExternalAwsCloudwatchLogsUserConfig {
		return *v
	}).(ServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput)
}

type ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig struct {
}

// ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigInput is an input type that accepts ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigArgs and ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigInput` via:
//
//          ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigArgs{...}
type ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput() ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput
	ToServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutputWithContext(context.Context) ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput
}

type ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigArgs struct {
}

func (ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigArgs) ToServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput() ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput {
	return i.ToServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigArgs) ToServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput)
}

func (i ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigArgs) ToServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutput() ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutput {
	return i.ToServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigArgs) ToServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput).ToServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrInput is an input type that accepts ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigArgs, ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtr and ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrInput` via:
//
//          ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutput() ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutput
	ToServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutput
}

type serviceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrType ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigArgs

func ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtr(v *ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigArgs) ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrInput {
	return (*serviceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrType)(v)
}

func (*serviceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrType) ToServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutput() ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutput {
	return i.ToServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrType) ToServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutput)
}

type ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput) ToServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput() ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput {
	return o
}

func (o ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput) ToServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput {
	return o
}

func (o ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput) ToServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutput() ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutput {
	return o.ToServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput) ToServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig) *ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig {
		return &v
	}).(ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutput)
}

type ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutput) ToServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutput() ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutput) ToServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutput) Elem() ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig) ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig {
		return *v
	}).(ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput)
}

type ServiceIntegrationExternalElasticsearchLogsUserConfig struct {
}

// ServiceIntegrationExternalElasticsearchLogsUserConfigInput is an input type that accepts ServiceIntegrationExternalElasticsearchLogsUserConfigArgs and ServiceIntegrationExternalElasticsearchLogsUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationExternalElasticsearchLogsUserConfigInput` via:
//
//          ServiceIntegrationExternalElasticsearchLogsUserConfigArgs{...}
type ServiceIntegrationExternalElasticsearchLogsUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationExternalElasticsearchLogsUserConfigOutput() ServiceIntegrationExternalElasticsearchLogsUserConfigOutput
	ToServiceIntegrationExternalElasticsearchLogsUserConfigOutputWithContext(context.Context) ServiceIntegrationExternalElasticsearchLogsUserConfigOutput
}

type ServiceIntegrationExternalElasticsearchLogsUserConfigArgs struct {
}

func (ServiceIntegrationExternalElasticsearchLogsUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationExternalElasticsearchLogsUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationExternalElasticsearchLogsUserConfigArgs) ToServiceIntegrationExternalElasticsearchLogsUserConfigOutput() ServiceIntegrationExternalElasticsearchLogsUserConfigOutput {
	return i.ToServiceIntegrationExternalElasticsearchLogsUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationExternalElasticsearchLogsUserConfigArgs) ToServiceIntegrationExternalElasticsearchLogsUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationExternalElasticsearchLogsUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationExternalElasticsearchLogsUserConfigOutput)
}

func (i ServiceIntegrationExternalElasticsearchLogsUserConfigArgs) ToServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutput() ServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutput {
	return i.ToServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationExternalElasticsearchLogsUserConfigArgs) ToServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationExternalElasticsearchLogsUserConfigOutput).ToServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationExternalElasticsearchLogsUserConfigPtrInput is an input type that accepts ServiceIntegrationExternalElasticsearchLogsUserConfigArgs, ServiceIntegrationExternalElasticsearchLogsUserConfigPtr and ServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationExternalElasticsearchLogsUserConfigPtrInput` via:
//
//          ServiceIntegrationExternalElasticsearchLogsUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationExternalElasticsearchLogsUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutput() ServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutput
	ToServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutput
}

type serviceIntegrationExternalElasticsearchLogsUserConfigPtrType ServiceIntegrationExternalElasticsearchLogsUserConfigArgs

func ServiceIntegrationExternalElasticsearchLogsUserConfigPtr(v *ServiceIntegrationExternalElasticsearchLogsUserConfigArgs) ServiceIntegrationExternalElasticsearchLogsUserConfigPtrInput {
	return (*serviceIntegrationExternalElasticsearchLogsUserConfigPtrType)(v)
}

func (*serviceIntegrationExternalElasticsearchLogsUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationExternalElasticsearchLogsUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationExternalElasticsearchLogsUserConfigPtrType) ToServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutput() ServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutput {
	return i.ToServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationExternalElasticsearchLogsUserConfigPtrType) ToServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutput)
}

type ServiceIntegrationExternalElasticsearchLogsUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationExternalElasticsearchLogsUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationExternalElasticsearchLogsUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationExternalElasticsearchLogsUserConfigOutput) ToServiceIntegrationExternalElasticsearchLogsUserConfigOutput() ServiceIntegrationExternalElasticsearchLogsUserConfigOutput {
	return o
}

func (o ServiceIntegrationExternalElasticsearchLogsUserConfigOutput) ToServiceIntegrationExternalElasticsearchLogsUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationExternalElasticsearchLogsUserConfigOutput {
	return o
}

func (o ServiceIntegrationExternalElasticsearchLogsUserConfigOutput) ToServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutput() ServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutput {
	return o.ToServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationExternalElasticsearchLogsUserConfigOutput) ToServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationExternalElasticsearchLogsUserConfig) *ServiceIntegrationExternalElasticsearchLogsUserConfig {
		return &v
	}).(ServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutput)
}

type ServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationExternalElasticsearchLogsUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutput) ToServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutput() ServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutput) ToServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutput) Elem() ServiceIntegrationExternalElasticsearchLogsUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationExternalElasticsearchLogsUserConfig) ServiceIntegrationExternalElasticsearchLogsUserConfig {
		return *v
	}).(ServiceIntegrationExternalElasticsearchLogsUserConfigOutput)
}

type ServiceIntegrationExternalGoogleCloudLoggingUserConfig struct {
}

// ServiceIntegrationExternalGoogleCloudLoggingUserConfigInput is an input type that accepts ServiceIntegrationExternalGoogleCloudLoggingUserConfigArgs and ServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationExternalGoogleCloudLoggingUserConfigInput` via:
//
//          ServiceIntegrationExternalGoogleCloudLoggingUserConfigArgs{...}
type ServiceIntegrationExternalGoogleCloudLoggingUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput() ServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput
	ToServiceIntegrationExternalGoogleCloudLoggingUserConfigOutputWithContext(context.Context) ServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput
}

type ServiceIntegrationExternalGoogleCloudLoggingUserConfigArgs struct {
}

func (ServiceIntegrationExternalGoogleCloudLoggingUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationExternalGoogleCloudLoggingUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationExternalGoogleCloudLoggingUserConfigArgs) ToServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput() ServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput {
	return i.ToServiceIntegrationExternalGoogleCloudLoggingUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationExternalGoogleCloudLoggingUserConfigArgs) ToServiceIntegrationExternalGoogleCloudLoggingUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput)
}

func (i ServiceIntegrationExternalGoogleCloudLoggingUserConfigArgs) ToServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutput() ServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutput {
	return i.ToServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationExternalGoogleCloudLoggingUserConfigArgs) ToServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput).ToServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrInput is an input type that accepts ServiceIntegrationExternalGoogleCloudLoggingUserConfigArgs, ServiceIntegrationExternalGoogleCloudLoggingUserConfigPtr and ServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrInput` via:
//
//          ServiceIntegrationExternalGoogleCloudLoggingUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutput() ServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutput
	ToServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutput
}

type serviceIntegrationExternalGoogleCloudLoggingUserConfigPtrType ServiceIntegrationExternalGoogleCloudLoggingUserConfigArgs

func ServiceIntegrationExternalGoogleCloudLoggingUserConfigPtr(v *ServiceIntegrationExternalGoogleCloudLoggingUserConfigArgs) ServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrInput {
	return (*serviceIntegrationExternalGoogleCloudLoggingUserConfigPtrType)(v)
}

func (*serviceIntegrationExternalGoogleCloudLoggingUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationExternalGoogleCloudLoggingUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationExternalGoogleCloudLoggingUserConfigPtrType) ToServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutput() ServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutput {
	return i.ToServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationExternalGoogleCloudLoggingUserConfigPtrType) ToServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutput)
}

type ServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationExternalGoogleCloudLoggingUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput) ToServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput() ServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput {
	return o
}

func (o ServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput) ToServiceIntegrationExternalGoogleCloudLoggingUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput {
	return o
}

func (o ServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput) ToServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutput() ServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutput {
	return o.ToServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput) ToServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationExternalGoogleCloudLoggingUserConfig) *ServiceIntegrationExternalGoogleCloudLoggingUserConfig {
		return &v
	}).(ServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutput)
}

type ServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationExternalGoogleCloudLoggingUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutput) ToServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutput() ServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutput) ToServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutput) Elem() ServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationExternalGoogleCloudLoggingUserConfig) ServiceIntegrationExternalGoogleCloudLoggingUserConfig {
		return *v
	}).(ServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput)
}

type ServiceIntegrationKafkaConnectUserConfig struct {
	KafkaConnect *ServiceIntegrationKafkaConnectUserConfigKafkaConnect `pulumi:"kafkaConnect"`
}

// ServiceIntegrationKafkaConnectUserConfigInput is an input type that accepts ServiceIntegrationKafkaConnectUserConfigArgs and ServiceIntegrationKafkaConnectUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationKafkaConnectUserConfigInput` via:
//
//          ServiceIntegrationKafkaConnectUserConfigArgs{...}
type ServiceIntegrationKafkaConnectUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationKafkaConnectUserConfigOutput() ServiceIntegrationKafkaConnectUserConfigOutput
	ToServiceIntegrationKafkaConnectUserConfigOutputWithContext(context.Context) ServiceIntegrationKafkaConnectUserConfigOutput
}

type ServiceIntegrationKafkaConnectUserConfigArgs struct {
	KafkaConnect ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrInput `pulumi:"kafkaConnect"`
}

func (ServiceIntegrationKafkaConnectUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationKafkaConnectUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationKafkaConnectUserConfigArgs) ToServiceIntegrationKafkaConnectUserConfigOutput() ServiceIntegrationKafkaConnectUserConfigOutput {
	return i.ToServiceIntegrationKafkaConnectUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationKafkaConnectUserConfigArgs) ToServiceIntegrationKafkaConnectUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationKafkaConnectUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationKafkaConnectUserConfigOutput)
}

func (i ServiceIntegrationKafkaConnectUserConfigArgs) ToServiceIntegrationKafkaConnectUserConfigPtrOutput() ServiceIntegrationKafkaConnectUserConfigPtrOutput {
	return i.ToServiceIntegrationKafkaConnectUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationKafkaConnectUserConfigArgs) ToServiceIntegrationKafkaConnectUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationKafkaConnectUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationKafkaConnectUserConfigOutput).ToServiceIntegrationKafkaConnectUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationKafkaConnectUserConfigPtrInput is an input type that accepts ServiceIntegrationKafkaConnectUserConfigArgs, ServiceIntegrationKafkaConnectUserConfigPtr and ServiceIntegrationKafkaConnectUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationKafkaConnectUserConfigPtrInput` via:
//
//          ServiceIntegrationKafkaConnectUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationKafkaConnectUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationKafkaConnectUserConfigPtrOutput() ServiceIntegrationKafkaConnectUserConfigPtrOutput
	ToServiceIntegrationKafkaConnectUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationKafkaConnectUserConfigPtrOutput
}

type serviceIntegrationKafkaConnectUserConfigPtrType ServiceIntegrationKafkaConnectUserConfigArgs

func ServiceIntegrationKafkaConnectUserConfigPtr(v *ServiceIntegrationKafkaConnectUserConfigArgs) ServiceIntegrationKafkaConnectUserConfigPtrInput {
	return (*serviceIntegrationKafkaConnectUserConfigPtrType)(v)
}

func (*serviceIntegrationKafkaConnectUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationKafkaConnectUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationKafkaConnectUserConfigPtrType) ToServiceIntegrationKafkaConnectUserConfigPtrOutput() ServiceIntegrationKafkaConnectUserConfigPtrOutput {
	return i.ToServiceIntegrationKafkaConnectUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationKafkaConnectUserConfigPtrType) ToServiceIntegrationKafkaConnectUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationKafkaConnectUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationKafkaConnectUserConfigPtrOutput)
}

type ServiceIntegrationKafkaConnectUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationKafkaConnectUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationKafkaConnectUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationKafkaConnectUserConfigOutput) ToServiceIntegrationKafkaConnectUserConfigOutput() ServiceIntegrationKafkaConnectUserConfigOutput {
	return o
}

func (o ServiceIntegrationKafkaConnectUserConfigOutput) ToServiceIntegrationKafkaConnectUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationKafkaConnectUserConfigOutput {
	return o
}

func (o ServiceIntegrationKafkaConnectUserConfigOutput) ToServiceIntegrationKafkaConnectUserConfigPtrOutput() ServiceIntegrationKafkaConnectUserConfigPtrOutput {
	return o.ToServiceIntegrationKafkaConnectUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationKafkaConnectUserConfigOutput) ToServiceIntegrationKafkaConnectUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationKafkaConnectUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationKafkaConnectUserConfig) *ServiceIntegrationKafkaConnectUserConfig {
		return &v
	}).(ServiceIntegrationKafkaConnectUserConfigPtrOutput)
}
func (o ServiceIntegrationKafkaConnectUserConfigOutput) KafkaConnect() ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationKafkaConnectUserConfig) *ServiceIntegrationKafkaConnectUserConfigKafkaConnect {
		return v.KafkaConnect
	}).(ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput)
}

type ServiceIntegrationKafkaConnectUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationKafkaConnectUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationKafkaConnectUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationKafkaConnectUserConfigPtrOutput) ToServiceIntegrationKafkaConnectUserConfigPtrOutput() ServiceIntegrationKafkaConnectUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationKafkaConnectUserConfigPtrOutput) ToServiceIntegrationKafkaConnectUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationKafkaConnectUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationKafkaConnectUserConfigPtrOutput) Elem() ServiceIntegrationKafkaConnectUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationKafkaConnectUserConfig) ServiceIntegrationKafkaConnectUserConfig { return *v }).(ServiceIntegrationKafkaConnectUserConfigOutput)
}

func (o ServiceIntegrationKafkaConnectUserConfigPtrOutput) KafkaConnect() ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationKafkaConnectUserConfig) *ServiceIntegrationKafkaConnectUserConfigKafkaConnect {
		if v == nil {
			return nil
		}
		return v.KafkaConnect
	}).(ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput)
}

type ServiceIntegrationKafkaConnectUserConfigKafkaConnect struct {
	ConfigStorageTopic *string `pulumi:"configStorageTopic"`
	GroupId            *string `pulumi:"groupId"`
	OffsetStorageTopic *string `pulumi:"offsetStorageTopic"`
	StatusStorageTopic *string `pulumi:"statusStorageTopic"`
}

// ServiceIntegrationKafkaConnectUserConfigKafkaConnectInput is an input type that accepts ServiceIntegrationKafkaConnectUserConfigKafkaConnectArgs and ServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput values.
// You can construct a concrete instance of `ServiceIntegrationKafkaConnectUserConfigKafkaConnectInput` via:
//
//          ServiceIntegrationKafkaConnectUserConfigKafkaConnectArgs{...}
type ServiceIntegrationKafkaConnectUserConfigKafkaConnectInput interface {
	pulumi.Input

	ToServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput() ServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput
	ToServiceIntegrationKafkaConnectUserConfigKafkaConnectOutputWithContext(context.Context) ServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput
}

type ServiceIntegrationKafkaConnectUserConfigKafkaConnectArgs struct {
	ConfigStorageTopic pulumi.StringPtrInput `pulumi:"configStorageTopic"`
	GroupId            pulumi.StringPtrInput `pulumi:"groupId"`
	OffsetStorageTopic pulumi.StringPtrInput `pulumi:"offsetStorageTopic"`
	StatusStorageTopic pulumi.StringPtrInput `pulumi:"statusStorageTopic"`
}

func (ServiceIntegrationKafkaConnectUserConfigKafkaConnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationKafkaConnectUserConfigKafkaConnect)(nil)).Elem()
}

func (i ServiceIntegrationKafkaConnectUserConfigKafkaConnectArgs) ToServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput() ServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput {
	return i.ToServiceIntegrationKafkaConnectUserConfigKafkaConnectOutputWithContext(context.Background())
}

func (i ServiceIntegrationKafkaConnectUserConfigKafkaConnectArgs) ToServiceIntegrationKafkaConnectUserConfigKafkaConnectOutputWithContext(ctx context.Context) ServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput)
}

func (i ServiceIntegrationKafkaConnectUserConfigKafkaConnectArgs) ToServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput() ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput {
	return i.ToServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationKafkaConnectUserConfigKafkaConnectArgs) ToServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx context.Context) ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput).ToServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx)
}

// ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrInput is an input type that accepts ServiceIntegrationKafkaConnectUserConfigKafkaConnectArgs, ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtr and ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrInput` via:
//
//          ServiceIntegrationKafkaConnectUserConfigKafkaConnectArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrInput interface {
	pulumi.Input

	ToServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput() ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput
	ToServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(context.Context) ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput
}

type serviceIntegrationKafkaConnectUserConfigKafkaConnectPtrType ServiceIntegrationKafkaConnectUserConfigKafkaConnectArgs

func ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtr(v *ServiceIntegrationKafkaConnectUserConfigKafkaConnectArgs) ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrInput {
	return (*serviceIntegrationKafkaConnectUserConfigKafkaConnectPtrType)(v)
}

func (*serviceIntegrationKafkaConnectUserConfigKafkaConnectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationKafkaConnectUserConfigKafkaConnect)(nil)).Elem()
}

func (i *serviceIntegrationKafkaConnectUserConfigKafkaConnectPtrType) ToServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput() ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput {
	return i.ToServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationKafkaConnectUserConfigKafkaConnectPtrType) ToServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx context.Context) ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput)
}

type ServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationKafkaConnectUserConfigKafkaConnect)(nil)).Elem()
}

func (o ServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput) ToServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput() ServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput {
	return o
}

func (o ServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput) ToServiceIntegrationKafkaConnectUserConfigKafkaConnectOutputWithContext(ctx context.Context) ServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput {
	return o
}

func (o ServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput) ToServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput() ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o.ToServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput) ToServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx context.Context) ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationKafkaConnectUserConfigKafkaConnect) *ServiceIntegrationKafkaConnectUserConfigKafkaConnect {
		return &v
	}).(ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput)
}
func (o ServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput) ConfigStorageTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationKafkaConnectUserConfigKafkaConnect) *string { return v.ConfigStorageTopic }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationKafkaConnectUserConfigKafkaConnect) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput) OffsetStorageTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationKafkaConnectUserConfigKafkaConnect) *string { return v.OffsetStorageTopic }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput) StatusStorageTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationKafkaConnectUserConfigKafkaConnect) *string { return v.StatusStorageTopic }).(pulumi.StringPtrOutput)
}

type ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationKafkaConnectUserConfigKafkaConnect)(nil)).Elem()
}

func (o ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput) ToServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput() ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o
}

func (o ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput) ToServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx context.Context) ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o
}

func (o ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput) Elem() ServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput {
	return o.ApplyT(func(v *ServiceIntegrationKafkaConnectUserConfigKafkaConnect) ServiceIntegrationKafkaConnectUserConfigKafkaConnect {
		return *v
	}).(ServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput)
}

func (o ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput) ConfigStorageTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConfigStorageTopic
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.GroupId
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput) OffsetStorageTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.OffsetStorageTopic
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput) StatusStorageTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.StatusStorageTopic
	}).(pulumi.StringPtrOutput)
}

type ServiceIntegrationKafkaLogsUserConfig struct {
	KafkaTopic *string `pulumi:"kafkaTopic"`
}

// ServiceIntegrationKafkaLogsUserConfigInput is an input type that accepts ServiceIntegrationKafkaLogsUserConfigArgs and ServiceIntegrationKafkaLogsUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationKafkaLogsUserConfigInput` via:
//
//          ServiceIntegrationKafkaLogsUserConfigArgs{...}
type ServiceIntegrationKafkaLogsUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationKafkaLogsUserConfigOutput() ServiceIntegrationKafkaLogsUserConfigOutput
	ToServiceIntegrationKafkaLogsUserConfigOutputWithContext(context.Context) ServiceIntegrationKafkaLogsUserConfigOutput
}

type ServiceIntegrationKafkaLogsUserConfigArgs struct {
	KafkaTopic pulumi.StringPtrInput `pulumi:"kafkaTopic"`
}

func (ServiceIntegrationKafkaLogsUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationKafkaLogsUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationKafkaLogsUserConfigArgs) ToServiceIntegrationKafkaLogsUserConfigOutput() ServiceIntegrationKafkaLogsUserConfigOutput {
	return i.ToServiceIntegrationKafkaLogsUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationKafkaLogsUserConfigArgs) ToServiceIntegrationKafkaLogsUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationKafkaLogsUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationKafkaLogsUserConfigOutput)
}

func (i ServiceIntegrationKafkaLogsUserConfigArgs) ToServiceIntegrationKafkaLogsUserConfigPtrOutput() ServiceIntegrationKafkaLogsUserConfigPtrOutput {
	return i.ToServiceIntegrationKafkaLogsUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationKafkaLogsUserConfigArgs) ToServiceIntegrationKafkaLogsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationKafkaLogsUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationKafkaLogsUserConfigOutput).ToServiceIntegrationKafkaLogsUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationKafkaLogsUserConfigPtrInput is an input type that accepts ServiceIntegrationKafkaLogsUserConfigArgs, ServiceIntegrationKafkaLogsUserConfigPtr and ServiceIntegrationKafkaLogsUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationKafkaLogsUserConfigPtrInput` via:
//
//          ServiceIntegrationKafkaLogsUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationKafkaLogsUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationKafkaLogsUserConfigPtrOutput() ServiceIntegrationKafkaLogsUserConfigPtrOutput
	ToServiceIntegrationKafkaLogsUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationKafkaLogsUserConfigPtrOutput
}

type serviceIntegrationKafkaLogsUserConfigPtrType ServiceIntegrationKafkaLogsUserConfigArgs

func ServiceIntegrationKafkaLogsUserConfigPtr(v *ServiceIntegrationKafkaLogsUserConfigArgs) ServiceIntegrationKafkaLogsUserConfigPtrInput {
	return (*serviceIntegrationKafkaLogsUserConfigPtrType)(v)
}

func (*serviceIntegrationKafkaLogsUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationKafkaLogsUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationKafkaLogsUserConfigPtrType) ToServiceIntegrationKafkaLogsUserConfigPtrOutput() ServiceIntegrationKafkaLogsUserConfigPtrOutput {
	return i.ToServiceIntegrationKafkaLogsUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationKafkaLogsUserConfigPtrType) ToServiceIntegrationKafkaLogsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationKafkaLogsUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationKafkaLogsUserConfigPtrOutput)
}

type ServiceIntegrationKafkaLogsUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationKafkaLogsUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationKafkaLogsUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationKafkaLogsUserConfigOutput) ToServiceIntegrationKafkaLogsUserConfigOutput() ServiceIntegrationKafkaLogsUserConfigOutput {
	return o
}

func (o ServiceIntegrationKafkaLogsUserConfigOutput) ToServiceIntegrationKafkaLogsUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationKafkaLogsUserConfigOutput {
	return o
}

func (o ServiceIntegrationKafkaLogsUserConfigOutput) ToServiceIntegrationKafkaLogsUserConfigPtrOutput() ServiceIntegrationKafkaLogsUserConfigPtrOutput {
	return o.ToServiceIntegrationKafkaLogsUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationKafkaLogsUserConfigOutput) ToServiceIntegrationKafkaLogsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationKafkaLogsUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationKafkaLogsUserConfig) *ServiceIntegrationKafkaLogsUserConfig {
		return &v
	}).(ServiceIntegrationKafkaLogsUserConfigPtrOutput)
}
func (o ServiceIntegrationKafkaLogsUserConfigOutput) KafkaTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationKafkaLogsUserConfig) *string { return v.KafkaTopic }).(pulumi.StringPtrOutput)
}

type ServiceIntegrationKafkaLogsUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationKafkaLogsUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationKafkaLogsUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationKafkaLogsUserConfigPtrOutput) ToServiceIntegrationKafkaLogsUserConfigPtrOutput() ServiceIntegrationKafkaLogsUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationKafkaLogsUserConfigPtrOutput) ToServiceIntegrationKafkaLogsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationKafkaLogsUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationKafkaLogsUserConfigPtrOutput) Elem() ServiceIntegrationKafkaLogsUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationKafkaLogsUserConfig) ServiceIntegrationKafkaLogsUserConfig { return *v }).(ServiceIntegrationKafkaLogsUserConfigOutput)
}

func (o ServiceIntegrationKafkaLogsUserConfigPtrOutput) KafkaTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationKafkaLogsUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.KafkaTopic
	}).(pulumi.StringPtrOutput)
}

type ServiceIntegrationKafkaMirrormakerUserConfig struct {
	ClusterAlias *string `pulumi:"clusterAlias"`
}

// ServiceIntegrationKafkaMirrormakerUserConfigInput is an input type that accepts ServiceIntegrationKafkaMirrormakerUserConfigArgs and ServiceIntegrationKafkaMirrormakerUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationKafkaMirrormakerUserConfigInput` via:
//
//          ServiceIntegrationKafkaMirrormakerUserConfigArgs{...}
type ServiceIntegrationKafkaMirrormakerUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationKafkaMirrormakerUserConfigOutput() ServiceIntegrationKafkaMirrormakerUserConfigOutput
	ToServiceIntegrationKafkaMirrormakerUserConfigOutputWithContext(context.Context) ServiceIntegrationKafkaMirrormakerUserConfigOutput
}

type ServiceIntegrationKafkaMirrormakerUserConfigArgs struct {
	ClusterAlias pulumi.StringPtrInput `pulumi:"clusterAlias"`
}

func (ServiceIntegrationKafkaMirrormakerUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationKafkaMirrormakerUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationKafkaMirrormakerUserConfigArgs) ToServiceIntegrationKafkaMirrormakerUserConfigOutput() ServiceIntegrationKafkaMirrormakerUserConfigOutput {
	return i.ToServiceIntegrationKafkaMirrormakerUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationKafkaMirrormakerUserConfigArgs) ToServiceIntegrationKafkaMirrormakerUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationKafkaMirrormakerUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationKafkaMirrormakerUserConfigOutput)
}

func (i ServiceIntegrationKafkaMirrormakerUserConfigArgs) ToServiceIntegrationKafkaMirrormakerUserConfigPtrOutput() ServiceIntegrationKafkaMirrormakerUserConfigPtrOutput {
	return i.ToServiceIntegrationKafkaMirrormakerUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationKafkaMirrormakerUserConfigArgs) ToServiceIntegrationKafkaMirrormakerUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationKafkaMirrormakerUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationKafkaMirrormakerUserConfigOutput).ToServiceIntegrationKafkaMirrormakerUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationKafkaMirrormakerUserConfigPtrInput is an input type that accepts ServiceIntegrationKafkaMirrormakerUserConfigArgs, ServiceIntegrationKafkaMirrormakerUserConfigPtr and ServiceIntegrationKafkaMirrormakerUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationKafkaMirrormakerUserConfigPtrInput` via:
//
//          ServiceIntegrationKafkaMirrormakerUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationKafkaMirrormakerUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationKafkaMirrormakerUserConfigPtrOutput() ServiceIntegrationKafkaMirrormakerUserConfigPtrOutput
	ToServiceIntegrationKafkaMirrormakerUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationKafkaMirrormakerUserConfigPtrOutput
}

type serviceIntegrationKafkaMirrormakerUserConfigPtrType ServiceIntegrationKafkaMirrormakerUserConfigArgs

func ServiceIntegrationKafkaMirrormakerUserConfigPtr(v *ServiceIntegrationKafkaMirrormakerUserConfigArgs) ServiceIntegrationKafkaMirrormakerUserConfigPtrInput {
	return (*serviceIntegrationKafkaMirrormakerUserConfigPtrType)(v)
}

func (*serviceIntegrationKafkaMirrormakerUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationKafkaMirrormakerUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationKafkaMirrormakerUserConfigPtrType) ToServiceIntegrationKafkaMirrormakerUserConfigPtrOutput() ServiceIntegrationKafkaMirrormakerUserConfigPtrOutput {
	return i.ToServiceIntegrationKafkaMirrormakerUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationKafkaMirrormakerUserConfigPtrType) ToServiceIntegrationKafkaMirrormakerUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationKafkaMirrormakerUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationKafkaMirrormakerUserConfigPtrOutput)
}

type ServiceIntegrationKafkaMirrormakerUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationKafkaMirrormakerUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationKafkaMirrormakerUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationKafkaMirrormakerUserConfigOutput) ToServiceIntegrationKafkaMirrormakerUserConfigOutput() ServiceIntegrationKafkaMirrormakerUserConfigOutput {
	return o
}

func (o ServiceIntegrationKafkaMirrormakerUserConfigOutput) ToServiceIntegrationKafkaMirrormakerUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationKafkaMirrormakerUserConfigOutput {
	return o
}

func (o ServiceIntegrationKafkaMirrormakerUserConfigOutput) ToServiceIntegrationKafkaMirrormakerUserConfigPtrOutput() ServiceIntegrationKafkaMirrormakerUserConfigPtrOutput {
	return o.ToServiceIntegrationKafkaMirrormakerUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationKafkaMirrormakerUserConfigOutput) ToServiceIntegrationKafkaMirrormakerUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationKafkaMirrormakerUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationKafkaMirrormakerUserConfig) *ServiceIntegrationKafkaMirrormakerUserConfig {
		return &v
	}).(ServiceIntegrationKafkaMirrormakerUserConfigPtrOutput)
}
func (o ServiceIntegrationKafkaMirrormakerUserConfigOutput) ClusterAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationKafkaMirrormakerUserConfig) *string { return v.ClusterAlias }).(pulumi.StringPtrOutput)
}

type ServiceIntegrationKafkaMirrormakerUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationKafkaMirrormakerUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationKafkaMirrormakerUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationKafkaMirrormakerUserConfigPtrOutput) ToServiceIntegrationKafkaMirrormakerUserConfigPtrOutput() ServiceIntegrationKafkaMirrormakerUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationKafkaMirrormakerUserConfigPtrOutput) ToServiceIntegrationKafkaMirrormakerUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationKafkaMirrormakerUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationKafkaMirrormakerUserConfigPtrOutput) Elem() ServiceIntegrationKafkaMirrormakerUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationKafkaMirrormakerUserConfig) ServiceIntegrationKafkaMirrormakerUserConfig {
		return *v
	}).(ServiceIntegrationKafkaMirrormakerUserConfigOutput)
}

func (o ServiceIntegrationKafkaMirrormakerUserConfigPtrOutput) ClusterAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationKafkaMirrormakerUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ClusterAlias
	}).(pulumi.StringPtrOutput)
}

type ServiceIntegrationLogsUserConfig struct {
	ElasticsearchIndexDaysMax *string `pulumi:"elasticsearchIndexDaysMax"`
	ElasticsearchIndexPrefix  *string `pulumi:"elasticsearchIndexPrefix"`
}

// ServiceIntegrationLogsUserConfigInput is an input type that accepts ServiceIntegrationLogsUserConfigArgs and ServiceIntegrationLogsUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationLogsUserConfigInput` via:
//
//          ServiceIntegrationLogsUserConfigArgs{...}
type ServiceIntegrationLogsUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationLogsUserConfigOutput() ServiceIntegrationLogsUserConfigOutput
	ToServiceIntegrationLogsUserConfigOutputWithContext(context.Context) ServiceIntegrationLogsUserConfigOutput
}

type ServiceIntegrationLogsUserConfigArgs struct {
	ElasticsearchIndexDaysMax pulumi.StringPtrInput `pulumi:"elasticsearchIndexDaysMax"`
	ElasticsearchIndexPrefix  pulumi.StringPtrInput `pulumi:"elasticsearchIndexPrefix"`
}

func (ServiceIntegrationLogsUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationLogsUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationLogsUserConfigArgs) ToServiceIntegrationLogsUserConfigOutput() ServiceIntegrationLogsUserConfigOutput {
	return i.ToServiceIntegrationLogsUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationLogsUserConfigArgs) ToServiceIntegrationLogsUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationLogsUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationLogsUserConfigOutput)
}

func (i ServiceIntegrationLogsUserConfigArgs) ToServiceIntegrationLogsUserConfigPtrOutput() ServiceIntegrationLogsUserConfigPtrOutput {
	return i.ToServiceIntegrationLogsUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationLogsUserConfigArgs) ToServiceIntegrationLogsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationLogsUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationLogsUserConfigOutput).ToServiceIntegrationLogsUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationLogsUserConfigPtrInput is an input type that accepts ServiceIntegrationLogsUserConfigArgs, ServiceIntegrationLogsUserConfigPtr and ServiceIntegrationLogsUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationLogsUserConfigPtrInput` via:
//
//          ServiceIntegrationLogsUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationLogsUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationLogsUserConfigPtrOutput() ServiceIntegrationLogsUserConfigPtrOutput
	ToServiceIntegrationLogsUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationLogsUserConfigPtrOutput
}

type serviceIntegrationLogsUserConfigPtrType ServiceIntegrationLogsUserConfigArgs

func ServiceIntegrationLogsUserConfigPtr(v *ServiceIntegrationLogsUserConfigArgs) ServiceIntegrationLogsUserConfigPtrInput {
	return (*serviceIntegrationLogsUserConfigPtrType)(v)
}

func (*serviceIntegrationLogsUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationLogsUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationLogsUserConfigPtrType) ToServiceIntegrationLogsUserConfigPtrOutput() ServiceIntegrationLogsUserConfigPtrOutput {
	return i.ToServiceIntegrationLogsUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationLogsUserConfigPtrType) ToServiceIntegrationLogsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationLogsUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationLogsUserConfigPtrOutput)
}

type ServiceIntegrationLogsUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationLogsUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationLogsUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationLogsUserConfigOutput) ToServiceIntegrationLogsUserConfigOutput() ServiceIntegrationLogsUserConfigOutput {
	return o
}

func (o ServiceIntegrationLogsUserConfigOutput) ToServiceIntegrationLogsUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationLogsUserConfigOutput {
	return o
}

func (o ServiceIntegrationLogsUserConfigOutput) ToServiceIntegrationLogsUserConfigPtrOutput() ServiceIntegrationLogsUserConfigPtrOutput {
	return o.ToServiceIntegrationLogsUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationLogsUserConfigOutput) ToServiceIntegrationLogsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationLogsUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationLogsUserConfig) *ServiceIntegrationLogsUserConfig {
		return &v
	}).(ServiceIntegrationLogsUserConfigPtrOutput)
}
func (o ServiceIntegrationLogsUserConfigOutput) ElasticsearchIndexDaysMax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationLogsUserConfig) *string { return v.ElasticsearchIndexDaysMax }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationLogsUserConfigOutput) ElasticsearchIndexPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationLogsUserConfig) *string { return v.ElasticsearchIndexPrefix }).(pulumi.StringPtrOutput)
}

type ServiceIntegrationLogsUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationLogsUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationLogsUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationLogsUserConfigPtrOutput) ToServiceIntegrationLogsUserConfigPtrOutput() ServiceIntegrationLogsUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationLogsUserConfigPtrOutput) ToServiceIntegrationLogsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationLogsUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationLogsUserConfigPtrOutput) Elem() ServiceIntegrationLogsUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationLogsUserConfig) ServiceIntegrationLogsUserConfig { return *v }).(ServiceIntegrationLogsUserConfigOutput)
}

func (o ServiceIntegrationLogsUserConfigPtrOutput) ElasticsearchIndexDaysMax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationLogsUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ElasticsearchIndexDaysMax
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationLogsUserConfigPtrOutput) ElasticsearchIndexPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationLogsUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ElasticsearchIndexPrefix
	}).(pulumi.StringPtrOutput)
}

type ServiceIntegrationM3aggregatorUserConfig struct {
}

// ServiceIntegrationM3aggregatorUserConfigInput is an input type that accepts ServiceIntegrationM3aggregatorUserConfigArgs and ServiceIntegrationM3aggregatorUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationM3aggregatorUserConfigInput` via:
//
//          ServiceIntegrationM3aggregatorUserConfigArgs{...}
type ServiceIntegrationM3aggregatorUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationM3aggregatorUserConfigOutput() ServiceIntegrationM3aggregatorUserConfigOutput
	ToServiceIntegrationM3aggregatorUserConfigOutputWithContext(context.Context) ServiceIntegrationM3aggregatorUserConfigOutput
}

type ServiceIntegrationM3aggregatorUserConfigArgs struct {
}

func (ServiceIntegrationM3aggregatorUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationM3aggregatorUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationM3aggregatorUserConfigArgs) ToServiceIntegrationM3aggregatorUserConfigOutput() ServiceIntegrationM3aggregatorUserConfigOutput {
	return i.ToServiceIntegrationM3aggregatorUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationM3aggregatorUserConfigArgs) ToServiceIntegrationM3aggregatorUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationM3aggregatorUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationM3aggregatorUserConfigOutput)
}

func (i ServiceIntegrationM3aggregatorUserConfigArgs) ToServiceIntegrationM3aggregatorUserConfigPtrOutput() ServiceIntegrationM3aggregatorUserConfigPtrOutput {
	return i.ToServiceIntegrationM3aggregatorUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationM3aggregatorUserConfigArgs) ToServiceIntegrationM3aggregatorUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationM3aggregatorUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationM3aggregatorUserConfigOutput).ToServiceIntegrationM3aggregatorUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationM3aggregatorUserConfigPtrInput is an input type that accepts ServiceIntegrationM3aggregatorUserConfigArgs, ServiceIntegrationM3aggregatorUserConfigPtr and ServiceIntegrationM3aggregatorUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationM3aggregatorUserConfigPtrInput` via:
//
//          ServiceIntegrationM3aggregatorUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationM3aggregatorUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationM3aggregatorUserConfigPtrOutput() ServiceIntegrationM3aggregatorUserConfigPtrOutput
	ToServiceIntegrationM3aggregatorUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationM3aggregatorUserConfigPtrOutput
}

type serviceIntegrationM3aggregatorUserConfigPtrType ServiceIntegrationM3aggregatorUserConfigArgs

func ServiceIntegrationM3aggregatorUserConfigPtr(v *ServiceIntegrationM3aggregatorUserConfigArgs) ServiceIntegrationM3aggregatorUserConfigPtrInput {
	return (*serviceIntegrationM3aggregatorUserConfigPtrType)(v)
}

func (*serviceIntegrationM3aggregatorUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationM3aggregatorUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationM3aggregatorUserConfigPtrType) ToServiceIntegrationM3aggregatorUserConfigPtrOutput() ServiceIntegrationM3aggregatorUserConfigPtrOutput {
	return i.ToServiceIntegrationM3aggregatorUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationM3aggregatorUserConfigPtrType) ToServiceIntegrationM3aggregatorUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationM3aggregatorUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationM3aggregatorUserConfigPtrOutput)
}

type ServiceIntegrationM3aggregatorUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationM3aggregatorUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationM3aggregatorUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationM3aggregatorUserConfigOutput) ToServiceIntegrationM3aggregatorUserConfigOutput() ServiceIntegrationM3aggregatorUserConfigOutput {
	return o
}

func (o ServiceIntegrationM3aggregatorUserConfigOutput) ToServiceIntegrationM3aggregatorUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationM3aggregatorUserConfigOutput {
	return o
}

func (o ServiceIntegrationM3aggregatorUserConfigOutput) ToServiceIntegrationM3aggregatorUserConfigPtrOutput() ServiceIntegrationM3aggregatorUserConfigPtrOutput {
	return o.ToServiceIntegrationM3aggregatorUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationM3aggregatorUserConfigOutput) ToServiceIntegrationM3aggregatorUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationM3aggregatorUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationM3aggregatorUserConfig) *ServiceIntegrationM3aggregatorUserConfig {
		return &v
	}).(ServiceIntegrationM3aggregatorUserConfigPtrOutput)
}

type ServiceIntegrationM3aggregatorUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationM3aggregatorUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationM3aggregatorUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationM3aggregatorUserConfigPtrOutput) ToServiceIntegrationM3aggregatorUserConfigPtrOutput() ServiceIntegrationM3aggregatorUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationM3aggregatorUserConfigPtrOutput) ToServiceIntegrationM3aggregatorUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationM3aggregatorUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationM3aggregatorUserConfigPtrOutput) Elem() ServiceIntegrationM3aggregatorUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationM3aggregatorUserConfig) ServiceIntegrationM3aggregatorUserConfig { return *v }).(ServiceIntegrationM3aggregatorUserConfigOutput)
}

type ServiceIntegrationM3coordinatorUserConfig struct {
}

// ServiceIntegrationM3coordinatorUserConfigInput is an input type that accepts ServiceIntegrationM3coordinatorUserConfigArgs and ServiceIntegrationM3coordinatorUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationM3coordinatorUserConfigInput` via:
//
//          ServiceIntegrationM3coordinatorUserConfigArgs{...}
type ServiceIntegrationM3coordinatorUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationM3coordinatorUserConfigOutput() ServiceIntegrationM3coordinatorUserConfigOutput
	ToServiceIntegrationM3coordinatorUserConfigOutputWithContext(context.Context) ServiceIntegrationM3coordinatorUserConfigOutput
}

type ServiceIntegrationM3coordinatorUserConfigArgs struct {
}

func (ServiceIntegrationM3coordinatorUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationM3coordinatorUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationM3coordinatorUserConfigArgs) ToServiceIntegrationM3coordinatorUserConfigOutput() ServiceIntegrationM3coordinatorUserConfigOutput {
	return i.ToServiceIntegrationM3coordinatorUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationM3coordinatorUserConfigArgs) ToServiceIntegrationM3coordinatorUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationM3coordinatorUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationM3coordinatorUserConfigOutput)
}

func (i ServiceIntegrationM3coordinatorUserConfigArgs) ToServiceIntegrationM3coordinatorUserConfigPtrOutput() ServiceIntegrationM3coordinatorUserConfigPtrOutput {
	return i.ToServiceIntegrationM3coordinatorUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationM3coordinatorUserConfigArgs) ToServiceIntegrationM3coordinatorUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationM3coordinatorUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationM3coordinatorUserConfigOutput).ToServiceIntegrationM3coordinatorUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationM3coordinatorUserConfigPtrInput is an input type that accepts ServiceIntegrationM3coordinatorUserConfigArgs, ServiceIntegrationM3coordinatorUserConfigPtr and ServiceIntegrationM3coordinatorUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationM3coordinatorUserConfigPtrInput` via:
//
//          ServiceIntegrationM3coordinatorUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationM3coordinatorUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationM3coordinatorUserConfigPtrOutput() ServiceIntegrationM3coordinatorUserConfigPtrOutput
	ToServiceIntegrationM3coordinatorUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationM3coordinatorUserConfigPtrOutput
}

type serviceIntegrationM3coordinatorUserConfigPtrType ServiceIntegrationM3coordinatorUserConfigArgs

func ServiceIntegrationM3coordinatorUserConfigPtr(v *ServiceIntegrationM3coordinatorUserConfigArgs) ServiceIntegrationM3coordinatorUserConfigPtrInput {
	return (*serviceIntegrationM3coordinatorUserConfigPtrType)(v)
}

func (*serviceIntegrationM3coordinatorUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationM3coordinatorUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationM3coordinatorUserConfigPtrType) ToServiceIntegrationM3coordinatorUserConfigPtrOutput() ServiceIntegrationM3coordinatorUserConfigPtrOutput {
	return i.ToServiceIntegrationM3coordinatorUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationM3coordinatorUserConfigPtrType) ToServiceIntegrationM3coordinatorUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationM3coordinatorUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationM3coordinatorUserConfigPtrOutput)
}

type ServiceIntegrationM3coordinatorUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationM3coordinatorUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationM3coordinatorUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationM3coordinatorUserConfigOutput) ToServiceIntegrationM3coordinatorUserConfigOutput() ServiceIntegrationM3coordinatorUserConfigOutput {
	return o
}

func (o ServiceIntegrationM3coordinatorUserConfigOutput) ToServiceIntegrationM3coordinatorUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationM3coordinatorUserConfigOutput {
	return o
}

func (o ServiceIntegrationM3coordinatorUserConfigOutput) ToServiceIntegrationM3coordinatorUserConfigPtrOutput() ServiceIntegrationM3coordinatorUserConfigPtrOutput {
	return o.ToServiceIntegrationM3coordinatorUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationM3coordinatorUserConfigOutput) ToServiceIntegrationM3coordinatorUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationM3coordinatorUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationM3coordinatorUserConfig) *ServiceIntegrationM3coordinatorUserConfig {
		return &v
	}).(ServiceIntegrationM3coordinatorUserConfigPtrOutput)
}

type ServiceIntegrationM3coordinatorUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationM3coordinatorUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationM3coordinatorUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationM3coordinatorUserConfigPtrOutput) ToServiceIntegrationM3coordinatorUserConfigPtrOutput() ServiceIntegrationM3coordinatorUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationM3coordinatorUserConfigPtrOutput) ToServiceIntegrationM3coordinatorUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationM3coordinatorUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationM3coordinatorUserConfigPtrOutput) Elem() ServiceIntegrationM3coordinatorUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationM3coordinatorUserConfig) ServiceIntegrationM3coordinatorUserConfig {
		return *v
	}).(ServiceIntegrationM3coordinatorUserConfigOutput)
}

type ServiceIntegrationMetricsUserConfig struct {
	Database      *string                                         `pulumi:"database"`
	RetentionDays *string                                         `pulumi:"retentionDays"`
	RoUsername    *string                                         `pulumi:"roUsername"`
	SourceMysql   *ServiceIntegrationMetricsUserConfigSourceMysql `pulumi:"sourceMysql"`
	Username      *string                                         `pulumi:"username"`
}

// ServiceIntegrationMetricsUserConfigInput is an input type that accepts ServiceIntegrationMetricsUserConfigArgs and ServiceIntegrationMetricsUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationMetricsUserConfigInput` via:
//
//          ServiceIntegrationMetricsUserConfigArgs{...}
type ServiceIntegrationMetricsUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationMetricsUserConfigOutput() ServiceIntegrationMetricsUserConfigOutput
	ToServiceIntegrationMetricsUserConfigOutputWithContext(context.Context) ServiceIntegrationMetricsUserConfigOutput
}

type ServiceIntegrationMetricsUserConfigArgs struct {
	Database      pulumi.StringPtrInput                                  `pulumi:"database"`
	RetentionDays pulumi.StringPtrInput                                  `pulumi:"retentionDays"`
	RoUsername    pulumi.StringPtrInput                                  `pulumi:"roUsername"`
	SourceMysql   ServiceIntegrationMetricsUserConfigSourceMysqlPtrInput `pulumi:"sourceMysql"`
	Username      pulumi.StringPtrInput                                  `pulumi:"username"`
}

func (ServiceIntegrationMetricsUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationMetricsUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationMetricsUserConfigArgs) ToServiceIntegrationMetricsUserConfigOutput() ServiceIntegrationMetricsUserConfigOutput {
	return i.ToServiceIntegrationMetricsUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationMetricsUserConfigArgs) ToServiceIntegrationMetricsUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationMetricsUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationMetricsUserConfigOutput)
}

func (i ServiceIntegrationMetricsUserConfigArgs) ToServiceIntegrationMetricsUserConfigPtrOutput() ServiceIntegrationMetricsUserConfigPtrOutput {
	return i.ToServiceIntegrationMetricsUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationMetricsUserConfigArgs) ToServiceIntegrationMetricsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationMetricsUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationMetricsUserConfigOutput).ToServiceIntegrationMetricsUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationMetricsUserConfigPtrInput is an input type that accepts ServiceIntegrationMetricsUserConfigArgs, ServiceIntegrationMetricsUserConfigPtr and ServiceIntegrationMetricsUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationMetricsUserConfigPtrInput` via:
//
//          ServiceIntegrationMetricsUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationMetricsUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationMetricsUserConfigPtrOutput() ServiceIntegrationMetricsUserConfigPtrOutput
	ToServiceIntegrationMetricsUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationMetricsUserConfigPtrOutput
}

type serviceIntegrationMetricsUserConfigPtrType ServiceIntegrationMetricsUserConfigArgs

func ServiceIntegrationMetricsUserConfigPtr(v *ServiceIntegrationMetricsUserConfigArgs) ServiceIntegrationMetricsUserConfigPtrInput {
	return (*serviceIntegrationMetricsUserConfigPtrType)(v)
}

func (*serviceIntegrationMetricsUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationMetricsUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationMetricsUserConfigPtrType) ToServiceIntegrationMetricsUserConfigPtrOutput() ServiceIntegrationMetricsUserConfigPtrOutput {
	return i.ToServiceIntegrationMetricsUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationMetricsUserConfigPtrType) ToServiceIntegrationMetricsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationMetricsUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationMetricsUserConfigPtrOutput)
}

type ServiceIntegrationMetricsUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationMetricsUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationMetricsUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationMetricsUserConfigOutput) ToServiceIntegrationMetricsUserConfigOutput() ServiceIntegrationMetricsUserConfigOutput {
	return o
}

func (o ServiceIntegrationMetricsUserConfigOutput) ToServiceIntegrationMetricsUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationMetricsUserConfigOutput {
	return o
}

func (o ServiceIntegrationMetricsUserConfigOutput) ToServiceIntegrationMetricsUserConfigPtrOutput() ServiceIntegrationMetricsUserConfigPtrOutput {
	return o.ToServiceIntegrationMetricsUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationMetricsUserConfigOutput) ToServiceIntegrationMetricsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationMetricsUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationMetricsUserConfig) *ServiceIntegrationMetricsUserConfig {
		return &v
	}).(ServiceIntegrationMetricsUserConfigPtrOutput)
}
func (o ServiceIntegrationMetricsUserConfigOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationMetricsUserConfig) *string { return v.Database }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigOutput) RetentionDays() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationMetricsUserConfig) *string { return v.RetentionDays }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigOutput) RoUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationMetricsUserConfig) *string { return v.RoUsername }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigOutput) SourceMysql() ServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationMetricsUserConfig) *ServiceIntegrationMetricsUserConfigSourceMysql {
		return v.SourceMysql
	}).(ServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationMetricsUserConfig) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ServiceIntegrationMetricsUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationMetricsUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationMetricsUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationMetricsUserConfigPtrOutput) ToServiceIntegrationMetricsUserConfigPtrOutput() ServiceIntegrationMetricsUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationMetricsUserConfigPtrOutput) ToServiceIntegrationMetricsUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationMetricsUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationMetricsUserConfigPtrOutput) Elem() ServiceIntegrationMetricsUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationMetricsUserConfig) ServiceIntegrationMetricsUserConfig { return *v }).(ServiceIntegrationMetricsUserConfigOutput)
}

func (o ServiceIntegrationMetricsUserConfigPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationMetricsUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.Database
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigPtrOutput) RetentionDays() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationMetricsUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RetentionDays
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigPtrOutput) RoUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationMetricsUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RoUsername
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigPtrOutput) SourceMysql() ServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationMetricsUserConfig) *ServiceIntegrationMetricsUserConfigSourceMysql {
		if v == nil {
			return nil
		}
		return v.SourceMysql
	}).(ServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationMetricsUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ServiceIntegrationMetricsUserConfigSourceMysql struct {
	Telegraf *ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf `pulumi:"telegraf"`
}

// ServiceIntegrationMetricsUserConfigSourceMysqlInput is an input type that accepts ServiceIntegrationMetricsUserConfigSourceMysqlArgs and ServiceIntegrationMetricsUserConfigSourceMysqlOutput values.
// You can construct a concrete instance of `ServiceIntegrationMetricsUserConfigSourceMysqlInput` via:
//
//          ServiceIntegrationMetricsUserConfigSourceMysqlArgs{...}
type ServiceIntegrationMetricsUserConfigSourceMysqlInput interface {
	pulumi.Input

	ToServiceIntegrationMetricsUserConfigSourceMysqlOutput() ServiceIntegrationMetricsUserConfigSourceMysqlOutput
	ToServiceIntegrationMetricsUserConfigSourceMysqlOutputWithContext(context.Context) ServiceIntegrationMetricsUserConfigSourceMysqlOutput
}

type ServiceIntegrationMetricsUserConfigSourceMysqlArgs struct {
	Telegraf ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrInput `pulumi:"telegraf"`
}

func (ServiceIntegrationMetricsUserConfigSourceMysqlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationMetricsUserConfigSourceMysql)(nil)).Elem()
}

func (i ServiceIntegrationMetricsUserConfigSourceMysqlArgs) ToServiceIntegrationMetricsUserConfigSourceMysqlOutput() ServiceIntegrationMetricsUserConfigSourceMysqlOutput {
	return i.ToServiceIntegrationMetricsUserConfigSourceMysqlOutputWithContext(context.Background())
}

func (i ServiceIntegrationMetricsUserConfigSourceMysqlArgs) ToServiceIntegrationMetricsUserConfigSourceMysqlOutputWithContext(ctx context.Context) ServiceIntegrationMetricsUserConfigSourceMysqlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationMetricsUserConfigSourceMysqlOutput)
}

func (i ServiceIntegrationMetricsUserConfigSourceMysqlArgs) ToServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput() ServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput {
	return i.ToServiceIntegrationMetricsUserConfigSourceMysqlPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationMetricsUserConfigSourceMysqlArgs) ToServiceIntegrationMetricsUserConfigSourceMysqlPtrOutputWithContext(ctx context.Context) ServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationMetricsUserConfigSourceMysqlOutput).ToServiceIntegrationMetricsUserConfigSourceMysqlPtrOutputWithContext(ctx)
}

// ServiceIntegrationMetricsUserConfigSourceMysqlPtrInput is an input type that accepts ServiceIntegrationMetricsUserConfigSourceMysqlArgs, ServiceIntegrationMetricsUserConfigSourceMysqlPtr and ServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationMetricsUserConfigSourceMysqlPtrInput` via:
//
//          ServiceIntegrationMetricsUserConfigSourceMysqlArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationMetricsUserConfigSourceMysqlPtrInput interface {
	pulumi.Input

	ToServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput() ServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput
	ToServiceIntegrationMetricsUserConfigSourceMysqlPtrOutputWithContext(context.Context) ServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput
}

type serviceIntegrationMetricsUserConfigSourceMysqlPtrType ServiceIntegrationMetricsUserConfigSourceMysqlArgs

func ServiceIntegrationMetricsUserConfigSourceMysqlPtr(v *ServiceIntegrationMetricsUserConfigSourceMysqlArgs) ServiceIntegrationMetricsUserConfigSourceMysqlPtrInput {
	return (*serviceIntegrationMetricsUserConfigSourceMysqlPtrType)(v)
}

func (*serviceIntegrationMetricsUserConfigSourceMysqlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationMetricsUserConfigSourceMysql)(nil)).Elem()
}

func (i *serviceIntegrationMetricsUserConfigSourceMysqlPtrType) ToServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput() ServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput {
	return i.ToServiceIntegrationMetricsUserConfigSourceMysqlPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationMetricsUserConfigSourceMysqlPtrType) ToServiceIntegrationMetricsUserConfigSourceMysqlPtrOutputWithContext(ctx context.Context) ServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput)
}

type ServiceIntegrationMetricsUserConfigSourceMysqlOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationMetricsUserConfigSourceMysqlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationMetricsUserConfigSourceMysql)(nil)).Elem()
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlOutput) ToServiceIntegrationMetricsUserConfigSourceMysqlOutput() ServiceIntegrationMetricsUserConfigSourceMysqlOutput {
	return o
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlOutput) ToServiceIntegrationMetricsUserConfigSourceMysqlOutputWithContext(ctx context.Context) ServiceIntegrationMetricsUserConfigSourceMysqlOutput {
	return o
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlOutput) ToServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput() ServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput {
	return o.ToServiceIntegrationMetricsUserConfigSourceMysqlPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlOutput) ToServiceIntegrationMetricsUserConfigSourceMysqlPtrOutputWithContext(ctx context.Context) ServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationMetricsUserConfigSourceMysql) *ServiceIntegrationMetricsUserConfigSourceMysql {
		return &v
	}).(ServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput)
}
func (o ServiceIntegrationMetricsUserConfigSourceMysqlOutput) Telegraf() ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationMetricsUserConfigSourceMysql) *ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf {
		return v.Telegraf
	}).(ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput)
}

type ServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationMetricsUserConfigSourceMysql)(nil)).Elem()
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput) ToServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput() ServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput {
	return o
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput) ToServiceIntegrationMetricsUserConfigSourceMysqlPtrOutputWithContext(ctx context.Context) ServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput {
	return o
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput) Elem() ServiceIntegrationMetricsUserConfigSourceMysqlOutput {
	return o.ApplyT(func(v *ServiceIntegrationMetricsUserConfigSourceMysql) ServiceIntegrationMetricsUserConfigSourceMysql {
		return *v
	}).(ServiceIntegrationMetricsUserConfigSourceMysqlOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput) Telegraf() ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationMetricsUserConfigSourceMysql) *ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf {
		if v == nil {
			return nil
		}
		return v.Telegraf
	}).(ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput)
}

type ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf struct {
	GatherEventWaits                    *string `pulumi:"gatherEventWaits"`
	GatherFileEventsStats               *string `pulumi:"gatherFileEventsStats"`
	GatherIndexIoWaits                  *string `pulumi:"gatherIndexIoWaits"`
	GatherInfoSchemaAutoInc             *string `pulumi:"gatherInfoSchemaAutoInc"`
	GatherInnodbMetrics                 *string `pulumi:"gatherInnodbMetrics"`
	GatherPerfEventsStatements          *string `pulumi:"gatherPerfEventsStatements"`
	GatherProcessList                   *string `pulumi:"gatherProcessList"`
	GatherSlaveStatus                   *string `pulumi:"gatherSlaveStatus"`
	GatherTableIoWaits                  *string `pulumi:"gatherTableIoWaits"`
	GatherTableLockWaits                *string `pulumi:"gatherTableLockWaits"`
	GatherTableSchema                   *string `pulumi:"gatherTableSchema"`
	PerfEventsStatementsDigestTextLimit *string `pulumi:"perfEventsStatementsDigestTextLimit"`
	PerfEventsStatementsLimit           *string `pulumi:"perfEventsStatementsLimit"`
	PerfEventsStatementsTimeLimit       *string `pulumi:"perfEventsStatementsTimeLimit"`
}

// ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafInput is an input type that accepts ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafArgs and ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput values.
// You can construct a concrete instance of `ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafInput` via:
//
//          ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafArgs{...}
type ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafInput interface {
	pulumi.Input

	ToServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput() ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput
	ToServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutputWithContext(context.Context) ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput
}

type ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafArgs struct {
	GatherEventWaits                    pulumi.StringPtrInput `pulumi:"gatherEventWaits"`
	GatherFileEventsStats               pulumi.StringPtrInput `pulumi:"gatherFileEventsStats"`
	GatherIndexIoWaits                  pulumi.StringPtrInput `pulumi:"gatherIndexIoWaits"`
	GatherInfoSchemaAutoInc             pulumi.StringPtrInput `pulumi:"gatherInfoSchemaAutoInc"`
	GatherInnodbMetrics                 pulumi.StringPtrInput `pulumi:"gatherInnodbMetrics"`
	GatherPerfEventsStatements          pulumi.StringPtrInput `pulumi:"gatherPerfEventsStatements"`
	GatherProcessList                   pulumi.StringPtrInput `pulumi:"gatherProcessList"`
	GatherSlaveStatus                   pulumi.StringPtrInput `pulumi:"gatherSlaveStatus"`
	GatherTableIoWaits                  pulumi.StringPtrInput `pulumi:"gatherTableIoWaits"`
	GatherTableLockWaits                pulumi.StringPtrInput `pulumi:"gatherTableLockWaits"`
	GatherTableSchema                   pulumi.StringPtrInput `pulumi:"gatherTableSchema"`
	PerfEventsStatementsDigestTextLimit pulumi.StringPtrInput `pulumi:"perfEventsStatementsDigestTextLimit"`
	PerfEventsStatementsLimit           pulumi.StringPtrInput `pulumi:"perfEventsStatementsLimit"`
	PerfEventsStatementsTimeLimit       pulumi.StringPtrInput `pulumi:"perfEventsStatementsTimeLimit"`
}

func (ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf)(nil)).Elem()
}

func (i ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafArgs) ToServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput() ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput {
	return i.ToServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutputWithContext(context.Background())
}

func (i ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafArgs) ToServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutputWithContext(ctx context.Context) ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput)
}

func (i ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafArgs) ToServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput() ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput {
	return i.ToServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafArgs) ToServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutputWithContext(ctx context.Context) ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput).ToServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutputWithContext(ctx)
}

// ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrInput is an input type that accepts ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafArgs, ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtr and ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrInput` via:
//
//          ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrInput interface {
	pulumi.Input

	ToServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput() ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput
	ToServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutputWithContext(context.Context) ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput
}

type serviceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrType ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafArgs

func ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtr(v *ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafArgs) ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrInput {
	return (*serviceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrType)(v)
}

func (*serviceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf)(nil)).Elem()
}

func (i *serviceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrType) ToServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput() ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput {
	return i.ToServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrType) ToServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutputWithContext(ctx context.Context) ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput)
}

type ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf)(nil)).Elem()
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) ToServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput() ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput {
	return o
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) ToServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutputWithContext(ctx context.Context) ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput {
	return o
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) ToServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput() ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput {
	return o.ToServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) ToServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutputWithContext(ctx context.Context) ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf {
		return &v
	}).(ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput)
}
func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) GatherEventWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string { return v.GatherEventWaits }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) GatherFileEventsStats() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string { return v.GatherFileEventsStats }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) GatherIndexIoWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string { return v.GatherIndexIoWaits }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) GatherInfoSchemaAutoInc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		return v.GatherInfoSchemaAutoInc
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) GatherInnodbMetrics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string { return v.GatherInnodbMetrics }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) GatherPerfEventsStatements() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		return v.GatherPerfEventsStatements
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) GatherProcessList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string { return v.GatherProcessList }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) GatherSlaveStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string { return v.GatherSlaveStatus }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) GatherTableIoWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string { return v.GatherTableIoWaits }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) GatherTableLockWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string { return v.GatherTableLockWaits }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) GatherTableSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string { return v.GatherTableSchema }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) PerfEventsStatementsDigestTextLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		return v.PerfEventsStatementsDigestTextLimit
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) PerfEventsStatementsLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		return v.PerfEventsStatementsLimit
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) PerfEventsStatementsTimeLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		return v.PerfEventsStatementsTimeLimit
	}).(pulumi.StringPtrOutput)
}

type ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf)(nil)).Elem()
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) ToServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput() ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput {
	return o
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) ToServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutputWithContext(ctx context.Context) ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput {
	return o
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) Elem() ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput {
	return o.ApplyT(func(v *ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf {
		return *v
	}).(ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) GatherEventWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherEventWaits
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) GatherFileEventsStats() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherFileEventsStats
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) GatherIndexIoWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherIndexIoWaits
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) GatherInfoSchemaAutoInc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherInfoSchemaAutoInc
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) GatherInnodbMetrics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherInnodbMetrics
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) GatherPerfEventsStatements() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherPerfEventsStatements
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) GatherProcessList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherProcessList
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) GatherSlaveStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherSlaveStatus
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) GatherTableIoWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherTableIoWaits
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) GatherTableLockWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherTableLockWaits
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) GatherTableSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherTableSchema
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) PerfEventsStatementsDigestTextLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.PerfEventsStatementsDigestTextLimit
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) PerfEventsStatementsLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.PerfEventsStatementsLimit
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) PerfEventsStatementsTimeLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.PerfEventsStatementsTimeLimit
	}).(pulumi.StringPtrOutput)
}

type ServiceIntegrationMirrormakerUserConfig struct {
	MirrormakerWhitelist *string `pulumi:"mirrormakerWhitelist"`
}

// ServiceIntegrationMirrormakerUserConfigInput is an input type that accepts ServiceIntegrationMirrormakerUserConfigArgs and ServiceIntegrationMirrormakerUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationMirrormakerUserConfigInput` via:
//
//          ServiceIntegrationMirrormakerUserConfigArgs{...}
type ServiceIntegrationMirrormakerUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationMirrormakerUserConfigOutput() ServiceIntegrationMirrormakerUserConfigOutput
	ToServiceIntegrationMirrormakerUserConfigOutputWithContext(context.Context) ServiceIntegrationMirrormakerUserConfigOutput
}

type ServiceIntegrationMirrormakerUserConfigArgs struct {
	MirrormakerWhitelist pulumi.StringPtrInput `pulumi:"mirrormakerWhitelist"`
}

func (ServiceIntegrationMirrormakerUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationMirrormakerUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationMirrormakerUserConfigArgs) ToServiceIntegrationMirrormakerUserConfigOutput() ServiceIntegrationMirrormakerUserConfigOutput {
	return i.ToServiceIntegrationMirrormakerUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationMirrormakerUserConfigArgs) ToServiceIntegrationMirrormakerUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationMirrormakerUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationMirrormakerUserConfigOutput)
}

func (i ServiceIntegrationMirrormakerUserConfigArgs) ToServiceIntegrationMirrormakerUserConfigPtrOutput() ServiceIntegrationMirrormakerUserConfigPtrOutput {
	return i.ToServiceIntegrationMirrormakerUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationMirrormakerUserConfigArgs) ToServiceIntegrationMirrormakerUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationMirrormakerUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationMirrormakerUserConfigOutput).ToServiceIntegrationMirrormakerUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationMirrormakerUserConfigPtrInput is an input type that accepts ServiceIntegrationMirrormakerUserConfigArgs, ServiceIntegrationMirrormakerUserConfigPtr and ServiceIntegrationMirrormakerUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationMirrormakerUserConfigPtrInput` via:
//
//          ServiceIntegrationMirrormakerUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationMirrormakerUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationMirrormakerUserConfigPtrOutput() ServiceIntegrationMirrormakerUserConfigPtrOutput
	ToServiceIntegrationMirrormakerUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationMirrormakerUserConfigPtrOutput
}

type serviceIntegrationMirrormakerUserConfigPtrType ServiceIntegrationMirrormakerUserConfigArgs

func ServiceIntegrationMirrormakerUserConfigPtr(v *ServiceIntegrationMirrormakerUserConfigArgs) ServiceIntegrationMirrormakerUserConfigPtrInput {
	return (*serviceIntegrationMirrormakerUserConfigPtrType)(v)
}

func (*serviceIntegrationMirrormakerUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationMirrormakerUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationMirrormakerUserConfigPtrType) ToServiceIntegrationMirrormakerUserConfigPtrOutput() ServiceIntegrationMirrormakerUserConfigPtrOutput {
	return i.ToServiceIntegrationMirrormakerUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationMirrormakerUserConfigPtrType) ToServiceIntegrationMirrormakerUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationMirrormakerUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationMirrormakerUserConfigPtrOutput)
}

type ServiceIntegrationMirrormakerUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationMirrormakerUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationMirrormakerUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationMirrormakerUserConfigOutput) ToServiceIntegrationMirrormakerUserConfigOutput() ServiceIntegrationMirrormakerUserConfigOutput {
	return o
}

func (o ServiceIntegrationMirrormakerUserConfigOutput) ToServiceIntegrationMirrormakerUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationMirrormakerUserConfigOutput {
	return o
}

func (o ServiceIntegrationMirrormakerUserConfigOutput) ToServiceIntegrationMirrormakerUserConfigPtrOutput() ServiceIntegrationMirrormakerUserConfigPtrOutput {
	return o.ToServiceIntegrationMirrormakerUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationMirrormakerUserConfigOutput) ToServiceIntegrationMirrormakerUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationMirrormakerUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationMirrormakerUserConfig) *ServiceIntegrationMirrormakerUserConfig {
		return &v
	}).(ServiceIntegrationMirrormakerUserConfigPtrOutput)
}
func (o ServiceIntegrationMirrormakerUserConfigOutput) MirrormakerWhitelist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationMirrormakerUserConfig) *string { return v.MirrormakerWhitelist }).(pulumi.StringPtrOutput)
}

type ServiceIntegrationMirrormakerUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationMirrormakerUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationMirrormakerUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationMirrormakerUserConfigPtrOutput) ToServiceIntegrationMirrormakerUserConfigPtrOutput() ServiceIntegrationMirrormakerUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationMirrormakerUserConfigPtrOutput) ToServiceIntegrationMirrormakerUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationMirrormakerUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationMirrormakerUserConfigPtrOutput) Elem() ServiceIntegrationMirrormakerUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationMirrormakerUserConfig) ServiceIntegrationMirrormakerUserConfig { return *v }).(ServiceIntegrationMirrormakerUserConfigOutput)
}

func (o ServiceIntegrationMirrormakerUserConfigPtrOutput) MirrormakerWhitelist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationMirrormakerUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.MirrormakerWhitelist
	}).(pulumi.StringPtrOutput)
}

type ServiceIntegrationPrometheusUserConfig struct {
	SourceMysql *ServiceIntegrationPrometheusUserConfigSourceMysql `pulumi:"sourceMysql"`
}

// ServiceIntegrationPrometheusUserConfigInput is an input type that accepts ServiceIntegrationPrometheusUserConfigArgs and ServiceIntegrationPrometheusUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationPrometheusUserConfigInput` via:
//
//          ServiceIntegrationPrometheusUserConfigArgs{...}
type ServiceIntegrationPrometheusUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationPrometheusUserConfigOutput() ServiceIntegrationPrometheusUserConfigOutput
	ToServiceIntegrationPrometheusUserConfigOutputWithContext(context.Context) ServiceIntegrationPrometheusUserConfigOutput
}

type ServiceIntegrationPrometheusUserConfigArgs struct {
	SourceMysql ServiceIntegrationPrometheusUserConfigSourceMysqlPtrInput `pulumi:"sourceMysql"`
}

func (ServiceIntegrationPrometheusUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationPrometheusUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationPrometheusUserConfigArgs) ToServiceIntegrationPrometheusUserConfigOutput() ServiceIntegrationPrometheusUserConfigOutput {
	return i.ToServiceIntegrationPrometheusUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationPrometheusUserConfigArgs) ToServiceIntegrationPrometheusUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationPrometheusUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationPrometheusUserConfigOutput)
}

func (i ServiceIntegrationPrometheusUserConfigArgs) ToServiceIntegrationPrometheusUserConfigPtrOutput() ServiceIntegrationPrometheusUserConfigPtrOutput {
	return i.ToServiceIntegrationPrometheusUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationPrometheusUserConfigArgs) ToServiceIntegrationPrometheusUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationPrometheusUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationPrometheusUserConfigOutput).ToServiceIntegrationPrometheusUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationPrometheusUserConfigPtrInput is an input type that accepts ServiceIntegrationPrometheusUserConfigArgs, ServiceIntegrationPrometheusUserConfigPtr and ServiceIntegrationPrometheusUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationPrometheusUserConfigPtrInput` via:
//
//          ServiceIntegrationPrometheusUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationPrometheusUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationPrometheusUserConfigPtrOutput() ServiceIntegrationPrometheusUserConfigPtrOutput
	ToServiceIntegrationPrometheusUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationPrometheusUserConfigPtrOutput
}

type serviceIntegrationPrometheusUserConfigPtrType ServiceIntegrationPrometheusUserConfigArgs

func ServiceIntegrationPrometheusUserConfigPtr(v *ServiceIntegrationPrometheusUserConfigArgs) ServiceIntegrationPrometheusUserConfigPtrInput {
	return (*serviceIntegrationPrometheusUserConfigPtrType)(v)
}

func (*serviceIntegrationPrometheusUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationPrometheusUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationPrometheusUserConfigPtrType) ToServiceIntegrationPrometheusUserConfigPtrOutput() ServiceIntegrationPrometheusUserConfigPtrOutput {
	return i.ToServiceIntegrationPrometheusUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationPrometheusUserConfigPtrType) ToServiceIntegrationPrometheusUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationPrometheusUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationPrometheusUserConfigPtrOutput)
}

type ServiceIntegrationPrometheusUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationPrometheusUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationPrometheusUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationPrometheusUserConfigOutput) ToServiceIntegrationPrometheusUserConfigOutput() ServiceIntegrationPrometheusUserConfigOutput {
	return o
}

func (o ServiceIntegrationPrometheusUserConfigOutput) ToServiceIntegrationPrometheusUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationPrometheusUserConfigOutput {
	return o
}

func (o ServiceIntegrationPrometheusUserConfigOutput) ToServiceIntegrationPrometheusUserConfigPtrOutput() ServiceIntegrationPrometheusUserConfigPtrOutput {
	return o.ToServiceIntegrationPrometheusUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationPrometheusUserConfigOutput) ToServiceIntegrationPrometheusUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationPrometheusUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationPrometheusUserConfig) *ServiceIntegrationPrometheusUserConfig {
		return &v
	}).(ServiceIntegrationPrometheusUserConfigPtrOutput)
}
func (o ServiceIntegrationPrometheusUserConfigOutput) SourceMysql() ServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationPrometheusUserConfig) *ServiceIntegrationPrometheusUserConfigSourceMysql {
		return v.SourceMysql
	}).(ServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput)
}

type ServiceIntegrationPrometheusUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationPrometheusUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationPrometheusUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationPrometheusUserConfigPtrOutput) ToServiceIntegrationPrometheusUserConfigPtrOutput() ServiceIntegrationPrometheusUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationPrometheusUserConfigPtrOutput) ToServiceIntegrationPrometheusUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationPrometheusUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationPrometheusUserConfigPtrOutput) Elem() ServiceIntegrationPrometheusUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationPrometheusUserConfig) ServiceIntegrationPrometheusUserConfig { return *v }).(ServiceIntegrationPrometheusUserConfigOutput)
}

func (o ServiceIntegrationPrometheusUserConfigPtrOutput) SourceMysql() ServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationPrometheusUserConfig) *ServiceIntegrationPrometheusUserConfigSourceMysql {
		if v == nil {
			return nil
		}
		return v.SourceMysql
	}).(ServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput)
}

type ServiceIntegrationPrometheusUserConfigSourceMysql struct {
	Telegraf *ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf `pulumi:"telegraf"`
}

// ServiceIntegrationPrometheusUserConfigSourceMysqlInput is an input type that accepts ServiceIntegrationPrometheusUserConfigSourceMysqlArgs and ServiceIntegrationPrometheusUserConfigSourceMysqlOutput values.
// You can construct a concrete instance of `ServiceIntegrationPrometheusUserConfigSourceMysqlInput` via:
//
//          ServiceIntegrationPrometheusUserConfigSourceMysqlArgs{...}
type ServiceIntegrationPrometheusUserConfigSourceMysqlInput interface {
	pulumi.Input

	ToServiceIntegrationPrometheusUserConfigSourceMysqlOutput() ServiceIntegrationPrometheusUserConfigSourceMysqlOutput
	ToServiceIntegrationPrometheusUserConfigSourceMysqlOutputWithContext(context.Context) ServiceIntegrationPrometheusUserConfigSourceMysqlOutput
}

type ServiceIntegrationPrometheusUserConfigSourceMysqlArgs struct {
	Telegraf ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrInput `pulumi:"telegraf"`
}

func (ServiceIntegrationPrometheusUserConfigSourceMysqlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationPrometheusUserConfigSourceMysql)(nil)).Elem()
}

func (i ServiceIntegrationPrometheusUserConfigSourceMysqlArgs) ToServiceIntegrationPrometheusUserConfigSourceMysqlOutput() ServiceIntegrationPrometheusUserConfigSourceMysqlOutput {
	return i.ToServiceIntegrationPrometheusUserConfigSourceMysqlOutputWithContext(context.Background())
}

func (i ServiceIntegrationPrometheusUserConfigSourceMysqlArgs) ToServiceIntegrationPrometheusUserConfigSourceMysqlOutputWithContext(ctx context.Context) ServiceIntegrationPrometheusUserConfigSourceMysqlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationPrometheusUserConfigSourceMysqlOutput)
}

func (i ServiceIntegrationPrometheusUserConfigSourceMysqlArgs) ToServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput() ServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return i.ToServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationPrometheusUserConfigSourceMysqlArgs) ToServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(ctx context.Context) ServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationPrometheusUserConfigSourceMysqlOutput).ToServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(ctx)
}

// ServiceIntegrationPrometheusUserConfigSourceMysqlPtrInput is an input type that accepts ServiceIntegrationPrometheusUserConfigSourceMysqlArgs, ServiceIntegrationPrometheusUserConfigSourceMysqlPtr and ServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationPrometheusUserConfigSourceMysqlPtrInput` via:
//
//          ServiceIntegrationPrometheusUserConfigSourceMysqlArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationPrometheusUserConfigSourceMysqlPtrInput interface {
	pulumi.Input

	ToServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput() ServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput
	ToServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(context.Context) ServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput
}

type serviceIntegrationPrometheusUserConfigSourceMysqlPtrType ServiceIntegrationPrometheusUserConfigSourceMysqlArgs

func ServiceIntegrationPrometheusUserConfigSourceMysqlPtr(v *ServiceIntegrationPrometheusUserConfigSourceMysqlArgs) ServiceIntegrationPrometheusUserConfigSourceMysqlPtrInput {
	return (*serviceIntegrationPrometheusUserConfigSourceMysqlPtrType)(v)
}

func (*serviceIntegrationPrometheusUserConfigSourceMysqlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationPrometheusUserConfigSourceMysql)(nil)).Elem()
}

func (i *serviceIntegrationPrometheusUserConfigSourceMysqlPtrType) ToServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput() ServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return i.ToServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationPrometheusUserConfigSourceMysqlPtrType) ToServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(ctx context.Context) ServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput)
}

type ServiceIntegrationPrometheusUserConfigSourceMysqlOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationPrometheusUserConfigSourceMysqlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationPrometheusUserConfigSourceMysql)(nil)).Elem()
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlOutput) ToServiceIntegrationPrometheusUserConfigSourceMysqlOutput() ServiceIntegrationPrometheusUserConfigSourceMysqlOutput {
	return o
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlOutput) ToServiceIntegrationPrometheusUserConfigSourceMysqlOutputWithContext(ctx context.Context) ServiceIntegrationPrometheusUserConfigSourceMysqlOutput {
	return o
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlOutput) ToServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput() ServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return o.ToServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlOutput) ToServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(ctx context.Context) ServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationPrometheusUserConfigSourceMysql) *ServiceIntegrationPrometheusUserConfigSourceMysql {
		return &v
	}).(ServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput)
}
func (o ServiceIntegrationPrometheusUserConfigSourceMysqlOutput) Telegraf() ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationPrometheusUserConfigSourceMysql) *ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf {
		return v.Telegraf
	}).(ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput)
}

type ServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationPrometheusUserConfigSourceMysql)(nil)).Elem()
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput) ToServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput() ServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return o
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput) ToServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(ctx context.Context) ServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return o
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput) Elem() ServiceIntegrationPrometheusUserConfigSourceMysqlOutput {
	return o.ApplyT(func(v *ServiceIntegrationPrometheusUserConfigSourceMysql) ServiceIntegrationPrometheusUserConfigSourceMysql {
		return *v
	}).(ServiceIntegrationPrometheusUserConfigSourceMysqlOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput) Telegraf() ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationPrometheusUserConfigSourceMysql) *ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf {
		if v == nil {
			return nil
		}
		return v.Telegraf
	}).(ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput)
}

type ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf struct {
	GatherEventWaits                    *string `pulumi:"gatherEventWaits"`
	GatherFileEventsStats               *string `pulumi:"gatherFileEventsStats"`
	GatherIndexIoWaits                  *string `pulumi:"gatherIndexIoWaits"`
	GatherInfoSchemaAutoInc             *string `pulumi:"gatherInfoSchemaAutoInc"`
	GatherInnodbMetrics                 *string `pulumi:"gatherInnodbMetrics"`
	GatherPerfEventsStatements          *string `pulumi:"gatherPerfEventsStatements"`
	GatherProcessList                   *string `pulumi:"gatherProcessList"`
	GatherSlaveStatus                   *string `pulumi:"gatherSlaveStatus"`
	GatherTableIoWaits                  *string `pulumi:"gatherTableIoWaits"`
	GatherTableLockWaits                *string `pulumi:"gatherTableLockWaits"`
	GatherTableSchema                   *string `pulumi:"gatherTableSchema"`
	PerfEventsStatementsDigestTextLimit *string `pulumi:"perfEventsStatementsDigestTextLimit"`
	PerfEventsStatementsLimit           *string `pulumi:"perfEventsStatementsLimit"`
	PerfEventsStatementsTimeLimit       *string `pulumi:"perfEventsStatementsTimeLimit"`
}

// ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafInput is an input type that accepts ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs and ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput values.
// You can construct a concrete instance of `ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafInput` via:
//
//          ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs{...}
type ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafInput interface {
	pulumi.Input

	ToServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput() ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput
	ToServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutputWithContext(context.Context) ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput
}

type ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs struct {
	GatherEventWaits                    pulumi.StringPtrInput `pulumi:"gatherEventWaits"`
	GatherFileEventsStats               pulumi.StringPtrInput `pulumi:"gatherFileEventsStats"`
	GatherIndexIoWaits                  pulumi.StringPtrInput `pulumi:"gatherIndexIoWaits"`
	GatherInfoSchemaAutoInc             pulumi.StringPtrInput `pulumi:"gatherInfoSchemaAutoInc"`
	GatherInnodbMetrics                 pulumi.StringPtrInput `pulumi:"gatherInnodbMetrics"`
	GatherPerfEventsStatements          pulumi.StringPtrInput `pulumi:"gatherPerfEventsStatements"`
	GatherProcessList                   pulumi.StringPtrInput `pulumi:"gatherProcessList"`
	GatherSlaveStatus                   pulumi.StringPtrInput `pulumi:"gatherSlaveStatus"`
	GatherTableIoWaits                  pulumi.StringPtrInput `pulumi:"gatherTableIoWaits"`
	GatherTableLockWaits                pulumi.StringPtrInput `pulumi:"gatherTableLockWaits"`
	GatherTableSchema                   pulumi.StringPtrInput `pulumi:"gatherTableSchema"`
	PerfEventsStatementsDigestTextLimit pulumi.StringPtrInput `pulumi:"perfEventsStatementsDigestTextLimit"`
	PerfEventsStatementsLimit           pulumi.StringPtrInput `pulumi:"perfEventsStatementsLimit"`
	PerfEventsStatementsTimeLimit       pulumi.StringPtrInput `pulumi:"perfEventsStatementsTimeLimit"`
}

func (ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf)(nil)).Elem()
}

func (i ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs) ToServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput() ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput {
	return i.ToServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutputWithContext(context.Background())
}

func (i ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs) ToServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutputWithContext(ctx context.Context) ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput)
}

func (i ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs) ToServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput() ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return i.ToServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs) ToServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(ctx context.Context) ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput).ToServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(ctx)
}

// ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrInput is an input type that accepts ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs, ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtr and ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrInput` via:
//
//          ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrInput interface {
	pulumi.Input

	ToServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput() ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput
	ToServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(context.Context) ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput
}

type serviceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrType ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs

func ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtr(v *ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs) ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrInput {
	return (*serviceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrType)(v)
}

func (*serviceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf)(nil)).Elem()
}

func (i *serviceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrType) ToServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput() ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return i.ToServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrType) ToServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(ctx context.Context) ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput)
}

type ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf)(nil)).Elem()
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) ToServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput() ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput {
	return o
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) ToServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutputWithContext(ctx context.Context) ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput {
	return o
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) ToServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput() ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return o.ToServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) ToServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(ctx context.Context) ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf {
		return &v
	}).(ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput)
}
func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherEventWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string { return v.GatherEventWaits }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherFileEventsStats() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		return v.GatherFileEventsStats
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherIndexIoWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string { return v.GatherIndexIoWaits }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherInfoSchemaAutoInc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		return v.GatherInfoSchemaAutoInc
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherInnodbMetrics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		return v.GatherInnodbMetrics
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherPerfEventsStatements() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		return v.GatherPerfEventsStatements
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherProcessList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string { return v.GatherProcessList }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherSlaveStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string { return v.GatherSlaveStatus }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherTableIoWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string { return v.GatherTableIoWaits }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherTableLockWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		return v.GatherTableLockWaits
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherTableSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string { return v.GatherTableSchema }).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) PerfEventsStatementsDigestTextLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		return v.PerfEventsStatementsDigestTextLimit
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) PerfEventsStatementsLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		return v.PerfEventsStatementsLimit
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) PerfEventsStatementsTimeLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		return v.PerfEventsStatementsTimeLimit
	}).(pulumi.StringPtrOutput)
}

type ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf)(nil)).Elem()
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) ToServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput() ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return o
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) ToServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(ctx context.Context) ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return o
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) Elem() ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput {
	return o.ApplyT(func(v *ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf {
		return *v
	}).(ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherEventWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherEventWaits
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherFileEventsStats() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherFileEventsStats
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherIndexIoWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherIndexIoWaits
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherInfoSchemaAutoInc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherInfoSchemaAutoInc
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherInnodbMetrics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherInnodbMetrics
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherPerfEventsStatements() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherPerfEventsStatements
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherProcessList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherProcessList
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherSlaveStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherSlaveStatus
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherTableIoWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherTableIoWaits
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherTableLockWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherTableLockWaits
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherTableSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherTableSchema
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) PerfEventsStatementsDigestTextLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.PerfEventsStatementsDigestTextLimit
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) PerfEventsStatementsLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.PerfEventsStatementsLimit
	}).(pulumi.StringPtrOutput)
}

func (o ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) PerfEventsStatementsTimeLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.PerfEventsStatementsTimeLimit
	}).(pulumi.StringPtrOutput)
}

type ServiceIntegrationReadReplicaUserConfig struct {
}

// ServiceIntegrationReadReplicaUserConfigInput is an input type that accepts ServiceIntegrationReadReplicaUserConfigArgs and ServiceIntegrationReadReplicaUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationReadReplicaUserConfigInput` via:
//
//          ServiceIntegrationReadReplicaUserConfigArgs{...}
type ServiceIntegrationReadReplicaUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationReadReplicaUserConfigOutput() ServiceIntegrationReadReplicaUserConfigOutput
	ToServiceIntegrationReadReplicaUserConfigOutputWithContext(context.Context) ServiceIntegrationReadReplicaUserConfigOutput
}

type ServiceIntegrationReadReplicaUserConfigArgs struct {
}

func (ServiceIntegrationReadReplicaUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationReadReplicaUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationReadReplicaUserConfigArgs) ToServiceIntegrationReadReplicaUserConfigOutput() ServiceIntegrationReadReplicaUserConfigOutput {
	return i.ToServiceIntegrationReadReplicaUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationReadReplicaUserConfigArgs) ToServiceIntegrationReadReplicaUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationReadReplicaUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationReadReplicaUserConfigOutput)
}

func (i ServiceIntegrationReadReplicaUserConfigArgs) ToServiceIntegrationReadReplicaUserConfigPtrOutput() ServiceIntegrationReadReplicaUserConfigPtrOutput {
	return i.ToServiceIntegrationReadReplicaUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationReadReplicaUserConfigArgs) ToServiceIntegrationReadReplicaUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationReadReplicaUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationReadReplicaUserConfigOutput).ToServiceIntegrationReadReplicaUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationReadReplicaUserConfigPtrInput is an input type that accepts ServiceIntegrationReadReplicaUserConfigArgs, ServiceIntegrationReadReplicaUserConfigPtr and ServiceIntegrationReadReplicaUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationReadReplicaUserConfigPtrInput` via:
//
//          ServiceIntegrationReadReplicaUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationReadReplicaUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationReadReplicaUserConfigPtrOutput() ServiceIntegrationReadReplicaUserConfigPtrOutput
	ToServiceIntegrationReadReplicaUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationReadReplicaUserConfigPtrOutput
}

type serviceIntegrationReadReplicaUserConfigPtrType ServiceIntegrationReadReplicaUserConfigArgs

func ServiceIntegrationReadReplicaUserConfigPtr(v *ServiceIntegrationReadReplicaUserConfigArgs) ServiceIntegrationReadReplicaUserConfigPtrInput {
	return (*serviceIntegrationReadReplicaUserConfigPtrType)(v)
}

func (*serviceIntegrationReadReplicaUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationReadReplicaUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationReadReplicaUserConfigPtrType) ToServiceIntegrationReadReplicaUserConfigPtrOutput() ServiceIntegrationReadReplicaUserConfigPtrOutput {
	return i.ToServiceIntegrationReadReplicaUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationReadReplicaUserConfigPtrType) ToServiceIntegrationReadReplicaUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationReadReplicaUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationReadReplicaUserConfigPtrOutput)
}

type ServiceIntegrationReadReplicaUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationReadReplicaUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationReadReplicaUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationReadReplicaUserConfigOutput) ToServiceIntegrationReadReplicaUserConfigOutput() ServiceIntegrationReadReplicaUserConfigOutput {
	return o
}

func (o ServiceIntegrationReadReplicaUserConfigOutput) ToServiceIntegrationReadReplicaUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationReadReplicaUserConfigOutput {
	return o
}

func (o ServiceIntegrationReadReplicaUserConfigOutput) ToServiceIntegrationReadReplicaUserConfigPtrOutput() ServiceIntegrationReadReplicaUserConfigPtrOutput {
	return o.ToServiceIntegrationReadReplicaUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationReadReplicaUserConfigOutput) ToServiceIntegrationReadReplicaUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationReadReplicaUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationReadReplicaUserConfig) *ServiceIntegrationReadReplicaUserConfig {
		return &v
	}).(ServiceIntegrationReadReplicaUserConfigPtrOutput)
}

type ServiceIntegrationReadReplicaUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationReadReplicaUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationReadReplicaUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationReadReplicaUserConfigPtrOutput) ToServiceIntegrationReadReplicaUserConfigPtrOutput() ServiceIntegrationReadReplicaUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationReadReplicaUserConfigPtrOutput) ToServiceIntegrationReadReplicaUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationReadReplicaUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationReadReplicaUserConfigPtrOutput) Elem() ServiceIntegrationReadReplicaUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationReadReplicaUserConfig) ServiceIntegrationReadReplicaUserConfig { return *v }).(ServiceIntegrationReadReplicaUserConfigOutput)
}

type ServiceIntegrationRsyslogUserConfig struct {
}

// ServiceIntegrationRsyslogUserConfigInput is an input type that accepts ServiceIntegrationRsyslogUserConfigArgs and ServiceIntegrationRsyslogUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationRsyslogUserConfigInput` via:
//
//          ServiceIntegrationRsyslogUserConfigArgs{...}
type ServiceIntegrationRsyslogUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationRsyslogUserConfigOutput() ServiceIntegrationRsyslogUserConfigOutput
	ToServiceIntegrationRsyslogUserConfigOutputWithContext(context.Context) ServiceIntegrationRsyslogUserConfigOutput
}

type ServiceIntegrationRsyslogUserConfigArgs struct {
}

func (ServiceIntegrationRsyslogUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationRsyslogUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationRsyslogUserConfigArgs) ToServiceIntegrationRsyslogUserConfigOutput() ServiceIntegrationRsyslogUserConfigOutput {
	return i.ToServiceIntegrationRsyslogUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationRsyslogUserConfigArgs) ToServiceIntegrationRsyslogUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationRsyslogUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationRsyslogUserConfigOutput)
}

func (i ServiceIntegrationRsyslogUserConfigArgs) ToServiceIntegrationRsyslogUserConfigPtrOutput() ServiceIntegrationRsyslogUserConfigPtrOutput {
	return i.ToServiceIntegrationRsyslogUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationRsyslogUserConfigArgs) ToServiceIntegrationRsyslogUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationRsyslogUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationRsyslogUserConfigOutput).ToServiceIntegrationRsyslogUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationRsyslogUserConfigPtrInput is an input type that accepts ServiceIntegrationRsyslogUserConfigArgs, ServiceIntegrationRsyslogUserConfigPtr and ServiceIntegrationRsyslogUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationRsyslogUserConfigPtrInput` via:
//
//          ServiceIntegrationRsyslogUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationRsyslogUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationRsyslogUserConfigPtrOutput() ServiceIntegrationRsyslogUserConfigPtrOutput
	ToServiceIntegrationRsyslogUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationRsyslogUserConfigPtrOutput
}

type serviceIntegrationRsyslogUserConfigPtrType ServiceIntegrationRsyslogUserConfigArgs

func ServiceIntegrationRsyslogUserConfigPtr(v *ServiceIntegrationRsyslogUserConfigArgs) ServiceIntegrationRsyslogUserConfigPtrInput {
	return (*serviceIntegrationRsyslogUserConfigPtrType)(v)
}

func (*serviceIntegrationRsyslogUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationRsyslogUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationRsyslogUserConfigPtrType) ToServiceIntegrationRsyslogUserConfigPtrOutput() ServiceIntegrationRsyslogUserConfigPtrOutput {
	return i.ToServiceIntegrationRsyslogUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationRsyslogUserConfigPtrType) ToServiceIntegrationRsyslogUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationRsyslogUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationRsyslogUserConfigPtrOutput)
}

type ServiceIntegrationRsyslogUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationRsyslogUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationRsyslogUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationRsyslogUserConfigOutput) ToServiceIntegrationRsyslogUserConfigOutput() ServiceIntegrationRsyslogUserConfigOutput {
	return o
}

func (o ServiceIntegrationRsyslogUserConfigOutput) ToServiceIntegrationRsyslogUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationRsyslogUserConfigOutput {
	return o
}

func (o ServiceIntegrationRsyslogUserConfigOutput) ToServiceIntegrationRsyslogUserConfigPtrOutput() ServiceIntegrationRsyslogUserConfigPtrOutput {
	return o.ToServiceIntegrationRsyslogUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationRsyslogUserConfigOutput) ToServiceIntegrationRsyslogUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationRsyslogUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationRsyslogUserConfig) *ServiceIntegrationRsyslogUserConfig {
		return &v
	}).(ServiceIntegrationRsyslogUserConfigPtrOutput)
}

type ServiceIntegrationRsyslogUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationRsyslogUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationRsyslogUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationRsyslogUserConfigPtrOutput) ToServiceIntegrationRsyslogUserConfigPtrOutput() ServiceIntegrationRsyslogUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationRsyslogUserConfigPtrOutput) ToServiceIntegrationRsyslogUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationRsyslogUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationRsyslogUserConfigPtrOutput) Elem() ServiceIntegrationRsyslogUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationRsyslogUserConfig) ServiceIntegrationRsyslogUserConfig { return *v }).(ServiceIntegrationRsyslogUserConfigOutput)
}

type ServiceIntegrationSchemaRegistryProxyUserConfig struct {
}

// ServiceIntegrationSchemaRegistryProxyUserConfigInput is an input type that accepts ServiceIntegrationSchemaRegistryProxyUserConfigArgs and ServiceIntegrationSchemaRegistryProxyUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationSchemaRegistryProxyUserConfigInput` via:
//
//          ServiceIntegrationSchemaRegistryProxyUserConfigArgs{...}
type ServiceIntegrationSchemaRegistryProxyUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationSchemaRegistryProxyUserConfigOutput() ServiceIntegrationSchemaRegistryProxyUserConfigOutput
	ToServiceIntegrationSchemaRegistryProxyUserConfigOutputWithContext(context.Context) ServiceIntegrationSchemaRegistryProxyUserConfigOutput
}

type ServiceIntegrationSchemaRegistryProxyUserConfigArgs struct {
}

func (ServiceIntegrationSchemaRegistryProxyUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationSchemaRegistryProxyUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationSchemaRegistryProxyUserConfigArgs) ToServiceIntegrationSchemaRegistryProxyUserConfigOutput() ServiceIntegrationSchemaRegistryProxyUserConfigOutput {
	return i.ToServiceIntegrationSchemaRegistryProxyUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationSchemaRegistryProxyUserConfigArgs) ToServiceIntegrationSchemaRegistryProxyUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationSchemaRegistryProxyUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationSchemaRegistryProxyUserConfigOutput)
}

func (i ServiceIntegrationSchemaRegistryProxyUserConfigArgs) ToServiceIntegrationSchemaRegistryProxyUserConfigPtrOutput() ServiceIntegrationSchemaRegistryProxyUserConfigPtrOutput {
	return i.ToServiceIntegrationSchemaRegistryProxyUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationSchemaRegistryProxyUserConfigArgs) ToServiceIntegrationSchemaRegistryProxyUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationSchemaRegistryProxyUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationSchemaRegistryProxyUserConfigOutput).ToServiceIntegrationSchemaRegistryProxyUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationSchemaRegistryProxyUserConfigPtrInput is an input type that accepts ServiceIntegrationSchemaRegistryProxyUserConfigArgs, ServiceIntegrationSchemaRegistryProxyUserConfigPtr and ServiceIntegrationSchemaRegistryProxyUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationSchemaRegistryProxyUserConfigPtrInput` via:
//
//          ServiceIntegrationSchemaRegistryProxyUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationSchemaRegistryProxyUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationSchemaRegistryProxyUserConfigPtrOutput() ServiceIntegrationSchemaRegistryProxyUserConfigPtrOutput
	ToServiceIntegrationSchemaRegistryProxyUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationSchemaRegistryProxyUserConfigPtrOutput
}

type serviceIntegrationSchemaRegistryProxyUserConfigPtrType ServiceIntegrationSchemaRegistryProxyUserConfigArgs

func ServiceIntegrationSchemaRegistryProxyUserConfigPtr(v *ServiceIntegrationSchemaRegistryProxyUserConfigArgs) ServiceIntegrationSchemaRegistryProxyUserConfigPtrInput {
	return (*serviceIntegrationSchemaRegistryProxyUserConfigPtrType)(v)
}

func (*serviceIntegrationSchemaRegistryProxyUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationSchemaRegistryProxyUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationSchemaRegistryProxyUserConfigPtrType) ToServiceIntegrationSchemaRegistryProxyUserConfigPtrOutput() ServiceIntegrationSchemaRegistryProxyUserConfigPtrOutput {
	return i.ToServiceIntegrationSchemaRegistryProxyUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationSchemaRegistryProxyUserConfigPtrType) ToServiceIntegrationSchemaRegistryProxyUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationSchemaRegistryProxyUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationSchemaRegistryProxyUserConfigPtrOutput)
}

type ServiceIntegrationSchemaRegistryProxyUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationSchemaRegistryProxyUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationSchemaRegistryProxyUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationSchemaRegistryProxyUserConfigOutput) ToServiceIntegrationSchemaRegistryProxyUserConfigOutput() ServiceIntegrationSchemaRegistryProxyUserConfigOutput {
	return o
}

func (o ServiceIntegrationSchemaRegistryProxyUserConfigOutput) ToServiceIntegrationSchemaRegistryProxyUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationSchemaRegistryProxyUserConfigOutput {
	return o
}

func (o ServiceIntegrationSchemaRegistryProxyUserConfigOutput) ToServiceIntegrationSchemaRegistryProxyUserConfigPtrOutput() ServiceIntegrationSchemaRegistryProxyUserConfigPtrOutput {
	return o.ToServiceIntegrationSchemaRegistryProxyUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationSchemaRegistryProxyUserConfigOutput) ToServiceIntegrationSchemaRegistryProxyUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationSchemaRegistryProxyUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationSchemaRegistryProxyUserConfig) *ServiceIntegrationSchemaRegistryProxyUserConfig {
		return &v
	}).(ServiceIntegrationSchemaRegistryProxyUserConfigPtrOutput)
}

type ServiceIntegrationSchemaRegistryProxyUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationSchemaRegistryProxyUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationSchemaRegistryProxyUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationSchemaRegistryProxyUserConfigPtrOutput) ToServiceIntegrationSchemaRegistryProxyUserConfigPtrOutput() ServiceIntegrationSchemaRegistryProxyUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationSchemaRegistryProxyUserConfigPtrOutput) ToServiceIntegrationSchemaRegistryProxyUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationSchemaRegistryProxyUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationSchemaRegistryProxyUserConfigPtrOutput) Elem() ServiceIntegrationSchemaRegistryProxyUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationSchemaRegistryProxyUserConfig) ServiceIntegrationSchemaRegistryProxyUserConfig {
		return *v
	}).(ServiceIntegrationSchemaRegistryProxyUserConfigOutput)
}

type ServiceIntegrationSignalfxUserConfig struct {
}

// ServiceIntegrationSignalfxUserConfigInput is an input type that accepts ServiceIntegrationSignalfxUserConfigArgs and ServiceIntegrationSignalfxUserConfigOutput values.
// You can construct a concrete instance of `ServiceIntegrationSignalfxUserConfigInput` via:
//
//          ServiceIntegrationSignalfxUserConfigArgs{...}
type ServiceIntegrationSignalfxUserConfigInput interface {
	pulumi.Input

	ToServiceIntegrationSignalfxUserConfigOutput() ServiceIntegrationSignalfxUserConfigOutput
	ToServiceIntegrationSignalfxUserConfigOutputWithContext(context.Context) ServiceIntegrationSignalfxUserConfigOutput
}

type ServiceIntegrationSignalfxUserConfigArgs struct {
}

func (ServiceIntegrationSignalfxUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationSignalfxUserConfig)(nil)).Elem()
}

func (i ServiceIntegrationSignalfxUserConfigArgs) ToServiceIntegrationSignalfxUserConfigOutput() ServiceIntegrationSignalfxUserConfigOutput {
	return i.ToServiceIntegrationSignalfxUserConfigOutputWithContext(context.Background())
}

func (i ServiceIntegrationSignalfxUserConfigArgs) ToServiceIntegrationSignalfxUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationSignalfxUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationSignalfxUserConfigOutput)
}

func (i ServiceIntegrationSignalfxUserConfigArgs) ToServiceIntegrationSignalfxUserConfigPtrOutput() ServiceIntegrationSignalfxUserConfigPtrOutput {
	return i.ToServiceIntegrationSignalfxUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationSignalfxUserConfigArgs) ToServiceIntegrationSignalfxUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationSignalfxUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationSignalfxUserConfigOutput).ToServiceIntegrationSignalfxUserConfigPtrOutputWithContext(ctx)
}

// ServiceIntegrationSignalfxUserConfigPtrInput is an input type that accepts ServiceIntegrationSignalfxUserConfigArgs, ServiceIntegrationSignalfxUserConfigPtr and ServiceIntegrationSignalfxUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationSignalfxUserConfigPtrInput` via:
//
//          ServiceIntegrationSignalfxUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceIntegrationSignalfxUserConfigPtrInput interface {
	pulumi.Input

	ToServiceIntegrationSignalfxUserConfigPtrOutput() ServiceIntegrationSignalfxUserConfigPtrOutput
	ToServiceIntegrationSignalfxUserConfigPtrOutputWithContext(context.Context) ServiceIntegrationSignalfxUserConfigPtrOutput
}

type serviceIntegrationSignalfxUserConfigPtrType ServiceIntegrationSignalfxUserConfigArgs

func ServiceIntegrationSignalfxUserConfigPtr(v *ServiceIntegrationSignalfxUserConfigArgs) ServiceIntegrationSignalfxUserConfigPtrInput {
	return (*serviceIntegrationSignalfxUserConfigPtrType)(v)
}

func (*serviceIntegrationSignalfxUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationSignalfxUserConfig)(nil)).Elem()
}

func (i *serviceIntegrationSignalfxUserConfigPtrType) ToServiceIntegrationSignalfxUserConfigPtrOutput() ServiceIntegrationSignalfxUserConfigPtrOutput {
	return i.ToServiceIntegrationSignalfxUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationSignalfxUserConfigPtrType) ToServiceIntegrationSignalfxUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationSignalfxUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationSignalfxUserConfigPtrOutput)
}

type ServiceIntegrationSignalfxUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationSignalfxUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationSignalfxUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationSignalfxUserConfigOutput) ToServiceIntegrationSignalfxUserConfigOutput() ServiceIntegrationSignalfxUserConfigOutput {
	return o
}

func (o ServiceIntegrationSignalfxUserConfigOutput) ToServiceIntegrationSignalfxUserConfigOutputWithContext(ctx context.Context) ServiceIntegrationSignalfxUserConfigOutput {
	return o
}

func (o ServiceIntegrationSignalfxUserConfigOutput) ToServiceIntegrationSignalfxUserConfigPtrOutput() ServiceIntegrationSignalfxUserConfigPtrOutput {
	return o.ToServiceIntegrationSignalfxUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationSignalfxUserConfigOutput) ToServiceIntegrationSignalfxUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationSignalfxUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationSignalfxUserConfig) *ServiceIntegrationSignalfxUserConfig {
		return &v
	}).(ServiceIntegrationSignalfxUserConfigPtrOutput)
}

type ServiceIntegrationSignalfxUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationSignalfxUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationSignalfxUserConfig)(nil)).Elem()
}

func (o ServiceIntegrationSignalfxUserConfigPtrOutput) ToServiceIntegrationSignalfxUserConfigPtrOutput() ServiceIntegrationSignalfxUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationSignalfxUserConfigPtrOutput) ToServiceIntegrationSignalfxUserConfigPtrOutputWithContext(ctx context.Context) ServiceIntegrationSignalfxUserConfigPtrOutput {
	return o
}

func (o ServiceIntegrationSignalfxUserConfigPtrOutput) Elem() ServiceIntegrationSignalfxUserConfigOutput {
	return o.ApplyT(func(v *ServiceIntegrationSignalfxUserConfig) ServiceIntegrationSignalfxUserConfig { return *v }).(ServiceIntegrationSignalfxUserConfigOutput)
}

type ServiceKafka struct {
	AccessCert        *string `pulumi:"accessCert"`
	AccessKey         *string `pulumi:"accessKey"`
	ConnectUri        *string `pulumi:"connectUri"`
	RestUri           *string `pulumi:"restUri"`
	SchemaRegistryUri *string `pulumi:"schemaRegistryUri"`
}

// ServiceKafkaInput is an input type that accepts ServiceKafkaArgs and ServiceKafkaOutput values.
// You can construct a concrete instance of `ServiceKafkaInput` via:
//
//          ServiceKafkaArgs{...}
type ServiceKafkaInput interface {
	pulumi.Input

	ToServiceKafkaOutput() ServiceKafkaOutput
	ToServiceKafkaOutputWithContext(context.Context) ServiceKafkaOutput
}

type ServiceKafkaArgs struct {
	AccessCert        pulumi.StringPtrInput `pulumi:"accessCert"`
	AccessKey         pulumi.StringPtrInput `pulumi:"accessKey"`
	ConnectUri        pulumi.StringPtrInput `pulumi:"connectUri"`
	RestUri           pulumi.StringPtrInput `pulumi:"restUri"`
	SchemaRegistryUri pulumi.StringPtrInput `pulumi:"schemaRegistryUri"`
}

func (ServiceKafkaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafka)(nil)).Elem()
}

func (i ServiceKafkaArgs) ToServiceKafkaOutput() ServiceKafkaOutput {
	return i.ToServiceKafkaOutputWithContext(context.Background())
}

func (i ServiceKafkaArgs) ToServiceKafkaOutputWithContext(ctx context.Context) ServiceKafkaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaOutput)
}

func (i ServiceKafkaArgs) ToServiceKafkaPtrOutput() ServiceKafkaPtrOutput {
	return i.ToServiceKafkaPtrOutputWithContext(context.Background())
}

func (i ServiceKafkaArgs) ToServiceKafkaPtrOutputWithContext(ctx context.Context) ServiceKafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaOutput).ToServiceKafkaPtrOutputWithContext(ctx)
}

// ServiceKafkaPtrInput is an input type that accepts ServiceKafkaArgs, ServiceKafkaPtr and ServiceKafkaPtrOutput values.
// You can construct a concrete instance of `ServiceKafkaPtrInput` via:
//
//          ServiceKafkaArgs{...}
//
//  or:
//
//          nil
type ServiceKafkaPtrInput interface {
	pulumi.Input

	ToServiceKafkaPtrOutput() ServiceKafkaPtrOutput
	ToServiceKafkaPtrOutputWithContext(context.Context) ServiceKafkaPtrOutput
}

type serviceKafkaPtrType ServiceKafkaArgs

func ServiceKafkaPtr(v *ServiceKafkaArgs) ServiceKafkaPtrInput {
	return (*serviceKafkaPtrType)(v)
}

func (*serviceKafkaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafka)(nil)).Elem()
}

func (i *serviceKafkaPtrType) ToServiceKafkaPtrOutput() ServiceKafkaPtrOutput {
	return i.ToServiceKafkaPtrOutputWithContext(context.Background())
}

func (i *serviceKafkaPtrType) ToServiceKafkaPtrOutputWithContext(ctx context.Context) ServiceKafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaPtrOutput)
}

type ServiceKafkaOutput struct{ *pulumi.OutputState }

func (ServiceKafkaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafka)(nil)).Elem()
}

func (o ServiceKafkaOutput) ToServiceKafkaOutput() ServiceKafkaOutput {
	return o
}

func (o ServiceKafkaOutput) ToServiceKafkaOutputWithContext(ctx context.Context) ServiceKafkaOutput {
	return o
}

func (o ServiceKafkaOutput) ToServiceKafkaPtrOutput() ServiceKafkaPtrOutput {
	return o.ToServiceKafkaPtrOutputWithContext(context.Background())
}

func (o ServiceKafkaOutput) ToServiceKafkaPtrOutputWithContext(ctx context.Context) ServiceKafkaPtrOutput {
	return o.ApplyT(func(v ServiceKafka) *ServiceKafka {
		return &v
	}).(ServiceKafkaPtrOutput)
}
func (o ServiceKafkaOutput) AccessCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafka) *string { return v.AccessCert }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafka) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaOutput) ConnectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafka) *string { return v.ConnectUri }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaOutput) RestUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafka) *string { return v.RestUri }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaOutput) SchemaRegistryUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafka) *string { return v.SchemaRegistryUri }).(pulumi.StringPtrOutput)
}

type ServiceKafkaPtrOutput struct{ *pulumi.OutputState }

func (ServiceKafkaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafka)(nil)).Elem()
}

func (o ServiceKafkaPtrOutput) ToServiceKafkaPtrOutput() ServiceKafkaPtrOutput {
	return o
}

func (o ServiceKafkaPtrOutput) ToServiceKafkaPtrOutputWithContext(ctx context.Context) ServiceKafkaPtrOutput {
	return o
}

func (o ServiceKafkaPtrOutput) Elem() ServiceKafkaOutput {
	return o.ApplyT(func(v *ServiceKafka) ServiceKafka { return *v }).(ServiceKafkaOutput)
}

func (o ServiceKafkaPtrOutput) AccessCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafka) *string {
		if v == nil {
			return nil
		}
		return v.AccessCert
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafka) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaPtrOutput) ConnectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafka) *string {
		if v == nil {
			return nil
		}
		return v.ConnectUri
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaPtrOutput) RestUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafka) *string {
		if v == nil {
			return nil
		}
		return v.RestUri
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaPtrOutput) SchemaRegistryUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafka) *string {
		if v == nil {
			return nil
		}
		return v.SchemaRegistryUri
	}).(pulumi.StringPtrOutput)
}

type ServiceKafkaConnect struct {
}

// ServiceKafkaConnectInput is an input type that accepts ServiceKafkaConnectArgs and ServiceKafkaConnectOutput values.
// You can construct a concrete instance of `ServiceKafkaConnectInput` via:
//
//          ServiceKafkaConnectArgs{...}
type ServiceKafkaConnectInput interface {
	pulumi.Input

	ToServiceKafkaConnectOutput() ServiceKafkaConnectOutput
	ToServiceKafkaConnectOutputWithContext(context.Context) ServiceKafkaConnectOutput
}

type ServiceKafkaConnectArgs struct {
}

func (ServiceKafkaConnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaConnect)(nil)).Elem()
}

func (i ServiceKafkaConnectArgs) ToServiceKafkaConnectOutput() ServiceKafkaConnectOutput {
	return i.ToServiceKafkaConnectOutputWithContext(context.Background())
}

func (i ServiceKafkaConnectArgs) ToServiceKafkaConnectOutputWithContext(ctx context.Context) ServiceKafkaConnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaConnectOutput)
}

func (i ServiceKafkaConnectArgs) ToServiceKafkaConnectPtrOutput() ServiceKafkaConnectPtrOutput {
	return i.ToServiceKafkaConnectPtrOutputWithContext(context.Background())
}

func (i ServiceKafkaConnectArgs) ToServiceKafkaConnectPtrOutputWithContext(ctx context.Context) ServiceKafkaConnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaConnectOutput).ToServiceKafkaConnectPtrOutputWithContext(ctx)
}

// ServiceKafkaConnectPtrInput is an input type that accepts ServiceKafkaConnectArgs, ServiceKafkaConnectPtr and ServiceKafkaConnectPtrOutput values.
// You can construct a concrete instance of `ServiceKafkaConnectPtrInput` via:
//
//          ServiceKafkaConnectArgs{...}
//
//  or:
//
//          nil
type ServiceKafkaConnectPtrInput interface {
	pulumi.Input

	ToServiceKafkaConnectPtrOutput() ServiceKafkaConnectPtrOutput
	ToServiceKafkaConnectPtrOutputWithContext(context.Context) ServiceKafkaConnectPtrOutput
}

type serviceKafkaConnectPtrType ServiceKafkaConnectArgs

func ServiceKafkaConnectPtr(v *ServiceKafkaConnectArgs) ServiceKafkaConnectPtrInput {
	return (*serviceKafkaConnectPtrType)(v)
}

func (*serviceKafkaConnectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaConnect)(nil)).Elem()
}

func (i *serviceKafkaConnectPtrType) ToServiceKafkaConnectPtrOutput() ServiceKafkaConnectPtrOutput {
	return i.ToServiceKafkaConnectPtrOutputWithContext(context.Background())
}

func (i *serviceKafkaConnectPtrType) ToServiceKafkaConnectPtrOutputWithContext(ctx context.Context) ServiceKafkaConnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaConnectPtrOutput)
}

type ServiceKafkaConnectOutput struct{ *pulumi.OutputState }

func (ServiceKafkaConnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaConnect)(nil)).Elem()
}

func (o ServiceKafkaConnectOutput) ToServiceKafkaConnectOutput() ServiceKafkaConnectOutput {
	return o
}

func (o ServiceKafkaConnectOutput) ToServiceKafkaConnectOutputWithContext(ctx context.Context) ServiceKafkaConnectOutput {
	return o
}

func (o ServiceKafkaConnectOutput) ToServiceKafkaConnectPtrOutput() ServiceKafkaConnectPtrOutput {
	return o.ToServiceKafkaConnectPtrOutputWithContext(context.Background())
}

func (o ServiceKafkaConnectOutput) ToServiceKafkaConnectPtrOutputWithContext(ctx context.Context) ServiceKafkaConnectPtrOutput {
	return o.ApplyT(func(v ServiceKafkaConnect) *ServiceKafkaConnect {
		return &v
	}).(ServiceKafkaConnectPtrOutput)
}

type ServiceKafkaConnectPtrOutput struct{ *pulumi.OutputState }

func (ServiceKafkaConnectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaConnect)(nil)).Elem()
}

func (o ServiceKafkaConnectPtrOutput) ToServiceKafkaConnectPtrOutput() ServiceKafkaConnectPtrOutput {
	return o
}

func (o ServiceKafkaConnectPtrOutput) ToServiceKafkaConnectPtrOutputWithContext(ctx context.Context) ServiceKafkaConnectPtrOutput {
	return o
}

func (o ServiceKafkaConnectPtrOutput) Elem() ServiceKafkaConnectOutput {
	return o.ApplyT(func(v *ServiceKafkaConnect) ServiceKafkaConnect { return *v }).(ServiceKafkaConnectOutput)
}

type ServiceKafkaConnectUserConfig struct {
	IpFilters         []string                                        `pulumi:"ipFilters"`
	KafkaConnect      *ServiceKafkaConnectUserConfigKafkaConnect      `pulumi:"kafkaConnect"`
	PrivateAccess     *ServiceKafkaConnectUserConfigPrivateAccess     `pulumi:"privateAccess"`
	PrivatelinkAccess *ServiceKafkaConnectUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	PublicAccess      *ServiceKafkaConnectUserConfigPublicAccess      `pulumi:"publicAccess"`
}

// ServiceKafkaConnectUserConfigInput is an input type that accepts ServiceKafkaConnectUserConfigArgs and ServiceKafkaConnectUserConfigOutput values.
// You can construct a concrete instance of `ServiceKafkaConnectUserConfigInput` via:
//
//          ServiceKafkaConnectUserConfigArgs{...}
type ServiceKafkaConnectUserConfigInput interface {
	pulumi.Input

	ToServiceKafkaConnectUserConfigOutput() ServiceKafkaConnectUserConfigOutput
	ToServiceKafkaConnectUserConfigOutputWithContext(context.Context) ServiceKafkaConnectUserConfigOutput
}

type ServiceKafkaConnectUserConfigArgs struct {
	IpFilters         pulumi.StringArrayInput                                `pulumi:"ipFilters"`
	KafkaConnect      ServiceKafkaConnectUserConfigKafkaConnectPtrInput      `pulumi:"kafkaConnect"`
	PrivateAccess     ServiceKafkaConnectUserConfigPrivateAccessPtrInput     `pulumi:"privateAccess"`
	PrivatelinkAccess ServiceKafkaConnectUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	PublicAccess      ServiceKafkaConnectUserConfigPublicAccessPtrInput      `pulumi:"publicAccess"`
}

func (ServiceKafkaConnectUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaConnectUserConfig)(nil)).Elem()
}

func (i ServiceKafkaConnectUserConfigArgs) ToServiceKafkaConnectUserConfigOutput() ServiceKafkaConnectUserConfigOutput {
	return i.ToServiceKafkaConnectUserConfigOutputWithContext(context.Background())
}

func (i ServiceKafkaConnectUserConfigArgs) ToServiceKafkaConnectUserConfigOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaConnectUserConfigOutput)
}

func (i ServiceKafkaConnectUserConfigArgs) ToServiceKafkaConnectUserConfigPtrOutput() ServiceKafkaConnectUserConfigPtrOutput {
	return i.ToServiceKafkaConnectUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceKafkaConnectUserConfigArgs) ToServiceKafkaConnectUserConfigPtrOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaConnectUserConfigOutput).ToServiceKafkaConnectUserConfigPtrOutputWithContext(ctx)
}

// ServiceKafkaConnectUserConfigPtrInput is an input type that accepts ServiceKafkaConnectUserConfigArgs, ServiceKafkaConnectUserConfigPtr and ServiceKafkaConnectUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceKafkaConnectUserConfigPtrInput` via:
//
//          ServiceKafkaConnectUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceKafkaConnectUserConfigPtrInput interface {
	pulumi.Input

	ToServiceKafkaConnectUserConfigPtrOutput() ServiceKafkaConnectUserConfigPtrOutput
	ToServiceKafkaConnectUserConfigPtrOutputWithContext(context.Context) ServiceKafkaConnectUserConfigPtrOutput
}

type serviceKafkaConnectUserConfigPtrType ServiceKafkaConnectUserConfigArgs

func ServiceKafkaConnectUserConfigPtr(v *ServiceKafkaConnectUserConfigArgs) ServiceKafkaConnectUserConfigPtrInput {
	return (*serviceKafkaConnectUserConfigPtrType)(v)
}

func (*serviceKafkaConnectUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaConnectUserConfig)(nil)).Elem()
}

func (i *serviceKafkaConnectUserConfigPtrType) ToServiceKafkaConnectUserConfigPtrOutput() ServiceKafkaConnectUserConfigPtrOutput {
	return i.ToServiceKafkaConnectUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceKafkaConnectUserConfigPtrType) ToServiceKafkaConnectUserConfigPtrOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaConnectUserConfigPtrOutput)
}

type ServiceKafkaConnectUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceKafkaConnectUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaConnectUserConfig)(nil)).Elem()
}

func (o ServiceKafkaConnectUserConfigOutput) ToServiceKafkaConnectUserConfigOutput() ServiceKafkaConnectUserConfigOutput {
	return o
}

func (o ServiceKafkaConnectUserConfigOutput) ToServiceKafkaConnectUserConfigOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigOutput {
	return o
}

func (o ServiceKafkaConnectUserConfigOutput) ToServiceKafkaConnectUserConfigPtrOutput() ServiceKafkaConnectUserConfigPtrOutput {
	return o.ToServiceKafkaConnectUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceKafkaConnectUserConfigOutput) ToServiceKafkaConnectUserConfigPtrOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceKafkaConnectUserConfig) *ServiceKafkaConnectUserConfig {
		return &v
	}).(ServiceKafkaConnectUserConfigPtrOutput)
}
func (o ServiceKafkaConnectUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceKafkaConnectUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

func (o ServiceKafkaConnectUserConfigOutput) KafkaConnect() ServiceKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o.ApplyT(func(v ServiceKafkaConnectUserConfig) *ServiceKafkaConnectUserConfigKafkaConnect {
		return v.KafkaConnect
	}).(ServiceKafkaConnectUserConfigKafkaConnectPtrOutput)
}

func (o ServiceKafkaConnectUserConfigOutput) PrivateAccess() ServiceKafkaConnectUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v ServiceKafkaConnectUserConfig) *ServiceKafkaConnectUserConfigPrivateAccess {
		return v.PrivateAccess
	}).(ServiceKafkaConnectUserConfigPrivateAccessPtrOutput)
}

func (o ServiceKafkaConnectUserConfigOutput) PrivatelinkAccess() ServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v ServiceKafkaConnectUserConfig) *ServiceKafkaConnectUserConfigPrivatelinkAccess {
		return v.PrivatelinkAccess
	}).(ServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput)
}

func (o ServiceKafkaConnectUserConfigOutput) PublicAccess() ServiceKafkaConnectUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v ServiceKafkaConnectUserConfig) *ServiceKafkaConnectUserConfigPublicAccess {
		return v.PublicAccess
	}).(ServiceKafkaConnectUserConfigPublicAccessPtrOutput)
}

type ServiceKafkaConnectUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceKafkaConnectUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaConnectUserConfig)(nil)).Elem()
}

func (o ServiceKafkaConnectUserConfigPtrOutput) ToServiceKafkaConnectUserConfigPtrOutput() ServiceKafkaConnectUserConfigPtrOutput {
	return o
}

func (o ServiceKafkaConnectUserConfigPtrOutput) ToServiceKafkaConnectUserConfigPtrOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigPtrOutput {
	return o
}

func (o ServiceKafkaConnectUserConfigPtrOutput) Elem() ServiceKafkaConnectUserConfigOutput {
	return o.ApplyT(func(v *ServiceKafkaConnectUserConfig) ServiceKafkaConnectUserConfig { return *v }).(ServiceKafkaConnectUserConfigOutput)
}

func (o ServiceKafkaConnectUserConfigPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceKafkaConnectUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

func (o ServiceKafkaConnectUserConfigPtrOutput) KafkaConnect() ServiceKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaConnectUserConfig) *ServiceKafkaConnectUserConfigKafkaConnect {
		if v == nil {
			return nil
		}
		return v.KafkaConnect
	}).(ServiceKafkaConnectUserConfigKafkaConnectPtrOutput)
}

func (o ServiceKafkaConnectUserConfigPtrOutput) PrivateAccess() ServiceKafkaConnectUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaConnectUserConfig) *ServiceKafkaConnectUserConfigPrivateAccess {
		if v == nil {
			return nil
		}
		return v.PrivateAccess
	}).(ServiceKafkaConnectUserConfigPrivateAccessPtrOutput)
}

func (o ServiceKafkaConnectUserConfigPtrOutput) PrivatelinkAccess() ServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaConnectUserConfig) *ServiceKafkaConnectUserConfigPrivatelinkAccess {
		if v == nil {
			return nil
		}
		return v.PrivatelinkAccess
	}).(ServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput)
}

func (o ServiceKafkaConnectUserConfigPtrOutput) PublicAccess() ServiceKafkaConnectUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaConnectUserConfig) *ServiceKafkaConnectUserConfigPublicAccess {
		if v == nil {
			return nil
		}
		return v.PublicAccess
	}).(ServiceKafkaConnectUserConfigPublicAccessPtrOutput)
}

type ServiceKafkaConnectUserConfigKafkaConnect struct {
	ConnectorClientConfigOverridePolicy *string `pulumi:"connectorClientConfigOverridePolicy"`
	ConsumerAutoOffsetReset             *string `pulumi:"consumerAutoOffsetReset"`
	ConsumerFetchMaxBytes               *string `pulumi:"consumerFetchMaxBytes"`
	ConsumerIsolationLevel              *string `pulumi:"consumerIsolationLevel"`
	ConsumerMaxPartitionFetchBytes      *string `pulumi:"consumerMaxPartitionFetchBytes"`
	ConsumerMaxPollIntervalMs           *string `pulumi:"consumerMaxPollIntervalMs"`
	ConsumerMaxPollRecords              *string `pulumi:"consumerMaxPollRecords"`
	OffsetFlushIntervalMs               *string `pulumi:"offsetFlushIntervalMs"`
	OffsetFlushTimeoutMs                *string `pulumi:"offsetFlushTimeoutMs"`
	ProducerMaxRequestSize              *string `pulumi:"producerMaxRequestSize"`
	SessionTimeoutMs                    *string `pulumi:"sessionTimeoutMs"`
}

// ServiceKafkaConnectUserConfigKafkaConnectInput is an input type that accepts ServiceKafkaConnectUserConfigKafkaConnectArgs and ServiceKafkaConnectUserConfigKafkaConnectOutput values.
// You can construct a concrete instance of `ServiceKafkaConnectUserConfigKafkaConnectInput` via:
//
//          ServiceKafkaConnectUserConfigKafkaConnectArgs{...}
type ServiceKafkaConnectUserConfigKafkaConnectInput interface {
	pulumi.Input

	ToServiceKafkaConnectUserConfigKafkaConnectOutput() ServiceKafkaConnectUserConfigKafkaConnectOutput
	ToServiceKafkaConnectUserConfigKafkaConnectOutputWithContext(context.Context) ServiceKafkaConnectUserConfigKafkaConnectOutput
}

type ServiceKafkaConnectUserConfigKafkaConnectArgs struct {
	ConnectorClientConfigOverridePolicy pulumi.StringPtrInput `pulumi:"connectorClientConfigOverridePolicy"`
	ConsumerAutoOffsetReset             pulumi.StringPtrInput `pulumi:"consumerAutoOffsetReset"`
	ConsumerFetchMaxBytes               pulumi.StringPtrInput `pulumi:"consumerFetchMaxBytes"`
	ConsumerIsolationLevel              pulumi.StringPtrInput `pulumi:"consumerIsolationLevel"`
	ConsumerMaxPartitionFetchBytes      pulumi.StringPtrInput `pulumi:"consumerMaxPartitionFetchBytes"`
	ConsumerMaxPollIntervalMs           pulumi.StringPtrInput `pulumi:"consumerMaxPollIntervalMs"`
	ConsumerMaxPollRecords              pulumi.StringPtrInput `pulumi:"consumerMaxPollRecords"`
	OffsetFlushIntervalMs               pulumi.StringPtrInput `pulumi:"offsetFlushIntervalMs"`
	OffsetFlushTimeoutMs                pulumi.StringPtrInput `pulumi:"offsetFlushTimeoutMs"`
	ProducerMaxRequestSize              pulumi.StringPtrInput `pulumi:"producerMaxRequestSize"`
	SessionTimeoutMs                    pulumi.StringPtrInput `pulumi:"sessionTimeoutMs"`
}

func (ServiceKafkaConnectUserConfigKafkaConnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaConnectUserConfigKafkaConnect)(nil)).Elem()
}

func (i ServiceKafkaConnectUserConfigKafkaConnectArgs) ToServiceKafkaConnectUserConfigKafkaConnectOutput() ServiceKafkaConnectUserConfigKafkaConnectOutput {
	return i.ToServiceKafkaConnectUserConfigKafkaConnectOutputWithContext(context.Background())
}

func (i ServiceKafkaConnectUserConfigKafkaConnectArgs) ToServiceKafkaConnectUserConfigKafkaConnectOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigKafkaConnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaConnectUserConfigKafkaConnectOutput)
}

func (i ServiceKafkaConnectUserConfigKafkaConnectArgs) ToServiceKafkaConnectUserConfigKafkaConnectPtrOutput() ServiceKafkaConnectUserConfigKafkaConnectPtrOutput {
	return i.ToServiceKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(context.Background())
}

func (i ServiceKafkaConnectUserConfigKafkaConnectArgs) ToServiceKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigKafkaConnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaConnectUserConfigKafkaConnectOutput).ToServiceKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx)
}

// ServiceKafkaConnectUserConfigKafkaConnectPtrInput is an input type that accepts ServiceKafkaConnectUserConfigKafkaConnectArgs, ServiceKafkaConnectUserConfigKafkaConnectPtr and ServiceKafkaConnectUserConfigKafkaConnectPtrOutput values.
// You can construct a concrete instance of `ServiceKafkaConnectUserConfigKafkaConnectPtrInput` via:
//
//          ServiceKafkaConnectUserConfigKafkaConnectArgs{...}
//
//  or:
//
//          nil
type ServiceKafkaConnectUserConfigKafkaConnectPtrInput interface {
	pulumi.Input

	ToServiceKafkaConnectUserConfigKafkaConnectPtrOutput() ServiceKafkaConnectUserConfigKafkaConnectPtrOutput
	ToServiceKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(context.Context) ServiceKafkaConnectUserConfigKafkaConnectPtrOutput
}

type serviceKafkaConnectUserConfigKafkaConnectPtrType ServiceKafkaConnectUserConfigKafkaConnectArgs

func ServiceKafkaConnectUserConfigKafkaConnectPtr(v *ServiceKafkaConnectUserConfigKafkaConnectArgs) ServiceKafkaConnectUserConfigKafkaConnectPtrInput {
	return (*serviceKafkaConnectUserConfigKafkaConnectPtrType)(v)
}

func (*serviceKafkaConnectUserConfigKafkaConnectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaConnectUserConfigKafkaConnect)(nil)).Elem()
}

func (i *serviceKafkaConnectUserConfigKafkaConnectPtrType) ToServiceKafkaConnectUserConfigKafkaConnectPtrOutput() ServiceKafkaConnectUserConfigKafkaConnectPtrOutput {
	return i.ToServiceKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(context.Background())
}

func (i *serviceKafkaConnectUserConfigKafkaConnectPtrType) ToServiceKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigKafkaConnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaConnectUserConfigKafkaConnectPtrOutput)
}

type ServiceKafkaConnectUserConfigKafkaConnectOutput struct{ *pulumi.OutputState }

func (ServiceKafkaConnectUserConfigKafkaConnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaConnectUserConfigKafkaConnect)(nil)).Elem()
}

func (o ServiceKafkaConnectUserConfigKafkaConnectOutput) ToServiceKafkaConnectUserConfigKafkaConnectOutput() ServiceKafkaConnectUserConfigKafkaConnectOutput {
	return o
}

func (o ServiceKafkaConnectUserConfigKafkaConnectOutput) ToServiceKafkaConnectUserConfigKafkaConnectOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigKafkaConnectOutput {
	return o
}

func (o ServiceKafkaConnectUserConfigKafkaConnectOutput) ToServiceKafkaConnectUserConfigKafkaConnectPtrOutput() ServiceKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o.ToServiceKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(context.Background())
}

func (o ServiceKafkaConnectUserConfigKafkaConnectOutput) ToServiceKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o.ApplyT(func(v ServiceKafkaConnectUserConfigKafkaConnect) *ServiceKafkaConnectUserConfigKafkaConnect {
		return &v
	}).(ServiceKafkaConnectUserConfigKafkaConnectPtrOutput)
}
func (o ServiceKafkaConnectUserConfigKafkaConnectOutput) ConnectorClientConfigOverridePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaConnectUserConfigKafkaConnect) *string {
		return v.ConnectorClientConfigOverridePolicy
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaConnectUserConfigKafkaConnectOutput) ConsumerAutoOffsetReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaConnectUserConfigKafkaConnect) *string { return v.ConsumerAutoOffsetReset }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaConnectUserConfigKafkaConnectOutput) ConsumerFetchMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaConnectUserConfigKafkaConnect) *string { return v.ConsumerFetchMaxBytes }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaConnectUserConfigKafkaConnectOutput) ConsumerIsolationLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaConnectUserConfigKafkaConnect) *string { return v.ConsumerIsolationLevel }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaConnectUserConfigKafkaConnectOutput) ConsumerMaxPartitionFetchBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaConnectUserConfigKafkaConnect) *string { return v.ConsumerMaxPartitionFetchBytes }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaConnectUserConfigKafkaConnectOutput) ConsumerMaxPollIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaConnectUserConfigKafkaConnect) *string { return v.ConsumerMaxPollIntervalMs }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaConnectUserConfigKafkaConnectOutput) ConsumerMaxPollRecords() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaConnectUserConfigKafkaConnect) *string { return v.ConsumerMaxPollRecords }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaConnectUserConfigKafkaConnectOutput) OffsetFlushIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaConnectUserConfigKafkaConnect) *string { return v.OffsetFlushIntervalMs }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaConnectUserConfigKafkaConnectOutput) OffsetFlushTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaConnectUserConfigKafkaConnect) *string { return v.OffsetFlushTimeoutMs }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaConnectUserConfigKafkaConnectOutput) ProducerMaxRequestSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaConnectUserConfigKafkaConnect) *string { return v.ProducerMaxRequestSize }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaConnectUserConfigKafkaConnectOutput) SessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaConnectUserConfigKafkaConnect) *string { return v.SessionTimeoutMs }).(pulumi.StringPtrOutput)
}

type ServiceKafkaConnectUserConfigKafkaConnectPtrOutput struct{ *pulumi.OutputState }

func (ServiceKafkaConnectUserConfigKafkaConnectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaConnectUserConfigKafkaConnect)(nil)).Elem()
}

func (o ServiceKafkaConnectUserConfigKafkaConnectPtrOutput) ToServiceKafkaConnectUserConfigKafkaConnectPtrOutput() ServiceKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o
}

func (o ServiceKafkaConnectUserConfigKafkaConnectPtrOutput) ToServiceKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o
}

func (o ServiceKafkaConnectUserConfigKafkaConnectPtrOutput) Elem() ServiceKafkaConnectUserConfigKafkaConnectOutput {
	return o.ApplyT(func(v *ServiceKafkaConnectUserConfigKafkaConnect) ServiceKafkaConnectUserConfigKafkaConnect {
		return *v
	}).(ServiceKafkaConnectUserConfigKafkaConnectOutput)
}

func (o ServiceKafkaConnectUserConfigKafkaConnectPtrOutput) ConnectorClientConfigOverridePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorClientConfigOverridePolicy
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaConnectUserConfigKafkaConnectPtrOutput) ConsumerAutoOffsetReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerAutoOffsetReset
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaConnectUserConfigKafkaConnectPtrOutput) ConsumerFetchMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerFetchMaxBytes
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaConnectUserConfigKafkaConnectPtrOutput) ConsumerIsolationLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerIsolationLevel
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaConnectUserConfigKafkaConnectPtrOutput) ConsumerMaxPartitionFetchBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerMaxPartitionFetchBytes
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaConnectUserConfigKafkaConnectPtrOutput) ConsumerMaxPollIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerMaxPollIntervalMs
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaConnectUserConfigKafkaConnectPtrOutput) ConsumerMaxPollRecords() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerMaxPollRecords
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaConnectUserConfigKafkaConnectPtrOutput) OffsetFlushIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.OffsetFlushIntervalMs
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaConnectUserConfigKafkaConnectPtrOutput) OffsetFlushTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.OffsetFlushTimeoutMs
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaConnectUserConfigKafkaConnectPtrOutput) ProducerMaxRequestSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ProducerMaxRequestSize
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaConnectUserConfigKafkaConnectPtrOutput) SessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.SessionTimeoutMs
	}).(pulumi.StringPtrOutput)
}

type ServiceKafkaConnectUserConfigPrivateAccess struct {
	KafkaConnect *string `pulumi:"kafkaConnect"`
	Prometheus   *string `pulumi:"prometheus"`
}

// ServiceKafkaConnectUserConfigPrivateAccessInput is an input type that accepts ServiceKafkaConnectUserConfigPrivateAccessArgs and ServiceKafkaConnectUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `ServiceKafkaConnectUserConfigPrivateAccessInput` via:
//
//          ServiceKafkaConnectUserConfigPrivateAccessArgs{...}
type ServiceKafkaConnectUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToServiceKafkaConnectUserConfigPrivateAccessOutput() ServiceKafkaConnectUserConfigPrivateAccessOutput
	ToServiceKafkaConnectUserConfigPrivateAccessOutputWithContext(context.Context) ServiceKafkaConnectUserConfigPrivateAccessOutput
}

type ServiceKafkaConnectUserConfigPrivateAccessArgs struct {
	KafkaConnect pulumi.StringPtrInput `pulumi:"kafkaConnect"`
	Prometheus   pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (ServiceKafkaConnectUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaConnectUserConfigPrivateAccess)(nil)).Elem()
}

func (i ServiceKafkaConnectUserConfigPrivateAccessArgs) ToServiceKafkaConnectUserConfigPrivateAccessOutput() ServiceKafkaConnectUserConfigPrivateAccessOutput {
	return i.ToServiceKafkaConnectUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i ServiceKafkaConnectUserConfigPrivateAccessArgs) ToServiceKafkaConnectUserConfigPrivateAccessOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaConnectUserConfigPrivateAccessOutput)
}

func (i ServiceKafkaConnectUserConfigPrivateAccessArgs) ToServiceKafkaConnectUserConfigPrivateAccessPtrOutput() ServiceKafkaConnectUserConfigPrivateAccessPtrOutput {
	return i.ToServiceKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i ServiceKafkaConnectUserConfigPrivateAccessArgs) ToServiceKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaConnectUserConfigPrivateAccessOutput).ToServiceKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// ServiceKafkaConnectUserConfigPrivateAccessPtrInput is an input type that accepts ServiceKafkaConnectUserConfigPrivateAccessArgs, ServiceKafkaConnectUserConfigPrivateAccessPtr and ServiceKafkaConnectUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `ServiceKafkaConnectUserConfigPrivateAccessPtrInput` via:
//
//          ServiceKafkaConnectUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type ServiceKafkaConnectUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToServiceKafkaConnectUserConfigPrivateAccessPtrOutput() ServiceKafkaConnectUserConfigPrivateAccessPtrOutput
	ToServiceKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(context.Context) ServiceKafkaConnectUserConfigPrivateAccessPtrOutput
}

type serviceKafkaConnectUserConfigPrivateAccessPtrType ServiceKafkaConnectUserConfigPrivateAccessArgs

func ServiceKafkaConnectUserConfigPrivateAccessPtr(v *ServiceKafkaConnectUserConfigPrivateAccessArgs) ServiceKafkaConnectUserConfigPrivateAccessPtrInput {
	return (*serviceKafkaConnectUserConfigPrivateAccessPtrType)(v)
}

func (*serviceKafkaConnectUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaConnectUserConfigPrivateAccess)(nil)).Elem()
}

func (i *serviceKafkaConnectUserConfigPrivateAccessPtrType) ToServiceKafkaConnectUserConfigPrivateAccessPtrOutput() ServiceKafkaConnectUserConfigPrivateAccessPtrOutput {
	return i.ToServiceKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *serviceKafkaConnectUserConfigPrivateAccessPtrType) ToServiceKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaConnectUserConfigPrivateAccessPtrOutput)
}

type ServiceKafkaConnectUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (ServiceKafkaConnectUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaConnectUserConfigPrivateAccess)(nil)).Elem()
}

func (o ServiceKafkaConnectUserConfigPrivateAccessOutput) ToServiceKafkaConnectUserConfigPrivateAccessOutput() ServiceKafkaConnectUserConfigPrivateAccessOutput {
	return o
}

func (o ServiceKafkaConnectUserConfigPrivateAccessOutput) ToServiceKafkaConnectUserConfigPrivateAccessOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigPrivateAccessOutput {
	return o
}

func (o ServiceKafkaConnectUserConfigPrivateAccessOutput) ToServiceKafkaConnectUserConfigPrivateAccessPtrOutput() ServiceKafkaConnectUserConfigPrivateAccessPtrOutput {
	return o.ToServiceKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o ServiceKafkaConnectUserConfigPrivateAccessOutput) ToServiceKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v ServiceKafkaConnectUserConfigPrivateAccess) *ServiceKafkaConnectUserConfigPrivateAccess {
		return &v
	}).(ServiceKafkaConnectUserConfigPrivateAccessPtrOutput)
}
func (o ServiceKafkaConnectUserConfigPrivateAccessOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaConnectUserConfigPrivateAccess) *string { return v.KafkaConnect }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaConnectUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaConnectUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type ServiceKafkaConnectUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (ServiceKafkaConnectUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaConnectUserConfigPrivateAccess)(nil)).Elem()
}

func (o ServiceKafkaConnectUserConfigPrivateAccessPtrOutput) ToServiceKafkaConnectUserConfigPrivateAccessPtrOutput() ServiceKafkaConnectUserConfigPrivateAccessPtrOutput {
	return o
}

func (o ServiceKafkaConnectUserConfigPrivateAccessPtrOutput) ToServiceKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigPrivateAccessPtrOutput {
	return o
}

func (o ServiceKafkaConnectUserConfigPrivateAccessPtrOutput) Elem() ServiceKafkaConnectUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *ServiceKafkaConnectUserConfigPrivateAccess) ServiceKafkaConnectUserConfigPrivateAccess {
		return *v
	}).(ServiceKafkaConnectUserConfigPrivateAccessOutput)
}

func (o ServiceKafkaConnectUserConfigPrivateAccessPtrOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaConnectUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaConnect
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaConnectUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaConnectUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type ServiceKafkaConnectUserConfigPrivatelinkAccess struct {
	KafkaConnect *string `pulumi:"kafkaConnect"`
}

// ServiceKafkaConnectUserConfigPrivatelinkAccessInput is an input type that accepts ServiceKafkaConnectUserConfigPrivatelinkAccessArgs and ServiceKafkaConnectUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `ServiceKafkaConnectUserConfigPrivatelinkAccessInput` via:
//
//          ServiceKafkaConnectUserConfigPrivatelinkAccessArgs{...}
type ServiceKafkaConnectUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToServiceKafkaConnectUserConfigPrivatelinkAccessOutput() ServiceKafkaConnectUserConfigPrivatelinkAccessOutput
	ToServiceKafkaConnectUserConfigPrivatelinkAccessOutputWithContext(context.Context) ServiceKafkaConnectUserConfigPrivatelinkAccessOutput
}

type ServiceKafkaConnectUserConfigPrivatelinkAccessArgs struct {
	KafkaConnect pulumi.StringPtrInput `pulumi:"kafkaConnect"`
}

func (ServiceKafkaConnectUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaConnectUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i ServiceKafkaConnectUserConfigPrivatelinkAccessArgs) ToServiceKafkaConnectUserConfigPrivatelinkAccessOutput() ServiceKafkaConnectUserConfigPrivatelinkAccessOutput {
	return i.ToServiceKafkaConnectUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i ServiceKafkaConnectUserConfigPrivatelinkAccessArgs) ToServiceKafkaConnectUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaConnectUserConfigPrivatelinkAccessOutput)
}

func (i ServiceKafkaConnectUserConfigPrivatelinkAccessArgs) ToServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput() ServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return i.ToServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i ServiceKafkaConnectUserConfigPrivatelinkAccessArgs) ToServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaConnectUserConfigPrivatelinkAccessOutput).ToServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// ServiceKafkaConnectUserConfigPrivatelinkAccessPtrInput is an input type that accepts ServiceKafkaConnectUserConfigPrivatelinkAccessArgs, ServiceKafkaConnectUserConfigPrivatelinkAccessPtr and ServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `ServiceKafkaConnectUserConfigPrivatelinkAccessPtrInput` via:
//
//          ServiceKafkaConnectUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type ServiceKafkaConnectUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput() ServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput
	ToServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) ServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput
}

type serviceKafkaConnectUserConfigPrivatelinkAccessPtrType ServiceKafkaConnectUserConfigPrivatelinkAccessArgs

func ServiceKafkaConnectUserConfigPrivatelinkAccessPtr(v *ServiceKafkaConnectUserConfigPrivatelinkAccessArgs) ServiceKafkaConnectUserConfigPrivatelinkAccessPtrInput {
	return (*serviceKafkaConnectUserConfigPrivatelinkAccessPtrType)(v)
}

func (*serviceKafkaConnectUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaConnectUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *serviceKafkaConnectUserConfigPrivatelinkAccessPtrType) ToServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput() ServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return i.ToServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *serviceKafkaConnectUserConfigPrivatelinkAccessPtrType) ToServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput)
}

type ServiceKafkaConnectUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (ServiceKafkaConnectUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaConnectUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o ServiceKafkaConnectUserConfigPrivatelinkAccessOutput) ToServiceKafkaConnectUserConfigPrivatelinkAccessOutput() ServiceKafkaConnectUserConfigPrivatelinkAccessOutput {
	return o
}

func (o ServiceKafkaConnectUserConfigPrivatelinkAccessOutput) ToServiceKafkaConnectUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigPrivatelinkAccessOutput {
	return o
}

func (o ServiceKafkaConnectUserConfigPrivatelinkAccessOutput) ToServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput() ServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return o.ToServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o ServiceKafkaConnectUserConfigPrivatelinkAccessOutput) ToServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v ServiceKafkaConnectUserConfigPrivatelinkAccess) *ServiceKafkaConnectUserConfigPrivatelinkAccess {
		return &v
	}).(ServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput)
}
func (o ServiceKafkaConnectUserConfigPrivatelinkAccessOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaConnectUserConfigPrivatelinkAccess) *string { return v.KafkaConnect }).(pulumi.StringPtrOutput)
}

type ServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (ServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaConnectUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o ServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput) ToServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput() ServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o ServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput) ToServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o ServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput) Elem() ServiceKafkaConnectUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *ServiceKafkaConnectUserConfigPrivatelinkAccess) ServiceKafkaConnectUserConfigPrivatelinkAccess {
		return *v
	}).(ServiceKafkaConnectUserConfigPrivatelinkAccessOutput)
}

func (o ServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaConnectUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaConnect
	}).(pulumi.StringPtrOutput)
}

type ServiceKafkaConnectUserConfigPublicAccess struct {
	KafkaConnect *string `pulumi:"kafkaConnect"`
	Prometheus   *string `pulumi:"prometheus"`
}

// ServiceKafkaConnectUserConfigPublicAccessInput is an input type that accepts ServiceKafkaConnectUserConfigPublicAccessArgs and ServiceKafkaConnectUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `ServiceKafkaConnectUserConfigPublicAccessInput` via:
//
//          ServiceKafkaConnectUserConfigPublicAccessArgs{...}
type ServiceKafkaConnectUserConfigPublicAccessInput interface {
	pulumi.Input

	ToServiceKafkaConnectUserConfigPublicAccessOutput() ServiceKafkaConnectUserConfigPublicAccessOutput
	ToServiceKafkaConnectUserConfigPublicAccessOutputWithContext(context.Context) ServiceKafkaConnectUserConfigPublicAccessOutput
}

type ServiceKafkaConnectUserConfigPublicAccessArgs struct {
	KafkaConnect pulumi.StringPtrInput `pulumi:"kafkaConnect"`
	Prometheus   pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (ServiceKafkaConnectUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaConnectUserConfigPublicAccess)(nil)).Elem()
}

func (i ServiceKafkaConnectUserConfigPublicAccessArgs) ToServiceKafkaConnectUserConfigPublicAccessOutput() ServiceKafkaConnectUserConfigPublicAccessOutput {
	return i.ToServiceKafkaConnectUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i ServiceKafkaConnectUserConfigPublicAccessArgs) ToServiceKafkaConnectUserConfigPublicAccessOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaConnectUserConfigPublicAccessOutput)
}

func (i ServiceKafkaConnectUserConfigPublicAccessArgs) ToServiceKafkaConnectUserConfigPublicAccessPtrOutput() ServiceKafkaConnectUserConfigPublicAccessPtrOutput {
	return i.ToServiceKafkaConnectUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i ServiceKafkaConnectUserConfigPublicAccessArgs) ToServiceKafkaConnectUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaConnectUserConfigPublicAccessOutput).ToServiceKafkaConnectUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// ServiceKafkaConnectUserConfigPublicAccessPtrInput is an input type that accepts ServiceKafkaConnectUserConfigPublicAccessArgs, ServiceKafkaConnectUserConfigPublicAccessPtr and ServiceKafkaConnectUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `ServiceKafkaConnectUserConfigPublicAccessPtrInput` via:
//
//          ServiceKafkaConnectUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type ServiceKafkaConnectUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToServiceKafkaConnectUserConfigPublicAccessPtrOutput() ServiceKafkaConnectUserConfigPublicAccessPtrOutput
	ToServiceKafkaConnectUserConfigPublicAccessPtrOutputWithContext(context.Context) ServiceKafkaConnectUserConfigPublicAccessPtrOutput
}

type serviceKafkaConnectUserConfigPublicAccessPtrType ServiceKafkaConnectUserConfigPublicAccessArgs

func ServiceKafkaConnectUserConfigPublicAccessPtr(v *ServiceKafkaConnectUserConfigPublicAccessArgs) ServiceKafkaConnectUserConfigPublicAccessPtrInput {
	return (*serviceKafkaConnectUserConfigPublicAccessPtrType)(v)
}

func (*serviceKafkaConnectUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaConnectUserConfigPublicAccess)(nil)).Elem()
}

func (i *serviceKafkaConnectUserConfigPublicAccessPtrType) ToServiceKafkaConnectUserConfigPublicAccessPtrOutput() ServiceKafkaConnectUserConfigPublicAccessPtrOutput {
	return i.ToServiceKafkaConnectUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *serviceKafkaConnectUserConfigPublicAccessPtrType) ToServiceKafkaConnectUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaConnectUserConfigPublicAccessPtrOutput)
}

type ServiceKafkaConnectUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (ServiceKafkaConnectUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaConnectUserConfigPublicAccess)(nil)).Elem()
}

func (o ServiceKafkaConnectUserConfigPublicAccessOutput) ToServiceKafkaConnectUserConfigPublicAccessOutput() ServiceKafkaConnectUserConfigPublicAccessOutput {
	return o
}

func (o ServiceKafkaConnectUserConfigPublicAccessOutput) ToServiceKafkaConnectUserConfigPublicAccessOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigPublicAccessOutput {
	return o
}

func (o ServiceKafkaConnectUserConfigPublicAccessOutput) ToServiceKafkaConnectUserConfigPublicAccessPtrOutput() ServiceKafkaConnectUserConfigPublicAccessPtrOutput {
	return o.ToServiceKafkaConnectUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o ServiceKafkaConnectUserConfigPublicAccessOutput) ToServiceKafkaConnectUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v ServiceKafkaConnectUserConfigPublicAccess) *ServiceKafkaConnectUserConfigPublicAccess {
		return &v
	}).(ServiceKafkaConnectUserConfigPublicAccessPtrOutput)
}
func (o ServiceKafkaConnectUserConfigPublicAccessOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaConnectUserConfigPublicAccess) *string { return v.KafkaConnect }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaConnectUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaConnectUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type ServiceKafkaConnectUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (ServiceKafkaConnectUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaConnectUserConfigPublicAccess)(nil)).Elem()
}

func (o ServiceKafkaConnectUserConfigPublicAccessPtrOutput) ToServiceKafkaConnectUserConfigPublicAccessPtrOutput() ServiceKafkaConnectUserConfigPublicAccessPtrOutput {
	return o
}

func (o ServiceKafkaConnectUserConfigPublicAccessPtrOutput) ToServiceKafkaConnectUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceKafkaConnectUserConfigPublicAccessPtrOutput {
	return o
}

func (o ServiceKafkaConnectUserConfigPublicAccessPtrOutput) Elem() ServiceKafkaConnectUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *ServiceKafkaConnectUserConfigPublicAccess) ServiceKafkaConnectUserConfigPublicAccess {
		return *v
	}).(ServiceKafkaConnectUserConfigPublicAccessOutput)
}

func (o ServiceKafkaConnectUserConfigPublicAccessPtrOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaConnectUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaConnect
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaConnectUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaConnectUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type ServiceKafkaMirrormaker struct {
}

// ServiceKafkaMirrormakerInput is an input type that accepts ServiceKafkaMirrormakerArgs and ServiceKafkaMirrormakerOutput values.
// You can construct a concrete instance of `ServiceKafkaMirrormakerInput` via:
//
//          ServiceKafkaMirrormakerArgs{...}
type ServiceKafkaMirrormakerInput interface {
	pulumi.Input

	ToServiceKafkaMirrormakerOutput() ServiceKafkaMirrormakerOutput
	ToServiceKafkaMirrormakerOutputWithContext(context.Context) ServiceKafkaMirrormakerOutput
}

type ServiceKafkaMirrormakerArgs struct {
}

func (ServiceKafkaMirrormakerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaMirrormaker)(nil)).Elem()
}

func (i ServiceKafkaMirrormakerArgs) ToServiceKafkaMirrormakerOutput() ServiceKafkaMirrormakerOutput {
	return i.ToServiceKafkaMirrormakerOutputWithContext(context.Background())
}

func (i ServiceKafkaMirrormakerArgs) ToServiceKafkaMirrormakerOutputWithContext(ctx context.Context) ServiceKafkaMirrormakerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaMirrormakerOutput)
}

func (i ServiceKafkaMirrormakerArgs) ToServiceKafkaMirrormakerPtrOutput() ServiceKafkaMirrormakerPtrOutput {
	return i.ToServiceKafkaMirrormakerPtrOutputWithContext(context.Background())
}

func (i ServiceKafkaMirrormakerArgs) ToServiceKafkaMirrormakerPtrOutputWithContext(ctx context.Context) ServiceKafkaMirrormakerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaMirrormakerOutput).ToServiceKafkaMirrormakerPtrOutputWithContext(ctx)
}

// ServiceKafkaMirrormakerPtrInput is an input type that accepts ServiceKafkaMirrormakerArgs, ServiceKafkaMirrormakerPtr and ServiceKafkaMirrormakerPtrOutput values.
// You can construct a concrete instance of `ServiceKafkaMirrormakerPtrInput` via:
//
//          ServiceKafkaMirrormakerArgs{...}
//
//  or:
//
//          nil
type ServiceKafkaMirrormakerPtrInput interface {
	pulumi.Input

	ToServiceKafkaMirrormakerPtrOutput() ServiceKafkaMirrormakerPtrOutput
	ToServiceKafkaMirrormakerPtrOutputWithContext(context.Context) ServiceKafkaMirrormakerPtrOutput
}

type serviceKafkaMirrormakerPtrType ServiceKafkaMirrormakerArgs

func ServiceKafkaMirrormakerPtr(v *ServiceKafkaMirrormakerArgs) ServiceKafkaMirrormakerPtrInput {
	return (*serviceKafkaMirrormakerPtrType)(v)
}

func (*serviceKafkaMirrormakerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaMirrormaker)(nil)).Elem()
}

func (i *serviceKafkaMirrormakerPtrType) ToServiceKafkaMirrormakerPtrOutput() ServiceKafkaMirrormakerPtrOutput {
	return i.ToServiceKafkaMirrormakerPtrOutputWithContext(context.Background())
}

func (i *serviceKafkaMirrormakerPtrType) ToServiceKafkaMirrormakerPtrOutputWithContext(ctx context.Context) ServiceKafkaMirrormakerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaMirrormakerPtrOutput)
}

type ServiceKafkaMirrormakerOutput struct{ *pulumi.OutputState }

func (ServiceKafkaMirrormakerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaMirrormaker)(nil)).Elem()
}

func (o ServiceKafkaMirrormakerOutput) ToServiceKafkaMirrormakerOutput() ServiceKafkaMirrormakerOutput {
	return o
}

func (o ServiceKafkaMirrormakerOutput) ToServiceKafkaMirrormakerOutputWithContext(ctx context.Context) ServiceKafkaMirrormakerOutput {
	return o
}

func (o ServiceKafkaMirrormakerOutput) ToServiceKafkaMirrormakerPtrOutput() ServiceKafkaMirrormakerPtrOutput {
	return o.ToServiceKafkaMirrormakerPtrOutputWithContext(context.Background())
}

func (o ServiceKafkaMirrormakerOutput) ToServiceKafkaMirrormakerPtrOutputWithContext(ctx context.Context) ServiceKafkaMirrormakerPtrOutput {
	return o.ApplyT(func(v ServiceKafkaMirrormaker) *ServiceKafkaMirrormaker {
		return &v
	}).(ServiceKafkaMirrormakerPtrOutput)
}

type ServiceKafkaMirrormakerPtrOutput struct{ *pulumi.OutputState }

func (ServiceKafkaMirrormakerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaMirrormaker)(nil)).Elem()
}

func (o ServiceKafkaMirrormakerPtrOutput) ToServiceKafkaMirrormakerPtrOutput() ServiceKafkaMirrormakerPtrOutput {
	return o
}

func (o ServiceKafkaMirrormakerPtrOutput) ToServiceKafkaMirrormakerPtrOutputWithContext(ctx context.Context) ServiceKafkaMirrormakerPtrOutput {
	return o
}

func (o ServiceKafkaMirrormakerPtrOutput) Elem() ServiceKafkaMirrormakerOutput {
	return o.ApplyT(func(v *ServiceKafkaMirrormaker) ServiceKafkaMirrormaker { return *v }).(ServiceKafkaMirrormakerOutput)
}

type ServiceKafkaMirrormakerUserConfig struct {
	IpFilters        []string                                           `pulumi:"ipFilters"`
	KafkaMirrormaker *ServiceKafkaMirrormakerUserConfigKafkaMirrormaker `pulumi:"kafkaMirrormaker"`
}

// ServiceKafkaMirrormakerUserConfigInput is an input type that accepts ServiceKafkaMirrormakerUserConfigArgs and ServiceKafkaMirrormakerUserConfigOutput values.
// You can construct a concrete instance of `ServiceKafkaMirrormakerUserConfigInput` via:
//
//          ServiceKafkaMirrormakerUserConfigArgs{...}
type ServiceKafkaMirrormakerUserConfigInput interface {
	pulumi.Input

	ToServiceKafkaMirrormakerUserConfigOutput() ServiceKafkaMirrormakerUserConfigOutput
	ToServiceKafkaMirrormakerUserConfigOutputWithContext(context.Context) ServiceKafkaMirrormakerUserConfigOutput
}

type ServiceKafkaMirrormakerUserConfigArgs struct {
	IpFilters        pulumi.StringArrayInput                                   `pulumi:"ipFilters"`
	KafkaMirrormaker ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrInput `pulumi:"kafkaMirrormaker"`
}

func (ServiceKafkaMirrormakerUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaMirrormakerUserConfig)(nil)).Elem()
}

func (i ServiceKafkaMirrormakerUserConfigArgs) ToServiceKafkaMirrormakerUserConfigOutput() ServiceKafkaMirrormakerUserConfigOutput {
	return i.ToServiceKafkaMirrormakerUserConfigOutputWithContext(context.Background())
}

func (i ServiceKafkaMirrormakerUserConfigArgs) ToServiceKafkaMirrormakerUserConfigOutputWithContext(ctx context.Context) ServiceKafkaMirrormakerUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaMirrormakerUserConfigOutput)
}

func (i ServiceKafkaMirrormakerUserConfigArgs) ToServiceKafkaMirrormakerUserConfigPtrOutput() ServiceKafkaMirrormakerUserConfigPtrOutput {
	return i.ToServiceKafkaMirrormakerUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceKafkaMirrormakerUserConfigArgs) ToServiceKafkaMirrormakerUserConfigPtrOutputWithContext(ctx context.Context) ServiceKafkaMirrormakerUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaMirrormakerUserConfigOutput).ToServiceKafkaMirrormakerUserConfigPtrOutputWithContext(ctx)
}

// ServiceKafkaMirrormakerUserConfigPtrInput is an input type that accepts ServiceKafkaMirrormakerUserConfigArgs, ServiceKafkaMirrormakerUserConfigPtr and ServiceKafkaMirrormakerUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceKafkaMirrormakerUserConfigPtrInput` via:
//
//          ServiceKafkaMirrormakerUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceKafkaMirrormakerUserConfigPtrInput interface {
	pulumi.Input

	ToServiceKafkaMirrormakerUserConfigPtrOutput() ServiceKafkaMirrormakerUserConfigPtrOutput
	ToServiceKafkaMirrormakerUserConfigPtrOutputWithContext(context.Context) ServiceKafkaMirrormakerUserConfigPtrOutput
}

type serviceKafkaMirrormakerUserConfigPtrType ServiceKafkaMirrormakerUserConfigArgs

func ServiceKafkaMirrormakerUserConfigPtr(v *ServiceKafkaMirrormakerUserConfigArgs) ServiceKafkaMirrormakerUserConfigPtrInput {
	return (*serviceKafkaMirrormakerUserConfigPtrType)(v)
}

func (*serviceKafkaMirrormakerUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaMirrormakerUserConfig)(nil)).Elem()
}

func (i *serviceKafkaMirrormakerUserConfigPtrType) ToServiceKafkaMirrormakerUserConfigPtrOutput() ServiceKafkaMirrormakerUserConfigPtrOutput {
	return i.ToServiceKafkaMirrormakerUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceKafkaMirrormakerUserConfigPtrType) ToServiceKafkaMirrormakerUserConfigPtrOutputWithContext(ctx context.Context) ServiceKafkaMirrormakerUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaMirrormakerUserConfigPtrOutput)
}

type ServiceKafkaMirrormakerUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceKafkaMirrormakerUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaMirrormakerUserConfig)(nil)).Elem()
}

func (o ServiceKafkaMirrormakerUserConfigOutput) ToServiceKafkaMirrormakerUserConfigOutput() ServiceKafkaMirrormakerUserConfigOutput {
	return o
}

func (o ServiceKafkaMirrormakerUserConfigOutput) ToServiceKafkaMirrormakerUserConfigOutputWithContext(ctx context.Context) ServiceKafkaMirrormakerUserConfigOutput {
	return o
}

func (o ServiceKafkaMirrormakerUserConfigOutput) ToServiceKafkaMirrormakerUserConfigPtrOutput() ServiceKafkaMirrormakerUserConfigPtrOutput {
	return o.ToServiceKafkaMirrormakerUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceKafkaMirrormakerUserConfigOutput) ToServiceKafkaMirrormakerUserConfigPtrOutputWithContext(ctx context.Context) ServiceKafkaMirrormakerUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceKafkaMirrormakerUserConfig) *ServiceKafkaMirrormakerUserConfig {
		return &v
	}).(ServiceKafkaMirrormakerUserConfigPtrOutput)
}
func (o ServiceKafkaMirrormakerUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceKafkaMirrormakerUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

func (o ServiceKafkaMirrormakerUserConfigOutput) KafkaMirrormaker() ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return o.ApplyT(func(v ServiceKafkaMirrormakerUserConfig) *ServiceKafkaMirrormakerUserConfigKafkaMirrormaker {
		return v.KafkaMirrormaker
	}).(ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput)
}

type ServiceKafkaMirrormakerUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceKafkaMirrormakerUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaMirrormakerUserConfig)(nil)).Elem()
}

func (o ServiceKafkaMirrormakerUserConfigPtrOutput) ToServiceKafkaMirrormakerUserConfigPtrOutput() ServiceKafkaMirrormakerUserConfigPtrOutput {
	return o
}

func (o ServiceKafkaMirrormakerUserConfigPtrOutput) ToServiceKafkaMirrormakerUserConfigPtrOutputWithContext(ctx context.Context) ServiceKafkaMirrormakerUserConfigPtrOutput {
	return o
}

func (o ServiceKafkaMirrormakerUserConfigPtrOutput) Elem() ServiceKafkaMirrormakerUserConfigOutput {
	return o.ApplyT(func(v *ServiceKafkaMirrormakerUserConfig) ServiceKafkaMirrormakerUserConfig { return *v }).(ServiceKafkaMirrormakerUserConfigOutput)
}

func (o ServiceKafkaMirrormakerUserConfigPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceKafkaMirrormakerUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

func (o ServiceKafkaMirrormakerUserConfigPtrOutput) KafkaMirrormaker() ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaMirrormakerUserConfig) *ServiceKafkaMirrormakerUserConfigKafkaMirrormaker {
		if v == nil {
			return nil
		}
		return v.KafkaMirrormaker
	}).(ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput)
}

type ServiceKafkaMirrormakerUserConfigKafkaMirrormaker struct {
	EmitCheckpointsEnabled          *string `pulumi:"emitCheckpointsEnabled"`
	EmitCheckpointsIntervalSeconds  *string `pulumi:"emitCheckpointsIntervalSeconds"`
	RefreshGroupsEnabled            *string `pulumi:"refreshGroupsEnabled"`
	RefreshGroupsIntervalSeconds    *string `pulumi:"refreshGroupsIntervalSeconds"`
	RefreshTopicsEnabled            *string `pulumi:"refreshTopicsEnabled"`
	RefreshTopicsIntervalSeconds    *string `pulumi:"refreshTopicsIntervalSeconds"`
	SyncGroupOffsetsEnabled         *string `pulumi:"syncGroupOffsetsEnabled"`
	SyncGroupOffsetsIntervalSeconds *string `pulumi:"syncGroupOffsetsIntervalSeconds"`
}

// ServiceKafkaMirrormakerUserConfigKafkaMirrormakerInput is an input type that accepts ServiceKafkaMirrormakerUserConfigKafkaMirrormakerArgs and ServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput values.
// You can construct a concrete instance of `ServiceKafkaMirrormakerUserConfigKafkaMirrormakerInput` via:
//
//          ServiceKafkaMirrormakerUserConfigKafkaMirrormakerArgs{...}
type ServiceKafkaMirrormakerUserConfigKafkaMirrormakerInput interface {
	pulumi.Input

	ToServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput() ServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput
	ToServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutputWithContext(context.Context) ServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput
}

type ServiceKafkaMirrormakerUserConfigKafkaMirrormakerArgs struct {
	EmitCheckpointsEnabled          pulumi.StringPtrInput `pulumi:"emitCheckpointsEnabled"`
	EmitCheckpointsIntervalSeconds  pulumi.StringPtrInput `pulumi:"emitCheckpointsIntervalSeconds"`
	RefreshGroupsEnabled            pulumi.StringPtrInput `pulumi:"refreshGroupsEnabled"`
	RefreshGroupsIntervalSeconds    pulumi.StringPtrInput `pulumi:"refreshGroupsIntervalSeconds"`
	RefreshTopicsEnabled            pulumi.StringPtrInput `pulumi:"refreshTopicsEnabled"`
	RefreshTopicsIntervalSeconds    pulumi.StringPtrInput `pulumi:"refreshTopicsIntervalSeconds"`
	SyncGroupOffsetsEnabled         pulumi.StringPtrInput `pulumi:"syncGroupOffsetsEnabled"`
	SyncGroupOffsetsIntervalSeconds pulumi.StringPtrInput `pulumi:"syncGroupOffsetsIntervalSeconds"`
}

func (ServiceKafkaMirrormakerUserConfigKafkaMirrormakerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaMirrormakerUserConfigKafkaMirrormaker)(nil)).Elem()
}

func (i ServiceKafkaMirrormakerUserConfigKafkaMirrormakerArgs) ToServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput() ServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput {
	return i.ToServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutputWithContext(context.Background())
}

func (i ServiceKafkaMirrormakerUserConfigKafkaMirrormakerArgs) ToServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutputWithContext(ctx context.Context) ServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput)
}

func (i ServiceKafkaMirrormakerUserConfigKafkaMirrormakerArgs) ToServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput() ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return i.ToServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(context.Background())
}

func (i ServiceKafkaMirrormakerUserConfigKafkaMirrormakerArgs) ToServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(ctx context.Context) ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput).ToServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(ctx)
}

// ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrInput is an input type that accepts ServiceKafkaMirrormakerUserConfigKafkaMirrormakerArgs, ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtr and ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput values.
// You can construct a concrete instance of `ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrInput` via:
//
//          ServiceKafkaMirrormakerUserConfigKafkaMirrormakerArgs{...}
//
//  or:
//
//          nil
type ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrInput interface {
	pulumi.Input

	ToServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput() ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput
	ToServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(context.Context) ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput
}

type serviceKafkaMirrormakerUserConfigKafkaMirrormakerPtrType ServiceKafkaMirrormakerUserConfigKafkaMirrormakerArgs

func ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtr(v *ServiceKafkaMirrormakerUserConfigKafkaMirrormakerArgs) ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrInput {
	return (*serviceKafkaMirrormakerUserConfigKafkaMirrormakerPtrType)(v)
}

func (*serviceKafkaMirrormakerUserConfigKafkaMirrormakerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaMirrormakerUserConfigKafkaMirrormaker)(nil)).Elem()
}

func (i *serviceKafkaMirrormakerUserConfigKafkaMirrormakerPtrType) ToServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput() ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return i.ToServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(context.Background())
}

func (i *serviceKafkaMirrormakerUserConfigKafkaMirrormakerPtrType) ToServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(ctx context.Context) ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput)
}

type ServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput struct{ *pulumi.OutputState }

func (ServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaMirrormakerUserConfigKafkaMirrormaker)(nil)).Elem()
}

func (o ServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput) ToServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput() ServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput {
	return o
}

func (o ServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput) ToServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutputWithContext(ctx context.Context) ServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput {
	return o
}

func (o ServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput) ToServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput() ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return o.ToServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(context.Background())
}

func (o ServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput) ToServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(ctx context.Context) ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return o.ApplyT(func(v ServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *ServiceKafkaMirrormakerUserConfigKafkaMirrormaker {
		return &v
	}).(ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput)
}
func (o ServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput) EmitCheckpointsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string { return v.EmitCheckpointsEnabled }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput) EmitCheckpointsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		return v.EmitCheckpointsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput) RefreshGroupsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string { return v.RefreshGroupsEnabled }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput) RefreshGroupsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		return v.RefreshGroupsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput) RefreshTopicsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string { return v.RefreshTopicsEnabled }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput) RefreshTopicsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		return v.RefreshTopicsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput) SyncGroupOffsetsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string { return v.SyncGroupOffsetsEnabled }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput) SyncGroupOffsetsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		return v.SyncGroupOffsetsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

type ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput struct{ *pulumi.OutputState }

func (ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaMirrormakerUserConfigKafkaMirrormaker)(nil)).Elem()
}

func (o ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) ToServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput() ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return o
}

func (o ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) ToServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(ctx context.Context) ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return o
}

func (o ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) Elem() ServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput {
	return o.ApplyT(func(v *ServiceKafkaMirrormakerUserConfigKafkaMirrormaker) ServiceKafkaMirrormakerUserConfigKafkaMirrormaker {
		return *v
	}).(ServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput)
}

func (o ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) EmitCheckpointsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.EmitCheckpointsEnabled
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) EmitCheckpointsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.EmitCheckpointsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) RefreshGroupsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.RefreshGroupsEnabled
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) RefreshGroupsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.RefreshGroupsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) RefreshTopicsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.RefreshTopicsEnabled
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) RefreshTopicsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.RefreshTopicsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) SyncGroupOffsetsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.SyncGroupOffsetsEnabled
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) SyncGroupOffsetsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.SyncGroupOffsetsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

type ServiceKafkaUserConfig struct {
	CustomDomain               *string                                           `pulumi:"customDomain"`
	IpFilters                  []string                                          `pulumi:"ipFilters"`
	Kafka                      *ServiceKafkaUserConfigKafka                      `pulumi:"kafka"`
	KafkaAuthenticationMethods *ServiceKafkaUserConfigKafkaAuthenticationMethods `pulumi:"kafkaAuthenticationMethods"`
	KafkaConnect               *string                                           `pulumi:"kafkaConnect"`
	KafkaConnectConfig         *ServiceKafkaUserConfigKafkaConnectConfig         `pulumi:"kafkaConnectConfig"`
	KafkaRest                  *string                                           `pulumi:"kafkaRest"`
	KafkaRestConfig            *ServiceKafkaUserConfigKafkaRestConfig            `pulumi:"kafkaRestConfig"`
	KafkaVersion               *string                                           `pulumi:"kafkaVersion"`
	PrivateAccess              *ServiceKafkaUserConfigPrivateAccess              `pulumi:"privateAccess"`
	PrivatelinkAccess          *ServiceKafkaUserConfigPrivatelinkAccess          `pulumi:"privatelinkAccess"`
	PublicAccess               *ServiceKafkaUserConfigPublicAccess               `pulumi:"publicAccess"`
	SchemaRegistry             *string                                           `pulumi:"schemaRegistry"`
	SchemaRegistryConfig       *ServiceKafkaUserConfigSchemaRegistryConfig       `pulumi:"schemaRegistryConfig"`
}

// ServiceKafkaUserConfigInput is an input type that accepts ServiceKafkaUserConfigArgs and ServiceKafkaUserConfigOutput values.
// You can construct a concrete instance of `ServiceKafkaUserConfigInput` via:
//
//          ServiceKafkaUserConfigArgs{...}
type ServiceKafkaUserConfigInput interface {
	pulumi.Input

	ToServiceKafkaUserConfigOutput() ServiceKafkaUserConfigOutput
	ToServiceKafkaUserConfigOutputWithContext(context.Context) ServiceKafkaUserConfigOutput
}

type ServiceKafkaUserConfigArgs struct {
	CustomDomain               pulumi.StringPtrInput                                    `pulumi:"customDomain"`
	IpFilters                  pulumi.StringArrayInput                                  `pulumi:"ipFilters"`
	Kafka                      ServiceKafkaUserConfigKafkaPtrInput                      `pulumi:"kafka"`
	KafkaAuthenticationMethods ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrInput `pulumi:"kafkaAuthenticationMethods"`
	KafkaConnect               pulumi.StringPtrInput                                    `pulumi:"kafkaConnect"`
	KafkaConnectConfig         ServiceKafkaUserConfigKafkaConnectConfigPtrInput         `pulumi:"kafkaConnectConfig"`
	KafkaRest                  pulumi.StringPtrInput                                    `pulumi:"kafkaRest"`
	KafkaRestConfig            ServiceKafkaUserConfigKafkaRestConfigPtrInput            `pulumi:"kafkaRestConfig"`
	KafkaVersion               pulumi.StringPtrInput                                    `pulumi:"kafkaVersion"`
	PrivateAccess              ServiceKafkaUserConfigPrivateAccessPtrInput              `pulumi:"privateAccess"`
	PrivatelinkAccess          ServiceKafkaUserConfigPrivatelinkAccessPtrInput          `pulumi:"privatelinkAccess"`
	PublicAccess               ServiceKafkaUserConfigPublicAccessPtrInput               `pulumi:"publicAccess"`
	SchemaRegistry             pulumi.StringPtrInput                                    `pulumi:"schemaRegistry"`
	SchemaRegistryConfig       ServiceKafkaUserConfigSchemaRegistryConfigPtrInput       `pulumi:"schemaRegistryConfig"`
}

func (ServiceKafkaUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaUserConfig)(nil)).Elem()
}

func (i ServiceKafkaUserConfigArgs) ToServiceKafkaUserConfigOutput() ServiceKafkaUserConfigOutput {
	return i.ToServiceKafkaUserConfigOutputWithContext(context.Background())
}

func (i ServiceKafkaUserConfigArgs) ToServiceKafkaUserConfigOutputWithContext(ctx context.Context) ServiceKafkaUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigOutput)
}

func (i ServiceKafkaUserConfigArgs) ToServiceKafkaUserConfigPtrOutput() ServiceKafkaUserConfigPtrOutput {
	return i.ToServiceKafkaUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceKafkaUserConfigArgs) ToServiceKafkaUserConfigPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigOutput).ToServiceKafkaUserConfigPtrOutputWithContext(ctx)
}

// ServiceKafkaUserConfigPtrInput is an input type that accepts ServiceKafkaUserConfigArgs, ServiceKafkaUserConfigPtr and ServiceKafkaUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceKafkaUserConfigPtrInput` via:
//
//          ServiceKafkaUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceKafkaUserConfigPtrInput interface {
	pulumi.Input

	ToServiceKafkaUserConfigPtrOutput() ServiceKafkaUserConfigPtrOutput
	ToServiceKafkaUserConfigPtrOutputWithContext(context.Context) ServiceKafkaUserConfigPtrOutput
}

type serviceKafkaUserConfigPtrType ServiceKafkaUserConfigArgs

func ServiceKafkaUserConfigPtr(v *ServiceKafkaUserConfigArgs) ServiceKafkaUserConfigPtrInput {
	return (*serviceKafkaUserConfigPtrType)(v)
}

func (*serviceKafkaUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaUserConfig)(nil)).Elem()
}

func (i *serviceKafkaUserConfigPtrType) ToServiceKafkaUserConfigPtrOutput() ServiceKafkaUserConfigPtrOutput {
	return i.ToServiceKafkaUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceKafkaUserConfigPtrType) ToServiceKafkaUserConfigPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigPtrOutput)
}

type ServiceKafkaUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceKafkaUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaUserConfig)(nil)).Elem()
}

func (o ServiceKafkaUserConfigOutput) ToServiceKafkaUserConfigOutput() ServiceKafkaUserConfigOutput {
	return o
}

func (o ServiceKafkaUserConfigOutput) ToServiceKafkaUserConfigOutputWithContext(ctx context.Context) ServiceKafkaUserConfigOutput {
	return o
}

func (o ServiceKafkaUserConfigOutput) ToServiceKafkaUserConfigPtrOutput() ServiceKafkaUserConfigPtrOutput {
	return o.ToServiceKafkaUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceKafkaUserConfigOutput) ToServiceKafkaUserConfigPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfig) *ServiceKafkaUserConfig {
		return &v
	}).(ServiceKafkaUserConfigPtrOutput)
}
func (o ServiceKafkaUserConfigOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfig) *string { return v.CustomDomain }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

func (o ServiceKafkaUserConfigOutput) Kafka() ServiceKafkaUserConfigKafkaPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfig) *ServiceKafkaUserConfigKafka { return v.Kafka }).(ServiceKafkaUserConfigKafkaPtrOutput)
}

func (o ServiceKafkaUserConfigOutput) KafkaAuthenticationMethods() ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfig) *ServiceKafkaUserConfigKafkaAuthenticationMethods {
		return v.KafkaAuthenticationMethods
	}).(ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput)
}

func (o ServiceKafkaUserConfigOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfig) *string { return v.KafkaConnect }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigOutput) KafkaConnectConfig() ServiceKafkaUserConfigKafkaConnectConfigPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfig) *ServiceKafkaUserConfigKafkaConnectConfig { return v.KafkaConnectConfig }).(ServiceKafkaUserConfigKafkaConnectConfigPtrOutput)
}

func (o ServiceKafkaUserConfigOutput) KafkaRest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfig) *string { return v.KafkaRest }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigOutput) KafkaRestConfig() ServiceKafkaUserConfigKafkaRestConfigPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfig) *ServiceKafkaUserConfigKafkaRestConfig { return v.KafkaRestConfig }).(ServiceKafkaUserConfigKafkaRestConfigPtrOutput)
}

func (o ServiceKafkaUserConfigOutput) KafkaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfig) *string { return v.KafkaVersion }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigOutput) PrivateAccess() ServiceKafkaUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfig) *ServiceKafkaUserConfigPrivateAccess { return v.PrivateAccess }).(ServiceKafkaUserConfigPrivateAccessPtrOutput)
}

func (o ServiceKafkaUserConfigOutput) PrivatelinkAccess() ServiceKafkaUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfig) *ServiceKafkaUserConfigPrivatelinkAccess { return v.PrivatelinkAccess }).(ServiceKafkaUserConfigPrivatelinkAccessPtrOutput)
}

func (o ServiceKafkaUserConfigOutput) PublicAccess() ServiceKafkaUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfig) *ServiceKafkaUserConfigPublicAccess { return v.PublicAccess }).(ServiceKafkaUserConfigPublicAccessPtrOutput)
}

func (o ServiceKafkaUserConfigOutput) SchemaRegistry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfig) *string { return v.SchemaRegistry }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigOutput) SchemaRegistryConfig() ServiceKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfig) *ServiceKafkaUserConfigSchemaRegistryConfig {
		return v.SchemaRegistryConfig
	}).(ServiceKafkaUserConfigSchemaRegistryConfigPtrOutput)
}

type ServiceKafkaUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceKafkaUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaUserConfig)(nil)).Elem()
}

func (o ServiceKafkaUserConfigPtrOutput) ToServiceKafkaUserConfigPtrOutput() ServiceKafkaUserConfigPtrOutput {
	return o
}

func (o ServiceKafkaUserConfigPtrOutput) ToServiceKafkaUserConfigPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigPtrOutput {
	return o
}

func (o ServiceKafkaUserConfigPtrOutput) Elem() ServiceKafkaUserConfigOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfig) ServiceKafkaUserConfig { return *v }).(ServiceKafkaUserConfigOutput)
}

func (o ServiceKafkaUserConfigPtrOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.CustomDomain
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

func (o ServiceKafkaUserConfigPtrOutput) Kafka() ServiceKafkaUserConfigKafkaPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfig) *ServiceKafkaUserConfigKafka {
		if v == nil {
			return nil
		}
		return v.Kafka
	}).(ServiceKafkaUserConfigKafkaPtrOutput)
}

func (o ServiceKafkaUserConfigPtrOutput) KafkaAuthenticationMethods() ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfig) *ServiceKafkaUserConfigKafkaAuthenticationMethods {
		if v == nil {
			return nil
		}
		return v.KafkaAuthenticationMethods
	}).(ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput)
}

func (o ServiceKafkaUserConfigPtrOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.KafkaConnect
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigPtrOutput) KafkaConnectConfig() ServiceKafkaUserConfigKafkaConnectConfigPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfig) *ServiceKafkaUserConfigKafkaConnectConfig {
		if v == nil {
			return nil
		}
		return v.KafkaConnectConfig
	}).(ServiceKafkaUserConfigKafkaConnectConfigPtrOutput)
}

func (o ServiceKafkaUserConfigPtrOutput) KafkaRest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.KafkaRest
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigPtrOutput) KafkaRestConfig() ServiceKafkaUserConfigKafkaRestConfigPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfig) *ServiceKafkaUserConfigKafkaRestConfig {
		if v == nil {
			return nil
		}
		return v.KafkaRestConfig
	}).(ServiceKafkaUserConfigKafkaRestConfigPtrOutput)
}

func (o ServiceKafkaUserConfigPtrOutput) KafkaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.KafkaVersion
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigPtrOutput) PrivateAccess() ServiceKafkaUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfig) *ServiceKafkaUserConfigPrivateAccess {
		if v == nil {
			return nil
		}
		return v.PrivateAccess
	}).(ServiceKafkaUserConfigPrivateAccessPtrOutput)
}

func (o ServiceKafkaUserConfigPtrOutput) PrivatelinkAccess() ServiceKafkaUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfig) *ServiceKafkaUserConfigPrivatelinkAccess {
		if v == nil {
			return nil
		}
		return v.PrivatelinkAccess
	}).(ServiceKafkaUserConfigPrivatelinkAccessPtrOutput)
}

func (o ServiceKafkaUserConfigPtrOutput) PublicAccess() ServiceKafkaUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfig) *ServiceKafkaUserConfigPublicAccess {
		if v == nil {
			return nil
		}
		return v.PublicAccess
	}).(ServiceKafkaUserConfigPublicAccessPtrOutput)
}

func (o ServiceKafkaUserConfigPtrOutput) SchemaRegistry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.SchemaRegistry
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigPtrOutput) SchemaRegistryConfig() ServiceKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfig) *ServiceKafkaUserConfigSchemaRegistryConfig {
		if v == nil {
			return nil
		}
		return v.SchemaRegistryConfig
	}).(ServiceKafkaUserConfigSchemaRegistryConfigPtrOutput)
}

type ServiceKafkaUserConfigKafka struct {
	AutoCreateTopicsEnable                               *string `pulumi:"autoCreateTopicsEnable"`
	CompressionType                                      *string `pulumi:"compressionType"`
	ConnectionsMaxIdleMs                                 *string `pulumi:"connectionsMaxIdleMs"`
	DefaultReplicationFactor                             *string `pulumi:"defaultReplicationFactor"`
	GroupInitialRebalanceDelayMs                         *string `pulumi:"groupInitialRebalanceDelayMs"`
	GroupMaxSessionTimeoutMs                             *string `pulumi:"groupMaxSessionTimeoutMs"`
	GroupMinSessionTimeoutMs                             *string `pulumi:"groupMinSessionTimeoutMs"`
	LogCleanerDeleteRetentionMs                          *string `pulumi:"logCleanerDeleteRetentionMs"`
	LogCleanerMaxCompactionLagMs                         *string `pulumi:"logCleanerMaxCompactionLagMs"`
	LogCleanerMinCleanableRatio                          *string `pulumi:"logCleanerMinCleanableRatio"`
	LogCleanerMinCompactionLagMs                         *string `pulumi:"logCleanerMinCompactionLagMs"`
	LogCleanupPolicy                                     *string `pulumi:"logCleanupPolicy"`
	LogFlushIntervalMessages                             *string `pulumi:"logFlushIntervalMessages"`
	LogFlushIntervalMs                                   *string `pulumi:"logFlushIntervalMs"`
	LogIndexIntervalBytes                                *string `pulumi:"logIndexIntervalBytes"`
	LogIndexSizeMaxBytes                                 *string `pulumi:"logIndexSizeMaxBytes"`
	LogMessageDownconversionEnable                       *string `pulumi:"logMessageDownconversionEnable"`
	LogMessageTimestampDifferenceMaxMs                   *string `pulumi:"logMessageTimestampDifferenceMaxMs"`
	LogMessageTimestampType                              *string `pulumi:"logMessageTimestampType"`
	LogPreallocate                                       *string `pulumi:"logPreallocate"`
	LogRetentionBytes                                    *string `pulumi:"logRetentionBytes"`
	LogRetentionHours                                    *string `pulumi:"logRetentionHours"`
	LogRetentionMs                                       *string `pulumi:"logRetentionMs"`
	LogRollJitterMs                                      *string `pulumi:"logRollJitterMs"`
	LogRollMs                                            *string `pulumi:"logRollMs"`
	LogSegmentBytes                                      *string `pulumi:"logSegmentBytes"`
	LogSegmentDeleteDelayMs                              *string `pulumi:"logSegmentDeleteDelayMs"`
	MaxConnectionsPerIp                                  *string `pulumi:"maxConnectionsPerIp"`
	MaxIncrementalFetchSessionCacheSlots                 *string `pulumi:"maxIncrementalFetchSessionCacheSlots"`
	MessageMaxBytes                                      *string `pulumi:"messageMaxBytes"`
	MinInsyncReplicas                                    *string `pulumi:"minInsyncReplicas"`
	NumPartitions                                        *string `pulumi:"numPartitions"`
	OffsetsRetentionMinutes                              *string `pulumi:"offsetsRetentionMinutes"`
	ProducerPurgatoryPurgeIntervalRequests               *string `pulumi:"producerPurgatoryPurgeIntervalRequests"`
	ReplicaFetchMaxBytes                                 *string `pulumi:"replicaFetchMaxBytes"`
	ReplicaFetchResponseMaxBytes                         *string `pulumi:"replicaFetchResponseMaxBytes"`
	SocketRequestMaxBytes                                *string `pulumi:"socketRequestMaxBytes"`
	TransactionRemoveExpiredTransactionCleanupIntervalMs *string `pulumi:"transactionRemoveExpiredTransactionCleanupIntervalMs"`
	TransactionStateLogSegmentBytes                      *string `pulumi:"transactionStateLogSegmentBytes"`
}

// ServiceKafkaUserConfigKafkaInput is an input type that accepts ServiceKafkaUserConfigKafkaArgs and ServiceKafkaUserConfigKafkaOutput values.
// You can construct a concrete instance of `ServiceKafkaUserConfigKafkaInput` via:
//
//          ServiceKafkaUserConfigKafkaArgs{...}
type ServiceKafkaUserConfigKafkaInput interface {
	pulumi.Input

	ToServiceKafkaUserConfigKafkaOutput() ServiceKafkaUserConfigKafkaOutput
	ToServiceKafkaUserConfigKafkaOutputWithContext(context.Context) ServiceKafkaUserConfigKafkaOutput
}

type ServiceKafkaUserConfigKafkaArgs struct {
	AutoCreateTopicsEnable                               pulumi.StringPtrInput `pulumi:"autoCreateTopicsEnable"`
	CompressionType                                      pulumi.StringPtrInput `pulumi:"compressionType"`
	ConnectionsMaxIdleMs                                 pulumi.StringPtrInput `pulumi:"connectionsMaxIdleMs"`
	DefaultReplicationFactor                             pulumi.StringPtrInput `pulumi:"defaultReplicationFactor"`
	GroupInitialRebalanceDelayMs                         pulumi.StringPtrInput `pulumi:"groupInitialRebalanceDelayMs"`
	GroupMaxSessionTimeoutMs                             pulumi.StringPtrInput `pulumi:"groupMaxSessionTimeoutMs"`
	GroupMinSessionTimeoutMs                             pulumi.StringPtrInput `pulumi:"groupMinSessionTimeoutMs"`
	LogCleanerDeleteRetentionMs                          pulumi.StringPtrInput `pulumi:"logCleanerDeleteRetentionMs"`
	LogCleanerMaxCompactionLagMs                         pulumi.StringPtrInput `pulumi:"logCleanerMaxCompactionLagMs"`
	LogCleanerMinCleanableRatio                          pulumi.StringPtrInput `pulumi:"logCleanerMinCleanableRatio"`
	LogCleanerMinCompactionLagMs                         pulumi.StringPtrInput `pulumi:"logCleanerMinCompactionLagMs"`
	LogCleanupPolicy                                     pulumi.StringPtrInput `pulumi:"logCleanupPolicy"`
	LogFlushIntervalMessages                             pulumi.StringPtrInput `pulumi:"logFlushIntervalMessages"`
	LogFlushIntervalMs                                   pulumi.StringPtrInput `pulumi:"logFlushIntervalMs"`
	LogIndexIntervalBytes                                pulumi.StringPtrInput `pulumi:"logIndexIntervalBytes"`
	LogIndexSizeMaxBytes                                 pulumi.StringPtrInput `pulumi:"logIndexSizeMaxBytes"`
	LogMessageDownconversionEnable                       pulumi.StringPtrInput `pulumi:"logMessageDownconversionEnable"`
	LogMessageTimestampDifferenceMaxMs                   pulumi.StringPtrInput `pulumi:"logMessageTimestampDifferenceMaxMs"`
	LogMessageTimestampType                              pulumi.StringPtrInput `pulumi:"logMessageTimestampType"`
	LogPreallocate                                       pulumi.StringPtrInput `pulumi:"logPreallocate"`
	LogRetentionBytes                                    pulumi.StringPtrInput `pulumi:"logRetentionBytes"`
	LogRetentionHours                                    pulumi.StringPtrInput `pulumi:"logRetentionHours"`
	LogRetentionMs                                       pulumi.StringPtrInput `pulumi:"logRetentionMs"`
	LogRollJitterMs                                      pulumi.StringPtrInput `pulumi:"logRollJitterMs"`
	LogRollMs                                            pulumi.StringPtrInput `pulumi:"logRollMs"`
	LogSegmentBytes                                      pulumi.StringPtrInput `pulumi:"logSegmentBytes"`
	LogSegmentDeleteDelayMs                              pulumi.StringPtrInput `pulumi:"logSegmentDeleteDelayMs"`
	MaxConnectionsPerIp                                  pulumi.StringPtrInput `pulumi:"maxConnectionsPerIp"`
	MaxIncrementalFetchSessionCacheSlots                 pulumi.StringPtrInput `pulumi:"maxIncrementalFetchSessionCacheSlots"`
	MessageMaxBytes                                      pulumi.StringPtrInput `pulumi:"messageMaxBytes"`
	MinInsyncReplicas                                    pulumi.StringPtrInput `pulumi:"minInsyncReplicas"`
	NumPartitions                                        pulumi.StringPtrInput `pulumi:"numPartitions"`
	OffsetsRetentionMinutes                              pulumi.StringPtrInput `pulumi:"offsetsRetentionMinutes"`
	ProducerPurgatoryPurgeIntervalRequests               pulumi.StringPtrInput `pulumi:"producerPurgatoryPurgeIntervalRequests"`
	ReplicaFetchMaxBytes                                 pulumi.StringPtrInput `pulumi:"replicaFetchMaxBytes"`
	ReplicaFetchResponseMaxBytes                         pulumi.StringPtrInput `pulumi:"replicaFetchResponseMaxBytes"`
	SocketRequestMaxBytes                                pulumi.StringPtrInput `pulumi:"socketRequestMaxBytes"`
	TransactionRemoveExpiredTransactionCleanupIntervalMs pulumi.StringPtrInput `pulumi:"transactionRemoveExpiredTransactionCleanupIntervalMs"`
	TransactionStateLogSegmentBytes                      pulumi.StringPtrInput `pulumi:"transactionStateLogSegmentBytes"`
}

func (ServiceKafkaUserConfigKafkaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaUserConfigKafka)(nil)).Elem()
}

func (i ServiceKafkaUserConfigKafkaArgs) ToServiceKafkaUserConfigKafkaOutput() ServiceKafkaUserConfigKafkaOutput {
	return i.ToServiceKafkaUserConfigKafkaOutputWithContext(context.Background())
}

func (i ServiceKafkaUserConfigKafkaArgs) ToServiceKafkaUserConfigKafkaOutputWithContext(ctx context.Context) ServiceKafkaUserConfigKafkaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigKafkaOutput)
}

func (i ServiceKafkaUserConfigKafkaArgs) ToServiceKafkaUserConfigKafkaPtrOutput() ServiceKafkaUserConfigKafkaPtrOutput {
	return i.ToServiceKafkaUserConfigKafkaPtrOutputWithContext(context.Background())
}

func (i ServiceKafkaUserConfigKafkaArgs) ToServiceKafkaUserConfigKafkaPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigKafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigKafkaOutput).ToServiceKafkaUserConfigKafkaPtrOutputWithContext(ctx)
}

// ServiceKafkaUserConfigKafkaPtrInput is an input type that accepts ServiceKafkaUserConfigKafkaArgs, ServiceKafkaUserConfigKafkaPtr and ServiceKafkaUserConfigKafkaPtrOutput values.
// You can construct a concrete instance of `ServiceKafkaUserConfigKafkaPtrInput` via:
//
//          ServiceKafkaUserConfigKafkaArgs{...}
//
//  or:
//
//          nil
type ServiceKafkaUserConfigKafkaPtrInput interface {
	pulumi.Input

	ToServiceKafkaUserConfigKafkaPtrOutput() ServiceKafkaUserConfigKafkaPtrOutput
	ToServiceKafkaUserConfigKafkaPtrOutputWithContext(context.Context) ServiceKafkaUserConfigKafkaPtrOutput
}

type serviceKafkaUserConfigKafkaPtrType ServiceKafkaUserConfigKafkaArgs

func ServiceKafkaUserConfigKafkaPtr(v *ServiceKafkaUserConfigKafkaArgs) ServiceKafkaUserConfigKafkaPtrInput {
	return (*serviceKafkaUserConfigKafkaPtrType)(v)
}

func (*serviceKafkaUserConfigKafkaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaUserConfigKafka)(nil)).Elem()
}

func (i *serviceKafkaUserConfigKafkaPtrType) ToServiceKafkaUserConfigKafkaPtrOutput() ServiceKafkaUserConfigKafkaPtrOutput {
	return i.ToServiceKafkaUserConfigKafkaPtrOutputWithContext(context.Background())
}

func (i *serviceKafkaUserConfigKafkaPtrType) ToServiceKafkaUserConfigKafkaPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigKafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigKafkaPtrOutput)
}

type ServiceKafkaUserConfigKafkaOutput struct{ *pulumi.OutputState }

func (ServiceKafkaUserConfigKafkaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaUserConfigKafka)(nil)).Elem()
}

func (o ServiceKafkaUserConfigKafkaOutput) ToServiceKafkaUserConfigKafkaOutput() ServiceKafkaUserConfigKafkaOutput {
	return o
}

func (o ServiceKafkaUserConfigKafkaOutput) ToServiceKafkaUserConfigKafkaOutputWithContext(ctx context.Context) ServiceKafkaUserConfigKafkaOutput {
	return o
}

func (o ServiceKafkaUserConfigKafkaOutput) ToServiceKafkaUserConfigKafkaPtrOutput() ServiceKafkaUserConfigKafkaPtrOutput {
	return o.ToServiceKafkaUserConfigKafkaPtrOutputWithContext(context.Background())
}

func (o ServiceKafkaUserConfigKafkaOutput) ToServiceKafkaUserConfigKafkaPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigKafkaPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *ServiceKafkaUserConfigKafka {
		return &v
	}).(ServiceKafkaUserConfigKafkaPtrOutput)
}
func (o ServiceKafkaUserConfigKafkaOutput) AutoCreateTopicsEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.AutoCreateTopicsEnable }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.CompressionType }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) ConnectionsMaxIdleMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.ConnectionsMaxIdleMs }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) DefaultReplicationFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.DefaultReplicationFactor }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) GroupInitialRebalanceDelayMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.GroupInitialRebalanceDelayMs }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) GroupMaxSessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.GroupMaxSessionTimeoutMs }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) GroupMinSessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.GroupMinSessionTimeoutMs }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) LogCleanerDeleteRetentionMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.LogCleanerDeleteRetentionMs }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) LogCleanerMaxCompactionLagMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.LogCleanerMaxCompactionLagMs }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) LogCleanerMinCleanableRatio() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.LogCleanerMinCleanableRatio }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) LogCleanerMinCompactionLagMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.LogCleanerMinCompactionLagMs }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) LogCleanupPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.LogCleanupPolicy }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) LogFlushIntervalMessages() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.LogFlushIntervalMessages }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) LogFlushIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.LogFlushIntervalMs }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) LogIndexIntervalBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.LogIndexIntervalBytes }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) LogIndexSizeMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.LogIndexSizeMaxBytes }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) LogMessageDownconversionEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.LogMessageDownconversionEnable }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) LogMessageTimestampDifferenceMaxMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.LogMessageTimestampDifferenceMaxMs }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) LogMessageTimestampType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.LogMessageTimestampType }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) LogPreallocate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.LogPreallocate }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) LogRetentionBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.LogRetentionBytes }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) LogRetentionHours() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.LogRetentionHours }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) LogRetentionMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.LogRetentionMs }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) LogRollJitterMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.LogRollJitterMs }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) LogRollMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.LogRollMs }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) LogSegmentBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.LogSegmentBytes }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) LogSegmentDeleteDelayMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.LogSegmentDeleteDelayMs }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) MaxConnectionsPerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.MaxConnectionsPerIp }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) MaxIncrementalFetchSessionCacheSlots() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.MaxIncrementalFetchSessionCacheSlots }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) MessageMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.MessageMaxBytes }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) MinInsyncReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.MinInsyncReplicas }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) NumPartitions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.NumPartitions }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) OffsetsRetentionMinutes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.OffsetsRetentionMinutes }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) ProducerPurgatoryPurgeIntervalRequests() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.ProducerPurgatoryPurgeIntervalRequests }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) ReplicaFetchMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.ReplicaFetchMaxBytes }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) ReplicaFetchResponseMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.ReplicaFetchResponseMaxBytes }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) SocketRequestMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.SocketRequestMaxBytes }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) TransactionRemoveExpiredTransactionCleanupIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string {
		return v.TransactionRemoveExpiredTransactionCleanupIntervalMs
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaOutput) TransactionStateLogSegmentBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafka) *string { return v.TransactionStateLogSegmentBytes }).(pulumi.StringPtrOutput)
}

type ServiceKafkaUserConfigKafkaPtrOutput struct{ *pulumi.OutputState }

func (ServiceKafkaUserConfigKafkaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaUserConfigKafka)(nil)).Elem()
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) ToServiceKafkaUserConfigKafkaPtrOutput() ServiceKafkaUserConfigKafkaPtrOutput {
	return o
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) ToServiceKafkaUserConfigKafkaPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigKafkaPtrOutput {
	return o
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) Elem() ServiceKafkaUserConfigKafkaOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) ServiceKafkaUserConfigKafka { return *v }).(ServiceKafkaUserConfigKafkaOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) AutoCreateTopicsEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.AutoCreateTopicsEnable
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.CompressionType
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) ConnectionsMaxIdleMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionsMaxIdleMs
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) DefaultReplicationFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.DefaultReplicationFactor
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) GroupInitialRebalanceDelayMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.GroupInitialRebalanceDelayMs
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) GroupMaxSessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.GroupMaxSessionTimeoutMs
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) GroupMinSessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.GroupMinSessionTimeoutMs
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) LogCleanerDeleteRetentionMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogCleanerDeleteRetentionMs
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) LogCleanerMaxCompactionLagMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogCleanerMaxCompactionLagMs
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) LogCleanerMinCleanableRatio() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogCleanerMinCleanableRatio
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) LogCleanerMinCompactionLagMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogCleanerMinCompactionLagMs
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) LogCleanupPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogCleanupPolicy
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) LogFlushIntervalMessages() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogFlushIntervalMessages
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) LogFlushIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogFlushIntervalMs
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) LogIndexIntervalBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogIndexIntervalBytes
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) LogIndexSizeMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogIndexSizeMaxBytes
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) LogMessageDownconversionEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogMessageDownconversionEnable
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) LogMessageTimestampDifferenceMaxMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogMessageTimestampDifferenceMaxMs
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) LogMessageTimestampType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogMessageTimestampType
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) LogPreallocate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogPreallocate
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) LogRetentionBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogRetentionBytes
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) LogRetentionHours() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogRetentionHours
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) LogRetentionMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogRetentionMs
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) LogRollJitterMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogRollJitterMs
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) LogRollMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogRollMs
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) LogSegmentBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogSegmentBytes
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) LogSegmentDeleteDelayMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogSegmentDeleteDelayMs
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) MaxConnectionsPerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.MaxConnectionsPerIp
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) MaxIncrementalFetchSessionCacheSlots() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.MaxIncrementalFetchSessionCacheSlots
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) MessageMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.MessageMaxBytes
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) MinInsyncReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.MinInsyncReplicas
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) NumPartitions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.NumPartitions
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) OffsetsRetentionMinutes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.OffsetsRetentionMinutes
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) ProducerPurgatoryPurgeIntervalRequests() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.ProducerPurgatoryPurgeIntervalRequests
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) ReplicaFetchMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.ReplicaFetchMaxBytes
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) ReplicaFetchResponseMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.ReplicaFetchResponseMaxBytes
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) SocketRequestMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.SocketRequestMaxBytes
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) TransactionRemoveExpiredTransactionCleanupIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.TransactionRemoveExpiredTransactionCleanupIntervalMs
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaPtrOutput) TransactionStateLogSegmentBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.TransactionStateLogSegmentBytes
	}).(pulumi.StringPtrOutput)
}

type ServiceKafkaUserConfigKafkaAuthenticationMethods struct {
	Certificate *string `pulumi:"certificate"`
	Sasl        *string `pulumi:"sasl"`
}

// ServiceKafkaUserConfigKafkaAuthenticationMethodsInput is an input type that accepts ServiceKafkaUserConfigKafkaAuthenticationMethodsArgs and ServiceKafkaUserConfigKafkaAuthenticationMethodsOutput values.
// You can construct a concrete instance of `ServiceKafkaUserConfigKafkaAuthenticationMethodsInput` via:
//
//          ServiceKafkaUserConfigKafkaAuthenticationMethodsArgs{...}
type ServiceKafkaUserConfigKafkaAuthenticationMethodsInput interface {
	pulumi.Input

	ToServiceKafkaUserConfigKafkaAuthenticationMethodsOutput() ServiceKafkaUserConfigKafkaAuthenticationMethodsOutput
	ToServiceKafkaUserConfigKafkaAuthenticationMethodsOutputWithContext(context.Context) ServiceKafkaUserConfigKafkaAuthenticationMethodsOutput
}

type ServiceKafkaUserConfigKafkaAuthenticationMethodsArgs struct {
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	Sasl        pulumi.StringPtrInput `pulumi:"sasl"`
}

func (ServiceKafkaUserConfigKafkaAuthenticationMethodsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaUserConfigKafkaAuthenticationMethods)(nil)).Elem()
}

func (i ServiceKafkaUserConfigKafkaAuthenticationMethodsArgs) ToServiceKafkaUserConfigKafkaAuthenticationMethodsOutput() ServiceKafkaUserConfigKafkaAuthenticationMethodsOutput {
	return i.ToServiceKafkaUserConfigKafkaAuthenticationMethodsOutputWithContext(context.Background())
}

func (i ServiceKafkaUserConfigKafkaAuthenticationMethodsArgs) ToServiceKafkaUserConfigKafkaAuthenticationMethodsOutputWithContext(ctx context.Context) ServiceKafkaUserConfigKafkaAuthenticationMethodsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigKafkaAuthenticationMethodsOutput)
}

func (i ServiceKafkaUserConfigKafkaAuthenticationMethodsArgs) ToServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput() ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return i.ToServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(context.Background())
}

func (i ServiceKafkaUserConfigKafkaAuthenticationMethodsArgs) ToServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigKafkaAuthenticationMethodsOutput).ToServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(ctx)
}

// ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrInput is an input type that accepts ServiceKafkaUserConfigKafkaAuthenticationMethodsArgs, ServiceKafkaUserConfigKafkaAuthenticationMethodsPtr and ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput values.
// You can construct a concrete instance of `ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrInput` via:
//
//          ServiceKafkaUserConfigKafkaAuthenticationMethodsArgs{...}
//
//  or:
//
//          nil
type ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrInput interface {
	pulumi.Input

	ToServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput() ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput
	ToServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(context.Context) ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput
}

type serviceKafkaUserConfigKafkaAuthenticationMethodsPtrType ServiceKafkaUserConfigKafkaAuthenticationMethodsArgs

func ServiceKafkaUserConfigKafkaAuthenticationMethodsPtr(v *ServiceKafkaUserConfigKafkaAuthenticationMethodsArgs) ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrInput {
	return (*serviceKafkaUserConfigKafkaAuthenticationMethodsPtrType)(v)
}

func (*serviceKafkaUserConfigKafkaAuthenticationMethodsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaUserConfigKafkaAuthenticationMethods)(nil)).Elem()
}

func (i *serviceKafkaUserConfigKafkaAuthenticationMethodsPtrType) ToServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput() ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return i.ToServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(context.Background())
}

func (i *serviceKafkaUserConfigKafkaAuthenticationMethodsPtrType) ToServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput)
}

type ServiceKafkaUserConfigKafkaAuthenticationMethodsOutput struct{ *pulumi.OutputState }

func (ServiceKafkaUserConfigKafkaAuthenticationMethodsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaUserConfigKafkaAuthenticationMethods)(nil)).Elem()
}

func (o ServiceKafkaUserConfigKafkaAuthenticationMethodsOutput) ToServiceKafkaUserConfigKafkaAuthenticationMethodsOutput() ServiceKafkaUserConfigKafkaAuthenticationMethodsOutput {
	return o
}

func (o ServiceKafkaUserConfigKafkaAuthenticationMethodsOutput) ToServiceKafkaUserConfigKafkaAuthenticationMethodsOutputWithContext(ctx context.Context) ServiceKafkaUserConfigKafkaAuthenticationMethodsOutput {
	return o
}

func (o ServiceKafkaUserConfigKafkaAuthenticationMethodsOutput) ToServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput() ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return o.ToServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(context.Background())
}

func (o ServiceKafkaUserConfigKafkaAuthenticationMethodsOutput) ToServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafkaAuthenticationMethods) *ServiceKafkaUserConfigKafkaAuthenticationMethods {
		return &v
	}).(ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput)
}
func (o ServiceKafkaUserConfigKafkaAuthenticationMethodsOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafkaAuthenticationMethods) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaAuthenticationMethodsOutput) Sasl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafkaAuthenticationMethods) *string { return v.Sasl }).(pulumi.StringPtrOutput)
}

type ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput struct{ *pulumi.OutputState }

func (ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaUserConfigKafkaAuthenticationMethods)(nil)).Elem()
}

func (o ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput) ToServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput() ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return o
}

func (o ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput) ToServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return o
}

func (o ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput) Elem() ServiceKafkaUserConfigKafkaAuthenticationMethodsOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafkaAuthenticationMethods) ServiceKafkaUserConfigKafkaAuthenticationMethods {
		return *v
	}).(ServiceKafkaUserConfigKafkaAuthenticationMethodsOutput)
}

func (o ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafkaAuthenticationMethods) *string {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput) Sasl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafkaAuthenticationMethods) *string {
		if v == nil {
			return nil
		}
		return v.Sasl
	}).(pulumi.StringPtrOutput)
}

type ServiceKafkaUserConfigKafkaConnectConfig struct {
	ConnectorClientConfigOverridePolicy *string `pulumi:"connectorClientConfigOverridePolicy"`
	ConsumerAutoOffsetReset             *string `pulumi:"consumerAutoOffsetReset"`
	ConsumerFetchMaxBytes               *string `pulumi:"consumerFetchMaxBytes"`
	ConsumerIsolationLevel              *string `pulumi:"consumerIsolationLevel"`
	ConsumerMaxPartitionFetchBytes      *string `pulumi:"consumerMaxPartitionFetchBytes"`
	ConsumerMaxPollIntervalMs           *string `pulumi:"consumerMaxPollIntervalMs"`
	ConsumerMaxPollRecords              *string `pulumi:"consumerMaxPollRecords"`
	OffsetFlushIntervalMs               *string `pulumi:"offsetFlushIntervalMs"`
	OffsetFlushTimeoutMs                *string `pulumi:"offsetFlushTimeoutMs"`
	ProducerMaxRequestSize              *string `pulumi:"producerMaxRequestSize"`
	SessionTimeoutMs                    *string `pulumi:"sessionTimeoutMs"`
}

// ServiceKafkaUserConfigKafkaConnectConfigInput is an input type that accepts ServiceKafkaUserConfigKafkaConnectConfigArgs and ServiceKafkaUserConfigKafkaConnectConfigOutput values.
// You can construct a concrete instance of `ServiceKafkaUserConfigKafkaConnectConfigInput` via:
//
//          ServiceKafkaUserConfigKafkaConnectConfigArgs{...}
type ServiceKafkaUserConfigKafkaConnectConfigInput interface {
	pulumi.Input

	ToServiceKafkaUserConfigKafkaConnectConfigOutput() ServiceKafkaUserConfigKafkaConnectConfigOutput
	ToServiceKafkaUserConfigKafkaConnectConfigOutputWithContext(context.Context) ServiceKafkaUserConfigKafkaConnectConfigOutput
}

type ServiceKafkaUserConfigKafkaConnectConfigArgs struct {
	ConnectorClientConfigOverridePolicy pulumi.StringPtrInput `pulumi:"connectorClientConfigOverridePolicy"`
	ConsumerAutoOffsetReset             pulumi.StringPtrInput `pulumi:"consumerAutoOffsetReset"`
	ConsumerFetchMaxBytes               pulumi.StringPtrInput `pulumi:"consumerFetchMaxBytes"`
	ConsumerIsolationLevel              pulumi.StringPtrInput `pulumi:"consumerIsolationLevel"`
	ConsumerMaxPartitionFetchBytes      pulumi.StringPtrInput `pulumi:"consumerMaxPartitionFetchBytes"`
	ConsumerMaxPollIntervalMs           pulumi.StringPtrInput `pulumi:"consumerMaxPollIntervalMs"`
	ConsumerMaxPollRecords              pulumi.StringPtrInput `pulumi:"consumerMaxPollRecords"`
	OffsetFlushIntervalMs               pulumi.StringPtrInput `pulumi:"offsetFlushIntervalMs"`
	OffsetFlushTimeoutMs                pulumi.StringPtrInput `pulumi:"offsetFlushTimeoutMs"`
	ProducerMaxRequestSize              pulumi.StringPtrInput `pulumi:"producerMaxRequestSize"`
	SessionTimeoutMs                    pulumi.StringPtrInput `pulumi:"sessionTimeoutMs"`
}

func (ServiceKafkaUserConfigKafkaConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaUserConfigKafkaConnectConfig)(nil)).Elem()
}

func (i ServiceKafkaUserConfigKafkaConnectConfigArgs) ToServiceKafkaUserConfigKafkaConnectConfigOutput() ServiceKafkaUserConfigKafkaConnectConfigOutput {
	return i.ToServiceKafkaUserConfigKafkaConnectConfigOutputWithContext(context.Background())
}

func (i ServiceKafkaUserConfigKafkaConnectConfigArgs) ToServiceKafkaUserConfigKafkaConnectConfigOutputWithContext(ctx context.Context) ServiceKafkaUserConfigKafkaConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigKafkaConnectConfigOutput)
}

func (i ServiceKafkaUserConfigKafkaConnectConfigArgs) ToServiceKafkaUserConfigKafkaConnectConfigPtrOutput() ServiceKafkaUserConfigKafkaConnectConfigPtrOutput {
	return i.ToServiceKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(context.Background())
}

func (i ServiceKafkaUserConfigKafkaConnectConfigArgs) ToServiceKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigKafkaConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigKafkaConnectConfigOutput).ToServiceKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(ctx)
}

// ServiceKafkaUserConfigKafkaConnectConfigPtrInput is an input type that accepts ServiceKafkaUserConfigKafkaConnectConfigArgs, ServiceKafkaUserConfigKafkaConnectConfigPtr and ServiceKafkaUserConfigKafkaConnectConfigPtrOutput values.
// You can construct a concrete instance of `ServiceKafkaUserConfigKafkaConnectConfigPtrInput` via:
//
//          ServiceKafkaUserConfigKafkaConnectConfigArgs{...}
//
//  or:
//
//          nil
type ServiceKafkaUserConfigKafkaConnectConfigPtrInput interface {
	pulumi.Input

	ToServiceKafkaUserConfigKafkaConnectConfigPtrOutput() ServiceKafkaUserConfigKafkaConnectConfigPtrOutput
	ToServiceKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(context.Context) ServiceKafkaUserConfigKafkaConnectConfigPtrOutput
}

type serviceKafkaUserConfigKafkaConnectConfigPtrType ServiceKafkaUserConfigKafkaConnectConfigArgs

func ServiceKafkaUserConfigKafkaConnectConfigPtr(v *ServiceKafkaUserConfigKafkaConnectConfigArgs) ServiceKafkaUserConfigKafkaConnectConfigPtrInput {
	return (*serviceKafkaUserConfigKafkaConnectConfigPtrType)(v)
}

func (*serviceKafkaUserConfigKafkaConnectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaUserConfigKafkaConnectConfig)(nil)).Elem()
}

func (i *serviceKafkaUserConfigKafkaConnectConfigPtrType) ToServiceKafkaUserConfigKafkaConnectConfigPtrOutput() ServiceKafkaUserConfigKafkaConnectConfigPtrOutput {
	return i.ToServiceKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(context.Background())
}

func (i *serviceKafkaUserConfigKafkaConnectConfigPtrType) ToServiceKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigKafkaConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigKafkaConnectConfigPtrOutput)
}

type ServiceKafkaUserConfigKafkaConnectConfigOutput struct{ *pulumi.OutputState }

func (ServiceKafkaUserConfigKafkaConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaUserConfigKafkaConnectConfig)(nil)).Elem()
}

func (o ServiceKafkaUserConfigKafkaConnectConfigOutput) ToServiceKafkaUserConfigKafkaConnectConfigOutput() ServiceKafkaUserConfigKafkaConnectConfigOutput {
	return o
}

func (o ServiceKafkaUserConfigKafkaConnectConfigOutput) ToServiceKafkaUserConfigKafkaConnectConfigOutputWithContext(ctx context.Context) ServiceKafkaUserConfigKafkaConnectConfigOutput {
	return o
}

func (o ServiceKafkaUserConfigKafkaConnectConfigOutput) ToServiceKafkaUserConfigKafkaConnectConfigPtrOutput() ServiceKafkaUserConfigKafkaConnectConfigPtrOutput {
	return o.ToServiceKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(context.Background())
}

func (o ServiceKafkaUserConfigKafkaConnectConfigOutput) ToServiceKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigKafkaConnectConfigPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafkaConnectConfig) *ServiceKafkaUserConfigKafkaConnectConfig {
		return &v
	}).(ServiceKafkaUserConfigKafkaConnectConfigPtrOutput)
}
func (o ServiceKafkaUserConfigKafkaConnectConfigOutput) ConnectorClientConfigOverridePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafkaConnectConfig) *string { return v.ConnectorClientConfigOverridePolicy }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaConnectConfigOutput) ConsumerAutoOffsetReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafkaConnectConfig) *string { return v.ConsumerAutoOffsetReset }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaConnectConfigOutput) ConsumerFetchMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafkaConnectConfig) *string { return v.ConsumerFetchMaxBytes }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaConnectConfigOutput) ConsumerIsolationLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafkaConnectConfig) *string { return v.ConsumerIsolationLevel }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaConnectConfigOutput) ConsumerMaxPartitionFetchBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafkaConnectConfig) *string { return v.ConsumerMaxPartitionFetchBytes }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaConnectConfigOutput) ConsumerMaxPollIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafkaConnectConfig) *string { return v.ConsumerMaxPollIntervalMs }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaConnectConfigOutput) ConsumerMaxPollRecords() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafkaConnectConfig) *string { return v.ConsumerMaxPollRecords }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaConnectConfigOutput) OffsetFlushIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafkaConnectConfig) *string { return v.OffsetFlushIntervalMs }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaConnectConfigOutput) OffsetFlushTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafkaConnectConfig) *string { return v.OffsetFlushTimeoutMs }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaConnectConfigOutput) ProducerMaxRequestSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafkaConnectConfig) *string { return v.ProducerMaxRequestSize }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaConnectConfigOutput) SessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafkaConnectConfig) *string { return v.SessionTimeoutMs }).(pulumi.StringPtrOutput)
}

type ServiceKafkaUserConfigKafkaConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceKafkaUserConfigKafkaConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaUserConfigKafkaConnectConfig)(nil)).Elem()
}

func (o ServiceKafkaUserConfigKafkaConnectConfigPtrOutput) ToServiceKafkaUserConfigKafkaConnectConfigPtrOutput() ServiceKafkaUserConfigKafkaConnectConfigPtrOutput {
	return o
}

func (o ServiceKafkaUserConfigKafkaConnectConfigPtrOutput) ToServiceKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigKafkaConnectConfigPtrOutput {
	return o
}

func (o ServiceKafkaUserConfigKafkaConnectConfigPtrOutput) Elem() ServiceKafkaUserConfigKafkaConnectConfigOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafkaConnectConfig) ServiceKafkaUserConfigKafkaConnectConfig { return *v }).(ServiceKafkaUserConfigKafkaConnectConfigOutput)
}

func (o ServiceKafkaUserConfigKafkaConnectConfigPtrOutput) ConnectorClientConfigOverridePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorClientConfigOverridePolicy
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaConnectConfigPtrOutput) ConsumerAutoOffsetReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerAutoOffsetReset
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaConnectConfigPtrOutput) ConsumerFetchMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerFetchMaxBytes
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaConnectConfigPtrOutput) ConsumerIsolationLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerIsolationLevel
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaConnectConfigPtrOutput) ConsumerMaxPartitionFetchBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerMaxPartitionFetchBytes
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaConnectConfigPtrOutput) ConsumerMaxPollIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerMaxPollIntervalMs
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaConnectConfigPtrOutput) ConsumerMaxPollRecords() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerMaxPollRecords
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaConnectConfigPtrOutput) OffsetFlushIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.OffsetFlushIntervalMs
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaConnectConfigPtrOutput) OffsetFlushTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.OffsetFlushTimeoutMs
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaConnectConfigPtrOutput) ProducerMaxRequestSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProducerMaxRequestSize
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaConnectConfigPtrOutput) SessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.SessionTimeoutMs
	}).(pulumi.StringPtrOutput)
}

type ServiceKafkaUserConfigKafkaRestConfig struct {
	ConsumerEnableAutoCommit  *string `pulumi:"consumerEnableAutoCommit"`
	ConsumerRequestMaxBytes   *string `pulumi:"consumerRequestMaxBytes"`
	ConsumerRequestTimeoutMs  *string `pulumi:"consumerRequestTimeoutMs"`
	ProducerAcks              *string `pulumi:"producerAcks"`
	ProducerLingerMs          *string `pulumi:"producerLingerMs"`
	SimpleconsumerPoolSizeMax *string `pulumi:"simpleconsumerPoolSizeMax"`
}

// ServiceKafkaUserConfigKafkaRestConfigInput is an input type that accepts ServiceKafkaUserConfigKafkaRestConfigArgs and ServiceKafkaUserConfigKafkaRestConfigOutput values.
// You can construct a concrete instance of `ServiceKafkaUserConfigKafkaRestConfigInput` via:
//
//          ServiceKafkaUserConfigKafkaRestConfigArgs{...}
type ServiceKafkaUserConfigKafkaRestConfigInput interface {
	pulumi.Input

	ToServiceKafkaUserConfigKafkaRestConfigOutput() ServiceKafkaUserConfigKafkaRestConfigOutput
	ToServiceKafkaUserConfigKafkaRestConfigOutputWithContext(context.Context) ServiceKafkaUserConfigKafkaRestConfigOutput
}

type ServiceKafkaUserConfigKafkaRestConfigArgs struct {
	ConsumerEnableAutoCommit  pulumi.StringPtrInput `pulumi:"consumerEnableAutoCommit"`
	ConsumerRequestMaxBytes   pulumi.StringPtrInput `pulumi:"consumerRequestMaxBytes"`
	ConsumerRequestTimeoutMs  pulumi.StringPtrInput `pulumi:"consumerRequestTimeoutMs"`
	ProducerAcks              pulumi.StringPtrInput `pulumi:"producerAcks"`
	ProducerLingerMs          pulumi.StringPtrInput `pulumi:"producerLingerMs"`
	SimpleconsumerPoolSizeMax pulumi.StringPtrInput `pulumi:"simpleconsumerPoolSizeMax"`
}

func (ServiceKafkaUserConfigKafkaRestConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaUserConfigKafkaRestConfig)(nil)).Elem()
}

func (i ServiceKafkaUserConfigKafkaRestConfigArgs) ToServiceKafkaUserConfigKafkaRestConfigOutput() ServiceKafkaUserConfigKafkaRestConfigOutput {
	return i.ToServiceKafkaUserConfigKafkaRestConfigOutputWithContext(context.Background())
}

func (i ServiceKafkaUserConfigKafkaRestConfigArgs) ToServiceKafkaUserConfigKafkaRestConfigOutputWithContext(ctx context.Context) ServiceKafkaUserConfigKafkaRestConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigKafkaRestConfigOutput)
}

func (i ServiceKafkaUserConfigKafkaRestConfigArgs) ToServiceKafkaUserConfigKafkaRestConfigPtrOutput() ServiceKafkaUserConfigKafkaRestConfigPtrOutput {
	return i.ToServiceKafkaUserConfigKafkaRestConfigPtrOutputWithContext(context.Background())
}

func (i ServiceKafkaUserConfigKafkaRestConfigArgs) ToServiceKafkaUserConfigKafkaRestConfigPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigKafkaRestConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigKafkaRestConfigOutput).ToServiceKafkaUserConfigKafkaRestConfigPtrOutputWithContext(ctx)
}

// ServiceKafkaUserConfigKafkaRestConfigPtrInput is an input type that accepts ServiceKafkaUserConfigKafkaRestConfigArgs, ServiceKafkaUserConfigKafkaRestConfigPtr and ServiceKafkaUserConfigKafkaRestConfigPtrOutput values.
// You can construct a concrete instance of `ServiceKafkaUserConfigKafkaRestConfigPtrInput` via:
//
//          ServiceKafkaUserConfigKafkaRestConfigArgs{...}
//
//  or:
//
//          nil
type ServiceKafkaUserConfigKafkaRestConfigPtrInput interface {
	pulumi.Input

	ToServiceKafkaUserConfigKafkaRestConfigPtrOutput() ServiceKafkaUserConfigKafkaRestConfigPtrOutput
	ToServiceKafkaUserConfigKafkaRestConfigPtrOutputWithContext(context.Context) ServiceKafkaUserConfigKafkaRestConfigPtrOutput
}

type serviceKafkaUserConfigKafkaRestConfigPtrType ServiceKafkaUserConfigKafkaRestConfigArgs

func ServiceKafkaUserConfigKafkaRestConfigPtr(v *ServiceKafkaUserConfigKafkaRestConfigArgs) ServiceKafkaUserConfigKafkaRestConfigPtrInput {
	return (*serviceKafkaUserConfigKafkaRestConfigPtrType)(v)
}

func (*serviceKafkaUserConfigKafkaRestConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaUserConfigKafkaRestConfig)(nil)).Elem()
}

func (i *serviceKafkaUserConfigKafkaRestConfigPtrType) ToServiceKafkaUserConfigKafkaRestConfigPtrOutput() ServiceKafkaUserConfigKafkaRestConfigPtrOutput {
	return i.ToServiceKafkaUserConfigKafkaRestConfigPtrOutputWithContext(context.Background())
}

func (i *serviceKafkaUserConfigKafkaRestConfigPtrType) ToServiceKafkaUserConfigKafkaRestConfigPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigKafkaRestConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigKafkaRestConfigPtrOutput)
}

type ServiceKafkaUserConfigKafkaRestConfigOutput struct{ *pulumi.OutputState }

func (ServiceKafkaUserConfigKafkaRestConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaUserConfigKafkaRestConfig)(nil)).Elem()
}

func (o ServiceKafkaUserConfigKafkaRestConfigOutput) ToServiceKafkaUserConfigKafkaRestConfigOutput() ServiceKafkaUserConfigKafkaRestConfigOutput {
	return o
}

func (o ServiceKafkaUserConfigKafkaRestConfigOutput) ToServiceKafkaUserConfigKafkaRestConfigOutputWithContext(ctx context.Context) ServiceKafkaUserConfigKafkaRestConfigOutput {
	return o
}

func (o ServiceKafkaUserConfigKafkaRestConfigOutput) ToServiceKafkaUserConfigKafkaRestConfigPtrOutput() ServiceKafkaUserConfigKafkaRestConfigPtrOutput {
	return o.ToServiceKafkaUserConfigKafkaRestConfigPtrOutputWithContext(context.Background())
}

func (o ServiceKafkaUserConfigKafkaRestConfigOutput) ToServiceKafkaUserConfigKafkaRestConfigPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigKafkaRestConfigPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafkaRestConfig) *ServiceKafkaUserConfigKafkaRestConfig {
		return &v
	}).(ServiceKafkaUserConfigKafkaRestConfigPtrOutput)
}
func (o ServiceKafkaUserConfigKafkaRestConfigOutput) ConsumerEnableAutoCommit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafkaRestConfig) *string { return v.ConsumerEnableAutoCommit }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaRestConfigOutput) ConsumerRequestMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafkaRestConfig) *string { return v.ConsumerRequestMaxBytes }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaRestConfigOutput) ConsumerRequestTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafkaRestConfig) *string { return v.ConsumerRequestTimeoutMs }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaRestConfigOutput) ProducerAcks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafkaRestConfig) *string { return v.ProducerAcks }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaRestConfigOutput) ProducerLingerMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafkaRestConfig) *string { return v.ProducerLingerMs }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaRestConfigOutput) SimpleconsumerPoolSizeMax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigKafkaRestConfig) *string { return v.SimpleconsumerPoolSizeMax }).(pulumi.StringPtrOutput)
}

type ServiceKafkaUserConfigKafkaRestConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceKafkaUserConfigKafkaRestConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaUserConfigKafkaRestConfig)(nil)).Elem()
}

func (o ServiceKafkaUserConfigKafkaRestConfigPtrOutput) ToServiceKafkaUserConfigKafkaRestConfigPtrOutput() ServiceKafkaUserConfigKafkaRestConfigPtrOutput {
	return o
}

func (o ServiceKafkaUserConfigKafkaRestConfigPtrOutput) ToServiceKafkaUserConfigKafkaRestConfigPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigKafkaRestConfigPtrOutput {
	return o
}

func (o ServiceKafkaUserConfigKafkaRestConfigPtrOutput) Elem() ServiceKafkaUserConfigKafkaRestConfigOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafkaRestConfig) ServiceKafkaUserConfigKafkaRestConfig { return *v }).(ServiceKafkaUserConfigKafkaRestConfigOutput)
}

func (o ServiceKafkaUserConfigKafkaRestConfigPtrOutput) ConsumerEnableAutoCommit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafkaRestConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerEnableAutoCommit
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaRestConfigPtrOutput) ConsumerRequestMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafkaRestConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerRequestMaxBytes
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaRestConfigPtrOutput) ConsumerRequestTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafkaRestConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerRequestTimeoutMs
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaRestConfigPtrOutput) ProducerAcks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafkaRestConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProducerAcks
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaRestConfigPtrOutput) ProducerLingerMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafkaRestConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProducerLingerMs
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigKafkaRestConfigPtrOutput) SimpleconsumerPoolSizeMax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigKafkaRestConfig) *string {
		if v == nil {
			return nil
		}
		return v.SimpleconsumerPoolSizeMax
	}).(pulumi.StringPtrOutput)
}

type ServiceKafkaUserConfigPrivateAccess struct {
	Prometheus *string `pulumi:"prometheus"`
}

// ServiceKafkaUserConfigPrivateAccessInput is an input type that accepts ServiceKafkaUserConfigPrivateAccessArgs and ServiceKafkaUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `ServiceKafkaUserConfigPrivateAccessInput` via:
//
//          ServiceKafkaUserConfigPrivateAccessArgs{...}
type ServiceKafkaUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToServiceKafkaUserConfigPrivateAccessOutput() ServiceKafkaUserConfigPrivateAccessOutput
	ToServiceKafkaUserConfigPrivateAccessOutputWithContext(context.Context) ServiceKafkaUserConfigPrivateAccessOutput
}

type ServiceKafkaUserConfigPrivateAccessArgs struct {
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (ServiceKafkaUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaUserConfigPrivateAccess)(nil)).Elem()
}

func (i ServiceKafkaUserConfigPrivateAccessArgs) ToServiceKafkaUserConfigPrivateAccessOutput() ServiceKafkaUserConfigPrivateAccessOutput {
	return i.ToServiceKafkaUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i ServiceKafkaUserConfigPrivateAccessArgs) ToServiceKafkaUserConfigPrivateAccessOutputWithContext(ctx context.Context) ServiceKafkaUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigPrivateAccessOutput)
}

func (i ServiceKafkaUserConfigPrivateAccessArgs) ToServiceKafkaUserConfigPrivateAccessPtrOutput() ServiceKafkaUserConfigPrivateAccessPtrOutput {
	return i.ToServiceKafkaUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i ServiceKafkaUserConfigPrivateAccessArgs) ToServiceKafkaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigPrivateAccessOutput).ToServiceKafkaUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// ServiceKafkaUserConfigPrivateAccessPtrInput is an input type that accepts ServiceKafkaUserConfigPrivateAccessArgs, ServiceKafkaUserConfigPrivateAccessPtr and ServiceKafkaUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `ServiceKafkaUserConfigPrivateAccessPtrInput` via:
//
//          ServiceKafkaUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type ServiceKafkaUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToServiceKafkaUserConfigPrivateAccessPtrOutput() ServiceKafkaUserConfigPrivateAccessPtrOutput
	ToServiceKafkaUserConfigPrivateAccessPtrOutputWithContext(context.Context) ServiceKafkaUserConfigPrivateAccessPtrOutput
}

type serviceKafkaUserConfigPrivateAccessPtrType ServiceKafkaUserConfigPrivateAccessArgs

func ServiceKafkaUserConfigPrivateAccessPtr(v *ServiceKafkaUserConfigPrivateAccessArgs) ServiceKafkaUserConfigPrivateAccessPtrInput {
	return (*serviceKafkaUserConfigPrivateAccessPtrType)(v)
}

func (*serviceKafkaUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaUserConfigPrivateAccess)(nil)).Elem()
}

func (i *serviceKafkaUserConfigPrivateAccessPtrType) ToServiceKafkaUserConfigPrivateAccessPtrOutput() ServiceKafkaUserConfigPrivateAccessPtrOutput {
	return i.ToServiceKafkaUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *serviceKafkaUserConfigPrivateAccessPtrType) ToServiceKafkaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigPrivateAccessPtrOutput)
}

type ServiceKafkaUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (ServiceKafkaUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaUserConfigPrivateAccess)(nil)).Elem()
}

func (o ServiceKafkaUserConfigPrivateAccessOutput) ToServiceKafkaUserConfigPrivateAccessOutput() ServiceKafkaUserConfigPrivateAccessOutput {
	return o
}

func (o ServiceKafkaUserConfigPrivateAccessOutput) ToServiceKafkaUserConfigPrivateAccessOutputWithContext(ctx context.Context) ServiceKafkaUserConfigPrivateAccessOutput {
	return o
}

func (o ServiceKafkaUserConfigPrivateAccessOutput) ToServiceKafkaUserConfigPrivateAccessPtrOutput() ServiceKafkaUserConfigPrivateAccessPtrOutput {
	return o.ToServiceKafkaUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o ServiceKafkaUserConfigPrivateAccessOutput) ToServiceKafkaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigPrivateAccess) *ServiceKafkaUserConfigPrivateAccess {
		return &v
	}).(ServiceKafkaUserConfigPrivateAccessPtrOutput)
}
func (o ServiceKafkaUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type ServiceKafkaUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (ServiceKafkaUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaUserConfigPrivateAccess)(nil)).Elem()
}

func (o ServiceKafkaUserConfigPrivateAccessPtrOutput) ToServiceKafkaUserConfigPrivateAccessPtrOutput() ServiceKafkaUserConfigPrivateAccessPtrOutput {
	return o
}

func (o ServiceKafkaUserConfigPrivateAccessPtrOutput) ToServiceKafkaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigPrivateAccessPtrOutput {
	return o
}

func (o ServiceKafkaUserConfigPrivateAccessPtrOutput) Elem() ServiceKafkaUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigPrivateAccess) ServiceKafkaUserConfigPrivateAccess { return *v }).(ServiceKafkaUserConfigPrivateAccessOutput)
}

func (o ServiceKafkaUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type ServiceKafkaUserConfigPrivatelinkAccess struct {
	Kafka          *string `pulumi:"kafka"`
	KafkaConnect   *string `pulumi:"kafkaConnect"`
	KafkaRest      *string `pulumi:"kafkaRest"`
	SchemaRegistry *string `pulumi:"schemaRegistry"`
}

// ServiceKafkaUserConfigPrivatelinkAccessInput is an input type that accepts ServiceKafkaUserConfigPrivatelinkAccessArgs and ServiceKafkaUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `ServiceKafkaUserConfigPrivatelinkAccessInput` via:
//
//          ServiceKafkaUserConfigPrivatelinkAccessArgs{...}
type ServiceKafkaUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToServiceKafkaUserConfigPrivatelinkAccessOutput() ServiceKafkaUserConfigPrivatelinkAccessOutput
	ToServiceKafkaUserConfigPrivatelinkAccessOutputWithContext(context.Context) ServiceKafkaUserConfigPrivatelinkAccessOutput
}

type ServiceKafkaUserConfigPrivatelinkAccessArgs struct {
	Kafka          pulumi.StringPtrInput `pulumi:"kafka"`
	KafkaConnect   pulumi.StringPtrInput `pulumi:"kafkaConnect"`
	KafkaRest      pulumi.StringPtrInput `pulumi:"kafkaRest"`
	SchemaRegistry pulumi.StringPtrInput `pulumi:"schemaRegistry"`
}

func (ServiceKafkaUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i ServiceKafkaUserConfigPrivatelinkAccessArgs) ToServiceKafkaUserConfigPrivatelinkAccessOutput() ServiceKafkaUserConfigPrivatelinkAccessOutput {
	return i.ToServiceKafkaUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i ServiceKafkaUserConfigPrivatelinkAccessArgs) ToServiceKafkaUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) ServiceKafkaUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigPrivatelinkAccessOutput)
}

func (i ServiceKafkaUserConfigPrivatelinkAccessArgs) ToServiceKafkaUserConfigPrivatelinkAccessPtrOutput() ServiceKafkaUserConfigPrivatelinkAccessPtrOutput {
	return i.ToServiceKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i ServiceKafkaUserConfigPrivatelinkAccessArgs) ToServiceKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigPrivatelinkAccessOutput).ToServiceKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// ServiceKafkaUserConfigPrivatelinkAccessPtrInput is an input type that accepts ServiceKafkaUserConfigPrivatelinkAccessArgs, ServiceKafkaUserConfigPrivatelinkAccessPtr and ServiceKafkaUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `ServiceKafkaUserConfigPrivatelinkAccessPtrInput` via:
//
//          ServiceKafkaUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type ServiceKafkaUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToServiceKafkaUserConfigPrivatelinkAccessPtrOutput() ServiceKafkaUserConfigPrivatelinkAccessPtrOutput
	ToServiceKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) ServiceKafkaUserConfigPrivatelinkAccessPtrOutput
}

type serviceKafkaUserConfigPrivatelinkAccessPtrType ServiceKafkaUserConfigPrivatelinkAccessArgs

func ServiceKafkaUserConfigPrivatelinkAccessPtr(v *ServiceKafkaUserConfigPrivatelinkAccessArgs) ServiceKafkaUserConfigPrivatelinkAccessPtrInput {
	return (*serviceKafkaUserConfigPrivatelinkAccessPtrType)(v)
}

func (*serviceKafkaUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *serviceKafkaUserConfigPrivatelinkAccessPtrType) ToServiceKafkaUserConfigPrivatelinkAccessPtrOutput() ServiceKafkaUserConfigPrivatelinkAccessPtrOutput {
	return i.ToServiceKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *serviceKafkaUserConfigPrivatelinkAccessPtrType) ToServiceKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigPrivatelinkAccessPtrOutput)
}

type ServiceKafkaUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (ServiceKafkaUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o ServiceKafkaUserConfigPrivatelinkAccessOutput) ToServiceKafkaUserConfigPrivatelinkAccessOutput() ServiceKafkaUserConfigPrivatelinkAccessOutput {
	return o
}

func (o ServiceKafkaUserConfigPrivatelinkAccessOutput) ToServiceKafkaUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) ServiceKafkaUserConfigPrivatelinkAccessOutput {
	return o
}

func (o ServiceKafkaUserConfigPrivatelinkAccessOutput) ToServiceKafkaUserConfigPrivatelinkAccessPtrOutput() ServiceKafkaUserConfigPrivatelinkAccessPtrOutput {
	return o.ToServiceKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o ServiceKafkaUserConfigPrivatelinkAccessOutput) ToServiceKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigPrivatelinkAccess) *ServiceKafkaUserConfigPrivatelinkAccess {
		return &v
	}).(ServiceKafkaUserConfigPrivatelinkAccessPtrOutput)
}
func (o ServiceKafkaUserConfigPrivatelinkAccessOutput) Kafka() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigPrivatelinkAccess) *string { return v.Kafka }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigPrivatelinkAccessOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigPrivatelinkAccess) *string { return v.KafkaConnect }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigPrivatelinkAccessOutput) KafkaRest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigPrivatelinkAccess) *string { return v.KafkaRest }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigPrivatelinkAccessOutput) SchemaRegistry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigPrivatelinkAccess) *string { return v.SchemaRegistry }).(pulumi.StringPtrOutput)
}

type ServiceKafkaUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (ServiceKafkaUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o ServiceKafkaUserConfigPrivatelinkAccessPtrOutput) ToServiceKafkaUserConfigPrivatelinkAccessPtrOutput() ServiceKafkaUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o ServiceKafkaUserConfigPrivatelinkAccessPtrOutput) ToServiceKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o ServiceKafkaUserConfigPrivatelinkAccessPtrOutput) Elem() ServiceKafkaUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigPrivatelinkAccess) ServiceKafkaUserConfigPrivatelinkAccess { return *v }).(ServiceKafkaUserConfigPrivatelinkAccessOutput)
}

func (o ServiceKafkaUserConfigPrivatelinkAccessPtrOutput) Kafka() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Kafka
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigPrivatelinkAccessPtrOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaConnect
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigPrivatelinkAccessPtrOutput) KafkaRest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaRest
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigPrivatelinkAccessPtrOutput) SchemaRegistry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.SchemaRegistry
	}).(pulumi.StringPtrOutput)
}

type ServiceKafkaUserConfigPublicAccess struct {
	Kafka          *string `pulumi:"kafka"`
	KafkaConnect   *string `pulumi:"kafkaConnect"`
	KafkaRest      *string `pulumi:"kafkaRest"`
	Prometheus     *string `pulumi:"prometheus"`
	SchemaRegistry *string `pulumi:"schemaRegistry"`
}

// ServiceKafkaUserConfigPublicAccessInput is an input type that accepts ServiceKafkaUserConfigPublicAccessArgs and ServiceKafkaUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `ServiceKafkaUserConfigPublicAccessInput` via:
//
//          ServiceKafkaUserConfigPublicAccessArgs{...}
type ServiceKafkaUserConfigPublicAccessInput interface {
	pulumi.Input

	ToServiceKafkaUserConfigPublicAccessOutput() ServiceKafkaUserConfigPublicAccessOutput
	ToServiceKafkaUserConfigPublicAccessOutputWithContext(context.Context) ServiceKafkaUserConfigPublicAccessOutput
}

type ServiceKafkaUserConfigPublicAccessArgs struct {
	Kafka          pulumi.StringPtrInput `pulumi:"kafka"`
	KafkaConnect   pulumi.StringPtrInput `pulumi:"kafkaConnect"`
	KafkaRest      pulumi.StringPtrInput `pulumi:"kafkaRest"`
	Prometheus     pulumi.StringPtrInput `pulumi:"prometheus"`
	SchemaRegistry pulumi.StringPtrInput `pulumi:"schemaRegistry"`
}

func (ServiceKafkaUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaUserConfigPublicAccess)(nil)).Elem()
}

func (i ServiceKafkaUserConfigPublicAccessArgs) ToServiceKafkaUserConfigPublicAccessOutput() ServiceKafkaUserConfigPublicAccessOutput {
	return i.ToServiceKafkaUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i ServiceKafkaUserConfigPublicAccessArgs) ToServiceKafkaUserConfigPublicAccessOutputWithContext(ctx context.Context) ServiceKafkaUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigPublicAccessOutput)
}

func (i ServiceKafkaUserConfigPublicAccessArgs) ToServiceKafkaUserConfigPublicAccessPtrOutput() ServiceKafkaUserConfigPublicAccessPtrOutput {
	return i.ToServiceKafkaUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i ServiceKafkaUserConfigPublicAccessArgs) ToServiceKafkaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigPublicAccessOutput).ToServiceKafkaUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// ServiceKafkaUserConfigPublicAccessPtrInput is an input type that accepts ServiceKafkaUserConfigPublicAccessArgs, ServiceKafkaUserConfigPublicAccessPtr and ServiceKafkaUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `ServiceKafkaUserConfigPublicAccessPtrInput` via:
//
//          ServiceKafkaUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type ServiceKafkaUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToServiceKafkaUserConfigPublicAccessPtrOutput() ServiceKafkaUserConfigPublicAccessPtrOutput
	ToServiceKafkaUserConfigPublicAccessPtrOutputWithContext(context.Context) ServiceKafkaUserConfigPublicAccessPtrOutput
}

type serviceKafkaUserConfigPublicAccessPtrType ServiceKafkaUserConfigPublicAccessArgs

func ServiceKafkaUserConfigPublicAccessPtr(v *ServiceKafkaUserConfigPublicAccessArgs) ServiceKafkaUserConfigPublicAccessPtrInput {
	return (*serviceKafkaUserConfigPublicAccessPtrType)(v)
}

func (*serviceKafkaUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaUserConfigPublicAccess)(nil)).Elem()
}

func (i *serviceKafkaUserConfigPublicAccessPtrType) ToServiceKafkaUserConfigPublicAccessPtrOutput() ServiceKafkaUserConfigPublicAccessPtrOutput {
	return i.ToServiceKafkaUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *serviceKafkaUserConfigPublicAccessPtrType) ToServiceKafkaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigPublicAccessPtrOutput)
}

type ServiceKafkaUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (ServiceKafkaUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaUserConfigPublicAccess)(nil)).Elem()
}

func (o ServiceKafkaUserConfigPublicAccessOutput) ToServiceKafkaUserConfigPublicAccessOutput() ServiceKafkaUserConfigPublicAccessOutput {
	return o
}

func (o ServiceKafkaUserConfigPublicAccessOutput) ToServiceKafkaUserConfigPublicAccessOutputWithContext(ctx context.Context) ServiceKafkaUserConfigPublicAccessOutput {
	return o
}

func (o ServiceKafkaUserConfigPublicAccessOutput) ToServiceKafkaUserConfigPublicAccessPtrOutput() ServiceKafkaUserConfigPublicAccessPtrOutput {
	return o.ToServiceKafkaUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o ServiceKafkaUserConfigPublicAccessOutput) ToServiceKafkaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigPublicAccess) *ServiceKafkaUserConfigPublicAccess {
		return &v
	}).(ServiceKafkaUserConfigPublicAccessPtrOutput)
}
func (o ServiceKafkaUserConfigPublicAccessOutput) Kafka() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigPublicAccess) *string { return v.Kafka }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigPublicAccessOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigPublicAccess) *string { return v.KafkaConnect }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigPublicAccessOutput) KafkaRest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigPublicAccess) *string { return v.KafkaRest }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigPublicAccessOutput) SchemaRegistry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigPublicAccess) *string { return v.SchemaRegistry }).(pulumi.StringPtrOutput)
}

type ServiceKafkaUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (ServiceKafkaUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaUserConfigPublicAccess)(nil)).Elem()
}

func (o ServiceKafkaUserConfigPublicAccessPtrOutput) ToServiceKafkaUserConfigPublicAccessPtrOutput() ServiceKafkaUserConfigPublicAccessPtrOutput {
	return o
}

func (o ServiceKafkaUserConfigPublicAccessPtrOutput) ToServiceKafkaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigPublicAccessPtrOutput {
	return o
}

func (o ServiceKafkaUserConfigPublicAccessPtrOutput) Elem() ServiceKafkaUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigPublicAccess) ServiceKafkaUserConfigPublicAccess { return *v }).(ServiceKafkaUserConfigPublicAccessOutput)
}

func (o ServiceKafkaUserConfigPublicAccessPtrOutput) Kafka() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Kafka
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigPublicAccessPtrOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaConnect
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigPublicAccessPtrOutput) KafkaRest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaRest
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigPublicAccessPtrOutput) SchemaRegistry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.SchemaRegistry
	}).(pulumi.StringPtrOutput)
}

type ServiceKafkaUserConfigSchemaRegistryConfig struct {
	LeaderEligibility *string `pulumi:"leaderEligibility"`
	TopicName         *string `pulumi:"topicName"`
}

// ServiceKafkaUserConfigSchemaRegistryConfigInput is an input type that accepts ServiceKafkaUserConfigSchemaRegistryConfigArgs and ServiceKafkaUserConfigSchemaRegistryConfigOutput values.
// You can construct a concrete instance of `ServiceKafkaUserConfigSchemaRegistryConfigInput` via:
//
//          ServiceKafkaUserConfigSchemaRegistryConfigArgs{...}
type ServiceKafkaUserConfigSchemaRegistryConfigInput interface {
	pulumi.Input

	ToServiceKafkaUserConfigSchemaRegistryConfigOutput() ServiceKafkaUserConfigSchemaRegistryConfigOutput
	ToServiceKafkaUserConfigSchemaRegistryConfigOutputWithContext(context.Context) ServiceKafkaUserConfigSchemaRegistryConfigOutput
}

type ServiceKafkaUserConfigSchemaRegistryConfigArgs struct {
	LeaderEligibility pulumi.StringPtrInput `pulumi:"leaderEligibility"`
	TopicName         pulumi.StringPtrInput `pulumi:"topicName"`
}

func (ServiceKafkaUserConfigSchemaRegistryConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaUserConfigSchemaRegistryConfig)(nil)).Elem()
}

func (i ServiceKafkaUserConfigSchemaRegistryConfigArgs) ToServiceKafkaUserConfigSchemaRegistryConfigOutput() ServiceKafkaUserConfigSchemaRegistryConfigOutput {
	return i.ToServiceKafkaUserConfigSchemaRegistryConfigOutputWithContext(context.Background())
}

func (i ServiceKafkaUserConfigSchemaRegistryConfigArgs) ToServiceKafkaUserConfigSchemaRegistryConfigOutputWithContext(ctx context.Context) ServiceKafkaUserConfigSchemaRegistryConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigSchemaRegistryConfigOutput)
}

func (i ServiceKafkaUserConfigSchemaRegistryConfigArgs) ToServiceKafkaUserConfigSchemaRegistryConfigPtrOutput() ServiceKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return i.ToServiceKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(context.Background())
}

func (i ServiceKafkaUserConfigSchemaRegistryConfigArgs) ToServiceKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigSchemaRegistryConfigOutput).ToServiceKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(ctx)
}

// ServiceKafkaUserConfigSchemaRegistryConfigPtrInput is an input type that accepts ServiceKafkaUserConfigSchemaRegistryConfigArgs, ServiceKafkaUserConfigSchemaRegistryConfigPtr and ServiceKafkaUserConfigSchemaRegistryConfigPtrOutput values.
// You can construct a concrete instance of `ServiceKafkaUserConfigSchemaRegistryConfigPtrInput` via:
//
//          ServiceKafkaUserConfigSchemaRegistryConfigArgs{...}
//
//  or:
//
//          nil
type ServiceKafkaUserConfigSchemaRegistryConfigPtrInput interface {
	pulumi.Input

	ToServiceKafkaUserConfigSchemaRegistryConfigPtrOutput() ServiceKafkaUserConfigSchemaRegistryConfigPtrOutput
	ToServiceKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(context.Context) ServiceKafkaUserConfigSchemaRegistryConfigPtrOutput
}

type serviceKafkaUserConfigSchemaRegistryConfigPtrType ServiceKafkaUserConfigSchemaRegistryConfigArgs

func ServiceKafkaUserConfigSchemaRegistryConfigPtr(v *ServiceKafkaUserConfigSchemaRegistryConfigArgs) ServiceKafkaUserConfigSchemaRegistryConfigPtrInput {
	return (*serviceKafkaUserConfigSchemaRegistryConfigPtrType)(v)
}

func (*serviceKafkaUserConfigSchemaRegistryConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaUserConfigSchemaRegistryConfig)(nil)).Elem()
}

func (i *serviceKafkaUserConfigSchemaRegistryConfigPtrType) ToServiceKafkaUserConfigSchemaRegistryConfigPtrOutput() ServiceKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return i.ToServiceKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(context.Background())
}

func (i *serviceKafkaUserConfigSchemaRegistryConfigPtrType) ToServiceKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceKafkaUserConfigSchemaRegistryConfigPtrOutput)
}

type ServiceKafkaUserConfigSchemaRegistryConfigOutput struct{ *pulumi.OutputState }

func (ServiceKafkaUserConfigSchemaRegistryConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKafkaUserConfigSchemaRegistryConfig)(nil)).Elem()
}

func (o ServiceKafkaUserConfigSchemaRegistryConfigOutput) ToServiceKafkaUserConfigSchemaRegistryConfigOutput() ServiceKafkaUserConfigSchemaRegistryConfigOutput {
	return o
}

func (o ServiceKafkaUserConfigSchemaRegistryConfigOutput) ToServiceKafkaUserConfigSchemaRegistryConfigOutputWithContext(ctx context.Context) ServiceKafkaUserConfigSchemaRegistryConfigOutput {
	return o
}

func (o ServiceKafkaUserConfigSchemaRegistryConfigOutput) ToServiceKafkaUserConfigSchemaRegistryConfigPtrOutput() ServiceKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return o.ToServiceKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(context.Background())
}

func (o ServiceKafkaUserConfigSchemaRegistryConfigOutput) ToServiceKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigSchemaRegistryConfig) *ServiceKafkaUserConfigSchemaRegistryConfig {
		return &v
	}).(ServiceKafkaUserConfigSchemaRegistryConfigPtrOutput)
}
func (o ServiceKafkaUserConfigSchemaRegistryConfigOutput) LeaderEligibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigSchemaRegistryConfig) *string { return v.LeaderEligibility }).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigSchemaRegistryConfigOutput) TopicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceKafkaUserConfigSchemaRegistryConfig) *string { return v.TopicName }).(pulumi.StringPtrOutput)
}

type ServiceKafkaUserConfigSchemaRegistryConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceKafkaUserConfigSchemaRegistryConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKafkaUserConfigSchemaRegistryConfig)(nil)).Elem()
}

func (o ServiceKafkaUserConfigSchemaRegistryConfigPtrOutput) ToServiceKafkaUserConfigSchemaRegistryConfigPtrOutput() ServiceKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return o
}

func (o ServiceKafkaUserConfigSchemaRegistryConfigPtrOutput) ToServiceKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(ctx context.Context) ServiceKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return o
}

func (o ServiceKafkaUserConfigSchemaRegistryConfigPtrOutput) Elem() ServiceKafkaUserConfigSchemaRegistryConfigOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigSchemaRegistryConfig) ServiceKafkaUserConfigSchemaRegistryConfig {
		return *v
	}).(ServiceKafkaUserConfigSchemaRegistryConfigOutput)
}

func (o ServiceKafkaUserConfigSchemaRegistryConfigPtrOutput) LeaderEligibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigSchemaRegistryConfig) *string {
		if v == nil {
			return nil
		}
		return v.LeaderEligibility
	}).(pulumi.StringPtrOutput)
}

func (o ServiceKafkaUserConfigSchemaRegistryConfigPtrOutput) TopicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceKafkaUserConfigSchemaRegistryConfig) *string {
		if v == nil {
			return nil
		}
		return v.TopicName
	}).(pulumi.StringPtrOutput)
}

type ServiceMysql struct {
}

// ServiceMysqlInput is an input type that accepts ServiceMysqlArgs and ServiceMysqlOutput values.
// You can construct a concrete instance of `ServiceMysqlInput` via:
//
//          ServiceMysqlArgs{...}
type ServiceMysqlInput interface {
	pulumi.Input

	ToServiceMysqlOutput() ServiceMysqlOutput
	ToServiceMysqlOutputWithContext(context.Context) ServiceMysqlOutput
}

type ServiceMysqlArgs struct {
}

func (ServiceMysqlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceMysql)(nil)).Elem()
}

func (i ServiceMysqlArgs) ToServiceMysqlOutput() ServiceMysqlOutput {
	return i.ToServiceMysqlOutputWithContext(context.Background())
}

func (i ServiceMysqlArgs) ToServiceMysqlOutputWithContext(ctx context.Context) ServiceMysqlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMysqlOutput)
}

func (i ServiceMysqlArgs) ToServiceMysqlPtrOutput() ServiceMysqlPtrOutput {
	return i.ToServiceMysqlPtrOutputWithContext(context.Background())
}

func (i ServiceMysqlArgs) ToServiceMysqlPtrOutputWithContext(ctx context.Context) ServiceMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMysqlOutput).ToServiceMysqlPtrOutputWithContext(ctx)
}

// ServiceMysqlPtrInput is an input type that accepts ServiceMysqlArgs, ServiceMysqlPtr and ServiceMysqlPtrOutput values.
// You can construct a concrete instance of `ServiceMysqlPtrInput` via:
//
//          ServiceMysqlArgs{...}
//
//  or:
//
//          nil
type ServiceMysqlPtrInput interface {
	pulumi.Input

	ToServiceMysqlPtrOutput() ServiceMysqlPtrOutput
	ToServiceMysqlPtrOutputWithContext(context.Context) ServiceMysqlPtrOutput
}

type serviceMysqlPtrType ServiceMysqlArgs

func ServiceMysqlPtr(v *ServiceMysqlArgs) ServiceMysqlPtrInput {
	return (*serviceMysqlPtrType)(v)
}

func (*serviceMysqlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceMysql)(nil)).Elem()
}

func (i *serviceMysqlPtrType) ToServiceMysqlPtrOutput() ServiceMysqlPtrOutput {
	return i.ToServiceMysqlPtrOutputWithContext(context.Background())
}

func (i *serviceMysqlPtrType) ToServiceMysqlPtrOutputWithContext(ctx context.Context) ServiceMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMysqlPtrOutput)
}

type ServiceMysqlOutput struct{ *pulumi.OutputState }

func (ServiceMysqlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceMysql)(nil)).Elem()
}

func (o ServiceMysqlOutput) ToServiceMysqlOutput() ServiceMysqlOutput {
	return o
}

func (o ServiceMysqlOutput) ToServiceMysqlOutputWithContext(ctx context.Context) ServiceMysqlOutput {
	return o
}

func (o ServiceMysqlOutput) ToServiceMysqlPtrOutput() ServiceMysqlPtrOutput {
	return o.ToServiceMysqlPtrOutputWithContext(context.Background())
}

func (o ServiceMysqlOutput) ToServiceMysqlPtrOutputWithContext(ctx context.Context) ServiceMysqlPtrOutput {
	return o.ApplyT(func(v ServiceMysql) *ServiceMysql {
		return &v
	}).(ServiceMysqlPtrOutput)
}

type ServiceMysqlPtrOutput struct{ *pulumi.OutputState }

func (ServiceMysqlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceMysql)(nil)).Elem()
}

func (o ServiceMysqlPtrOutput) ToServiceMysqlPtrOutput() ServiceMysqlPtrOutput {
	return o
}

func (o ServiceMysqlPtrOutput) ToServiceMysqlPtrOutputWithContext(ctx context.Context) ServiceMysqlPtrOutput {
	return o
}

func (o ServiceMysqlPtrOutput) Elem() ServiceMysqlOutput {
	return o.ApplyT(func(v *ServiceMysql) ServiceMysql { return *v }).(ServiceMysqlOutput)
}

type ServiceMysqlUserConfig struct {
	AdminPassword      *string                                  `pulumi:"adminPassword"`
	AdminUsername      *string                                  `pulumi:"adminUsername"`
	BackupHour         *string                                  `pulumi:"backupHour"`
	BackupMinute       *string                                  `pulumi:"backupMinute"`
	IpFilters          []string                                 `pulumi:"ipFilters"`
	Migration          *ServiceMysqlUserConfigMigration         `pulumi:"migration"`
	Mysql              *ServiceMysqlUserConfigMysql             `pulumi:"mysql"`
	MysqlVersion       *string                                  `pulumi:"mysqlVersion"`
	PrivateAccess      *ServiceMysqlUserConfigPrivateAccess     `pulumi:"privateAccess"`
	PrivatelinkAccess  *ServiceMysqlUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	ProjectToForkFrom  *string                                  `pulumi:"projectToForkFrom"`
	PublicAccess       *ServiceMysqlUserConfigPublicAccess      `pulumi:"publicAccess"`
	RecoveryTargetTime *string                                  `pulumi:"recoveryTargetTime"`
	ServiceToForkFrom  *string                                  `pulumi:"serviceToForkFrom"`
}

// ServiceMysqlUserConfigInput is an input type that accepts ServiceMysqlUserConfigArgs and ServiceMysqlUserConfigOutput values.
// You can construct a concrete instance of `ServiceMysqlUserConfigInput` via:
//
//          ServiceMysqlUserConfigArgs{...}
type ServiceMysqlUserConfigInput interface {
	pulumi.Input

	ToServiceMysqlUserConfigOutput() ServiceMysqlUserConfigOutput
	ToServiceMysqlUserConfigOutputWithContext(context.Context) ServiceMysqlUserConfigOutput
}

type ServiceMysqlUserConfigArgs struct {
	AdminPassword      pulumi.StringPtrInput                           `pulumi:"adminPassword"`
	AdminUsername      pulumi.StringPtrInput                           `pulumi:"adminUsername"`
	BackupHour         pulumi.StringPtrInput                           `pulumi:"backupHour"`
	BackupMinute       pulumi.StringPtrInput                           `pulumi:"backupMinute"`
	IpFilters          pulumi.StringArrayInput                         `pulumi:"ipFilters"`
	Migration          ServiceMysqlUserConfigMigrationPtrInput         `pulumi:"migration"`
	Mysql              ServiceMysqlUserConfigMysqlPtrInput             `pulumi:"mysql"`
	MysqlVersion       pulumi.StringPtrInput                           `pulumi:"mysqlVersion"`
	PrivateAccess      ServiceMysqlUserConfigPrivateAccessPtrInput     `pulumi:"privateAccess"`
	PrivatelinkAccess  ServiceMysqlUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	ProjectToForkFrom  pulumi.StringPtrInput                           `pulumi:"projectToForkFrom"`
	PublicAccess       ServiceMysqlUserConfigPublicAccessPtrInput      `pulumi:"publicAccess"`
	RecoveryTargetTime pulumi.StringPtrInput                           `pulumi:"recoveryTargetTime"`
	ServiceToForkFrom  pulumi.StringPtrInput                           `pulumi:"serviceToForkFrom"`
}

func (ServiceMysqlUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceMysqlUserConfig)(nil)).Elem()
}

func (i ServiceMysqlUserConfigArgs) ToServiceMysqlUserConfigOutput() ServiceMysqlUserConfigOutput {
	return i.ToServiceMysqlUserConfigOutputWithContext(context.Background())
}

func (i ServiceMysqlUserConfigArgs) ToServiceMysqlUserConfigOutputWithContext(ctx context.Context) ServiceMysqlUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMysqlUserConfigOutput)
}

func (i ServiceMysqlUserConfigArgs) ToServiceMysqlUserConfigPtrOutput() ServiceMysqlUserConfigPtrOutput {
	return i.ToServiceMysqlUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceMysqlUserConfigArgs) ToServiceMysqlUserConfigPtrOutputWithContext(ctx context.Context) ServiceMysqlUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMysqlUserConfigOutput).ToServiceMysqlUserConfigPtrOutputWithContext(ctx)
}

// ServiceMysqlUserConfigPtrInput is an input type that accepts ServiceMysqlUserConfigArgs, ServiceMysqlUserConfigPtr and ServiceMysqlUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceMysqlUserConfigPtrInput` via:
//
//          ServiceMysqlUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceMysqlUserConfigPtrInput interface {
	pulumi.Input

	ToServiceMysqlUserConfigPtrOutput() ServiceMysqlUserConfigPtrOutput
	ToServiceMysqlUserConfigPtrOutputWithContext(context.Context) ServiceMysqlUserConfigPtrOutput
}

type serviceMysqlUserConfigPtrType ServiceMysqlUserConfigArgs

func ServiceMysqlUserConfigPtr(v *ServiceMysqlUserConfigArgs) ServiceMysqlUserConfigPtrInput {
	return (*serviceMysqlUserConfigPtrType)(v)
}

func (*serviceMysqlUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceMysqlUserConfig)(nil)).Elem()
}

func (i *serviceMysqlUserConfigPtrType) ToServiceMysqlUserConfigPtrOutput() ServiceMysqlUserConfigPtrOutput {
	return i.ToServiceMysqlUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceMysqlUserConfigPtrType) ToServiceMysqlUserConfigPtrOutputWithContext(ctx context.Context) ServiceMysqlUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMysqlUserConfigPtrOutput)
}

type ServiceMysqlUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceMysqlUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceMysqlUserConfig)(nil)).Elem()
}

func (o ServiceMysqlUserConfigOutput) ToServiceMysqlUserConfigOutput() ServiceMysqlUserConfigOutput {
	return o
}

func (o ServiceMysqlUserConfigOutput) ToServiceMysqlUserConfigOutputWithContext(ctx context.Context) ServiceMysqlUserConfigOutput {
	return o
}

func (o ServiceMysqlUserConfigOutput) ToServiceMysqlUserConfigPtrOutput() ServiceMysqlUserConfigPtrOutput {
	return o.ToServiceMysqlUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceMysqlUserConfigOutput) ToServiceMysqlUserConfigPtrOutputWithContext(ctx context.Context) ServiceMysqlUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfig) *ServiceMysqlUserConfig {
		return &v
	}).(ServiceMysqlUserConfigPtrOutput)
}
func (o ServiceMysqlUserConfigOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfig) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfig) *string { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigOutput) BackupHour() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfig) *string { return v.BackupHour }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigOutput) BackupMinute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfig) *string { return v.BackupMinute }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

func (o ServiceMysqlUserConfigOutput) Migration() ServiceMysqlUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfig) *ServiceMysqlUserConfigMigration { return v.Migration }).(ServiceMysqlUserConfigMigrationPtrOutput)
}

func (o ServiceMysqlUserConfigOutput) Mysql() ServiceMysqlUserConfigMysqlPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfig) *ServiceMysqlUserConfigMysql { return v.Mysql }).(ServiceMysqlUserConfigMysqlPtrOutput)
}

func (o ServiceMysqlUserConfigOutput) MysqlVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfig) *string { return v.MysqlVersion }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigOutput) PrivateAccess() ServiceMysqlUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfig) *ServiceMysqlUserConfigPrivateAccess { return v.PrivateAccess }).(ServiceMysqlUserConfigPrivateAccessPtrOutput)
}

func (o ServiceMysqlUserConfigOutput) PrivatelinkAccess() ServiceMysqlUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfig) *ServiceMysqlUserConfigPrivatelinkAccess { return v.PrivatelinkAccess }).(ServiceMysqlUserConfigPrivatelinkAccessPtrOutput)
}

func (o ServiceMysqlUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigOutput) PublicAccess() ServiceMysqlUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfig) *ServiceMysqlUserConfigPublicAccess { return v.PublicAccess }).(ServiceMysqlUserConfigPublicAccessPtrOutput)
}

func (o ServiceMysqlUserConfigOutput) RecoveryTargetTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfig) *string { return v.RecoveryTargetTime }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

type ServiceMysqlUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceMysqlUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceMysqlUserConfig)(nil)).Elem()
}

func (o ServiceMysqlUserConfigPtrOutput) ToServiceMysqlUserConfigPtrOutput() ServiceMysqlUserConfigPtrOutput {
	return o
}

func (o ServiceMysqlUserConfigPtrOutput) ToServiceMysqlUserConfigPtrOutputWithContext(ctx context.Context) ServiceMysqlUserConfigPtrOutput {
	return o
}

func (o ServiceMysqlUserConfigPtrOutput) Elem() ServiceMysqlUserConfigOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfig) ServiceMysqlUserConfig { return *v }).(ServiceMysqlUserConfigOutput)
}

func (o ServiceMysqlUserConfigPtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigPtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigPtrOutput) BackupHour() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.BackupHour
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigPtrOutput) BackupMinute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.BackupMinute
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

func (o ServiceMysqlUserConfigPtrOutput) Migration() ServiceMysqlUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfig) *ServiceMysqlUserConfigMigration {
		if v == nil {
			return nil
		}
		return v.Migration
	}).(ServiceMysqlUserConfigMigrationPtrOutput)
}

func (o ServiceMysqlUserConfigPtrOutput) Mysql() ServiceMysqlUserConfigMysqlPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfig) *ServiceMysqlUserConfigMysql {
		if v == nil {
			return nil
		}
		return v.Mysql
	}).(ServiceMysqlUserConfigMysqlPtrOutput)
}

func (o ServiceMysqlUserConfigPtrOutput) MysqlVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.MysqlVersion
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigPtrOutput) PrivateAccess() ServiceMysqlUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfig) *ServiceMysqlUserConfigPrivateAccess {
		if v == nil {
			return nil
		}
		return v.PrivateAccess
	}).(ServiceMysqlUserConfigPrivateAccessPtrOutput)
}

func (o ServiceMysqlUserConfigPtrOutput) PrivatelinkAccess() ServiceMysqlUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfig) *ServiceMysqlUserConfigPrivatelinkAccess {
		if v == nil {
			return nil
		}
		return v.PrivatelinkAccess
	}).(ServiceMysqlUserConfigPrivatelinkAccessPtrOutput)
}

func (o ServiceMysqlUserConfigPtrOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProjectToForkFrom
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigPtrOutput) PublicAccess() ServiceMysqlUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfig) *ServiceMysqlUserConfigPublicAccess {
		if v == nil {
			return nil
		}
		return v.PublicAccess
	}).(ServiceMysqlUserConfigPublicAccessPtrOutput)
}

func (o ServiceMysqlUserConfigPtrOutput) RecoveryTargetTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryTargetTime
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigPtrOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceToForkFrom
	}).(pulumi.StringPtrOutput)
}

type ServiceMysqlUserConfigMigration struct {
	Dbname    *string `pulumi:"dbname"`
	Host      *string `pulumi:"host"`
	IgnoreDbs *string `pulumi:"ignoreDbs"`
	Password  *string `pulumi:"password"`
	Port      *string `pulumi:"port"`
	Ssl       *string `pulumi:"ssl"`
	Username  *string `pulumi:"username"`
}

// ServiceMysqlUserConfigMigrationInput is an input type that accepts ServiceMysqlUserConfigMigrationArgs and ServiceMysqlUserConfigMigrationOutput values.
// You can construct a concrete instance of `ServiceMysqlUserConfigMigrationInput` via:
//
//          ServiceMysqlUserConfigMigrationArgs{...}
type ServiceMysqlUserConfigMigrationInput interface {
	pulumi.Input

	ToServiceMysqlUserConfigMigrationOutput() ServiceMysqlUserConfigMigrationOutput
	ToServiceMysqlUserConfigMigrationOutputWithContext(context.Context) ServiceMysqlUserConfigMigrationOutput
}

type ServiceMysqlUserConfigMigrationArgs struct {
	Dbname    pulumi.StringPtrInput `pulumi:"dbname"`
	Host      pulumi.StringPtrInput `pulumi:"host"`
	IgnoreDbs pulumi.StringPtrInput `pulumi:"ignoreDbs"`
	Password  pulumi.StringPtrInput `pulumi:"password"`
	Port      pulumi.StringPtrInput `pulumi:"port"`
	Ssl       pulumi.StringPtrInput `pulumi:"ssl"`
	Username  pulumi.StringPtrInput `pulumi:"username"`
}

func (ServiceMysqlUserConfigMigrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceMysqlUserConfigMigration)(nil)).Elem()
}

func (i ServiceMysqlUserConfigMigrationArgs) ToServiceMysqlUserConfigMigrationOutput() ServiceMysqlUserConfigMigrationOutput {
	return i.ToServiceMysqlUserConfigMigrationOutputWithContext(context.Background())
}

func (i ServiceMysqlUserConfigMigrationArgs) ToServiceMysqlUserConfigMigrationOutputWithContext(ctx context.Context) ServiceMysqlUserConfigMigrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMysqlUserConfigMigrationOutput)
}

func (i ServiceMysqlUserConfigMigrationArgs) ToServiceMysqlUserConfigMigrationPtrOutput() ServiceMysqlUserConfigMigrationPtrOutput {
	return i.ToServiceMysqlUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (i ServiceMysqlUserConfigMigrationArgs) ToServiceMysqlUserConfigMigrationPtrOutputWithContext(ctx context.Context) ServiceMysqlUserConfigMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMysqlUserConfigMigrationOutput).ToServiceMysqlUserConfigMigrationPtrOutputWithContext(ctx)
}

// ServiceMysqlUserConfigMigrationPtrInput is an input type that accepts ServiceMysqlUserConfigMigrationArgs, ServiceMysqlUserConfigMigrationPtr and ServiceMysqlUserConfigMigrationPtrOutput values.
// You can construct a concrete instance of `ServiceMysqlUserConfigMigrationPtrInput` via:
//
//          ServiceMysqlUserConfigMigrationArgs{...}
//
//  or:
//
//          nil
type ServiceMysqlUserConfigMigrationPtrInput interface {
	pulumi.Input

	ToServiceMysqlUserConfigMigrationPtrOutput() ServiceMysqlUserConfigMigrationPtrOutput
	ToServiceMysqlUserConfigMigrationPtrOutputWithContext(context.Context) ServiceMysqlUserConfigMigrationPtrOutput
}

type serviceMysqlUserConfigMigrationPtrType ServiceMysqlUserConfigMigrationArgs

func ServiceMysqlUserConfigMigrationPtr(v *ServiceMysqlUserConfigMigrationArgs) ServiceMysqlUserConfigMigrationPtrInput {
	return (*serviceMysqlUserConfigMigrationPtrType)(v)
}

func (*serviceMysqlUserConfigMigrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceMysqlUserConfigMigration)(nil)).Elem()
}

func (i *serviceMysqlUserConfigMigrationPtrType) ToServiceMysqlUserConfigMigrationPtrOutput() ServiceMysqlUserConfigMigrationPtrOutput {
	return i.ToServiceMysqlUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (i *serviceMysqlUserConfigMigrationPtrType) ToServiceMysqlUserConfigMigrationPtrOutputWithContext(ctx context.Context) ServiceMysqlUserConfigMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMysqlUserConfigMigrationPtrOutput)
}

type ServiceMysqlUserConfigMigrationOutput struct{ *pulumi.OutputState }

func (ServiceMysqlUserConfigMigrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceMysqlUserConfigMigration)(nil)).Elem()
}

func (o ServiceMysqlUserConfigMigrationOutput) ToServiceMysqlUserConfigMigrationOutput() ServiceMysqlUserConfigMigrationOutput {
	return o
}

func (o ServiceMysqlUserConfigMigrationOutput) ToServiceMysqlUserConfigMigrationOutputWithContext(ctx context.Context) ServiceMysqlUserConfigMigrationOutput {
	return o
}

func (o ServiceMysqlUserConfigMigrationOutput) ToServiceMysqlUserConfigMigrationPtrOutput() ServiceMysqlUserConfigMigrationPtrOutput {
	return o.ToServiceMysqlUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (o ServiceMysqlUserConfigMigrationOutput) ToServiceMysqlUserConfigMigrationPtrOutputWithContext(ctx context.Context) ServiceMysqlUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMigration) *ServiceMysqlUserConfigMigration {
		return &v
	}).(ServiceMysqlUserConfigMigrationPtrOutput)
}
func (o ServiceMysqlUserConfigMigrationOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMigration) *string { return v.Dbname }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMigrationOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMigration) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMigrationOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMigration) *string { return v.IgnoreDbs }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMigrationOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMigration) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMigrationOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMigration) *string { return v.Port }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMigrationOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMigration) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMigrationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMigration) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ServiceMysqlUserConfigMigrationPtrOutput struct{ *pulumi.OutputState }

func (ServiceMysqlUserConfigMigrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceMysqlUserConfigMigration)(nil)).Elem()
}

func (o ServiceMysqlUserConfigMigrationPtrOutput) ToServiceMysqlUserConfigMigrationPtrOutput() ServiceMysqlUserConfigMigrationPtrOutput {
	return o
}

func (o ServiceMysqlUserConfigMigrationPtrOutput) ToServiceMysqlUserConfigMigrationPtrOutputWithContext(ctx context.Context) ServiceMysqlUserConfigMigrationPtrOutput {
	return o
}

func (o ServiceMysqlUserConfigMigrationPtrOutput) Elem() ServiceMysqlUserConfigMigrationOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMigration) ServiceMysqlUserConfigMigration { return *v }).(ServiceMysqlUserConfigMigrationOutput)
}

func (o ServiceMysqlUserConfigMigrationPtrOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Dbname
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMigrationPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMigrationPtrOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.IgnoreDbs
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMigrationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMigrationPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMigrationPtrOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Ssl
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMigrationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ServiceMysqlUserConfigMysql struct {
	ConnectTimeout               *string `pulumi:"connectTimeout"`
	DefaultTimeZone              *string `pulumi:"defaultTimeZone"`
	GroupConcatMaxLen            *string `pulumi:"groupConcatMaxLen"`
	InformationSchemaStatsExpiry *string `pulumi:"informationSchemaStatsExpiry"`
	InnodbFtMinTokenSize         *string `pulumi:"innodbFtMinTokenSize"`
	InnodbFtServerStopwordTable  *string `pulumi:"innodbFtServerStopwordTable"`
	InnodbLockWaitTimeout        *string `pulumi:"innodbLockWaitTimeout"`
	InnodbLogBufferSize          *string `pulumi:"innodbLogBufferSize"`
	InnodbOnlineAlterLogMaxSize  *string `pulumi:"innodbOnlineAlterLogMaxSize"`
	InnodbPrintAllDeadlocks      *string `pulumi:"innodbPrintAllDeadlocks"`
	InnodbRollbackOnTimeout      *string `pulumi:"innodbRollbackOnTimeout"`
	InteractiveTimeout           *string `pulumi:"interactiveTimeout"`
	LongQueryTime                *string `pulumi:"longQueryTime"`
	MaxAllowedPacket             *string `pulumi:"maxAllowedPacket"`
	MaxHeapTableSize             *string `pulumi:"maxHeapTableSize"`
	NetReadTimeout               *string `pulumi:"netReadTimeout"`
	NetWriteTimeout              *string `pulumi:"netWriteTimeout"`
	SlowQueryLog                 *string `pulumi:"slowQueryLog"`
	SortBufferSize               *string `pulumi:"sortBufferSize"`
	SqlMode                      *string `pulumi:"sqlMode"`
	SqlRequirePrimaryKey         *string `pulumi:"sqlRequirePrimaryKey"`
	TmpTableSize                 *string `pulumi:"tmpTableSize"`
	WaitTimeout                  *string `pulumi:"waitTimeout"`
}

// ServiceMysqlUserConfigMysqlInput is an input type that accepts ServiceMysqlUserConfigMysqlArgs and ServiceMysqlUserConfigMysqlOutput values.
// You can construct a concrete instance of `ServiceMysqlUserConfigMysqlInput` via:
//
//          ServiceMysqlUserConfigMysqlArgs{...}
type ServiceMysqlUserConfigMysqlInput interface {
	pulumi.Input

	ToServiceMysqlUserConfigMysqlOutput() ServiceMysqlUserConfigMysqlOutput
	ToServiceMysqlUserConfigMysqlOutputWithContext(context.Context) ServiceMysqlUserConfigMysqlOutput
}

type ServiceMysqlUserConfigMysqlArgs struct {
	ConnectTimeout               pulumi.StringPtrInput `pulumi:"connectTimeout"`
	DefaultTimeZone              pulumi.StringPtrInput `pulumi:"defaultTimeZone"`
	GroupConcatMaxLen            pulumi.StringPtrInput `pulumi:"groupConcatMaxLen"`
	InformationSchemaStatsExpiry pulumi.StringPtrInput `pulumi:"informationSchemaStatsExpiry"`
	InnodbFtMinTokenSize         pulumi.StringPtrInput `pulumi:"innodbFtMinTokenSize"`
	InnodbFtServerStopwordTable  pulumi.StringPtrInput `pulumi:"innodbFtServerStopwordTable"`
	InnodbLockWaitTimeout        pulumi.StringPtrInput `pulumi:"innodbLockWaitTimeout"`
	InnodbLogBufferSize          pulumi.StringPtrInput `pulumi:"innodbLogBufferSize"`
	InnodbOnlineAlterLogMaxSize  pulumi.StringPtrInput `pulumi:"innodbOnlineAlterLogMaxSize"`
	InnodbPrintAllDeadlocks      pulumi.StringPtrInput `pulumi:"innodbPrintAllDeadlocks"`
	InnodbRollbackOnTimeout      pulumi.StringPtrInput `pulumi:"innodbRollbackOnTimeout"`
	InteractiveTimeout           pulumi.StringPtrInput `pulumi:"interactiveTimeout"`
	LongQueryTime                pulumi.StringPtrInput `pulumi:"longQueryTime"`
	MaxAllowedPacket             pulumi.StringPtrInput `pulumi:"maxAllowedPacket"`
	MaxHeapTableSize             pulumi.StringPtrInput `pulumi:"maxHeapTableSize"`
	NetReadTimeout               pulumi.StringPtrInput `pulumi:"netReadTimeout"`
	NetWriteTimeout              pulumi.StringPtrInput `pulumi:"netWriteTimeout"`
	SlowQueryLog                 pulumi.StringPtrInput `pulumi:"slowQueryLog"`
	SortBufferSize               pulumi.StringPtrInput `pulumi:"sortBufferSize"`
	SqlMode                      pulumi.StringPtrInput `pulumi:"sqlMode"`
	SqlRequirePrimaryKey         pulumi.StringPtrInput `pulumi:"sqlRequirePrimaryKey"`
	TmpTableSize                 pulumi.StringPtrInput `pulumi:"tmpTableSize"`
	WaitTimeout                  pulumi.StringPtrInput `pulumi:"waitTimeout"`
}

func (ServiceMysqlUserConfigMysqlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceMysqlUserConfigMysql)(nil)).Elem()
}

func (i ServiceMysqlUserConfigMysqlArgs) ToServiceMysqlUserConfigMysqlOutput() ServiceMysqlUserConfigMysqlOutput {
	return i.ToServiceMysqlUserConfigMysqlOutputWithContext(context.Background())
}

func (i ServiceMysqlUserConfigMysqlArgs) ToServiceMysqlUserConfigMysqlOutputWithContext(ctx context.Context) ServiceMysqlUserConfigMysqlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMysqlUserConfigMysqlOutput)
}

func (i ServiceMysqlUserConfigMysqlArgs) ToServiceMysqlUserConfigMysqlPtrOutput() ServiceMysqlUserConfigMysqlPtrOutput {
	return i.ToServiceMysqlUserConfigMysqlPtrOutputWithContext(context.Background())
}

func (i ServiceMysqlUserConfigMysqlArgs) ToServiceMysqlUserConfigMysqlPtrOutputWithContext(ctx context.Context) ServiceMysqlUserConfigMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMysqlUserConfigMysqlOutput).ToServiceMysqlUserConfigMysqlPtrOutputWithContext(ctx)
}

// ServiceMysqlUserConfigMysqlPtrInput is an input type that accepts ServiceMysqlUserConfigMysqlArgs, ServiceMysqlUserConfigMysqlPtr and ServiceMysqlUserConfigMysqlPtrOutput values.
// You can construct a concrete instance of `ServiceMysqlUserConfigMysqlPtrInput` via:
//
//          ServiceMysqlUserConfigMysqlArgs{...}
//
//  or:
//
//          nil
type ServiceMysqlUserConfigMysqlPtrInput interface {
	pulumi.Input

	ToServiceMysqlUserConfigMysqlPtrOutput() ServiceMysqlUserConfigMysqlPtrOutput
	ToServiceMysqlUserConfigMysqlPtrOutputWithContext(context.Context) ServiceMysqlUserConfigMysqlPtrOutput
}

type serviceMysqlUserConfigMysqlPtrType ServiceMysqlUserConfigMysqlArgs

func ServiceMysqlUserConfigMysqlPtr(v *ServiceMysqlUserConfigMysqlArgs) ServiceMysqlUserConfigMysqlPtrInput {
	return (*serviceMysqlUserConfigMysqlPtrType)(v)
}

func (*serviceMysqlUserConfigMysqlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceMysqlUserConfigMysql)(nil)).Elem()
}

func (i *serviceMysqlUserConfigMysqlPtrType) ToServiceMysqlUserConfigMysqlPtrOutput() ServiceMysqlUserConfigMysqlPtrOutput {
	return i.ToServiceMysqlUserConfigMysqlPtrOutputWithContext(context.Background())
}

func (i *serviceMysqlUserConfigMysqlPtrType) ToServiceMysqlUserConfigMysqlPtrOutputWithContext(ctx context.Context) ServiceMysqlUserConfigMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMysqlUserConfigMysqlPtrOutput)
}

type ServiceMysqlUserConfigMysqlOutput struct{ *pulumi.OutputState }

func (ServiceMysqlUserConfigMysqlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceMysqlUserConfigMysql)(nil)).Elem()
}

func (o ServiceMysqlUserConfigMysqlOutput) ToServiceMysqlUserConfigMysqlOutput() ServiceMysqlUserConfigMysqlOutput {
	return o
}

func (o ServiceMysqlUserConfigMysqlOutput) ToServiceMysqlUserConfigMysqlOutputWithContext(ctx context.Context) ServiceMysqlUserConfigMysqlOutput {
	return o
}

func (o ServiceMysqlUserConfigMysqlOutput) ToServiceMysqlUserConfigMysqlPtrOutput() ServiceMysqlUserConfigMysqlPtrOutput {
	return o.ToServiceMysqlUserConfigMysqlPtrOutputWithContext(context.Background())
}

func (o ServiceMysqlUserConfigMysqlOutput) ToServiceMysqlUserConfigMysqlPtrOutputWithContext(ctx context.Context) ServiceMysqlUserConfigMysqlPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMysql) *ServiceMysqlUserConfigMysql {
		return &v
	}).(ServiceMysqlUserConfigMysqlPtrOutput)
}
func (o ServiceMysqlUserConfigMysqlOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMysql) *string { return v.ConnectTimeout }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlOutput) DefaultTimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMysql) *string { return v.DefaultTimeZone }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlOutput) GroupConcatMaxLen() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMysql) *string { return v.GroupConcatMaxLen }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlOutput) InformationSchemaStatsExpiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMysql) *string { return v.InformationSchemaStatsExpiry }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlOutput) InnodbFtMinTokenSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMysql) *string { return v.InnodbFtMinTokenSize }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlOutput) InnodbFtServerStopwordTable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMysql) *string { return v.InnodbFtServerStopwordTable }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlOutput) InnodbLockWaitTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMysql) *string { return v.InnodbLockWaitTimeout }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlOutput) InnodbLogBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMysql) *string { return v.InnodbLogBufferSize }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlOutput) InnodbOnlineAlterLogMaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMysql) *string { return v.InnodbOnlineAlterLogMaxSize }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlOutput) InnodbPrintAllDeadlocks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMysql) *string { return v.InnodbPrintAllDeadlocks }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlOutput) InnodbRollbackOnTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMysql) *string { return v.InnodbRollbackOnTimeout }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlOutput) InteractiveTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMysql) *string { return v.InteractiveTimeout }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlOutput) LongQueryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMysql) *string { return v.LongQueryTime }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlOutput) MaxAllowedPacket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMysql) *string { return v.MaxAllowedPacket }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlOutput) MaxHeapTableSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMysql) *string { return v.MaxHeapTableSize }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlOutput) NetReadTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMysql) *string { return v.NetReadTimeout }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlOutput) NetWriteTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMysql) *string { return v.NetWriteTimeout }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlOutput) SlowQueryLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMysql) *string { return v.SlowQueryLog }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlOutput) SortBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMysql) *string { return v.SortBufferSize }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlOutput) SqlMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMysql) *string { return v.SqlMode }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlOutput) SqlRequirePrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMysql) *string { return v.SqlRequirePrimaryKey }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlOutput) TmpTableSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMysql) *string { return v.TmpTableSize }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlOutput) WaitTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigMysql) *string { return v.WaitTimeout }).(pulumi.StringPtrOutput)
}

type ServiceMysqlUserConfigMysqlPtrOutput struct{ *pulumi.OutputState }

func (ServiceMysqlUserConfigMysqlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceMysqlUserConfigMysql)(nil)).Elem()
}

func (o ServiceMysqlUserConfigMysqlPtrOutput) ToServiceMysqlUserConfigMysqlPtrOutput() ServiceMysqlUserConfigMysqlPtrOutput {
	return o
}

func (o ServiceMysqlUserConfigMysqlPtrOutput) ToServiceMysqlUserConfigMysqlPtrOutputWithContext(ctx context.Context) ServiceMysqlUserConfigMysqlPtrOutput {
	return o
}

func (o ServiceMysqlUserConfigMysqlPtrOutput) Elem() ServiceMysqlUserConfigMysqlOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMysql) ServiceMysqlUserConfigMysql { return *v }).(ServiceMysqlUserConfigMysqlOutput)
}

func (o ServiceMysqlUserConfigMysqlPtrOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.ConnectTimeout
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlPtrOutput) DefaultTimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.DefaultTimeZone
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlPtrOutput) GroupConcatMaxLen() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.GroupConcatMaxLen
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlPtrOutput) InformationSchemaStatsExpiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InformationSchemaStatsExpiry
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlPtrOutput) InnodbFtMinTokenSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbFtMinTokenSize
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlPtrOutput) InnodbFtServerStopwordTable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbFtServerStopwordTable
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlPtrOutput) InnodbLockWaitTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbLockWaitTimeout
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlPtrOutput) InnodbLogBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbLogBufferSize
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlPtrOutput) InnodbOnlineAlterLogMaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbOnlineAlterLogMaxSize
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlPtrOutput) InnodbPrintAllDeadlocks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbPrintAllDeadlocks
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlPtrOutput) InnodbRollbackOnTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbRollbackOnTimeout
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlPtrOutput) InteractiveTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InteractiveTimeout
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlPtrOutput) LongQueryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.LongQueryTime
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlPtrOutput) MaxAllowedPacket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.MaxAllowedPacket
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlPtrOutput) MaxHeapTableSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.MaxHeapTableSize
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlPtrOutput) NetReadTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.NetReadTimeout
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlPtrOutput) NetWriteTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.NetWriteTimeout
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlPtrOutput) SlowQueryLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.SlowQueryLog
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlPtrOutput) SortBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.SortBufferSize
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlPtrOutput) SqlMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.SqlMode
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlPtrOutput) SqlRequirePrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.SqlRequirePrimaryKey
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlPtrOutput) TmpTableSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.TmpTableSize
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigMysqlPtrOutput) WaitTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.WaitTimeout
	}).(pulumi.StringPtrOutput)
}

type ServiceMysqlUserConfigPrivateAccess struct {
	Mysql      *string `pulumi:"mysql"`
	Prometheus *string `pulumi:"prometheus"`
}

// ServiceMysqlUserConfigPrivateAccessInput is an input type that accepts ServiceMysqlUserConfigPrivateAccessArgs and ServiceMysqlUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `ServiceMysqlUserConfigPrivateAccessInput` via:
//
//          ServiceMysqlUserConfigPrivateAccessArgs{...}
type ServiceMysqlUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToServiceMysqlUserConfigPrivateAccessOutput() ServiceMysqlUserConfigPrivateAccessOutput
	ToServiceMysqlUserConfigPrivateAccessOutputWithContext(context.Context) ServiceMysqlUserConfigPrivateAccessOutput
}

type ServiceMysqlUserConfigPrivateAccessArgs struct {
	Mysql      pulumi.StringPtrInput `pulumi:"mysql"`
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (ServiceMysqlUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceMysqlUserConfigPrivateAccess)(nil)).Elem()
}

func (i ServiceMysqlUserConfigPrivateAccessArgs) ToServiceMysqlUserConfigPrivateAccessOutput() ServiceMysqlUserConfigPrivateAccessOutput {
	return i.ToServiceMysqlUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i ServiceMysqlUserConfigPrivateAccessArgs) ToServiceMysqlUserConfigPrivateAccessOutputWithContext(ctx context.Context) ServiceMysqlUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMysqlUserConfigPrivateAccessOutput)
}

func (i ServiceMysqlUserConfigPrivateAccessArgs) ToServiceMysqlUserConfigPrivateAccessPtrOutput() ServiceMysqlUserConfigPrivateAccessPtrOutput {
	return i.ToServiceMysqlUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i ServiceMysqlUserConfigPrivateAccessArgs) ToServiceMysqlUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceMysqlUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMysqlUserConfigPrivateAccessOutput).ToServiceMysqlUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// ServiceMysqlUserConfigPrivateAccessPtrInput is an input type that accepts ServiceMysqlUserConfigPrivateAccessArgs, ServiceMysqlUserConfigPrivateAccessPtr and ServiceMysqlUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `ServiceMysqlUserConfigPrivateAccessPtrInput` via:
//
//          ServiceMysqlUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type ServiceMysqlUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToServiceMysqlUserConfigPrivateAccessPtrOutput() ServiceMysqlUserConfigPrivateAccessPtrOutput
	ToServiceMysqlUserConfigPrivateAccessPtrOutputWithContext(context.Context) ServiceMysqlUserConfigPrivateAccessPtrOutput
}

type serviceMysqlUserConfigPrivateAccessPtrType ServiceMysqlUserConfigPrivateAccessArgs

func ServiceMysqlUserConfigPrivateAccessPtr(v *ServiceMysqlUserConfigPrivateAccessArgs) ServiceMysqlUserConfigPrivateAccessPtrInput {
	return (*serviceMysqlUserConfigPrivateAccessPtrType)(v)
}

func (*serviceMysqlUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceMysqlUserConfigPrivateAccess)(nil)).Elem()
}

func (i *serviceMysqlUserConfigPrivateAccessPtrType) ToServiceMysqlUserConfigPrivateAccessPtrOutput() ServiceMysqlUserConfigPrivateAccessPtrOutput {
	return i.ToServiceMysqlUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *serviceMysqlUserConfigPrivateAccessPtrType) ToServiceMysqlUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceMysqlUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMysqlUserConfigPrivateAccessPtrOutput)
}

type ServiceMysqlUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (ServiceMysqlUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceMysqlUserConfigPrivateAccess)(nil)).Elem()
}

func (o ServiceMysqlUserConfigPrivateAccessOutput) ToServiceMysqlUserConfigPrivateAccessOutput() ServiceMysqlUserConfigPrivateAccessOutput {
	return o
}

func (o ServiceMysqlUserConfigPrivateAccessOutput) ToServiceMysqlUserConfigPrivateAccessOutputWithContext(ctx context.Context) ServiceMysqlUserConfigPrivateAccessOutput {
	return o
}

func (o ServiceMysqlUserConfigPrivateAccessOutput) ToServiceMysqlUserConfigPrivateAccessPtrOutput() ServiceMysqlUserConfigPrivateAccessPtrOutput {
	return o.ToServiceMysqlUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o ServiceMysqlUserConfigPrivateAccessOutput) ToServiceMysqlUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceMysqlUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigPrivateAccess) *ServiceMysqlUserConfigPrivateAccess {
		return &v
	}).(ServiceMysqlUserConfigPrivateAccessPtrOutput)
}
func (o ServiceMysqlUserConfigPrivateAccessOutput) Mysql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigPrivateAccess) *string { return v.Mysql }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type ServiceMysqlUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (ServiceMysqlUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceMysqlUserConfigPrivateAccess)(nil)).Elem()
}

func (o ServiceMysqlUserConfigPrivateAccessPtrOutput) ToServiceMysqlUserConfigPrivateAccessPtrOutput() ServiceMysqlUserConfigPrivateAccessPtrOutput {
	return o
}

func (o ServiceMysqlUserConfigPrivateAccessPtrOutput) ToServiceMysqlUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceMysqlUserConfigPrivateAccessPtrOutput {
	return o
}

func (o ServiceMysqlUserConfigPrivateAccessPtrOutput) Elem() ServiceMysqlUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigPrivateAccess) ServiceMysqlUserConfigPrivateAccess { return *v }).(ServiceMysqlUserConfigPrivateAccessOutput)
}

func (o ServiceMysqlUserConfigPrivateAccessPtrOutput) Mysql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Mysql
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type ServiceMysqlUserConfigPrivatelinkAccess struct {
	Mysql *string `pulumi:"mysql"`
}

// ServiceMysqlUserConfigPrivatelinkAccessInput is an input type that accepts ServiceMysqlUserConfigPrivatelinkAccessArgs and ServiceMysqlUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `ServiceMysqlUserConfigPrivatelinkAccessInput` via:
//
//          ServiceMysqlUserConfigPrivatelinkAccessArgs{...}
type ServiceMysqlUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToServiceMysqlUserConfigPrivatelinkAccessOutput() ServiceMysqlUserConfigPrivatelinkAccessOutput
	ToServiceMysqlUserConfigPrivatelinkAccessOutputWithContext(context.Context) ServiceMysqlUserConfigPrivatelinkAccessOutput
}

type ServiceMysqlUserConfigPrivatelinkAccessArgs struct {
	Mysql pulumi.StringPtrInput `pulumi:"mysql"`
}

func (ServiceMysqlUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceMysqlUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i ServiceMysqlUserConfigPrivatelinkAccessArgs) ToServiceMysqlUserConfigPrivatelinkAccessOutput() ServiceMysqlUserConfigPrivatelinkAccessOutput {
	return i.ToServiceMysqlUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i ServiceMysqlUserConfigPrivatelinkAccessArgs) ToServiceMysqlUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) ServiceMysqlUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMysqlUserConfigPrivatelinkAccessOutput)
}

func (i ServiceMysqlUserConfigPrivatelinkAccessArgs) ToServiceMysqlUserConfigPrivatelinkAccessPtrOutput() ServiceMysqlUserConfigPrivatelinkAccessPtrOutput {
	return i.ToServiceMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i ServiceMysqlUserConfigPrivatelinkAccessArgs) ToServiceMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceMysqlUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMysqlUserConfigPrivatelinkAccessOutput).ToServiceMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// ServiceMysqlUserConfigPrivatelinkAccessPtrInput is an input type that accepts ServiceMysqlUserConfigPrivatelinkAccessArgs, ServiceMysqlUserConfigPrivatelinkAccessPtr and ServiceMysqlUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `ServiceMysqlUserConfigPrivatelinkAccessPtrInput` via:
//
//          ServiceMysqlUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type ServiceMysqlUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToServiceMysqlUserConfigPrivatelinkAccessPtrOutput() ServiceMysqlUserConfigPrivatelinkAccessPtrOutput
	ToServiceMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) ServiceMysqlUserConfigPrivatelinkAccessPtrOutput
}

type serviceMysqlUserConfigPrivatelinkAccessPtrType ServiceMysqlUserConfigPrivatelinkAccessArgs

func ServiceMysqlUserConfigPrivatelinkAccessPtr(v *ServiceMysqlUserConfigPrivatelinkAccessArgs) ServiceMysqlUserConfigPrivatelinkAccessPtrInput {
	return (*serviceMysqlUserConfigPrivatelinkAccessPtrType)(v)
}

func (*serviceMysqlUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceMysqlUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *serviceMysqlUserConfigPrivatelinkAccessPtrType) ToServiceMysqlUserConfigPrivatelinkAccessPtrOutput() ServiceMysqlUserConfigPrivatelinkAccessPtrOutput {
	return i.ToServiceMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *serviceMysqlUserConfigPrivatelinkAccessPtrType) ToServiceMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceMysqlUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMysqlUserConfigPrivatelinkAccessPtrOutput)
}

type ServiceMysqlUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (ServiceMysqlUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceMysqlUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o ServiceMysqlUserConfigPrivatelinkAccessOutput) ToServiceMysqlUserConfigPrivatelinkAccessOutput() ServiceMysqlUserConfigPrivatelinkAccessOutput {
	return o
}

func (o ServiceMysqlUserConfigPrivatelinkAccessOutput) ToServiceMysqlUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) ServiceMysqlUserConfigPrivatelinkAccessOutput {
	return o
}

func (o ServiceMysqlUserConfigPrivatelinkAccessOutput) ToServiceMysqlUserConfigPrivatelinkAccessPtrOutput() ServiceMysqlUserConfigPrivatelinkAccessPtrOutput {
	return o.ToServiceMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o ServiceMysqlUserConfigPrivatelinkAccessOutput) ToServiceMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceMysqlUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigPrivatelinkAccess) *ServiceMysqlUserConfigPrivatelinkAccess {
		return &v
	}).(ServiceMysqlUserConfigPrivatelinkAccessPtrOutput)
}
func (o ServiceMysqlUserConfigPrivatelinkAccessOutput) Mysql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigPrivatelinkAccess) *string { return v.Mysql }).(pulumi.StringPtrOutput)
}

type ServiceMysqlUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (ServiceMysqlUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceMysqlUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o ServiceMysqlUserConfigPrivatelinkAccessPtrOutput) ToServiceMysqlUserConfigPrivatelinkAccessPtrOutput() ServiceMysqlUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o ServiceMysqlUserConfigPrivatelinkAccessPtrOutput) ToServiceMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceMysqlUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o ServiceMysqlUserConfigPrivatelinkAccessPtrOutput) Elem() ServiceMysqlUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigPrivatelinkAccess) ServiceMysqlUserConfigPrivatelinkAccess { return *v }).(ServiceMysqlUserConfigPrivatelinkAccessOutput)
}

func (o ServiceMysqlUserConfigPrivatelinkAccessPtrOutput) Mysql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Mysql
	}).(pulumi.StringPtrOutput)
}

type ServiceMysqlUserConfigPublicAccess struct {
	Mysql      *string `pulumi:"mysql"`
	Prometheus *string `pulumi:"prometheus"`
}

// ServiceMysqlUserConfigPublicAccessInput is an input type that accepts ServiceMysqlUserConfigPublicAccessArgs and ServiceMysqlUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `ServiceMysqlUserConfigPublicAccessInput` via:
//
//          ServiceMysqlUserConfigPublicAccessArgs{...}
type ServiceMysqlUserConfigPublicAccessInput interface {
	pulumi.Input

	ToServiceMysqlUserConfigPublicAccessOutput() ServiceMysqlUserConfigPublicAccessOutput
	ToServiceMysqlUserConfigPublicAccessOutputWithContext(context.Context) ServiceMysqlUserConfigPublicAccessOutput
}

type ServiceMysqlUserConfigPublicAccessArgs struct {
	Mysql      pulumi.StringPtrInput `pulumi:"mysql"`
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (ServiceMysqlUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceMysqlUserConfigPublicAccess)(nil)).Elem()
}

func (i ServiceMysqlUserConfigPublicAccessArgs) ToServiceMysqlUserConfigPublicAccessOutput() ServiceMysqlUserConfigPublicAccessOutput {
	return i.ToServiceMysqlUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i ServiceMysqlUserConfigPublicAccessArgs) ToServiceMysqlUserConfigPublicAccessOutputWithContext(ctx context.Context) ServiceMysqlUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMysqlUserConfigPublicAccessOutput)
}

func (i ServiceMysqlUserConfigPublicAccessArgs) ToServiceMysqlUserConfigPublicAccessPtrOutput() ServiceMysqlUserConfigPublicAccessPtrOutput {
	return i.ToServiceMysqlUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i ServiceMysqlUserConfigPublicAccessArgs) ToServiceMysqlUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceMysqlUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMysqlUserConfigPublicAccessOutput).ToServiceMysqlUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// ServiceMysqlUserConfigPublicAccessPtrInput is an input type that accepts ServiceMysqlUserConfigPublicAccessArgs, ServiceMysqlUserConfigPublicAccessPtr and ServiceMysqlUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `ServiceMysqlUserConfigPublicAccessPtrInput` via:
//
//          ServiceMysqlUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type ServiceMysqlUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToServiceMysqlUserConfigPublicAccessPtrOutput() ServiceMysqlUserConfigPublicAccessPtrOutput
	ToServiceMysqlUserConfigPublicAccessPtrOutputWithContext(context.Context) ServiceMysqlUserConfigPublicAccessPtrOutput
}

type serviceMysqlUserConfigPublicAccessPtrType ServiceMysqlUserConfigPublicAccessArgs

func ServiceMysqlUserConfigPublicAccessPtr(v *ServiceMysqlUserConfigPublicAccessArgs) ServiceMysqlUserConfigPublicAccessPtrInput {
	return (*serviceMysqlUserConfigPublicAccessPtrType)(v)
}

func (*serviceMysqlUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceMysqlUserConfigPublicAccess)(nil)).Elem()
}

func (i *serviceMysqlUserConfigPublicAccessPtrType) ToServiceMysqlUserConfigPublicAccessPtrOutput() ServiceMysqlUserConfigPublicAccessPtrOutput {
	return i.ToServiceMysqlUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *serviceMysqlUserConfigPublicAccessPtrType) ToServiceMysqlUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceMysqlUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMysqlUserConfigPublicAccessPtrOutput)
}

type ServiceMysqlUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (ServiceMysqlUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceMysqlUserConfigPublicAccess)(nil)).Elem()
}

func (o ServiceMysqlUserConfigPublicAccessOutput) ToServiceMysqlUserConfigPublicAccessOutput() ServiceMysqlUserConfigPublicAccessOutput {
	return o
}

func (o ServiceMysqlUserConfigPublicAccessOutput) ToServiceMysqlUserConfigPublicAccessOutputWithContext(ctx context.Context) ServiceMysqlUserConfigPublicAccessOutput {
	return o
}

func (o ServiceMysqlUserConfigPublicAccessOutput) ToServiceMysqlUserConfigPublicAccessPtrOutput() ServiceMysqlUserConfigPublicAccessPtrOutput {
	return o.ToServiceMysqlUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o ServiceMysqlUserConfigPublicAccessOutput) ToServiceMysqlUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceMysqlUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigPublicAccess) *ServiceMysqlUserConfigPublicAccess {
		return &v
	}).(ServiceMysqlUserConfigPublicAccessPtrOutput)
}
func (o ServiceMysqlUserConfigPublicAccessOutput) Mysql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigPublicAccess) *string { return v.Mysql }).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMysqlUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type ServiceMysqlUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (ServiceMysqlUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceMysqlUserConfigPublicAccess)(nil)).Elem()
}

func (o ServiceMysqlUserConfigPublicAccessPtrOutput) ToServiceMysqlUserConfigPublicAccessPtrOutput() ServiceMysqlUserConfigPublicAccessPtrOutput {
	return o
}

func (o ServiceMysqlUserConfigPublicAccessPtrOutput) ToServiceMysqlUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceMysqlUserConfigPublicAccessPtrOutput {
	return o
}

func (o ServiceMysqlUserConfigPublicAccessPtrOutput) Elem() ServiceMysqlUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigPublicAccess) ServiceMysqlUserConfigPublicAccess { return *v }).(ServiceMysqlUserConfigPublicAccessOutput)
}

func (o ServiceMysqlUserConfigPublicAccessPtrOutput) Mysql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Mysql
	}).(pulumi.StringPtrOutput)
}

func (o ServiceMysqlUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMysqlUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type ServicePg struct {
	Dbname     *string `pulumi:"dbname"`
	Host       *string `pulumi:"host"`
	Password   *string `pulumi:"password"`
	Port       *int    `pulumi:"port"`
	ReplicaUri *string `pulumi:"replicaUri"`
	Sslmode    *string `pulumi:"sslmode"`
	Uri        *string `pulumi:"uri"`
	User       *string `pulumi:"user"`
}

// ServicePgInput is an input type that accepts ServicePgArgs and ServicePgOutput values.
// You can construct a concrete instance of `ServicePgInput` via:
//
//          ServicePgArgs{...}
type ServicePgInput interface {
	pulumi.Input

	ToServicePgOutput() ServicePgOutput
	ToServicePgOutputWithContext(context.Context) ServicePgOutput
}

type ServicePgArgs struct {
	Dbname     pulumi.StringPtrInput `pulumi:"dbname"`
	Host       pulumi.StringPtrInput `pulumi:"host"`
	Password   pulumi.StringPtrInput `pulumi:"password"`
	Port       pulumi.IntPtrInput    `pulumi:"port"`
	ReplicaUri pulumi.StringPtrInput `pulumi:"replicaUri"`
	Sslmode    pulumi.StringPtrInput `pulumi:"sslmode"`
	Uri        pulumi.StringPtrInput `pulumi:"uri"`
	User       pulumi.StringPtrInput `pulumi:"user"`
}

func (ServicePgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePg)(nil)).Elem()
}

func (i ServicePgArgs) ToServicePgOutput() ServicePgOutput {
	return i.ToServicePgOutputWithContext(context.Background())
}

func (i ServicePgArgs) ToServicePgOutputWithContext(ctx context.Context) ServicePgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgOutput)
}

func (i ServicePgArgs) ToServicePgPtrOutput() ServicePgPtrOutput {
	return i.ToServicePgPtrOutputWithContext(context.Background())
}

func (i ServicePgArgs) ToServicePgPtrOutputWithContext(ctx context.Context) ServicePgPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgOutput).ToServicePgPtrOutputWithContext(ctx)
}

// ServicePgPtrInput is an input type that accepts ServicePgArgs, ServicePgPtr and ServicePgPtrOutput values.
// You can construct a concrete instance of `ServicePgPtrInput` via:
//
//          ServicePgArgs{...}
//
//  or:
//
//          nil
type ServicePgPtrInput interface {
	pulumi.Input

	ToServicePgPtrOutput() ServicePgPtrOutput
	ToServicePgPtrOutputWithContext(context.Context) ServicePgPtrOutput
}

type servicePgPtrType ServicePgArgs

func ServicePgPtr(v *ServicePgArgs) ServicePgPtrInput {
	return (*servicePgPtrType)(v)
}

func (*servicePgPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePg)(nil)).Elem()
}

func (i *servicePgPtrType) ToServicePgPtrOutput() ServicePgPtrOutput {
	return i.ToServicePgPtrOutputWithContext(context.Background())
}

func (i *servicePgPtrType) ToServicePgPtrOutputWithContext(ctx context.Context) ServicePgPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgPtrOutput)
}

type ServicePgOutput struct{ *pulumi.OutputState }

func (ServicePgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePg)(nil)).Elem()
}

func (o ServicePgOutput) ToServicePgOutput() ServicePgOutput {
	return o
}

func (o ServicePgOutput) ToServicePgOutputWithContext(ctx context.Context) ServicePgOutput {
	return o
}

func (o ServicePgOutput) ToServicePgPtrOutput() ServicePgPtrOutput {
	return o.ToServicePgPtrOutputWithContext(context.Background())
}

func (o ServicePgOutput) ToServicePgPtrOutputWithContext(ctx context.Context) ServicePgPtrOutput {
	return o.ApplyT(func(v ServicePg) *ServicePg {
		return &v
	}).(ServicePgPtrOutput)
}
func (o ServicePgOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePg) *string { return v.Dbname }).(pulumi.StringPtrOutput)
}

func (o ServicePgOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePg) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o ServicePgOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePg) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ServicePgOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServicePg) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o ServicePgOutput) ReplicaUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePg) *string { return v.ReplicaUri }).(pulumi.StringPtrOutput)
}

func (o ServicePgOutput) Sslmode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePg) *string { return v.Sslmode }).(pulumi.StringPtrOutput)
}

func (o ServicePgOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePg) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

func (o ServicePgOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePg) *string { return v.User }).(pulumi.StringPtrOutput)
}

type ServicePgPtrOutput struct{ *pulumi.OutputState }

func (ServicePgPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePg)(nil)).Elem()
}

func (o ServicePgPtrOutput) ToServicePgPtrOutput() ServicePgPtrOutput {
	return o
}

func (o ServicePgPtrOutput) ToServicePgPtrOutputWithContext(ctx context.Context) ServicePgPtrOutput {
	return o
}

func (o ServicePgPtrOutput) Elem() ServicePgOutput {
	return o.ApplyT(func(v *ServicePg) ServicePg { return *v }).(ServicePgOutput)
}

func (o ServicePgPtrOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePg) *string {
		if v == nil {
			return nil
		}
		return v.Dbname
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePg) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePg) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServicePg) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o ServicePgPtrOutput) ReplicaUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePg) *string {
		if v == nil {
			return nil
		}
		return v.ReplicaUri
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgPtrOutput) Sslmode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePg) *string {
		if v == nil {
			return nil
		}
		return v.Sslmode
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePg) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePg) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

type ServicePgUserConfig struct {
	AdminPassword           *string                               `pulumi:"adminPassword"`
	AdminUsername           *string                               `pulumi:"adminUsername"`
	BackupHour              *string                               `pulumi:"backupHour"`
	BackupMinute            *string                               `pulumi:"backupMinute"`
	IpFilters               []string                              `pulumi:"ipFilters"`
	Migration               *ServicePgUserConfigMigration         `pulumi:"migration"`
	Pg                      *ServicePgUserConfigPg                `pulumi:"pg"`
	PgReadReplica           *string                               `pulumi:"pgReadReplica"`
	PgServiceToForkFrom     *string                               `pulumi:"pgServiceToForkFrom"`
	PgVersion               *string                               `pulumi:"pgVersion"`
	Pgbouncer               *ServicePgUserConfigPgbouncer         `pulumi:"pgbouncer"`
	Pglookout               *ServicePgUserConfigPglookout         `pulumi:"pglookout"`
	PrivateAccess           *ServicePgUserConfigPrivateAccess     `pulumi:"privateAccess"`
	PrivatelinkAccess       *ServicePgUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	ProjectToForkFrom       *string                               `pulumi:"projectToForkFrom"`
	PublicAccess            *ServicePgUserConfigPublicAccess      `pulumi:"publicAccess"`
	RecoveryTargetTime      *string                               `pulumi:"recoveryTargetTime"`
	ServiceToForkFrom       *string                               `pulumi:"serviceToForkFrom"`
	SharedBuffersPercentage *string                               `pulumi:"sharedBuffersPercentage"`
	SynchronousReplication  *string                               `pulumi:"synchronousReplication"`
	Timescaledb             *ServicePgUserConfigTimescaledb       `pulumi:"timescaledb"`
	Variant                 *string                               `pulumi:"variant"`
	WorkMem                 *string                               `pulumi:"workMem"`
}

// ServicePgUserConfigInput is an input type that accepts ServicePgUserConfigArgs and ServicePgUserConfigOutput values.
// You can construct a concrete instance of `ServicePgUserConfigInput` via:
//
//          ServicePgUserConfigArgs{...}
type ServicePgUserConfigInput interface {
	pulumi.Input

	ToServicePgUserConfigOutput() ServicePgUserConfigOutput
	ToServicePgUserConfigOutputWithContext(context.Context) ServicePgUserConfigOutput
}

type ServicePgUserConfigArgs struct {
	AdminPassword           pulumi.StringPtrInput                        `pulumi:"adminPassword"`
	AdminUsername           pulumi.StringPtrInput                        `pulumi:"adminUsername"`
	BackupHour              pulumi.StringPtrInput                        `pulumi:"backupHour"`
	BackupMinute            pulumi.StringPtrInput                        `pulumi:"backupMinute"`
	IpFilters               pulumi.StringArrayInput                      `pulumi:"ipFilters"`
	Migration               ServicePgUserConfigMigrationPtrInput         `pulumi:"migration"`
	Pg                      ServicePgUserConfigPgPtrInput                `pulumi:"pg"`
	PgReadReplica           pulumi.StringPtrInput                        `pulumi:"pgReadReplica"`
	PgServiceToForkFrom     pulumi.StringPtrInput                        `pulumi:"pgServiceToForkFrom"`
	PgVersion               pulumi.StringPtrInput                        `pulumi:"pgVersion"`
	Pgbouncer               ServicePgUserConfigPgbouncerPtrInput         `pulumi:"pgbouncer"`
	Pglookout               ServicePgUserConfigPglookoutPtrInput         `pulumi:"pglookout"`
	PrivateAccess           ServicePgUserConfigPrivateAccessPtrInput     `pulumi:"privateAccess"`
	PrivatelinkAccess       ServicePgUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	ProjectToForkFrom       pulumi.StringPtrInput                        `pulumi:"projectToForkFrom"`
	PublicAccess            ServicePgUserConfigPublicAccessPtrInput      `pulumi:"publicAccess"`
	RecoveryTargetTime      pulumi.StringPtrInput                        `pulumi:"recoveryTargetTime"`
	ServiceToForkFrom       pulumi.StringPtrInput                        `pulumi:"serviceToForkFrom"`
	SharedBuffersPercentage pulumi.StringPtrInput                        `pulumi:"sharedBuffersPercentage"`
	SynchronousReplication  pulumi.StringPtrInput                        `pulumi:"synchronousReplication"`
	Timescaledb             ServicePgUserConfigTimescaledbPtrInput       `pulumi:"timescaledb"`
	Variant                 pulumi.StringPtrInput                        `pulumi:"variant"`
	WorkMem                 pulumi.StringPtrInput                        `pulumi:"workMem"`
}

func (ServicePgUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePgUserConfig)(nil)).Elem()
}

func (i ServicePgUserConfigArgs) ToServicePgUserConfigOutput() ServicePgUserConfigOutput {
	return i.ToServicePgUserConfigOutputWithContext(context.Background())
}

func (i ServicePgUserConfigArgs) ToServicePgUserConfigOutputWithContext(ctx context.Context) ServicePgUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigOutput)
}

func (i ServicePgUserConfigArgs) ToServicePgUserConfigPtrOutput() ServicePgUserConfigPtrOutput {
	return i.ToServicePgUserConfigPtrOutputWithContext(context.Background())
}

func (i ServicePgUserConfigArgs) ToServicePgUserConfigPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigOutput).ToServicePgUserConfigPtrOutputWithContext(ctx)
}

// ServicePgUserConfigPtrInput is an input type that accepts ServicePgUserConfigArgs, ServicePgUserConfigPtr and ServicePgUserConfigPtrOutput values.
// You can construct a concrete instance of `ServicePgUserConfigPtrInput` via:
//
//          ServicePgUserConfigArgs{...}
//
//  or:
//
//          nil
type ServicePgUserConfigPtrInput interface {
	pulumi.Input

	ToServicePgUserConfigPtrOutput() ServicePgUserConfigPtrOutput
	ToServicePgUserConfigPtrOutputWithContext(context.Context) ServicePgUserConfigPtrOutput
}

type servicePgUserConfigPtrType ServicePgUserConfigArgs

func ServicePgUserConfigPtr(v *ServicePgUserConfigArgs) ServicePgUserConfigPtrInput {
	return (*servicePgUserConfigPtrType)(v)
}

func (*servicePgUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePgUserConfig)(nil)).Elem()
}

func (i *servicePgUserConfigPtrType) ToServicePgUserConfigPtrOutput() ServicePgUserConfigPtrOutput {
	return i.ToServicePgUserConfigPtrOutputWithContext(context.Background())
}

func (i *servicePgUserConfigPtrType) ToServicePgUserConfigPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigPtrOutput)
}

type ServicePgUserConfigOutput struct{ *pulumi.OutputState }

func (ServicePgUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePgUserConfig)(nil)).Elem()
}

func (o ServicePgUserConfigOutput) ToServicePgUserConfigOutput() ServicePgUserConfigOutput {
	return o
}

func (o ServicePgUserConfigOutput) ToServicePgUserConfigOutputWithContext(ctx context.Context) ServicePgUserConfigOutput {
	return o
}

func (o ServicePgUserConfigOutput) ToServicePgUserConfigPtrOutput() ServicePgUserConfigPtrOutput {
	return o.ToServicePgUserConfigPtrOutputWithContext(context.Background())
}

func (o ServicePgUserConfigOutput) ToServicePgUserConfigPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfig) *ServicePgUserConfig {
		return &v
	}).(ServicePgUserConfigPtrOutput)
}
func (o ServicePgUserConfigOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfig) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfig) *string { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigOutput) BackupHour() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfig) *string { return v.BackupHour }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigOutput) BackupMinute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfig) *string { return v.BackupMinute }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServicePgUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

func (o ServicePgUserConfigOutput) Migration() ServicePgUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfig) *ServicePgUserConfigMigration { return v.Migration }).(ServicePgUserConfigMigrationPtrOutput)
}

func (o ServicePgUserConfigOutput) Pg() ServicePgUserConfigPgPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfig) *ServicePgUserConfigPg { return v.Pg }).(ServicePgUserConfigPgPtrOutput)
}

func (o ServicePgUserConfigOutput) PgReadReplica() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfig) *string { return v.PgReadReplica }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigOutput) PgServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfig) *string { return v.PgServiceToForkFrom }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigOutput) PgVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfig) *string { return v.PgVersion }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigOutput) Pgbouncer() ServicePgUserConfigPgbouncerPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfig) *ServicePgUserConfigPgbouncer { return v.Pgbouncer }).(ServicePgUserConfigPgbouncerPtrOutput)
}

func (o ServicePgUserConfigOutput) Pglookout() ServicePgUserConfigPglookoutPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfig) *ServicePgUserConfigPglookout { return v.Pglookout }).(ServicePgUserConfigPglookoutPtrOutput)
}

func (o ServicePgUserConfigOutput) PrivateAccess() ServicePgUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfig) *ServicePgUserConfigPrivateAccess { return v.PrivateAccess }).(ServicePgUserConfigPrivateAccessPtrOutput)
}

func (o ServicePgUserConfigOutput) PrivatelinkAccess() ServicePgUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfig) *ServicePgUserConfigPrivatelinkAccess { return v.PrivatelinkAccess }).(ServicePgUserConfigPrivatelinkAccessPtrOutput)
}

func (o ServicePgUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigOutput) PublicAccess() ServicePgUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfig) *ServicePgUserConfigPublicAccess { return v.PublicAccess }).(ServicePgUserConfigPublicAccessPtrOutput)
}

func (o ServicePgUserConfigOutput) RecoveryTargetTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfig) *string { return v.RecoveryTargetTime }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigOutput) SharedBuffersPercentage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfig) *string { return v.SharedBuffersPercentage }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigOutput) SynchronousReplication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfig) *string { return v.SynchronousReplication }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigOutput) Timescaledb() ServicePgUserConfigTimescaledbPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfig) *ServicePgUserConfigTimescaledb { return v.Timescaledb }).(ServicePgUserConfigTimescaledbPtrOutput)
}

func (o ServicePgUserConfigOutput) Variant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfig) *string { return v.Variant }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigOutput) WorkMem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfig) *string { return v.WorkMem }).(pulumi.StringPtrOutput)
}

type ServicePgUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServicePgUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePgUserConfig)(nil)).Elem()
}

func (o ServicePgUserConfigPtrOutput) ToServicePgUserConfigPtrOutput() ServicePgUserConfigPtrOutput {
	return o
}

func (o ServicePgUserConfigPtrOutput) ToServicePgUserConfigPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPtrOutput {
	return o
}

func (o ServicePgUserConfigPtrOutput) Elem() ServicePgUserConfigOutput {
	return o.ApplyT(func(v *ServicePgUserConfig) ServicePgUserConfig { return *v }).(ServicePgUserConfigOutput)
}

func (o ServicePgUserConfigPtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPtrOutput) BackupHour() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.BackupHour
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPtrOutput) BackupMinute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.BackupMinute
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServicePgUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

func (o ServicePgUserConfigPtrOutput) Migration() ServicePgUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfig) *ServicePgUserConfigMigration {
		if v == nil {
			return nil
		}
		return v.Migration
	}).(ServicePgUserConfigMigrationPtrOutput)
}

func (o ServicePgUserConfigPtrOutput) Pg() ServicePgUserConfigPgPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfig) *ServicePgUserConfigPg {
		if v == nil {
			return nil
		}
		return v.Pg
	}).(ServicePgUserConfigPgPtrOutput)
}

func (o ServicePgUserConfigPtrOutput) PgReadReplica() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.PgReadReplica
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPtrOutput) PgServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.PgServiceToForkFrom
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPtrOutput) PgVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.PgVersion
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPtrOutput) Pgbouncer() ServicePgUserConfigPgbouncerPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfig) *ServicePgUserConfigPgbouncer {
		if v == nil {
			return nil
		}
		return v.Pgbouncer
	}).(ServicePgUserConfigPgbouncerPtrOutput)
}

func (o ServicePgUserConfigPtrOutput) Pglookout() ServicePgUserConfigPglookoutPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfig) *ServicePgUserConfigPglookout {
		if v == nil {
			return nil
		}
		return v.Pglookout
	}).(ServicePgUserConfigPglookoutPtrOutput)
}

func (o ServicePgUserConfigPtrOutput) PrivateAccess() ServicePgUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfig) *ServicePgUserConfigPrivateAccess {
		if v == nil {
			return nil
		}
		return v.PrivateAccess
	}).(ServicePgUserConfigPrivateAccessPtrOutput)
}

func (o ServicePgUserConfigPtrOutput) PrivatelinkAccess() ServicePgUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfig) *ServicePgUserConfigPrivatelinkAccess {
		if v == nil {
			return nil
		}
		return v.PrivatelinkAccess
	}).(ServicePgUserConfigPrivatelinkAccessPtrOutput)
}

func (o ServicePgUserConfigPtrOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProjectToForkFrom
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPtrOutput) PublicAccess() ServicePgUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfig) *ServicePgUserConfigPublicAccess {
		if v == nil {
			return nil
		}
		return v.PublicAccess
	}).(ServicePgUserConfigPublicAccessPtrOutput)
}

func (o ServicePgUserConfigPtrOutput) RecoveryTargetTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryTargetTime
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPtrOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceToForkFrom
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPtrOutput) SharedBuffersPercentage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.SharedBuffersPercentage
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPtrOutput) SynchronousReplication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.SynchronousReplication
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPtrOutput) Timescaledb() ServicePgUserConfigTimescaledbPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfig) *ServicePgUserConfigTimescaledb {
		if v == nil {
			return nil
		}
		return v.Timescaledb
	}).(ServicePgUserConfigTimescaledbPtrOutput)
}

func (o ServicePgUserConfigPtrOutput) Variant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.Variant
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPtrOutput) WorkMem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.WorkMem
	}).(pulumi.StringPtrOutput)
}

type ServicePgUserConfigMigration struct {
	Dbname    *string `pulumi:"dbname"`
	Host      *string `pulumi:"host"`
	IgnoreDbs *string `pulumi:"ignoreDbs"`
	Password  *string `pulumi:"password"`
	Port      *string `pulumi:"port"`
	Ssl       *string `pulumi:"ssl"`
	Username  *string `pulumi:"username"`
}

// ServicePgUserConfigMigrationInput is an input type that accepts ServicePgUserConfigMigrationArgs and ServicePgUserConfigMigrationOutput values.
// You can construct a concrete instance of `ServicePgUserConfigMigrationInput` via:
//
//          ServicePgUserConfigMigrationArgs{...}
type ServicePgUserConfigMigrationInput interface {
	pulumi.Input

	ToServicePgUserConfigMigrationOutput() ServicePgUserConfigMigrationOutput
	ToServicePgUserConfigMigrationOutputWithContext(context.Context) ServicePgUserConfigMigrationOutput
}

type ServicePgUserConfigMigrationArgs struct {
	Dbname    pulumi.StringPtrInput `pulumi:"dbname"`
	Host      pulumi.StringPtrInput `pulumi:"host"`
	IgnoreDbs pulumi.StringPtrInput `pulumi:"ignoreDbs"`
	Password  pulumi.StringPtrInput `pulumi:"password"`
	Port      pulumi.StringPtrInput `pulumi:"port"`
	Ssl       pulumi.StringPtrInput `pulumi:"ssl"`
	Username  pulumi.StringPtrInput `pulumi:"username"`
}

func (ServicePgUserConfigMigrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePgUserConfigMigration)(nil)).Elem()
}

func (i ServicePgUserConfigMigrationArgs) ToServicePgUserConfigMigrationOutput() ServicePgUserConfigMigrationOutput {
	return i.ToServicePgUserConfigMigrationOutputWithContext(context.Background())
}

func (i ServicePgUserConfigMigrationArgs) ToServicePgUserConfigMigrationOutputWithContext(ctx context.Context) ServicePgUserConfigMigrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigMigrationOutput)
}

func (i ServicePgUserConfigMigrationArgs) ToServicePgUserConfigMigrationPtrOutput() ServicePgUserConfigMigrationPtrOutput {
	return i.ToServicePgUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (i ServicePgUserConfigMigrationArgs) ToServicePgUserConfigMigrationPtrOutputWithContext(ctx context.Context) ServicePgUserConfigMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigMigrationOutput).ToServicePgUserConfigMigrationPtrOutputWithContext(ctx)
}

// ServicePgUserConfigMigrationPtrInput is an input type that accepts ServicePgUserConfigMigrationArgs, ServicePgUserConfigMigrationPtr and ServicePgUserConfigMigrationPtrOutput values.
// You can construct a concrete instance of `ServicePgUserConfigMigrationPtrInput` via:
//
//          ServicePgUserConfigMigrationArgs{...}
//
//  or:
//
//          nil
type ServicePgUserConfigMigrationPtrInput interface {
	pulumi.Input

	ToServicePgUserConfigMigrationPtrOutput() ServicePgUserConfigMigrationPtrOutput
	ToServicePgUserConfigMigrationPtrOutputWithContext(context.Context) ServicePgUserConfigMigrationPtrOutput
}

type servicePgUserConfigMigrationPtrType ServicePgUserConfigMigrationArgs

func ServicePgUserConfigMigrationPtr(v *ServicePgUserConfigMigrationArgs) ServicePgUserConfigMigrationPtrInput {
	return (*servicePgUserConfigMigrationPtrType)(v)
}

func (*servicePgUserConfigMigrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePgUserConfigMigration)(nil)).Elem()
}

func (i *servicePgUserConfigMigrationPtrType) ToServicePgUserConfigMigrationPtrOutput() ServicePgUserConfigMigrationPtrOutput {
	return i.ToServicePgUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (i *servicePgUserConfigMigrationPtrType) ToServicePgUserConfigMigrationPtrOutputWithContext(ctx context.Context) ServicePgUserConfigMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigMigrationPtrOutput)
}

type ServicePgUserConfigMigrationOutput struct{ *pulumi.OutputState }

func (ServicePgUserConfigMigrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePgUserConfigMigration)(nil)).Elem()
}

func (o ServicePgUserConfigMigrationOutput) ToServicePgUserConfigMigrationOutput() ServicePgUserConfigMigrationOutput {
	return o
}

func (o ServicePgUserConfigMigrationOutput) ToServicePgUserConfigMigrationOutputWithContext(ctx context.Context) ServicePgUserConfigMigrationOutput {
	return o
}

func (o ServicePgUserConfigMigrationOutput) ToServicePgUserConfigMigrationPtrOutput() ServicePgUserConfigMigrationPtrOutput {
	return o.ToServicePgUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (o ServicePgUserConfigMigrationOutput) ToServicePgUserConfigMigrationPtrOutputWithContext(ctx context.Context) ServicePgUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigMigration) *ServicePgUserConfigMigration {
		return &v
	}).(ServicePgUserConfigMigrationPtrOutput)
}
func (o ServicePgUserConfigMigrationOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigMigration) *string { return v.Dbname }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigMigrationOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigMigration) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigMigrationOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigMigration) *string { return v.IgnoreDbs }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigMigrationOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigMigration) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigMigrationOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigMigration) *string { return v.Port }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigMigrationOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigMigration) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigMigrationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigMigration) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ServicePgUserConfigMigrationPtrOutput struct{ *pulumi.OutputState }

func (ServicePgUserConfigMigrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePgUserConfigMigration)(nil)).Elem()
}

func (o ServicePgUserConfigMigrationPtrOutput) ToServicePgUserConfigMigrationPtrOutput() ServicePgUserConfigMigrationPtrOutput {
	return o
}

func (o ServicePgUserConfigMigrationPtrOutput) ToServicePgUserConfigMigrationPtrOutputWithContext(ctx context.Context) ServicePgUserConfigMigrationPtrOutput {
	return o
}

func (o ServicePgUserConfigMigrationPtrOutput) Elem() ServicePgUserConfigMigrationOutput {
	return o.ApplyT(func(v *ServicePgUserConfigMigration) ServicePgUserConfigMigration { return *v }).(ServicePgUserConfigMigrationOutput)
}

func (o ServicePgUserConfigMigrationPtrOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Dbname
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigMigrationPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigMigrationPtrOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.IgnoreDbs
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigMigrationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigMigrationPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigMigrationPtrOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Ssl
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigMigrationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ServicePgUserConfigPg struct {
	AutovacuumAnalyzeScaleFactor    *string `pulumi:"autovacuumAnalyzeScaleFactor"`
	AutovacuumAnalyzeThreshold      *string `pulumi:"autovacuumAnalyzeThreshold"`
	AutovacuumFreezeMaxAge          *string `pulumi:"autovacuumFreezeMaxAge"`
	AutovacuumMaxWorkers            *string `pulumi:"autovacuumMaxWorkers"`
	AutovacuumNaptime               *string `pulumi:"autovacuumNaptime"`
	AutovacuumVacuumCostDelay       *string `pulumi:"autovacuumVacuumCostDelay"`
	AutovacuumVacuumCostLimit       *string `pulumi:"autovacuumVacuumCostLimit"`
	AutovacuumVacuumScaleFactor     *string `pulumi:"autovacuumVacuumScaleFactor"`
	AutovacuumVacuumThreshold       *string `pulumi:"autovacuumVacuumThreshold"`
	DeadlockTimeout                 *string `pulumi:"deadlockTimeout"`
	IdleInTransactionSessionTimeout *string `pulumi:"idleInTransactionSessionTimeout"`
	Jit                             *string `pulumi:"jit"`
	LogAutovacuumMinDuration        *string `pulumi:"logAutovacuumMinDuration"`
	LogErrorVerbosity               *string `pulumi:"logErrorVerbosity"`
	LogLinePrefix                   *string `pulumi:"logLinePrefix"`
	LogMinDurationStatement         *string `pulumi:"logMinDurationStatement"`
	MaxFilesPerProcess              *string `pulumi:"maxFilesPerProcess"`
	MaxLocksPerTransaction          *string `pulumi:"maxLocksPerTransaction"`
	MaxLogicalReplicationWorkers    *string `pulumi:"maxLogicalReplicationWorkers"`
	MaxParallelWorkers              *string `pulumi:"maxParallelWorkers"`
	MaxParallelWorkersPerGather     *string `pulumi:"maxParallelWorkersPerGather"`
	MaxPredLocksPerTransaction      *string `pulumi:"maxPredLocksPerTransaction"`
	MaxPreparedTransactions         *string `pulumi:"maxPreparedTransactions"`
	MaxReplicationSlots             *string `pulumi:"maxReplicationSlots"`
	MaxStackDepth                   *string `pulumi:"maxStackDepth"`
	MaxStandbyArchiveDelay          *string `pulumi:"maxStandbyArchiveDelay"`
	MaxStandbyStreamingDelay        *string `pulumi:"maxStandbyStreamingDelay"`
	MaxWalSenders                   *string `pulumi:"maxWalSenders"`
	MaxWorkerProcesses              *string `pulumi:"maxWorkerProcesses"`
	PgPartmanBgwInterval            *string `pulumi:"pgPartmanBgwInterval"`
	PgPartmanBgwRole                *string `pulumi:"pgPartmanBgwRole"`
	PgStatStatementsTrack           *string `pulumi:"pgStatStatementsTrack"`
	TempFileLimit                   *string `pulumi:"tempFileLimit"`
	Timezone                        *string `pulumi:"timezone"`
	TrackActivityQuerySize          *string `pulumi:"trackActivityQuerySize"`
	TrackCommitTimestamp            *string `pulumi:"trackCommitTimestamp"`
	TrackFunctions                  *string `pulumi:"trackFunctions"`
	WalSenderTimeout                *string `pulumi:"walSenderTimeout"`
	WalWriterDelay                  *string `pulumi:"walWriterDelay"`
}

// ServicePgUserConfigPgInput is an input type that accepts ServicePgUserConfigPgArgs and ServicePgUserConfigPgOutput values.
// You can construct a concrete instance of `ServicePgUserConfigPgInput` via:
//
//          ServicePgUserConfigPgArgs{...}
type ServicePgUserConfigPgInput interface {
	pulumi.Input

	ToServicePgUserConfigPgOutput() ServicePgUserConfigPgOutput
	ToServicePgUserConfigPgOutputWithContext(context.Context) ServicePgUserConfigPgOutput
}

type ServicePgUserConfigPgArgs struct {
	AutovacuumAnalyzeScaleFactor    pulumi.StringPtrInput `pulumi:"autovacuumAnalyzeScaleFactor"`
	AutovacuumAnalyzeThreshold      pulumi.StringPtrInput `pulumi:"autovacuumAnalyzeThreshold"`
	AutovacuumFreezeMaxAge          pulumi.StringPtrInput `pulumi:"autovacuumFreezeMaxAge"`
	AutovacuumMaxWorkers            pulumi.StringPtrInput `pulumi:"autovacuumMaxWorkers"`
	AutovacuumNaptime               pulumi.StringPtrInput `pulumi:"autovacuumNaptime"`
	AutovacuumVacuumCostDelay       pulumi.StringPtrInput `pulumi:"autovacuumVacuumCostDelay"`
	AutovacuumVacuumCostLimit       pulumi.StringPtrInput `pulumi:"autovacuumVacuumCostLimit"`
	AutovacuumVacuumScaleFactor     pulumi.StringPtrInput `pulumi:"autovacuumVacuumScaleFactor"`
	AutovacuumVacuumThreshold       pulumi.StringPtrInput `pulumi:"autovacuumVacuumThreshold"`
	DeadlockTimeout                 pulumi.StringPtrInput `pulumi:"deadlockTimeout"`
	IdleInTransactionSessionTimeout pulumi.StringPtrInput `pulumi:"idleInTransactionSessionTimeout"`
	Jit                             pulumi.StringPtrInput `pulumi:"jit"`
	LogAutovacuumMinDuration        pulumi.StringPtrInput `pulumi:"logAutovacuumMinDuration"`
	LogErrorVerbosity               pulumi.StringPtrInput `pulumi:"logErrorVerbosity"`
	LogLinePrefix                   pulumi.StringPtrInput `pulumi:"logLinePrefix"`
	LogMinDurationStatement         pulumi.StringPtrInput `pulumi:"logMinDurationStatement"`
	MaxFilesPerProcess              pulumi.StringPtrInput `pulumi:"maxFilesPerProcess"`
	MaxLocksPerTransaction          pulumi.StringPtrInput `pulumi:"maxLocksPerTransaction"`
	MaxLogicalReplicationWorkers    pulumi.StringPtrInput `pulumi:"maxLogicalReplicationWorkers"`
	MaxParallelWorkers              pulumi.StringPtrInput `pulumi:"maxParallelWorkers"`
	MaxParallelWorkersPerGather     pulumi.StringPtrInput `pulumi:"maxParallelWorkersPerGather"`
	MaxPredLocksPerTransaction      pulumi.StringPtrInput `pulumi:"maxPredLocksPerTransaction"`
	MaxPreparedTransactions         pulumi.StringPtrInput `pulumi:"maxPreparedTransactions"`
	MaxReplicationSlots             pulumi.StringPtrInput `pulumi:"maxReplicationSlots"`
	MaxStackDepth                   pulumi.StringPtrInput `pulumi:"maxStackDepth"`
	MaxStandbyArchiveDelay          pulumi.StringPtrInput `pulumi:"maxStandbyArchiveDelay"`
	MaxStandbyStreamingDelay        pulumi.StringPtrInput `pulumi:"maxStandbyStreamingDelay"`
	MaxWalSenders                   pulumi.StringPtrInput `pulumi:"maxWalSenders"`
	MaxWorkerProcesses              pulumi.StringPtrInput `pulumi:"maxWorkerProcesses"`
	PgPartmanBgwInterval            pulumi.StringPtrInput `pulumi:"pgPartmanBgwInterval"`
	PgPartmanBgwRole                pulumi.StringPtrInput `pulumi:"pgPartmanBgwRole"`
	PgStatStatementsTrack           pulumi.StringPtrInput `pulumi:"pgStatStatementsTrack"`
	TempFileLimit                   pulumi.StringPtrInput `pulumi:"tempFileLimit"`
	Timezone                        pulumi.StringPtrInput `pulumi:"timezone"`
	TrackActivityQuerySize          pulumi.StringPtrInput `pulumi:"trackActivityQuerySize"`
	TrackCommitTimestamp            pulumi.StringPtrInput `pulumi:"trackCommitTimestamp"`
	TrackFunctions                  pulumi.StringPtrInput `pulumi:"trackFunctions"`
	WalSenderTimeout                pulumi.StringPtrInput `pulumi:"walSenderTimeout"`
	WalWriterDelay                  pulumi.StringPtrInput `pulumi:"walWriterDelay"`
}

func (ServicePgUserConfigPgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePgUserConfigPg)(nil)).Elem()
}

func (i ServicePgUserConfigPgArgs) ToServicePgUserConfigPgOutput() ServicePgUserConfigPgOutput {
	return i.ToServicePgUserConfigPgOutputWithContext(context.Background())
}

func (i ServicePgUserConfigPgArgs) ToServicePgUserConfigPgOutputWithContext(ctx context.Context) ServicePgUserConfigPgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigPgOutput)
}

func (i ServicePgUserConfigPgArgs) ToServicePgUserConfigPgPtrOutput() ServicePgUserConfigPgPtrOutput {
	return i.ToServicePgUserConfigPgPtrOutputWithContext(context.Background())
}

func (i ServicePgUserConfigPgArgs) ToServicePgUserConfigPgPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPgPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigPgOutput).ToServicePgUserConfigPgPtrOutputWithContext(ctx)
}

// ServicePgUserConfigPgPtrInput is an input type that accepts ServicePgUserConfigPgArgs, ServicePgUserConfigPgPtr and ServicePgUserConfigPgPtrOutput values.
// You can construct a concrete instance of `ServicePgUserConfigPgPtrInput` via:
//
//          ServicePgUserConfigPgArgs{...}
//
//  or:
//
//          nil
type ServicePgUserConfigPgPtrInput interface {
	pulumi.Input

	ToServicePgUserConfigPgPtrOutput() ServicePgUserConfigPgPtrOutput
	ToServicePgUserConfigPgPtrOutputWithContext(context.Context) ServicePgUserConfigPgPtrOutput
}

type servicePgUserConfigPgPtrType ServicePgUserConfigPgArgs

func ServicePgUserConfigPgPtr(v *ServicePgUserConfigPgArgs) ServicePgUserConfigPgPtrInput {
	return (*servicePgUserConfigPgPtrType)(v)
}

func (*servicePgUserConfigPgPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePgUserConfigPg)(nil)).Elem()
}

func (i *servicePgUserConfigPgPtrType) ToServicePgUserConfigPgPtrOutput() ServicePgUserConfigPgPtrOutput {
	return i.ToServicePgUserConfigPgPtrOutputWithContext(context.Background())
}

func (i *servicePgUserConfigPgPtrType) ToServicePgUserConfigPgPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPgPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigPgPtrOutput)
}

type ServicePgUserConfigPgOutput struct{ *pulumi.OutputState }

func (ServicePgUserConfigPgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePgUserConfigPg)(nil)).Elem()
}

func (o ServicePgUserConfigPgOutput) ToServicePgUserConfigPgOutput() ServicePgUserConfigPgOutput {
	return o
}

func (o ServicePgUserConfigPgOutput) ToServicePgUserConfigPgOutputWithContext(ctx context.Context) ServicePgUserConfigPgOutput {
	return o
}

func (o ServicePgUserConfigPgOutput) ToServicePgUserConfigPgPtrOutput() ServicePgUserConfigPgPtrOutput {
	return o.ToServicePgUserConfigPgPtrOutputWithContext(context.Background())
}

func (o ServicePgUserConfigPgOutput) ToServicePgUserConfigPgPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPgPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *ServicePgUserConfigPg {
		return &v
	}).(ServicePgUserConfigPgPtrOutput)
}
func (o ServicePgUserConfigPgOutput) AutovacuumAnalyzeScaleFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.AutovacuumAnalyzeScaleFactor }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) AutovacuumAnalyzeThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.AutovacuumAnalyzeThreshold }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) AutovacuumFreezeMaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.AutovacuumFreezeMaxAge }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) AutovacuumMaxWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.AutovacuumMaxWorkers }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) AutovacuumNaptime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.AutovacuumNaptime }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) AutovacuumVacuumCostDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.AutovacuumVacuumCostDelay }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) AutovacuumVacuumCostLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.AutovacuumVacuumCostLimit }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) AutovacuumVacuumScaleFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.AutovacuumVacuumScaleFactor }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) AutovacuumVacuumThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.AutovacuumVacuumThreshold }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) DeadlockTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.DeadlockTimeout }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) IdleInTransactionSessionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.IdleInTransactionSessionTimeout }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) Jit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.Jit }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) LogAutovacuumMinDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.LogAutovacuumMinDuration }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) LogErrorVerbosity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.LogErrorVerbosity }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) LogLinePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.LogLinePrefix }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) LogMinDurationStatement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.LogMinDurationStatement }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) MaxFilesPerProcess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.MaxFilesPerProcess }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) MaxLocksPerTransaction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.MaxLocksPerTransaction }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) MaxLogicalReplicationWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.MaxLogicalReplicationWorkers }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) MaxParallelWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.MaxParallelWorkers }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) MaxParallelWorkersPerGather() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.MaxParallelWorkersPerGather }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) MaxPredLocksPerTransaction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.MaxPredLocksPerTransaction }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) MaxPreparedTransactions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.MaxPreparedTransactions }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) MaxReplicationSlots() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.MaxReplicationSlots }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) MaxStackDepth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.MaxStackDepth }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) MaxStandbyArchiveDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.MaxStandbyArchiveDelay }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) MaxStandbyStreamingDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.MaxStandbyStreamingDelay }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) MaxWalSenders() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.MaxWalSenders }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) MaxWorkerProcesses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.MaxWorkerProcesses }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) PgPartmanBgwInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.PgPartmanBgwInterval }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) PgPartmanBgwRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.PgPartmanBgwRole }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) PgStatStatementsTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.PgStatStatementsTrack }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) TempFileLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.TempFileLimit }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) TrackActivityQuerySize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.TrackActivityQuerySize }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) TrackCommitTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.TrackCommitTimestamp }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) TrackFunctions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.TrackFunctions }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) WalSenderTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.WalSenderTimeout }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgOutput) WalWriterDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPg) *string { return v.WalWriterDelay }).(pulumi.StringPtrOutput)
}

type ServicePgUserConfigPgPtrOutput struct{ *pulumi.OutputState }

func (ServicePgUserConfigPgPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePgUserConfigPg)(nil)).Elem()
}

func (o ServicePgUserConfigPgPtrOutput) ToServicePgUserConfigPgPtrOutput() ServicePgUserConfigPgPtrOutput {
	return o
}

func (o ServicePgUserConfigPgPtrOutput) ToServicePgUserConfigPgPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPgPtrOutput {
	return o
}

func (o ServicePgUserConfigPgPtrOutput) Elem() ServicePgUserConfigPgOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) ServicePgUserConfigPg { return *v }).(ServicePgUserConfigPgOutput)
}

func (o ServicePgUserConfigPgPtrOutput) AutovacuumAnalyzeScaleFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumAnalyzeScaleFactor
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) AutovacuumAnalyzeThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumAnalyzeThreshold
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) AutovacuumFreezeMaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumFreezeMaxAge
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) AutovacuumMaxWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumMaxWorkers
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) AutovacuumNaptime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumNaptime
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) AutovacuumVacuumCostDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumVacuumCostDelay
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) AutovacuumVacuumCostLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumVacuumCostLimit
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) AutovacuumVacuumScaleFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumVacuumScaleFactor
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) AutovacuumVacuumThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumVacuumThreshold
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) DeadlockTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.DeadlockTimeout
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) IdleInTransactionSessionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.IdleInTransactionSessionTimeout
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) Jit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.Jit
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) LogAutovacuumMinDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.LogAutovacuumMinDuration
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) LogErrorVerbosity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.LogErrorVerbosity
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) LogLinePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.LogLinePrefix
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) LogMinDurationStatement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.LogMinDurationStatement
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) MaxFilesPerProcess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxFilesPerProcess
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) MaxLocksPerTransaction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxLocksPerTransaction
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) MaxLogicalReplicationWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxLogicalReplicationWorkers
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) MaxParallelWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxParallelWorkers
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) MaxParallelWorkersPerGather() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxParallelWorkersPerGather
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) MaxPredLocksPerTransaction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxPredLocksPerTransaction
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) MaxPreparedTransactions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxPreparedTransactions
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) MaxReplicationSlots() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxReplicationSlots
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) MaxStackDepth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxStackDepth
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) MaxStandbyArchiveDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxStandbyArchiveDelay
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) MaxStandbyStreamingDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxStandbyStreamingDelay
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) MaxWalSenders() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxWalSenders
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) MaxWorkerProcesses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxWorkerProcesses
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) PgPartmanBgwInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.PgPartmanBgwInterval
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) PgPartmanBgwRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.PgPartmanBgwRole
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) PgStatStatementsTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.PgStatStatementsTrack
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) TempFileLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.TempFileLimit
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.Timezone
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) TrackActivityQuerySize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.TrackActivityQuerySize
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) TrackCommitTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.TrackCommitTimestamp
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) TrackFunctions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.TrackFunctions
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) WalSenderTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.WalSenderTimeout
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgPtrOutput) WalWriterDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.WalWriterDelay
	}).(pulumi.StringPtrOutput)
}

type ServicePgUserConfigPgbouncer struct {
	AutodbIdleTimeout       *string  `pulumi:"autodbIdleTimeout"`
	AutodbMaxDbConnections  *string  `pulumi:"autodbMaxDbConnections"`
	AutodbPoolMode          *string  `pulumi:"autodbPoolMode"`
	AutodbPoolSize          *string  `pulumi:"autodbPoolSize"`
	IgnoreStartupParameters []string `pulumi:"ignoreStartupParameters"`
	MinPoolSize             *string  `pulumi:"minPoolSize"`
	ServerIdleTimeout       *string  `pulumi:"serverIdleTimeout"`
	ServerLifetime          *string  `pulumi:"serverLifetime"`
	ServerResetQueryAlways  *string  `pulumi:"serverResetQueryAlways"`
}

// ServicePgUserConfigPgbouncerInput is an input type that accepts ServicePgUserConfigPgbouncerArgs and ServicePgUserConfigPgbouncerOutput values.
// You can construct a concrete instance of `ServicePgUserConfigPgbouncerInput` via:
//
//          ServicePgUserConfigPgbouncerArgs{...}
type ServicePgUserConfigPgbouncerInput interface {
	pulumi.Input

	ToServicePgUserConfigPgbouncerOutput() ServicePgUserConfigPgbouncerOutput
	ToServicePgUserConfigPgbouncerOutputWithContext(context.Context) ServicePgUserConfigPgbouncerOutput
}

type ServicePgUserConfigPgbouncerArgs struct {
	AutodbIdleTimeout       pulumi.StringPtrInput   `pulumi:"autodbIdleTimeout"`
	AutodbMaxDbConnections  pulumi.StringPtrInput   `pulumi:"autodbMaxDbConnections"`
	AutodbPoolMode          pulumi.StringPtrInput   `pulumi:"autodbPoolMode"`
	AutodbPoolSize          pulumi.StringPtrInput   `pulumi:"autodbPoolSize"`
	IgnoreStartupParameters pulumi.StringArrayInput `pulumi:"ignoreStartupParameters"`
	MinPoolSize             pulumi.StringPtrInput   `pulumi:"minPoolSize"`
	ServerIdleTimeout       pulumi.StringPtrInput   `pulumi:"serverIdleTimeout"`
	ServerLifetime          pulumi.StringPtrInput   `pulumi:"serverLifetime"`
	ServerResetQueryAlways  pulumi.StringPtrInput   `pulumi:"serverResetQueryAlways"`
}

func (ServicePgUserConfigPgbouncerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePgUserConfigPgbouncer)(nil)).Elem()
}

func (i ServicePgUserConfigPgbouncerArgs) ToServicePgUserConfigPgbouncerOutput() ServicePgUserConfigPgbouncerOutput {
	return i.ToServicePgUserConfigPgbouncerOutputWithContext(context.Background())
}

func (i ServicePgUserConfigPgbouncerArgs) ToServicePgUserConfigPgbouncerOutputWithContext(ctx context.Context) ServicePgUserConfigPgbouncerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigPgbouncerOutput)
}

func (i ServicePgUserConfigPgbouncerArgs) ToServicePgUserConfigPgbouncerPtrOutput() ServicePgUserConfigPgbouncerPtrOutput {
	return i.ToServicePgUserConfigPgbouncerPtrOutputWithContext(context.Background())
}

func (i ServicePgUserConfigPgbouncerArgs) ToServicePgUserConfigPgbouncerPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPgbouncerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigPgbouncerOutput).ToServicePgUserConfigPgbouncerPtrOutputWithContext(ctx)
}

// ServicePgUserConfigPgbouncerPtrInput is an input type that accepts ServicePgUserConfigPgbouncerArgs, ServicePgUserConfigPgbouncerPtr and ServicePgUserConfigPgbouncerPtrOutput values.
// You can construct a concrete instance of `ServicePgUserConfigPgbouncerPtrInput` via:
//
//          ServicePgUserConfigPgbouncerArgs{...}
//
//  or:
//
//          nil
type ServicePgUserConfigPgbouncerPtrInput interface {
	pulumi.Input

	ToServicePgUserConfigPgbouncerPtrOutput() ServicePgUserConfigPgbouncerPtrOutput
	ToServicePgUserConfigPgbouncerPtrOutputWithContext(context.Context) ServicePgUserConfigPgbouncerPtrOutput
}

type servicePgUserConfigPgbouncerPtrType ServicePgUserConfigPgbouncerArgs

func ServicePgUserConfigPgbouncerPtr(v *ServicePgUserConfigPgbouncerArgs) ServicePgUserConfigPgbouncerPtrInput {
	return (*servicePgUserConfigPgbouncerPtrType)(v)
}

func (*servicePgUserConfigPgbouncerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePgUserConfigPgbouncer)(nil)).Elem()
}

func (i *servicePgUserConfigPgbouncerPtrType) ToServicePgUserConfigPgbouncerPtrOutput() ServicePgUserConfigPgbouncerPtrOutput {
	return i.ToServicePgUserConfigPgbouncerPtrOutputWithContext(context.Background())
}

func (i *servicePgUserConfigPgbouncerPtrType) ToServicePgUserConfigPgbouncerPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPgbouncerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigPgbouncerPtrOutput)
}

type ServicePgUserConfigPgbouncerOutput struct{ *pulumi.OutputState }

func (ServicePgUserConfigPgbouncerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePgUserConfigPgbouncer)(nil)).Elem()
}

func (o ServicePgUserConfigPgbouncerOutput) ToServicePgUserConfigPgbouncerOutput() ServicePgUserConfigPgbouncerOutput {
	return o
}

func (o ServicePgUserConfigPgbouncerOutput) ToServicePgUserConfigPgbouncerOutputWithContext(ctx context.Context) ServicePgUserConfigPgbouncerOutput {
	return o
}

func (o ServicePgUserConfigPgbouncerOutput) ToServicePgUserConfigPgbouncerPtrOutput() ServicePgUserConfigPgbouncerPtrOutput {
	return o.ToServicePgUserConfigPgbouncerPtrOutputWithContext(context.Background())
}

func (o ServicePgUserConfigPgbouncerOutput) ToServicePgUserConfigPgbouncerPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPgbouncerPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPgbouncer) *ServicePgUserConfigPgbouncer {
		return &v
	}).(ServicePgUserConfigPgbouncerPtrOutput)
}
func (o ServicePgUserConfigPgbouncerOutput) AutodbIdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPgbouncer) *string { return v.AutodbIdleTimeout }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgbouncerOutput) AutodbMaxDbConnections() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPgbouncer) *string { return v.AutodbMaxDbConnections }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgbouncerOutput) AutodbPoolMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPgbouncer) *string { return v.AutodbPoolMode }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgbouncerOutput) AutodbPoolSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPgbouncer) *string { return v.AutodbPoolSize }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgbouncerOutput) IgnoreStartupParameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServicePgUserConfigPgbouncer) []string { return v.IgnoreStartupParameters }).(pulumi.StringArrayOutput)
}

func (o ServicePgUserConfigPgbouncerOutput) MinPoolSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPgbouncer) *string { return v.MinPoolSize }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgbouncerOutput) ServerIdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPgbouncer) *string { return v.ServerIdleTimeout }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgbouncerOutput) ServerLifetime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPgbouncer) *string { return v.ServerLifetime }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgbouncerOutput) ServerResetQueryAlways() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPgbouncer) *string { return v.ServerResetQueryAlways }).(pulumi.StringPtrOutput)
}

type ServicePgUserConfigPgbouncerPtrOutput struct{ *pulumi.OutputState }

func (ServicePgUserConfigPgbouncerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePgUserConfigPgbouncer)(nil)).Elem()
}

func (o ServicePgUserConfigPgbouncerPtrOutput) ToServicePgUserConfigPgbouncerPtrOutput() ServicePgUserConfigPgbouncerPtrOutput {
	return o
}

func (o ServicePgUserConfigPgbouncerPtrOutput) ToServicePgUserConfigPgbouncerPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPgbouncerPtrOutput {
	return o
}

func (o ServicePgUserConfigPgbouncerPtrOutput) Elem() ServicePgUserConfigPgbouncerOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPgbouncer) ServicePgUserConfigPgbouncer { return *v }).(ServicePgUserConfigPgbouncerOutput)
}

func (o ServicePgUserConfigPgbouncerPtrOutput) AutodbIdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.AutodbIdleTimeout
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgbouncerPtrOutput) AutodbMaxDbConnections() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.AutodbMaxDbConnections
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgbouncerPtrOutput) AutodbPoolMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.AutodbPoolMode
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgbouncerPtrOutput) AutodbPoolSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.AutodbPoolSize
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgbouncerPtrOutput) IgnoreStartupParameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPgbouncer) []string {
		if v == nil {
			return nil
		}
		return v.IgnoreStartupParameters
	}).(pulumi.StringArrayOutput)
}

func (o ServicePgUserConfigPgbouncerPtrOutput) MinPoolSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.MinPoolSize
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgbouncerPtrOutput) ServerIdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.ServerIdleTimeout
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgbouncerPtrOutput) ServerLifetime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.ServerLifetime
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPgbouncerPtrOutput) ServerResetQueryAlways() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.ServerResetQueryAlways
	}).(pulumi.StringPtrOutput)
}

type ServicePgUserConfigPglookout struct {
	MaxFailoverReplicationTimeLag *string `pulumi:"maxFailoverReplicationTimeLag"`
}

// ServicePgUserConfigPglookoutInput is an input type that accepts ServicePgUserConfigPglookoutArgs and ServicePgUserConfigPglookoutOutput values.
// You can construct a concrete instance of `ServicePgUserConfigPglookoutInput` via:
//
//          ServicePgUserConfigPglookoutArgs{...}
type ServicePgUserConfigPglookoutInput interface {
	pulumi.Input

	ToServicePgUserConfigPglookoutOutput() ServicePgUserConfigPglookoutOutput
	ToServicePgUserConfigPglookoutOutputWithContext(context.Context) ServicePgUserConfigPglookoutOutput
}

type ServicePgUserConfigPglookoutArgs struct {
	MaxFailoverReplicationTimeLag pulumi.StringPtrInput `pulumi:"maxFailoverReplicationTimeLag"`
}

func (ServicePgUserConfigPglookoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePgUserConfigPglookout)(nil)).Elem()
}

func (i ServicePgUserConfigPglookoutArgs) ToServicePgUserConfigPglookoutOutput() ServicePgUserConfigPglookoutOutput {
	return i.ToServicePgUserConfigPglookoutOutputWithContext(context.Background())
}

func (i ServicePgUserConfigPglookoutArgs) ToServicePgUserConfigPglookoutOutputWithContext(ctx context.Context) ServicePgUserConfigPglookoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigPglookoutOutput)
}

func (i ServicePgUserConfigPglookoutArgs) ToServicePgUserConfigPglookoutPtrOutput() ServicePgUserConfigPglookoutPtrOutput {
	return i.ToServicePgUserConfigPglookoutPtrOutputWithContext(context.Background())
}

func (i ServicePgUserConfigPglookoutArgs) ToServicePgUserConfigPglookoutPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPglookoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigPglookoutOutput).ToServicePgUserConfigPglookoutPtrOutputWithContext(ctx)
}

// ServicePgUserConfigPglookoutPtrInput is an input type that accepts ServicePgUserConfigPglookoutArgs, ServicePgUserConfigPglookoutPtr and ServicePgUserConfigPglookoutPtrOutput values.
// You can construct a concrete instance of `ServicePgUserConfigPglookoutPtrInput` via:
//
//          ServicePgUserConfigPglookoutArgs{...}
//
//  or:
//
//          nil
type ServicePgUserConfigPglookoutPtrInput interface {
	pulumi.Input

	ToServicePgUserConfigPglookoutPtrOutput() ServicePgUserConfigPglookoutPtrOutput
	ToServicePgUserConfigPglookoutPtrOutputWithContext(context.Context) ServicePgUserConfigPglookoutPtrOutput
}

type servicePgUserConfigPglookoutPtrType ServicePgUserConfigPglookoutArgs

func ServicePgUserConfigPglookoutPtr(v *ServicePgUserConfigPglookoutArgs) ServicePgUserConfigPglookoutPtrInput {
	return (*servicePgUserConfigPglookoutPtrType)(v)
}

func (*servicePgUserConfigPglookoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePgUserConfigPglookout)(nil)).Elem()
}

func (i *servicePgUserConfigPglookoutPtrType) ToServicePgUserConfigPglookoutPtrOutput() ServicePgUserConfigPglookoutPtrOutput {
	return i.ToServicePgUserConfigPglookoutPtrOutputWithContext(context.Background())
}

func (i *servicePgUserConfigPglookoutPtrType) ToServicePgUserConfigPglookoutPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPglookoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigPglookoutPtrOutput)
}

type ServicePgUserConfigPglookoutOutput struct{ *pulumi.OutputState }

func (ServicePgUserConfigPglookoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePgUserConfigPglookout)(nil)).Elem()
}

func (o ServicePgUserConfigPglookoutOutput) ToServicePgUserConfigPglookoutOutput() ServicePgUserConfigPglookoutOutput {
	return o
}

func (o ServicePgUserConfigPglookoutOutput) ToServicePgUserConfigPglookoutOutputWithContext(ctx context.Context) ServicePgUserConfigPglookoutOutput {
	return o
}

func (o ServicePgUserConfigPglookoutOutput) ToServicePgUserConfigPglookoutPtrOutput() ServicePgUserConfigPglookoutPtrOutput {
	return o.ToServicePgUserConfigPglookoutPtrOutputWithContext(context.Background())
}

func (o ServicePgUserConfigPglookoutOutput) ToServicePgUserConfigPglookoutPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPglookoutPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPglookout) *ServicePgUserConfigPglookout {
		return &v
	}).(ServicePgUserConfigPglookoutPtrOutput)
}
func (o ServicePgUserConfigPglookoutOutput) MaxFailoverReplicationTimeLag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPglookout) *string { return v.MaxFailoverReplicationTimeLag }).(pulumi.StringPtrOutput)
}

type ServicePgUserConfigPglookoutPtrOutput struct{ *pulumi.OutputState }

func (ServicePgUserConfigPglookoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePgUserConfigPglookout)(nil)).Elem()
}

func (o ServicePgUserConfigPglookoutPtrOutput) ToServicePgUserConfigPglookoutPtrOutput() ServicePgUserConfigPglookoutPtrOutput {
	return o
}

func (o ServicePgUserConfigPglookoutPtrOutput) ToServicePgUserConfigPglookoutPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPglookoutPtrOutput {
	return o
}

func (o ServicePgUserConfigPglookoutPtrOutput) Elem() ServicePgUserConfigPglookoutOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPglookout) ServicePgUserConfigPglookout { return *v }).(ServicePgUserConfigPglookoutOutput)
}

func (o ServicePgUserConfigPglookoutPtrOutput) MaxFailoverReplicationTimeLag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPglookout) *string {
		if v == nil {
			return nil
		}
		return v.MaxFailoverReplicationTimeLag
	}).(pulumi.StringPtrOutput)
}

type ServicePgUserConfigPrivateAccess struct {
	Pg         *string `pulumi:"pg"`
	Pgbouncer  *string `pulumi:"pgbouncer"`
	Prometheus *string `pulumi:"prometheus"`
}

// ServicePgUserConfigPrivateAccessInput is an input type that accepts ServicePgUserConfigPrivateAccessArgs and ServicePgUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `ServicePgUserConfigPrivateAccessInput` via:
//
//          ServicePgUserConfigPrivateAccessArgs{...}
type ServicePgUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToServicePgUserConfigPrivateAccessOutput() ServicePgUserConfigPrivateAccessOutput
	ToServicePgUserConfigPrivateAccessOutputWithContext(context.Context) ServicePgUserConfigPrivateAccessOutput
}

type ServicePgUserConfigPrivateAccessArgs struct {
	Pg         pulumi.StringPtrInput `pulumi:"pg"`
	Pgbouncer  pulumi.StringPtrInput `pulumi:"pgbouncer"`
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (ServicePgUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePgUserConfigPrivateAccess)(nil)).Elem()
}

func (i ServicePgUserConfigPrivateAccessArgs) ToServicePgUserConfigPrivateAccessOutput() ServicePgUserConfigPrivateAccessOutput {
	return i.ToServicePgUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i ServicePgUserConfigPrivateAccessArgs) ToServicePgUserConfigPrivateAccessOutputWithContext(ctx context.Context) ServicePgUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigPrivateAccessOutput)
}

func (i ServicePgUserConfigPrivateAccessArgs) ToServicePgUserConfigPrivateAccessPtrOutput() ServicePgUserConfigPrivateAccessPtrOutput {
	return i.ToServicePgUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i ServicePgUserConfigPrivateAccessArgs) ToServicePgUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigPrivateAccessOutput).ToServicePgUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// ServicePgUserConfigPrivateAccessPtrInput is an input type that accepts ServicePgUserConfigPrivateAccessArgs, ServicePgUserConfigPrivateAccessPtr and ServicePgUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `ServicePgUserConfigPrivateAccessPtrInput` via:
//
//          ServicePgUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type ServicePgUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToServicePgUserConfigPrivateAccessPtrOutput() ServicePgUserConfigPrivateAccessPtrOutput
	ToServicePgUserConfigPrivateAccessPtrOutputWithContext(context.Context) ServicePgUserConfigPrivateAccessPtrOutput
}

type servicePgUserConfigPrivateAccessPtrType ServicePgUserConfigPrivateAccessArgs

func ServicePgUserConfigPrivateAccessPtr(v *ServicePgUserConfigPrivateAccessArgs) ServicePgUserConfigPrivateAccessPtrInput {
	return (*servicePgUserConfigPrivateAccessPtrType)(v)
}

func (*servicePgUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePgUserConfigPrivateAccess)(nil)).Elem()
}

func (i *servicePgUserConfigPrivateAccessPtrType) ToServicePgUserConfigPrivateAccessPtrOutput() ServicePgUserConfigPrivateAccessPtrOutput {
	return i.ToServicePgUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *servicePgUserConfigPrivateAccessPtrType) ToServicePgUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigPrivateAccessPtrOutput)
}

type ServicePgUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (ServicePgUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePgUserConfigPrivateAccess)(nil)).Elem()
}

func (o ServicePgUserConfigPrivateAccessOutput) ToServicePgUserConfigPrivateAccessOutput() ServicePgUserConfigPrivateAccessOutput {
	return o
}

func (o ServicePgUserConfigPrivateAccessOutput) ToServicePgUserConfigPrivateAccessOutputWithContext(ctx context.Context) ServicePgUserConfigPrivateAccessOutput {
	return o
}

func (o ServicePgUserConfigPrivateAccessOutput) ToServicePgUserConfigPrivateAccessPtrOutput() ServicePgUserConfigPrivateAccessPtrOutput {
	return o.ToServicePgUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o ServicePgUserConfigPrivateAccessOutput) ToServicePgUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPrivateAccess) *ServicePgUserConfigPrivateAccess {
		return &v
	}).(ServicePgUserConfigPrivateAccessPtrOutput)
}
func (o ServicePgUserConfigPrivateAccessOutput) Pg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPrivateAccess) *string { return v.Pg }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPrivateAccessOutput) Pgbouncer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPrivateAccess) *string { return v.Pgbouncer }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type ServicePgUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (ServicePgUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePgUserConfigPrivateAccess)(nil)).Elem()
}

func (o ServicePgUserConfigPrivateAccessPtrOutput) ToServicePgUserConfigPrivateAccessPtrOutput() ServicePgUserConfigPrivateAccessPtrOutput {
	return o
}

func (o ServicePgUserConfigPrivateAccessPtrOutput) ToServicePgUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPrivateAccessPtrOutput {
	return o
}

func (o ServicePgUserConfigPrivateAccessPtrOutput) Elem() ServicePgUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPrivateAccess) ServicePgUserConfigPrivateAccess { return *v }).(ServicePgUserConfigPrivateAccessOutput)
}

func (o ServicePgUserConfigPrivateAccessPtrOutput) Pg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Pg
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPrivateAccessPtrOutput) Pgbouncer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Pgbouncer
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type ServicePgUserConfigPrivatelinkAccess struct {
	Pg        *string `pulumi:"pg"`
	Pgbouncer *string `pulumi:"pgbouncer"`
}

// ServicePgUserConfigPrivatelinkAccessInput is an input type that accepts ServicePgUserConfigPrivatelinkAccessArgs and ServicePgUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `ServicePgUserConfigPrivatelinkAccessInput` via:
//
//          ServicePgUserConfigPrivatelinkAccessArgs{...}
type ServicePgUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToServicePgUserConfigPrivatelinkAccessOutput() ServicePgUserConfigPrivatelinkAccessOutput
	ToServicePgUserConfigPrivatelinkAccessOutputWithContext(context.Context) ServicePgUserConfigPrivatelinkAccessOutput
}

type ServicePgUserConfigPrivatelinkAccessArgs struct {
	Pg        pulumi.StringPtrInput `pulumi:"pg"`
	Pgbouncer pulumi.StringPtrInput `pulumi:"pgbouncer"`
}

func (ServicePgUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePgUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i ServicePgUserConfigPrivatelinkAccessArgs) ToServicePgUserConfigPrivatelinkAccessOutput() ServicePgUserConfigPrivatelinkAccessOutput {
	return i.ToServicePgUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i ServicePgUserConfigPrivatelinkAccessArgs) ToServicePgUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) ServicePgUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigPrivatelinkAccessOutput)
}

func (i ServicePgUserConfigPrivatelinkAccessArgs) ToServicePgUserConfigPrivatelinkAccessPtrOutput() ServicePgUserConfigPrivatelinkAccessPtrOutput {
	return i.ToServicePgUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i ServicePgUserConfigPrivatelinkAccessArgs) ToServicePgUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigPrivatelinkAccessOutput).ToServicePgUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// ServicePgUserConfigPrivatelinkAccessPtrInput is an input type that accepts ServicePgUserConfigPrivatelinkAccessArgs, ServicePgUserConfigPrivatelinkAccessPtr and ServicePgUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `ServicePgUserConfigPrivatelinkAccessPtrInput` via:
//
//          ServicePgUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type ServicePgUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToServicePgUserConfigPrivatelinkAccessPtrOutput() ServicePgUserConfigPrivatelinkAccessPtrOutput
	ToServicePgUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) ServicePgUserConfigPrivatelinkAccessPtrOutput
}

type servicePgUserConfigPrivatelinkAccessPtrType ServicePgUserConfigPrivatelinkAccessArgs

func ServicePgUserConfigPrivatelinkAccessPtr(v *ServicePgUserConfigPrivatelinkAccessArgs) ServicePgUserConfigPrivatelinkAccessPtrInput {
	return (*servicePgUserConfigPrivatelinkAccessPtrType)(v)
}

func (*servicePgUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePgUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *servicePgUserConfigPrivatelinkAccessPtrType) ToServicePgUserConfigPrivatelinkAccessPtrOutput() ServicePgUserConfigPrivatelinkAccessPtrOutput {
	return i.ToServicePgUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *servicePgUserConfigPrivatelinkAccessPtrType) ToServicePgUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigPrivatelinkAccessPtrOutput)
}

type ServicePgUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (ServicePgUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePgUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o ServicePgUserConfigPrivatelinkAccessOutput) ToServicePgUserConfigPrivatelinkAccessOutput() ServicePgUserConfigPrivatelinkAccessOutput {
	return o
}

func (o ServicePgUserConfigPrivatelinkAccessOutput) ToServicePgUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) ServicePgUserConfigPrivatelinkAccessOutput {
	return o
}

func (o ServicePgUserConfigPrivatelinkAccessOutput) ToServicePgUserConfigPrivatelinkAccessPtrOutput() ServicePgUserConfigPrivatelinkAccessPtrOutput {
	return o.ToServicePgUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o ServicePgUserConfigPrivatelinkAccessOutput) ToServicePgUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPrivatelinkAccess) *ServicePgUserConfigPrivatelinkAccess {
		return &v
	}).(ServicePgUserConfigPrivatelinkAccessPtrOutput)
}
func (o ServicePgUserConfigPrivatelinkAccessOutput) Pg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPrivatelinkAccess) *string { return v.Pg }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPrivatelinkAccessOutput) Pgbouncer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPrivatelinkAccess) *string { return v.Pgbouncer }).(pulumi.StringPtrOutput)
}

type ServicePgUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (ServicePgUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePgUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o ServicePgUserConfigPrivatelinkAccessPtrOutput) ToServicePgUserConfigPrivatelinkAccessPtrOutput() ServicePgUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o ServicePgUserConfigPrivatelinkAccessPtrOutput) ToServicePgUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o ServicePgUserConfigPrivatelinkAccessPtrOutput) Elem() ServicePgUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPrivatelinkAccess) ServicePgUserConfigPrivatelinkAccess { return *v }).(ServicePgUserConfigPrivatelinkAccessOutput)
}

func (o ServicePgUserConfigPrivatelinkAccessPtrOutput) Pg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Pg
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPrivatelinkAccessPtrOutput) Pgbouncer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Pgbouncer
	}).(pulumi.StringPtrOutput)
}

type ServicePgUserConfigPublicAccess struct {
	Pg         *string `pulumi:"pg"`
	Pgbouncer  *string `pulumi:"pgbouncer"`
	Prometheus *string `pulumi:"prometheus"`
}

// ServicePgUserConfigPublicAccessInput is an input type that accepts ServicePgUserConfigPublicAccessArgs and ServicePgUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `ServicePgUserConfigPublicAccessInput` via:
//
//          ServicePgUserConfigPublicAccessArgs{...}
type ServicePgUserConfigPublicAccessInput interface {
	pulumi.Input

	ToServicePgUserConfigPublicAccessOutput() ServicePgUserConfigPublicAccessOutput
	ToServicePgUserConfigPublicAccessOutputWithContext(context.Context) ServicePgUserConfigPublicAccessOutput
}

type ServicePgUserConfigPublicAccessArgs struct {
	Pg         pulumi.StringPtrInput `pulumi:"pg"`
	Pgbouncer  pulumi.StringPtrInput `pulumi:"pgbouncer"`
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (ServicePgUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePgUserConfigPublicAccess)(nil)).Elem()
}

func (i ServicePgUserConfigPublicAccessArgs) ToServicePgUserConfigPublicAccessOutput() ServicePgUserConfigPublicAccessOutput {
	return i.ToServicePgUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i ServicePgUserConfigPublicAccessArgs) ToServicePgUserConfigPublicAccessOutputWithContext(ctx context.Context) ServicePgUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigPublicAccessOutput)
}

func (i ServicePgUserConfigPublicAccessArgs) ToServicePgUserConfigPublicAccessPtrOutput() ServicePgUserConfigPublicAccessPtrOutput {
	return i.ToServicePgUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i ServicePgUserConfigPublicAccessArgs) ToServicePgUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigPublicAccessOutput).ToServicePgUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// ServicePgUserConfigPublicAccessPtrInput is an input type that accepts ServicePgUserConfigPublicAccessArgs, ServicePgUserConfigPublicAccessPtr and ServicePgUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `ServicePgUserConfigPublicAccessPtrInput` via:
//
//          ServicePgUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type ServicePgUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToServicePgUserConfigPublicAccessPtrOutput() ServicePgUserConfigPublicAccessPtrOutput
	ToServicePgUserConfigPublicAccessPtrOutputWithContext(context.Context) ServicePgUserConfigPublicAccessPtrOutput
}

type servicePgUserConfigPublicAccessPtrType ServicePgUserConfigPublicAccessArgs

func ServicePgUserConfigPublicAccessPtr(v *ServicePgUserConfigPublicAccessArgs) ServicePgUserConfigPublicAccessPtrInput {
	return (*servicePgUserConfigPublicAccessPtrType)(v)
}

func (*servicePgUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePgUserConfigPublicAccess)(nil)).Elem()
}

func (i *servicePgUserConfigPublicAccessPtrType) ToServicePgUserConfigPublicAccessPtrOutput() ServicePgUserConfigPublicAccessPtrOutput {
	return i.ToServicePgUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *servicePgUserConfigPublicAccessPtrType) ToServicePgUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigPublicAccessPtrOutput)
}

type ServicePgUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (ServicePgUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePgUserConfigPublicAccess)(nil)).Elem()
}

func (o ServicePgUserConfigPublicAccessOutput) ToServicePgUserConfigPublicAccessOutput() ServicePgUserConfigPublicAccessOutput {
	return o
}

func (o ServicePgUserConfigPublicAccessOutput) ToServicePgUserConfigPublicAccessOutputWithContext(ctx context.Context) ServicePgUserConfigPublicAccessOutput {
	return o
}

func (o ServicePgUserConfigPublicAccessOutput) ToServicePgUserConfigPublicAccessPtrOutput() ServicePgUserConfigPublicAccessPtrOutput {
	return o.ToServicePgUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o ServicePgUserConfigPublicAccessOutput) ToServicePgUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPublicAccess) *ServicePgUserConfigPublicAccess {
		return &v
	}).(ServicePgUserConfigPublicAccessPtrOutput)
}
func (o ServicePgUserConfigPublicAccessOutput) Pg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPublicAccess) *string { return v.Pg }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPublicAccessOutput) Pgbouncer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPublicAccess) *string { return v.Pgbouncer }).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type ServicePgUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (ServicePgUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePgUserConfigPublicAccess)(nil)).Elem()
}

func (o ServicePgUserConfigPublicAccessPtrOutput) ToServicePgUserConfigPublicAccessPtrOutput() ServicePgUserConfigPublicAccessPtrOutput {
	return o
}

func (o ServicePgUserConfigPublicAccessPtrOutput) ToServicePgUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServicePgUserConfigPublicAccessPtrOutput {
	return o
}

func (o ServicePgUserConfigPublicAccessPtrOutput) Elem() ServicePgUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPublicAccess) ServicePgUserConfigPublicAccess { return *v }).(ServicePgUserConfigPublicAccessOutput)
}

func (o ServicePgUserConfigPublicAccessPtrOutput) Pg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Pg
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPublicAccessPtrOutput) Pgbouncer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Pgbouncer
	}).(pulumi.StringPtrOutput)
}

func (o ServicePgUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type ServicePgUserConfigTimescaledb struct {
	MaxBackgroundWorkers *string `pulumi:"maxBackgroundWorkers"`
}

// ServicePgUserConfigTimescaledbInput is an input type that accepts ServicePgUserConfigTimescaledbArgs and ServicePgUserConfigTimescaledbOutput values.
// You can construct a concrete instance of `ServicePgUserConfigTimescaledbInput` via:
//
//          ServicePgUserConfigTimescaledbArgs{...}
type ServicePgUserConfigTimescaledbInput interface {
	pulumi.Input

	ToServicePgUserConfigTimescaledbOutput() ServicePgUserConfigTimescaledbOutput
	ToServicePgUserConfigTimescaledbOutputWithContext(context.Context) ServicePgUserConfigTimescaledbOutput
}

type ServicePgUserConfigTimescaledbArgs struct {
	MaxBackgroundWorkers pulumi.StringPtrInput `pulumi:"maxBackgroundWorkers"`
}

func (ServicePgUserConfigTimescaledbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePgUserConfigTimescaledb)(nil)).Elem()
}

func (i ServicePgUserConfigTimescaledbArgs) ToServicePgUserConfigTimescaledbOutput() ServicePgUserConfigTimescaledbOutput {
	return i.ToServicePgUserConfigTimescaledbOutputWithContext(context.Background())
}

func (i ServicePgUserConfigTimescaledbArgs) ToServicePgUserConfigTimescaledbOutputWithContext(ctx context.Context) ServicePgUserConfigTimescaledbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigTimescaledbOutput)
}

func (i ServicePgUserConfigTimescaledbArgs) ToServicePgUserConfigTimescaledbPtrOutput() ServicePgUserConfigTimescaledbPtrOutput {
	return i.ToServicePgUserConfigTimescaledbPtrOutputWithContext(context.Background())
}

func (i ServicePgUserConfigTimescaledbArgs) ToServicePgUserConfigTimescaledbPtrOutputWithContext(ctx context.Context) ServicePgUserConfigTimescaledbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigTimescaledbOutput).ToServicePgUserConfigTimescaledbPtrOutputWithContext(ctx)
}

// ServicePgUserConfigTimescaledbPtrInput is an input type that accepts ServicePgUserConfigTimescaledbArgs, ServicePgUserConfigTimescaledbPtr and ServicePgUserConfigTimescaledbPtrOutput values.
// You can construct a concrete instance of `ServicePgUserConfigTimescaledbPtrInput` via:
//
//          ServicePgUserConfigTimescaledbArgs{...}
//
//  or:
//
//          nil
type ServicePgUserConfigTimescaledbPtrInput interface {
	pulumi.Input

	ToServicePgUserConfigTimescaledbPtrOutput() ServicePgUserConfigTimescaledbPtrOutput
	ToServicePgUserConfigTimescaledbPtrOutputWithContext(context.Context) ServicePgUserConfigTimescaledbPtrOutput
}

type servicePgUserConfigTimescaledbPtrType ServicePgUserConfigTimescaledbArgs

func ServicePgUserConfigTimescaledbPtr(v *ServicePgUserConfigTimescaledbArgs) ServicePgUserConfigTimescaledbPtrInput {
	return (*servicePgUserConfigTimescaledbPtrType)(v)
}

func (*servicePgUserConfigTimescaledbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePgUserConfigTimescaledb)(nil)).Elem()
}

func (i *servicePgUserConfigTimescaledbPtrType) ToServicePgUserConfigTimescaledbPtrOutput() ServicePgUserConfigTimescaledbPtrOutput {
	return i.ToServicePgUserConfigTimescaledbPtrOutputWithContext(context.Background())
}

func (i *servicePgUserConfigTimescaledbPtrType) ToServicePgUserConfigTimescaledbPtrOutputWithContext(ctx context.Context) ServicePgUserConfigTimescaledbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePgUserConfigTimescaledbPtrOutput)
}

type ServicePgUserConfigTimescaledbOutput struct{ *pulumi.OutputState }

func (ServicePgUserConfigTimescaledbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePgUserConfigTimescaledb)(nil)).Elem()
}

func (o ServicePgUserConfigTimescaledbOutput) ToServicePgUserConfigTimescaledbOutput() ServicePgUserConfigTimescaledbOutput {
	return o
}

func (o ServicePgUserConfigTimescaledbOutput) ToServicePgUserConfigTimescaledbOutputWithContext(ctx context.Context) ServicePgUserConfigTimescaledbOutput {
	return o
}

func (o ServicePgUserConfigTimescaledbOutput) ToServicePgUserConfigTimescaledbPtrOutput() ServicePgUserConfigTimescaledbPtrOutput {
	return o.ToServicePgUserConfigTimescaledbPtrOutputWithContext(context.Background())
}

func (o ServicePgUserConfigTimescaledbOutput) ToServicePgUserConfigTimescaledbPtrOutputWithContext(ctx context.Context) ServicePgUserConfigTimescaledbPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigTimescaledb) *ServicePgUserConfigTimescaledb {
		return &v
	}).(ServicePgUserConfigTimescaledbPtrOutput)
}
func (o ServicePgUserConfigTimescaledbOutput) MaxBackgroundWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePgUserConfigTimescaledb) *string { return v.MaxBackgroundWorkers }).(pulumi.StringPtrOutput)
}

type ServicePgUserConfigTimescaledbPtrOutput struct{ *pulumi.OutputState }

func (ServicePgUserConfigTimescaledbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePgUserConfigTimescaledb)(nil)).Elem()
}

func (o ServicePgUserConfigTimescaledbPtrOutput) ToServicePgUserConfigTimescaledbPtrOutput() ServicePgUserConfigTimescaledbPtrOutput {
	return o
}

func (o ServicePgUserConfigTimescaledbPtrOutput) ToServicePgUserConfigTimescaledbPtrOutputWithContext(ctx context.Context) ServicePgUserConfigTimescaledbPtrOutput {
	return o
}

func (o ServicePgUserConfigTimescaledbPtrOutput) Elem() ServicePgUserConfigTimescaledbOutput {
	return o.ApplyT(func(v *ServicePgUserConfigTimescaledb) ServicePgUserConfigTimescaledb { return *v }).(ServicePgUserConfigTimescaledbOutput)
}

func (o ServicePgUserConfigTimescaledbPtrOutput) MaxBackgroundWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePgUserConfigTimescaledb) *string {
		if v == nil {
			return nil
		}
		return v.MaxBackgroundWorkers
	}).(pulumi.StringPtrOutput)
}

type ServiceRedis struct {
}

// ServiceRedisInput is an input type that accepts ServiceRedisArgs and ServiceRedisOutput values.
// You can construct a concrete instance of `ServiceRedisInput` via:
//
//          ServiceRedisArgs{...}
type ServiceRedisInput interface {
	pulumi.Input

	ToServiceRedisOutput() ServiceRedisOutput
	ToServiceRedisOutputWithContext(context.Context) ServiceRedisOutput
}

type ServiceRedisArgs struct {
}

func (ServiceRedisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRedis)(nil)).Elem()
}

func (i ServiceRedisArgs) ToServiceRedisOutput() ServiceRedisOutput {
	return i.ToServiceRedisOutputWithContext(context.Background())
}

func (i ServiceRedisArgs) ToServiceRedisOutputWithContext(ctx context.Context) ServiceRedisOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRedisOutput)
}

func (i ServiceRedisArgs) ToServiceRedisPtrOutput() ServiceRedisPtrOutput {
	return i.ToServiceRedisPtrOutputWithContext(context.Background())
}

func (i ServiceRedisArgs) ToServiceRedisPtrOutputWithContext(ctx context.Context) ServiceRedisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRedisOutput).ToServiceRedisPtrOutputWithContext(ctx)
}

// ServiceRedisPtrInput is an input type that accepts ServiceRedisArgs, ServiceRedisPtr and ServiceRedisPtrOutput values.
// You can construct a concrete instance of `ServiceRedisPtrInput` via:
//
//          ServiceRedisArgs{...}
//
//  or:
//
//          nil
type ServiceRedisPtrInput interface {
	pulumi.Input

	ToServiceRedisPtrOutput() ServiceRedisPtrOutput
	ToServiceRedisPtrOutputWithContext(context.Context) ServiceRedisPtrOutput
}

type serviceRedisPtrType ServiceRedisArgs

func ServiceRedisPtr(v *ServiceRedisArgs) ServiceRedisPtrInput {
	return (*serviceRedisPtrType)(v)
}

func (*serviceRedisPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceRedis)(nil)).Elem()
}

func (i *serviceRedisPtrType) ToServiceRedisPtrOutput() ServiceRedisPtrOutput {
	return i.ToServiceRedisPtrOutputWithContext(context.Background())
}

func (i *serviceRedisPtrType) ToServiceRedisPtrOutputWithContext(ctx context.Context) ServiceRedisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRedisPtrOutput)
}

type ServiceRedisOutput struct{ *pulumi.OutputState }

func (ServiceRedisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRedis)(nil)).Elem()
}

func (o ServiceRedisOutput) ToServiceRedisOutput() ServiceRedisOutput {
	return o
}

func (o ServiceRedisOutput) ToServiceRedisOutputWithContext(ctx context.Context) ServiceRedisOutput {
	return o
}

func (o ServiceRedisOutput) ToServiceRedisPtrOutput() ServiceRedisPtrOutput {
	return o.ToServiceRedisPtrOutputWithContext(context.Background())
}

func (o ServiceRedisOutput) ToServiceRedisPtrOutputWithContext(ctx context.Context) ServiceRedisPtrOutput {
	return o.ApplyT(func(v ServiceRedis) *ServiceRedis {
		return &v
	}).(ServiceRedisPtrOutput)
}

type ServiceRedisPtrOutput struct{ *pulumi.OutputState }

func (ServiceRedisPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceRedis)(nil)).Elem()
}

func (o ServiceRedisPtrOutput) ToServiceRedisPtrOutput() ServiceRedisPtrOutput {
	return o
}

func (o ServiceRedisPtrOutput) ToServiceRedisPtrOutputWithContext(ctx context.Context) ServiceRedisPtrOutput {
	return o
}

func (o ServiceRedisPtrOutput) Elem() ServiceRedisOutput {
	return o.ApplyT(func(v *ServiceRedis) ServiceRedis { return *v }).(ServiceRedisOutput)
}

type ServiceRedisUserConfig struct {
	IpFilters                 []string                                 `pulumi:"ipFilters"`
	Migration                 *ServiceRedisUserConfigMigration         `pulumi:"migration"`
	PrivateAccess             *ServiceRedisUserConfigPrivateAccess     `pulumi:"privateAccess"`
	PrivatelinkAccess         *ServiceRedisUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	ProjectToForkFrom         *string                                  `pulumi:"projectToForkFrom"`
	PublicAccess              *ServiceRedisUserConfigPublicAccess      `pulumi:"publicAccess"`
	RecoveryBasebackupName    *string                                  `pulumi:"recoveryBasebackupName"`
	RedisIoThreads            *string                                  `pulumi:"redisIoThreads"`
	RedisLfuDecayTime         *string                                  `pulumi:"redisLfuDecayTime"`
	RedisLfuLogFactor         *string                                  `pulumi:"redisLfuLogFactor"`
	RedisMaxmemoryPolicy      *string                                  `pulumi:"redisMaxmemoryPolicy"`
	RedisNotifyKeyspaceEvents *string                                  `pulumi:"redisNotifyKeyspaceEvents"`
	RedisSsl                  *string                                  `pulumi:"redisSsl"`
	RedisTimeout              *string                                  `pulumi:"redisTimeout"`
	ServiceToForkFrom         *string                                  `pulumi:"serviceToForkFrom"`
}

// ServiceRedisUserConfigInput is an input type that accepts ServiceRedisUserConfigArgs and ServiceRedisUserConfigOutput values.
// You can construct a concrete instance of `ServiceRedisUserConfigInput` via:
//
//          ServiceRedisUserConfigArgs{...}
type ServiceRedisUserConfigInput interface {
	pulumi.Input

	ToServiceRedisUserConfigOutput() ServiceRedisUserConfigOutput
	ToServiceRedisUserConfigOutputWithContext(context.Context) ServiceRedisUserConfigOutput
}

type ServiceRedisUserConfigArgs struct {
	IpFilters                 pulumi.StringArrayInput                         `pulumi:"ipFilters"`
	Migration                 ServiceRedisUserConfigMigrationPtrInput         `pulumi:"migration"`
	PrivateAccess             ServiceRedisUserConfigPrivateAccessPtrInput     `pulumi:"privateAccess"`
	PrivatelinkAccess         ServiceRedisUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	ProjectToForkFrom         pulumi.StringPtrInput                           `pulumi:"projectToForkFrom"`
	PublicAccess              ServiceRedisUserConfigPublicAccessPtrInput      `pulumi:"publicAccess"`
	RecoveryBasebackupName    pulumi.StringPtrInput                           `pulumi:"recoveryBasebackupName"`
	RedisIoThreads            pulumi.StringPtrInput                           `pulumi:"redisIoThreads"`
	RedisLfuDecayTime         pulumi.StringPtrInput                           `pulumi:"redisLfuDecayTime"`
	RedisLfuLogFactor         pulumi.StringPtrInput                           `pulumi:"redisLfuLogFactor"`
	RedisMaxmemoryPolicy      pulumi.StringPtrInput                           `pulumi:"redisMaxmemoryPolicy"`
	RedisNotifyKeyspaceEvents pulumi.StringPtrInput                           `pulumi:"redisNotifyKeyspaceEvents"`
	RedisSsl                  pulumi.StringPtrInput                           `pulumi:"redisSsl"`
	RedisTimeout              pulumi.StringPtrInput                           `pulumi:"redisTimeout"`
	ServiceToForkFrom         pulumi.StringPtrInput                           `pulumi:"serviceToForkFrom"`
}

func (ServiceRedisUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRedisUserConfig)(nil)).Elem()
}

func (i ServiceRedisUserConfigArgs) ToServiceRedisUserConfigOutput() ServiceRedisUserConfigOutput {
	return i.ToServiceRedisUserConfigOutputWithContext(context.Background())
}

func (i ServiceRedisUserConfigArgs) ToServiceRedisUserConfigOutputWithContext(ctx context.Context) ServiceRedisUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRedisUserConfigOutput)
}

func (i ServiceRedisUserConfigArgs) ToServiceRedisUserConfigPtrOutput() ServiceRedisUserConfigPtrOutput {
	return i.ToServiceRedisUserConfigPtrOutputWithContext(context.Background())
}

func (i ServiceRedisUserConfigArgs) ToServiceRedisUserConfigPtrOutputWithContext(ctx context.Context) ServiceRedisUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRedisUserConfigOutput).ToServiceRedisUserConfigPtrOutputWithContext(ctx)
}

// ServiceRedisUserConfigPtrInput is an input type that accepts ServiceRedisUserConfigArgs, ServiceRedisUserConfigPtr and ServiceRedisUserConfigPtrOutput values.
// You can construct a concrete instance of `ServiceRedisUserConfigPtrInput` via:
//
//          ServiceRedisUserConfigArgs{...}
//
//  or:
//
//          nil
type ServiceRedisUserConfigPtrInput interface {
	pulumi.Input

	ToServiceRedisUserConfigPtrOutput() ServiceRedisUserConfigPtrOutput
	ToServiceRedisUserConfigPtrOutputWithContext(context.Context) ServiceRedisUserConfigPtrOutput
}

type serviceRedisUserConfigPtrType ServiceRedisUserConfigArgs

func ServiceRedisUserConfigPtr(v *ServiceRedisUserConfigArgs) ServiceRedisUserConfigPtrInput {
	return (*serviceRedisUserConfigPtrType)(v)
}

func (*serviceRedisUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceRedisUserConfig)(nil)).Elem()
}

func (i *serviceRedisUserConfigPtrType) ToServiceRedisUserConfigPtrOutput() ServiceRedisUserConfigPtrOutput {
	return i.ToServiceRedisUserConfigPtrOutputWithContext(context.Background())
}

func (i *serviceRedisUserConfigPtrType) ToServiceRedisUserConfigPtrOutputWithContext(ctx context.Context) ServiceRedisUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRedisUserConfigPtrOutput)
}

type ServiceRedisUserConfigOutput struct{ *pulumi.OutputState }

func (ServiceRedisUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRedisUserConfig)(nil)).Elem()
}

func (o ServiceRedisUserConfigOutput) ToServiceRedisUserConfigOutput() ServiceRedisUserConfigOutput {
	return o
}

func (o ServiceRedisUserConfigOutput) ToServiceRedisUserConfigOutputWithContext(ctx context.Context) ServiceRedisUserConfigOutput {
	return o
}

func (o ServiceRedisUserConfigOutput) ToServiceRedisUserConfigPtrOutput() ServiceRedisUserConfigPtrOutput {
	return o.ToServiceRedisUserConfigPtrOutputWithContext(context.Background())
}

func (o ServiceRedisUserConfigOutput) ToServiceRedisUserConfigPtrOutputWithContext(ctx context.Context) ServiceRedisUserConfigPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfig) *ServiceRedisUserConfig {
		return &v
	}).(ServiceRedisUserConfigPtrOutput)
}
func (o ServiceRedisUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceRedisUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

func (o ServiceRedisUserConfigOutput) Migration() ServiceRedisUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfig) *ServiceRedisUserConfigMigration { return v.Migration }).(ServiceRedisUserConfigMigrationPtrOutput)
}

func (o ServiceRedisUserConfigOutput) PrivateAccess() ServiceRedisUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfig) *ServiceRedisUserConfigPrivateAccess { return v.PrivateAccess }).(ServiceRedisUserConfigPrivateAccessPtrOutput)
}

func (o ServiceRedisUserConfigOutput) PrivatelinkAccess() ServiceRedisUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfig) *ServiceRedisUserConfigPrivatelinkAccess { return v.PrivatelinkAccess }).(ServiceRedisUserConfigPrivatelinkAccessPtrOutput)
}

func (o ServiceRedisUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigOutput) PublicAccess() ServiceRedisUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfig) *ServiceRedisUserConfigPublicAccess { return v.PublicAccess }).(ServiceRedisUserConfigPublicAccessPtrOutput)
}

func (o ServiceRedisUserConfigOutput) RecoveryBasebackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfig) *string { return v.RecoveryBasebackupName }).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigOutput) RedisIoThreads() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfig) *string { return v.RedisIoThreads }).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigOutput) RedisLfuDecayTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfig) *string { return v.RedisLfuDecayTime }).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigOutput) RedisLfuLogFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfig) *string { return v.RedisLfuLogFactor }).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigOutput) RedisMaxmemoryPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfig) *string { return v.RedisMaxmemoryPolicy }).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigOutput) RedisNotifyKeyspaceEvents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfig) *string { return v.RedisNotifyKeyspaceEvents }).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigOutput) RedisSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfig) *string { return v.RedisSsl }).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigOutput) RedisTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfig) *string { return v.RedisTimeout }).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

type ServiceRedisUserConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceRedisUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceRedisUserConfig)(nil)).Elem()
}

func (o ServiceRedisUserConfigPtrOutput) ToServiceRedisUserConfigPtrOutput() ServiceRedisUserConfigPtrOutput {
	return o
}

func (o ServiceRedisUserConfigPtrOutput) ToServiceRedisUserConfigPtrOutputWithContext(ctx context.Context) ServiceRedisUserConfigPtrOutput {
	return o
}

func (o ServiceRedisUserConfigPtrOutput) Elem() ServiceRedisUserConfigOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfig) ServiceRedisUserConfig { return *v }).(ServiceRedisUserConfigOutput)
}

func (o ServiceRedisUserConfigPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfig) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

func (o ServiceRedisUserConfigPtrOutput) Migration() ServiceRedisUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfig) *ServiceRedisUserConfigMigration {
		if v == nil {
			return nil
		}
		return v.Migration
	}).(ServiceRedisUserConfigMigrationPtrOutput)
}

func (o ServiceRedisUserConfigPtrOutput) PrivateAccess() ServiceRedisUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfig) *ServiceRedisUserConfigPrivateAccess {
		if v == nil {
			return nil
		}
		return v.PrivateAccess
	}).(ServiceRedisUserConfigPrivateAccessPtrOutput)
}

func (o ServiceRedisUserConfigPtrOutput) PrivatelinkAccess() ServiceRedisUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfig) *ServiceRedisUserConfigPrivatelinkAccess {
		if v == nil {
			return nil
		}
		return v.PrivatelinkAccess
	}).(ServiceRedisUserConfigPrivatelinkAccessPtrOutput)
}

func (o ServiceRedisUserConfigPtrOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProjectToForkFrom
	}).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigPtrOutput) PublicAccess() ServiceRedisUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfig) *ServiceRedisUserConfigPublicAccess {
		if v == nil {
			return nil
		}
		return v.PublicAccess
	}).(ServiceRedisUserConfigPublicAccessPtrOutput)
}

func (o ServiceRedisUserConfigPtrOutput) RecoveryBasebackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryBasebackupName
	}).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigPtrOutput) RedisIoThreads() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RedisIoThreads
	}).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigPtrOutput) RedisLfuDecayTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RedisLfuDecayTime
	}).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigPtrOutput) RedisLfuLogFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RedisLfuLogFactor
	}).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigPtrOutput) RedisMaxmemoryPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RedisMaxmemoryPolicy
	}).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigPtrOutput) RedisNotifyKeyspaceEvents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RedisNotifyKeyspaceEvents
	}).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigPtrOutput) RedisSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RedisSsl
	}).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigPtrOutput) RedisTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.RedisTimeout
	}).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigPtrOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceToForkFrom
	}).(pulumi.StringPtrOutput)
}

type ServiceRedisUserConfigMigration struct {
	Dbname    *string `pulumi:"dbname"`
	Host      *string `pulumi:"host"`
	IgnoreDbs *string `pulumi:"ignoreDbs"`
	Password  *string `pulumi:"password"`
	Port      *string `pulumi:"port"`
	Ssl       *string `pulumi:"ssl"`
	Username  *string `pulumi:"username"`
}

// ServiceRedisUserConfigMigrationInput is an input type that accepts ServiceRedisUserConfigMigrationArgs and ServiceRedisUserConfigMigrationOutput values.
// You can construct a concrete instance of `ServiceRedisUserConfigMigrationInput` via:
//
//          ServiceRedisUserConfigMigrationArgs{...}
type ServiceRedisUserConfigMigrationInput interface {
	pulumi.Input

	ToServiceRedisUserConfigMigrationOutput() ServiceRedisUserConfigMigrationOutput
	ToServiceRedisUserConfigMigrationOutputWithContext(context.Context) ServiceRedisUserConfigMigrationOutput
}

type ServiceRedisUserConfigMigrationArgs struct {
	Dbname    pulumi.StringPtrInput `pulumi:"dbname"`
	Host      pulumi.StringPtrInput `pulumi:"host"`
	IgnoreDbs pulumi.StringPtrInput `pulumi:"ignoreDbs"`
	Password  pulumi.StringPtrInput `pulumi:"password"`
	Port      pulumi.StringPtrInput `pulumi:"port"`
	Ssl       pulumi.StringPtrInput `pulumi:"ssl"`
	Username  pulumi.StringPtrInput `pulumi:"username"`
}

func (ServiceRedisUserConfigMigrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRedisUserConfigMigration)(nil)).Elem()
}

func (i ServiceRedisUserConfigMigrationArgs) ToServiceRedisUserConfigMigrationOutput() ServiceRedisUserConfigMigrationOutput {
	return i.ToServiceRedisUserConfigMigrationOutputWithContext(context.Background())
}

func (i ServiceRedisUserConfigMigrationArgs) ToServiceRedisUserConfigMigrationOutputWithContext(ctx context.Context) ServiceRedisUserConfigMigrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRedisUserConfigMigrationOutput)
}

func (i ServiceRedisUserConfigMigrationArgs) ToServiceRedisUserConfigMigrationPtrOutput() ServiceRedisUserConfigMigrationPtrOutput {
	return i.ToServiceRedisUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (i ServiceRedisUserConfigMigrationArgs) ToServiceRedisUserConfigMigrationPtrOutputWithContext(ctx context.Context) ServiceRedisUserConfigMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRedisUserConfigMigrationOutput).ToServiceRedisUserConfigMigrationPtrOutputWithContext(ctx)
}

// ServiceRedisUserConfigMigrationPtrInput is an input type that accepts ServiceRedisUserConfigMigrationArgs, ServiceRedisUserConfigMigrationPtr and ServiceRedisUserConfigMigrationPtrOutput values.
// You can construct a concrete instance of `ServiceRedisUserConfigMigrationPtrInput` via:
//
//          ServiceRedisUserConfigMigrationArgs{...}
//
//  or:
//
//          nil
type ServiceRedisUserConfigMigrationPtrInput interface {
	pulumi.Input

	ToServiceRedisUserConfigMigrationPtrOutput() ServiceRedisUserConfigMigrationPtrOutput
	ToServiceRedisUserConfigMigrationPtrOutputWithContext(context.Context) ServiceRedisUserConfigMigrationPtrOutput
}

type serviceRedisUserConfigMigrationPtrType ServiceRedisUserConfigMigrationArgs

func ServiceRedisUserConfigMigrationPtr(v *ServiceRedisUserConfigMigrationArgs) ServiceRedisUserConfigMigrationPtrInput {
	return (*serviceRedisUserConfigMigrationPtrType)(v)
}

func (*serviceRedisUserConfigMigrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceRedisUserConfigMigration)(nil)).Elem()
}

func (i *serviceRedisUserConfigMigrationPtrType) ToServiceRedisUserConfigMigrationPtrOutput() ServiceRedisUserConfigMigrationPtrOutput {
	return i.ToServiceRedisUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (i *serviceRedisUserConfigMigrationPtrType) ToServiceRedisUserConfigMigrationPtrOutputWithContext(ctx context.Context) ServiceRedisUserConfigMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRedisUserConfigMigrationPtrOutput)
}

type ServiceRedisUserConfigMigrationOutput struct{ *pulumi.OutputState }

func (ServiceRedisUserConfigMigrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRedisUserConfigMigration)(nil)).Elem()
}

func (o ServiceRedisUserConfigMigrationOutput) ToServiceRedisUserConfigMigrationOutput() ServiceRedisUserConfigMigrationOutput {
	return o
}

func (o ServiceRedisUserConfigMigrationOutput) ToServiceRedisUserConfigMigrationOutputWithContext(ctx context.Context) ServiceRedisUserConfigMigrationOutput {
	return o
}

func (o ServiceRedisUserConfigMigrationOutput) ToServiceRedisUserConfigMigrationPtrOutput() ServiceRedisUserConfigMigrationPtrOutput {
	return o.ToServiceRedisUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (o ServiceRedisUserConfigMigrationOutput) ToServiceRedisUserConfigMigrationPtrOutputWithContext(ctx context.Context) ServiceRedisUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfigMigration) *ServiceRedisUserConfigMigration {
		return &v
	}).(ServiceRedisUserConfigMigrationPtrOutput)
}
func (o ServiceRedisUserConfigMigrationOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfigMigration) *string { return v.Dbname }).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigMigrationOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfigMigration) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigMigrationOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfigMigration) *string { return v.IgnoreDbs }).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigMigrationOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfigMigration) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigMigrationOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfigMigration) *string { return v.Port }).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigMigrationOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfigMigration) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigMigrationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfigMigration) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ServiceRedisUserConfigMigrationPtrOutput struct{ *pulumi.OutputState }

func (ServiceRedisUserConfigMigrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceRedisUserConfigMigration)(nil)).Elem()
}

func (o ServiceRedisUserConfigMigrationPtrOutput) ToServiceRedisUserConfigMigrationPtrOutput() ServiceRedisUserConfigMigrationPtrOutput {
	return o
}

func (o ServiceRedisUserConfigMigrationPtrOutput) ToServiceRedisUserConfigMigrationPtrOutputWithContext(ctx context.Context) ServiceRedisUserConfigMigrationPtrOutput {
	return o
}

func (o ServiceRedisUserConfigMigrationPtrOutput) Elem() ServiceRedisUserConfigMigrationOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfigMigration) ServiceRedisUserConfigMigration { return *v }).(ServiceRedisUserConfigMigrationOutput)
}

func (o ServiceRedisUserConfigMigrationPtrOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Dbname
	}).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigMigrationPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigMigrationPtrOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.IgnoreDbs
	}).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigMigrationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigMigrationPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigMigrationPtrOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Ssl
	}).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigMigrationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ServiceRedisUserConfigPrivateAccess struct {
	Prometheus *string `pulumi:"prometheus"`
	Redis      *string `pulumi:"redis"`
}

// ServiceRedisUserConfigPrivateAccessInput is an input type that accepts ServiceRedisUserConfigPrivateAccessArgs and ServiceRedisUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `ServiceRedisUserConfigPrivateAccessInput` via:
//
//          ServiceRedisUserConfigPrivateAccessArgs{...}
type ServiceRedisUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToServiceRedisUserConfigPrivateAccessOutput() ServiceRedisUserConfigPrivateAccessOutput
	ToServiceRedisUserConfigPrivateAccessOutputWithContext(context.Context) ServiceRedisUserConfigPrivateAccessOutput
}

type ServiceRedisUserConfigPrivateAccessArgs struct {
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
	Redis      pulumi.StringPtrInput `pulumi:"redis"`
}

func (ServiceRedisUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRedisUserConfigPrivateAccess)(nil)).Elem()
}

func (i ServiceRedisUserConfigPrivateAccessArgs) ToServiceRedisUserConfigPrivateAccessOutput() ServiceRedisUserConfigPrivateAccessOutput {
	return i.ToServiceRedisUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i ServiceRedisUserConfigPrivateAccessArgs) ToServiceRedisUserConfigPrivateAccessOutputWithContext(ctx context.Context) ServiceRedisUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRedisUserConfigPrivateAccessOutput)
}

func (i ServiceRedisUserConfigPrivateAccessArgs) ToServiceRedisUserConfigPrivateAccessPtrOutput() ServiceRedisUserConfigPrivateAccessPtrOutput {
	return i.ToServiceRedisUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i ServiceRedisUserConfigPrivateAccessArgs) ToServiceRedisUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceRedisUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRedisUserConfigPrivateAccessOutput).ToServiceRedisUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// ServiceRedisUserConfigPrivateAccessPtrInput is an input type that accepts ServiceRedisUserConfigPrivateAccessArgs, ServiceRedisUserConfigPrivateAccessPtr and ServiceRedisUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `ServiceRedisUserConfigPrivateAccessPtrInput` via:
//
//          ServiceRedisUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type ServiceRedisUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToServiceRedisUserConfigPrivateAccessPtrOutput() ServiceRedisUserConfigPrivateAccessPtrOutput
	ToServiceRedisUserConfigPrivateAccessPtrOutputWithContext(context.Context) ServiceRedisUserConfigPrivateAccessPtrOutput
}

type serviceRedisUserConfigPrivateAccessPtrType ServiceRedisUserConfigPrivateAccessArgs

func ServiceRedisUserConfigPrivateAccessPtr(v *ServiceRedisUserConfigPrivateAccessArgs) ServiceRedisUserConfigPrivateAccessPtrInput {
	return (*serviceRedisUserConfigPrivateAccessPtrType)(v)
}

func (*serviceRedisUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceRedisUserConfigPrivateAccess)(nil)).Elem()
}

func (i *serviceRedisUserConfigPrivateAccessPtrType) ToServiceRedisUserConfigPrivateAccessPtrOutput() ServiceRedisUserConfigPrivateAccessPtrOutput {
	return i.ToServiceRedisUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *serviceRedisUserConfigPrivateAccessPtrType) ToServiceRedisUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceRedisUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRedisUserConfigPrivateAccessPtrOutput)
}

type ServiceRedisUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (ServiceRedisUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRedisUserConfigPrivateAccess)(nil)).Elem()
}

func (o ServiceRedisUserConfigPrivateAccessOutput) ToServiceRedisUserConfigPrivateAccessOutput() ServiceRedisUserConfigPrivateAccessOutput {
	return o
}

func (o ServiceRedisUserConfigPrivateAccessOutput) ToServiceRedisUserConfigPrivateAccessOutputWithContext(ctx context.Context) ServiceRedisUserConfigPrivateAccessOutput {
	return o
}

func (o ServiceRedisUserConfigPrivateAccessOutput) ToServiceRedisUserConfigPrivateAccessPtrOutput() ServiceRedisUserConfigPrivateAccessPtrOutput {
	return o.ToServiceRedisUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o ServiceRedisUserConfigPrivateAccessOutput) ToServiceRedisUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceRedisUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfigPrivateAccess) *ServiceRedisUserConfigPrivateAccess {
		return &v
	}).(ServiceRedisUserConfigPrivateAccessPtrOutput)
}
func (o ServiceRedisUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigPrivateAccessOutput) Redis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfigPrivateAccess) *string { return v.Redis }).(pulumi.StringPtrOutput)
}

type ServiceRedisUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (ServiceRedisUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceRedisUserConfigPrivateAccess)(nil)).Elem()
}

func (o ServiceRedisUserConfigPrivateAccessPtrOutput) ToServiceRedisUserConfigPrivateAccessPtrOutput() ServiceRedisUserConfigPrivateAccessPtrOutput {
	return o
}

func (o ServiceRedisUserConfigPrivateAccessPtrOutput) ToServiceRedisUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) ServiceRedisUserConfigPrivateAccessPtrOutput {
	return o
}

func (o ServiceRedisUserConfigPrivateAccessPtrOutput) Elem() ServiceRedisUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfigPrivateAccess) ServiceRedisUserConfigPrivateAccess { return *v }).(ServiceRedisUserConfigPrivateAccessOutput)
}

func (o ServiceRedisUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigPrivateAccessPtrOutput) Redis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Redis
	}).(pulumi.StringPtrOutput)
}

type ServiceRedisUserConfigPrivatelinkAccess struct {
	Redis *string `pulumi:"redis"`
}

// ServiceRedisUserConfigPrivatelinkAccessInput is an input type that accepts ServiceRedisUserConfigPrivatelinkAccessArgs and ServiceRedisUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `ServiceRedisUserConfigPrivatelinkAccessInput` via:
//
//          ServiceRedisUserConfigPrivatelinkAccessArgs{...}
type ServiceRedisUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToServiceRedisUserConfigPrivatelinkAccessOutput() ServiceRedisUserConfigPrivatelinkAccessOutput
	ToServiceRedisUserConfigPrivatelinkAccessOutputWithContext(context.Context) ServiceRedisUserConfigPrivatelinkAccessOutput
}

type ServiceRedisUserConfigPrivatelinkAccessArgs struct {
	Redis pulumi.StringPtrInput `pulumi:"redis"`
}

func (ServiceRedisUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRedisUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i ServiceRedisUserConfigPrivatelinkAccessArgs) ToServiceRedisUserConfigPrivatelinkAccessOutput() ServiceRedisUserConfigPrivatelinkAccessOutput {
	return i.ToServiceRedisUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i ServiceRedisUserConfigPrivatelinkAccessArgs) ToServiceRedisUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) ServiceRedisUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRedisUserConfigPrivatelinkAccessOutput)
}

func (i ServiceRedisUserConfigPrivatelinkAccessArgs) ToServiceRedisUserConfigPrivatelinkAccessPtrOutput() ServiceRedisUserConfigPrivatelinkAccessPtrOutput {
	return i.ToServiceRedisUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i ServiceRedisUserConfigPrivatelinkAccessArgs) ToServiceRedisUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceRedisUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRedisUserConfigPrivatelinkAccessOutput).ToServiceRedisUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// ServiceRedisUserConfigPrivatelinkAccessPtrInput is an input type that accepts ServiceRedisUserConfigPrivatelinkAccessArgs, ServiceRedisUserConfigPrivatelinkAccessPtr and ServiceRedisUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `ServiceRedisUserConfigPrivatelinkAccessPtrInput` via:
//
//          ServiceRedisUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type ServiceRedisUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToServiceRedisUserConfigPrivatelinkAccessPtrOutput() ServiceRedisUserConfigPrivatelinkAccessPtrOutput
	ToServiceRedisUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) ServiceRedisUserConfigPrivatelinkAccessPtrOutput
}

type serviceRedisUserConfigPrivatelinkAccessPtrType ServiceRedisUserConfigPrivatelinkAccessArgs

func ServiceRedisUserConfigPrivatelinkAccessPtr(v *ServiceRedisUserConfigPrivatelinkAccessArgs) ServiceRedisUserConfigPrivatelinkAccessPtrInput {
	return (*serviceRedisUserConfigPrivatelinkAccessPtrType)(v)
}

func (*serviceRedisUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceRedisUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *serviceRedisUserConfigPrivatelinkAccessPtrType) ToServiceRedisUserConfigPrivatelinkAccessPtrOutput() ServiceRedisUserConfigPrivatelinkAccessPtrOutput {
	return i.ToServiceRedisUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *serviceRedisUserConfigPrivatelinkAccessPtrType) ToServiceRedisUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceRedisUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRedisUserConfigPrivatelinkAccessPtrOutput)
}

type ServiceRedisUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (ServiceRedisUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRedisUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o ServiceRedisUserConfigPrivatelinkAccessOutput) ToServiceRedisUserConfigPrivatelinkAccessOutput() ServiceRedisUserConfigPrivatelinkAccessOutput {
	return o
}

func (o ServiceRedisUserConfigPrivatelinkAccessOutput) ToServiceRedisUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) ServiceRedisUserConfigPrivatelinkAccessOutput {
	return o
}

func (o ServiceRedisUserConfigPrivatelinkAccessOutput) ToServiceRedisUserConfigPrivatelinkAccessPtrOutput() ServiceRedisUserConfigPrivatelinkAccessPtrOutput {
	return o.ToServiceRedisUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o ServiceRedisUserConfigPrivatelinkAccessOutput) ToServiceRedisUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceRedisUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfigPrivatelinkAccess) *ServiceRedisUserConfigPrivatelinkAccess {
		return &v
	}).(ServiceRedisUserConfigPrivatelinkAccessPtrOutput)
}
func (o ServiceRedisUserConfigPrivatelinkAccessOutput) Redis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfigPrivatelinkAccess) *string { return v.Redis }).(pulumi.StringPtrOutput)
}

type ServiceRedisUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (ServiceRedisUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceRedisUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o ServiceRedisUserConfigPrivatelinkAccessPtrOutput) ToServiceRedisUserConfigPrivatelinkAccessPtrOutput() ServiceRedisUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o ServiceRedisUserConfigPrivatelinkAccessPtrOutput) ToServiceRedisUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) ServiceRedisUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o ServiceRedisUserConfigPrivatelinkAccessPtrOutput) Elem() ServiceRedisUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfigPrivatelinkAccess) ServiceRedisUserConfigPrivatelinkAccess { return *v }).(ServiceRedisUserConfigPrivatelinkAccessOutput)
}

func (o ServiceRedisUserConfigPrivatelinkAccessPtrOutput) Redis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Redis
	}).(pulumi.StringPtrOutput)
}

type ServiceRedisUserConfigPublicAccess struct {
	Prometheus *string `pulumi:"prometheus"`
	Redis      *string `pulumi:"redis"`
}

// ServiceRedisUserConfigPublicAccessInput is an input type that accepts ServiceRedisUserConfigPublicAccessArgs and ServiceRedisUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `ServiceRedisUserConfigPublicAccessInput` via:
//
//          ServiceRedisUserConfigPublicAccessArgs{...}
type ServiceRedisUserConfigPublicAccessInput interface {
	pulumi.Input

	ToServiceRedisUserConfigPublicAccessOutput() ServiceRedisUserConfigPublicAccessOutput
	ToServiceRedisUserConfigPublicAccessOutputWithContext(context.Context) ServiceRedisUserConfigPublicAccessOutput
}

type ServiceRedisUserConfigPublicAccessArgs struct {
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
	Redis      pulumi.StringPtrInput `pulumi:"redis"`
}

func (ServiceRedisUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRedisUserConfigPublicAccess)(nil)).Elem()
}

func (i ServiceRedisUserConfigPublicAccessArgs) ToServiceRedisUserConfigPublicAccessOutput() ServiceRedisUserConfigPublicAccessOutput {
	return i.ToServiceRedisUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i ServiceRedisUserConfigPublicAccessArgs) ToServiceRedisUserConfigPublicAccessOutputWithContext(ctx context.Context) ServiceRedisUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRedisUserConfigPublicAccessOutput)
}

func (i ServiceRedisUserConfigPublicAccessArgs) ToServiceRedisUserConfigPublicAccessPtrOutput() ServiceRedisUserConfigPublicAccessPtrOutput {
	return i.ToServiceRedisUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i ServiceRedisUserConfigPublicAccessArgs) ToServiceRedisUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceRedisUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRedisUserConfigPublicAccessOutput).ToServiceRedisUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// ServiceRedisUserConfigPublicAccessPtrInput is an input type that accepts ServiceRedisUserConfigPublicAccessArgs, ServiceRedisUserConfigPublicAccessPtr and ServiceRedisUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `ServiceRedisUserConfigPublicAccessPtrInput` via:
//
//          ServiceRedisUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type ServiceRedisUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToServiceRedisUserConfigPublicAccessPtrOutput() ServiceRedisUserConfigPublicAccessPtrOutput
	ToServiceRedisUserConfigPublicAccessPtrOutputWithContext(context.Context) ServiceRedisUserConfigPublicAccessPtrOutput
}

type serviceRedisUserConfigPublicAccessPtrType ServiceRedisUserConfigPublicAccessArgs

func ServiceRedisUserConfigPublicAccessPtr(v *ServiceRedisUserConfigPublicAccessArgs) ServiceRedisUserConfigPublicAccessPtrInput {
	return (*serviceRedisUserConfigPublicAccessPtrType)(v)
}

func (*serviceRedisUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceRedisUserConfigPublicAccess)(nil)).Elem()
}

func (i *serviceRedisUserConfigPublicAccessPtrType) ToServiceRedisUserConfigPublicAccessPtrOutput() ServiceRedisUserConfigPublicAccessPtrOutput {
	return i.ToServiceRedisUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *serviceRedisUserConfigPublicAccessPtrType) ToServiceRedisUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceRedisUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRedisUserConfigPublicAccessPtrOutput)
}

type ServiceRedisUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (ServiceRedisUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRedisUserConfigPublicAccess)(nil)).Elem()
}

func (o ServiceRedisUserConfigPublicAccessOutput) ToServiceRedisUserConfigPublicAccessOutput() ServiceRedisUserConfigPublicAccessOutput {
	return o
}

func (o ServiceRedisUserConfigPublicAccessOutput) ToServiceRedisUserConfigPublicAccessOutputWithContext(ctx context.Context) ServiceRedisUserConfigPublicAccessOutput {
	return o
}

func (o ServiceRedisUserConfigPublicAccessOutput) ToServiceRedisUserConfigPublicAccessPtrOutput() ServiceRedisUserConfigPublicAccessPtrOutput {
	return o.ToServiceRedisUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o ServiceRedisUserConfigPublicAccessOutput) ToServiceRedisUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceRedisUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfigPublicAccess) *ServiceRedisUserConfigPublicAccess {
		return &v
	}).(ServiceRedisUserConfigPublicAccessPtrOutput)
}
func (o ServiceRedisUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigPublicAccessOutput) Redis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRedisUserConfigPublicAccess) *string { return v.Redis }).(pulumi.StringPtrOutput)
}

type ServiceRedisUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (ServiceRedisUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceRedisUserConfigPublicAccess)(nil)).Elem()
}

func (o ServiceRedisUserConfigPublicAccessPtrOutput) ToServiceRedisUserConfigPublicAccessPtrOutput() ServiceRedisUserConfigPublicAccessPtrOutput {
	return o
}

func (o ServiceRedisUserConfigPublicAccessPtrOutput) ToServiceRedisUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) ServiceRedisUserConfigPublicAccessPtrOutput {
	return o
}

func (o ServiceRedisUserConfigPublicAccessPtrOutput) Elem() ServiceRedisUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfigPublicAccess) ServiceRedisUserConfigPublicAccess { return *v }).(ServiceRedisUserConfigPublicAccessOutput)
}

func (o ServiceRedisUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

func (o ServiceRedisUserConfigPublicAccessPtrOutput) Redis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceRedisUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Redis
	}).(pulumi.StringPtrOutput)
}

type ServiceServiceIntegration struct {
	IntegrationType   string `pulumi:"integrationType"`
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// ServiceServiceIntegrationInput is an input type that accepts ServiceServiceIntegrationArgs and ServiceServiceIntegrationOutput values.
// You can construct a concrete instance of `ServiceServiceIntegrationInput` via:
//
//          ServiceServiceIntegrationArgs{...}
type ServiceServiceIntegrationInput interface {
	pulumi.Input

	ToServiceServiceIntegrationOutput() ServiceServiceIntegrationOutput
	ToServiceServiceIntegrationOutputWithContext(context.Context) ServiceServiceIntegrationOutput
}

type ServiceServiceIntegrationArgs struct {
	IntegrationType   pulumi.StringInput `pulumi:"integrationType"`
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (ServiceServiceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceServiceIntegration)(nil)).Elem()
}

func (i ServiceServiceIntegrationArgs) ToServiceServiceIntegrationOutput() ServiceServiceIntegrationOutput {
	return i.ToServiceServiceIntegrationOutputWithContext(context.Background())
}

func (i ServiceServiceIntegrationArgs) ToServiceServiceIntegrationOutputWithContext(ctx context.Context) ServiceServiceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceServiceIntegrationOutput)
}

// ServiceServiceIntegrationArrayInput is an input type that accepts ServiceServiceIntegrationArray and ServiceServiceIntegrationArrayOutput values.
// You can construct a concrete instance of `ServiceServiceIntegrationArrayInput` via:
//
//          ServiceServiceIntegrationArray{ ServiceServiceIntegrationArgs{...} }
type ServiceServiceIntegrationArrayInput interface {
	pulumi.Input

	ToServiceServiceIntegrationArrayOutput() ServiceServiceIntegrationArrayOutput
	ToServiceServiceIntegrationArrayOutputWithContext(context.Context) ServiceServiceIntegrationArrayOutput
}

type ServiceServiceIntegrationArray []ServiceServiceIntegrationInput

func (ServiceServiceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceServiceIntegration)(nil)).Elem()
}

func (i ServiceServiceIntegrationArray) ToServiceServiceIntegrationArrayOutput() ServiceServiceIntegrationArrayOutput {
	return i.ToServiceServiceIntegrationArrayOutputWithContext(context.Background())
}

func (i ServiceServiceIntegrationArray) ToServiceServiceIntegrationArrayOutputWithContext(ctx context.Context) ServiceServiceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceServiceIntegrationArrayOutput)
}

type ServiceServiceIntegrationOutput struct{ *pulumi.OutputState }

func (ServiceServiceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceServiceIntegration)(nil)).Elem()
}

func (o ServiceServiceIntegrationOutput) ToServiceServiceIntegrationOutput() ServiceServiceIntegrationOutput {
	return o
}

func (o ServiceServiceIntegrationOutput) ToServiceServiceIntegrationOutputWithContext(ctx context.Context) ServiceServiceIntegrationOutput {
	return o
}

func (o ServiceServiceIntegrationOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceServiceIntegration) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o ServiceServiceIntegrationOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceServiceIntegration) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

type ServiceServiceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (ServiceServiceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceServiceIntegration)(nil)).Elem()
}

func (o ServiceServiceIntegrationArrayOutput) ToServiceServiceIntegrationArrayOutput() ServiceServiceIntegrationArrayOutput {
	return o
}

func (o ServiceServiceIntegrationArrayOutput) ToServiceServiceIntegrationArrayOutputWithContext(ctx context.Context) ServiceServiceIntegrationArrayOutput {
	return o
}

func (o ServiceServiceIntegrationArrayOutput) Index(i pulumi.IntInput) ServiceServiceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceServiceIntegration {
		return vs[0].([]ServiceServiceIntegration)[vs[1].(int)]
	}).(ServiceServiceIntegrationOutput)
}

type GetCassandaCassandra struct {
}

// GetCassandaCassandraInput is an input type that accepts GetCassandaCassandraArgs and GetCassandaCassandraOutput values.
// You can construct a concrete instance of `GetCassandaCassandraInput` via:
//
//          GetCassandaCassandraArgs{...}
type GetCassandaCassandraInput interface {
	pulumi.Input

	ToGetCassandaCassandraOutput() GetCassandaCassandraOutput
	ToGetCassandaCassandraOutputWithContext(context.Context) GetCassandaCassandraOutput
}

type GetCassandaCassandraArgs struct {
}

func (GetCassandaCassandraArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandaCassandra)(nil)).Elem()
}

func (i GetCassandaCassandraArgs) ToGetCassandaCassandraOutput() GetCassandaCassandraOutput {
	return i.ToGetCassandaCassandraOutputWithContext(context.Background())
}

func (i GetCassandaCassandraArgs) ToGetCassandaCassandraOutputWithContext(ctx context.Context) GetCassandaCassandraOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandaCassandraOutput)
}

type GetCassandaCassandraOutput struct{ *pulumi.OutputState }

func (GetCassandaCassandraOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandaCassandra)(nil)).Elem()
}

func (o GetCassandaCassandraOutput) ToGetCassandaCassandraOutput() GetCassandaCassandraOutput {
	return o
}

func (o GetCassandaCassandraOutput) ToGetCassandaCassandraOutputWithContext(ctx context.Context) GetCassandaCassandraOutput {
	return o
}

type GetCassandaCassandraUserConfig struct {
	// Cassandra specific server provided values.
	Cassandra *GetCassandaCassandraUserConfigCassandra `pulumi:"cassandra"`
	// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters []string `pulumi:"ipFilters"`
	// sets the service into migration mode enabling the sstableloader
	// utility to be used to upload Cassandra data files. Available only on service create.
	MigrateSstableloader *string `pulumi:"migrateSstableloader"`
	// Allow access to selected service ports from private networks.
	PrivateAccess     *GetCassandaCassandraUserConfigPrivateAccess `pulumi:"privateAccess"`
	ProjectToForkFrom *string                                      `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet
	PublicAccess *GetCassandaCassandraUserConfigPublicAccess `pulumi:"publicAccess"`
	// Name of another service to fork from. This has effect only
	// when a new service is being created.
	ServiceToForkFrom *string `pulumi:"serviceToForkFrom"`
}

// GetCassandaCassandraUserConfigInput is an input type that accepts GetCassandaCassandraUserConfigArgs and GetCassandaCassandraUserConfigOutput values.
// You can construct a concrete instance of `GetCassandaCassandraUserConfigInput` via:
//
//          GetCassandaCassandraUserConfigArgs{...}
type GetCassandaCassandraUserConfigInput interface {
	pulumi.Input

	ToGetCassandaCassandraUserConfigOutput() GetCassandaCassandraUserConfigOutput
	ToGetCassandaCassandraUserConfigOutputWithContext(context.Context) GetCassandaCassandraUserConfigOutput
}

type GetCassandaCassandraUserConfigArgs struct {
	// Cassandra specific server provided values.
	Cassandra GetCassandaCassandraUserConfigCassandraPtrInput `pulumi:"cassandra"`
	// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// sets the service into migration mode enabling the sstableloader
	// utility to be used to upload Cassandra data files. Available only on service create.
	MigrateSstableloader pulumi.StringPtrInput `pulumi:"migrateSstableloader"`
	// Allow access to selected service ports from private networks.
	PrivateAccess     GetCassandaCassandraUserConfigPrivateAccessPtrInput `pulumi:"privateAccess"`
	ProjectToForkFrom pulumi.StringPtrInput                               `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet
	PublicAccess GetCassandaCassandraUserConfigPublicAccessPtrInput `pulumi:"publicAccess"`
	// Name of another service to fork from. This has effect only
	// when a new service is being created.
	ServiceToForkFrom pulumi.StringPtrInput `pulumi:"serviceToForkFrom"`
}

func (GetCassandaCassandraUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandaCassandraUserConfig)(nil)).Elem()
}

func (i GetCassandaCassandraUserConfigArgs) ToGetCassandaCassandraUserConfigOutput() GetCassandaCassandraUserConfigOutput {
	return i.ToGetCassandaCassandraUserConfigOutputWithContext(context.Background())
}

func (i GetCassandaCassandraUserConfigArgs) ToGetCassandaCassandraUserConfigOutputWithContext(ctx context.Context) GetCassandaCassandraUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandaCassandraUserConfigOutput)
}

type GetCassandaCassandraUserConfigOutput struct{ *pulumi.OutputState }

func (GetCassandaCassandraUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandaCassandraUserConfig)(nil)).Elem()
}

func (o GetCassandaCassandraUserConfigOutput) ToGetCassandaCassandraUserConfigOutput() GetCassandaCassandraUserConfigOutput {
	return o
}

func (o GetCassandaCassandraUserConfigOutput) ToGetCassandaCassandraUserConfigOutputWithContext(ctx context.Context) GetCassandaCassandraUserConfigOutput {
	return o
}

// Cassandra specific server provided values.
func (o GetCassandaCassandraUserConfigOutput) Cassandra() GetCassandaCassandraUserConfigCassandraPtrOutput {
	return o.ApplyT(func(v GetCassandaCassandraUserConfig) *GetCassandaCassandraUserConfigCassandra { return v.Cassandra }).(GetCassandaCassandraUserConfigCassandraPtrOutput)
}

// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
func (o GetCassandaCassandraUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCassandaCassandraUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// sets the service into migration mode enabling the sstableloader
// utility to be used to upload Cassandra data files. Available only on service create.
func (o GetCassandaCassandraUserConfigOutput) MigrateSstableloader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCassandaCassandraUserConfig) *string { return v.MigrateSstableloader }).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from private networks.
func (o GetCassandaCassandraUserConfigOutput) PrivateAccess() GetCassandaCassandraUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetCassandaCassandraUserConfig) *GetCassandaCassandraUserConfigPrivateAccess {
		return v.PrivateAccess
	}).(GetCassandaCassandraUserConfigPrivateAccessPtrOutput)
}

func (o GetCassandaCassandraUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCassandaCassandraUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from the public Internet
func (o GetCassandaCassandraUserConfigOutput) PublicAccess() GetCassandaCassandraUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetCassandaCassandraUserConfig) *GetCassandaCassandraUserConfigPublicAccess {
		return v.PublicAccess
	}).(GetCassandaCassandraUserConfigPublicAccessPtrOutput)
}

// Name of another service to fork from. This has effect only
// when a new service is being created.
func (o GetCassandaCassandraUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCassandaCassandraUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

type GetCassandaCassandraUserConfigCassandra struct {
	// Fail any multiple-partition batch exceeding this value.
	// 50kb (10x warn threshold) by default.
	BatchSizeFailThresholdInKb *string `pulumi:"batchSizeFailThresholdInKb"`
	// Log a warning message on any multiple-partition
	// batch size exceeding this value.5kb per batch by default.Caution should be taken on increasing
	// the size of this thresholdas it can lead to node instability.
	BatchSizeWarnThresholdInKb *string `pulumi:"batchSizeWarnThresholdInKb"`
}

// GetCassandaCassandraUserConfigCassandraInput is an input type that accepts GetCassandaCassandraUserConfigCassandraArgs and GetCassandaCassandraUserConfigCassandraOutput values.
// You can construct a concrete instance of `GetCassandaCassandraUserConfigCassandraInput` via:
//
//          GetCassandaCassandraUserConfigCassandraArgs{...}
type GetCassandaCassandraUserConfigCassandraInput interface {
	pulumi.Input

	ToGetCassandaCassandraUserConfigCassandraOutput() GetCassandaCassandraUserConfigCassandraOutput
	ToGetCassandaCassandraUserConfigCassandraOutputWithContext(context.Context) GetCassandaCassandraUserConfigCassandraOutput
}

type GetCassandaCassandraUserConfigCassandraArgs struct {
	// Fail any multiple-partition batch exceeding this value.
	// 50kb (10x warn threshold) by default.
	BatchSizeFailThresholdInKb pulumi.StringPtrInput `pulumi:"batchSizeFailThresholdInKb"`
	// Log a warning message on any multiple-partition
	// batch size exceeding this value.5kb per batch by default.Caution should be taken on increasing
	// the size of this thresholdas it can lead to node instability.
	BatchSizeWarnThresholdInKb pulumi.StringPtrInput `pulumi:"batchSizeWarnThresholdInKb"`
}

func (GetCassandaCassandraUserConfigCassandraArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandaCassandraUserConfigCassandra)(nil)).Elem()
}

func (i GetCassandaCassandraUserConfigCassandraArgs) ToGetCassandaCassandraUserConfigCassandraOutput() GetCassandaCassandraUserConfigCassandraOutput {
	return i.ToGetCassandaCassandraUserConfigCassandraOutputWithContext(context.Background())
}

func (i GetCassandaCassandraUserConfigCassandraArgs) ToGetCassandaCassandraUserConfigCassandraOutputWithContext(ctx context.Context) GetCassandaCassandraUserConfigCassandraOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandaCassandraUserConfigCassandraOutput)
}

func (i GetCassandaCassandraUserConfigCassandraArgs) ToGetCassandaCassandraUserConfigCassandraPtrOutput() GetCassandaCassandraUserConfigCassandraPtrOutput {
	return i.ToGetCassandaCassandraUserConfigCassandraPtrOutputWithContext(context.Background())
}

func (i GetCassandaCassandraUserConfigCassandraArgs) ToGetCassandaCassandraUserConfigCassandraPtrOutputWithContext(ctx context.Context) GetCassandaCassandraUserConfigCassandraPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandaCassandraUserConfigCassandraOutput).ToGetCassandaCassandraUserConfigCassandraPtrOutputWithContext(ctx)
}

// GetCassandaCassandraUserConfigCassandraPtrInput is an input type that accepts GetCassandaCassandraUserConfigCassandraArgs, GetCassandaCassandraUserConfigCassandraPtr and GetCassandaCassandraUserConfigCassandraPtrOutput values.
// You can construct a concrete instance of `GetCassandaCassandraUserConfigCassandraPtrInput` via:
//
//          GetCassandaCassandraUserConfigCassandraArgs{...}
//
//  or:
//
//          nil
type GetCassandaCassandraUserConfigCassandraPtrInput interface {
	pulumi.Input

	ToGetCassandaCassandraUserConfigCassandraPtrOutput() GetCassandaCassandraUserConfigCassandraPtrOutput
	ToGetCassandaCassandraUserConfigCassandraPtrOutputWithContext(context.Context) GetCassandaCassandraUserConfigCassandraPtrOutput
}

type getCassandaCassandraUserConfigCassandraPtrType GetCassandaCassandraUserConfigCassandraArgs

func GetCassandaCassandraUserConfigCassandraPtr(v *GetCassandaCassandraUserConfigCassandraArgs) GetCassandaCassandraUserConfigCassandraPtrInput {
	return (*getCassandaCassandraUserConfigCassandraPtrType)(v)
}

func (*getCassandaCassandraUserConfigCassandraPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetCassandaCassandraUserConfigCassandra)(nil)).Elem()
}

func (i *getCassandaCassandraUserConfigCassandraPtrType) ToGetCassandaCassandraUserConfigCassandraPtrOutput() GetCassandaCassandraUserConfigCassandraPtrOutput {
	return i.ToGetCassandaCassandraUserConfigCassandraPtrOutputWithContext(context.Background())
}

func (i *getCassandaCassandraUserConfigCassandraPtrType) ToGetCassandaCassandraUserConfigCassandraPtrOutputWithContext(ctx context.Context) GetCassandaCassandraUserConfigCassandraPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandaCassandraUserConfigCassandraPtrOutput)
}

type GetCassandaCassandraUserConfigCassandraOutput struct{ *pulumi.OutputState }

func (GetCassandaCassandraUserConfigCassandraOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandaCassandraUserConfigCassandra)(nil)).Elem()
}

func (o GetCassandaCassandraUserConfigCassandraOutput) ToGetCassandaCassandraUserConfigCassandraOutput() GetCassandaCassandraUserConfigCassandraOutput {
	return o
}

func (o GetCassandaCassandraUserConfigCassandraOutput) ToGetCassandaCassandraUserConfigCassandraOutputWithContext(ctx context.Context) GetCassandaCassandraUserConfigCassandraOutput {
	return o
}

func (o GetCassandaCassandraUserConfigCassandraOutput) ToGetCassandaCassandraUserConfigCassandraPtrOutput() GetCassandaCassandraUserConfigCassandraPtrOutput {
	return o.ToGetCassandaCassandraUserConfigCassandraPtrOutputWithContext(context.Background())
}

func (o GetCassandaCassandraUserConfigCassandraOutput) ToGetCassandaCassandraUserConfigCassandraPtrOutputWithContext(ctx context.Context) GetCassandaCassandraUserConfigCassandraPtrOutput {
	return o.ApplyT(func(v GetCassandaCassandraUserConfigCassandra) *GetCassandaCassandraUserConfigCassandra {
		return &v
	}).(GetCassandaCassandraUserConfigCassandraPtrOutput)
}

// Fail any multiple-partition batch exceeding this value.
// 50kb (10x warn threshold) by default.
func (o GetCassandaCassandraUserConfigCassandraOutput) BatchSizeFailThresholdInKb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCassandaCassandraUserConfigCassandra) *string { return v.BatchSizeFailThresholdInKb }).(pulumi.StringPtrOutput)
}

// Log a warning message on any multiple-partition
// batch size exceeding this value.5kb per batch by default.Caution should be taken on increasing
// the size of this thresholdas it can lead to node instability.
func (o GetCassandaCassandraUserConfigCassandraOutput) BatchSizeWarnThresholdInKb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCassandaCassandraUserConfigCassandra) *string { return v.BatchSizeWarnThresholdInKb }).(pulumi.StringPtrOutput)
}

type GetCassandaCassandraUserConfigCassandraPtrOutput struct{ *pulumi.OutputState }

func (GetCassandaCassandraUserConfigCassandraPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetCassandaCassandraUserConfigCassandra)(nil)).Elem()
}

func (o GetCassandaCassandraUserConfigCassandraPtrOutput) ToGetCassandaCassandraUserConfigCassandraPtrOutput() GetCassandaCassandraUserConfigCassandraPtrOutput {
	return o
}

func (o GetCassandaCassandraUserConfigCassandraPtrOutput) ToGetCassandaCassandraUserConfigCassandraPtrOutputWithContext(ctx context.Context) GetCassandaCassandraUserConfigCassandraPtrOutput {
	return o
}

func (o GetCassandaCassandraUserConfigCassandraPtrOutput) Elem() GetCassandaCassandraUserConfigCassandraOutput {
	return o.ApplyT(func(v *GetCassandaCassandraUserConfigCassandra) GetCassandaCassandraUserConfigCassandra { return *v }).(GetCassandaCassandraUserConfigCassandraOutput)
}

// Fail any multiple-partition batch exceeding this value.
// 50kb (10x warn threshold) by default.
func (o GetCassandaCassandraUserConfigCassandraPtrOutput) BatchSizeFailThresholdInKb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetCassandaCassandraUserConfigCassandra) *string {
		if v == nil {
			return nil
		}
		return v.BatchSizeFailThresholdInKb
	}).(pulumi.StringPtrOutput)
}

// Log a warning message on any multiple-partition
// batch size exceeding this value.5kb per batch by default.Caution should be taken on increasing
// the size of this thresholdas it can lead to node instability.
func (o GetCassandaCassandraUserConfigCassandraPtrOutput) BatchSizeWarnThresholdInKb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetCassandaCassandraUserConfigCassandra) *string {
		if v == nil {
			return nil
		}
		return v.BatchSizeWarnThresholdInKb
	}).(pulumi.StringPtrOutput)
}

type GetCassandaCassandraUserConfigPrivateAccess struct {
	// Allow clients to connect to prometheus from the public internet
	// for service nodes that are in a project VPC or another type of private network.
	Prometheus *string `pulumi:"prometheus"`
}

// GetCassandaCassandraUserConfigPrivateAccessInput is an input type that accepts GetCassandaCassandraUserConfigPrivateAccessArgs and GetCassandaCassandraUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `GetCassandaCassandraUserConfigPrivateAccessInput` via:
//
//          GetCassandaCassandraUserConfigPrivateAccessArgs{...}
type GetCassandaCassandraUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToGetCassandaCassandraUserConfigPrivateAccessOutput() GetCassandaCassandraUserConfigPrivateAccessOutput
	ToGetCassandaCassandraUserConfigPrivateAccessOutputWithContext(context.Context) GetCassandaCassandraUserConfigPrivateAccessOutput
}

type GetCassandaCassandraUserConfigPrivateAccessArgs struct {
	// Allow clients to connect to prometheus from the public internet
	// for service nodes that are in a project VPC or another type of private network.
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (GetCassandaCassandraUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandaCassandraUserConfigPrivateAccess)(nil)).Elem()
}

func (i GetCassandaCassandraUserConfigPrivateAccessArgs) ToGetCassandaCassandraUserConfigPrivateAccessOutput() GetCassandaCassandraUserConfigPrivateAccessOutput {
	return i.ToGetCassandaCassandraUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i GetCassandaCassandraUserConfigPrivateAccessArgs) ToGetCassandaCassandraUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetCassandaCassandraUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandaCassandraUserConfigPrivateAccessOutput)
}

func (i GetCassandaCassandraUserConfigPrivateAccessArgs) ToGetCassandaCassandraUserConfigPrivateAccessPtrOutput() GetCassandaCassandraUserConfigPrivateAccessPtrOutput {
	return i.ToGetCassandaCassandraUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i GetCassandaCassandraUserConfigPrivateAccessArgs) ToGetCassandaCassandraUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetCassandaCassandraUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandaCassandraUserConfigPrivateAccessOutput).ToGetCassandaCassandraUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// GetCassandaCassandraUserConfigPrivateAccessPtrInput is an input type that accepts GetCassandaCassandraUserConfigPrivateAccessArgs, GetCassandaCassandraUserConfigPrivateAccessPtr and GetCassandaCassandraUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `GetCassandaCassandraUserConfigPrivateAccessPtrInput` via:
//
//          GetCassandaCassandraUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type GetCassandaCassandraUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToGetCassandaCassandraUserConfigPrivateAccessPtrOutput() GetCassandaCassandraUserConfigPrivateAccessPtrOutput
	ToGetCassandaCassandraUserConfigPrivateAccessPtrOutputWithContext(context.Context) GetCassandaCassandraUserConfigPrivateAccessPtrOutput
}

type getCassandaCassandraUserConfigPrivateAccessPtrType GetCassandaCassandraUserConfigPrivateAccessArgs

func GetCassandaCassandraUserConfigPrivateAccessPtr(v *GetCassandaCassandraUserConfigPrivateAccessArgs) GetCassandaCassandraUserConfigPrivateAccessPtrInput {
	return (*getCassandaCassandraUserConfigPrivateAccessPtrType)(v)
}

func (*getCassandaCassandraUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetCassandaCassandraUserConfigPrivateAccess)(nil)).Elem()
}

func (i *getCassandaCassandraUserConfigPrivateAccessPtrType) ToGetCassandaCassandraUserConfigPrivateAccessPtrOutput() GetCassandaCassandraUserConfigPrivateAccessPtrOutput {
	return i.ToGetCassandaCassandraUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *getCassandaCassandraUserConfigPrivateAccessPtrType) ToGetCassandaCassandraUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetCassandaCassandraUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandaCassandraUserConfigPrivateAccessPtrOutput)
}

type GetCassandaCassandraUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (GetCassandaCassandraUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandaCassandraUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetCassandaCassandraUserConfigPrivateAccessOutput) ToGetCassandaCassandraUserConfigPrivateAccessOutput() GetCassandaCassandraUserConfigPrivateAccessOutput {
	return o
}

func (o GetCassandaCassandraUserConfigPrivateAccessOutput) ToGetCassandaCassandraUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetCassandaCassandraUserConfigPrivateAccessOutput {
	return o
}

func (o GetCassandaCassandraUserConfigPrivateAccessOutput) ToGetCassandaCassandraUserConfigPrivateAccessPtrOutput() GetCassandaCassandraUserConfigPrivateAccessPtrOutput {
	return o.ToGetCassandaCassandraUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o GetCassandaCassandraUserConfigPrivateAccessOutput) ToGetCassandaCassandraUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetCassandaCassandraUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetCassandaCassandraUserConfigPrivateAccess) *GetCassandaCassandraUserConfigPrivateAccess {
		return &v
	}).(GetCassandaCassandraUserConfigPrivateAccessPtrOutput)
}

// Allow clients to connect to prometheus from the public internet
// for service nodes that are in a project VPC or another type of private network.
func (o GetCassandaCassandraUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCassandaCassandraUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type GetCassandaCassandraUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (GetCassandaCassandraUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetCassandaCassandraUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetCassandaCassandraUserConfigPrivateAccessPtrOutput) ToGetCassandaCassandraUserConfigPrivateAccessPtrOutput() GetCassandaCassandraUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetCassandaCassandraUserConfigPrivateAccessPtrOutput) ToGetCassandaCassandraUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetCassandaCassandraUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetCassandaCassandraUserConfigPrivateAccessPtrOutput) Elem() GetCassandaCassandraUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *GetCassandaCassandraUserConfigPrivateAccess) GetCassandaCassandraUserConfigPrivateAccess {
		return *v
	}).(GetCassandaCassandraUserConfigPrivateAccessOutput)
}

// Allow clients to connect to prometheus from the public internet
// for service nodes that are in a project VPC or another type of private network.
func (o GetCassandaCassandraUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetCassandaCassandraUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type GetCassandaCassandraUserConfigPublicAccess struct {
	// Allow clients to connect to prometheus from the public internet
	// for service nodes that are in a project VPC or another type of private network.
	Prometheus *string `pulumi:"prometheus"`
}

// GetCassandaCassandraUserConfigPublicAccessInput is an input type that accepts GetCassandaCassandraUserConfigPublicAccessArgs and GetCassandaCassandraUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `GetCassandaCassandraUserConfigPublicAccessInput` via:
//
//          GetCassandaCassandraUserConfigPublicAccessArgs{...}
type GetCassandaCassandraUserConfigPublicAccessInput interface {
	pulumi.Input

	ToGetCassandaCassandraUserConfigPublicAccessOutput() GetCassandaCassandraUserConfigPublicAccessOutput
	ToGetCassandaCassandraUserConfigPublicAccessOutputWithContext(context.Context) GetCassandaCassandraUserConfigPublicAccessOutput
}

type GetCassandaCassandraUserConfigPublicAccessArgs struct {
	// Allow clients to connect to prometheus from the public internet
	// for service nodes that are in a project VPC or another type of private network.
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (GetCassandaCassandraUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandaCassandraUserConfigPublicAccess)(nil)).Elem()
}

func (i GetCassandaCassandraUserConfigPublicAccessArgs) ToGetCassandaCassandraUserConfigPublicAccessOutput() GetCassandaCassandraUserConfigPublicAccessOutput {
	return i.ToGetCassandaCassandraUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i GetCassandaCassandraUserConfigPublicAccessArgs) ToGetCassandaCassandraUserConfigPublicAccessOutputWithContext(ctx context.Context) GetCassandaCassandraUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandaCassandraUserConfigPublicAccessOutput)
}

func (i GetCassandaCassandraUserConfigPublicAccessArgs) ToGetCassandaCassandraUserConfigPublicAccessPtrOutput() GetCassandaCassandraUserConfigPublicAccessPtrOutput {
	return i.ToGetCassandaCassandraUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i GetCassandaCassandraUserConfigPublicAccessArgs) ToGetCassandaCassandraUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetCassandaCassandraUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandaCassandraUserConfigPublicAccessOutput).ToGetCassandaCassandraUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// GetCassandaCassandraUserConfigPublicAccessPtrInput is an input type that accepts GetCassandaCassandraUserConfigPublicAccessArgs, GetCassandaCassandraUserConfigPublicAccessPtr and GetCassandaCassandraUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `GetCassandaCassandraUserConfigPublicAccessPtrInput` via:
//
//          GetCassandaCassandraUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type GetCassandaCassandraUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToGetCassandaCassandraUserConfigPublicAccessPtrOutput() GetCassandaCassandraUserConfigPublicAccessPtrOutput
	ToGetCassandaCassandraUserConfigPublicAccessPtrOutputWithContext(context.Context) GetCassandaCassandraUserConfigPublicAccessPtrOutput
}

type getCassandaCassandraUserConfigPublicAccessPtrType GetCassandaCassandraUserConfigPublicAccessArgs

func GetCassandaCassandraUserConfigPublicAccessPtr(v *GetCassandaCassandraUserConfigPublicAccessArgs) GetCassandaCassandraUserConfigPublicAccessPtrInput {
	return (*getCassandaCassandraUserConfigPublicAccessPtrType)(v)
}

func (*getCassandaCassandraUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetCassandaCassandraUserConfigPublicAccess)(nil)).Elem()
}

func (i *getCassandaCassandraUserConfigPublicAccessPtrType) ToGetCassandaCassandraUserConfigPublicAccessPtrOutput() GetCassandaCassandraUserConfigPublicAccessPtrOutput {
	return i.ToGetCassandaCassandraUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *getCassandaCassandraUserConfigPublicAccessPtrType) ToGetCassandaCassandraUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetCassandaCassandraUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandaCassandraUserConfigPublicAccessPtrOutput)
}

type GetCassandaCassandraUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (GetCassandaCassandraUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandaCassandraUserConfigPublicAccess)(nil)).Elem()
}

func (o GetCassandaCassandraUserConfigPublicAccessOutput) ToGetCassandaCassandraUserConfigPublicAccessOutput() GetCassandaCassandraUserConfigPublicAccessOutput {
	return o
}

func (o GetCassandaCassandraUserConfigPublicAccessOutput) ToGetCassandaCassandraUserConfigPublicAccessOutputWithContext(ctx context.Context) GetCassandaCassandraUserConfigPublicAccessOutput {
	return o
}

func (o GetCassandaCassandraUserConfigPublicAccessOutput) ToGetCassandaCassandraUserConfigPublicAccessPtrOutput() GetCassandaCassandraUserConfigPublicAccessPtrOutput {
	return o.ToGetCassandaCassandraUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o GetCassandaCassandraUserConfigPublicAccessOutput) ToGetCassandaCassandraUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetCassandaCassandraUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetCassandaCassandraUserConfigPublicAccess) *GetCassandaCassandraUserConfigPublicAccess {
		return &v
	}).(GetCassandaCassandraUserConfigPublicAccessPtrOutput)
}

// Allow clients to connect to prometheus from the public internet
// for service nodes that are in a project VPC or another type of private network.
func (o GetCassandaCassandraUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCassandaCassandraUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type GetCassandaCassandraUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (GetCassandaCassandraUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetCassandaCassandraUserConfigPublicAccess)(nil)).Elem()
}

func (o GetCassandaCassandraUserConfigPublicAccessPtrOutput) ToGetCassandaCassandraUserConfigPublicAccessPtrOutput() GetCassandaCassandraUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetCassandaCassandraUserConfigPublicAccessPtrOutput) ToGetCassandaCassandraUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetCassandaCassandraUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetCassandaCassandraUserConfigPublicAccessPtrOutput) Elem() GetCassandaCassandraUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *GetCassandaCassandraUserConfigPublicAccess) GetCassandaCassandraUserConfigPublicAccess {
		return *v
	}).(GetCassandaCassandraUserConfigPublicAccessOutput)
}

// Allow clients to connect to prometheus from the public internet
// for service nodes that are in a project VPC or another type of private network.
func (o GetCassandaCassandraUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetCassandaCassandraUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type GetCassandaComponent struct {
	Component                 string `pulumi:"component"`
	Host                      string `pulumi:"host"`
	KafkaAuthenticationMethod string `pulumi:"kafkaAuthenticationMethod"`
	Port                      int    `pulumi:"port"`
	Route                     string `pulumi:"route"`
	Ssl                       bool   `pulumi:"ssl"`
	Usage                     string `pulumi:"usage"`
}

// GetCassandaComponentInput is an input type that accepts GetCassandaComponentArgs and GetCassandaComponentOutput values.
// You can construct a concrete instance of `GetCassandaComponentInput` via:
//
//          GetCassandaComponentArgs{...}
type GetCassandaComponentInput interface {
	pulumi.Input

	ToGetCassandaComponentOutput() GetCassandaComponentOutput
	ToGetCassandaComponentOutputWithContext(context.Context) GetCassandaComponentOutput
}

type GetCassandaComponentArgs struct {
	Component                 pulumi.StringInput `pulumi:"component"`
	Host                      pulumi.StringInput `pulumi:"host"`
	KafkaAuthenticationMethod pulumi.StringInput `pulumi:"kafkaAuthenticationMethod"`
	Port                      pulumi.IntInput    `pulumi:"port"`
	Route                     pulumi.StringInput `pulumi:"route"`
	Ssl                       pulumi.BoolInput   `pulumi:"ssl"`
	Usage                     pulumi.StringInput `pulumi:"usage"`
}

func (GetCassandaComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandaComponent)(nil)).Elem()
}

func (i GetCassandaComponentArgs) ToGetCassandaComponentOutput() GetCassandaComponentOutput {
	return i.ToGetCassandaComponentOutputWithContext(context.Background())
}

func (i GetCassandaComponentArgs) ToGetCassandaComponentOutputWithContext(ctx context.Context) GetCassandaComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandaComponentOutput)
}

// GetCassandaComponentArrayInput is an input type that accepts GetCassandaComponentArray and GetCassandaComponentArrayOutput values.
// You can construct a concrete instance of `GetCassandaComponentArrayInput` via:
//
//          GetCassandaComponentArray{ GetCassandaComponentArgs{...} }
type GetCassandaComponentArrayInput interface {
	pulumi.Input

	ToGetCassandaComponentArrayOutput() GetCassandaComponentArrayOutput
	ToGetCassandaComponentArrayOutputWithContext(context.Context) GetCassandaComponentArrayOutput
}

type GetCassandaComponentArray []GetCassandaComponentInput

func (GetCassandaComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCassandaComponent)(nil)).Elem()
}

func (i GetCassandaComponentArray) ToGetCassandaComponentArrayOutput() GetCassandaComponentArrayOutput {
	return i.ToGetCassandaComponentArrayOutputWithContext(context.Background())
}

func (i GetCassandaComponentArray) ToGetCassandaComponentArrayOutputWithContext(ctx context.Context) GetCassandaComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandaComponentArrayOutput)
}

type GetCassandaComponentOutput struct{ *pulumi.OutputState }

func (GetCassandaComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandaComponent)(nil)).Elem()
}

func (o GetCassandaComponentOutput) ToGetCassandaComponentOutput() GetCassandaComponentOutput {
	return o
}

func (o GetCassandaComponentOutput) ToGetCassandaComponentOutputWithContext(ctx context.Context) GetCassandaComponentOutput {
	return o
}

func (o GetCassandaComponentOutput) Component() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandaComponent) string { return v.Component }).(pulumi.StringOutput)
}

func (o GetCassandaComponentOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandaComponent) string { return v.Host }).(pulumi.StringOutput)
}

func (o GetCassandaComponentOutput) KafkaAuthenticationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandaComponent) string { return v.KafkaAuthenticationMethod }).(pulumi.StringOutput)
}

func (o GetCassandaComponentOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetCassandaComponent) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetCassandaComponentOutput) Route() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandaComponent) string { return v.Route }).(pulumi.StringOutput)
}

func (o GetCassandaComponentOutput) Ssl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCassandaComponent) bool { return v.Ssl }).(pulumi.BoolOutput)
}

func (o GetCassandaComponentOutput) Usage() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandaComponent) string { return v.Usage }).(pulumi.StringOutput)
}

type GetCassandaComponentArrayOutput struct{ *pulumi.OutputState }

func (GetCassandaComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCassandaComponent)(nil)).Elem()
}

func (o GetCassandaComponentArrayOutput) ToGetCassandaComponentArrayOutput() GetCassandaComponentArrayOutput {
	return o
}

func (o GetCassandaComponentArrayOutput) ToGetCassandaComponentArrayOutputWithContext(ctx context.Context) GetCassandaComponentArrayOutput {
	return o
}

func (o GetCassandaComponentArrayOutput) Index(i pulumi.IntInput) GetCassandaComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCassandaComponent {
		return vs[0].([]GetCassandaComponent)[vs[1].(int)]
	}).(GetCassandaComponentOutput)
}

type GetCassandaServiceIntegration struct {
	IntegrationType   string `pulumi:"integrationType"`
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// GetCassandaServiceIntegrationInput is an input type that accepts GetCassandaServiceIntegrationArgs and GetCassandaServiceIntegrationOutput values.
// You can construct a concrete instance of `GetCassandaServiceIntegrationInput` via:
//
//          GetCassandaServiceIntegrationArgs{...}
type GetCassandaServiceIntegrationInput interface {
	pulumi.Input

	ToGetCassandaServiceIntegrationOutput() GetCassandaServiceIntegrationOutput
	ToGetCassandaServiceIntegrationOutputWithContext(context.Context) GetCassandaServiceIntegrationOutput
}

type GetCassandaServiceIntegrationArgs struct {
	IntegrationType   pulumi.StringInput `pulumi:"integrationType"`
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (GetCassandaServiceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandaServiceIntegration)(nil)).Elem()
}

func (i GetCassandaServiceIntegrationArgs) ToGetCassandaServiceIntegrationOutput() GetCassandaServiceIntegrationOutput {
	return i.ToGetCassandaServiceIntegrationOutputWithContext(context.Background())
}

func (i GetCassandaServiceIntegrationArgs) ToGetCassandaServiceIntegrationOutputWithContext(ctx context.Context) GetCassandaServiceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandaServiceIntegrationOutput)
}

// GetCassandaServiceIntegrationArrayInput is an input type that accepts GetCassandaServiceIntegrationArray and GetCassandaServiceIntegrationArrayOutput values.
// You can construct a concrete instance of `GetCassandaServiceIntegrationArrayInput` via:
//
//          GetCassandaServiceIntegrationArray{ GetCassandaServiceIntegrationArgs{...} }
type GetCassandaServiceIntegrationArrayInput interface {
	pulumi.Input

	ToGetCassandaServiceIntegrationArrayOutput() GetCassandaServiceIntegrationArrayOutput
	ToGetCassandaServiceIntegrationArrayOutputWithContext(context.Context) GetCassandaServiceIntegrationArrayOutput
}

type GetCassandaServiceIntegrationArray []GetCassandaServiceIntegrationInput

func (GetCassandaServiceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCassandaServiceIntegration)(nil)).Elem()
}

func (i GetCassandaServiceIntegrationArray) ToGetCassandaServiceIntegrationArrayOutput() GetCassandaServiceIntegrationArrayOutput {
	return i.ToGetCassandaServiceIntegrationArrayOutputWithContext(context.Background())
}

func (i GetCassandaServiceIntegrationArray) ToGetCassandaServiceIntegrationArrayOutputWithContext(ctx context.Context) GetCassandaServiceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandaServiceIntegrationArrayOutput)
}

type GetCassandaServiceIntegrationOutput struct{ *pulumi.OutputState }

func (GetCassandaServiceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandaServiceIntegration)(nil)).Elem()
}

func (o GetCassandaServiceIntegrationOutput) ToGetCassandaServiceIntegrationOutput() GetCassandaServiceIntegrationOutput {
	return o
}

func (o GetCassandaServiceIntegrationOutput) ToGetCassandaServiceIntegrationOutputWithContext(ctx context.Context) GetCassandaServiceIntegrationOutput {
	return o
}

func (o GetCassandaServiceIntegrationOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandaServiceIntegration) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o GetCassandaServiceIntegrationOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandaServiceIntegration) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

type GetCassandaServiceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (GetCassandaServiceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCassandaServiceIntegration)(nil)).Elem()
}

func (o GetCassandaServiceIntegrationArrayOutput) ToGetCassandaServiceIntegrationArrayOutput() GetCassandaServiceIntegrationArrayOutput {
	return o
}

func (o GetCassandaServiceIntegrationArrayOutput) ToGetCassandaServiceIntegrationArrayOutputWithContext(ctx context.Context) GetCassandaServiceIntegrationArrayOutput {
	return o
}

func (o GetCassandaServiceIntegrationArrayOutput) Index(i pulumi.IntInput) GetCassandaServiceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCassandaServiceIntegration {
		return vs[0].([]GetCassandaServiceIntegration)[vs[1].(int)]
	}).(GetCassandaServiceIntegrationOutput)
}

type GetElasticSearchAclAcl struct {
	Rules    []GetElasticSearchAclAclRule `pulumi:"rules"`
	Username string                       `pulumi:"username"`
}

// GetElasticSearchAclAclInput is an input type that accepts GetElasticSearchAclAclArgs and GetElasticSearchAclAclOutput values.
// You can construct a concrete instance of `GetElasticSearchAclAclInput` via:
//
//          GetElasticSearchAclAclArgs{...}
type GetElasticSearchAclAclInput interface {
	pulumi.Input

	ToGetElasticSearchAclAclOutput() GetElasticSearchAclAclOutput
	ToGetElasticSearchAclAclOutputWithContext(context.Context) GetElasticSearchAclAclOutput
}

type GetElasticSearchAclAclArgs struct {
	Rules    GetElasticSearchAclAclRuleArrayInput `pulumi:"rules"`
	Username pulumi.StringInput                   `pulumi:"username"`
}

func (GetElasticSearchAclAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticSearchAclAcl)(nil)).Elem()
}

func (i GetElasticSearchAclAclArgs) ToGetElasticSearchAclAclOutput() GetElasticSearchAclAclOutput {
	return i.ToGetElasticSearchAclAclOutputWithContext(context.Background())
}

func (i GetElasticSearchAclAclArgs) ToGetElasticSearchAclAclOutputWithContext(ctx context.Context) GetElasticSearchAclAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchAclAclOutput)
}

// GetElasticSearchAclAclArrayInput is an input type that accepts GetElasticSearchAclAclArray and GetElasticSearchAclAclArrayOutput values.
// You can construct a concrete instance of `GetElasticSearchAclAclArrayInput` via:
//
//          GetElasticSearchAclAclArray{ GetElasticSearchAclAclArgs{...} }
type GetElasticSearchAclAclArrayInput interface {
	pulumi.Input

	ToGetElasticSearchAclAclArrayOutput() GetElasticSearchAclAclArrayOutput
	ToGetElasticSearchAclAclArrayOutputWithContext(context.Context) GetElasticSearchAclAclArrayOutput
}

type GetElasticSearchAclAclArray []GetElasticSearchAclAclInput

func (GetElasticSearchAclAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElasticSearchAclAcl)(nil)).Elem()
}

func (i GetElasticSearchAclAclArray) ToGetElasticSearchAclAclArrayOutput() GetElasticSearchAclAclArrayOutput {
	return i.ToGetElasticSearchAclAclArrayOutputWithContext(context.Background())
}

func (i GetElasticSearchAclAclArray) ToGetElasticSearchAclAclArrayOutputWithContext(ctx context.Context) GetElasticSearchAclAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchAclAclArrayOutput)
}

type GetElasticSearchAclAclOutput struct{ *pulumi.OutputState }

func (GetElasticSearchAclAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticSearchAclAcl)(nil)).Elem()
}

func (o GetElasticSearchAclAclOutput) ToGetElasticSearchAclAclOutput() GetElasticSearchAclAclOutput {
	return o
}

func (o GetElasticSearchAclAclOutput) ToGetElasticSearchAclAclOutputWithContext(ctx context.Context) GetElasticSearchAclAclOutput {
	return o
}

func (o GetElasticSearchAclAclOutput) Rules() GetElasticSearchAclAclRuleArrayOutput {
	return o.ApplyT(func(v GetElasticSearchAclAcl) []GetElasticSearchAclAclRule { return v.Rules }).(GetElasticSearchAclAclRuleArrayOutput)
}

func (o GetElasticSearchAclAclOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetElasticSearchAclAcl) string { return v.Username }).(pulumi.StringOutput)
}

type GetElasticSearchAclAclArrayOutput struct{ *pulumi.OutputState }

func (GetElasticSearchAclAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElasticSearchAclAcl)(nil)).Elem()
}

func (o GetElasticSearchAclAclArrayOutput) ToGetElasticSearchAclAclArrayOutput() GetElasticSearchAclAclArrayOutput {
	return o
}

func (o GetElasticSearchAclAclArrayOutput) ToGetElasticSearchAclAclArrayOutputWithContext(ctx context.Context) GetElasticSearchAclAclArrayOutput {
	return o
}

func (o GetElasticSearchAclAclArrayOutput) Index(i pulumi.IntInput) GetElasticSearchAclAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetElasticSearchAclAcl {
		return vs[0].([]GetElasticSearchAclAcl)[vs[1].(int)]
	}).(GetElasticSearchAclAclOutput)
}

type GetElasticSearchAclAclRule struct {
	Index      string `pulumi:"index"`
	Permission string `pulumi:"permission"`
}

// GetElasticSearchAclAclRuleInput is an input type that accepts GetElasticSearchAclAclRuleArgs and GetElasticSearchAclAclRuleOutput values.
// You can construct a concrete instance of `GetElasticSearchAclAclRuleInput` via:
//
//          GetElasticSearchAclAclRuleArgs{...}
type GetElasticSearchAclAclRuleInput interface {
	pulumi.Input

	ToGetElasticSearchAclAclRuleOutput() GetElasticSearchAclAclRuleOutput
	ToGetElasticSearchAclAclRuleOutputWithContext(context.Context) GetElasticSearchAclAclRuleOutput
}

type GetElasticSearchAclAclRuleArgs struct {
	Index      pulumi.StringInput `pulumi:"index"`
	Permission pulumi.StringInput `pulumi:"permission"`
}

func (GetElasticSearchAclAclRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticSearchAclAclRule)(nil)).Elem()
}

func (i GetElasticSearchAclAclRuleArgs) ToGetElasticSearchAclAclRuleOutput() GetElasticSearchAclAclRuleOutput {
	return i.ToGetElasticSearchAclAclRuleOutputWithContext(context.Background())
}

func (i GetElasticSearchAclAclRuleArgs) ToGetElasticSearchAclAclRuleOutputWithContext(ctx context.Context) GetElasticSearchAclAclRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchAclAclRuleOutput)
}

// GetElasticSearchAclAclRuleArrayInput is an input type that accepts GetElasticSearchAclAclRuleArray and GetElasticSearchAclAclRuleArrayOutput values.
// You can construct a concrete instance of `GetElasticSearchAclAclRuleArrayInput` via:
//
//          GetElasticSearchAclAclRuleArray{ GetElasticSearchAclAclRuleArgs{...} }
type GetElasticSearchAclAclRuleArrayInput interface {
	pulumi.Input

	ToGetElasticSearchAclAclRuleArrayOutput() GetElasticSearchAclAclRuleArrayOutput
	ToGetElasticSearchAclAclRuleArrayOutputWithContext(context.Context) GetElasticSearchAclAclRuleArrayOutput
}

type GetElasticSearchAclAclRuleArray []GetElasticSearchAclAclRuleInput

func (GetElasticSearchAclAclRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElasticSearchAclAclRule)(nil)).Elem()
}

func (i GetElasticSearchAclAclRuleArray) ToGetElasticSearchAclAclRuleArrayOutput() GetElasticSearchAclAclRuleArrayOutput {
	return i.ToGetElasticSearchAclAclRuleArrayOutputWithContext(context.Background())
}

func (i GetElasticSearchAclAclRuleArray) ToGetElasticSearchAclAclRuleArrayOutputWithContext(ctx context.Context) GetElasticSearchAclAclRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchAclAclRuleArrayOutput)
}

type GetElasticSearchAclAclRuleOutput struct{ *pulumi.OutputState }

func (GetElasticSearchAclAclRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticSearchAclAclRule)(nil)).Elem()
}

func (o GetElasticSearchAclAclRuleOutput) ToGetElasticSearchAclAclRuleOutput() GetElasticSearchAclAclRuleOutput {
	return o
}

func (o GetElasticSearchAclAclRuleOutput) ToGetElasticSearchAclAclRuleOutputWithContext(ctx context.Context) GetElasticSearchAclAclRuleOutput {
	return o
}

func (o GetElasticSearchAclAclRuleOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v GetElasticSearchAclAclRule) string { return v.Index }).(pulumi.StringOutput)
}

func (o GetElasticSearchAclAclRuleOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func(v GetElasticSearchAclAclRule) string { return v.Permission }).(pulumi.StringOutput)
}

type GetElasticSearchAclAclRuleArrayOutput struct{ *pulumi.OutputState }

func (GetElasticSearchAclAclRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElasticSearchAclAclRule)(nil)).Elem()
}

func (o GetElasticSearchAclAclRuleArrayOutput) ToGetElasticSearchAclAclRuleArrayOutput() GetElasticSearchAclAclRuleArrayOutput {
	return o
}

func (o GetElasticSearchAclAclRuleArrayOutput) ToGetElasticSearchAclAclRuleArrayOutputWithContext(ctx context.Context) GetElasticSearchAclAclRuleArrayOutput {
	return o
}

func (o GetElasticSearchAclAclRuleArrayOutput) Index(i pulumi.IntInput) GetElasticSearchAclAclRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetElasticSearchAclAclRule {
		return vs[0].([]GetElasticSearchAclAclRule)[vs[1].(int)]
	}).(GetElasticSearchAclAclRuleOutput)
}

type GetElasticSearchComponent struct {
	Component                 string `pulumi:"component"`
	Host                      string `pulumi:"host"`
	KafkaAuthenticationMethod string `pulumi:"kafkaAuthenticationMethod"`
	Port                      int    `pulumi:"port"`
	Route                     string `pulumi:"route"`
	Ssl                       bool   `pulumi:"ssl"`
	Usage                     string `pulumi:"usage"`
}

// GetElasticSearchComponentInput is an input type that accepts GetElasticSearchComponentArgs and GetElasticSearchComponentOutput values.
// You can construct a concrete instance of `GetElasticSearchComponentInput` via:
//
//          GetElasticSearchComponentArgs{...}
type GetElasticSearchComponentInput interface {
	pulumi.Input

	ToGetElasticSearchComponentOutput() GetElasticSearchComponentOutput
	ToGetElasticSearchComponentOutputWithContext(context.Context) GetElasticSearchComponentOutput
}

type GetElasticSearchComponentArgs struct {
	Component                 pulumi.StringInput `pulumi:"component"`
	Host                      pulumi.StringInput `pulumi:"host"`
	KafkaAuthenticationMethod pulumi.StringInput `pulumi:"kafkaAuthenticationMethod"`
	Port                      pulumi.IntInput    `pulumi:"port"`
	Route                     pulumi.StringInput `pulumi:"route"`
	Ssl                       pulumi.BoolInput   `pulumi:"ssl"`
	Usage                     pulumi.StringInput `pulumi:"usage"`
}

func (GetElasticSearchComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticSearchComponent)(nil)).Elem()
}

func (i GetElasticSearchComponentArgs) ToGetElasticSearchComponentOutput() GetElasticSearchComponentOutput {
	return i.ToGetElasticSearchComponentOutputWithContext(context.Background())
}

func (i GetElasticSearchComponentArgs) ToGetElasticSearchComponentOutputWithContext(ctx context.Context) GetElasticSearchComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchComponentOutput)
}

// GetElasticSearchComponentArrayInput is an input type that accepts GetElasticSearchComponentArray and GetElasticSearchComponentArrayOutput values.
// You can construct a concrete instance of `GetElasticSearchComponentArrayInput` via:
//
//          GetElasticSearchComponentArray{ GetElasticSearchComponentArgs{...} }
type GetElasticSearchComponentArrayInput interface {
	pulumi.Input

	ToGetElasticSearchComponentArrayOutput() GetElasticSearchComponentArrayOutput
	ToGetElasticSearchComponentArrayOutputWithContext(context.Context) GetElasticSearchComponentArrayOutput
}

type GetElasticSearchComponentArray []GetElasticSearchComponentInput

func (GetElasticSearchComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElasticSearchComponent)(nil)).Elem()
}

func (i GetElasticSearchComponentArray) ToGetElasticSearchComponentArrayOutput() GetElasticSearchComponentArrayOutput {
	return i.ToGetElasticSearchComponentArrayOutputWithContext(context.Background())
}

func (i GetElasticSearchComponentArray) ToGetElasticSearchComponentArrayOutputWithContext(ctx context.Context) GetElasticSearchComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchComponentArrayOutput)
}

type GetElasticSearchComponentOutput struct{ *pulumi.OutputState }

func (GetElasticSearchComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticSearchComponent)(nil)).Elem()
}

func (o GetElasticSearchComponentOutput) ToGetElasticSearchComponentOutput() GetElasticSearchComponentOutput {
	return o
}

func (o GetElasticSearchComponentOutput) ToGetElasticSearchComponentOutputWithContext(ctx context.Context) GetElasticSearchComponentOutput {
	return o
}

func (o GetElasticSearchComponentOutput) Component() pulumi.StringOutput {
	return o.ApplyT(func(v GetElasticSearchComponent) string { return v.Component }).(pulumi.StringOutput)
}

func (o GetElasticSearchComponentOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetElasticSearchComponent) string { return v.Host }).(pulumi.StringOutput)
}

func (o GetElasticSearchComponentOutput) KafkaAuthenticationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetElasticSearchComponent) string { return v.KafkaAuthenticationMethod }).(pulumi.StringOutput)
}

func (o GetElasticSearchComponentOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetElasticSearchComponent) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetElasticSearchComponentOutput) Route() pulumi.StringOutput {
	return o.ApplyT(func(v GetElasticSearchComponent) string { return v.Route }).(pulumi.StringOutput)
}

func (o GetElasticSearchComponentOutput) Ssl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetElasticSearchComponent) bool { return v.Ssl }).(pulumi.BoolOutput)
}

func (o GetElasticSearchComponentOutput) Usage() pulumi.StringOutput {
	return o.ApplyT(func(v GetElasticSearchComponent) string { return v.Usage }).(pulumi.StringOutput)
}

type GetElasticSearchComponentArrayOutput struct{ *pulumi.OutputState }

func (GetElasticSearchComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElasticSearchComponent)(nil)).Elem()
}

func (o GetElasticSearchComponentArrayOutput) ToGetElasticSearchComponentArrayOutput() GetElasticSearchComponentArrayOutput {
	return o
}

func (o GetElasticSearchComponentArrayOutput) ToGetElasticSearchComponentArrayOutputWithContext(ctx context.Context) GetElasticSearchComponentArrayOutput {
	return o
}

func (o GetElasticSearchComponentArrayOutput) Index(i pulumi.IntInput) GetElasticSearchComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetElasticSearchComponent {
		return vs[0].([]GetElasticSearchComponent)[vs[1].(int)]
	}).(GetElasticSearchComponentOutput)
}

type GetElasticSearchElasticsearch struct {
	// URI for Kibana frontend.
	KibanaUri string `pulumi:"kibanaUri"`
}

// GetElasticSearchElasticsearchInput is an input type that accepts GetElasticSearchElasticsearchArgs and GetElasticSearchElasticsearchOutput values.
// You can construct a concrete instance of `GetElasticSearchElasticsearchInput` via:
//
//          GetElasticSearchElasticsearchArgs{...}
type GetElasticSearchElasticsearchInput interface {
	pulumi.Input

	ToGetElasticSearchElasticsearchOutput() GetElasticSearchElasticsearchOutput
	ToGetElasticSearchElasticsearchOutputWithContext(context.Context) GetElasticSearchElasticsearchOutput
}

type GetElasticSearchElasticsearchArgs struct {
	// URI for Kibana frontend.
	KibanaUri pulumi.StringInput `pulumi:"kibanaUri"`
}

func (GetElasticSearchElasticsearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticSearchElasticsearch)(nil)).Elem()
}

func (i GetElasticSearchElasticsearchArgs) ToGetElasticSearchElasticsearchOutput() GetElasticSearchElasticsearchOutput {
	return i.ToGetElasticSearchElasticsearchOutputWithContext(context.Background())
}

func (i GetElasticSearchElasticsearchArgs) ToGetElasticSearchElasticsearchOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchElasticsearchOutput)
}

type GetElasticSearchElasticsearchOutput struct{ *pulumi.OutputState }

func (GetElasticSearchElasticsearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticSearchElasticsearch)(nil)).Elem()
}

func (o GetElasticSearchElasticsearchOutput) ToGetElasticSearchElasticsearchOutput() GetElasticSearchElasticsearchOutput {
	return o
}

func (o GetElasticSearchElasticsearchOutput) ToGetElasticSearchElasticsearchOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchOutput {
	return o
}

// URI for Kibana frontend.
func (o GetElasticSearchElasticsearchOutput) KibanaUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearch) string { return v.KibanaUri }).(pulumi.StringOutput)
}

type GetElasticSearchElasticsearchUserConfig struct {
	// Serve the web frontend using a custom CNAME pointing to the
	// Aiven DNS name.
	CustomDomain *string `pulumi:"customDomain"`
	// Disable automatic replication factor
	// adjustment for multi-node services. By default, Aiven ensures all indexes are replicated at
	// least to two nodes. Note: setting this to true increases a risk of data loss in case of
	// virtual machine failure.
	DisableReplicationFactorAdjustment *string `pulumi:"disableReplicationFactorAdjustment"`
	// Elasticsearch specific server provided values.
	Elasticsearch *GetElasticSearchElasticsearchUserConfigElasticsearch `pulumi:"elasticsearch"`
	// Elasticsearch major version.
	ElasticsearchVersion *string `pulumi:"elasticsearchVersion"`
	// Glob pattern and number of indexes matching that pattern to
	// be kept.
	IndexPatterns []GetElasticSearchElasticsearchUserConfigIndexPattern `pulumi:"indexPatterns"`
	// Template settings for all new indexe.
	IndexTemplate *GetElasticSearchElasticsearchUserConfigIndexTemplate `pulumi:"indexTemplate"`
	// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters []string `pulumi:"ipFilters"`
	// Allow clients to connect to kibana from the public internet for
	// service nodes that are in a project VPC or another type of private network.
	Kibana *GetElasticSearchElasticsearchUserConfigKibana `pulumi:"kibana"`
	// Maximum number of indexes to keep before deleting the oldest one.
	MaxIndexCount *string `pulumi:"maxIndexCount"`
	// Allow access to selected service ports from private networks.
	PrivateAccess *GetElasticSearchElasticsearchUserConfigPrivateAccess `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess *GetElasticSearchElasticsearchUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom *string `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet.
	PublicAccess *GetElasticSearchElasticsearchUserConfigPublicAccess `pulumi:"publicAccess"`
	// Name of the basebackup to restore in forked service.
	RecoveryBasebackupName *string `pulumi:"recoveryBasebackupName"`
	// Name of another service to fork from. This has effect
	// only when a new service is being created.
	ServiceToForkFrom *string `pulumi:"serviceToForkFrom"`
}

// GetElasticSearchElasticsearchUserConfigInput is an input type that accepts GetElasticSearchElasticsearchUserConfigArgs and GetElasticSearchElasticsearchUserConfigOutput values.
// You can construct a concrete instance of `GetElasticSearchElasticsearchUserConfigInput` via:
//
//          GetElasticSearchElasticsearchUserConfigArgs{...}
type GetElasticSearchElasticsearchUserConfigInput interface {
	pulumi.Input

	ToGetElasticSearchElasticsearchUserConfigOutput() GetElasticSearchElasticsearchUserConfigOutput
	ToGetElasticSearchElasticsearchUserConfigOutputWithContext(context.Context) GetElasticSearchElasticsearchUserConfigOutput
}

type GetElasticSearchElasticsearchUserConfigArgs struct {
	// Serve the web frontend using a custom CNAME pointing to the
	// Aiven DNS name.
	CustomDomain pulumi.StringPtrInput `pulumi:"customDomain"`
	// Disable automatic replication factor
	// adjustment for multi-node services. By default, Aiven ensures all indexes are replicated at
	// least to two nodes. Note: setting this to true increases a risk of data loss in case of
	// virtual machine failure.
	DisableReplicationFactorAdjustment pulumi.StringPtrInput `pulumi:"disableReplicationFactorAdjustment"`
	// Elasticsearch specific server provided values.
	Elasticsearch GetElasticSearchElasticsearchUserConfigElasticsearchPtrInput `pulumi:"elasticsearch"`
	// Elasticsearch major version.
	ElasticsearchVersion pulumi.StringPtrInput `pulumi:"elasticsearchVersion"`
	// Glob pattern and number of indexes matching that pattern to
	// be kept.
	IndexPatterns GetElasticSearchElasticsearchUserConfigIndexPatternArrayInput `pulumi:"indexPatterns"`
	// Template settings for all new indexe.
	IndexTemplate GetElasticSearchElasticsearchUserConfigIndexTemplatePtrInput `pulumi:"indexTemplate"`
	// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// Allow clients to connect to kibana from the public internet for
	// service nodes that are in a project VPC or another type of private network.
	Kibana GetElasticSearchElasticsearchUserConfigKibanaPtrInput `pulumi:"kibana"`
	// Maximum number of indexes to keep before deleting the oldest one.
	MaxIndexCount pulumi.StringPtrInput `pulumi:"maxIndexCount"`
	// Allow access to selected service ports from private networks.
	PrivateAccess GetElasticSearchElasticsearchUserConfigPrivateAccessPtrInput `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom pulumi.StringPtrInput `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet.
	PublicAccess GetElasticSearchElasticsearchUserConfigPublicAccessPtrInput `pulumi:"publicAccess"`
	// Name of the basebackup to restore in forked service.
	RecoveryBasebackupName pulumi.StringPtrInput `pulumi:"recoveryBasebackupName"`
	// Name of another service to fork from. This has effect
	// only when a new service is being created.
	ServiceToForkFrom pulumi.StringPtrInput `pulumi:"serviceToForkFrom"`
}

func (GetElasticSearchElasticsearchUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticSearchElasticsearchUserConfig)(nil)).Elem()
}

func (i GetElasticSearchElasticsearchUserConfigArgs) ToGetElasticSearchElasticsearchUserConfigOutput() GetElasticSearchElasticsearchUserConfigOutput {
	return i.ToGetElasticSearchElasticsearchUserConfigOutputWithContext(context.Background())
}

func (i GetElasticSearchElasticsearchUserConfigArgs) ToGetElasticSearchElasticsearchUserConfigOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchElasticsearchUserConfigOutput)
}

type GetElasticSearchElasticsearchUserConfigOutput struct{ *pulumi.OutputState }

func (GetElasticSearchElasticsearchUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticSearchElasticsearchUserConfig)(nil)).Elem()
}

func (o GetElasticSearchElasticsearchUserConfigOutput) ToGetElasticSearchElasticsearchUserConfigOutput() GetElasticSearchElasticsearchUserConfigOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigOutput) ToGetElasticSearchElasticsearchUserConfigOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigOutput {
	return o
}

// Serve the web frontend using a custom CNAME pointing to the
// Aiven DNS name.
func (o GetElasticSearchElasticsearchUserConfigOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfig) *string { return v.CustomDomain }).(pulumi.StringPtrOutput)
}

// Disable automatic replication factor
// adjustment for multi-node services. By default, Aiven ensures all indexes are replicated at
// least to two nodes. Note: setting this to true increases a risk of data loss in case of
// virtual machine failure.
func (o GetElasticSearchElasticsearchUserConfigOutput) DisableReplicationFactorAdjustment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfig) *string { return v.DisableReplicationFactorAdjustment }).(pulumi.StringPtrOutput)
}

// Elasticsearch specific server provided values.
func (o GetElasticSearchElasticsearchUserConfigOutput) Elasticsearch() GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfig) *GetElasticSearchElasticsearchUserConfigElasticsearch {
		return v.Elasticsearch
	}).(GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput)
}

// Elasticsearch major version.
func (o GetElasticSearchElasticsearchUserConfigOutput) ElasticsearchVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfig) *string { return v.ElasticsearchVersion }).(pulumi.StringPtrOutput)
}

// Glob pattern and number of indexes matching that pattern to
// be kept.
func (o GetElasticSearchElasticsearchUserConfigOutput) IndexPatterns() GetElasticSearchElasticsearchUserConfigIndexPatternArrayOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfig) []GetElasticSearchElasticsearchUserConfigIndexPattern {
		return v.IndexPatterns
	}).(GetElasticSearchElasticsearchUserConfigIndexPatternArrayOutput)
}

// Template settings for all new indexe.
func (o GetElasticSearchElasticsearchUserConfigOutput) IndexTemplate() GetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfig) *GetElasticSearchElasticsearchUserConfigIndexTemplate {
		return v.IndexTemplate
	}).(GetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput)
}

// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
func (o GetElasticSearchElasticsearchUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// Allow clients to connect to kibana from the public internet for
// service nodes that are in a project VPC or another type of private network.
func (o GetElasticSearchElasticsearchUserConfigOutput) Kibana() GetElasticSearchElasticsearchUserConfigKibanaPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfig) *GetElasticSearchElasticsearchUserConfigKibana {
		return v.Kibana
	}).(GetElasticSearchElasticsearchUserConfigKibanaPtrOutput)
}

// Maximum number of indexes to keep before deleting the oldest one.
func (o GetElasticSearchElasticsearchUserConfigOutput) MaxIndexCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfig) *string { return v.MaxIndexCount }).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from private networks.
func (o GetElasticSearchElasticsearchUserConfigOutput) PrivateAccess() GetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfig) *GetElasticSearchElasticsearchUserConfigPrivateAccess {
		return v.PrivateAccess
	}).(GetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput)
}

// Allow access to selected service components through Privatelink
func (o GetElasticSearchElasticsearchUserConfigOutput) PrivatelinkAccess() GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfig) *GetElasticSearchElasticsearchUserConfigPrivatelinkAccess {
		return v.PrivatelinkAccess
	}).(GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput)
}

// Name of another project to fork a service from. This has
// effect only when a new service is being created.
func (o GetElasticSearchElasticsearchUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from the public Internet.
func (o GetElasticSearchElasticsearchUserConfigOutput) PublicAccess() GetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfig) *GetElasticSearchElasticsearchUserConfigPublicAccess {
		return v.PublicAccess
	}).(GetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput)
}

// Name of the basebackup to restore in forked service.
func (o GetElasticSearchElasticsearchUserConfigOutput) RecoveryBasebackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfig) *string { return v.RecoveryBasebackupName }).(pulumi.StringPtrOutput)
}

// Name of another service to fork from. This has effect
// only when a new service is being created.
func (o GetElasticSearchElasticsearchUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

type GetElasticSearchElasticsearchUserConfigElasticsearch struct {
	// Explicitly allow or block automatic
	// creation of indices. Defaults to true
	ActionAutoCreateIndexEnabled *string `pulumi:"actionAutoCreateIndexEnabled"`
	// Require explicit index names when deleting
	ActionDestructiveRequiresName *string `pulumi:"actionDestructiveRequiresName"`
	// Controls the number of shards allowed in the
	// cluster per data node
	ClusterMaxShardsPerNode *string `pulumi:"clusterMaxShardsPerNode"`
	// Maximum content length for HTTP requests to
	// the Elasticsearch HTTP API, in bytes.
	HttpMaxContentLength *string `pulumi:"httpMaxContentLength"`
	// The max size of allowed headers, in bytes.
	HttpMaxHeaderSize *string `pulumi:"httpMaxHeaderSize"`
	// The max length of an HTTP URL, in bytes.
	HttpMaxInitialLineLength *string `pulumi:"httpMaxInitialLineLength"`
	// Relative amount. Maximum amount of
	// heap memory used for field data cache. This is an expert setting; decreasing the
	// value too much will increase overhead of loading field data; too much memory used
	// for field data cache will decrease amount of heap available for other operations.
	IndicesFielddataCacheSize *string `pulumi:"indicesFielddataCacheSize"`
	// Percentage value. Default is 10%.
	// Total amount of heap used for indexing buffer, before writing segments to disk.
	// This is an expert setting. Too low value will slow down indexing; too high value
	// will increase indexing performance but causes performance issues for query performance.
	IndicesMemoryIndexBufferSize *string `pulumi:"indicesMemoryIndexBufferSize"`
	// Percentage value. Default is 10%.
	// Maximum amount of heap used for query cache. This is an expert setting.
	// Too low value will decrease query performance and increase performance for other
	// operations; too high value will cause issues with other Elasticsearch functionality.
	IndicesQueriesCacheSize *string `pulumi:"indicesQueriesCacheSize"`
	// Maximum number of clauses Lucene
	// BooleanQuery can have. The default value (1024) is relatively high, and increasing it
	// may cause performance issues. Investigate other approaches first before increasing this value.
	IndicesQueryBoolMaxClauseCount *string `pulumi:"indicesQueryBoolMaxClauseCount"`
	// Whitelisted addresses for reindexing.
	// Changing this value will cause all Elasticsearch instances to restart.
	ReindexRemoteWhitelists []string `pulumi:"reindexRemoteWhitelists"`
	// Maximum number of aggregation buckets allowed
	// in a single response. Elasticsearch default value is used when this is not defined.
	SearchMaxBuckets *string `pulumi:"searchMaxBuckets"`
	// Size for the thread pool queue.
	// See documentation for exact details.
	ThreadPoolAnalyzeQueueSize *string `pulumi:"threadPoolAnalyzeQueueSize"`
	// Size for the thread pool. See documentation
	// for exact details. Do note this may have maximum value depending on CPU count -
	// value is automatically lowered if set to higher than maximum value.
	ThreadPoolAnalyzeSize *string `pulumi:"threadPoolAnalyzeSize"`
	// Size for the thread pool. See
	// documentation for exact details. Do note this may have maximum value depending on
	// CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolForceMergeSize *string `pulumi:"threadPoolForceMergeSize"`
	// Size for the thread pool queue. See
	// documentation for exact details.
	ThreadPoolGetQueueSize *string `pulumi:"threadPoolGetQueueSize"`
	// Size for the thread pool. See documentation
	// for exact details. Do note this may have maximum value depending on CPU count -
	// value is automatically lowered if set to higher than maximum value.
	ThreadPoolGetSize *string `pulumi:"threadPoolGetSize"`
	// Size for the thread pool queue.
	// See documentation for exact details.
	ThreadPoolIndexQueueSize *string `pulumi:"threadPoolIndexQueueSize"`
	// Size for the thread pool. See documentation
	// for exact details. Do note this may have maximum value depending on CPU count -
	// value is automatically lowered if set to higher than maximum value.
	ThreadPoolIndexSize *string `pulumi:"threadPoolIndexSize"`
	// Size for the thread pool queue. See
	// documentation for exact details.
	ThreadPoolSearchQueueSize *string `pulumi:"threadPoolSearchQueueSize"`
	// Size for the thread pool. See documentation
	// for exact details. Do note this may have maximum value depending on CPU count - value
	// is automatically lowered if set to higher than maximum value.
	ThreadPoolSearchSize *string `pulumi:"threadPoolSearchSize"`
	// Size for the thread pool queue.
	// See documentation for exact details.
	ThreadPoolSearchThrottledQueueSize *string `pulumi:"threadPoolSearchThrottledQueueSize"`
	// Size for the thread pool. See
	// documentation for exact details. Do note this may have maximum value depending on
	// CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolSearchThrottledSize *string `pulumi:"threadPoolSearchThrottledSize"`
	// Size for the thread pool queue. See
	// documentation for exact details.
	ThreadPoolWriteQueueSize *string `pulumi:"threadPoolWriteQueueSize"`
	// Size for the thread pool. See documentation
	// for exact details. Do note this may have maximum value depending on CPU count - value
	// is automatically lowered if set to higher than maximum value.
	ThreadPoolWriteSize *string `pulumi:"threadPoolWriteSize"`
}

// GetElasticSearchElasticsearchUserConfigElasticsearchInput is an input type that accepts GetElasticSearchElasticsearchUserConfigElasticsearchArgs and GetElasticSearchElasticsearchUserConfigElasticsearchOutput values.
// You can construct a concrete instance of `GetElasticSearchElasticsearchUserConfigElasticsearchInput` via:
//
//          GetElasticSearchElasticsearchUserConfigElasticsearchArgs{...}
type GetElasticSearchElasticsearchUserConfigElasticsearchInput interface {
	pulumi.Input

	ToGetElasticSearchElasticsearchUserConfigElasticsearchOutput() GetElasticSearchElasticsearchUserConfigElasticsearchOutput
	ToGetElasticSearchElasticsearchUserConfigElasticsearchOutputWithContext(context.Context) GetElasticSearchElasticsearchUserConfigElasticsearchOutput
}

type GetElasticSearchElasticsearchUserConfigElasticsearchArgs struct {
	// Explicitly allow or block automatic
	// creation of indices. Defaults to true
	ActionAutoCreateIndexEnabled pulumi.StringPtrInput `pulumi:"actionAutoCreateIndexEnabled"`
	// Require explicit index names when deleting
	ActionDestructiveRequiresName pulumi.StringPtrInput `pulumi:"actionDestructiveRequiresName"`
	// Controls the number of shards allowed in the
	// cluster per data node
	ClusterMaxShardsPerNode pulumi.StringPtrInput `pulumi:"clusterMaxShardsPerNode"`
	// Maximum content length for HTTP requests to
	// the Elasticsearch HTTP API, in bytes.
	HttpMaxContentLength pulumi.StringPtrInput `pulumi:"httpMaxContentLength"`
	// The max size of allowed headers, in bytes.
	HttpMaxHeaderSize pulumi.StringPtrInput `pulumi:"httpMaxHeaderSize"`
	// The max length of an HTTP URL, in bytes.
	HttpMaxInitialLineLength pulumi.StringPtrInput `pulumi:"httpMaxInitialLineLength"`
	// Relative amount. Maximum amount of
	// heap memory used for field data cache. This is an expert setting; decreasing the
	// value too much will increase overhead of loading field data; too much memory used
	// for field data cache will decrease amount of heap available for other operations.
	IndicesFielddataCacheSize pulumi.StringPtrInput `pulumi:"indicesFielddataCacheSize"`
	// Percentage value. Default is 10%.
	// Total amount of heap used for indexing buffer, before writing segments to disk.
	// This is an expert setting. Too low value will slow down indexing; too high value
	// will increase indexing performance but causes performance issues for query performance.
	IndicesMemoryIndexBufferSize pulumi.StringPtrInput `pulumi:"indicesMemoryIndexBufferSize"`
	// Percentage value. Default is 10%.
	// Maximum amount of heap used for query cache. This is an expert setting.
	// Too low value will decrease query performance and increase performance for other
	// operations; too high value will cause issues with other Elasticsearch functionality.
	IndicesQueriesCacheSize pulumi.StringPtrInput `pulumi:"indicesQueriesCacheSize"`
	// Maximum number of clauses Lucene
	// BooleanQuery can have. The default value (1024) is relatively high, and increasing it
	// may cause performance issues. Investigate other approaches first before increasing this value.
	IndicesQueryBoolMaxClauseCount pulumi.StringPtrInput `pulumi:"indicesQueryBoolMaxClauseCount"`
	// Whitelisted addresses for reindexing.
	// Changing this value will cause all Elasticsearch instances to restart.
	ReindexRemoteWhitelists pulumi.StringArrayInput `pulumi:"reindexRemoteWhitelists"`
	// Maximum number of aggregation buckets allowed
	// in a single response. Elasticsearch default value is used when this is not defined.
	SearchMaxBuckets pulumi.StringPtrInput `pulumi:"searchMaxBuckets"`
	// Size for the thread pool queue.
	// See documentation for exact details.
	ThreadPoolAnalyzeQueueSize pulumi.StringPtrInput `pulumi:"threadPoolAnalyzeQueueSize"`
	// Size for the thread pool. See documentation
	// for exact details. Do note this may have maximum value depending on CPU count -
	// value is automatically lowered if set to higher than maximum value.
	ThreadPoolAnalyzeSize pulumi.StringPtrInput `pulumi:"threadPoolAnalyzeSize"`
	// Size for the thread pool. See
	// documentation for exact details. Do note this may have maximum value depending on
	// CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolForceMergeSize pulumi.StringPtrInput `pulumi:"threadPoolForceMergeSize"`
	// Size for the thread pool queue. See
	// documentation for exact details.
	ThreadPoolGetQueueSize pulumi.StringPtrInput `pulumi:"threadPoolGetQueueSize"`
	// Size for the thread pool. See documentation
	// for exact details. Do note this may have maximum value depending on CPU count -
	// value is automatically lowered if set to higher than maximum value.
	ThreadPoolGetSize pulumi.StringPtrInput `pulumi:"threadPoolGetSize"`
	// Size for the thread pool queue.
	// See documentation for exact details.
	ThreadPoolIndexQueueSize pulumi.StringPtrInput `pulumi:"threadPoolIndexQueueSize"`
	// Size for the thread pool. See documentation
	// for exact details. Do note this may have maximum value depending on CPU count -
	// value is automatically lowered if set to higher than maximum value.
	ThreadPoolIndexSize pulumi.StringPtrInput `pulumi:"threadPoolIndexSize"`
	// Size for the thread pool queue. See
	// documentation for exact details.
	ThreadPoolSearchQueueSize pulumi.StringPtrInput `pulumi:"threadPoolSearchQueueSize"`
	// Size for the thread pool. See documentation
	// for exact details. Do note this may have maximum value depending on CPU count - value
	// is automatically lowered if set to higher than maximum value.
	ThreadPoolSearchSize pulumi.StringPtrInput `pulumi:"threadPoolSearchSize"`
	// Size for the thread pool queue.
	// See documentation for exact details.
	ThreadPoolSearchThrottledQueueSize pulumi.StringPtrInput `pulumi:"threadPoolSearchThrottledQueueSize"`
	// Size for the thread pool. See
	// documentation for exact details. Do note this may have maximum value depending on
	// CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolSearchThrottledSize pulumi.StringPtrInput `pulumi:"threadPoolSearchThrottledSize"`
	// Size for the thread pool queue. See
	// documentation for exact details.
	ThreadPoolWriteQueueSize pulumi.StringPtrInput `pulumi:"threadPoolWriteQueueSize"`
	// Size for the thread pool. See documentation
	// for exact details. Do note this may have maximum value depending on CPU count - value
	// is automatically lowered if set to higher than maximum value.
	ThreadPoolWriteSize pulumi.StringPtrInput `pulumi:"threadPoolWriteSize"`
}

func (GetElasticSearchElasticsearchUserConfigElasticsearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticSearchElasticsearchUserConfigElasticsearch)(nil)).Elem()
}

func (i GetElasticSearchElasticsearchUserConfigElasticsearchArgs) ToGetElasticSearchElasticsearchUserConfigElasticsearchOutput() GetElasticSearchElasticsearchUserConfigElasticsearchOutput {
	return i.ToGetElasticSearchElasticsearchUserConfigElasticsearchOutputWithContext(context.Background())
}

func (i GetElasticSearchElasticsearchUserConfigElasticsearchArgs) ToGetElasticSearchElasticsearchUserConfigElasticsearchOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigElasticsearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchElasticsearchUserConfigElasticsearchOutput)
}

func (i GetElasticSearchElasticsearchUserConfigElasticsearchArgs) ToGetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput() GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput {
	return i.ToGetElasticSearchElasticsearchUserConfigElasticsearchPtrOutputWithContext(context.Background())
}

func (i GetElasticSearchElasticsearchUserConfigElasticsearchArgs) ToGetElasticSearchElasticsearchUserConfigElasticsearchPtrOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchElasticsearchUserConfigElasticsearchOutput).ToGetElasticSearchElasticsearchUserConfigElasticsearchPtrOutputWithContext(ctx)
}

// GetElasticSearchElasticsearchUserConfigElasticsearchPtrInput is an input type that accepts GetElasticSearchElasticsearchUserConfigElasticsearchArgs, GetElasticSearchElasticsearchUserConfigElasticsearchPtr and GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput values.
// You can construct a concrete instance of `GetElasticSearchElasticsearchUserConfigElasticsearchPtrInput` via:
//
//          GetElasticSearchElasticsearchUserConfigElasticsearchArgs{...}
//
//  or:
//
//          nil
type GetElasticSearchElasticsearchUserConfigElasticsearchPtrInput interface {
	pulumi.Input

	ToGetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput() GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput
	ToGetElasticSearchElasticsearchUserConfigElasticsearchPtrOutputWithContext(context.Context) GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput
}

type getElasticSearchElasticsearchUserConfigElasticsearchPtrType GetElasticSearchElasticsearchUserConfigElasticsearchArgs

func GetElasticSearchElasticsearchUserConfigElasticsearchPtr(v *GetElasticSearchElasticsearchUserConfigElasticsearchArgs) GetElasticSearchElasticsearchUserConfigElasticsearchPtrInput {
	return (*getElasticSearchElasticsearchUserConfigElasticsearchPtrType)(v)
}

func (*getElasticSearchElasticsearchUserConfigElasticsearchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetElasticSearchElasticsearchUserConfigElasticsearch)(nil)).Elem()
}

func (i *getElasticSearchElasticsearchUserConfigElasticsearchPtrType) ToGetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput() GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput {
	return i.ToGetElasticSearchElasticsearchUserConfigElasticsearchPtrOutputWithContext(context.Background())
}

func (i *getElasticSearchElasticsearchUserConfigElasticsearchPtrType) ToGetElasticSearchElasticsearchUserConfigElasticsearchPtrOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput)
}

type GetElasticSearchElasticsearchUserConfigElasticsearchOutput struct{ *pulumi.OutputState }

func (GetElasticSearchElasticsearchUserConfigElasticsearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticSearchElasticsearchUserConfigElasticsearch)(nil)).Elem()
}

func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) ToGetElasticSearchElasticsearchUserConfigElasticsearchOutput() GetElasticSearchElasticsearchUserConfigElasticsearchOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) ToGetElasticSearchElasticsearchUserConfigElasticsearchOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigElasticsearchOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) ToGetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput() GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput {
	return o.ToGetElasticSearchElasticsearchUserConfigElasticsearchPtrOutputWithContext(context.Background())
}

func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) ToGetElasticSearchElasticsearchUserConfigElasticsearchPtrOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigElasticsearch) *GetElasticSearchElasticsearchUserConfigElasticsearch {
		return &v
	}).(GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput)
}

// Explicitly allow or block automatic
// creation of indices. Defaults to true
func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) ActionAutoCreateIndexEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		return v.ActionAutoCreateIndexEnabled
	}).(pulumi.StringPtrOutput)
}

// Require explicit index names when deleting
func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) ActionDestructiveRequiresName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		return v.ActionDestructiveRequiresName
	}).(pulumi.StringPtrOutput)
}

// Controls the number of shards allowed in the
// cluster per data node
func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) ClusterMaxShardsPerNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.ClusterMaxShardsPerNode }).(pulumi.StringPtrOutput)
}

// Maximum content length for HTTP requests to
// the Elasticsearch HTTP API, in bytes.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) HttpMaxContentLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.HttpMaxContentLength }).(pulumi.StringPtrOutput)
}

// The max size of allowed headers, in bytes.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) HttpMaxHeaderSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.HttpMaxHeaderSize }).(pulumi.StringPtrOutput)
}

// The max length of an HTTP URL, in bytes.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) HttpMaxInitialLineLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		return v.HttpMaxInitialLineLength
	}).(pulumi.StringPtrOutput)
}

// Relative amount. Maximum amount of
// heap memory used for field data cache. This is an expert setting; decreasing the
// value too much will increase overhead of loading field data; too much memory used
// for field data cache will decrease amount of heap available for other operations.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) IndicesFielddataCacheSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		return v.IndicesFielddataCacheSize
	}).(pulumi.StringPtrOutput)
}

// Percentage value. Default is 10%.
// Total amount of heap used for indexing buffer, before writing segments to disk.
// This is an expert setting. Too low value will slow down indexing; too high value
// will increase indexing performance but causes performance issues for query performance.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) IndicesMemoryIndexBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		return v.IndicesMemoryIndexBufferSize
	}).(pulumi.StringPtrOutput)
}

// Percentage value. Default is 10%.
// Maximum amount of heap used for query cache. This is an expert setting.
// Too low value will decrease query performance and increase performance for other
// operations; too high value will cause issues with other Elasticsearch functionality.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) IndicesQueriesCacheSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.IndicesQueriesCacheSize }).(pulumi.StringPtrOutput)
}

// Maximum number of clauses Lucene
// BooleanQuery can have. The default value (1024) is relatively high, and increasing it
// may cause performance issues. Investigate other approaches first before increasing this value.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) IndicesQueryBoolMaxClauseCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		return v.IndicesQueryBoolMaxClauseCount
	}).(pulumi.StringPtrOutput)
}

// Whitelisted addresses for reindexing.
// Changing this value will cause all Elasticsearch instances to restart.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) ReindexRemoteWhitelists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigElasticsearch) []string {
		return v.ReindexRemoteWhitelists
	}).(pulumi.StringArrayOutput)
}

// Maximum number of aggregation buckets allowed
// in a single response. Elasticsearch default value is used when this is not defined.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) SearchMaxBuckets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.SearchMaxBuckets }).(pulumi.StringPtrOutput)
}

// Size for the thread pool queue.
// See documentation for exact details.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) ThreadPoolAnalyzeQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		return v.ThreadPoolAnalyzeQueueSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See documentation
// for exact details. Do note this may have maximum value depending on CPU count -
// value is automatically lowered if set to higher than maximum value.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) ThreadPoolAnalyzeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolAnalyzeSize }).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See
// documentation for exact details. Do note this may have maximum value depending on
// CPU count - value is automatically lowered if set to higher than maximum value.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) ThreadPoolForceMergeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		return v.ThreadPoolForceMergeSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool queue. See
// documentation for exact details.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) ThreadPoolGetQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolGetQueueSize }).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See documentation
// for exact details. Do note this may have maximum value depending on CPU count -
// value is automatically lowered if set to higher than maximum value.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) ThreadPoolGetSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolGetSize }).(pulumi.StringPtrOutput)
}

// Size for the thread pool queue.
// See documentation for exact details.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) ThreadPoolIndexQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		return v.ThreadPoolIndexQueueSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See documentation
// for exact details. Do note this may have maximum value depending on CPU count -
// value is automatically lowered if set to higher than maximum value.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) ThreadPoolIndexSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolIndexSize }).(pulumi.StringPtrOutput)
}

// Size for the thread pool queue. See
// documentation for exact details.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) ThreadPoolSearchQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		return v.ThreadPoolSearchQueueSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See documentation
// for exact details. Do note this may have maximum value depending on CPU count - value
// is automatically lowered if set to higher than maximum value.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) ThreadPoolSearchSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolSearchSize }).(pulumi.StringPtrOutput)
}

// Size for the thread pool queue.
// See documentation for exact details.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) ThreadPoolSearchThrottledQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		return v.ThreadPoolSearchThrottledQueueSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See
// documentation for exact details. Do note this may have maximum value depending on
// CPU count - value is automatically lowered if set to higher than maximum value.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) ThreadPoolSearchThrottledSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		return v.ThreadPoolSearchThrottledSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool queue. See
// documentation for exact details.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) ThreadPoolWriteQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		return v.ThreadPoolWriteQueueSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See documentation
// for exact details. Do note this may have maximum value depending on CPU count - value
// is automatically lowered if set to higher than maximum value.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchOutput) ThreadPoolWriteSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolWriteSize }).(pulumi.StringPtrOutput)
}

type GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput struct{ *pulumi.OutputState }

func (GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetElasticSearchElasticsearchUserConfigElasticsearch)(nil)).Elem()
}

func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ToGetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput() GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ToGetElasticSearchElasticsearchUserConfigElasticsearchPtrOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) Elem() GetElasticSearchElasticsearchUserConfigElasticsearchOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigElasticsearch) GetElasticSearchElasticsearchUserConfigElasticsearch {
		return *v
	}).(GetElasticSearchElasticsearchUserConfigElasticsearchOutput)
}

// Explicitly allow or block automatic
// creation of indices. Defaults to true
func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ActionAutoCreateIndexEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ActionAutoCreateIndexEnabled
	}).(pulumi.StringPtrOutput)
}

// Require explicit index names when deleting
func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ActionDestructiveRequiresName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ActionDestructiveRequiresName
	}).(pulumi.StringPtrOutput)
}

// Controls the number of shards allowed in the
// cluster per data node
func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ClusterMaxShardsPerNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ClusterMaxShardsPerNode
	}).(pulumi.StringPtrOutput)
}

// Maximum content length for HTTP requests to
// the Elasticsearch HTTP API, in bytes.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) HttpMaxContentLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.HttpMaxContentLength
	}).(pulumi.StringPtrOutput)
}

// The max size of allowed headers, in bytes.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) HttpMaxHeaderSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.HttpMaxHeaderSize
	}).(pulumi.StringPtrOutput)
}

// The max length of an HTTP URL, in bytes.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) HttpMaxInitialLineLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.HttpMaxInitialLineLength
	}).(pulumi.StringPtrOutput)
}

// Relative amount. Maximum amount of
// heap memory used for field data cache. This is an expert setting; decreasing the
// value too much will increase overhead of loading field data; too much memory used
// for field data cache will decrease amount of heap available for other operations.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) IndicesFielddataCacheSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.IndicesFielddataCacheSize
	}).(pulumi.StringPtrOutput)
}

// Percentage value. Default is 10%.
// Total amount of heap used for indexing buffer, before writing segments to disk.
// This is an expert setting. Too low value will slow down indexing; too high value
// will increase indexing performance but causes performance issues for query performance.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) IndicesMemoryIndexBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.IndicesMemoryIndexBufferSize
	}).(pulumi.StringPtrOutput)
}

// Percentage value. Default is 10%.
// Maximum amount of heap used for query cache. This is an expert setting.
// Too low value will decrease query performance and increase performance for other
// operations; too high value will cause issues with other Elasticsearch functionality.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) IndicesQueriesCacheSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.IndicesQueriesCacheSize
	}).(pulumi.StringPtrOutput)
}

// Maximum number of clauses Lucene
// BooleanQuery can have. The default value (1024) is relatively high, and increasing it
// may cause performance issues. Investigate other approaches first before increasing this value.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) IndicesQueryBoolMaxClauseCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.IndicesQueryBoolMaxClauseCount
	}).(pulumi.StringPtrOutput)
}

// Whitelisted addresses for reindexing.
// Changing this value will cause all Elasticsearch instances to restart.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ReindexRemoteWhitelists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigElasticsearch) []string {
		if v == nil {
			return nil
		}
		return v.ReindexRemoteWhitelists
	}).(pulumi.StringArrayOutput)
}

// Maximum number of aggregation buckets allowed
// in a single response. Elasticsearch default value is used when this is not defined.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) SearchMaxBuckets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.SearchMaxBuckets
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool queue.
// See documentation for exact details.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolAnalyzeQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolAnalyzeQueueSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See documentation
// for exact details. Do note this may have maximum value depending on CPU count -
// value is automatically lowered if set to higher than maximum value.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolAnalyzeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolAnalyzeSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See
// documentation for exact details. Do note this may have maximum value depending on
// CPU count - value is automatically lowered if set to higher than maximum value.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolForceMergeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolForceMergeSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool queue. See
// documentation for exact details.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolGetQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolGetQueueSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See documentation
// for exact details. Do note this may have maximum value depending on CPU count -
// value is automatically lowered if set to higher than maximum value.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolGetSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolGetSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool queue.
// See documentation for exact details.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolIndexQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolIndexQueueSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See documentation
// for exact details. Do note this may have maximum value depending on CPU count -
// value is automatically lowered if set to higher than maximum value.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolIndexSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolIndexSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool queue. See
// documentation for exact details.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolSearchQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolSearchQueueSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See documentation
// for exact details. Do note this may have maximum value depending on CPU count - value
// is automatically lowered if set to higher than maximum value.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolSearchSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolSearchSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool queue.
// See documentation for exact details.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolSearchThrottledQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolSearchThrottledQueueSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See
// documentation for exact details. Do note this may have maximum value depending on
// CPU count - value is automatically lowered if set to higher than maximum value.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolSearchThrottledSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolSearchThrottledSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool queue. See
// documentation for exact details.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolWriteQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolWriteQueueSize
	}).(pulumi.StringPtrOutput)
}

// Size for the thread pool. See documentation
// for exact details. Do note this may have maximum value depending on CPU count - value
// is automatically lowered if set to higher than maximum value.
func (o GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolWriteSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolWriteSize
	}).(pulumi.StringPtrOutput)
}

type GetElasticSearchElasticsearchUserConfigIndexPattern struct {
	// Maximum number of indexes to keep before deleting the oldest one.
	MaxIndexCount *string `pulumi:"maxIndexCount"`
	// Must consist of alpha-numeric characters, dashes, underscores,
	// dots and glob characters (* and ?)
	Pattern *string `pulumi:"pattern"`
	// Deletion sorting algorithm
	SortingAlgorithm *string `pulumi:"sortingAlgorithm"`
}

// GetElasticSearchElasticsearchUserConfigIndexPatternInput is an input type that accepts GetElasticSearchElasticsearchUserConfigIndexPatternArgs and GetElasticSearchElasticsearchUserConfigIndexPatternOutput values.
// You can construct a concrete instance of `GetElasticSearchElasticsearchUserConfigIndexPatternInput` via:
//
//          GetElasticSearchElasticsearchUserConfigIndexPatternArgs{...}
type GetElasticSearchElasticsearchUserConfigIndexPatternInput interface {
	pulumi.Input

	ToGetElasticSearchElasticsearchUserConfigIndexPatternOutput() GetElasticSearchElasticsearchUserConfigIndexPatternOutput
	ToGetElasticSearchElasticsearchUserConfigIndexPatternOutputWithContext(context.Context) GetElasticSearchElasticsearchUserConfigIndexPatternOutput
}

type GetElasticSearchElasticsearchUserConfigIndexPatternArgs struct {
	// Maximum number of indexes to keep before deleting the oldest one.
	MaxIndexCount pulumi.StringPtrInput `pulumi:"maxIndexCount"`
	// Must consist of alpha-numeric characters, dashes, underscores,
	// dots and glob characters (* and ?)
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
	// Deletion sorting algorithm
	SortingAlgorithm pulumi.StringPtrInput `pulumi:"sortingAlgorithm"`
}

func (GetElasticSearchElasticsearchUserConfigIndexPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticSearchElasticsearchUserConfigIndexPattern)(nil)).Elem()
}

func (i GetElasticSearchElasticsearchUserConfigIndexPatternArgs) ToGetElasticSearchElasticsearchUserConfigIndexPatternOutput() GetElasticSearchElasticsearchUserConfigIndexPatternOutput {
	return i.ToGetElasticSearchElasticsearchUserConfigIndexPatternOutputWithContext(context.Background())
}

func (i GetElasticSearchElasticsearchUserConfigIndexPatternArgs) ToGetElasticSearchElasticsearchUserConfigIndexPatternOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigIndexPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchElasticsearchUserConfigIndexPatternOutput)
}

// GetElasticSearchElasticsearchUserConfigIndexPatternArrayInput is an input type that accepts GetElasticSearchElasticsearchUserConfigIndexPatternArray and GetElasticSearchElasticsearchUserConfigIndexPatternArrayOutput values.
// You can construct a concrete instance of `GetElasticSearchElasticsearchUserConfigIndexPatternArrayInput` via:
//
//          GetElasticSearchElasticsearchUserConfigIndexPatternArray{ GetElasticSearchElasticsearchUserConfigIndexPatternArgs{...} }
type GetElasticSearchElasticsearchUserConfigIndexPatternArrayInput interface {
	pulumi.Input

	ToGetElasticSearchElasticsearchUserConfigIndexPatternArrayOutput() GetElasticSearchElasticsearchUserConfigIndexPatternArrayOutput
	ToGetElasticSearchElasticsearchUserConfigIndexPatternArrayOutputWithContext(context.Context) GetElasticSearchElasticsearchUserConfigIndexPatternArrayOutput
}

type GetElasticSearchElasticsearchUserConfigIndexPatternArray []GetElasticSearchElasticsearchUserConfigIndexPatternInput

func (GetElasticSearchElasticsearchUserConfigIndexPatternArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElasticSearchElasticsearchUserConfigIndexPattern)(nil)).Elem()
}

func (i GetElasticSearchElasticsearchUserConfigIndexPatternArray) ToGetElasticSearchElasticsearchUserConfigIndexPatternArrayOutput() GetElasticSearchElasticsearchUserConfigIndexPatternArrayOutput {
	return i.ToGetElasticSearchElasticsearchUserConfigIndexPatternArrayOutputWithContext(context.Background())
}

func (i GetElasticSearchElasticsearchUserConfigIndexPatternArray) ToGetElasticSearchElasticsearchUserConfigIndexPatternArrayOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigIndexPatternArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchElasticsearchUserConfigIndexPatternArrayOutput)
}

type GetElasticSearchElasticsearchUserConfigIndexPatternOutput struct{ *pulumi.OutputState }

func (GetElasticSearchElasticsearchUserConfigIndexPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticSearchElasticsearchUserConfigIndexPattern)(nil)).Elem()
}

func (o GetElasticSearchElasticsearchUserConfigIndexPatternOutput) ToGetElasticSearchElasticsearchUserConfigIndexPatternOutput() GetElasticSearchElasticsearchUserConfigIndexPatternOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigIndexPatternOutput) ToGetElasticSearchElasticsearchUserConfigIndexPatternOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigIndexPatternOutput {
	return o
}

// Maximum number of indexes to keep before deleting the oldest one.
func (o GetElasticSearchElasticsearchUserConfigIndexPatternOutput) MaxIndexCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigIndexPattern) *string { return v.MaxIndexCount }).(pulumi.StringPtrOutput)
}

// Must consist of alpha-numeric characters, dashes, underscores,
// dots and glob characters (* and ?)
func (o GetElasticSearchElasticsearchUserConfigIndexPatternOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigIndexPattern) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// Deletion sorting algorithm
func (o GetElasticSearchElasticsearchUserConfigIndexPatternOutput) SortingAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigIndexPattern) *string { return v.SortingAlgorithm }).(pulumi.StringPtrOutput)
}

type GetElasticSearchElasticsearchUserConfigIndexPatternArrayOutput struct{ *pulumi.OutputState }

func (GetElasticSearchElasticsearchUserConfigIndexPatternArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElasticSearchElasticsearchUserConfigIndexPattern)(nil)).Elem()
}

func (o GetElasticSearchElasticsearchUserConfigIndexPatternArrayOutput) ToGetElasticSearchElasticsearchUserConfigIndexPatternArrayOutput() GetElasticSearchElasticsearchUserConfigIndexPatternArrayOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigIndexPatternArrayOutput) ToGetElasticSearchElasticsearchUserConfigIndexPatternArrayOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigIndexPatternArrayOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigIndexPatternArrayOutput) Index(i pulumi.IntInput) GetElasticSearchElasticsearchUserConfigIndexPatternOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetElasticSearchElasticsearchUserConfigIndexPattern {
		return vs[0].([]GetElasticSearchElasticsearchUserConfigIndexPattern)[vs[1].(int)]
	}).(GetElasticSearchElasticsearchUserConfigIndexPatternOutput)
}

type GetElasticSearchElasticsearchUserConfigIndexTemplate struct {
	// The maximum number of nested JSON objects that
	// a single document can contain across all nested types. This limit helps to prevent out of
	// memory errors when a document contains too many nested objects. Default is 10000.
	MappingNestedObjectsLimit *string `pulumi:"mappingNestedObjectsLimit"`
	// The number of replicas each primary shard has.
	NumberOfReplicas *string `pulumi:"numberOfReplicas"`
	// The number of primary shards that an index should have.
	NumberOfShards *string `pulumi:"numberOfShards"`
}

// GetElasticSearchElasticsearchUserConfigIndexTemplateInput is an input type that accepts GetElasticSearchElasticsearchUserConfigIndexTemplateArgs and GetElasticSearchElasticsearchUserConfigIndexTemplateOutput values.
// You can construct a concrete instance of `GetElasticSearchElasticsearchUserConfigIndexTemplateInput` via:
//
//          GetElasticSearchElasticsearchUserConfigIndexTemplateArgs{...}
type GetElasticSearchElasticsearchUserConfigIndexTemplateInput interface {
	pulumi.Input

	ToGetElasticSearchElasticsearchUserConfigIndexTemplateOutput() GetElasticSearchElasticsearchUserConfigIndexTemplateOutput
	ToGetElasticSearchElasticsearchUserConfigIndexTemplateOutputWithContext(context.Context) GetElasticSearchElasticsearchUserConfigIndexTemplateOutput
}

type GetElasticSearchElasticsearchUserConfigIndexTemplateArgs struct {
	// The maximum number of nested JSON objects that
	// a single document can contain across all nested types. This limit helps to prevent out of
	// memory errors when a document contains too many nested objects. Default is 10000.
	MappingNestedObjectsLimit pulumi.StringPtrInput `pulumi:"mappingNestedObjectsLimit"`
	// The number of replicas each primary shard has.
	NumberOfReplicas pulumi.StringPtrInput `pulumi:"numberOfReplicas"`
	// The number of primary shards that an index should have.
	NumberOfShards pulumi.StringPtrInput `pulumi:"numberOfShards"`
}

func (GetElasticSearchElasticsearchUserConfigIndexTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticSearchElasticsearchUserConfigIndexTemplate)(nil)).Elem()
}

func (i GetElasticSearchElasticsearchUserConfigIndexTemplateArgs) ToGetElasticSearchElasticsearchUserConfigIndexTemplateOutput() GetElasticSearchElasticsearchUserConfigIndexTemplateOutput {
	return i.ToGetElasticSearchElasticsearchUserConfigIndexTemplateOutputWithContext(context.Background())
}

func (i GetElasticSearchElasticsearchUserConfigIndexTemplateArgs) ToGetElasticSearchElasticsearchUserConfigIndexTemplateOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigIndexTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchElasticsearchUserConfigIndexTemplateOutput)
}

func (i GetElasticSearchElasticsearchUserConfigIndexTemplateArgs) ToGetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput() GetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput {
	return i.ToGetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutputWithContext(context.Background())
}

func (i GetElasticSearchElasticsearchUserConfigIndexTemplateArgs) ToGetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchElasticsearchUserConfigIndexTemplateOutput).ToGetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutputWithContext(ctx)
}

// GetElasticSearchElasticsearchUserConfigIndexTemplatePtrInput is an input type that accepts GetElasticSearchElasticsearchUserConfigIndexTemplateArgs, GetElasticSearchElasticsearchUserConfigIndexTemplatePtr and GetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput values.
// You can construct a concrete instance of `GetElasticSearchElasticsearchUserConfigIndexTemplatePtrInput` via:
//
//          GetElasticSearchElasticsearchUserConfigIndexTemplateArgs{...}
//
//  or:
//
//          nil
type GetElasticSearchElasticsearchUserConfigIndexTemplatePtrInput interface {
	pulumi.Input

	ToGetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput() GetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput
	ToGetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutputWithContext(context.Context) GetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput
}

type getElasticSearchElasticsearchUserConfigIndexTemplatePtrType GetElasticSearchElasticsearchUserConfigIndexTemplateArgs

func GetElasticSearchElasticsearchUserConfigIndexTemplatePtr(v *GetElasticSearchElasticsearchUserConfigIndexTemplateArgs) GetElasticSearchElasticsearchUserConfigIndexTemplatePtrInput {
	return (*getElasticSearchElasticsearchUserConfigIndexTemplatePtrType)(v)
}

func (*getElasticSearchElasticsearchUserConfigIndexTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetElasticSearchElasticsearchUserConfigIndexTemplate)(nil)).Elem()
}

func (i *getElasticSearchElasticsearchUserConfigIndexTemplatePtrType) ToGetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput() GetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput {
	return i.ToGetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutputWithContext(context.Background())
}

func (i *getElasticSearchElasticsearchUserConfigIndexTemplatePtrType) ToGetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput)
}

type GetElasticSearchElasticsearchUserConfigIndexTemplateOutput struct{ *pulumi.OutputState }

func (GetElasticSearchElasticsearchUserConfigIndexTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticSearchElasticsearchUserConfigIndexTemplate)(nil)).Elem()
}

func (o GetElasticSearchElasticsearchUserConfigIndexTemplateOutput) ToGetElasticSearchElasticsearchUserConfigIndexTemplateOutput() GetElasticSearchElasticsearchUserConfigIndexTemplateOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigIndexTemplateOutput) ToGetElasticSearchElasticsearchUserConfigIndexTemplateOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigIndexTemplateOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigIndexTemplateOutput) ToGetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput() GetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput {
	return o.ToGetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutputWithContext(context.Background())
}

func (o GetElasticSearchElasticsearchUserConfigIndexTemplateOutput) ToGetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigIndexTemplate) *GetElasticSearchElasticsearchUserConfigIndexTemplate {
		return &v
	}).(GetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput)
}

// The maximum number of nested JSON objects that
// a single document can contain across all nested types. This limit helps to prevent out of
// memory errors when a document contains too many nested objects. Default is 10000.
func (o GetElasticSearchElasticsearchUserConfigIndexTemplateOutput) MappingNestedObjectsLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigIndexTemplate) *string {
		return v.MappingNestedObjectsLimit
	}).(pulumi.StringPtrOutput)
}

// The number of replicas each primary shard has.
func (o GetElasticSearchElasticsearchUserConfigIndexTemplateOutput) NumberOfReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigIndexTemplate) *string { return v.NumberOfReplicas }).(pulumi.StringPtrOutput)
}

// The number of primary shards that an index should have.
func (o GetElasticSearchElasticsearchUserConfigIndexTemplateOutput) NumberOfShards() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigIndexTemplate) *string { return v.NumberOfShards }).(pulumi.StringPtrOutput)
}

type GetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput struct{ *pulumi.OutputState }

func (GetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetElasticSearchElasticsearchUserConfigIndexTemplate)(nil)).Elem()
}

func (o GetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput) ToGetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput() GetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput) ToGetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput) Elem() GetElasticSearchElasticsearchUserConfigIndexTemplateOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigIndexTemplate) GetElasticSearchElasticsearchUserConfigIndexTemplate {
		return *v
	}).(GetElasticSearchElasticsearchUserConfigIndexTemplateOutput)
}

// The maximum number of nested JSON objects that
// a single document can contain across all nested types. This limit helps to prevent out of
// memory errors when a document contains too many nested objects. Default is 10000.
func (o GetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput) MappingNestedObjectsLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigIndexTemplate) *string {
		if v == nil {
			return nil
		}
		return v.MappingNestedObjectsLimit
	}).(pulumi.StringPtrOutput)
}

// The number of replicas each primary shard has.
func (o GetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput) NumberOfReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigIndexTemplate) *string {
		if v == nil {
			return nil
		}
		return v.NumberOfReplicas
	}).(pulumi.StringPtrOutput)
}

// The number of primary shards that an index should have.
func (o GetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput) NumberOfShards() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigIndexTemplate) *string {
		if v == nil {
			return nil
		}
		return v.NumberOfShards
	}).(pulumi.StringPtrOutput)
}

type GetElasticSearchElasticsearchUserConfigKibana struct {
	// Timeout in milliseconds for requests
	// made by Kibana towards Elasticsearch.
	ElasticsearchRequestTimeout *string `pulumi:"elasticsearchRequestTimeout"`
	// Enable or disable Kibana.
	Enabled *string `pulumi:"enabled"`
	// Limits the maximum amount of memory (in MiB) the
	// Kibana process can use. This sets the maxOldSpaceSize option of the nodejs running
	// the Kibana. Note: the memory reserved by Kibana is not available for Elasticsearch.
	MaxOldSpaceSize *string `pulumi:"maxOldSpaceSize"`
}

// GetElasticSearchElasticsearchUserConfigKibanaInput is an input type that accepts GetElasticSearchElasticsearchUserConfigKibanaArgs and GetElasticSearchElasticsearchUserConfigKibanaOutput values.
// You can construct a concrete instance of `GetElasticSearchElasticsearchUserConfigKibanaInput` via:
//
//          GetElasticSearchElasticsearchUserConfigKibanaArgs{...}
type GetElasticSearchElasticsearchUserConfigKibanaInput interface {
	pulumi.Input

	ToGetElasticSearchElasticsearchUserConfigKibanaOutput() GetElasticSearchElasticsearchUserConfigKibanaOutput
	ToGetElasticSearchElasticsearchUserConfigKibanaOutputWithContext(context.Context) GetElasticSearchElasticsearchUserConfigKibanaOutput
}

type GetElasticSearchElasticsearchUserConfigKibanaArgs struct {
	// Timeout in milliseconds for requests
	// made by Kibana towards Elasticsearch.
	ElasticsearchRequestTimeout pulumi.StringPtrInput `pulumi:"elasticsearchRequestTimeout"`
	// Enable or disable Kibana.
	Enabled pulumi.StringPtrInput `pulumi:"enabled"`
	// Limits the maximum amount of memory (in MiB) the
	// Kibana process can use. This sets the maxOldSpaceSize option of the nodejs running
	// the Kibana. Note: the memory reserved by Kibana is not available for Elasticsearch.
	MaxOldSpaceSize pulumi.StringPtrInput `pulumi:"maxOldSpaceSize"`
}

func (GetElasticSearchElasticsearchUserConfigKibanaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticSearchElasticsearchUserConfigKibana)(nil)).Elem()
}

func (i GetElasticSearchElasticsearchUserConfigKibanaArgs) ToGetElasticSearchElasticsearchUserConfigKibanaOutput() GetElasticSearchElasticsearchUserConfigKibanaOutput {
	return i.ToGetElasticSearchElasticsearchUserConfigKibanaOutputWithContext(context.Background())
}

func (i GetElasticSearchElasticsearchUserConfigKibanaArgs) ToGetElasticSearchElasticsearchUserConfigKibanaOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigKibanaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchElasticsearchUserConfigKibanaOutput)
}

func (i GetElasticSearchElasticsearchUserConfigKibanaArgs) ToGetElasticSearchElasticsearchUserConfigKibanaPtrOutput() GetElasticSearchElasticsearchUserConfigKibanaPtrOutput {
	return i.ToGetElasticSearchElasticsearchUserConfigKibanaPtrOutputWithContext(context.Background())
}

func (i GetElasticSearchElasticsearchUserConfigKibanaArgs) ToGetElasticSearchElasticsearchUserConfigKibanaPtrOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigKibanaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchElasticsearchUserConfigKibanaOutput).ToGetElasticSearchElasticsearchUserConfigKibanaPtrOutputWithContext(ctx)
}

// GetElasticSearchElasticsearchUserConfigKibanaPtrInput is an input type that accepts GetElasticSearchElasticsearchUserConfigKibanaArgs, GetElasticSearchElasticsearchUserConfigKibanaPtr and GetElasticSearchElasticsearchUserConfigKibanaPtrOutput values.
// You can construct a concrete instance of `GetElasticSearchElasticsearchUserConfigKibanaPtrInput` via:
//
//          GetElasticSearchElasticsearchUserConfigKibanaArgs{...}
//
//  or:
//
//          nil
type GetElasticSearchElasticsearchUserConfigKibanaPtrInput interface {
	pulumi.Input

	ToGetElasticSearchElasticsearchUserConfigKibanaPtrOutput() GetElasticSearchElasticsearchUserConfigKibanaPtrOutput
	ToGetElasticSearchElasticsearchUserConfigKibanaPtrOutputWithContext(context.Context) GetElasticSearchElasticsearchUserConfigKibanaPtrOutput
}

type getElasticSearchElasticsearchUserConfigKibanaPtrType GetElasticSearchElasticsearchUserConfigKibanaArgs

func GetElasticSearchElasticsearchUserConfigKibanaPtr(v *GetElasticSearchElasticsearchUserConfigKibanaArgs) GetElasticSearchElasticsearchUserConfigKibanaPtrInput {
	return (*getElasticSearchElasticsearchUserConfigKibanaPtrType)(v)
}

func (*getElasticSearchElasticsearchUserConfigKibanaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetElasticSearchElasticsearchUserConfigKibana)(nil)).Elem()
}

func (i *getElasticSearchElasticsearchUserConfigKibanaPtrType) ToGetElasticSearchElasticsearchUserConfigKibanaPtrOutput() GetElasticSearchElasticsearchUserConfigKibanaPtrOutput {
	return i.ToGetElasticSearchElasticsearchUserConfigKibanaPtrOutputWithContext(context.Background())
}

func (i *getElasticSearchElasticsearchUserConfigKibanaPtrType) ToGetElasticSearchElasticsearchUserConfigKibanaPtrOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigKibanaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchElasticsearchUserConfigKibanaPtrOutput)
}

type GetElasticSearchElasticsearchUserConfigKibanaOutput struct{ *pulumi.OutputState }

func (GetElasticSearchElasticsearchUserConfigKibanaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticSearchElasticsearchUserConfigKibana)(nil)).Elem()
}

func (o GetElasticSearchElasticsearchUserConfigKibanaOutput) ToGetElasticSearchElasticsearchUserConfigKibanaOutput() GetElasticSearchElasticsearchUserConfigKibanaOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigKibanaOutput) ToGetElasticSearchElasticsearchUserConfigKibanaOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigKibanaOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigKibanaOutput) ToGetElasticSearchElasticsearchUserConfigKibanaPtrOutput() GetElasticSearchElasticsearchUserConfigKibanaPtrOutput {
	return o.ToGetElasticSearchElasticsearchUserConfigKibanaPtrOutputWithContext(context.Background())
}

func (o GetElasticSearchElasticsearchUserConfigKibanaOutput) ToGetElasticSearchElasticsearchUserConfigKibanaPtrOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigKibanaPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigKibana) *GetElasticSearchElasticsearchUserConfigKibana {
		return &v
	}).(GetElasticSearchElasticsearchUserConfigKibanaPtrOutput)
}

// Timeout in milliseconds for requests
// made by Kibana towards Elasticsearch.
func (o GetElasticSearchElasticsearchUserConfigKibanaOutput) ElasticsearchRequestTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigKibana) *string { return v.ElasticsearchRequestTimeout }).(pulumi.StringPtrOutput)
}

// Enable or disable Kibana.
func (o GetElasticSearchElasticsearchUserConfigKibanaOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigKibana) *string { return v.Enabled }).(pulumi.StringPtrOutput)
}

// Limits the maximum amount of memory (in MiB) the
// Kibana process can use. This sets the maxOldSpaceSize option of the nodejs running
// the Kibana. Note: the memory reserved by Kibana is not available for Elasticsearch.
func (o GetElasticSearchElasticsearchUserConfigKibanaOutput) MaxOldSpaceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigKibana) *string { return v.MaxOldSpaceSize }).(pulumi.StringPtrOutput)
}

type GetElasticSearchElasticsearchUserConfigKibanaPtrOutput struct{ *pulumi.OutputState }

func (GetElasticSearchElasticsearchUserConfigKibanaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetElasticSearchElasticsearchUserConfigKibana)(nil)).Elem()
}

func (o GetElasticSearchElasticsearchUserConfigKibanaPtrOutput) ToGetElasticSearchElasticsearchUserConfigKibanaPtrOutput() GetElasticSearchElasticsearchUserConfigKibanaPtrOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigKibanaPtrOutput) ToGetElasticSearchElasticsearchUserConfigKibanaPtrOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigKibanaPtrOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigKibanaPtrOutput) Elem() GetElasticSearchElasticsearchUserConfigKibanaOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigKibana) GetElasticSearchElasticsearchUserConfigKibana {
		return *v
	}).(GetElasticSearchElasticsearchUserConfigKibanaOutput)
}

// Timeout in milliseconds for requests
// made by Kibana towards Elasticsearch.
func (o GetElasticSearchElasticsearchUserConfigKibanaPtrOutput) ElasticsearchRequestTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigKibana) *string {
		if v == nil {
			return nil
		}
		return v.ElasticsearchRequestTimeout
	}).(pulumi.StringPtrOutput)
}

// Enable or disable Kibana.
func (o GetElasticSearchElasticsearchUserConfigKibanaPtrOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigKibana) *string {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.StringPtrOutput)
}

// Limits the maximum amount of memory (in MiB) the
// Kibana process can use. This sets the maxOldSpaceSize option of the nodejs running
// the Kibana. Note: the memory reserved by Kibana is not available for Elasticsearch.
func (o GetElasticSearchElasticsearchUserConfigKibanaPtrOutput) MaxOldSpaceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigKibana) *string {
		if v == nil {
			return nil
		}
		return v.MaxOldSpaceSize
	}).(pulumi.StringPtrOutput)
}

type GetElasticSearchElasticsearchUserConfigPrivateAccess struct {
	// Elasticsearch specific server provided values.
	Elasticsearch *string `pulumi:"elasticsearch"`
	// Allow clients to connect to kibana from the public internet for
	// service nodes that are in a project VPC or another type of private network.
	Kibana *string `pulumi:"kibana"`
	// Allow clients to connect to prometheus from the public
	// internet for service nodes that are in a project VPC or another type of private network.
	Prometheus *string `pulumi:"prometheus"`
}

// GetElasticSearchElasticsearchUserConfigPrivateAccessInput is an input type that accepts GetElasticSearchElasticsearchUserConfigPrivateAccessArgs and GetElasticSearchElasticsearchUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `GetElasticSearchElasticsearchUserConfigPrivateAccessInput` via:
//
//          GetElasticSearchElasticsearchUserConfigPrivateAccessArgs{...}
type GetElasticSearchElasticsearchUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToGetElasticSearchElasticsearchUserConfigPrivateAccessOutput() GetElasticSearchElasticsearchUserConfigPrivateAccessOutput
	ToGetElasticSearchElasticsearchUserConfigPrivateAccessOutputWithContext(context.Context) GetElasticSearchElasticsearchUserConfigPrivateAccessOutput
}

type GetElasticSearchElasticsearchUserConfigPrivateAccessArgs struct {
	// Elasticsearch specific server provided values.
	Elasticsearch pulumi.StringPtrInput `pulumi:"elasticsearch"`
	// Allow clients to connect to kibana from the public internet for
	// service nodes that are in a project VPC or another type of private network.
	Kibana pulumi.StringPtrInput `pulumi:"kibana"`
	// Allow clients to connect to prometheus from the public
	// internet for service nodes that are in a project VPC or another type of private network.
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (GetElasticSearchElasticsearchUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticSearchElasticsearchUserConfigPrivateAccess)(nil)).Elem()
}

func (i GetElasticSearchElasticsearchUserConfigPrivateAccessArgs) ToGetElasticSearchElasticsearchUserConfigPrivateAccessOutput() GetElasticSearchElasticsearchUserConfigPrivateAccessOutput {
	return i.ToGetElasticSearchElasticsearchUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i GetElasticSearchElasticsearchUserConfigPrivateAccessArgs) ToGetElasticSearchElasticsearchUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchElasticsearchUserConfigPrivateAccessOutput)
}

func (i GetElasticSearchElasticsearchUserConfigPrivateAccessArgs) ToGetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput() GetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput {
	return i.ToGetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i GetElasticSearchElasticsearchUserConfigPrivateAccessArgs) ToGetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchElasticsearchUserConfigPrivateAccessOutput).ToGetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// GetElasticSearchElasticsearchUserConfigPrivateAccessPtrInput is an input type that accepts GetElasticSearchElasticsearchUserConfigPrivateAccessArgs, GetElasticSearchElasticsearchUserConfigPrivateAccessPtr and GetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `GetElasticSearchElasticsearchUserConfigPrivateAccessPtrInput` via:
//
//          GetElasticSearchElasticsearchUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type GetElasticSearchElasticsearchUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToGetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput() GetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput
	ToGetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutputWithContext(context.Context) GetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput
}

type getElasticSearchElasticsearchUserConfigPrivateAccessPtrType GetElasticSearchElasticsearchUserConfigPrivateAccessArgs

func GetElasticSearchElasticsearchUserConfigPrivateAccessPtr(v *GetElasticSearchElasticsearchUserConfigPrivateAccessArgs) GetElasticSearchElasticsearchUserConfigPrivateAccessPtrInput {
	return (*getElasticSearchElasticsearchUserConfigPrivateAccessPtrType)(v)
}

func (*getElasticSearchElasticsearchUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetElasticSearchElasticsearchUserConfigPrivateAccess)(nil)).Elem()
}

func (i *getElasticSearchElasticsearchUserConfigPrivateAccessPtrType) ToGetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput() GetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput {
	return i.ToGetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *getElasticSearchElasticsearchUserConfigPrivateAccessPtrType) ToGetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput)
}

type GetElasticSearchElasticsearchUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (GetElasticSearchElasticsearchUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticSearchElasticsearchUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetElasticSearchElasticsearchUserConfigPrivateAccessOutput) ToGetElasticSearchElasticsearchUserConfigPrivateAccessOutput() GetElasticSearchElasticsearchUserConfigPrivateAccessOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigPrivateAccessOutput) ToGetElasticSearchElasticsearchUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigPrivateAccessOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigPrivateAccessOutput) ToGetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput() GetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput {
	return o.ToGetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o GetElasticSearchElasticsearchUserConfigPrivateAccessOutput) ToGetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigPrivateAccess) *GetElasticSearchElasticsearchUserConfigPrivateAccess {
		return &v
	}).(GetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput)
}

// Elasticsearch specific server provided values.
func (o GetElasticSearchElasticsearchUserConfigPrivateAccessOutput) Elasticsearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigPrivateAccess) *string { return v.Elasticsearch }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to kibana from the public internet for
// service nodes that are in a project VPC or another type of private network.
func (o GetElasticSearchElasticsearchUserConfigPrivateAccessOutput) Kibana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigPrivateAccess) *string { return v.Kibana }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public
// internet for service nodes that are in a project VPC or another type of private network.
func (o GetElasticSearchElasticsearchUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type GetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (GetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetElasticSearchElasticsearchUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput) ToGetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput() GetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput) ToGetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput) Elem() GetElasticSearchElasticsearchUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigPrivateAccess) GetElasticSearchElasticsearchUserConfigPrivateAccess {
		return *v
	}).(GetElasticSearchElasticsearchUserConfigPrivateAccessOutput)
}

// Elasticsearch specific server provided values.
func (o GetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput) Elasticsearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Elasticsearch
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to kibana from the public internet for
// service nodes that are in a project VPC or another type of private network.
func (o GetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput) Kibana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Kibana
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public
// internet for service nodes that are in a project VPC or another type of private network.
func (o GetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type GetElasticSearchElasticsearchUserConfigPrivatelinkAccess struct {
	// Elasticsearch specific server provided values.
	Elasticsearch *string `pulumi:"elasticsearch"`
	// Allow clients to connect to kibana from the public internet for
	// service nodes that are in a project VPC or another type of private network.
	Kibana *string `pulumi:"kibana"`
}

// GetElasticSearchElasticsearchUserConfigPrivatelinkAccessInput is an input type that accepts GetElasticSearchElasticsearchUserConfigPrivatelinkAccessArgs and GetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `GetElasticSearchElasticsearchUserConfigPrivatelinkAccessInput` via:
//
//          GetElasticSearchElasticsearchUserConfigPrivatelinkAccessArgs{...}
type GetElasticSearchElasticsearchUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToGetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput() GetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput
	ToGetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutputWithContext(context.Context) GetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput
}

type GetElasticSearchElasticsearchUserConfigPrivatelinkAccessArgs struct {
	// Elasticsearch specific server provided values.
	Elasticsearch pulumi.StringPtrInput `pulumi:"elasticsearch"`
	// Allow clients to connect to kibana from the public internet for
	// service nodes that are in a project VPC or another type of private network.
	Kibana pulumi.StringPtrInput `pulumi:"kibana"`
}

func (GetElasticSearchElasticsearchUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticSearchElasticsearchUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i GetElasticSearchElasticsearchUserConfigPrivatelinkAccessArgs) ToGetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput() GetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput {
	return i.ToGetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i GetElasticSearchElasticsearchUserConfigPrivatelinkAccessArgs) ToGetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput)
}

func (i GetElasticSearchElasticsearchUserConfigPrivatelinkAccessArgs) ToGetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput() GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i GetElasticSearchElasticsearchUserConfigPrivatelinkAccessArgs) ToGetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput).ToGetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrInput is an input type that accepts GetElasticSearchElasticsearchUserConfigPrivatelinkAccessArgs, GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtr and GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrInput` via:
//
//          GetElasticSearchElasticsearchUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToGetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput() GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput
	ToGetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput
}

type getElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrType GetElasticSearchElasticsearchUserConfigPrivatelinkAccessArgs

func GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtr(v *GetElasticSearchElasticsearchUserConfigPrivatelinkAccessArgs) GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrInput {
	return (*getElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrType)(v)
}

func (*getElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetElasticSearchElasticsearchUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *getElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrType) ToGetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput() GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *getElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrType) ToGetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput)
}

type GetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (GetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticSearchElasticsearchUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput) ToGetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput() GetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput) ToGetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput) ToGetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput() GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return o.ToGetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o GetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput) ToGetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigPrivatelinkAccess) *GetElasticSearchElasticsearchUserConfigPrivatelinkAccess {
		return &v
	}).(GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput)
}

// Elasticsearch specific server provided values.
func (o GetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput) Elasticsearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigPrivatelinkAccess) *string { return v.Elasticsearch }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to kibana from the public internet for
// service nodes that are in a project VPC or another type of private network.
func (o GetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput) Kibana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigPrivatelinkAccess) *string { return v.Kibana }).(pulumi.StringPtrOutput)
}

type GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetElasticSearchElasticsearchUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput) ToGetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput() GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput) ToGetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput) Elem() GetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigPrivatelinkAccess) GetElasticSearchElasticsearchUserConfigPrivatelinkAccess {
		return *v
	}).(GetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput)
}

// Elasticsearch specific server provided values.
func (o GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput) Elasticsearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Elasticsearch
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to kibana from the public internet for
// service nodes that are in a project VPC or another type of private network.
func (o GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput) Kibana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Kibana
	}).(pulumi.StringPtrOutput)
}

type GetElasticSearchElasticsearchUserConfigPublicAccess struct {
	// Elasticsearch specific server provided values.
	Elasticsearch *string `pulumi:"elasticsearch"`
	// Allow clients to connect to kibana from the public internet for
	// service nodes that are in a project VPC or another type of private network.
	Kibana *string `pulumi:"kibana"`
	// Allow clients to connect to prometheus from the public
	// internet for service nodes that are in a project VPC or another type of private network.
	Prometheus *string `pulumi:"prometheus"`
}

// GetElasticSearchElasticsearchUserConfigPublicAccessInput is an input type that accepts GetElasticSearchElasticsearchUserConfigPublicAccessArgs and GetElasticSearchElasticsearchUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `GetElasticSearchElasticsearchUserConfigPublicAccessInput` via:
//
//          GetElasticSearchElasticsearchUserConfigPublicAccessArgs{...}
type GetElasticSearchElasticsearchUserConfigPublicAccessInput interface {
	pulumi.Input

	ToGetElasticSearchElasticsearchUserConfigPublicAccessOutput() GetElasticSearchElasticsearchUserConfigPublicAccessOutput
	ToGetElasticSearchElasticsearchUserConfigPublicAccessOutputWithContext(context.Context) GetElasticSearchElasticsearchUserConfigPublicAccessOutput
}

type GetElasticSearchElasticsearchUserConfigPublicAccessArgs struct {
	// Elasticsearch specific server provided values.
	Elasticsearch pulumi.StringPtrInput `pulumi:"elasticsearch"`
	// Allow clients to connect to kibana from the public internet for
	// service nodes that are in a project VPC or another type of private network.
	Kibana pulumi.StringPtrInput `pulumi:"kibana"`
	// Allow clients to connect to prometheus from the public
	// internet for service nodes that are in a project VPC or another type of private network.
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (GetElasticSearchElasticsearchUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticSearchElasticsearchUserConfigPublicAccess)(nil)).Elem()
}

func (i GetElasticSearchElasticsearchUserConfigPublicAccessArgs) ToGetElasticSearchElasticsearchUserConfigPublicAccessOutput() GetElasticSearchElasticsearchUserConfigPublicAccessOutput {
	return i.ToGetElasticSearchElasticsearchUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i GetElasticSearchElasticsearchUserConfigPublicAccessArgs) ToGetElasticSearchElasticsearchUserConfigPublicAccessOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchElasticsearchUserConfigPublicAccessOutput)
}

func (i GetElasticSearchElasticsearchUserConfigPublicAccessArgs) ToGetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput() GetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput {
	return i.ToGetElasticSearchElasticsearchUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i GetElasticSearchElasticsearchUserConfigPublicAccessArgs) ToGetElasticSearchElasticsearchUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchElasticsearchUserConfigPublicAccessOutput).ToGetElasticSearchElasticsearchUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// GetElasticSearchElasticsearchUserConfigPublicAccessPtrInput is an input type that accepts GetElasticSearchElasticsearchUserConfigPublicAccessArgs, GetElasticSearchElasticsearchUserConfigPublicAccessPtr and GetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `GetElasticSearchElasticsearchUserConfigPublicAccessPtrInput` via:
//
//          GetElasticSearchElasticsearchUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type GetElasticSearchElasticsearchUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToGetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput() GetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput
	ToGetElasticSearchElasticsearchUserConfigPublicAccessPtrOutputWithContext(context.Context) GetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput
}

type getElasticSearchElasticsearchUserConfigPublicAccessPtrType GetElasticSearchElasticsearchUserConfigPublicAccessArgs

func GetElasticSearchElasticsearchUserConfigPublicAccessPtr(v *GetElasticSearchElasticsearchUserConfigPublicAccessArgs) GetElasticSearchElasticsearchUserConfigPublicAccessPtrInput {
	return (*getElasticSearchElasticsearchUserConfigPublicAccessPtrType)(v)
}

func (*getElasticSearchElasticsearchUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetElasticSearchElasticsearchUserConfigPublicAccess)(nil)).Elem()
}

func (i *getElasticSearchElasticsearchUserConfigPublicAccessPtrType) ToGetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput() GetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput {
	return i.ToGetElasticSearchElasticsearchUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *getElasticSearchElasticsearchUserConfigPublicAccessPtrType) ToGetElasticSearchElasticsearchUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput)
}

type GetElasticSearchElasticsearchUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (GetElasticSearchElasticsearchUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticSearchElasticsearchUserConfigPublicAccess)(nil)).Elem()
}

func (o GetElasticSearchElasticsearchUserConfigPublicAccessOutput) ToGetElasticSearchElasticsearchUserConfigPublicAccessOutput() GetElasticSearchElasticsearchUserConfigPublicAccessOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigPublicAccessOutput) ToGetElasticSearchElasticsearchUserConfigPublicAccessOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigPublicAccessOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigPublicAccessOutput) ToGetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput() GetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput {
	return o.ToGetElasticSearchElasticsearchUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o GetElasticSearchElasticsearchUserConfigPublicAccessOutput) ToGetElasticSearchElasticsearchUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigPublicAccess) *GetElasticSearchElasticsearchUserConfigPublicAccess {
		return &v
	}).(GetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput)
}

// Elasticsearch specific server provided values.
func (o GetElasticSearchElasticsearchUserConfigPublicAccessOutput) Elasticsearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigPublicAccess) *string { return v.Elasticsearch }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to kibana from the public internet for
// service nodes that are in a project VPC or another type of private network.
func (o GetElasticSearchElasticsearchUserConfigPublicAccessOutput) Kibana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigPublicAccess) *string { return v.Kibana }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public
// internet for service nodes that are in a project VPC or another type of private network.
func (o GetElasticSearchElasticsearchUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetElasticSearchElasticsearchUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type GetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (GetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetElasticSearchElasticsearchUserConfigPublicAccess)(nil)).Elem()
}

func (o GetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput) ToGetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput() GetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput) ToGetElasticSearchElasticsearchUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput) Elem() GetElasticSearchElasticsearchUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigPublicAccess) GetElasticSearchElasticsearchUserConfigPublicAccess {
		return *v
	}).(GetElasticSearchElasticsearchUserConfigPublicAccessOutput)
}

// Elasticsearch specific server provided values.
func (o GetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput) Elasticsearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Elasticsearch
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to kibana from the public internet for
// service nodes that are in a project VPC or another type of private network.
func (o GetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput) Kibana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Kibana
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public
// internet for service nodes that are in a project VPC or another type of private network.
func (o GetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetElasticSearchElasticsearchUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type GetElasticSearchServiceIntegration struct {
	IntegrationType   string `pulumi:"integrationType"`
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// GetElasticSearchServiceIntegrationInput is an input type that accepts GetElasticSearchServiceIntegrationArgs and GetElasticSearchServiceIntegrationOutput values.
// You can construct a concrete instance of `GetElasticSearchServiceIntegrationInput` via:
//
//          GetElasticSearchServiceIntegrationArgs{...}
type GetElasticSearchServiceIntegrationInput interface {
	pulumi.Input

	ToGetElasticSearchServiceIntegrationOutput() GetElasticSearchServiceIntegrationOutput
	ToGetElasticSearchServiceIntegrationOutputWithContext(context.Context) GetElasticSearchServiceIntegrationOutput
}

type GetElasticSearchServiceIntegrationArgs struct {
	IntegrationType   pulumi.StringInput `pulumi:"integrationType"`
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (GetElasticSearchServiceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticSearchServiceIntegration)(nil)).Elem()
}

func (i GetElasticSearchServiceIntegrationArgs) ToGetElasticSearchServiceIntegrationOutput() GetElasticSearchServiceIntegrationOutput {
	return i.ToGetElasticSearchServiceIntegrationOutputWithContext(context.Background())
}

func (i GetElasticSearchServiceIntegrationArgs) ToGetElasticSearchServiceIntegrationOutputWithContext(ctx context.Context) GetElasticSearchServiceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchServiceIntegrationOutput)
}

// GetElasticSearchServiceIntegrationArrayInput is an input type that accepts GetElasticSearchServiceIntegrationArray and GetElasticSearchServiceIntegrationArrayOutput values.
// You can construct a concrete instance of `GetElasticSearchServiceIntegrationArrayInput` via:
//
//          GetElasticSearchServiceIntegrationArray{ GetElasticSearchServiceIntegrationArgs{...} }
type GetElasticSearchServiceIntegrationArrayInput interface {
	pulumi.Input

	ToGetElasticSearchServiceIntegrationArrayOutput() GetElasticSearchServiceIntegrationArrayOutput
	ToGetElasticSearchServiceIntegrationArrayOutputWithContext(context.Context) GetElasticSearchServiceIntegrationArrayOutput
}

type GetElasticSearchServiceIntegrationArray []GetElasticSearchServiceIntegrationInput

func (GetElasticSearchServiceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElasticSearchServiceIntegration)(nil)).Elem()
}

func (i GetElasticSearchServiceIntegrationArray) ToGetElasticSearchServiceIntegrationArrayOutput() GetElasticSearchServiceIntegrationArrayOutput {
	return i.ToGetElasticSearchServiceIntegrationArrayOutputWithContext(context.Background())
}

func (i GetElasticSearchServiceIntegrationArray) ToGetElasticSearchServiceIntegrationArrayOutputWithContext(ctx context.Context) GetElasticSearchServiceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticSearchServiceIntegrationArrayOutput)
}

type GetElasticSearchServiceIntegrationOutput struct{ *pulumi.OutputState }

func (GetElasticSearchServiceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticSearchServiceIntegration)(nil)).Elem()
}

func (o GetElasticSearchServiceIntegrationOutput) ToGetElasticSearchServiceIntegrationOutput() GetElasticSearchServiceIntegrationOutput {
	return o
}

func (o GetElasticSearchServiceIntegrationOutput) ToGetElasticSearchServiceIntegrationOutputWithContext(ctx context.Context) GetElasticSearchServiceIntegrationOutput {
	return o
}

func (o GetElasticSearchServiceIntegrationOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetElasticSearchServiceIntegration) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o GetElasticSearchServiceIntegrationOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetElasticSearchServiceIntegration) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

type GetElasticSearchServiceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (GetElasticSearchServiceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElasticSearchServiceIntegration)(nil)).Elem()
}

func (o GetElasticSearchServiceIntegrationArrayOutput) ToGetElasticSearchServiceIntegrationArrayOutput() GetElasticSearchServiceIntegrationArrayOutput {
	return o
}

func (o GetElasticSearchServiceIntegrationArrayOutput) ToGetElasticSearchServiceIntegrationArrayOutputWithContext(ctx context.Context) GetElasticSearchServiceIntegrationArrayOutput {
	return o
}

func (o GetElasticSearchServiceIntegrationArrayOutput) Index(i pulumi.IntInput) GetElasticSearchServiceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetElasticSearchServiceIntegration {
		return vs[0].([]GetElasticSearchServiceIntegration)[vs[1].(int)]
	}).(GetElasticSearchServiceIntegrationOutput)
}

type GetGrafanaComponent struct {
	Component string `pulumi:"component"`
	// Server hostname or IP
	Host                      string `pulumi:"host"`
	KafkaAuthenticationMethod string `pulumi:"kafkaAuthenticationMethod"`
	// SMTP server port
	Port  int    `pulumi:"port"`
	Route string `pulumi:"route"`
	Ssl   bool   `pulumi:"ssl"`
	Usage string `pulumi:"usage"`
}

// GetGrafanaComponentInput is an input type that accepts GetGrafanaComponentArgs and GetGrafanaComponentOutput values.
// You can construct a concrete instance of `GetGrafanaComponentInput` via:
//
//          GetGrafanaComponentArgs{...}
type GetGrafanaComponentInput interface {
	pulumi.Input

	ToGetGrafanaComponentOutput() GetGrafanaComponentOutput
	ToGetGrafanaComponentOutputWithContext(context.Context) GetGrafanaComponentOutput
}

type GetGrafanaComponentArgs struct {
	Component pulumi.StringInput `pulumi:"component"`
	// Server hostname or IP
	Host                      pulumi.StringInput `pulumi:"host"`
	KafkaAuthenticationMethod pulumi.StringInput `pulumi:"kafkaAuthenticationMethod"`
	// SMTP server port
	Port  pulumi.IntInput    `pulumi:"port"`
	Route pulumi.StringInput `pulumi:"route"`
	Ssl   pulumi.BoolInput   `pulumi:"ssl"`
	Usage pulumi.StringInput `pulumi:"usage"`
}

func (GetGrafanaComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrafanaComponent)(nil)).Elem()
}

func (i GetGrafanaComponentArgs) ToGetGrafanaComponentOutput() GetGrafanaComponentOutput {
	return i.ToGetGrafanaComponentOutputWithContext(context.Background())
}

func (i GetGrafanaComponentArgs) ToGetGrafanaComponentOutputWithContext(ctx context.Context) GetGrafanaComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaComponentOutput)
}

// GetGrafanaComponentArrayInput is an input type that accepts GetGrafanaComponentArray and GetGrafanaComponentArrayOutput values.
// You can construct a concrete instance of `GetGrafanaComponentArrayInput` via:
//
//          GetGrafanaComponentArray{ GetGrafanaComponentArgs{...} }
type GetGrafanaComponentArrayInput interface {
	pulumi.Input

	ToGetGrafanaComponentArrayOutput() GetGrafanaComponentArrayOutput
	ToGetGrafanaComponentArrayOutputWithContext(context.Context) GetGrafanaComponentArrayOutput
}

type GetGrafanaComponentArray []GetGrafanaComponentInput

func (GetGrafanaComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGrafanaComponent)(nil)).Elem()
}

func (i GetGrafanaComponentArray) ToGetGrafanaComponentArrayOutput() GetGrafanaComponentArrayOutput {
	return i.ToGetGrafanaComponentArrayOutputWithContext(context.Background())
}

func (i GetGrafanaComponentArray) ToGetGrafanaComponentArrayOutputWithContext(ctx context.Context) GetGrafanaComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaComponentArrayOutput)
}

type GetGrafanaComponentOutput struct{ *pulumi.OutputState }

func (GetGrafanaComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrafanaComponent)(nil)).Elem()
}

func (o GetGrafanaComponentOutput) ToGetGrafanaComponentOutput() GetGrafanaComponentOutput {
	return o
}

func (o GetGrafanaComponentOutput) ToGetGrafanaComponentOutputWithContext(ctx context.Context) GetGrafanaComponentOutput {
	return o
}

func (o GetGrafanaComponentOutput) Component() pulumi.StringOutput {
	return o.ApplyT(func(v GetGrafanaComponent) string { return v.Component }).(pulumi.StringOutput)
}

// Server hostname or IP
func (o GetGrafanaComponentOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetGrafanaComponent) string { return v.Host }).(pulumi.StringOutput)
}

func (o GetGrafanaComponentOutput) KafkaAuthenticationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetGrafanaComponent) string { return v.KafkaAuthenticationMethod }).(pulumi.StringOutput)
}

// SMTP server port
func (o GetGrafanaComponentOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetGrafanaComponent) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetGrafanaComponentOutput) Route() pulumi.StringOutput {
	return o.ApplyT(func(v GetGrafanaComponent) string { return v.Route }).(pulumi.StringOutput)
}

func (o GetGrafanaComponentOutput) Ssl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGrafanaComponent) bool { return v.Ssl }).(pulumi.BoolOutput)
}

func (o GetGrafanaComponentOutput) Usage() pulumi.StringOutput {
	return o.ApplyT(func(v GetGrafanaComponent) string { return v.Usage }).(pulumi.StringOutput)
}

type GetGrafanaComponentArrayOutput struct{ *pulumi.OutputState }

func (GetGrafanaComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGrafanaComponent)(nil)).Elem()
}

func (o GetGrafanaComponentArrayOutput) ToGetGrafanaComponentArrayOutput() GetGrafanaComponentArrayOutput {
	return o
}

func (o GetGrafanaComponentArrayOutput) ToGetGrafanaComponentArrayOutputWithContext(ctx context.Context) GetGrafanaComponentArrayOutput {
	return o
}

func (o GetGrafanaComponentArrayOutput) Index(i pulumi.IntInput) GetGrafanaComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGrafanaComponent {
		return vs[0].([]GetGrafanaComponent)[vs[1].(int)]
	}).(GetGrafanaComponentOutput)
}

type GetGrafanaGrafana struct {
}

// GetGrafanaGrafanaInput is an input type that accepts GetGrafanaGrafanaArgs and GetGrafanaGrafanaOutput values.
// You can construct a concrete instance of `GetGrafanaGrafanaInput` via:
//
//          GetGrafanaGrafanaArgs{...}
type GetGrafanaGrafanaInput interface {
	pulumi.Input

	ToGetGrafanaGrafanaOutput() GetGrafanaGrafanaOutput
	ToGetGrafanaGrafanaOutputWithContext(context.Context) GetGrafanaGrafanaOutput
}

type GetGrafanaGrafanaArgs struct {
}

func (GetGrafanaGrafanaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrafanaGrafana)(nil)).Elem()
}

func (i GetGrafanaGrafanaArgs) ToGetGrafanaGrafanaOutput() GetGrafanaGrafanaOutput {
	return i.ToGetGrafanaGrafanaOutputWithContext(context.Background())
}

func (i GetGrafanaGrafanaArgs) ToGetGrafanaGrafanaOutputWithContext(ctx context.Context) GetGrafanaGrafanaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaOutput)
}

type GetGrafanaGrafanaOutput struct{ *pulumi.OutputState }

func (GetGrafanaGrafanaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrafanaGrafana)(nil)).Elem()
}

func (o GetGrafanaGrafanaOutput) ToGetGrafanaGrafanaOutput() GetGrafanaGrafanaOutput {
	return o
}

func (o GetGrafanaGrafanaOutput) ToGetGrafanaGrafanaOutputWithContext(ctx context.Context) GetGrafanaGrafanaOutput {
	return o
}

type GetGrafanaGrafanaUserConfig struct {
	// Enable or disable Grafana alerting functionality
	AlertingEnabled *string `pulumi:"alertingEnabled"`
	// Default error or timeout setting for new alerting rules
	AlertingErrorOrTimeout *string `pulumi:"alertingErrorOrTimeout"`
	// Default value for 'no data or null values' for
	// new alerting rules
	AlertingNodataOrNullvalues *string `pulumi:"alertingNodataOrNullvalues"`
	// Allow embedding Grafana dashboards with iframe/frame/object/embed
	// tags. Disabled by default to limit impact of clickjacking
	AllowEmbedding *string `pulumi:"allowEmbedding"`
	// Enable or disable basic authentication form, used by Grafana
	// built-in login.
	AuthBasicEnabled *string `pulumi:"authBasicEnabled"`
	// Generic OAuth integration.
	AuthGenericOauth *GetGrafanaGrafanaUserConfigAuthGenericOauth `pulumi:"authGenericOauth"`
	// Automatically sign-up users on successful sign-in
	AuthGithub *GetGrafanaGrafanaUserConfigAuthGithub `pulumi:"authGithub"`
	// GitLab Auth integration.
	AuthGitlab *GetGrafanaGrafanaUserConfigAuthGitlab `pulumi:"authGitlab"`
	// Google Auth integration
	AuthGoogle *GetGrafanaGrafanaUserConfigAuthGoogle `pulumi:"authGoogle"`
	// Cookie SameSite attribute: 'strict' prevents sending cookie for
	// cross-site requests, effectively disabling direct linking from other sites to Grafana. 'lax' is the default value.
	CookieSamesite *string `pulumi:"cookieSamesite"`
	// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
	CustomDomain *string `pulumi:"customDomain"`
	// Signed sequence of decimal numbers, followed
	// by a unit suffix (ms, s, m, h, d), e.g. 30s, 1h.
	DashboardsMinRefreshInterval *string `pulumi:"dashboardsMinRefreshInterval"`
	// Dashboard versions to keep per dashboard.
	DashboardsVersionsToKeep *string `pulumi:"dashboardsVersionsToKeep"`
	// Send 'X-Grafana-User' header to data source.
	DataproxySendUserHeader *string `pulumi:"dataproxySendUserHeader"`
	// Timeout for data proxy requests in seconds.
	DataproxyTimeout *string `pulumi:"dataproxyTimeout"`
	// Set to true to disable gravatar. Defaults to false
	// (gravatar is enabled).
	DisableGravatar *string `pulumi:"disableGravatar"`
	// Editors can manage folders, teams and dashboards created by them.
	EditorsCanAdmin *string `pulumi:"editorsCanAdmin"`
	// External image store settings
	ExternalImageStorage *GetGrafanaGrafanaUserConfigExternalImageStorage `pulumi:"externalImageStorage"`
	// Google Analytics Universal Analytics ID for tracking Grafana usage
	GoogleAnalyticsUaId *string `pulumi:"googleAnalyticsUaId"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
	IpFilters []string `pulumi:"ipFilters"`
	// Enable Grafana /metrics endpoint
	MetricsEnabled *string                                   `pulumi:"metricsEnabled"`
	PrivateAccess  *GetGrafanaGrafanaUserConfigPrivateAccess `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess *GetGrafanaGrafanaUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom *string `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet.
	PublicAccess *GetGrafanaGrafanaUserConfigPublicAccess `pulumi:"publicAccess"`
	// Name of the basebackup to restore in forked service.
	RecoveryBasebackupName *string `pulumi:"recoveryBasebackupName"`
	// Name of another service to fork from. This has effect only
	// when a new service is being created.
	ServiceToForkFrom *string `pulumi:"serviceToForkFrom"`
	// SMTP server settings.
	SmtpServer *GetGrafanaGrafanaUserConfigSmtpServer `pulumi:"smtpServer"`
	// Auto-assign new users on signup to main organization.
	// Defaults to false.
	UserAutoAssignOrg *string `pulumi:"userAutoAssignOrg"`
	// Set role for new signups. Defaults to Viewer.
	UserAutoAssignOrgRole *string `pulumi:"userAutoAssignOrgRole"`
	// Users with view-only permission can edit but not save dashboards.
	ViewersCanEdit *string `pulumi:"viewersCanEdit"`
}

// GetGrafanaGrafanaUserConfigInput is an input type that accepts GetGrafanaGrafanaUserConfigArgs and GetGrafanaGrafanaUserConfigOutput values.
// You can construct a concrete instance of `GetGrafanaGrafanaUserConfigInput` via:
//
//          GetGrafanaGrafanaUserConfigArgs{...}
type GetGrafanaGrafanaUserConfigInput interface {
	pulumi.Input

	ToGetGrafanaGrafanaUserConfigOutput() GetGrafanaGrafanaUserConfigOutput
	ToGetGrafanaGrafanaUserConfigOutputWithContext(context.Context) GetGrafanaGrafanaUserConfigOutput
}

type GetGrafanaGrafanaUserConfigArgs struct {
	// Enable or disable Grafana alerting functionality
	AlertingEnabled pulumi.StringPtrInput `pulumi:"alertingEnabled"`
	// Default error or timeout setting for new alerting rules
	AlertingErrorOrTimeout pulumi.StringPtrInput `pulumi:"alertingErrorOrTimeout"`
	// Default value for 'no data or null values' for
	// new alerting rules
	AlertingNodataOrNullvalues pulumi.StringPtrInput `pulumi:"alertingNodataOrNullvalues"`
	// Allow embedding Grafana dashboards with iframe/frame/object/embed
	// tags. Disabled by default to limit impact of clickjacking
	AllowEmbedding pulumi.StringPtrInput `pulumi:"allowEmbedding"`
	// Enable or disable basic authentication form, used by Grafana
	// built-in login.
	AuthBasicEnabled pulumi.StringPtrInput `pulumi:"authBasicEnabled"`
	// Generic OAuth integration.
	AuthGenericOauth GetGrafanaGrafanaUserConfigAuthGenericOauthPtrInput `pulumi:"authGenericOauth"`
	// Automatically sign-up users on successful sign-in
	AuthGithub GetGrafanaGrafanaUserConfigAuthGithubPtrInput `pulumi:"authGithub"`
	// GitLab Auth integration.
	AuthGitlab GetGrafanaGrafanaUserConfigAuthGitlabPtrInput `pulumi:"authGitlab"`
	// Google Auth integration
	AuthGoogle GetGrafanaGrafanaUserConfigAuthGooglePtrInput `pulumi:"authGoogle"`
	// Cookie SameSite attribute: 'strict' prevents sending cookie for
	// cross-site requests, effectively disabling direct linking from other sites to Grafana. 'lax' is the default value.
	CookieSamesite pulumi.StringPtrInput `pulumi:"cookieSamesite"`
	// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
	CustomDomain pulumi.StringPtrInput `pulumi:"customDomain"`
	// Signed sequence of decimal numbers, followed
	// by a unit suffix (ms, s, m, h, d), e.g. 30s, 1h.
	DashboardsMinRefreshInterval pulumi.StringPtrInput `pulumi:"dashboardsMinRefreshInterval"`
	// Dashboard versions to keep per dashboard.
	DashboardsVersionsToKeep pulumi.StringPtrInput `pulumi:"dashboardsVersionsToKeep"`
	// Send 'X-Grafana-User' header to data source.
	DataproxySendUserHeader pulumi.StringPtrInput `pulumi:"dataproxySendUserHeader"`
	// Timeout for data proxy requests in seconds.
	DataproxyTimeout pulumi.StringPtrInput `pulumi:"dataproxyTimeout"`
	// Set to true to disable gravatar. Defaults to false
	// (gravatar is enabled).
	DisableGravatar pulumi.StringPtrInput `pulumi:"disableGravatar"`
	// Editors can manage folders, teams and dashboards created by them.
	EditorsCanAdmin pulumi.StringPtrInput `pulumi:"editorsCanAdmin"`
	// External image store settings
	ExternalImageStorage GetGrafanaGrafanaUserConfigExternalImageStoragePtrInput `pulumi:"externalImageStorage"`
	// Google Analytics Universal Analytics ID for tracking Grafana usage
	GoogleAnalyticsUaId pulumi.StringPtrInput `pulumi:"googleAnalyticsUaId"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// Enable Grafana /metrics endpoint
	MetricsEnabled pulumi.StringPtrInput                            `pulumi:"metricsEnabled"`
	PrivateAccess  GetGrafanaGrafanaUserConfigPrivateAccessPtrInput `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom pulumi.StringPtrInput `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet.
	PublicAccess GetGrafanaGrafanaUserConfigPublicAccessPtrInput `pulumi:"publicAccess"`
	// Name of the basebackup to restore in forked service.
	RecoveryBasebackupName pulumi.StringPtrInput `pulumi:"recoveryBasebackupName"`
	// Name of another service to fork from. This has effect only
	// when a new service is being created.
	ServiceToForkFrom pulumi.StringPtrInput `pulumi:"serviceToForkFrom"`
	// SMTP server settings.
	SmtpServer GetGrafanaGrafanaUserConfigSmtpServerPtrInput `pulumi:"smtpServer"`
	// Auto-assign new users on signup to main organization.
	// Defaults to false.
	UserAutoAssignOrg pulumi.StringPtrInput `pulumi:"userAutoAssignOrg"`
	// Set role for new signups. Defaults to Viewer.
	UserAutoAssignOrgRole pulumi.StringPtrInput `pulumi:"userAutoAssignOrgRole"`
	// Users with view-only permission can edit but not save dashboards.
	ViewersCanEdit pulumi.StringPtrInput `pulumi:"viewersCanEdit"`
}

func (GetGrafanaGrafanaUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrafanaGrafanaUserConfig)(nil)).Elem()
}

func (i GetGrafanaGrafanaUserConfigArgs) ToGetGrafanaGrafanaUserConfigOutput() GetGrafanaGrafanaUserConfigOutput {
	return i.ToGetGrafanaGrafanaUserConfigOutputWithContext(context.Background())
}

func (i GetGrafanaGrafanaUserConfigArgs) ToGetGrafanaGrafanaUserConfigOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigOutput)
}

type GetGrafanaGrafanaUserConfigOutput struct{ *pulumi.OutputState }

func (GetGrafanaGrafanaUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrafanaGrafanaUserConfig)(nil)).Elem()
}

func (o GetGrafanaGrafanaUserConfigOutput) ToGetGrafanaGrafanaUserConfigOutput() GetGrafanaGrafanaUserConfigOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigOutput) ToGetGrafanaGrafanaUserConfigOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigOutput {
	return o
}

// Enable or disable Grafana alerting functionality
func (o GetGrafanaGrafanaUserConfigOutput) AlertingEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *string { return v.AlertingEnabled }).(pulumi.StringPtrOutput)
}

// Default error or timeout setting for new alerting rules
func (o GetGrafanaGrafanaUserConfigOutput) AlertingErrorOrTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *string { return v.AlertingErrorOrTimeout }).(pulumi.StringPtrOutput)
}

// Default value for 'no data or null values' for
// new alerting rules
func (o GetGrafanaGrafanaUserConfigOutput) AlertingNodataOrNullvalues() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *string { return v.AlertingNodataOrNullvalues }).(pulumi.StringPtrOutput)
}

// Allow embedding Grafana dashboards with iframe/frame/object/embed
// tags. Disabled by default to limit impact of clickjacking
func (o GetGrafanaGrafanaUserConfigOutput) AllowEmbedding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *string { return v.AllowEmbedding }).(pulumi.StringPtrOutput)
}

// Enable or disable basic authentication form, used by Grafana
// built-in login.
func (o GetGrafanaGrafanaUserConfigOutput) AuthBasicEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *string { return v.AuthBasicEnabled }).(pulumi.StringPtrOutput)
}

// Generic OAuth integration.
func (o GetGrafanaGrafanaUserConfigOutput) AuthGenericOauth() GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *GetGrafanaGrafanaUserConfigAuthGenericOauth {
		return v.AuthGenericOauth
	}).(GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput)
}

// Automatically sign-up users on successful sign-in
func (o GetGrafanaGrafanaUserConfigOutput) AuthGithub() GetGrafanaGrafanaUserConfigAuthGithubPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *GetGrafanaGrafanaUserConfigAuthGithub { return v.AuthGithub }).(GetGrafanaGrafanaUserConfigAuthGithubPtrOutput)
}

// GitLab Auth integration.
func (o GetGrafanaGrafanaUserConfigOutput) AuthGitlab() GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *GetGrafanaGrafanaUserConfigAuthGitlab { return v.AuthGitlab }).(GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput)
}

// Google Auth integration
func (o GetGrafanaGrafanaUserConfigOutput) AuthGoogle() GetGrafanaGrafanaUserConfigAuthGooglePtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *GetGrafanaGrafanaUserConfigAuthGoogle { return v.AuthGoogle }).(GetGrafanaGrafanaUserConfigAuthGooglePtrOutput)
}

// Cookie SameSite attribute: 'strict' prevents sending cookie for
// cross-site requests, effectively disabling direct linking from other sites to Grafana. 'lax' is the default value.
func (o GetGrafanaGrafanaUserConfigOutput) CookieSamesite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *string { return v.CookieSamesite }).(pulumi.StringPtrOutput)
}

// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
func (o GetGrafanaGrafanaUserConfigOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *string { return v.CustomDomain }).(pulumi.StringPtrOutput)
}

// Signed sequence of decimal numbers, followed
// by a unit suffix (ms, s, m, h, d), e.g. 30s, 1h.
func (o GetGrafanaGrafanaUserConfigOutput) DashboardsMinRefreshInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *string { return v.DashboardsMinRefreshInterval }).(pulumi.StringPtrOutput)
}

// Dashboard versions to keep per dashboard.
func (o GetGrafanaGrafanaUserConfigOutput) DashboardsVersionsToKeep() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *string { return v.DashboardsVersionsToKeep }).(pulumi.StringPtrOutput)
}

// Send 'X-Grafana-User' header to data source.
func (o GetGrafanaGrafanaUserConfigOutput) DataproxySendUserHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *string { return v.DataproxySendUserHeader }).(pulumi.StringPtrOutput)
}

// Timeout for data proxy requests in seconds.
func (o GetGrafanaGrafanaUserConfigOutput) DataproxyTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *string { return v.DataproxyTimeout }).(pulumi.StringPtrOutput)
}

// Set to true to disable gravatar. Defaults to false
// (gravatar is enabled).
func (o GetGrafanaGrafanaUserConfigOutput) DisableGravatar() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *string { return v.DisableGravatar }).(pulumi.StringPtrOutput)
}

// Editors can manage folders, teams and dashboards created by them.
func (o GetGrafanaGrafanaUserConfigOutput) EditorsCanAdmin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *string { return v.EditorsCanAdmin }).(pulumi.StringPtrOutput)
}

// External image store settings
func (o GetGrafanaGrafanaUserConfigOutput) ExternalImageStorage() GetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *GetGrafanaGrafanaUserConfigExternalImageStorage {
		return v.ExternalImageStorage
	}).(GetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput)
}

// Google Analytics Universal Analytics ID for tracking Grafana usage
func (o GetGrafanaGrafanaUserConfigOutput) GoogleAnalyticsUaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *string { return v.GoogleAnalyticsUaId }).(pulumi.StringPtrOutput)
}

// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
func (o GetGrafanaGrafanaUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// Enable Grafana /metrics endpoint
func (o GetGrafanaGrafanaUserConfigOutput) MetricsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *string { return v.MetricsEnabled }).(pulumi.StringPtrOutput)
}

func (o GetGrafanaGrafanaUserConfigOutput) PrivateAccess() GetGrafanaGrafanaUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *GetGrafanaGrafanaUserConfigPrivateAccess { return v.PrivateAccess }).(GetGrafanaGrafanaUserConfigPrivateAccessPtrOutput)
}

// Allow access to selected service components through Privatelink
func (o GetGrafanaGrafanaUserConfigOutput) PrivatelinkAccess() GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *GetGrafanaGrafanaUserConfigPrivatelinkAccess {
		return v.PrivatelinkAccess
	}).(GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput)
}

// Name of another project to fork a service from. This has
// effect only when a new service is being created.
func (o GetGrafanaGrafanaUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from the public Internet.
func (o GetGrafanaGrafanaUserConfigOutput) PublicAccess() GetGrafanaGrafanaUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *GetGrafanaGrafanaUserConfigPublicAccess { return v.PublicAccess }).(GetGrafanaGrafanaUserConfigPublicAccessPtrOutput)
}

// Name of the basebackup to restore in forked service.
func (o GetGrafanaGrafanaUserConfigOutput) RecoveryBasebackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *string { return v.RecoveryBasebackupName }).(pulumi.StringPtrOutput)
}

// Name of another service to fork from. This has effect only
// when a new service is being created.
func (o GetGrafanaGrafanaUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

// SMTP server settings.
func (o GetGrafanaGrafanaUserConfigOutput) SmtpServer() GetGrafanaGrafanaUserConfigSmtpServerPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *GetGrafanaGrafanaUserConfigSmtpServer { return v.SmtpServer }).(GetGrafanaGrafanaUserConfigSmtpServerPtrOutput)
}

// Auto-assign new users on signup to main organization.
// Defaults to false.
func (o GetGrafanaGrafanaUserConfigOutput) UserAutoAssignOrg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *string { return v.UserAutoAssignOrg }).(pulumi.StringPtrOutput)
}

// Set role for new signups. Defaults to Viewer.
func (o GetGrafanaGrafanaUserConfigOutput) UserAutoAssignOrgRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *string { return v.UserAutoAssignOrgRole }).(pulumi.StringPtrOutput)
}

// Users with view-only permission can edit but not save dashboards.
func (o GetGrafanaGrafanaUserConfigOutput) ViewersCanEdit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfig) *string { return v.ViewersCanEdit }).(pulumi.StringPtrOutput)
}

type GetGrafanaGrafanaUserConfigAuthGenericOauth struct {
	// Automatically sign-up users on successful sign-in
	AllowSignUp *string `pulumi:"allowSignUp"`
	// Allowed domain
	AllowedDomains []string `pulumi:"allowedDomains"`
	// Must consist of alpha-numeric characters and dashes"
	AllowedOrganizations []string `pulumi:"allowedOrganizations"`
	// API URL. This only needs to be set when using self hosted GitLab
	ApiUrl *string `pulumi:"apiUrl"`
	// Authorization URL. This only needs to be set when using self hosted GitLab
	AuthUrl *string `pulumi:"authUrl"`
	// Client ID from provider
	ClientId *string `pulumi:"clientId"`
	// Client secret from provider
	ClientSecret *string `pulumi:"clientSecret"`
	// Name of the OAuth integration
	Name *string `pulumi:"name"`
	// Scope must be non-empty string without whitespace
	Scopes []string `pulumi:"scopes"`
	// Token URL. This only needs to be set when using self hosted GitLab
	TokenUrl *string `pulumi:"tokenUrl"`
}

// GetGrafanaGrafanaUserConfigAuthGenericOauthInput is an input type that accepts GetGrafanaGrafanaUserConfigAuthGenericOauthArgs and GetGrafanaGrafanaUserConfigAuthGenericOauthOutput values.
// You can construct a concrete instance of `GetGrafanaGrafanaUserConfigAuthGenericOauthInput` via:
//
//          GetGrafanaGrafanaUserConfigAuthGenericOauthArgs{...}
type GetGrafanaGrafanaUserConfigAuthGenericOauthInput interface {
	pulumi.Input

	ToGetGrafanaGrafanaUserConfigAuthGenericOauthOutput() GetGrafanaGrafanaUserConfigAuthGenericOauthOutput
	ToGetGrafanaGrafanaUserConfigAuthGenericOauthOutputWithContext(context.Context) GetGrafanaGrafanaUserConfigAuthGenericOauthOutput
}

type GetGrafanaGrafanaUserConfigAuthGenericOauthArgs struct {
	// Automatically sign-up users on successful sign-in
	AllowSignUp pulumi.StringPtrInput `pulumi:"allowSignUp"`
	// Allowed domain
	AllowedDomains pulumi.StringArrayInput `pulumi:"allowedDomains"`
	// Must consist of alpha-numeric characters and dashes"
	AllowedOrganizations pulumi.StringArrayInput `pulumi:"allowedOrganizations"`
	// API URL. This only needs to be set when using self hosted GitLab
	ApiUrl pulumi.StringPtrInput `pulumi:"apiUrl"`
	// Authorization URL. This only needs to be set when using self hosted GitLab
	AuthUrl pulumi.StringPtrInput `pulumi:"authUrl"`
	// Client ID from provider
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Client secret from provider
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Name of the OAuth integration
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Scope must be non-empty string without whitespace
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
	// Token URL. This only needs to be set when using self hosted GitLab
	TokenUrl pulumi.StringPtrInput `pulumi:"tokenUrl"`
}

func (GetGrafanaGrafanaUserConfigAuthGenericOauthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrafanaGrafanaUserConfigAuthGenericOauth)(nil)).Elem()
}

func (i GetGrafanaGrafanaUserConfigAuthGenericOauthArgs) ToGetGrafanaGrafanaUserConfigAuthGenericOauthOutput() GetGrafanaGrafanaUserConfigAuthGenericOauthOutput {
	return i.ToGetGrafanaGrafanaUserConfigAuthGenericOauthOutputWithContext(context.Background())
}

func (i GetGrafanaGrafanaUserConfigAuthGenericOauthArgs) ToGetGrafanaGrafanaUserConfigAuthGenericOauthOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigAuthGenericOauthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigAuthGenericOauthOutput)
}

func (i GetGrafanaGrafanaUserConfigAuthGenericOauthArgs) ToGetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput() GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput {
	return i.ToGetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(context.Background())
}

func (i GetGrafanaGrafanaUserConfigAuthGenericOauthArgs) ToGetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigAuthGenericOauthOutput).ToGetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(ctx)
}

// GetGrafanaGrafanaUserConfigAuthGenericOauthPtrInput is an input type that accepts GetGrafanaGrafanaUserConfigAuthGenericOauthArgs, GetGrafanaGrafanaUserConfigAuthGenericOauthPtr and GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput values.
// You can construct a concrete instance of `GetGrafanaGrafanaUserConfigAuthGenericOauthPtrInput` via:
//
//          GetGrafanaGrafanaUserConfigAuthGenericOauthArgs{...}
//
//  or:
//
//          nil
type GetGrafanaGrafanaUserConfigAuthGenericOauthPtrInput interface {
	pulumi.Input

	ToGetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput() GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput
	ToGetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(context.Context) GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput
}

type getGrafanaGrafanaUserConfigAuthGenericOauthPtrType GetGrafanaGrafanaUserConfigAuthGenericOauthArgs

func GetGrafanaGrafanaUserConfigAuthGenericOauthPtr(v *GetGrafanaGrafanaUserConfigAuthGenericOauthArgs) GetGrafanaGrafanaUserConfigAuthGenericOauthPtrInput {
	return (*getGrafanaGrafanaUserConfigAuthGenericOauthPtrType)(v)
}

func (*getGrafanaGrafanaUserConfigAuthGenericOauthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGrafanaGrafanaUserConfigAuthGenericOauth)(nil)).Elem()
}

func (i *getGrafanaGrafanaUserConfigAuthGenericOauthPtrType) ToGetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput() GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput {
	return i.ToGetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(context.Background())
}

func (i *getGrafanaGrafanaUserConfigAuthGenericOauthPtrType) ToGetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput)
}

type GetGrafanaGrafanaUserConfigAuthGenericOauthOutput struct{ *pulumi.OutputState }

func (GetGrafanaGrafanaUserConfigAuthGenericOauthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrafanaGrafanaUserConfigAuthGenericOauth)(nil)).Elem()
}

func (o GetGrafanaGrafanaUserConfigAuthGenericOauthOutput) ToGetGrafanaGrafanaUserConfigAuthGenericOauthOutput() GetGrafanaGrafanaUserConfigAuthGenericOauthOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigAuthGenericOauthOutput) ToGetGrafanaGrafanaUserConfigAuthGenericOauthOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigAuthGenericOauthOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigAuthGenericOauthOutput) ToGetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput() GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput {
	return o.ToGetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(context.Background())
}

func (o GetGrafanaGrafanaUserConfigAuthGenericOauthOutput) ToGetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGenericOauth) *GetGrafanaGrafanaUserConfigAuthGenericOauth {
		return &v
	}).(GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput)
}

// Automatically sign-up users on successful sign-in
func (o GetGrafanaGrafanaUserConfigAuthGenericOauthOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGenericOauth) *string { return v.AllowSignUp }).(pulumi.StringPtrOutput)
}

// Allowed domain
func (o GetGrafanaGrafanaUserConfigAuthGenericOauthOutput) AllowedDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGenericOauth) []string { return v.AllowedDomains }).(pulumi.StringArrayOutput)
}

// Must consist of alpha-numeric characters and dashes"
func (o GetGrafanaGrafanaUserConfigAuthGenericOauthOutput) AllowedOrganizations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGenericOauth) []string { return v.AllowedOrganizations }).(pulumi.StringArrayOutput)
}

// API URL. This only needs to be set when using self hosted GitLab
func (o GetGrafanaGrafanaUserConfigAuthGenericOauthOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGenericOauth) *string { return v.ApiUrl }).(pulumi.StringPtrOutput)
}

// Authorization URL. This only needs to be set when using self hosted GitLab
func (o GetGrafanaGrafanaUserConfigAuthGenericOauthOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGenericOauth) *string { return v.AuthUrl }).(pulumi.StringPtrOutput)
}

// Client ID from provider
func (o GetGrafanaGrafanaUserConfigAuthGenericOauthOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGenericOauth) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Client secret from provider
func (o GetGrafanaGrafanaUserConfigAuthGenericOauthOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGenericOauth) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Name of the OAuth integration
func (o GetGrafanaGrafanaUserConfigAuthGenericOauthOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGenericOauth) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Scope must be non-empty string without whitespace
func (o GetGrafanaGrafanaUserConfigAuthGenericOauthOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGenericOauth) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

// Token URL. This only needs to be set when using self hosted GitLab
func (o GetGrafanaGrafanaUserConfigAuthGenericOauthOutput) TokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGenericOauth) *string { return v.TokenUrl }).(pulumi.StringPtrOutput)
}

type GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput struct{ *pulumi.OutputState }

func (GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGrafanaGrafanaUserConfigAuthGenericOauth)(nil)).Elem()
}

func (o GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) ToGetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput() GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) ToGetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) Elem() GetGrafanaGrafanaUserConfigAuthGenericOauthOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGenericOauth) GetGrafanaGrafanaUserConfigAuthGenericOauth {
		return *v
	}).(GetGrafanaGrafanaUserConfigAuthGenericOauthOutput)
}

// Automatically sign-up users on successful sign-in
func (o GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.AllowSignUp
	}).(pulumi.StringPtrOutput)
}

// Allowed domain
func (o GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) AllowedDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGenericOauth) []string {
		if v == nil {
			return nil
		}
		return v.AllowedDomains
	}).(pulumi.StringArrayOutput)
}

// Must consist of alpha-numeric characters and dashes"
func (o GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) AllowedOrganizations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGenericOauth) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrganizations
	}).(pulumi.StringArrayOutput)
}

// API URL. This only needs to be set when using self hosted GitLab
func (o GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.ApiUrl
	}).(pulumi.StringPtrOutput)
}

// Authorization URL. This only needs to be set when using self hosted GitLab
func (o GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.AuthUrl
	}).(pulumi.StringPtrOutput)
}

// Client ID from provider
func (o GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client secret from provider
func (o GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Name of the OAuth integration
func (o GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Scope must be non-empty string without whitespace
func (o GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGenericOauth) []string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringArrayOutput)
}

// Token URL. This only needs to be set when using self hosted GitLab
func (o GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput) TokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.TokenUrl
	}).(pulumi.StringPtrOutput)
}

type GetGrafanaGrafanaUserConfigAuthGithub struct {
	// Automatically sign-up users on successful sign-in
	AllowSignUp *string `pulumi:"allowSignUp"`
	// Must consist of alpha-numeric characters and dashes"
	AllowedOrganizations []string `pulumi:"allowedOrganizations"`
	// Client ID from provider
	ClientId *string `pulumi:"clientId"`
	// Client secret from provider
	ClientSecret *string `pulumi:"clientSecret"`
	// Require users to belong to one of given team IDs
	TeamIds []string `pulumi:"teamIds"`
}

// GetGrafanaGrafanaUserConfigAuthGithubInput is an input type that accepts GetGrafanaGrafanaUserConfigAuthGithubArgs and GetGrafanaGrafanaUserConfigAuthGithubOutput values.
// You can construct a concrete instance of `GetGrafanaGrafanaUserConfigAuthGithubInput` via:
//
//          GetGrafanaGrafanaUserConfigAuthGithubArgs{...}
type GetGrafanaGrafanaUserConfigAuthGithubInput interface {
	pulumi.Input

	ToGetGrafanaGrafanaUserConfigAuthGithubOutput() GetGrafanaGrafanaUserConfigAuthGithubOutput
	ToGetGrafanaGrafanaUserConfigAuthGithubOutputWithContext(context.Context) GetGrafanaGrafanaUserConfigAuthGithubOutput
}

type GetGrafanaGrafanaUserConfigAuthGithubArgs struct {
	// Automatically sign-up users on successful sign-in
	AllowSignUp pulumi.StringPtrInput `pulumi:"allowSignUp"`
	// Must consist of alpha-numeric characters and dashes"
	AllowedOrganizations pulumi.StringArrayInput `pulumi:"allowedOrganizations"`
	// Client ID from provider
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Client secret from provider
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Require users to belong to one of given team IDs
	TeamIds pulumi.StringArrayInput `pulumi:"teamIds"`
}

func (GetGrafanaGrafanaUserConfigAuthGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrafanaGrafanaUserConfigAuthGithub)(nil)).Elem()
}

func (i GetGrafanaGrafanaUserConfigAuthGithubArgs) ToGetGrafanaGrafanaUserConfigAuthGithubOutput() GetGrafanaGrafanaUserConfigAuthGithubOutput {
	return i.ToGetGrafanaGrafanaUserConfigAuthGithubOutputWithContext(context.Background())
}

func (i GetGrafanaGrafanaUserConfigAuthGithubArgs) ToGetGrafanaGrafanaUserConfigAuthGithubOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigAuthGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigAuthGithubOutput)
}

func (i GetGrafanaGrafanaUserConfigAuthGithubArgs) ToGetGrafanaGrafanaUserConfigAuthGithubPtrOutput() GetGrafanaGrafanaUserConfigAuthGithubPtrOutput {
	return i.ToGetGrafanaGrafanaUserConfigAuthGithubPtrOutputWithContext(context.Background())
}

func (i GetGrafanaGrafanaUserConfigAuthGithubArgs) ToGetGrafanaGrafanaUserConfigAuthGithubPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigAuthGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigAuthGithubOutput).ToGetGrafanaGrafanaUserConfigAuthGithubPtrOutputWithContext(ctx)
}

// GetGrafanaGrafanaUserConfigAuthGithubPtrInput is an input type that accepts GetGrafanaGrafanaUserConfigAuthGithubArgs, GetGrafanaGrafanaUserConfigAuthGithubPtr and GetGrafanaGrafanaUserConfigAuthGithubPtrOutput values.
// You can construct a concrete instance of `GetGrafanaGrafanaUserConfigAuthGithubPtrInput` via:
//
//          GetGrafanaGrafanaUserConfigAuthGithubArgs{...}
//
//  or:
//
//          nil
type GetGrafanaGrafanaUserConfigAuthGithubPtrInput interface {
	pulumi.Input

	ToGetGrafanaGrafanaUserConfigAuthGithubPtrOutput() GetGrafanaGrafanaUserConfigAuthGithubPtrOutput
	ToGetGrafanaGrafanaUserConfigAuthGithubPtrOutputWithContext(context.Context) GetGrafanaGrafanaUserConfigAuthGithubPtrOutput
}

type getGrafanaGrafanaUserConfigAuthGithubPtrType GetGrafanaGrafanaUserConfigAuthGithubArgs

func GetGrafanaGrafanaUserConfigAuthGithubPtr(v *GetGrafanaGrafanaUserConfigAuthGithubArgs) GetGrafanaGrafanaUserConfigAuthGithubPtrInput {
	return (*getGrafanaGrafanaUserConfigAuthGithubPtrType)(v)
}

func (*getGrafanaGrafanaUserConfigAuthGithubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGrafanaGrafanaUserConfigAuthGithub)(nil)).Elem()
}

func (i *getGrafanaGrafanaUserConfigAuthGithubPtrType) ToGetGrafanaGrafanaUserConfigAuthGithubPtrOutput() GetGrafanaGrafanaUserConfigAuthGithubPtrOutput {
	return i.ToGetGrafanaGrafanaUserConfigAuthGithubPtrOutputWithContext(context.Background())
}

func (i *getGrafanaGrafanaUserConfigAuthGithubPtrType) ToGetGrafanaGrafanaUserConfigAuthGithubPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigAuthGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigAuthGithubPtrOutput)
}

type GetGrafanaGrafanaUserConfigAuthGithubOutput struct{ *pulumi.OutputState }

func (GetGrafanaGrafanaUserConfigAuthGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrafanaGrafanaUserConfigAuthGithub)(nil)).Elem()
}

func (o GetGrafanaGrafanaUserConfigAuthGithubOutput) ToGetGrafanaGrafanaUserConfigAuthGithubOutput() GetGrafanaGrafanaUserConfigAuthGithubOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigAuthGithubOutput) ToGetGrafanaGrafanaUserConfigAuthGithubOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigAuthGithubOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigAuthGithubOutput) ToGetGrafanaGrafanaUserConfigAuthGithubPtrOutput() GetGrafanaGrafanaUserConfigAuthGithubPtrOutput {
	return o.ToGetGrafanaGrafanaUserConfigAuthGithubPtrOutputWithContext(context.Background())
}

func (o GetGrafanaGrafanaUserConfigAuthGithubOutput) ToGetGrafanaGrafanaUserConfigAuthGithubPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigAuthGithubPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGithub) *GetGrafanaGrafanaUserConfigAuthGithub {
		return &v
	}).(GetGrafanaGrafanaUserConfigAuthGithubPtrOutput)
}

// Automatically sign-up users on successful sign-in
func (o GetGrafanaGrafanaUserConfigAuthGithubOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGithub) *string { return v.AllowSignUp }).(pulumi.StringPtrOutput)
}

// Must consist of alpha-numeric characters and dashes"
func (o GetGrafanaGrafanaUserConfigAuthGithubOutput) AllowedOrganizations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGithub) []string { return v.AllowedOrganizations }).(pulumi.StringArrayOutput)
}

// Client ID from provider
func (o GetGrafanaGrafanaUserConfigAuthGithubOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGithub) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Client secret from provider
func (o GetGrafanaGrafanaUserConfigAuthGithubOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGithub) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Require users to belong to one of given team IDs
func (o GetGrafanaGrafanaUserConfigAuthGithubOutput) TeamIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGithub) []string { return v.TeamIds }).(pulumi.StringArrayOutput)
}

type GetGrafanaGrafanaUserConfigAuthGithubPtrOutput struct{ *pulumi.OutputState }

func (GetGrafanaGrafanaUserConfigAuthGithubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGrafanaGrafanaUserConfigAuthGithub)(nil)).Elem()
}

func (o GetGrafanaGrafanaUserConfigAuthGithubPtrOutput) ToGetGrafanaGrafanaUserConfigAuthGithubPtrOutput() GetGrafanaGrafanaUserConfigAuthGithubPtrOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigAuthGithubPtrOutput) ToGetGrafanaGrafanaUserConfigAuthGithubPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigAuthGithubPtrOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigAuthGithubPtrOutput) Elem() GetGrafanaGrafanaUserConfigAuthGithubOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGithub) GetGrafanaGrafanaUserConfigAuthGithub { return *v }).(GetGrafanaGrafanaUserConfigAuthGithubOutput)
}

// Automatically sign-up users on successful sign-in
func (o GetGrafanaGrafanaUserConfigAuthGithubPtrOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGithub) *string {
		if v == nil {
			return nil
		}
		return v.AllowSignUp
	}).(pulumi.StringPtrOutput)
}

// Must consist of alpha-numeric characters and dashes"
func (o GetGrafanaGrafanaUserConfigAuthGithubPtrOutput) AllowedOrganizations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGithub) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrganizations
	}).(pulumi.StringArrayOutput)
}

// Client ID from provider
func (o GetGrafanaGrafanaUserConfigAuthGithubPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGithub) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client secret from provider
func (o GetGrafanaGrafanaUserConfigAuthGithubPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGithub) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Require users to belong to one of given team IDs
func (o GetGrafanaGrafanaUserConfigAuthGithubPtrOutput) TeamIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGithub) []string {
		if v == nil {
			return nil
		}
		return v.TeamIds
	}).(pulumi.StringArrayOutput)
}

type GetGrafanaGrafanaUserConfigAuthGitlab struct {
	// Automatically sign-up users on successful sign-in
	AllowSignUp *string `pulumi:"allowSignUp"`
	// Require users to belong to one of given groups
	AllowedGroups []string `pulumi:"allowedGroups"`
	// API URL. This only needs to be set when using self hosted GitLab
	ApiUrl *string `pulumi:"apiUrl"`
	// Authorization URL. This only needs to be set when using self hosted GitLab
	AuthUrl *string `pulumi:"authUrl"`
	// Client ID from provider
	ClientId *string `pulumi:"clientId"`
	// Client secret from provider
	ClientSecret *string `pulumi:"clientSecret"`
	// Token URL. This only needs to be set when using self hosted GitLab
	TokenUrl *string `pulumi:"tokenUrl"`
}

// GetGrafanaGrafanaUserConfigAuthGitlabInput is an input type that accepts GetGrafanaGrafanaUserConfigAuthGitlabArgs and GetGrafanaGrafanaUserConfigAuthGitlabOutput values.
// You can construct a concrete instance of `GetGrafanaGrafanaUserConfigAuthGitlabInput` via:
//
//          GetGrafanaGrafanaUserConfigAuthGitlabArgs{...}
type GetGrafanaGrafanaUserConfigAuthGitlabInput interface {
	pulumi.Input

	ToGetGrafanaGrafanaUserConfigAuthGitlabOutput() GetGrafanaGrafanaUserConfigAuthGitlabOutput
	ToGetGrafanaGrafanaUserConfigAuthGitlabOutputWithContext(context.Context) GetGrafanaGrafanaUserConfigAuthGitlabOutput
}

type GetGrafanaGrafanaUserConfigAuthGitlabArgs struct {
	// Automatically sign-up users on successful sign-in
	AllowSignUp pulumi.StringPtrInput `pulumi:"allowSignUp"`
	// Require users to belong to one of given groups
	AllowedGroups pulumi.StringArrayInput `pulumi:"allowedGroups"`
	// API URL. This only needs to be set when using self hosted GitLab
	ApiUrl pulumi.StringPtrInput `pulumi:"apiUrl"`
	// Authorization URL. This only needs to be set when using self hosted GitLab
	AuthUrl pulumi.StringPtrInput `pulumi:"authUrl"`
	// Client ID from provider
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Client secret from provider
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Token URL. This only needs to be set when using self hosted GitLab
	TokenUrl pulumi.StringPtrInput `pulumi:"tokenUrl"`
}

func (GetGrafanaGrafanaUserConfigAuthGitlabArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrafanaGrafanaUserConfigAuthGitlab)(nil)).Elem()
}

func (i GetGrafanaGrafanaUserConfigAuthGitlabArgs) ToGetGrafanaGrafanaUserConfigAuthGitlabOutput() GetGrafanaGrafanaUserConfigAuthGitlabOutput {
	return i.ToGetGrafanaGrafanaUserConfigAuthGitlabOutputWithContext(context.Background())
}

func (i GetGrafanaGrafanaUserConfigAuthGitlabArgs) ToGetGrafanaGrafanaUserConfigAuthGitlabOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigAuthGitlabOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigAuthGitlabOutput)
}

func (i GetGrafanaGrafanaUserConfigAuthGitlabArgs) ToGetGrafanaGrafanaUserConfigAuthGitlabPtrOutput() GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput {
	return i.ToGetGrafanaGrafanaUserConfigAuthGitlabPtrOutputWithContext(context.Background())
}

func (i GetGrafanaGrafanaUserConfigAuthGitlabArgs) ToGetGrafanaGrafanaUserConfigAuthGitlabPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigAuthGitlabOutput).ToGetGrafanaGrafanaUserConfigAuthGitlabPtrOutputWithContext(ctx)
}

// GetGrafanaGrafanaUserConfigAuthGitlabPtrInput is an input type that accepts GetGrafanaGrafanaUserConfigAuthGitlabArgs, GetGrafanaGrafanaUserConfigAuthGitlabPtr and GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput values.
// You can construct a concrete instance of `GetGrafanaGrafanaUserConfigAuthGitlabPtrInput` via:
//
//          GetGrafanaGrafanaUserConfigAuthGitlabArgs{...}
//
//  or:
//
//          nil
type GetGrafanaGrafanaUserConfigAuthGitlabPtrInput interface {
	pulumi.Input

	ToGetGrafanaGrafanaUserConfigAuthGitlabPtrOutput() GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput
	ToGetGrafanaGrafanaUserConfigAuthGitlabPtrOutputWithContext(context.Context) GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput
}

type getGrafanaGrafanaUserConfigAuthGitlabPtrType GetGrafanaGrafanaUserConfigAuthGitlabArgs

func GetGrafanaGrafanaUserConfigAuthGitlabPtr(v *GetGrafanaGrafanaUserConfigAuthGitlabArgs) GetGrafanaGrafanaUserConfigAuthGitlabPtrInput {
	return (*getGrafanaGrafanaUserConfigAuthGitlabPtrType)(v)
}

func (*getGrafanaGrafanaUserConfigAuthGitlabPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGrafanaGrafanaUserConfigAuthGitlab)(nil)).Elem()
}

func (i *getGrafanaGrafanaUserConfigAuthGitlabPtrType) ToGetGrafanaGrafanaUserConfigAuthGitlabPtrOutput() GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput {
	return i.ToGetGrafanaGrafanaUserConfigAuthGitlabPtrOutputWithContext(context.Background())
}

func (i *getGrafanaGrafanaUserConfigAuthGitlabPtrType) ToGetGrafanaGrafanaUserConfigAuthGitlabPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput)
}

type GetGrafanaGrafanaUserConfigAuthGitlabOutput struct{ *pulumi.OutputState }

func (GetGrafanaGrafanaUserConfigAuthGitlabOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrafanaGrafanaUserConfigAuthGitlab)(nil)).Elem()
}

func (o GetGrafanaGrafanaUserConfigAuthGitlabOutput) ToGetGrafanaGrafanaUserConfigAuthGitlabOutput() GetGrafanaGrafanaUserConfigAuthGitlabOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigAuthGitlabOutput) ToGetGrafanaGrafanaUserConfigAuthGitlabOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigAuthGitlabOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigAuthGitlabOutput) ToGetGrafanaGrafanaUserConfigAuthGitlabPtrOutput() GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput {
	return o.ToGetGrafanaGrafanaUserConfigAuthGitlabPtrOutputWithContext(context.Background())
}

func (o GetGrafanaGrafanaUserConfigAuthGitlabOutput) ToGetGrafanaGrafanaUserConfigAuthGitlabPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGitlab) *GetGrafanaGrafanaUserConfigAuthGitlab {
		return &v
	}).(GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput)
}

// Automatically sign-up users on successful sign-in
func (o GetGrafanaGrafanaUserConfigAuthGitlabOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGitlab) *string { return v.AllowSignUp }).(pulumi.StringPtrOutput)
}

// Require users to belong to one of given groups
func (o GetGrafanaGrafanaUserConfigAuthGitlabOutput) AllowedGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGitlab) []string { return v.AllowedGroups }).(pulumi.StringArrayOutput)
}

// API URL. This only needs to be set when using self hosted GitLab
func (o GetGrafanaGrafanaUserConfigAuthGitlabOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGitlab) *string { return v.ApiUrl }).(pulumi.StringPtrOutput)
}

// Authorization URL. This only needs to be set when using self hosted GitLab
func (o GetGrafanaGrafanaUserConfigAuthGitlabOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGitlab) *string { return v.AuthUrl }).(pulumi.StringPtrOutput)
}

// Client ID from provider
func (o GetGrafanaGrafanaUserConfigAuthGitlabOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGitlab) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Client secret from provider
func (o GetGrafanaGrafanaUserConfigAuthGitlabOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGitlab) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Token URL. This only needs to be set when using self hosted GitLab
func (o GetGrafanaGrafanaUserConfigAuthGitlabOutput) TokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGitlab) *string { return v.TokenUrl }).(pulumi.StringPtrOutput)
}

type GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput struct{ *pulumi.OutputState }

func (GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGrafanaGrafanaUserConfigAuthGitlab)(nil)).Elem()
}

func (o GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput) ToGetGrafanaGrafanaUserConfigAuthGitlabPtrOutput() GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput) ToGetGrafanaGrafanaUserConfigAuthGitlabPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput) Elem() GetGrafanaGrafanaUserConfigAuthGitlabOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGitlab) GetGrafanaGrafanaUserConfigAuthGitlab { return *v }).(GetGrafanaGrafanaUserConfigAuthGitlabOutput)
}

// Automatically sign-up users on successful sign-in
func (o GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGitlab) *string {
		if v == nil {
			return nil
		}
		return v.AllowSignUp
	}).(pulumi.StringPtrOutput)
}

// Require users to belong to one of given groups
func (o GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput) AllowedGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGitlab) []string {
		if v == nil {
			return nil
		}
		return v.AllowedGroups
	}).(pulumi.StringArrayOutput)
}

// API URL. This only needs to be set when using self hosted GitLab
func (o GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGitlab) *string {
		if v == nil {
			return nil
		}
		return v.ApiUrl
	}).(pulumi.StringPtrOutput)
}

// Authorization URL. This only needs to be set when using self hosted GitLab
func (o GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGitlab) *string {
		if v == nil {
			return nil
		}
		return v.AuthUrl
	}).(pulumi.StringPtrOutput)
}

// Client ID from provider
func (o GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGitlab) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client secret from provider
func (o GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGitlab) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Token URL. This only needs to be set when using self hosted GitLab
func (o GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput) TokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGitlab) *string {
		if v == nil {
			return nil
		}
		return v.TokenUrl
	}).(pulumi.StringPtrOutput)
}

type GetGrafanaGrafanaUserConfigAuthGoogle struct {
	// Automatically sign-up users on successful sign-in
	AllowSignUp *string `pulumi:"allowSignUp"`
	// Allowed domain
	AllowedDomains []string `pulumi:"allowedDomains"`
	// Client ID from provider
	ClientId *string `pulumi:"clientId"`
	// Client secret from provider
	ClientSecret *string `pulumi:"clientSecret"`
}

// GetGrafanaGrafanaUserConfigAuthGoogleInput is an input type that accepts GetGrafanaGrafanaUserConfigAuthGoogleArgs and GetGrafanaGrafanaUserConfigAuthGoogleOutput values.
// You can construct a concrete instance of `GetGrafanaGrafanaUserConfigAuthGoogleInput` via:
//
//          GetGrafanaGrafanaUserConfigAuthGoogleArgs{...}
type GetGrafanaGrafanaUserConfigAuthGoogleInput interface {
	pulumi.Input

	ToGetGrafanaGrafanaUserConfigAuthGoogleOutput() GetGrafanaGrafanaUserConfigAuthGoogleOutput
	ToGetGrafanaGrafanaUserConfigAuthGoogleOutputWithContext(context.Context) GetGrafanaGrafanaUserConfigAuthGoogleOutput
}

type GetGrafanaGrafanaUserConfigAuthGoogleArgs struct {
	// Automatically sign-up users on successful sign-in
	AllowSignUp pulumi.StringPtrInput `pulumi:"allowSignUp"`
	// Allowed domain
	AllowedDomains pulumi.StringArrayInput `pulumi:"allowedDomains"`
	// Client ID from provider
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Client secret from provider
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
}

func (GetGrafanaGrafanaUserConfigAuthGoogleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrafanaGrafanaUserConfigAuthGoogle)(nil)).Elem()
}

func (i GetGrafanaGrafanaUserConfigAuthGoogleArgs) ToGetGrafanaGrafanaUserConfigAuthGoogleOutput() GetGrafanaGrafanaUserConfigAuthGoogleOutput {
	return i.ToGetGrafanaGrafanaUserConfigAuthGoogleOutputWithContext(context.Background())
}

func (i GetGrafanaGrafanaUserConfigAuthGoogleArgs) ToGetGrafanaGrafanaUserConfigAuthGoogleOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigAuthGoogleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigAuthGoogleOutput)
}

func (i GetGrafanaGrafanaUserConfigAuthGoogleArgs) ToGetGrafanaGrafanaUserConfigAuthGooglePtrOutput() GetGrafanaGrafanaUserConfigAuthGooglePtrOutput {
	return i.ToGetGrafanaGrafanaUserConfigAuthGooglePtrOutputWithContext(context.Background())
}

func (i GetGrafanaGrafanaUserConfigAuthGoogleArgs) ToGetGrafanaGrafanaUserConfigAuthGooglePtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigAuthGooglePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigAuthGoogleOutput).ToGetGrafanaGrafanaUserConfigAuthGooglePtrOutputWithContext(ctx)
}

// GetGrafanaGrafanaUserConfigAuthGooglePtrInput is an input type that accepts GetGrafanaGrafanaUserConfigAuthGoogleArgs, GetGrafanaGrafanaUserConfigAuthGooglePtr and GetGrafanaGrafanaUserConfigAuthGooglePtrOutput values.
// You can construct a concrete instance of `GetGrafanaGrafanaUserConfigAuthGooglePtrInput` via:
//
//          GetGrafanaGrafanaUserConfigAuthGoogleArgs{...}
//
//  or:
//
//          nil
type GetGrafanaGrafanaUserConfigAuthGooglePtrInput interface {
	pulumi.Input

	ToGetGrafanaGrafanaUserConfigAuthGooglePtrOutput() GetGrafanaGrafanaUserConfigAuthGooglePtrOutput
	ToGetGrafanaGrafanaUserConfigAuthGooglePtrOutputWithContext(context.Context) GetGrafanaGrafanaUserConfigAuthGooglePtrOutput
}

type getGrafanaGrafanaUserConfigAuthGooglePtrType GetGrafanaGrafanaUserConfigAuthGoogleArgs

func GetGrafanaGrafanaUserConfigAuthGooglePtr(v *GetGrafanaGrafanaUserConfigAuthGoogleArgs) GetGrafanaGrafanaUserConfigAuthGooglePtrInput {
	return (*getGrafanaGrafanaUserConfigAuthGooglePtrType)(v)
}

func (*getGrafanaGrafanaUserConfigAuthGooglePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGrafanaGrafanaUserConfigAuthGoogle)(nil)).Elem()
}

func (i *getGrafanaGrafanaUserConfigAuthGooglePtrType) ToGetGrafanaGrafanaUserConfigAuthGooglePtrOutput() GetGrafanaGrafanaUserConfigAuthGooglePtrOutput {
	return i.ToGetGrafanaGrafanaUserConfigAuthGooglePtrOutputWithContext(context.Background())
}

func (i *getGrafanaGrafanaUserConfigAuthGooglePtrType) ToGetGrafanaGrafanaUserConfigAuthGooglePtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigAuthGooglePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigAuthGooglePtrOutput)
}

type GetGrafanaGrafanaUserConfigAuthGoogleOutput struct{ *pulumi.OutputState }

func (GetGrafanaGrafanaUserConfigAuthGoogleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrafanaGrafanaUserConfigAuthGoogle)(nil)).Elem()
}

func (o GetGrafanaGrafanaUserConfigAuthGoogleOutput) ToGetGrafanaGrafanaUserConfigAuthGoogleOutput() GetGrafanaGrafanaUserConfigAuthGoogleOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigAuthGoogleOutput) ToGetGrafanaGrafanaUserConfigAuthGoogleOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigAuthGoogleOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigAuthGoogleOutput) ToGetGrafanaGrafanaUserConfigAuthGooglePtrOutput() GetGrafanaGrafanaUserConfigAuthGooglePtrOutput {
	return o.ToGetGrafanaGrafanaUserConfigAuthGooglePtrOutputWithContext(context.Background())
}

func (o GetGrafanaGrafanaUserConfigAuthGoogleOutput) ToGetGrafanaGrafanaUserConfigAuthGooglePtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigAuthGooglePtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGoogle) *GetGrafanaGrafanaUserConfigAuthGoogle {
		return &v
	}).(GetGrafanaGrafanaUserConfigAuthGooglePtrOutput)
}

// Automatically sign-up users on successful sign-in
func (o GetGrafanaGrafanaUserConfigAuthGoogleOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGoogle) *string { return v.AllowSignUp }).(pulumi.StringPtrOutput)
}

// Allowed domain
func (o GetGrafanaGrafanaUserConfigAuthGoogleOutput) AllowedDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGoogle) []string { return v.AllowedDomains }).(pulumi.StringArrayOutput)
}

// Client ID from provider
func (o GetGrafanaGrafanaUserConfigAuthGoogleOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGoogle) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Client secret from provider
func (o GetGrafanaGrafanaUserConfigAuthGoogleOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigAuthGoogle) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

type GetGrafanaGrafanaUserConfigAuthGooglePtrOutput struct{ *pulumi.OutputState }

func (GetGrafanaGrafanaUserConfigAuthGooglePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGrafanaGrafanaUserConfigAuthGoogle)(nil)).Elem()
}

func (o GetGrafanaGrafanaUserConfigAuthGooglePtrOutput) ToGetGrafanaGrafanaUserConfigAuthGooglePtrOutput() GetGrafanaGrafanaUserConfigAuthGooglePtrOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigAuthGooglePtrOutput) ToGetGrafanaGrafanaUserConfigAuthGooglePtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigAuthGooglePtrOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigAuthGooglePtrOutput) Elem() GetGrafanaGrafanaUserConfigAuthGoogleOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGoogle) GetGrafanaGrafanaUserConfigAuthGoogle { return *v }).(GetGrafanaGrafanaUserConfigAuthGoogleOutput)
}

// Automatically sign-up users on successful sign-in
func (o GetGrafanaGrafanaUserConfigAuthGooglePtrOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGoogle) *string {
		if v == nil {
			return nil
		}
		return v.AllowSignUp
	}).(pulumi.StringPtrOutput)
}

// Allowed domain
func (o GetGrafanaGrafanaUserConfigAuthGooglePtrOutput) AllowedDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGoogle) []string {
		if v == nil {
			return nil
		}
		return v.AllowedDomains
	}).(pulumi.StringArrayOutput)
}

// Client ID from provider
func (o GetGrafanaGrafanaUserConfigAuthGooglePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGoogle) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client secret from provider
func (o GetGrafanaGrafanaUserConfigAuthGooglePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigAuthGoogle) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

type GetGrafanaGrafanaUserConfigExternalImageStorage struct {
	// S3 access key. Requires permissions to the S3 bucket for the
	// s3:PutObject and s3:PutObjectAcl actions
	AccessKey *string `pulumi:"accessKey"`
	// Bucket URL for S3
	BucketUrl *string `pulumi:"bucketUrl"`
	// Provider type
	Provider *string `pulumi:"provider"`
	// S3 secret key
	SecretKey *string `pulumi:"secretKey"`
}

// GetGrafanaGrafanaUserConfigExternalImageStorageInput is an input type that accepts GetGrafanaGrafanaUserConfigExternalImageStorageArgs and GetGrafanaGrafanaUserConfigExternalImageStorageOutput values.
// You can construct a concrete instance of `GetGrafanaGrafanaUserConfigExternalImageStorageInput` via:
//
//          GetGrafanaGrafanaUserConfigExternalImageStorageArgs{...}
type GetGrafanaGrafanaUserConfigExternalImageStorageInput interface {
	pulumi.Input

	ToGetGrafanaGrafanaUserConfigExternalImageStorageOutput() GetGrafanaGrafanaUserConfigExternalImageStorageOutput
	ToGetGrafanaGrafanaUserConfigExternalImageStorageOutputWithContext(context.Context) GetGrafanaGrafanaUserConfigExternalImageStorageOutput
}

type GetGrafanaGrafanaUserConfigExternalImageStorageArgs struct {
	// S3 access key. Requires permissions to the S3 bucket for the
	// s3:PutObject and s3:PutObjectAcl actions
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Bucket URL for S3
	BucketUrl pulumi.StringPtrInput `pulumi:"bucketUrl"`
	// Provider type
	Provider pulumi.StringPtrInput `pulumi:"provider"`
	// S3 secret key
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
}

func (GetGrafanaGrafanaUserConfigExternalImageStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrafanaGrafanaUserConfigExternalImageStorage)(nil)).Elem()
}

func (i GetGrafanaGrafanaUserConfigExternalImageStorageArgs) ToGetGrafanaGrafanaUserConfigExternalImageStorageOutput() GetGrafanaGrafanaUserConfigExternalImageStorageOutput {
	return i.ToGetGrafanaGrafanaUserConfigExternalImageStorageOutputWithContext(context.Background())
}

func (i GetGrafanaGrafanaUserConfigExternalImageStorageArgs) ToGetGrafanaGrafanaUserConfigExternalImageStorageOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigExternalImageStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigExternalImageStorageOutput)
}

func (i GetGrafanaGrafanaUserConfigExternalImageStorageArgs) ToGetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput() GetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput {
	return i.ToGetGrafanaGrafanaUserConfigExternalImageStoragePtrOutputWithContext(context.Background())
}

func (i GetGrafanaGrafanaUserConfigExternalImageStorageArgs) ToGetGrafanaGrafanaUserConfigExternalImageStoragePtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigExternalImageStorageOutput).ToGetGrafanaGrafanaUserConfigExternalImageStoragePtrOutputWithContext(ctx)
}

// GetGrafanaGrafanaUserConfigExternalImageStoragePtrInput is an input type that accepts GetGrafanaGrafanaUserConfigExternalImageStorageArgs, GetGrafanaGrafanaUserConfigExternalImageStoragePtr and GetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput values.
// You can construct a concrete instance of `GetGrafanaGrafanaUserConfigExternalImageStoragePtrInput` via:
//
//          GetGrafanaGrafanaUserConfigExternalImageStorageArgs{...}
//
//  or:
//
//          nil
type GetGrafanaGrafanaUserConfigExternalImageStoragePtrInput interface {
	pulumi.Input

	ToGetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput() GetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput
	ToGetGrafanaGrafanaUserConfigExternalImageStoragePtrOutputWithContext(context.Context) GetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput
}

type getGrafanaGrafanaUserConfigExternalImageStoragePtrType GetGrafanaGrafanaUserConfigExternalImageStorageArgs

func GetGrafanaGrafanaUserConfigExternalImageStoragePtr(v *GetGrafanaGrafanaUserConfigExternalImageStorageArgs) GetGrafanaGrafanaUserConfigExternalImageStoragePtrInput {
	return (*getGrafanaGrafanaUserConfigExternalImageStoragePtrType)(v)
}

func (*getGrafanaGrafanaUserConfigExternalImageStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGrafanaGrafanaUserConfigExternalImageStorage)(nil)).Elem()
}

func (i *getGrafanaGrafanaUserConfigExternalImageStoragePtrType) ToGetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput() GetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput {
	return i.ToGetGrafanaGrafanaUserConfigExternalImageStoragePtrOutputWithContext(context.Background())
}

func (i *getGrafanaGrafanaUserConfigExternalImageStoragePtrType) ToGetGrafanaGrafanaUserConfigExternalImageStoragePtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput)
}

type GetGrafanaGrafanaUserConfigExternalImageStorageOutput struct{ *pulumi.OutputState }

func (GetGrafanaGrafanaUserConfigExternalImageStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrafanaGrafanaUserConfigExternalImageStorage)(nil)).Elem()
}

func (o GetGrafanaGrafanaUserConfigExternalImageStorageOutput) ToGetGrafanaGrafanaUserConfigExternalImageStorageOutput() GetGrafanaGrafanaUserConfigExternalImageStorageOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigExternalImageStorageOutput) ToGetGrafanaGrafanaUserConfigExternalImageStorageOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigExternalImageStorageOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigExternalImageStorageOutput) ToGetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput() GetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput {
	return o.ToGetGrafanaGrafanaUserConfigExternalImageStoragePtrOutputWithContext(context.Background())
}

func (o GetGrafanaGrafanaUserConfigExternalImageStorageOutput) ToGetGrafanaGrafanaUserConfigExternalImageStoragePtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigExternalImageStorage) *GetGrafanaGrafanaUserConfigExternalImageStorage {
		return &v
	}).(GetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput)
}

// S3 access key. Requires permissions to the S3 bucket for the
// s3:PutObject and s3:PutObjectAcl actions
func (o GetGrafanaGrafanaUserConfigExternalImageStorageOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigExternalImageStorage) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Bucket URL for S3
func (o GetGrafanaGrafanaUserConfigExternalImageStorageOutput) BucketUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigExternalImageStorage) *string { return v.BucketUrl }).(pulumi.StringPtrOutput)
}

// Provider type
func (o GetGrafanaGrafanaUserConfigExternalImageStorageOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigExternalImageStorage) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

// S3 secret key
func (o GetGrafanaGrafanaUserConfigExternalImageStorageOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigExternalImageStorage) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

type GetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput struct{ *pulumi.OutputState }

func (GetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGrafanaGrafanaUserConfigExternalImageStorage)(nil)).Elem()
}

func (o GetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput) ToGetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput() GetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput) ToGetGrafanaGrafanaUserConfigExternalImageStoragePtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput) Elem() GetGrafanaGrafanaUserConfigExternalImageStorageOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigExternalImageStorage) GetGrafanaGrafanaUserConfigExternalImageStorage {
		return *v
	}).(GetGrafanaGrafanaUserConfigExternalImageStorageOutput)
}

// S3 access key. Requires permissions to the S3 bucket for the
// s3:PutObject and s3:PutObjectAcl actions
func (o GetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigExternalImageStorage) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Bucket URL for S3
func (o GetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput) BucketUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigExternalImageStorage) *string {
		if v == nil {
			return nil
		}
		return v.BucketUrl
	}).(pulumi.StringPtrOutput)
}

// Provider type
func (o GetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigExternalImageStorage) *string {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(pulumi.StringPtrOutput)
}

// S3 secret key
func (o GetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigExternalImageStorage) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

type GetGrafanaGrafanaUserConfigPrivateAccess struct {
	// Grafana specific server provided values.
	Grafana *string `pulumi:"grafana"`
}

// GetGrafanaGrafanaUserConfigPrivateAccessInput is an input type that accepts GetGrafanaGrafanaUserConfigPrivateAccessArgs and GetGrafanaGrafanaUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `GetGrafanaGrafanaUserConfigPrivateAccessInput` via:
//
//          GetGrafanaGrafanaUserConfigPrivateAccessArgs{...}
type GetGrafanaGrafanaUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToGetGrafanaGrafanaUserConfigPrivateAccessOutput() GetGrafanaGrafanaUserConfigPrivateAccessOutput
	ToGetGrafanaGrafanaUserConfigPrivateAccessOutputWithContext(context.Context) GetGrafanaGrafanaUserConfigPrivateAccessOutput
}

type GetGrafanaGrafanaUserConfigPrivateAccessArgs struct {
	// Grafana specific server provided values.
	Grafana pulumi.StringPtrInput `pulumi:"grafana"`
}

func (GetGrafanaGrafanaUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrafanaGrafanaUserConfigPrivateAccess)(nil)).Elem()
}

func (i GetGrafanaGrafanaUserConfigPrivateAccessArgs) ToGetGrafanaGrafanaUserConfigPrivateAccessOutput() GetGrafanaGrafanaUserConfigPrivateAccessOutput {
	return i.ToGetGrafanaGrafanaUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i GetGrafanaGrafanaUserConfigPrivateAccessArgs) ToGetGrafanaGrafanaUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigPrivateAccessOutput)
}

func (i GetGrafanaGrafanaUserConfigPrivateAccessArgs) ToGetGrafanaGrafanaUserConfigPrivateAccessPtrOutput() GetGrafanaGrafanaUserConfigPrivateAccessPtrOutput {
	return i.ToGetGrafanaGrafanaUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i GetGrafanaGrafanaUserConfigPrivateAccessArgs) ToGetGrafanaGrafanaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigPrivateAccessOutput).ToGetGrafanaGrafanaUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// GetGrafanaGrafanaUserConfigPrivateAccessPtrInput is an input type that accepts GetGrafanaGrafanaUserConfigPrivateAccessArgs, GetGrafanaGrafanaUserConfigPrivateAccessPtr and GetGrafanaGrafanaUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `GetGrafanaGrafanaUserConfigPrivateAccessPtrInput` via:
//
//          GetGrafanaGrafanaUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type GetGrafanaGrafanaUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToGetGrafanaGrafanaUserConfigPrivateAccessPtrOutput() GetGrafanaGrafanaUserConfigPrivateAccessPtrOutput
	ToGetGrafanaGrafanaUserConfigPrivateAccessPtrOutputWithContext(context.Context) GetGrafanaGrafanaUserConfigPrivateAccessPtrOutput
}

type getGrafanaGrafanaUserConfigPrivateAccessPtrType GetGrafanaGrafanaUserConfigPrivateAccessArgs

func GetGrafanaGrafanaUserConfigPrivateAccessPtr(v *GetGrafanaGrafanaUserConfigPrivateAccessArgs) GetGrafanaGrafanaUserConfigPrivateAccessPtrInput {
	return (*getGrafanaGrafanaUserConfigPrivateAccessPtrType)(v)
}

func (*getGrafanaGrafanaUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGrafanaGrafanaUserConfigPrivateAccess)(nil)).Elem()
}

func (i *getGrafanaGrafanaUserConfigPrivateAccessPtrType) ToGetGrafanaGrafanaUserConfigPrivateAccessPtrOutput() GetGrafanaGrafanaUserConfigPrivateAccessPtrOutput {
	return i.ToGetGrafanaGrafanaUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *getGrafanaGrafanaUserConfigPrivateAccessPtrType) ToGetGrafanaGrafanaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigPrivateAccessPtrOutput)
}

type GetGrafanaGrafanaUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (GetGrafanaGrafanaUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrafanaGrafanaUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetGrafanaGrafanaUserConfigPrivateAccessOutput) ToGetGrafanaGrafanaUserConfigPrivateAccessOutput() GetGrafanaGrafanaUserConfigPrivateAccessOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigPrivateAccessOutput) ToGetGrafanaGrafanaUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigPrivateAccessOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigPrivateAccessOutput) ToGetGrafanaGrafanaUserConfigPrivateAccessPtrOutput() GetGrafanaGrafanaUserConfigPrivateAccessPtrOutput {
	return o.ToGetGrafanaGrafanaUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o GetGrafanaGrafanaUserConfigPrivateAccessOutput) ToGetGrafanaGrafanaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigPrivateAccess) *GetGrafanaGrafanaUserConfigPrivateAccess {
		return &v
	}).(GetGrafanaGrafanaUserConfigPrivateAccessPtrOutput)
}

// Grafana specific server provided values.
func (o GetGrafanaGrafanaUserConfigPrivateAccessOutput) Grafana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigPrivateAccess) *string { return v.Grafana }).(pulumi.StringPtrOutput)
}

type GetGrafanaGrafanaUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (GetGrafanaGrafanaUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGrafanaGrafanaUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetGrafanaGrafanaUserConfigPrivateAccessPtrOutput) ToGetGrafanaGrafanaUserConfigPrivateAccessPtrOutput() GetGrafanaGrafanaUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigPrivateAccessPtrOutput) ToGetGrafanaGrafanaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigPrivateAccessPtrOutput) Elem() GetGrafanaGrafanaUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigPrivateAccess) GetGrafanaGrafanaUserConfigPrivateAccess { return *v }).(GetGrafanaGrafanaUserConfigPrivateAccessOutput)
}

// Grafana specific server provided values.
func (o GetGrafanaGrafanaUserConfigPrivateAccessPtrOutput) Grafana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Grafana
	}).(pulumi.StringPtrOutput)
}

type GetGrafanaGrafanaUserConfigPrivatelinkAccess struct {
	// Grafana specific server provided values.
	Grafana *string `pulumi:"grafana"`
}

// GetGrafanaGrafanaUserConfigPrivatelinkAccessInput is an input type that accepts GetGrafanaGrafanaUserConfigPrivatelinkAccessArgs and GetGrafanaGrafanaUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `GetGrafanaGrafanaUserConfigPrivatelinkAccessInput` via:
//
//          GetGrafanaGrafanaUserConfigPrivatelinkAccessArgs{...}
type GetGrafanaGrafanaUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToGetGrafanaGrafanaUserConfigPrivatelinkAccessOutput() GetGrafanaGrafanaUserConfigPrivatelinkAccessOutput
	ToGetGrafanaGrafanaUserConfigPrivatelinkAccessOutputWithContext(context.Context) GetGrafanaGrafanaUserConfigPrivatelinkAccessOutput
}

type GetGrafanaGrafanaUserConfigPrivatelinkAccessArgs struct {
	// Grafana specific server provided values.
	Grafana pulumi.StringPtrInput `pulumi:"grafana"`
}

func (GetGrafanaGrafanaUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrafanaGrafanaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i GetGrafanaGrafanaUserConfigPrivatelinkAccessArgs) ToGetGrafanaGrafanaUserConfigPrivatelinkAccessOutput() GetGrafanaGrafanaUserConfigPrivatelinkAccessOutput {
	return i.ToGetGrafanaGrafanaUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i GetGrafanaGrafanaUserConfigPrivatelinkAccessArgs) ToGetGrafanaGrafanaUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigPrivatelinkAccessOutput)
}

func (i GetGrafanaGrafanaUserConfigPrivatelinkAccessArgs) ToGetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput() GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i GetGrafanaGrafanaUserConfigPrivatelinkAccessArgs) ToGetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigPrivatelinkAccessOutput).ToGetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrInput is an input type that accepts GetGrafanaGrafanaUserConfigPrivatelinkAccessArgs, GetGrafanaGrafanaUserConfigPrivatelinkAccessPtr and GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrInput` via:
//
//          GetGrafanaGrafanaUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToGetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput() GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput
	ToGetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput
}

type getGrafanaGrafanaUserConfigPrivatelinkAccessPtrType GetGrafanaGrafanaUserConfigPrivatelinkAccessArgs

func GetGrafanaGrafanaUserConfigPrivatelinkAccessPtr(v *GetGrafanaGrafanaUserConfigPrivatelinkAccessArgs) GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrInput {
	return (*getGrafanaGrafanaUserConfigPrivatelinkAccessPtrType)(v)
}

func (*getGrafanaGrafanaUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGrafanaGrafanaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *getGrafanaGrafanaUserConfigPrivatelinkAccessPtrType) ToGetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput() GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *getGrafanaGrafanaUserConfigPrivatelinkAccessPtrType) ToGetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput)
}

type GetGrafanaGrafanaUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (GetGrafanaGrafanaUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrafanaGrafanaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetGrafanaGrafanaUserConfigPrivatelinkAccessOutput) ToGetGrafanaGrafanaUserConfigPrivatelinkAccessOutput() GetGrafanaGrafanaUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigPrivatelinkAccessOutput) ToGetGrafanaGrafanaUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigPrivatelinkAccessOutput) ToGetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput() GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return o.ToGetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o GetGrafanaGrafanaUserConfigPrivatelinkAccessOutput) ToGetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigPrivatelinkAccess) *GetGrafanaGrafanaUserConfigPrivatelinkAccess {
		return &v
	}).(GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput)
}

// Grafana specific server provided values.
func (o GetGrafanaGrafanaUserConfigPrivatelinkAccessOutput) Grafana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigPrivatelinkAccess) *string { return v.Grafana }).(pulumi.StringPtrOutput)
}

type GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGrafanaGrafanaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput) ToGetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput() GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput) ToGetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput) Elem() GetGrafanaGrafanaUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigPrivatelinkAccess) GetGrafanaGrafanaUserConfigPrivatelinkAccess {
		return *v
	}).(GetGrafanaGrafanaUserConfigPrivatelinkAccessOutput)
}

// Grafana specific server provided values.
func (o GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput) Grafana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Grafana
	}).(pulumi.StringPtrOutput)
}

type GetGrafanaGrafanaUserConfigPublicAccess struct {
	// Grafana specific server provided values.
	Grafana *string `pulumi:"grafana"`
}

// GetGrafanaGrafanaUserConfigPublicAccessInput is an input type that accepts GetGrafanaGrafanaUserConfigPublicAccessArgs and GetGrafanaGrafanaUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `GetGrafanaGrafanaUserConfigPublicAccessInput` via:
//
//          GetGrafanaGrafanaUserConfigPublicAccessArgs{...}
type GetGrafanaGrafanaUserConfigPublicAccessInput interface {
	pulumi.Input

	ToGetGrafanaGrafanaUserConfigPublicAccessOutput() GetGrafanaGrafanaUserConfigPublicAccessOutput
	ToGetGrafanaGrafanaUserConfigPublicAccessOutputWithContext(context.Context) GetGrafanaGrafanaUserConfigPublicAccessOutput
}

type GetGrafanaGrafanaUserConfigPublicAccessArgs struct {
	// Grafana specific server provided values.
	Grafana pulumi.StringPtrInput `pulumi:"grafana"`
}

func (GetGrafanaGrafanaUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrafanaGrafanaUserConfigPublicAccess)(nil)).Elem()
}

func (i GetGrafanaGrafanaUserConfigPublicAccessArgs) ToGetGrafanaGrafanaUserConfigPublicAccessOutput() GetGrafanaGrafanaUserConfigPublicAccessOutput {
	return i.ToGetGrafanaGrafanaUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i GetGrafanaGrafanaUserConfigPublicAccessArgs) ToGetGrafanaGrafanaUserConfigPublicAccessOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigPublicAccessOutput)
}

func (i GetGrafanaGrafanaUserConfigPublicAccessArgs) ToGetGrafanaGrafanaUserConfigPublicAccessPtrOutput() GetGrafanaGrafanaUserConfigPublicAccessPtrOutput {
	return i.ToGetGrafanaGrafanaUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i GetGrafanaGrafanaUserConfigPublicAccessArgs) ToGetGrafanaGrafanaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigPublicAccessOutput).ToGetGrafanaGrafanaUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// GetGrafanaGrafanaUserConfigPublicAccessPtrInput is an input type that accepts GetGrafanaGrafanaUserConfigPublicAccessArgs, GetGrafanaGrafanaUserConfigPublicAccessPtr and GetGrafanaGrafanaUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `GetGrafanaGrafanaUserConfigPublicAccessPtrInput` via:
//
//          GetGrafanaGrafanaUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type GetGrafanaGrafanaUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToGetGrafanaGrafanaUserConfigPublicAccessPtrOutput() GetGrafanaGrafanaUserConfigPublicAccessPtrOutput
	ToGetGrafanaGrafanaUserConfigPublicAccessPtrOutputWithContext(context.Context) GetGrafanaGrafanaUserConfigPublicAccessPtrOutput
}

type getGrafanaGrafanaUserConfigPublicAccessPtrType GetGrafanaGrafanaUserConfigPublicAccessArgs

func GetGrafanaGrafanaUserConfigPublicAccessPtr(v *GetGrafanaGrafanaUserConfigPublicAccessArgs) GetGrafanaGrafanaUserConfigPublicAccessPtrInput {
	return (*getGrafanaGrafanaUserConfigPublicAccessPtrType)(v)
}

func (*getGrafanaGrafanaUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGrafanaGrafanaUserConfigPublicAccess)(nil)).Elem()
}

func (i *getGrafanaGrafanaUserConfigPublicAccessPtrType) ToGetGrafanaGrafanaUserConfigPublicAccessPtrOutput() GetGrafanaGrafanaUserConfigPublicAccessPtrOutput {
	return i.ToGetGrafanaGrafanaUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *getGrafanaGrafanaUserConfigPublicAccessPtrType) ToGetGrafanaGrafanaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigPublicAccessPtrOutput)
}

type GetGrafanaGrafanaUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (GetGrafanaGrafanaUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrafanaGrafanaUserConfigPublicAccess)(nil)).Elem()
}

func (o GetGrafanaGrafanaUserConfigPublicAccessOutput) ToGetGrafanaGrafanaUserConfigPublicAccessOutput() GetGrafanaGrafanaUserConfigPublicAccessOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigPublicAccessOutput) ToGetGrafanaGrafanaUserConfigPublicAccessOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigPublicAccessOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigPublicAccessOutput) ToGetGrafanaGrafanaUserConfigPublicAccessPtrOutput() GetGrafanaGrafanaUserConfigPublicAccessPtrOutput {
	return o.ToGetGrafanaGrafanaUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o GetGrafanaGrafanaUserConfigPublicAccessOutput) ToGetGrafanaGrafanaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigPublicAccess) *GetGrafanaGrafanaUserConfigPublicAccess {
		return &v
	}).(GetGrafanaGrafanaUserConfigPublicAccessPtrOutput)
}

// Grafana specific server provided values.
func (o GetGrafanaGrafanaUserConfigPublicAccessOutput) Grafana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigPublicAccess) *string { return v.Grafana }).(pulumi.StringPtrOutput)
}

type GetGrafanaGrafanaUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (GetGrafanaGrafanaUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGrafanaGrafanaUserConfigPublicAccess)(nil)).Elem()
}

func (o GetGrafanaGrafanaUserConfigPublicAccessPtrOutput) ToGetGrafanaGrafanaUserConfigPublicAccessPtrOutput() GetGrafanaGrafanaUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigPublicAccessPtrOutput) ToGetGrafanaGrafanaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigPublicAccessPtrOutput) Elem() GetGrafanaGrafanaUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigPublicAccess) GetGrafanaGrafanaUserConfigPublicAccess { return *v }).(GetGrafanaGrafanaUserConfigPublicAccessOutput)
}

// Grafana specific server provided values.
func (o GetGrafanaGrafanaUserConfigPublicAccessPtrOutput) Grafana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Grafana
	}).(pulumi.StringPtrOutput)
}

type GetGrafanaGrafanaUserConfigSmtpServer struct {
	// Address used for sending emails
	FromAddress *string `pulumi:"fromAddress"`
	// Name used in outgoing emails, defaults to Grafana
	FromName *string `pulumi:"fromName"`
	// Server hostname or IP
	Host *string `pulumi:"host"`
	// Password for SMTP authentication
	Password *string `pulumi:"password"`
	// SMTP server port
	Port *string `pulumi:"port"`
	// Skip verifying server certificate. Defaults to false
	SkipVerify *string `pulumi:"skipVerify"`
	// Either OpportunisticStartTLS, MandatoryStartTLS or NoStartTLS.
	// Default is OpportunisticStartTLS.
	StarttlsPolicy *string `pulumi:"starttlsPolicy"`
	// Username for SMTP authentication
	Username *string `pulumi:"username"`
}

// GetGrafanaGrafanaUserConfigSmtpServerInput is an input type that accepts GetGrafanaGrafanaUserConfigSmtpServerArgs and GetGrafanaGrafanaUserConfigSmtpServerOutput values.
// You can construct a concrete instance of `GetGrafanaGrafanaUserConfigSmtpServerInput` via:
//
//          GetGrafanaGrafanaUserConfigSmtpServerArgs{...}
type GetGrafanaGrafanaUserConfigSmtpServerInput interface {
	pulumi.Input

	ToGetGrafanaGrafanaUserConfigSmtpServerOutput() GetGrafanaGrafanaUserConfigSmtpServerOutput
	ToGetGrafanaGrafanaUserConfigSmtpServerOutputWithContext(context.Context) GetGrafanaGrafanaUserConfigSmtpServerOutput
}

type GetGrafanaGrafanaUserConfigSmtpServerArgs struct {
	// Address used for sending emails
	FromAddress pulumi.StringPtrInput `pulumi:"fromAddress"`
	// Name used in outgoing emails, defaults to Grafana
	FromName pulumi.StringPtrInput `pulumi:"fromName"`
	// Server hostname or IP
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Password for SMTP authentication
	Password pulumi.StringPtrInput `pulumi:"password"`
	// SMTP server port
	Port pulumi.StringPtrInput `pulumi:"port"`
	// Skip verifying server certificate. Defaults to false
	SkipVerify pulumi.StringPtrInput `pulumi:"skipVerify"`
	// Either OpportunisticStartTLS, MandatoryStartTLS or NoStartTLS.
	// Default is OpportunisticStartTLS.
	StarttlsPolicy pulumi.StringPtrInput `pulumi:"starttlsPolicy"`
	// Username for SMTP authentication
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (GetGrafanaGrafanaUserConfigSmtpServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrafanaGrafanaUserConfigSmtpServer)(nil)).Elem()
}

func (i GetGrafanaGrafanaUserConfigSmtpServerArgs) ToGetGrafanaGrafanaUserConfigSmtpServerOutput() GetGrafanaGrafanaUserConfigSmtpServerOutput {
	return i.ToGetGrafanaGrafanaUserConfigSmtpServerOutputWithContext(context.Background())
}

func (i GetGrafanaGrafanaUserConfigSmtpServerArgs) ToGetGrafanaGrafanaUserConfigSmtpServerOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigSmtpServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigSmtpServerOutput)
}

func (i GetGrafanaGrafanaUserConfigSmtpServerArgs) ToGetGrafanaGrafanaUserConfigSmtpServerPtrOutput() GetGrafanaGrafanaUserConfigSmtpServerPtrOutput {
	return i.ToGetGrafanaGrafanaUserConfigSmtpServerPtrOutputWithContext(context.Background())
}

func (i GetGrafanaGrafanaUserConfigSmtpServerArgs) ToGetGrafanaGrafanaUserConfigSmtpServerPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigSmtpServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigSmtpServerOutput).ToGetGrafanaGrafanaUserConfigSmtpServerPtrOutputWithContext(ctx)
}

// GetGrafanaGrafanaUserConfigSmtpServerPtrInput is an input type that accepts GetGrafanaGrafanaUserConfigSmtpServerArgs, GetGrafanaGrafanaUserConfigSmtpServerPtr and GetGrafanaGrafanaUserConfigSmtpServerPtrOutput values.
// You can construct a concrete instance of `GetGrafanaGrafanaUserConfigSmtpServerPtrInput` via:
//
//          GetGrafanaGrafanaUserConfigSmtpServerArgs{...}
//
//  or:
//
//          nil
type GetGrafanaGrafanaUserConfigSmtpServerPtrInput interface {
	pulumi.Input

	ToGetGrafanaGrafanaUserConfigSmtpServerPtrOutput() GetGrafanaGrafanaUserConfigSmtpServerPtrOutput
	ToGetGrafanaGrafanaUserConfigSmtpServerPtrOutputWithContext(context.Context) GetGrafanaGrafanaUserConfigSmtpServerPtrOutput
}

type getGrafanaGrafanaUserConfigSmtpServerPtrType GetGrafanaGrafanaUserConfigSmtpServerArgs

func GetGrafanaGrafanaUserConfigSmtpServerPtr(v *GetGrafanaGrafanaUserConfigSmtpServerArgs) GetGrafanaGrafanaUserConfigSmtpServerPtrInput {
	return (*getGrafanaGrafanaUserConfigSmtpServerPtrType)(v)
}

func (*getGrafanaGrafanaUserConfigSmtpServerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGrafanaGrafanaUserConfigSmtpServer)(nil)).Elem()
}

func (i *getGrafanaGrafanaUserConfigSmtpServerPtrType) ToGetGrafanaGrafanaUserConfigSmtpServerPtrOutput() GetGrafanaGrafanaUserConfigSmtpServerPtrOutput {
	return i.ToGetGrafanaGrafanaUserConfigSmtpServerPtrOutputWithContext(context.Background())
}

func (i *getGrafanaGrafanaUserConfigSmtpServerPtrType) ToGetGrafanaGrafanaUserConfigSmtpServerPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigSmtpServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaGrafanaUserConfigSmtpServerPtrOutput)
}

type GetGrafanaGrafanaUserConfigSmtpServerOutput struct{ *pulumi.OutputState }

func (GetGrafanaGrafanaUserConfigSmtpServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrafanaGrafanaUserConfigSmtpServer)(nil)).Elem()
}

func (o GetGrafanaGrafanaUserConfigSmtpServerOutput) ToGetGrafanaGrafanaUserConfigSmtpServerOutput() GetGrafanaGrafanaUserConfigSmtpServerOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigSmtpServerOutput) ToGetGrafanaGrafanaUserConfigSmtpServerOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigSmtpServerOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigSmtpServerOutput) ToGetGrafanaGrafanaUserConfigSmtpServerPtrOutput() GetGrafanaGrafanaUserConfigSmtpServerPtrOutput {
	return o.ToGetGrafanaGrafanaUserConfigSmtpServerPtrOutputWithContext(context.Background())
}

func (o GetGrafanaGrafanaUserConfigSmtpServerOutput) ToGetGrafanaGrafanaUserConfigSmtpServerPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigSmtpServerPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigSmtpServer) *GetGrafanaGrafanaUserConfigSmtpServer {
		return &v
	}).(GetGrafanaGrafanaUserConfigSmtpServerPtrOutput)
}

// Address used for sending emails
func (o GetGrafanaGrafanaUserConfigSmtpServerOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigSmtpServer) *string { return v.FromAddress }).(pulumi.StringPtrOutput)
}

// Name used in outgoing emails, defaults to Grafana
func (o GetGrafanaGrafanaUserConfigSmtpServerOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigSmtpServer) *string { return v.FromName }).(pulumi.StringPtrOutput)
}

// Server hostname or IP
func (o GetGrafanaGrafanaUserConfigSmtpServerOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigSmtpServer) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Password for SMTP authentication
func (o GetGrafanaGrafanaUserConfigSmtpServerOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigSmtpServer) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// SMTP server port
func (o GetGrafanaGrafanaUserConfigSmtpServerOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigSmtpServer) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// Skip verifying server certificate. Defaults to false
func (o GetGrafanaGrafanaUserConfigSmtpServerOutput) SkipVerify() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigSmtpServer) *string { return v.SkipVerify }).(pulumi.StringPtrOutput)
}

// Either OpportunisticStartTLS, MandatoryStartTLS or NoStartTLS.
// Default is OpportunisticStartTLS.
func (o GetGrafanaGrafanaUserConfigSmtpServerOutput) StarttlsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigSmtpServer) *string { return v.StarttlsPolicy }).(pulumi.StringPtrOutput)
}

// Username for SMTP authentication
func (o GetGrafanaGrafanaUserConfigSmtpServerOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGrafanaGrafanaUserConfigSmtpServer) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GetGrafanaGrafanaUserConfigSmtpServerPtrOutput struct{ *pulumi.OutputState }

func (GetGrafanaGrafanaUserConfigSmtpServerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGrafanaGrafanaUserConfigSmtpServer)(nil)).Elem()
}

func (o GetGrafanaGrafanaUserConfigSmtpServerPtrOutput) ToGetGrafanaGrafanaUserConfigSmtpServerPtrOutput() GetGrafanaGrafanaUserConfigSmtpServerPtrOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigSmtpServerPtrOutput) ToGetGrafanaGrafanaUserConfigSmtpServerPtrOutputWithContext(ctx context.Context) GetGrafanaGrafanaUserConfigSmtpServerPtrOutput {
	return o
}

func (o GetGrafanaGrafanaUserConfigSmtpServerPtrOutput) Elem() GetGrafanaGrafanaUserConfigSmtpServerOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigSmtpServer) GetGrafanaGrafanaUserConfigSmtpServer { return *v }).(GetGrafanaGrafanaUserConfigSmtpServerOutput)
}

// Address used for sending emails
func (o GetGrafanaGrafanaUserConfigSmtpServerPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.FromAddress
	}).(pulumi.StringPtrOutput)
}

// Name used in outgoing emails, defaults to Grafana
func (o GetGrafanaGrafanaUserConfigSmtpServerPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.FromName
	}).(pulumi.StringPtrOutput)
}

// Server hostname or IP
func (o GetGrafanaGrafanaUserConfigSmtpServerPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Password for SMTP authentication
func (o GetGrafanaGrafanaUserConfigSmtpServerPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// SMTP server port
func (o GetGrafanaGrafanaUserConfigSmtpServerPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// Skip verifying server certificate. Defaults to false
func (o GetGrafanaGrafanaUserConfigSmtpServerPtrOutput) SkipVerify() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.SkipVerify
	}).(pulumi.StringPtrOutput)
}

// Either OpportunisticStartTLS, MandatoryStartTLS or NoStartTLS.
// Default is OpportunisticStartTLS.
func (o GetGrafanaGrafanaUserConfigSmtpServerPtrOutput) StarttlsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.StarttlsPolicy
	}).(pulumi.StringPtrOutput)
}

// Username for SMTP authentication
func (o GetGrafanaGrafanaUserConfigSmtpServerPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetGrafanaGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type GetGrafanaServiceIntegration struct {
	IntegrationType   string `pulumi:"integrationType"`
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// GetGrafanaServiceIntegrationInput is an input type that accepts GetGrafanaServiceIntegrationArgs and GetGrafanaServiceIntegrationOutput values.
// You can construct a concrete instance of `GetGrafanaServiceIntegrationInput` via:
//
//          GetGrafanaServiceIntegrationArgs{...}
type GetGrafanaServiceIntegrationInput interface {
	pulumi.Input

	ToGetGrafanaServiceIntegrationOutput() GetGrafanaServiceIntegrationOutput
	ToGetGrafanaServiceIntegrationOutputWithContext(context.Context) GetGrafanaServiceIntegrationOutput
}

type GetGrafanaServiceIntegrationArgs struct {
	IntegrationType   pulumi.StringInput `pulumi:"integrationType"`
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (GetGrafanaServiceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrafanaServiceIntegration)(nil)).Elem()
}

func (i GetGrafanaServiceIntegrationArgs) ToGetGrafanaServiceIntegrationOutput() GetGrafanaServiceIntegrationOutput {
	return i.ToGetGrafanaServiceIntegrationOutputWithContext(context.Background())
}

func (i GetGrafanaServiceIntegrationArgs) ToGetGrafanaServiceIntegrationOutputWithContext(ctx context.Context) GetGrafanaServiceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaServiceIntegrationOutput)
}

// GetGrafanaServiceIntegrationArrayInput is an input type that accepts GetGrafanaServiceIntegrationArray and GetGrafanaServiceIntegrationArrayOutput values.
// You can construct a concrete instance of `GetGrafanaServiceIntegrationArrayInput` via:
//
//          GetGrafanaServiceIntegrationArray{ GetGrafanaServiceIntegrationArgs{...} }
type GetGrafanaServiceIntegrationArrayInput interface {
	pulumi.Input

	ToGetGrafanaServiceIntegrationArrayOutput() GetGrafanaServiceIntegrationArrayOutput
	ToGetGrafanaServiceIntegrationArrayOutputWithContext(context.Context) GetGrafanaServiceIntegrationArrayOutput
}

type GetGrafanaServiceIntegrationArray []GetGrafanaServiceIntegrationInput

func (GetGrafanaServiceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGrafanaServiceIntegration)(nil)).Elem()
}

func (i GetGrafanaServiceIntegrationArray) ToGetGrafanaServiceIntegrationArrayOutput() GetGrafanaServiceIntegrationArrayOutput {
	return i.ToGetGrafanaServiceIntegrationArrayOutputWithContext(context.Background())
}

func (i GetGrafanaServiceIntegrationArray) ToGetGrafanaServiceIntegrationArrayOutputWithContext(ctx context.Context) GetGrafanaServiceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrafanaServiceIntegrationArrayOutput)
}

type GetGrafanaServiceIntegrationOutput struct{ *pulumi.OutputState }

func (GetGrafanaServiceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrafanaServiceIntegration)(nil)).Elem()
}

func (o GetGrafanaServiceIntegrationOutput) ToGetGrafanaServiceIntegrationOutput() GetGrafanaServiceIntegrationOutput {
	return o
}

func (o GetGrafanaServiceIntegrationOutput) ToGetGrafanaServiceIntegrationOutputWithContext(ctx context.Context) GetGrafanaServiceIntegrationOutput {
	return o
}

func (o GetGrafanaServiceIntegrationOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGrafanaServiceIntegration) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o GetGrafanaServiceIntegrationOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGrafanaServiceIntegration) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

type GetGrafanaServiceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (GetGrafanaServiceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGrafanaServiceIntegration)(nil)).Elem()
}

func (o GetGrafanaServiceIntegrationArrayOutput) ToGetGrafanaServiceIntegrationArrayOutput() GetGrafanaServiceIntegrationArrayOutput {
	return o
}

func (o GetGrafanaServiceIntegrationArrayOutput) ToGetGrafanaServiceIntegrationArrayOutputWithContext(ctx context.Context) GetGrafanaServiceIntegrationArrayOutput {
	return o
}

func (o GetGrafanaServiceIntegrationArrayOutput) Index(i pulumi.IntInput) GetGrafanaServiceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGrafanaServiceIntegration {
		return vs[0].([]GetGrafanaServiceIntegration)[vs[1].(int)]
	}).(GetGrafanaServiceIntegrationOutput)
}

type GetInfluxDbComponent struct {
	Component                 string `pulumi:"component"`
	Host                      string `pulumi:"host"`
	KafkaAuthenticationMethod string `pulumi:"kafkaAuthenticationMethod"`
	Port                      int    `pulumi:"port"`
	Route                     string `pulumi:"route"`
	Ssl                       bool   `pulumi:"ssl"`
	Usage                     string `pulumi:"usage"`
}

// GetInfluxDbComponentInput is an input type that accepts GetInfluxDbComponentArgs and GetInfluxDbComponentOutput values.
// You can construct a concrete instance of `GetInfluxDbComponentInput` via:
//
//          GetInfluxDbComponentArgs{...}
type GetInfluxDbComponentInput interface {
	pulumi.Input

	ToGetInfluxDbComponentOutput() GetInfluxDbComponentOutput
	ToGetInfluxDbComponentOutputWithContext(context.Context) GetInfluxDbComponentOutput
}

type GetInfluxDbComponentArgs struct {
	Component                 pulumi.StringInput `pulumi:"component"`
	Host                      pulumi.StringInput `pulumi:"host"`
	KafkaAuthenticationMethod pulumi.StringInput `pulumi:"kafkaAuthenticationMethod"`
	Port                      pulumi.IntInput    `pulumi:"port"`
	Route                     pulumi.StringInput `pulumi:"route"`
	Ssl                       pulumi.BoolInput   `pulumi:"ssl"`
	Usage                     pulumi.StringInput `pulumi:"usage"`
}

func (GetInfluxDbComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfluxDbComponent)(nil)).Elem()
}

func (i GetInfluxDbComponentArgs) ToGetInfluxDbComponentOutput() GetInfluxDbComponentOutput {
	return i.ToGetInfluxDbComponentOutputWithContext(context.Background())
}

func (i GetInfluxDbComponentArgs) ToGetInfluxDbComponentOutputWithContext(ctx context.Context) GetInfluxDbComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfluxDbComponentOutput)
}

// GetInfluxDbComponentArrayInput is an input type that accepts GetInfluxDbComponentArray and GetInfluxDbComponentArrayOutput values.
// You can construct a concrete instance of `GetInfluxDbComponentArrayInput` via:
//
//          GetInfluxDbComponentArray{ GetInfluxDbComponentArgs{...} }
type GetInfluxDbComponentArrayInput interface {
	pulumi.Input

	ToGetInfluxDbComponentArrayOutput() GetInfluxDbComponentArrayOutput
	ToGetInfluxDbComponentArrayOutputWithContext(context.Context) GetInfluxDbComponentArrayOutput
}

type GetInfluxDbComponentArray []GetInfluxDbComponentInput

func (GetInfluxDbComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfluxDbComponent)(nil)).Elem()
}

func (i GetInfluxDbComponentArray) ToGetInfluxDbComponentArrayOutput() GetInfluxDbComponentArrayOutput {
	return i.ToGetInfluxDbComponentArrayOutputWithContext(context.Background())
}

func (i GetInfluxDbComponentArray) ToGetInfluxDbComponentArrayOutputWithContext(ctx context.Context) GetInfluxDbComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfluxDbComponentArrayOutput)
}

type GetInfluxDbComponentOutput struct{ *pulumi.OutputState }

func (GetInfluxDbComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfluxDbComponent)(nil)).Elem()
}

func (o GetInfluxDbComponentOutput) ToGetInfluxDbComponentOutput() GetInfluxDbComponentOutput {
	return o
}

func (o GetInfluxDbComponentOutput) ToGetInfluxDbComponentOutputWithContext(ctx context.Context) GetInfluxDbComponentOutput {
	return o
}

func (o GetInfluxDbComponentOutput) Component() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfluxDbComponent) string { return v.Component }).(pulumi.StringOutput)
}

func (o GetInfluxDbComponentOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfluxDbComponent) string { return v.Host }).(pulumi.StringOutput)
}

func (o GetInfluxDbComponentOutput) KafkaAuthenticationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfluxDbComponent) string { return v.KafkaAuthenticationMethod }).(pulumi.StringOutput)
}

func (o GetInfluxDbComponentOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetInfluxDbComponent) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetInfluxDbComponentOutput) Route() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfluxDbComponent) string { return v.Route }).(pulumi.StringOutput)
}

func (o GetInfluxDbComponentOutput) Ssl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInfluxDbComponent) bool { return v.Ssl }).(pulumi.BoolOutput)
}

func (o GetInfluxDbComponentOutput) Usage() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfluxDbComponent) string { return v.Usage }).(pulumi.StringOutput)
}

type GetInfluxDbComponentArrayOutput struct{ *pulumi.OutputState }

func (GetInfluxDbComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfluxDbComponent)(nil)).Elem()
}

func (o GetInfluxDbComponentArrayOutput) ToGetInfluxDbComponentArrayOutput() GetInfluxDbComponentArrayOutput {
	return o
}

func (o GetInfluxDbComponentArrayOutput) ToGetInfluxDbComponentArrayOutputWithContext(ctx context.Context) GetInfluxDbComponentArrayOutput {
	return o
}

func (o GetInfluxDbComponentArrayOutput) Index(i pulumi.IntInput) GetInfluxDbComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInfluxDbComponent {
		return vs[0].([]GetInfluxDbComponent)[vs[1].(int)]
	}).(GetInfluxDbComponentOutput)
}

type GetInfluxDbInfluxdb struct {
	DatabaseName string `pulumi:"databaseName"`
}

// GetInfluxDbInfluxdbInput is an input type that accepts GetInfluxDbInfluxdbArgs and GetInfluxDbInfluxdbOutput values.
// You can construct a concrete instance of `GetInfluxDbInfluxdbInput` via:
//
//          GetInfluxDbInfluxdbArgs{...}
type GetInfluxDbInfluxdbInput interface {
	pulumi.Input

	ToGetInfluxDbInfluxdbOutput() GetInfluxDbInfluxdbOutput
	ToGetInfluxDbInfluxdbOutputWithContext(context.Context) GetInfluxDbInfluxdbOutput
}

type GetInfluxDbInfluxdbArgs struct {
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
}

func (GetInfluxDbInfluxdbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfluxDbInfluxdb)(nil)).Elem()
}

func (i GetInfluxDbInfluxdbArgs) ToGetInfluxDbInfluxdbOutput() GetInfluxDbInfluxdbOutput {
	return i.ToGetInfluxDbInfluxdbOutputWithContext(context.Background())
}

func (i GetInfluxDbInfluxdbArgs) ToGetInfluxDbInfluxdbOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfluxDbInfluxdbOutput)
}

type GetInfluxDbInfluxdbOutput struct{ *pulumi.OutputState }

func (GetInfluxDbInfluxdbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfluxDbInfluxdb)(nil)).Elem()
}

func (o GetInfluxDbInfluxdbOutput) ToGetInfluxDbInfluxdbOutput() GetInfluxDbInfluxdbOutput {
	return o
}

func (o GetInfluxDbInfluxdbOutput) ToGetInfluxDbInfluxdbOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbOutput {
	return o
}

func (o GetInfluxDbInfluxdbOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfluxDbInfluxdb) string { return v.DatabaseName }).(pulumi.StringOutput)
}

type GetInfluxDbInfluxdbUserConfig struct {
	// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name
	CustomDomain *string `pulumi:"customDomain"`
	// InfluxDB specific server provided values.
	Influxdb *GetInfluxDbInfluxdbUserConfigInfluxdb `pulumi:"influxdb"`
	// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters []string `pulumi:"ipFilters"`
	// Allow access to selected service ports from private networks
	PrivateAccess *GetInfluxDbInfluxdbUserConfigPrivateAccess `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess *GetInfluxDbInfluxdbUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom *string `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet
	PublicAccess *GetInfluxDbInfluxdbUserConfigPublicAccess `pulumi:"publicAccess"`
	// Name of the basebackup to restore in forked service
	RecoveryBasebackupName *string `pulumi:"recoveryBasebackupName"`
	// Name of another service to fork from. This has effect
	// only when a new service is being created.
	ServiceToForkFrom *string `pulumi:"serviceToForkFrom"`
}

// GetInfluxDbInfluxdbUserConfigInput is an input type that accepts GetInfluxDbInfluxdbUserConfigArgs and GetInfluxDbInfluxdbUserConfigOutput values.
// You can construct a concrete instance of `GetInfluxDbInfluxdbUserConfigInput` via:
//
//          GetInfluxDbInfluxdbUserConfigArgs{...}
type GetInfluxDbInfluxdbUserConfigInput interface {
	pulumi.Input

	ToGetInfluxDbInfluxdbUserConfigOutput() GetInfluxDbInfluxdbUserConfigOutput
	ToGetInfluxDbInfluxdbUserConfigOutputWithContext(context.Context) GetInfluxDbInfluxdbUserConfigOutput
}

type GetInfluxDbInfluxdbUserConfigArgs struct {
	// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name
	CustomDomain pulumi.StringPtrInput `pulumi:"customDomain"`
	// InfluxDB specific server provided values.
	Influxdb GetInfluxDbInfluxdbUserConfigInfluxdbPtrInput `pulumi:"influxdb"`
	// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// Allow access to selected service ports from private networks
	PrivateAccess GetInfluxDbInfluxdbUserConfigPrivateAccessPtrInput `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom pulumi.StringPtrInput `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet
	PublicAccess GetInfluxDbInfluxdbUserConfigPublicAccessPtrInput `pulumi:"publicAccess"`
	// Name of the basebackup to restore in forked service
	RecoveryBasebackupName pulumi.StringPtrInput `pulumi:"recoveryBasebackupName"`
	// Name of another service to fork from. This has effect
	// only when a new service is being created.
	ServiceToForkFrom pulumi.StringPtrInput `pulumi:"serviceToForkFrom"`
}

func (GetInfluxDbInfluxdbUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfluxDbInfluxdbUserConfig)(nil)).Elem()
}

func (i GetInfluxDbInfluxdbUserConfigArgs) ToGetInfluxDbInfluxdbUserConfigOutput() GetInfluxDbInfluxdbUserConfigOutput {
	return i.ToGetInfluxDbInfluxdbUserConfigOutputWithContext(context.Background())
}

func (i GetInfluxDbInfluxdbUserConfigArgs) ToGetInfluxDbInfluxdbUserConfigOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfluxDbInfluxdbUserConfigOutput)
}

type GetInfluxDbInfluxdbUserConfigOutput struct{ *pulumi.OutputState }

func (GetInfluxDbInfluxdbUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfluxDbInfluxdbUserConfig)(nil)).Elem()
}

func (o GetInfluxDbInfluxdbUserConfigOutput) ToGetInfluxDbInfluxdbUserConfigOutput() GetInfluxDbInfluxdbUserConfigOutput {
	return o
}

func (o GetInfluxDbInfluxdbUserConfigOutput) ToGetInfluxDbInfluxdbUserConfigOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbUserConfigOutput {
	return o
}

// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name
func (o GetInfluxDbInfluxdbUserConfigOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfluxDbInfluxdbUserConfig) *string { return v.CustomDomain }).(pulumi.StringPtrOutput)
}

// InfluxDB specific server provided values.
func (o GetInfluxDbInfluxdbUserConfigOutput) Influxdb() GetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput {
	return o.ApplyT(func(v GetInfluxDbInfluxdbUserConfig) *GetInfluxDbInfluxdbUserConfigInfluxdb { return v.Influxdb }).(GetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput)
}

// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
func (o GetInfluxDbInfluxdbUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInfluxDbInfluxdbUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// Allow access to selected service ports from private networks
func (o GetInfluxDbInfluxdbUserConfigOutput) PrivateAccess() GetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetInfluxDbInfluxdbUserConfig) *GetInfluxDbInfluxdbUserConfigPrivateAccess {
		return v.PrivateAccess
	}).(GetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput)
}

// Allow access to selected service components through Privatelink
func (o GetInfluxDbInfluxdbUserConfigOutput) PrivatelinkAccess() GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetInfluxDbInfluxdbUserConfig) *GetInfluxDbInfluxdbUserConfigPrivatelinkAccess {
		return v.PrivatelinkAccess
	}).(GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput)
}

// Name of another project to fork a service from. This has
// effect only when a new service is being created.
func (o GetInfluxDbInfluxdbUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfluxDbInfluxdbUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from the public Internet
func (o GetInfluxDbInfluxdbUserConfigOutput) PublicAccess() GetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetInfluxDbInfluxdbUserConfig) *GetInfluxDbInfluxdbUserConfigPublicAccess {
		return v.PublicAccess
	}).(GetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput)
}

// Name of the basebackup to restore in forked service
func (o GetInfluxDbInfluxdbUserConfigOutput) RecoveryBasebackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfluxDbInfluxdbUserConfig) *string { return v.RecoveryBasebackupName }).(pulumi.StringPtrOutput)
}

// Name of another service to fork from. This has effect
// only when a new service is being created.
func (o GetInfluxDbInfluxdbUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfluxDbInfluxdbUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

type GetInfluxDbInfluxdbUserConfigInfluxdb struct {
	// The maximum duration in seconds before a query is
	// logged as a slow query. Setting this to 0 (the default) will never log slow queries.
	LogQueriesAfter *string `pulumi:"logQueriesAfter"`
	// The maximum number of rows returned in a non-chunked query.
	// Setting this to 0 (the default) allows an unlimited number to be returned.
	MaxRowLimit *string `pulumi:"maxRowLimit"`
	// The maximum number of `GROUP BY time()` buckets that
	// can be processed in a query. Setting this to 0 (the default) allows an unlimited number to
	// be processed.
	MaxSelectBuckets *string `pulumi:"maxSelectBuckets"`
	// The maximum number of points that can be processed in a
	// SELECT statement. Setting this to 0 (the default) allows an unlimited number to be processed.
	MaxSelectPoint *string `pulumi:"maxSelectPoint"`
	// The maximum duration in seconds before a query is killed.
	// Setting this to 0 (the default) will never kill slow queries.
	QueryTimeout *string `pulumi:"queryTimeout"`
}

// GetInfluxDbInfluxdbUserConfigInfluxdbInput is an input type that accepts GetInfluxDbInfluxdbUserConfigInfluxdbArgs and GetInfluxDbInfluxdbUserConfigInfluxdbOutput values.
// You can construct a concrete instance of `GetInfluxDbInfluxdbUserConfigInfluxdbInput` via:
//
//          GetInfluxDbInfluxdbUserConfigInfluxdbArgs{...}
type GetInfluxDbInfluxdbUserConfigInfluxdbInput interface {
	pulumi.Input

	ToGetInfluxDbInfluxdbUserConfigInfluxdbOutput() GetInfluxDbInfluxdbUserConfigInfluxdbOutput
	ToGetInfluxDbInfluxdbUserConfigInfluxdbOutputWithContext(context.Context) GetInfluxDbInfluxdbUserConfigInfluxdbOutput
}

type GetInfluxDbInfluxdbUserConfigInfluxdbArgs struct {
	// The maximum duration in seconds before a query is
	// logged as a slow query. Setting this to 0 (the default) will never log slow queries.
	LogQueriesAfter pulumi.StringPtrInput `pulumi:"logQueriesAfter"`
	// The maximum number of rows returned in a non-chunked query.
	// Setting this to 0 (the default) allows an unlimited number to be returned.
	MaxRowLimit pulumi.StringPtrInput `pulumi:"maxRowLimit"`
	// The maximum number of `GROUP BY time()` buckets that
	// can be processed in a query. Setting this to 0 (the default) allows an unlimited number to
	// be processed.
	MaxSelectBuckets pulumi.StringPtrInput `pulumi:"maxSelectBuckets"`
	// The maximum number of points that can be processed in a
	// SELECT statement. Setting this to 0 (the default) allows an unlimited number to be processed.
	MaxSelectPoint pulumi.StringPtrInput `pulumi:"maxSelectPoint"`
	// The maximum duration in seconds before a query is killed.
	// Setting this to 0 (the default) will never kill slow queries.
	QueryTimeout pulumi.StringPtrInput `pulumi:"queryTimeout"`
}

func (GetInfluxDbInfluxdbUserConfigInfluxdbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfluxDbInfluxdbUserConfigInfluxdb)(nil)).Elem()
}

func (i GetInfluxDbInfluxdbUserConfigInfluxdbArgs) ToGetInfluxDbInfluxdbUserConfigInfluxdbOutput() GetInfluxDbInfluxdbUserConfigInfluxdbOutput {
	return i.ToGetInfluxDbInfluxdbUserConfigInfluxdbOutputWithContext(context.Background())
}

func (i GetInfluxDbInfluxdbUserConfigInfluxdbArgs) ToGetInfluxDbInfluxdbUserConfigInfluxdbOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbUserConfigInfluxdbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfluxDbInfluxdbUserConfigInfluxdbOutput)
}

func (i GetInfluxDbInfluxdbUserConfigInfluxdbArgs) ToGetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput() GetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput {
	return i.ToGetInfluxDbInfluxdbUserConfigInfluxdbPtrOutputWithContext(context.Background())
}

func (i GetInfluxDbInfluxdbUserConfigInfluxdbArgs) ToGetInfluxDbInfluxdbUserConfigInfluxdbPtrOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfluxDbInfluxdbUserConfigInfluxdbOutput).ToGetInfluxDbInfluxdbUserConfigInfluxdbPtrOutputWithContext(ctx)
}

// GetInfluxDbInfluxdbUserConfigInfluxdbPtrInput is an input type that accepts GetInfluxDbInfluxdbUserConfigInfluxdbArgs, GetInfluxDbInfluxdbUserConfigInfluxdbPtr and GetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput values.
// You can construct a concrete instance of `GetInfluxDbInfluxdbUserConfigInfluxdbPtrInput` via:
//
//          GetInfluxDbInfluxdbUserConfigInfluxdbArgs{...}
//
//  or:
//
//          nil
type GetInfluxDbInfluxdbUserConfigInfluxdbPtrInput interface {
	pulumi.Input

	ToGetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput() GetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput
	ToGetInfluxDbInfluxdbUserConfigInfluxdbPtrOutputWithContext(context.Context) GetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput
}

type getInfluxDbInfluxdbUserConfigInfluxdbPtrType GetInfluxDbInfluxdbUserConfigInfluxdbArgs

func GetInfluxDbInfluxdbUserConfigInfluxdbPtr(v *GetInfluxDbInfluxdbUserConfigInfluxdbArgs) GetInfluxDbInfluxdbUserConfigInfluxdbPtrInput {
	return (*getInfluxDbInfluxdbUserConfigInfluxdbPtrType)(v)
}

func (*getInfluxDbInfluxdbUserConfigInfluxdbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInfluxDbInfluxdbUserConfigInfluxdb)(nil)).Elem()
}

func (i *getInfluxDbInfluxdbUserConfigInfluxdbPtrType) ToGetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput() GetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput {
	return i.ToGetInfluxDbInfluxdbUserConfigInfluxdbPtrOutputWithContext(context.Background())
}

func (i *getInfluxDbInfluxdbUserConfigInfluxdbPtrType) ToGetInfluxDbInfluxdbUserConfigInfluxdbPtrOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput)
}

type GetInfluxDbInfluxdbUserConfigInfluxdbOutput struct{ *pulumi.OutputState }

func (GetInfluxDbInfluxdbUserConfigInfluxdbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfluxDbInfluxdbUserConfigInfluxdb)(nil)).Elem()
}

func (o GetInfluxDbInfluxdbUserConfigInfluxdbOutput) ToGetInfluxDbInfluxdbUserConfigInfluxdbOutput() GetInfluxDbInfluxdbUserConfigInfluxdbOutput {
	return o
}

func (o GetInfluxDbInfluxdbUserConfigInfluxdbOutput) ToGetInfluxDbInfluxdbUserConfigInfluxdbOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbUserConfigInfluxdbOutput {
	return o
}

func (o GetInfluxDbInfluxdbUserConfigInfluxdbOutput) ToGetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput() GetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput {
	return o.ToGetInfluxDbInfluxdbUserConfigInfluxdbPtrOutputWithContext(context.Background())
}

func (o GetInfluxDbInfluxdbUserConfigInfluxdbOutput) ToGetInfluxDbInfluxdbUserConfigInfluxdbPtrOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput {
	return o.ApplyT(func(v GetInfluxDbInfluxdbUserConfigInfluxdb) *GetInfluxDbInfluxdbUserConfigInfluxdb {
		return &v
	}).(GetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput)
}

// The maximum duration in seconds before a query is
// logged as a slow query. Setting this to 0 (the default) will never log slow queries.
func (o GetInfluxDbInfluxdbUserConfigInfluxdbOutput) LogQueriesAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfluxDbInfluxdbUserConfigInfluxdb) *string { return v.LogQueriesAfter }).(pulumi.StringPtrOutput)
}

// The maximum number of rows returned in a non-chunked query.
// Setting this to 0 (the default) allows an unlimited number to be returned.
func (o GetInfluxDbInfluxdbUserConfigInfluxdbOutput) MaxRowLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfluxDbInfluxdbUserConfigInfluxdb) *string { return v.MaxRowLimit }).(pulumi.StringPtrOutput)
}

// The maximum number of `GROUP BY time()` buckets that
// can be processed in a query. Setting this to 0 (the default) allows an unlimited number to
// be processed.
func (o GetInfluxDbInfluxdbUserConfigInfluxdbOutput) MaxSelectBuckets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfluxDbInfluxdbUserConfigInfluxdb) *string { return v.MaxSelectBuckets }).(pulumi.StringPtrOutput)
}

// The maximum number of points that can be processed in a
// SELECT statement. Setting this to 0 (the default) allows an unlimited number to be processed.
func (o GetInfluxDbInfluxdbUserConfigInfluxdbOutput) MaxSelectPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfluxDbInfluxdbUserConfigInfluxdb) *string { return v.MaxSelectPoint }).(pulumi.StringPtrOutput)
}

// The maximum duration in seconds before a query is killed.
// Setting this to 0 (the default) will never kill slow queries.
func (o GetInfluxDbInfluxdbUserConfigInfluxdbOutput) QueryTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfluxDbInfluxdbUserConfigInfluxdb) *string { return v.QueryTimeout }).(pulumi.StringPtrOutput)
}

type GetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput struct{ *pulumi.OutputState }

func (GetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInfluxDbInfluxdbUserConfigInfluxdb)(nil)).Elem()
}

func (o GetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput) ToGetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput() GetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput {
	return o
}

func (o GetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput) ToGetInfluxDbInfluxdbUserConfigInfluxdbPtrOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput {
	return o
}

func (o GetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput) Elem() GetInfluxDbInfluxdbUserConfigInfluxdbOutput {
	return o.ApplyT(func(v *GetInfluxDbInfluxdbUserConfigInfluxdb) GetInfluxDbInfluxdbUserConfigInfluxdb { return *v }).(GetInfluxDbInfluxdbUserConfigInfluxdbOutput)
}

// The maximum duration in seconds before a query is
// logged as a slow query. Setting this to 0 (the default) will never log slow queries.
func (o GetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput) LogQueriesAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInfluxDbInfluxdbUserConfigInfluxdb) *string {
		if v == nil {
			return nil
		}
		return v.LogQueriesAfter
	}).(pulumi.StringPtrOutput)
}

// The maximum number of rows returned in a non-chunked query.
// Setting this to 0 (the default) allows an unlimited number to be returned.
func (o GetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput) MaxRowLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInfluxDbInfluxdbUserConfigInfluxdb) *string {
		if v == nil {
			return nil
		}
		return v.MaxRowLimit
	}).(pulumi.StringPtrOutput)
}

// The maximum number of `GROUP BY time()` buckets that
// can be processed in a query. Setting this to 0 (the default) allows an unlimited number to
// be processed.
func (o GetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput) MaxSelectBuckets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInfluxDbInfluxdbUserConfigInfluxdb) *string {
		if v == nil {
			return nil
		}
		return v.MaxSelectBuckets
	}).(pulumi.StringPtrOutput)
}

// The maximum number of points that can be processed in a
// SELECT statement. Setting this to 0 (the default) allows an unlimited number to be processed.
func (o GetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput) MaxSelectPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInfluxDbInfluxdbUserConfigInfluxdb) *string {
		if v == nil {
			return nil
		}
		return v.MaxSelectPoint
	}).(pulumi.StringPtrOutput)
}

// The maximum duration in seconds before a query is killed.
// Setting this to 0 (the default) will never kill slow queries.
func (o GetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput) QueryTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInfluxDbInfluxdbUserConfigInfluxdb) *string {
		if v == nil {
			return nil
		}
		return v.QueryTimeout
	}).(pulumi.StringPtrOutput)
}

type GetInfluxDbInfluxdbUserConfigPrivateAccess struct {
	// InfluxDB specific server provided values.
	Influxdb *string `pulumi:"influxdb"`
}

// GetInfluxDbInfluxdbUserConfigPrivateAccessInput is an input type that accepts GetInfluxDbInfluxdbUserConfigPrivateAccessArgs and GetInfluxDbInfluxdbUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `GetInfluxDbInfluxdbUserConfigPrivateAccessInput` via:
//
//          GetInfluxDbInfluxdbUserConfigPrivateAccessArgs{...}
type GetInfluxDbInfluxdbUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToGetInfluxDbInfluxdbUserConfigPrivateAccessOutput() GetInfluxDbInfluxdbUserConfigPrivateAccessOutput
	ToGetInfluxDbInfluxdbUserConfigPrivateAccessOutputWithContext(context.Context) GetInfluxDbInfluxdbUserConfigPrivateAccessOutput
}

type GetInfluxDbInfluxdbUserConfigPrivateAccessArgs struct {
	// InfluxDB specific server provided values.
	Influxdb pulumi.StringPtrInput `pulumi:"influxdb"`
}

func (GetInfluxDbInfluxdbUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfluxDbInfluxdbUserConfigPrivateAccess)(nil)).Elem()
}

func (i GetInfluxDbInfluxdbUserConfigPrivateAccessArgs) ToGetInfluxDbInfluxdbUserConfigPrivateAccessOutput() GetInfluxDbInfluxdbUserConfigPrivateAccessOutput {
	return i.ToGetInfluxDbInfluxdbUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i GetInfluxDbInfluxdbUserConfigPrivateAccessArgs) ToGetInfluxDbInfluxdbUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfluxDbInfluxdbUserConfigPrivateAccessOutput)
}

func (i GetInfluxDbInfluxdbUserConfigPrivateAccessArgs) ToGetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput() GetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput {
	return i.ToGetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i GetInfluxDbInfluxdbUserConfigPrivateAccessArgs) ToGetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfluxDbInfluxdbUserConfigPrivateAccessOutput).ToGetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// GetInfluxDbInfluxdbUserConfigPrivateAccessPtrInput is an input type that accepts GetInfluxDbInfluxdbUserConfigPrivateAccessArgs, GetInfluxDbInfluxdbUserConfigPrivateAccessPtr and GetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `GetInfluxDbInfluxdbUserConfigPrivateAccessPtrInput` via:
//
//          GetInfluxDbInfluxdbUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type GetInfluxDbInfluxdbUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToGetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput() GetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput
	ToGetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutputWithContext(context.Context) GetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput
}

type getInfluxDbInfluxdbUserConfigPrivateAccessPtrType GetInfluxDbInfluxdbUserConfigPrivateAccessArgs

func GetInfluxDbInfluxdbUserConfigPrivateAccessPtr(v *GetInfluxDbInfluxdbUserConfigPrivateAccessArgs) GetInfluxDbInfluxdbUserConfigPrivateAccessPtrInput {
	return (*getInfluxDbInfluxdbUserConfigPrivateAccessPtrType)(v)
}

func (*getInfluxDbInfluxdbUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInfluxDbInfluxdbUserConfigPrivateAccess)(nil)).Elem()
}

func (i *getInfluxDbInfluxdbUserConfigPrivateAccessPtrType) ToGetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput() GetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput {
	return i.ToGetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *getInfluxDbInfluxdbUserConfigPrivateAccessPtrType) ToGetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput)
}

type GetInfluxDbInfluxdbUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (GetInfluxDbInfluxdbUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfluxDbInfluxdbUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetInfluxDbInfluxdbUserConfigPrivateAccessOutput) ToGetInfluxDbInfluxdbUserConfigPrivateAccessOutput() GetInfluxDbInfluxdbUserConfigPrivateAccessOutput {
	return o
}

func (o GetInfluxDbInfluxdbUserConfigPrivateAccessOutput) ToGetInfluxDbInfluxdbUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbUserConfigPrivateAccessOutput {
	return o
}

func (o GetInfluxDbInfluxdbUserConfigPrivateAccessOutput) ToGetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput() GetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput {
	return o.ToGetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o GetInfluxDbInfluxdbUserConfigPrivateAccessOutput) ToGetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetInfluxDbInfluxdbUserConfigPrivateAccess) *GetInfluxDbInfluxdbUserConfigPrivateAccess {
		return &v
	}).(GetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput)
}

// InfluxDB specific server provided values.
func (o GetInfluxDbInfluxdbUserConfigPrivateAccessOutput) Influxdb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfluxDbInfluxdbUserConfigPrivateAccess) *string { return v.Influxdb }).(pulumi.StringPtrOutput)
}

type GetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (GetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInfluxDbInfluxdbUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput) ToGetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput() GetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput) ToGetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput) Elem() GetInfluxDbInfluxdbUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *GetInfluxDbInfluxdbUserConfigPrivateAccess) GetInfluxDbInfluxdbUserConfigPrivateAccess {
		return *v
	}).(GetInfluxDbInfluxdbUserConfigPrivateAccessOutput)
}

// InfluxDB specific server provided values.
func (o GetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput) Influxdb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInfluxDbInfluxdbUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Influxdb
	}).(pulumi.StringPtrOutput)
}

type GetInfluxDbInfluxdbUserConfigPrivatelinkAccess struct {
	// InfluxDB specific server provided values.
	Influxdb *string `pulumi:"influxdb"`
}

// GetInfluxDbInfluxdbUserConfigPrivatelinkAccessInput is an input type that accepts GetInfluxDbInfluxdbUserConfigPrivatelinkAccessArgs and GetInfluxDbInfluxdbUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `GetInfluxDbInfluxdbUserConfigPrivatelinkAccessInput` via:
//
//          GetInfluxDbInfluxdbUserConfigPrivatelinkAccessArgs{...}
type GetInfluxDbInfluxdbUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToGetInfluxDbInfluxdbUserConfigPrivatelinkAccessOutput() GetInfluxDbInfluxdbUserConfigPrivatelinkAccessOutput
	ToGetInfluxDbInfluxdbUserConfigPrivatelinkAccessOutputWithContext(context.Context) GetInfluxDbInfluxdbUserConfigPrivatelinkAccessOutput
}

type GetInfluxDbInfluxdbUserConfigPrivatelinkAccessArgs struct {
	// InfluxDB specific server provided values.
	Influxdb pulumi.StringPtrInput `pulumi:"influxdb"`
}

func (GetInfluxDbInfluxdbUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfluxDbInfluxdbUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i GetInfluxDbInfluxdbUserConfigPrivatelinkAccessArgs) ToGetInfluxDbInfluxdbUserConfigPrivatelinkAccessOutput() GetInfluxDbInfluxdbUserConfigPrivatelinkAccessOutput {
	return i.ToGetInfluxDbInfluxdbUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i GetInfluxDbInfluxdbUserConfigPrivatelinkAccessArgs) ToGetInfluxDbInfluxdbUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfluxDbInfluxdbUserConfigPrivatelinkAccessOutput)
}

func (i GetInfluxDbInfluxdbUserConfigPrivatelinkAccessArgs) ToGetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput() GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i GetInfluxDbInfluxdbUserConfigPrivatelinkAccessArgs) ToGetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfluxDbInfluxdbUserConfigPrivatelinkAccessOutput).ToGetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrInput is an input type that accepts GetInfluxDbInfluxdbUserConfigPrivatelinkAccessArgs, GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtr and GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrInput` via:
//
//          GetInfluxDbInfluxdbUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToGetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput() GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput
	ToGetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput
}

type getInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrType GetInfluxDbInfluxdbUserConfigPrivatelinkAccessArgs

func GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtr(v *GetInfluxDbInfluxdbUserConfigPrivatelinkAccessArgs) GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrInput {
	return (*getInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrType)(v)
}

func (*getInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInfluxDbInfluxdbUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *getInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrType) ToGetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput() GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *getInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrType) ToGetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput)
}

type GetInfluxDbInfluxdbUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (GetInfluxDbInfluxdbUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfluxDbInfluxdbUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetInfluxDbInfluxdbUserConfigPrivatelinkAccessOutput) ToGetInfluxDbInfluxdbUserConfigPrivatelinkAccessOutput() GetInfluxDbInfluxdbUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetInfluxDbInfluxdbUserConfigPrivatelinkAccessOutput) ToGetInfluxDbInfluxdbUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetInfluxDbInfluxdbUserConfigPrivatelinkAccessOutput) ToGetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput() GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return o.ToGetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o GetInfluxDbInfluxdbUserConfigPrivatelinkAccessOutput) ToGetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetInfluxDbInfluxdbUserConfigPrivatelinkAccess) *GetInfluxDbInfluxdbUserConfigPrivatelinkAccess {
		return &v
	}).(GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput)
}

// InfluxDB specific server provided values.
func (o GetInfluxDbInfluxdbUserConfigPrivatelinkAccessOutput) Influxdb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfluxDbInfluxdbUserConfigPrivatelinkAccess) *string { return v.Influxdb }).(pulumi.StringPtrOutput)
}

type GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInfluxDbInfluxdbUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput) ToGetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput() GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput) ToGetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput) Elem() GetInfluxDbInfluxdbUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *GetInfluxDbInfluxdbUserConfigPrivatelinkAccess) GetInfluxDbInfluxdbUserConfigPrivatelinkAccess {
		return *v
	}).(GetInfluxDbInfluxdbUserConfigPrivatelinkAccessOutput)
}

// InfluxDB specific server provided values.
func (o GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput) Influxdb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInfluxDbInfluxdbUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Influxdb
	}).(pulumi.StringPtrOutput)
}

type GetInfluxDbInfluxdbUserConfigPublicAccess struct {
	// InfluxDB specific server provided values.
	Influxdb *string `pulumi:"influxdb"`
}

// GetInfluxDbInfluxdbUserConfigPublicAccessInput is an input type that accepts GetInfluxDbInfluxdbUserConfigPublicAccessArgs and GetInfluxDbInfluxdbUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `GetInfluxDbInfluxdbUserConfigPublicAccessInput` via:
//
//          GetInfluxDbInfluxdbUserConfigPublicAccessArgs{...}
type GetInfluxDbInfluxdbUserConfigPublicAccessInput interface {
	pulumi.Input

	ToGetInfluxDbInfluxdbUserConfigPublicAccessOutput() GetInfluxDbInfluxdbUserConfigPublicAccessOutput
	ToGetInfluxDbInfluxdbUserConfigPublicAccessOutputWithContext(context.Context) GetInfluxDbInfluxdbUserConfigPublicAccessOutput
}

type GetInfluxDbInfluxdbUserConfigPublicAccessArgs struct {
	// InfluxDB specific server provided values.
	Influxdb pulumi.StringPtrInput `pulumi:"influxdb"`
}

func (GetInfluxDbInfluxdbUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfluxDbInfluxdbUserConfigPublicAccess)(nil)).Elem()
}

func (i GetInfluxDbInfluxdbUserConfigPublicAccessArgs) ToGetInfluxDbInfluxdbUserConfigPublicAccessOutput() GetInfluxDbInfluxdbUserConfigPublicAccessOutput {
	return i.ToGetInfluxDbInfluxdbUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i GetInfluxDbInfluxdbUserConfigPublicAccessArgs) ToGetInfluxDbInfluxdbUserConfigPublicAccessOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfluxDbInfluxdbUserConfigPublicAccessOutput)
}

func (i GetInfluxDbInfluxdbUserConfigPublicAccessArgs) ToGetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput() GetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput {
	return i.ToGetInfluxDbInfluxdbUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i GetInfluxDbInfluxdbUserConfigPublicAccessArgs) ToGetInfluxDbInfluxdbUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfluxDbInfluxdbUserConfigPublicAccessOutput).ToGetInfluxDbInfluxdbUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// GetInfluxDbInfluxdbUserConfigPublicAccessPtrInput is an input type that accepts GetInfluxDbInfluxdbUserConfigPublicAccessArgs, GetInfluxDbInfluxdbUserConfigPublicAccessPtr and GetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `GetInfluxDbInfluxdbUserConfigPublicAccessPtrInput` via:
//
//          GetInfluxDbInfluxdbUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type GetInfluxDbInfluxdbUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToGetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput() GetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput
	ToGetInfluxDbInfluxdbUserConfigPublicAccessPtrOutputWithContext(context.Context) GetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput
}

type getInfluxDbInfluxdbUserConfigPublicAccessPtrType GetInfluxDbInfluxdbUserConfigPublicAccessArgs

func GetInfluxDbInfluxdbUserConfigPublicAccessPtr(v *GetInfluxDbInfluxdbUserConfigPublicAccessArgs) GetInfluxDbInfluxdbUserConfigPublicAccessPtrInput {
	return (*getInfluxDbInfluxdbUserConfigPublicAccessPtrType)(v)
}

func (*getInfluxDbInfluxdbUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInfluxDbInfluxdbUserConfigPublicAccess)(nil)).Elem()
}

func (i *getInfluxDbInfluxdbUserConfigPublicAccessPtrType) ToGetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput() GetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput {
	return i.ToGetInfluxDbInfluxdbUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *getInfluxDbInfluxdbUserConfigPublicAccessPtrType) ToGetInfluxDbInfluxdbUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput)
}

type GetInfluxDbInfluxdbUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (GetInfluxDbInfluxdbUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfluxDbInfluxdbUserConfigPublicAccess)(nil)).Elem()
}

func (o GetInfluxDbInfluxdbUserConfigPublicAccessOutput) ToGetInfluxDbInfluxdbUserConfigPublicAccessOutput() GetInfluxDbInfluxdbUserConfigPublicAccessOutput {
	return o
}

func (o GetInfluxDbInfluxdbUserConfigPublicAccessOutput) ToGetInfluxDbInfluxdbUserConfigPublicAccessOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbUserConfigPublicAccessOutput {
	return o
}

func (o GetInfluxDbInfluxdbUserConfigPublicAccessOutput) ToGetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput() GetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput {
	return o.ToGetInfluxDbInfluxdbUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o GetInfluxDbInfluxdbUserConfigPublicAccessOutput) ToGetInfluxDbInfluxdbUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetInfluxDbInfluxdbUserConfigPublicAccess) *GetInfluxDbInfluxdbUserConfigPublicAccess {
		return &v
	}).(GetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput)
}

// InfluxDB specific server provided values.
func (o GetInfluxDbInfluxdbUserConfigPublicAccessOutput) Influxdb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfluxDbInfluxdbUserConfigPublicAccess) *string { return v.Influxdb }).(pulumi.StringPtrOutput)
}

type GetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (GetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInfluxDbInfluxdbUserConfigPublicAccess)(nil)).Elem()
}

func (o GetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput) ToGetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput() GetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput) ToGetInfluxDbInfluxdbUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput) Elem() GetInfluxDbInfluxdbUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *GetInfluxDbInfluxdbUserConfigPublicAccess) GetInfluxDbInfluxdbUserConfigPublicAccess {
		return *v
	}).(GetInfluxDbInfluxdbUserConfigPublicAccessOutput)
}

// InfluxDB specific server provided values.
func (o GetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput) Influxdb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInfluxDbInfluxdbUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Influxdb
	}).(pulumi.StringPtrOutput)
}

type GetInfluxDbServiceIntegration struct {
	IntegrationType   string `pulumi:"integrationType"`
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// GetInfluxDbServiceIntegrationInput is an input type that accepts GetInfluxDbServiceIntegrationArgs and GetInfluxDbServiceIntegrationOutput values.
// You can construct a concrete instance of `GetInfluxDbServiceIntegrationInput` via:
//
//          GetInfluxDbServiceIntegrationArgs{...}
type GetInfluxDbServiceIntegrationInput interface {
	pulumi.Input

	ToGetInfluxDbServiceIntegrationOutput() GetInfluxDbServiceIntegrationOutput
	ToGetInfluxDbServiceIntegrationOutputWithContext(context.Context) GetInfluxDbServiceIntegrationOutput
}

type GetInfluxDbServiceIntegrationArgs struct {
	IntegrationType   pulumi.StringInput `pulumi:"integrationType"`
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (GetInfluxDbServiceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfluxDbServiceIntegration)(nil)).Elem()
}

func (i GetInfluxDbServiceIntegrationArgs) ToGetInfluxDbServiceIntegrationOutput() GetInfluxDbServiceIntegrationOutput {
	return i.ToGetInfluxDbServiceIntegrationOutputWithContext(context.Background())
}

func (i GetInfluxDbServiceIntegrationArgs) ToGetInfluxDbServiceIntegrationOutputWithContext(ctx context.Context) GetInfluxDbServiceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfluxDbServiceIntegrationOutput)
}

// GetInfluxDbServiceIntegrationArrayInput is an input type that accepts GetInfluxDbServiceIntegrationArray and GetInfluxDbServiceIntegrationArrayOutput values.
// You can construct a concrete instance of `GetInfluxDbServiceIntegrationArrayInput` via:
//
//          GetInfluxDbServiceIntegrationArray{ GetInfluxDbServiceIntegrationArgs{...} }
type GetInfluxDbServiceIntegrationArrayInput interface {
	pulumi.Input

	ToGetInfluxDbServiceIntegrationArrayOutput() GetInfluxDbServiceIntegrationArrayOutput
	ToGetInfluxDbServiceIntegrationArrayOutputWithContext(context.Context) GetInfluxDbServiceIntegrationArrayOutput
}

type GetInfluxDbServiceIntegrationArray []GetInfluxDbServiceIntegrationInput

func (GetInfluxDbServiceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfluxDbServiceIntegration)(nil)).Elem()
}

func (i GetInfluxDbServiceIntegrationArray) ToGetInfluxDbServiceIntegrationArrayOutput() GetInfluxDbServiceIntegrationArrayOutput {
	return i.ToGetInfluxDbServiceIntegrationArrayOutputWithContext(context.Background())
}

func (i GetInfluxDbServiceIntegrationArray) ToGetInfluxDbServiceIntegrationArrayOutputWithContext(ctx context.Context) GetInfluxDbServiceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfluxDbServiceIntegrationArrayOutput)
}

type GetInfluxDbServiceIntegrationOutput struct{ *pulumi.OutputState }

func (GetInfluxDbServiceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfluxDbServiceIntegration)(nil)).Elem()
}

func (o GetInfluxDbServiceIntegrationOutput) ToGetInfluxDbServiceIntegrationOutput() GetInfluxDbServiceIntegrationOutput {
	return o
}

func (o GetInfluxDbServiceIntegrationOutput) ToGetInfluxDbServiceIntegrationOutputWithContext(ctx context.Context) GetInfluxDbServiceIntegrationOutput {
	return o
}

func (o GetInfluxDbServiceIntegrationOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfluxDbServiceIntegration) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o GetInfluxDbServiceIntegrationOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfluxDbServiceIntegration) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

type GetInfluxDbServiceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (GetInfluxDbServiceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfluxDbServiceIntegration)(nil)).Elem()
}

func (o GetInfluxDbServiceIntegrationArrayOutput) ToGetInfluxDbServiceIntegrationArrayOutput() GetInfluxDbServiceIntegrationArrayOutput {
	return o
}

func (o GetInfluxDbServiceIntegrationArrayOutput) ToGetInfluxDbServiceIntegrationArrayOutputWithContext(ctx context.Context) GetInfluxDbServiceIntegrationArrayOutput {
	return o
}

func (o GetInfluxDbServiceIntegrationArrayOutput) Index(i pulumi.IntInput) GetInfluxDbServiceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInfluxDbServiceIntegration {
		return vs[0].([]GetInfluxDbServiceIntegration)[vs[1].(int)]
	}).(GetInfluxDbServiceIntegrationOutput)
}

type GetKafkaComponent struct {
	Component                 string `pulumi:"component"`
	Host                      string `pulumi:"host"`
	KafkaAuthenticationMethod string `pulumi:"kafkaAuthenticationMethod"`
	Port                      int    `pulumi:"port"`
	Route                     string `pulumi:"route"`
	Ssl                       bool   `pulumi:"ssl"`
	Usage                     string `pulumi:"usage"`
}

// GetKafkaComponentInput is an input type that accepts GetKafkaComponentArgs and GetKafkaComponentOutput values.
// You can construct a concrete instance of `GetKafkaComponentInput` via:
//
//          GetKafkaComponentArgs{...}
type GetKafkaComponentInput interface {
	pulumi.Input

	ToGetKafkaComponentOutput() GetKafkaComponentOutput
	ToGetKafkaComponentOutputWithContext(context.Context) GetKafkaComponentOutput
}

type GetKafkaComponentArgs struct {
	Component                 pulumi.StringInput `pulumi:"component"`
	Host                      pulumi.StringInput `pulumi:"host"`
	KafkaAuthenticationMethod pulumi.StringInput `pulumi:"kafkaAuthenticationMethod"`
	Port                      pulumi.IntInput    `pulumi:"port"`
	Route                     pulumi.StringInput `pulumi:"route"`
	Ssl                       pulumi.BoolInput   `pulumi:"ssl"`
	Usage                     pulumi.StringInput `pulumi:"usage"`
}

func (GetKafkaComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaComponent)(nil)).Elem()
}

func (i GetKafkaComponentArgs) ToGetKafkaComponentOutput() GetKafkaComponentOutput {
	return i.ToGetKafkaComponentOutputWithContext(context.Background())
}

func (i GetKafkaComponentArgs) ToGetKafkaComponentOutputWithContext(ctx context.Context) GetKafkaComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaComponentOutput)
}

// GetKafkaComponentArrayInput is an input type that accepts GetKafkaComponentArray and GetKafkaComponentArrayOutput values.
// You can construct a concrete instance of `GetKafkaComponentArrayInput` via:
//
//          GetKafkaComponentArray{ GetKafkaComponentArgs{...} }
type GetKafkaComponentArrayInput interface {
	pulumi.Input

	ToGetKafkaComponentArrayOutput() GetKafkaComponentArrayOutput
	ToGetKafkaComponentArrayOutputWithContext(context.Context) GetKafkaComponentArrayOutput
}

type GetKafkaComponentArray []GetKafkaComponentInput

func (GetKafkaComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaComponent)(nil)).Elem()
}

func (i GetKafkaComponentArray) ToGetKafkaComponentArrayOutput() GetKafkaComponentArrayOutput {
	return i.ToGetKafkaComponentArrayOutputWithContext(context.Background())
}

func (i GetKafkaComponentArray) ToGetKafkaComponentArrayOutputWithContext(ctx context.Context) GetKafkaComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaComponentArrayOutput)
}

type GetKafkaComponentOutput struct{ *pulumi.OutputState }

func (GetKafkaComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaComponent)(nil)).Elem()
}

func (o GetKafkaComponentOutput) ToGetKafkaComponentOutput() GetKafkaComponentOutput {
	return o
}

func (o GetKafkaComponentOutput) ToGetKafkaComponentOutputWithContext(ctx context.Context) GetKafkaComponentOutput {
	return o
}

func (o GetKafkaComponentOutput) Component() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaComponent) string { return v.Component }).(pulumi.StringOutput)
}

func (o GetKafkaComponentOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaComponent) string { return v.Host }).(pulumi.StringOutput)
}

func (o GetKafkaComponentOutput) KafkaAuthenticationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaComponent) string { return v.KafkaAuthenticationMethod }).(pulumi.StringOutput)
}

func (o GetKafkaComponentOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetKafkaComponent) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetKafkaComponentOutput) Route() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaComponent) string { return v.Route }).(pulumi.StringOutput)
}

func (o GetKafkaComponentOutput) Ssl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKafkaComponent) bool { return v.Ssl }).(pulumi.BoolOutput)
}

func (o GetKafkaComponentOutput) Usage() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaComponent) string { return v.Usage }).(pulumi.StringOutput)
}

type GetKafkaComponentArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaComponent)(nil)).Elem()
}

func (o GetKafkaComponentArrayOutput) ToGetKafkaComponentArrayOutput() GetKafkaComponentArrayOutput {
	return o
}

func (o GetKafkaComponentArrayOutput) ToGetKafkaComponentArrayOutputWithContext(ctx context.Context) GetKafkaComponentArrayOutput {
	return o
}

func (o GetKafkaComponentArrayOutput) Index(i pulumi.IntInput) GetKafkaComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaComponent {
		return vs[0].([]GetKafkaComponent)[vs[1].(int)]
	}).(GetKafkaComponentOutput)
}

type GetKafkaConnectComponent struct {
	Component                 string `pulumi:"component"`
	Host                      string `pulumi:"host"`
	KafkaAuthenticationMethod string `pulumi:"kafkaAuthenticationMethod"`
	Port                      int    `pulumi:"port"`
	Route                     string `pulumi:"route"`
	Ssl                       bool   `pulumi:"ssl"`
	Usage                     string `pulumi:"usage"`
}

// GetKafkaConnectComponentInput is an input type that accepts GetKafkaConnectComponentArgs and GetKafkaConnectComponentOutput values.
// You can construct a concrete instance of `GetKafkaConnectComponentInput` via:
//
//          GetKafkaConnectComponentArgs{...}
type GetKafkaConnectComponentInput interface {
	pulumi.Input

	ToGetKafkaConnectComponentOutput() GetKafkaConnectComponentOutput
	ToGetKafkaConnectComponentOutputWithContext(context.Context) GetKafkaConnectComponentOutput
}

type GetKafkaConnectComponentArgs struct {
	Component                 pulumi.StringInput `pulumi:"component"`
	Host                      pulumi.StringInput `pulumi:"host"`
	KafkaAuthenticationMethod pulumi.StringInput `pulumi:"kafkaAuthenticationMethod"`
	Port                      pulumi.IntInput    `pulumi:"port"`
	Route                     pulumi.StringInput `pulumi:"route"`
	Ssl                       pulumi.BoolInput   `pulumi:"ssl"`
	Usage                     pulumi.StringInput `pulumi:"usage"`
}

func (GetKafkaConnectComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaConnectComponent)(nil)).Elem()
}

func (i GetKafkaConnectComponentArgs) ToGetKafkaConnectComponentOutput() GetKafkaConnectComponentOutput {
	return i.ToGetKafkaConnectComponentOutputWithContext(context.Background())
}

func (i GetKafkaConnectComponentArgs) ToGetKafkaConnectComponentOutputWithContext(ctx context.Context) GetKafkaConnectComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaConnectComponentOutput)
}

// GetKafkaConnectComponentArrayInput is an input type that accepts GetKafkaConnectComponentArray and GetKafkaConnectComponentArrayOutput values.
// You can construct a concrete instance of `GetKafkaConnectComponentArrayInput` via:
//
//          GetKafkaConnectComponentArray{ GetKafkaConnectComponentArgs{...} }
type GetKafkaConnectComponentArrayInput interface {
	pulumi.Input

	ToGetKafkaConnectComponentArrayOutput() GetKafkaConnectComponentArrayOutput
	ToGetKafkaConnectComponentArrayOutputWithContext(context.Context) GetKafkaConnectComponentArrayOutput
}

type GetKafkaConnectComponentArray []GetKafkaConnectComponentInput

func (GetKafkaConnectComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaConnectComponent)(nil)).Elem()
}

func (i GetKafkaConnectComponentArray) ToGetKafkaConnectComponentArrayOutput() GetKafkaConnectComponentArrayOutput {
	return i.ToGetKafkaConnectComponentArrayOutputWithContext(context.Background())
}

func (i GetKafkaConnectComponentArray) ToGetKafkaConnectComponentArrayOutputWithContext(ctx context.Context) GetKafkaConnectComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaConnectComponentArrayOutput)
}

type GetKafkaConnectComponentOutput struct{ *pulumi.OutputState }

func (GetKafkaConnectComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaConnectComponent)(nil)).Elem()
}

func (o GetKafkaConnectComponentOutput) ToGetKafkaConnectComponentOutput() GetKafkaConnectComponentOutput {
	return o
}

func (o GetKafkaConnectComponentOutput) ToGetKafkaConnectComponentOutputWithContext(ctx context.Context) GetKafkaConnectComponentOutput {
	return o
}

func (o GetKafkaConnectComponentOutput) Component() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaConnectComponent) string { return v.Component }).(pulumi.StringOutput)
}

func (o GetKafkaConnectComponentOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaConnectComponent) string { return v.Host }).(pulumi.StringOutput)
}

func (o GetKafkaConnectComponentOutput) KafkaAuthenticationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaConnectComponent) string { return v.KafkaAuthenticationMethod }).(pulumi.StringOutput)
}

func (o GetKafkaConnectComponentOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetKafkaConnectComponent) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetKafkaConnectComponentOutput) Route() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaConnectComponent) string { return v.Route }).(pulumi.StringOutput)
}

func (o GetKafkaConnectComponentOutput) Ssl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKafkaConnectComponent) bool { return v.Ssl }).(pulumi.BoolOutput)
}

func (o GetKafkaConnectComponentOutput) Usage() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaConnectComponent) string { return v.Usage }).(pulumi.StringOutput)
}

type GetKafkaConnectComponentArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaConnectComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaConnectComponent)(nil)).Elem()
}

func (o GetKafkaConnectComponentArrayOutput) ToGetKafkaConnectComponentArrayOutput() GetKafkaConnectComponentArrayOutput {
	return o
}

func (o GetKafkaConnectComponentArrayOutput) ToGetKafkaConnectComponentArrayOutputWithContext(ctx context.Context) GetKafkaConnectComponentArrayOutput {
	return o
}

func (o GetKafkaConnectComponentArrayOutput) Index(i pulumi.IntInput) GetKafkaConnectComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaConnectComponent {
		return vs[0].([]GetKafkaConnectComponent)[vs[1].(int)]
	}).(GetKafkaConnectComponentOutput)
}

type GetKafkaConnectKafkaConnect struct {
}

// GetKafkaConnectKafkaConnectInput is an input type that accepts GetKafkaConnectKafkaConnectArgs and GetKafkaConnectKafkaConnectOutput values.
// You can construct a concrete instance of `GetKafkaConnectKafkaConnectInput` via:
//
//          GetKafkaConnectKafkaConnectArgs{...}
type GetKafkaConnectKafkaConnectInput interface {
	pulumi.Input

	ToGetKafkaConnectKafkaConnectOutput() GetKafkaConnectKafkaConnectOutput
	ToGetKafkaConnectKafkaConnectOutputWithContext(context.Context) GetKafkaConnectKafkaConnectOutput
}

type GetKafkaConnectKafkaConnectArgs struct {
}

func (GetKafkaConnectKafkaConnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaConnectKafkaConnect)(nil)).Elem()
}

func (i GetKafkaConnectKafkaConnectArgs) ToGetKafkaConnectKafkaConnectOutput() GetKafkaConnectKafkaConnectOutput {
	return i.ToGetKafkaConnectKafkaConnectOutputWithContext(context.Background())
}

func (i GetKafkaConnectKafkaConnectArgs) ToGetKafkaConnectKafkaConnectOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaConnectKafkaConnectOutput)
}

type GetKafkaConnectKafkaConnectOutput struct{ *pulumi.OutputState }

func (GetKafkaConnectKafkaConnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaConnectKafkaConnect)(nil)).Elem()
}

func (o GetKafkaConnectKafkaConnectOutput) ToGetKafkaConnectKafkaConnectOutput() GetKafkaConnectKafkaConnectOutput {
	return o
}

func (o GetKafkaConnectKafkaConnectOutput) ToGetKafkaConnectKafkaConnectOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectOutput {
	return o
}

type GetKafkaConnectKafkaConnectUserConfig struct {
	// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters []string `pulumi:"ipFilters"`
	// Kafka Connect specific server provided values.
	KafkaConnect *GetKafkaConnectKafkaConnectUserConfigKafkaConnect `pulumi:"kafkaConnect"`
	// Allow access to selected service ports from private networks.
	PrivateAccess *GetKafkaConnectKafkaConnectUserConfigPrivateAccess `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess *GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	PublicAccess      *GetKafkaConnectKafkaConnectUserConfigPublicAccess      `pulumi:"publicAccess"`
}

// GetKafkaConnectKafkaConnectUserConfigInput is an input type that accepts GetKafkaConnectKafkaConnectUserConfigArgs and GetKafkaConnectKafkaConnectUserConfigOutput values.
// You can construct a concrete instance of `GetKafkaConnectKafkaConnectUserConfigInput` via:
//
//          GetKafkaConnectKafkaConnectUserConfigArgs{...}
type GetKafkaConnectKafkaConnectUserConfigInput interface {
	pulumi.Input

	ToGetKafkaConnectKafkaConnectUserConfigOutput() GetKafkaConnectKafkaConnectUserConfigOutput
	ToGetKafkaConnectKafkaConnectUserConfigOutputWithContext(context.Context) GetKafkaConnectKafkaConnectUserConfigOutput
}

type GetKafkaConnectKafkaConnectUserConfigArgs struct {
	// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// Kafka Connect specific server provided values.
	KafkaConnect GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrInput `pulumi:"kafkaConnect"`
	// Allow access to selected service ports from private networks.
	PrivateAccess GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrInput `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	PublicAccess      GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrInput      `pulumi:"publicAccess"`
}

func (GetKafkaConnectKafkaConnectUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaConnectKafkaConnectUserConfig)(nil)).Elem()
}

func (i GetKafkaConnectKafkaConnectUserConfigArgs) ToGetKafkaConnectKafkaConnectUserConfigOutput() GetKafkaConnectKafkaConnectUserConfigOutput {
	return i.ToGetKafkaConnectKafkaConnectUserConfigOutputWithContext(context.Background())
}

func (i GetKafkaConnectKafkaConnectUserConfigArgs) ToGetKafkaConnectKafkaConnectUserConfigOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaConnectKafkaConnectUserConfigOutput)
}

type GetKafkaConnectKafkaConnectUserConfigOutput struct{ *pulumi.OutputState }

func (GetKafkaConnectKafkaConnectUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaConnectKafkaConnectUserConfig)(nil)).Elem()
}

func (o GetKafkaConnectKafkaConnectUserConfigOutput) ToGetKafkaConnectKafkaConnectUserConfigOutput() GetKafkaConnectKafkaConnectUserConfigOutput {
	return o
}

func (o GetKafkaConnectKafkaConnectUserConfigOutput) ToGetKafkaConnectKafkaConnectUserConfigOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectUserConfigOutput {
	return o
}

// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
func (o GetKafkaConnectKafkaConnectUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKafkaConnectKafkaConnectUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// Kafka Connect specific server provided values.
func (o GetKafkaConnectKafkaConnectUserConfigOutput) KafkaConnect() GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o.ApplyT(func(v GetKafkaConnectKafkaConnectUserConfig) *GetKafkaConnectKafkaConnectUserConfigKafkaConnect {
		return v.KafkaConnect
	}).(GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput)
}

// Allow access to selected service ports from private networks.
func (o GetKafkaConnectKafkaConnectUserConfigOutput) PrivateAccess() GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetKafkaConnectKafkaConnectUserConfig) *GetKafkaConnectKafkaConnectUserConfigPrivateAccess {
		return v.PrivateAccess
	}).(GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput)
}

// Allow access to selected service components through Privatelink
func (o GetKafkaConnectKafkaConnectUserConfigOutput) PrivatelinkAccess() GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetKafkaConnectKafkaConnectUserConfig) *GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccess {
		return v.PrivatelinkAccess
	}).(GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput)
}

func (o GetKafkaConnectKafkaConnectUserConfigOutput) PublicAccess() GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetKafkaConnectKafkaConnectUserConfig) *GetKafkaConnectKafkaConnectUserConfigPublicAccess {
		return v.PublicAccess
	}).(GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput)
}

type GetKafkaConnectKafkaConnectUserConfigKafkaConnect struct {
	// Defines what client configurations can be
	// overridden by the connector. Default is None.
	ConnectorClientConfigOverridePolicy *string `pulumi:"connectorClientConfigOverridePolicy"`
	// What to do when there is no initial offset in Kafka or
	// if the current offset does not exist any more on the server. Default is earliest.
	ConsumerAutoOffsetReset *string `pulumi:"consumerAutoOffsetReset"`
	// Records are fetched in batches by the consumer, and if
	// the first record batch in the first non-empty partition of the fetch is larger than this value,
	// the record batch will still be returned to ensure that the consumer can make progress. As such,
	// this is not a absolute maximum.
	ConsumerFetchMaxBytes *string `pulumi:"consumerFetchMaxBytes"`
	// Transaction read isolation level. readUncommitted is
	// the default, but readCommitted can be used if consume-exactly-once behavior is desired.
	ConsumerIsolationLevel *string `pulumi:"consumerIsolationLevel"`
	// Records are fetched in batches by the consumer.If
	// the first record batch in the first non-empty partition of the fetch is larger than this limit,
	// the batch will still be returned to ensure that the consumer can make progress.
	ConsumerMaxPartitionFetchBytes *string `pulumi:"consumerMaxPartitionFetchBytes"`
	// The maximum delay in milliseconds between invocations
	// of poll() when using consumer group management (defaults to 300000).
	// * `consumerMaxPollRecords` The maximum number of records returned by a single poll.
	ConsumerMaxPollIntervalMs *string `pulumi:"consumerMaxPollIntervalMs"`
	ConsumerMaxPollRecords    *string `pulumi:"consumerMaxPollRecords"`
	// The interval at which to try committing offsets for tasks
	// (defaults to 60000).
	OffsetFlushIntervalMs *string `pulumi:"offsetFlushIntervalMs"`
	// Maximum number of milliseconds to wait for records to flush
	// and partition offset data to be committed to offset storage before cancelling the process and restoring
	// the offset data to be committed in a future attempt (defaults to 5000).
	OffsetFlushTimeoutMs *string `pulumi:"offsetFlushTimeoutMs"`
	// This setting will limit the number of record batches the
	// producer will send in a single request to avoid sending huge requests.
	ProducerMaxRequestSize *string `pulumi:"producerMaxRequestSize"`
	// The timeout in milliseconds used to detect failures when using Kafka’s
	// group management facilities (defaults to 10000).
	SessionTimeoutMs *string `pulumi:"sessionTimeoutMs"`
}

// GetKafkaConnectKafkaConnectUserConfigKafkaConnectInput is an input type that accepts GetKafkaConnectKafkaConnectUserConfigKafkaConnectArgs and GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput values.
// You can construct a concrete instance of `GetKafkaConnectKafkaConnectUserConfigKafkaConnectInput` via:
//
//          GetKafkaConnectKafkaConnectUserConfigKafkaConnectArgs{...}
type GetKafkaConnectKafkaConnectUserConfigKafkaConnectInput interface {
	pulumi.Input

	ToGetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput() GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput
	ToGetKafkaConnectKafkaConnectUserConfigKafkaConnectOutputWithContext(context.Context) GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput
}

type GetKafkaConnectKafkaConnectUserConfigKafkaConnectArgs struct {
	// Defines what client configurations can be
	// overridden by the connector. Default is None.
	ConnectorClientConfigOverridePolicy pulumi.StringPtrInput `pulumi:"connectorClientConfigOverridePolicy"`
	// What to do when there is no initial offset in Kafka or
	// if the current offset does not exist any more on the server. Default is earliest.
	ConsumerAutoOffsetReset pulumi.StringPtrInput `pulumi:"consumerAutoOffsetReset"`
	// Records are fetched in batches by the consumer, and if
	// the first record batch in the first non-empty partition of the fetch is larger than this value,
	// the record batch will still be returned to ensure that the consumer can make progress. As such,
	// this is not a absolute maximum.
	ConsumerFetchMaxBytes pulumi.StringPtrInput `pulumi:"consumerFetchMaxBytes"`
	// Transaction read isolation level. readUncommitted is
	// the default, but readCommitted can be used if consume-exactly-once behavior is desired.
	ConsumerIsolationLevel pulumi.StringPtrInput `pulumi:"consumerIsolationLevel"`
	// Records are fetched in batches by the consumer.If
	// the first record batch in the first non-empty partition of the fetch is larger than this limit,
	// the batch will still be returned to ensure that the consumer can make progress.
	ConsumerMaxPartitionFetchBytes pulumi.StringPtrInput `pulumi:"consumerMaxPartitionFetchBytes"`
	// The maximum delay in milliseconds between invocations
	// of poll() when using consumer group management (defaults to 300000).
	// * `consumerMaxPollRecords` The maximum number of records returned by a single poll.
	ConsumerMaxPollIntervalMs pulumi.StringPtrInput `pulumi:"consumerMaxPollIntervalMs"`
	ConsumerMaxPollRecords    pulumi.StringPtrInput `pulumi:"consumerMaxPollRecords"`
	// The interval at which to try committing offsets for tasks
	// (defaults to 60000).
	OffsetFlushIntervalMs pulumi.StringPtrInput `pulumi:"offsetFlushIntervalMs"`
	// Maximum number of milliseconds to wait for records to flush
	// and partition offset data to be committed to offset storage before cancelling the process and restoring
	// the offset data to be committed in a future attempt (defaults to 5000).
	OffsetFlushTimeoutMs pulumi.StringPtrInput `pulumi:"offsetFlushTimeoutMs"`
	// This setting will limit the number of record batches the
	// producer will send in a single request to avoid sending huge requests.
	ProducerMaxRequestSize pulumi.StringPtrInput `pulumi:"producerMaxRequestSize"`
	// The timeout in milliseconds used to detect failures when using Kafka’s
	// group management facilities (defaults to 10000).
	SessionTimeoutMs pulumi.StringPtrInput `pulumi:"sessionTimeoutMs"`
}

func (GetKafkaConnectKafkaConnectUserConfigKafkaConnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaConnectKafkaConnectUserConfigKafkaConnect)(nil)).Elem()
}

func (i GetKafkaConnectKafkaConnectUserConfigKafkaConnectArgs) ToGetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput() GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput {
	return i.ToGetKafkaConnectKafkaConnectUserConfigKafkaConnectOutputWithContext(context.Background())
}

func (i GetKafkaConnectKafkaConnectUserConfigKafkaConnectArgs) ToGetKafkaConnectKafkaConnectUserConfigKafkaConnectOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput)
}

func (i GetKafkaConnectKafkaConnectUserConfigKafkaConnectArgs) ToGetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput() GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput {
	return i.ToGetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(context.Background())
}

func (i GetKafkaConnectKafkaConnectUserConfigKafkaConnectArgs) ToGetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput).ToGetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx)
}

// GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrInput is an input type that accepts GetKafkaConnectKafkaConnectUserConfigKafkaConnectArgs, GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtr and GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput values.
// You can construct a concrete instance of `GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrInput` via:
//
//          GetKafkaConnectKafkaConnectUserConfigKafkaConnectArgs{...}
//
//  or:
//
//          nil
type GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrInput interface {
	pulumi.Input

	ToGetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput() GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput
	ToGetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(context.Context) GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput
}

type getKafkaConnectKafkaConnectUserConfigKafkaConnectPtrType GetKafkaConnectKafkaConnectUserConfigKafkaConnectArgs

func GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtr(v *GetKafkaConnectKafkaConnectUserConfigKafkaConnectArgs) GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrInput {
	return (*getKafkaConnectKafkaConnectUserConfigKafkaConnectPtrType)(v)
}

func (*getKafkaConnectKafkaConnectUserConfigKafkaConnectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaConnectKafkaConnectUserConfigKafkaConnect)(nil)).Elem()
}

func (i *getKafkaConnectKafkaConnectUserConfigKafkaConnectPtrType) ToGetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput() GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput {
	return i.ToGetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(context.Background())
}

func (i *getKafkaConnectKafkaConnectUserConfigKafkaConnectPtrType) ToGetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput)
}

type GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput struct{ *pulumi.OutputState }

func (GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaConnectKafkaConnectUserConfigKafkaConnect)(nil)).Elem()
}

func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput) ToGetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput() GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput {
	return o
}

func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput) ToGetKafkaConnectKafkaConnectUserConfigKafkaConnectOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput {
	return o
}

func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput) ToGetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput() GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o.ToGetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(context.Background())
}

func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput) ToGetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o.ApplyT(func(v GetKafkaConnectKafkaConnectUserConfigKafkaConnect) *GetKafkaConnectKafkaConnectUserConfigKafkaConnect {
		return &v
	}).(GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput)
}

// Defines what client configurations can be
// overridden by the connector. Default is None.
func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput) ConnectorClientConfigOverridePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaConnectKafkaConnectUserConfigKafkaConnect) *string {
		return v.ConnectorClientConfigOverridePolicy
	}).(pulumi.StringPtrOutput)
}

// What to do when there is no initial offset in Kafka or
// if the current offset does not exist any more on the server. Default is earliest.
func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput) ConsumerAutoOffsetReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaConnectKafkaConnectUserConfigKafkaConnect) *string { return v.ConsumerAutoOffsetReset }).(pulumi.StringPtrOutput)
}

// Records are fetched in batches by the consumer, and if
// the first record batch in the first non-empty partition of the fetch is larger than this value,
// the record batch will still be returned to ensure that the consumer can make progress. As such,
// this is not a absolute maximum.
func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput) ConsumerFetchMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaConnectKafkaConnectUserConfigKafkaConnect) *string { return v.ConsumerFetchMaxBytes }).(pulumi.StringPtrOutput)
}

// Transaction read isolation level. readUncommitted is
// the default, but readCommitted can be used if consume-exactly-once behavior is desired.
func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput) ConsumerIsolationLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaConnectKafkaConnectUserConfigKafkaConnect) *string { return v.ConsumerIsolationLevel }).(pulumi.StringPtrOutput)
}

// Records are fetched in batches by the consumer.If
// the first record batch in the first non-empty partition of the fetch is larger than this limit,
// the batch will still be returned to ensure that the consumer can make progress.
func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput) ConsumerMaxPartitionFetchBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaConnectKafkaConnectUserConfigKafkaConnect) *string {
		return v.ConsumerMaxPartitionFetchBytes
	}).(pulumi.StringPtrOutput)
}

// The maximum delay in milliseconds between invocations
// of poll() when using consumer group management (defaults to 300000).
// * `consumerMaxPollRecords` The maximum number of records returned by a single poll.
func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput) ConsumerMaxPollIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaConnectKafkaConnectUserConfigKafkaConnect) *string { return v.ConsumerMaxPollIntervalMs }).(pulumi.StringPtrOutput)
}

func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput) ConsumerMaxPollRecords() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaConnectKafkaConnectUserConfigKafkaConnect) *string { return v.ConsumerMaxPollRecords }).(pulumi.StringPtrOutput)
}

// The interval at which to try committing offsets for tasks
// (defaults to 60000).
func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput) OffsetFlushIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaConnectKafkaConnectUserConfigKafkaConnect) *string { return v.OffsetFlushIntervalMs }).(pulumi.StringPtrOutput)
}

// Maximum number of milliseconds to wait for records to flush
// and partition offset data to be committed to offset storage before cancelling the process and restoring
// the offset data to be committed in a future attempt (defaults to 5000).
func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput) OffsetFlushTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaConnectKafkaConnectUserConfigKafkaConnect) *string { return v.OffsetFlushTimeoutMs }).(pulumi.StringPtrOutput)
}

// This setting will limit the number of record batches the
// producer will send in a single request to avoid sending huge requests.
func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput) ProducerMaxRequestSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaConnectKafkaConnectUserConfigKafkaConnect) *string { return v.ProducerMaxRequestSize }).(pulumi.StringPtrOutput)
}

// The timeout in milliseconds used to detect failures when using Kafka’s
// group management facilities (defaults to 10000).
func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput) SessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaConnectKafkaConnectUserConfigKafkaConnect) *string { return v.SessionTimeoutMs }).(pulumi.StringPtrOutput)
}

type GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput struct{ *pulumi.OutputState }

func (GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaConnectKafkaConnectUserConfigKafkaConnect)(nil)).Elem()
}

func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) ToGetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput() GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o
}

func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) ToGetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o
}

func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) Elem() GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput {
	return o.ApplyT(func(v *GetKafkaConnectKafkaConnectUserConfigKafkaConnect) GetKafkaConnectKafkaConnectUserConfigKafkaConnect {
		return *v
	}).(GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput)
}

// Defines what client configurations can be
// overridden by the connector. Default is None.
func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) ConnectorClientConfigOverridePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaConnectKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorClientConfigOverridePolicy
	}).(pulumi.StringPtrOutput)
}

// What to do when there is no initial offset in Kafka or
// if the current offset does not exist any more on the server. Default is earliest.
func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) ConsumerAutoOffsetReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaConnectKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerAutoOffsetReset
	}).(pulumi.StringPtrOutput)
}

// Records are fetched in batches by the consumer, and if
// the first record batch in the first non-empty partition of the fetch is larger than this value,
// the record batch will still be returned to ensure that the consumer can make progress. As such,
// this is not a absolute maximum.
func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) ConsumerFetchMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaConnectKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerFetchMaxBytes
	}).(pulumi.StringPtrOutput)
}

// Transaction read isolation level. readUncommitted is
// the default, but readCommitted can be used if consume-exactly-once behavior is desired.
func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) ConsumerIsolationLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaConnectKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerIsolationLevel
	}).(pulumi.StringPtrOutput)
}

// Records are fetched in batches by the consumer.If
// the first record batch in the first non-empty partition of the fetch is larger than this limit,
// the batch will still be returned to ensure that the consumer can make progress.
func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) ConsumerMaxPartitionFetchBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaConnectKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerMaxPartitionFetchBytes
	}).(pulumi.StringPtrOutput)
}

// The maximum delay in milliseconds between invocations
// of poll() when using consumer group management (defaults to 300000).
// * `consumerMaxPollRecords` The maximum number of records returned by a single poll.
func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) ConsumerMaxPollIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaConnectKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerMaxPollIntervalMs
	}).(pulumi.StringPtrOutput)
}

func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) ConsumerMaxPollRecords() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaConnectKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerMaxPollRecords
	}).(pulumi.StringPtrOutput)
}

// The interval at which to try committing offsets for tasks
// (defaults to 60000).
func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) OffsetFlushIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaConnectKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.OffsetFlushIntervalMs
	}).(pulumi.StringPtrOutput)
}

// Maximum number of milliseconds to wait for records to flush
// and partition offset data to be committed to offset storage before cancelling the process and restoring
// the offset data to be committed in a future attempt (defaults to 5000).
func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) OffsetFlushTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaConnectKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.OffsetFlushTimeoutMs
	}).(pulumi.StringPtrOutput)
}

// This setting will limit the number of record batches the
// producer will send in a single request to avoid sending huge requests.
func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) ProducerMaxRequestSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaConnectKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ProducerMaxRequestSize
	}).(pulumi.StringPtrOutput)
}

// The timeout in milliseconds used to detect failures when using Kafka’s
// group management facilities (defaults to 10000).
func (o GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput) SessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaConnectKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.SessionTimeoutMs
	}).(pulumi.StringPtrOutput)
}

type GetKafkaConnectKafkaConnectUserConfigPrivateAccess struct {
	// Kafka Connect specific server provided values.
	KafkaConnect *string `pulumi:"kafkaConnect"`
	// Allow clients to connect to prometheus with a DNS name that always resolves to
	// the service's private IP addresses. Only available in certain network locations.
	Prometheus *string `pulumi:"prometheus"`
}

// GetKafkaConnectKafkaConnectUserConfigPrivateAccessInput is an input type that accepts GetKafkaConnectKafkaConnectUserConfigPrivateAccessArgs and GetKafkaConnectKafkaConnectUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `GetKafkaConnectKafkaConnectUserConfigPrivateAccessInput` via:
//
//          GetKafkaConnectKafkaConnectUserConfigPrivateAccessArgs{...}
type GetKafkaConnectKafkaConnectUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToGetKafkaConnectKafkaConnectUserConfigPrivateAccessOutput() GetKafkaConnectKafkaConnectUserConfigPrivateAccessOutput
	ToGetKafkaConnectKafkaConnectUserConfigPrivateAccessOutputWithContext(context.Context) GetKafkaConnectKafkaConnectUserConfigPrivateAccessOutput
}

type GetKafkaConnectKafkaConnectUserConfigPrivateAccessArgs struct {
	// Kafka Connect specific server provided values.
	KafkaConnect pulumi.StringPtrInput `pulumi:"kafkaConnect"`
	// Allow clients to connect to prometheus with a DNS name that always resolves to
	// the service's private IP addresses. Only available in certain network locations.
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (GetKafkaConnectKafkaConnectUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaConnectKafkaConnectUserConfigPrivateAccess)(nil)).Elem()
}

func (i GetKafkaConnectKafkaConnectUserConfigPrivateAccessArgs) ToGetKafkaConnectKafkaConnectUserConfigPrivateAccessOutput() GetKafkaConnectKafkaConnectUserConfigPrivateAccessOutput {
	return i.ToGetKafkaConnectKafkaConnectUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i GetKafkaConnectKafkaConnectUserConfigPrivateAccessArgs) ToGetKafkaConnectKafkaConnectUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaConnectKafkaConnectUserConfigPrivateAccessOutput)
}

func (i GetKafkaConnectKafkaConnectUserConfigPrivateAccessArgs) ToGetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput() GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput {
	return i.ToGetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i GetKafkaConnectKafkaConnectUserConfigPrivateAccessArgs) ToGetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaConnectKafkaConnectUserConfigPrivateAccessOutput).ToGetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrInput is an input type that accepts GetKafkaConnectKafkaConnectUserConfigPrivateAccessArgs, GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtr and GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrInput` via:
//
//          GetKafkaConnectKafkaConnectUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToGetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput() GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput
	ToGetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(context.Context) GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput
}

type getKafkaConnectKafkaConnectUserConfigPrivateAccessPtrType GetKafkaConnectKafkaConnectUserConfigPrivateAccessArgs

func GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtr(v *GetKafkaConnectKafkaConnectUserConfigPrivateAccessArgs) GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrInput {
	return (*getKafkaConnectKafkaConnectUserConfigPrivateAccessPtrType)(v)
}

func (*getKafkaConnectKafkaConnectUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaConnectKafkaConnectUserConfigPrivateAccess)(nil)).Elem()
}

func (i *getKafkaConnectKafkaConnectUserConfigPrivateAccessPtrType) ToGetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput() GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput {
	return i.ToGetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *getKafkaConnectKafkaConnectUserConfigPrivateAccessPtrType) ToGetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput)
}

type GetKafkaConnectKafkaConnectUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (GetKafkaConnectKafkaConnectUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaConnectKafkaConnectUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetKafkaConnectKafkaConnectUserConfigPrivateAccessOutput) ToGetKafkaConnectKafkaConnectUserConfigPrivateAccessOutput() GetKafkaConnectKafkaConnectUserConfigPrivateAccessOutput {
	return o
}

func (o GetKafkaConnectKafkaConnectUserConfigPrivateAccessOutput) ToGetKafkaConnectKafkaConnectUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectUserConfigPrivateAccessOutput {
	return o
}

func (o GetKafkaConnectKafkaConnectUserConfigPrivateAccessOutput) ToGetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput() GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput {
	return o.ToGetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o GetKafkaConnectKafkaConnectUserConfigPrivateAccessOutput) ToGetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetKafkaConnectKafkaConnectUserConfigPrivateAccess) *GetKafkaConnectKafkaConnectUserConfigPrivateAccess {
		return &v
	}).(GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput)
}

// Kafka Connect specific server provided values.
func (o GetKafkaConnectKafkaConnectUserConfigPrivateAccessOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaConnectKafkaConnectUserConfigPrivateAccess) *string { return v.KafkaConnect }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus with a DNS name that always resolves to
// the service's private IP addresses. Only available in certain network locations.
func (o GetKafkaConnectKafkaConnectUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaConnectKafkaConnectUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaConnectKafkaConnectUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput) ToGetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput() GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput) ToGetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput) Elem() GetKafkaConnectKafkaConnectUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *GetKafkaConnectKafkaConnectUserConfigPrivateAccess) GetKafkaConnectKafkaConnectUserConfigPrivateAccess {
		return *v
	}).(GetKafkaConnectKafkaConnectUserConfigPrivateAccessOutput)
}

// Kafka Connect specific server provided values.
func (o GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaConnectKafkaConnectUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaConnect
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus with a DNS name that always resolves to
// the service's private IP addresses. Only available in certain network locations.
func (o GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaConnectKafkaConnectUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccess struct {
	// Kafka Connect specific server provided values.
	KafkaConnect *string `pulumi:"kafkaConnect"`
}

// GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessInput is an input type that accepts GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessArgs and GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessInput` via:
//
//          GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessArgs{...}
type GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToGetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput() GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput
	ToGetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutputWithContext(context.Context) GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput
}

type GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessArgs struct {
	// Kafka Connect specific server provided values.
	KafkaConnect pulumi.StringPtrInput `pulumi:"kafkaConnect"`
}

func (GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessArgs) ToGetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput() GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput {
	return i.ToGetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessArgs) ToGetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput)
}

func (i GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessArgs) ToGetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput() GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessArgs) ToGetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput).ToGetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrInput is an input type that accepts GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessArgs, GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtr and GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrInput` via:
//
//          GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToGetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput() GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput
	ToGetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput
}

type getKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrType GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessArgs

func GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtr(v *GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessArgs) GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrInput {
	return (*getKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrType)(v)
}

func (*getKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *getKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrType) ToGetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput() GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *getKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrType) ToGetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput)
}

type GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput) ToGetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput() GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput) ToGetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput) ToGetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput() GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return o.ToGetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput) ToGetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccess) *GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccess {
		return &v
	}).(GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput)
}

// Kafka Connect specific server provided values.
func (o GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccess) *string { return v.KafkaConnect }).(pulumi.StringPtrOutput)
}

type GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput) ToGetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput() GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput) ToGetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput) Elem() GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccess) GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccess {
		return *v
	}).(GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput)
}

// Kafka Connect specific server provided values.
func (o GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaConnect
	}).(pulumi.StringPtrOutput)
}

type GetKafkaConnectKafkaConnectUserConfigPublicAccess struct {
	// Kafka Connect specific server provided values.
	KafkaConnect *string `pulumi:"kafkaConnect"`
	// Allow clients to connect to prometheus with a DNS name that always resolves to
	// the service's private IP addresses. Only available in certain network locations.
	Prometheus *string `pulumi:"prometheus"`
}

// GetKafkaConnectKafkaConnectUserConfigPublicAccessInput is an input type that accepts GetKafkaConnectKafkaConnectUserConfigPublicAccessArgs and GetKafkaConnectKafkaConnectUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `GetKafkaConnectKafkaConnectUserConfigPublicAccessInput` via:
//
//          GetKafkaConnectKafkaConnectUserConfigPublicAccessArgs{...}
type GetKafkaConnectKafkaConnectUserConfigPublicAccessInput interface {
	pulumi.Input

	ToGetKafkaConnectKafkaConnectUserConfigPublicAccessOutput() GetKafkaConnectKafkaConnectUserConfigPublicAccessOutput
	ToGetKafkaConnectKafkaConnectUserConfigPublicAccessOutputWithContext(context.Context) GetKafkaConnectKafkaConnectUserConfigPublicAccessOutput
}

type GetKafkaConnectKafkaConnectUserConfigPublicAccessArgs struct {
	// Kafka Connect specific server provided values.
	KafkaConnect pulumi.StringPtrInput `pulumi:"kafkaConnect"`
	// Allow clients to connect to prometheus with a DNS name that always resolves to
	// the service's private IP addresses. Only available in certain network locations.
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (GetKafkaConnectKafkaConnectUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaConnectKafkaConnectUserConfigPublicAccess)(nil)).Elem()
}

func (i GetKafkaConnectKafkaConnectUserConfigPublicAccessArgs) ToGetKafkaConnectKafkaConnectUserConfigPublicAccessOutput() GetKafkaConnectKafkaConnectUserConfigPublicAccessOutput {
	return i.ToGetKafkaConnectKafkaConnectUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i GetKafkaConnectKafkaConnectUserConfigPublicAccessArgs) ToGetKafkaConnectKafkaConnectUserConfigPublicAccessOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaConnectKafkaConnectUserConfigPublicAccessOutput)
}

func (i GetKafkaConnectKafkaConnectUserConfigPublicAccessArgs) ToGetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput() GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput {
	return i.ToGetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i GetKafkaConnectKafkaConnectUserConfigPublicAccessArgs) ToGetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaConnectKafkaConnectUserConfigPublicAccessOutput).ToGetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrInput is an input type that accepts GetKafkaConnectKafkaConnectUserConfigPublicAccessArgs, GetKafkaConnectKafkaConnectUserConfigPublicAccessPtr and GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrInput` via:
//
//          GetKafkaConnectKafkaConnectUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToGetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput() GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput
	ToGetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutputWithContext(context.Context) GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput
}

type getKafkaConnectKafkaConnectUserConfigPublicAccessPtrType GetKafkaConnectKafkaConnectUserConfigPublicAccessArgs

func GetKafkaConnectKafkaConnectUserConfigPublicAccessPtr(v *GetKafkaConnectKafkaConnectUserConfigPublicAccessArgs) GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrInput {
	return (*getKafkaConnectKafkaConnectUserConfigPublicAccessPtrType)(v)
}

func (*getKafkaConnectKafkaConnectUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaConnectKafkaConnectUserConfigPublicAccess)(nil)).Elem()
}

func (i *getKafkaConnectKafkaConnectUserConfigPublicAccessPtrType) ToGetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput() GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput {
	return i.ToGetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *getKafkaConnectKafkaConnectUserConfigPublicAccessPtrType) ToGetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput)
}

type GetKafkaConnectKafkaConnectUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (GetKafkaConnectKafkaConnectUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaConnectKafkaConnectUserConfigPublicAccess)(nil)).Elem()
}

func (o GetKafkaConnectKafkaConnectUserConfigPublicAccessOutput) ToGetKafkaConnectKafkaConnectUserConfigPublicAccessOutput() GetKafkaConnectKafkaConnectUserConfigPublicAccessOutput {
	return o
}

func (o GetKafkaConnectKafkaConnectUserConfigPublicAccessOutput) ToGetKafkaConnectKafkaConnectUserConfigPublicAccessOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectUserConfigPublicAccessOutput {
	return o
}

func (o GetKafkaConnectKafkaConnectUserConfigPublicAccessOutput) ToGetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput() GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput {
	return o.ToGetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o GetKafkaConnectKafkaConnectUserConfigPublicAccessOutput) ToGetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetKafkaConnectKafkaConnectUserConfigPublicAccess) *GetKafkaConnectKafkaConnectUserConfigPublicAccess {
		return &v
	}).(GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput)
}

// Kafka Connect specific server provided values.
func (o GetKafkaConnectKafkaConnectUserConfigPublicAccessOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaConnectKafkaConnectUserConfigPublicAccess) *string { return v.KafkaConnect }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus with a DNS name that always resolves to
// the service's private IP addresses. Only available in certain network locations.
func (o GetKafkaConnectKafkaConnectUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaConnectKafkaConnectUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaConnectKafkaConnectUserConfigPublicAccess)(nil)).Elem()
}

func (o GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput) ToGetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput() GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput) ToGetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput) Elem() GetKafkaConnectKafkaConnectUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *GetKafkaConnectKafkaConnectUserConfigPublicAccess) GetKafkaConnectKafkaConnectUserConfigPublicAccess {
		return *v
	}).(GetKafkaConnectKafkaConnectUserConfigPublicAccessOutput)
}

// Kafka Connect specific server provided values.
func (o GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaConnectKafkaConnectUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaConnect
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus with a DNS name that always resolves to
// the service's private IP addresses. Only available in certain network locations.
func (o GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaConnectKafkaConnectUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type GetKafkaConnectServiceIntegration struct {
	IntegrationType   string `pulumi:"integrationType"`
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// GetKafkaConnectServiceIntegrationInput is an input type that accepts GetKafkaConnectServiceIntegrationArgs and GetKafkaConnectServiceIntegrationOutput values.
// You can construct a concrete instance of `GetKafkaConnectServiceIntegrationInput` via:
//
//          GetKafkaConnectServiceIntegrationArgs{...}
type GetKafkaConnectServiceIntegrationInput interface {
	pulumi.Input

	ToGetKafkaConnectServiceIntegrationOutput() GetKafkaConnectServiceIntegrationOutput
	ToGetKafkaConnectServiceIntegrationOutputWithContext(context.Context) GetKafkaConnectServiceIntegrationOutput
}

type GetKafkaConnectServiceIntegrationArgs struct {
	IntegrationType   pulumi.StringInput `pulumi:"integrationType"`
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (GetKafkaConnectServiceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaConnectServiceIntegration)(nil)).Elem()
}

func (i GetKafkaConnectServiceIntegrationArgs) ToGetKafkaConnectServiceIntegrationOutput() GetKafkaConnectServiceIntegrationOutput {
	return i.ToGetKafkaConnectServiceIntegrationOutputWithContext(context.Background())
}

func (i GetKafkaConnectServiceIntegrationArgs) ToGetKafkaConnectServiceIntegrationOutputWithContext(ctx context.Context) GetKafkaConnectServiceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaConnectServiceIntegrationOutput)
}

// GetKafkaConnectServiceIntegrationArrayInput is an input type that accepts GetKafkaConnectServiceIntegrationArray and GetKafkaConnectServiceIntegrationArrayOutput values.
// You can construct a concrete instance of `GetKafkaConnectServiceIntegrationArrayInput` via:
//
//          GetKafkaConnectServiceIntegrationArray{ GetKafkaConnectServiceIntegrationArgs{...} }
type GetKafkaConnectServiceIntegrationArrayInput interface {
	pulumi.Input

	ToGetKafkaConnectServiceIntegrationArrayOutput() GetKafkaConnectServiceIntegrationArrayOutput
	ToGetKafkaConnectServiceIntegrationArrayOutputWithContext(context.Context) GetKafkaConnectServiceIntegrationArrayOutput
}

type GetKafkaConnectServiceIntegrationArray []GetKafkaConnectServiceIntegrationInput

func (GetKafkaConnectServiceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaConnectServiceIntegration)(nil)).Elem()
}

func (i GetKafkaConnectServiceIntegrationArray) ToGetKafkaConnectServiceIntegrationArrayOutput() GetKafkaConnectServiceIntegrationArrayOutput {
	return i.ToGetKafkaConnectServiceIntegrationArrayOutputWithContext(context.Background())
}

func (i GetKafkaConnectServiceIntegrationArray) ToGetKafkaConnectServiceIntegrationArrayOutputWithContext(ctx context.Context) GetKafkaConnectServiceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaConnectServiceIntegrationArrayOutput)
}

type GetKafkaConnectServiceIntegrationOutput struct{ *pulumi.OutputState }

func (GetKafkaConnectServiceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaConnectServiceIntegration)(nil)).Elem()
}

func (o GetKafkaConnectServiceIntegrationOutput) ToGetKafkaConnectServiceIntegrationOutput() GetKafkaConnectServiceIntegrationOutput {
	return o
}

func (o GetKafkaConnectServiceIntegrationOutput) ToGetKafkaConnectServiceIntegrationOutputWithContext(ctx context.Context) GetKafkaConnectServiceIntegrationOutput {
	return o
}

func (o GetKafkaConnectServiceIntegrationOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaConnectServiceIntegration) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o GetKafkaConnectServiceIntegrationOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaConnectServiceIntegration) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

type GetKafkaConnectServiceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaConnectServiceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaConnectServiceIntegration)(nil)).Elem()
}

func (o GetKafkaConnectServiceIntegrationArrayOutput) ToGetKafkaConnectServiceIntegrationArrayOutput() GetKafkaConnectServiceIntegrationArrayOutput {
	return o
}

func (o GetKafkaConnectServiceIntegrationArrayOutput) ToGetKafkaConnectServiceIntegrationArrayOutputWithContext(ctx context.Context) GetKafkaConnectServiceIntegrationArrayOutput {
	return o
}

func (o GetKafkaConnectServiceIntegrationArrayOutput) Index(i pulumi.IntInput) GetKafkaConnectServiceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaConnectServiceIntegration {
		return vs[0].([]GetKafkaConnectServiceIntegration)[vs[1].(int)]
	}).(GetKafkaConnectServiceIntegrationOutput)
}

type GetKafkaConnectorTask struct {
	Connector string `pulumi:"connector"`
	// List of tasks of a connector, each element contains `connector`
	// (Related connector name) and `task` (Task id / number).
	Task int `pulumi:"task"`
}

// GetKafkaConnectorTaskInput is an input type that accepts GetKafkaConnectorTaskArgs and GetKafkaConnectorTaskOutput values.
// You can construct a concrete instance of `GetKafkaConnectorTaskInput` via:
//
//          GetKafkaConnectorTaskArgs{...}
type GetKafkaConnectorTaskInput interface {
	pulumi.Input

	ToGetKafkaConnectorTaskOutput() GetKafkaConnectorTaskOutput
	ToGetKafkaConnectorTaskOutputWithContext(context.Context) GetKafkaConnectorTaskOutput
}

type GetKafkaConnectorTaskArgs struct {
	Connector pulumi.StringInput `pulumi:"connector"`
	// List of tasks of a connector, each element contains `connector`
	// (Related connector name) and `task` (Task id / number).
	Task pulumi.IntInput `pulumi:"task"`
}

func (GetKafkaConnectorTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaConnectorTask)(nil)).Elem()
}

func (i GetKafkaConnectorTaskArgs) ToGetKafkaConnectorTaskOutput() GetKafkaConnectorTaskOutput {
	return i.ToGetKafkaConnectorTaskOutputWithContext(context.Background())
}

func (i GetKafkaConnectorTaskArgs) ToGetKafkaConnectorTaskOutputWithContext(ctx context.Context) GetKafkaConnectorTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaConnectorTaskOutput)
}

// GetKafkaConnectorTaskArrayInput is an input type that accepts GetKafkaConnectorTaskArray and GetKafkaConnectorTaskArrayOutput values.
// You can construct a concrete instance of `GetKafkaConnectorTaskArrayInput` via:
//
//          GetKafkaConnectorTaskArray{ GetKafkaConnectorTaskArgs{...} }
type GetKafkaConnectorTaskArrayInput interface {
	pulumi.Input

	ToGetKafkaConnectorTaskArrayOutput() GetKafkaConnectorTaskArrayOutput
	ToGetKafkaConnectorTaskArrayOutputWithContext(context.Context) GetKafkaConnectorTaskArrayOutput
}

type GetKafkaConnectorTaskArray []GetKafkaConnectorTaskInput

func (GetKafkaConnectorTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaConnectorTask)(nil)).Elem()
}

func (i GetKafkaConnectorTaskArray) ToGetKafkaConnectorTaskArrayOutput() GetKafkaConnectorTaskArrayOutput {
	return i.ToGetKafkaConnectorTaskArrayOutputWithContext(context.Background())
}

func (i GetKafkaConnectorTaskArray) ToGetKafkaConnectorTaskArrayOutputWithContext(ctx context.Context) GetKafkaConnectorTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaConnectorTaskArrayOutput)
}

type GetKafkaConnectorTaskOutput struct{ *pulumi.OutputState }

func (GetKafkaConnectorTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaConnectorTask)(nil)).Elem()
}

func (o GetKafkaConnectorTaskOutput) ToGetKafkaConnectorTaskOutput() GetKafkaConnectorTaskOutput {
	return o
}

func (o GetKafkaConnectorTaskOutput) ToGetKafkaConnectorTaskOutputWithContext(ctx context.Context) GetKafkaConnectorTaskOutput {
	return o
}

func (o GetKafkaConnectorTaskOutput) Connector() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaConnectorTask) string { return v.Connector }).(pulumi.StringOutput)
}

// List of tasks of a connector, each element contains `connector`
// (Related connector name) and `task` (Task id / number).
func (o GetKafkaConnectorTaskOutput) Task() pulumi.IntOutput {
	return o.ApplyT(func(v GetKafkaConnectorTask) int { return v.Task }).(pulumi.IntOutput)
}

type GetKafkaConnectorTaskArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaConnectorTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaConnectorTask)(nil)).Elem()
}

func (o GetKafkaConnectorTaskArrayOutput) ToGetKafkaConnectorTaskArrayOutput() GetKafkaConnectorTaskArrayOutput {
	return o
}

func (o GetKafkaConnectorTaskArrayOutput) ToGetKafkaConnectorTaskArrayOutputWithContext(ctx context.Context) GetKafkaConnectorTaskArrayOutput {
	return o
}

func (o GetKafkaConnectorTaskArrayOutput) Index(i pulumi.IntInput) GetKafkaConnectorTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaConnectorTask {
		return vs[0].([]GetKafkaConnectorTask)[vs[1].(int)]
	}).(GetKafkaConnectorTaskOutput)
}

type GetKafkaKafka struct {
	// The Kafka client certificate
	AccessCert string `pulumi:"accessCert"`
	// The Kafka client certificate key
	AccessKey string `pulumi:"accessKey"`
	// The Kafka Connect URI, if any
	ConnectUri string `pulumi:"connectUri"`
	// The Kafka REST URI, if any
	RestUri string `pulumi:"restUri"`
	// The Schema Registry URI, if any
	SchemaRegistryUri string `pulumi:"schemaRegistryUri"`
}

// GetKafkaKafkaInput is an input type that accepts GetKafkaKafkaArgs and GetKafkaKafkaOutput values.
// You can construct a concrete instance of `GetKafkaKafkaInput` via:
//
//          GetKafkaKafkaArgs{...}
type GetKafkaKafkaInput interface {
	pulumi.Input

	ToGetKafkaKafkaOutput() GetKafkaKafkaOutput
	ToGetKafkaKafkaOutputWithContext(context.Context) GetKafkaKafkaOutput
}

type GetKafkaKafkaArgs struct {
	// The Kafka client certificate
	AccessCert pulumi.StringInput `pulumi:"accessCert"`
	// The Kafka client certificate key
	AccessKey pulumi.StringInput `pulumi:"accessKey"`
	// The Kafka Connect URI, if any
	ConnectUri pulumi.StringInput `pulumi:"connectUri"`
	// The Kafka REST URI, if any
	RestUri pulumi.StringInput `pulumi:"restUri"`
	// The Schema Registry URI, if any
	SchemaRegistryUri pulumi.StringInput `pulumi:"schemaRegistryUri"`
}

func (GetKafkaKafkaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaKafka)(nil)).Elem()
}

func (i GetKafkaKafkaArgs) ToGetKafkaKafkaOutput() GetKafkaKafkaOutput {
	return i.ToGetKafkaKafkaOutputWithContext(context.Background())
}

func (i GetKafkaKafkaArgs) ToGetKafkaKafkaOutputWithContext(ctx context.Context) GetKafkaKafkaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaKafkaOutput)
}

type GetKafkaKafkaOutput struct{ *pulumi.OutputState }

func (GetKafkaKafkaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaKafka)(nil)).Elem()
}

func (o GetKafkaKafkaOutput) ToGetKafkaKafkaOutput() GetKafkaKafkaOutput {
	return o
}

func (o GetKafkaKafkaOutput) ToGetKafkaKafkaOutputWithContext(ctx context.Context) GetKafkaKafkaOutput {
	return o
}

// The Kafka client certificate
func (o GetKafkaKafkaOutput) AccessCert() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaKafka) string { return v.AccessCert }).(pulumi.StringOutput)
}

// The Kafka client certificate key
func (o GetKafkaKafkaOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaKafka) string { return v.AccessKey }).(pulumi.StringOutput)
}

// The Kafka Connect URI, if any
func (o GetKafkaKafkaOutput) ConnectUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaKafka) string { return v.ConnectUri }).(pulumi.StringOutput)
}

// The Kafka REST URI, if any
func (o GetKafkaKafkaOutput) RestUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaKafka) string { return v.RestUri }).(pulumi.StringOutput)
}

// The Schema Registry URI, if any
func (o GetKafkaKafkaOutput) SchemaRegistryUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaKafka) string { return v.SchemaRegistryUri }).(pulumi.StringOutput)
}

type GetKafkaKafkaUserConfig struct {
	// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
	CustomDomain *string `pulumi:"customDomain"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
	IpFilters []string `pulumi:"ipFilters"`
	// Kafka server provided values:
	Kafka *GetKafkaKafkaUserConfigKafka `pulumi:"kafka"`
	// Kafka authentication methods
	KafkaAuthenticationMethods *GetKafkaKafkaUserConfigKafkaAuthenticationMethods `pulumi:"kafkaAuthenticationMethods"`
	// Enable kafka_connect
	KafkaConnect *string `pulumi:"kafkaConnect"`
	// Kafka Connect configuration values
	KafkaConnectConfig *GetKafkaKafkaUserConfigKafkaConnectConfig `pulumi:"kafkaConnectConfig"`
	// Enable kafka_rest
	KafkaRest *string `pulumi:"kafkaRest"`
	// Kafka-REST configuration
	KafkaRestConfig *GetKafkaKafkaUserConfigKafkaRestConfig `pulumi:"kafkaRestConfig"`
	// Kafka major version
	KafkaVersion *string `pulumi:"kafkaVersion"`
	// Allow access to selected service ports from private networks
	PrivateAccess *GetKafkaKafkaUserConfigPrivateAccess `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess *GetKafkaKafkaUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	// Allow access to selected service ports from the public Internet
	PublicAccess *GetKafkaKafkaUserConfigPublicAccess `pulumi:"publicAccess"`
	// Enable schema_registry
	SchemaRegistry *string `pulumi:"schemaRegistry"`
	// Schema Registry configuration
	SchemaRegistryConfig *GetKafkaKafkaUserConfigSchemaRegistryConfig `pulumi:"schemaRegistryConfig"`
}

// GetKafkaKafkaUserConfigInput is an input type that accepts GetKafkaKafkaUserConfigArgs and GetKafkaKafkaUserConfigOutput values.
// You can construct a concrete instance of `GetKafkaKafkaUserConfigInput` via:
//
//          GetKafkaKafkaUserConfigArgs{...}
type GetKafkaKafkaUserConfigInput interface {
	pulumi.Input

	ToGetKafkaKafkaUserConfigOutput() GetKafkaKafkaUserConfigOutput
	ToGetKafkaKafkaUserConfigOutputWithContext(context.Context) GetKafkaKafkaUserConfigOutput
}

type GetKafkaKafkaUserConfigArgs struct {
	// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
	CustomDomain pulumi.StringPtrInput `pulumi:"customDomain"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// Kafka server provided values:
	Kafka GetKafkaKafkaUserConfigKafkaPtrInput `pulumi:"kafka"`
	// Kafka authentication methods
	KafkaAuthenticationMethods GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrInput `pulumi:"kafkaAuthenticationMethods"`
	// Enable kafka_connect
	KafkaConnect pulumi.StringPtrInput `pulumi:"kafkaConnect"`
	// Kafka Connect configuration values
	KafkaConnectConfig GetKafkaKafkaUserConfigKafkaConnectConfigPtrInput `pulumi:"kafkaConnectConfig"`
	// Enable kafka_rest
	KafkaRest pulumi.StringPtrInput `pulumi:"kafkaRest"`
	// Kafka-REST configuration
	KafkaRestConfig GetKafkaKafkaUserConfigKafkaRestConfigPtrInput `pulumi:"kafkaRestConfig"`
	// Kafka major version
	KafkaVersion pulumi.StringPtrInput `pulumi:"kafkaVersion"`
	// Allow access to selected service ports from private networks
	PrivateAccess GetKafkaKafkaUserConfigPrivateAccessPtrInput `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess GetKafkaKafkaUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	// Allow access to selected service ports from the public Internet
	PublicAccess GetKafkaKafkaUserConfigPublicAccessPtrInput `pulumi:"publicAccess"`
	// Enable schema_registry
	SchemaRegistry pulumi.StringPtrInput `pulumi:"schemaRegistry"`
	// Schema Registry configuration
	SchemaRegistryConfig GetKafkaKafkaUserConfigSchemaRegistryConfigPtrInput `pulumi:"schemaRegistryConfig"`
}

func (GetKafkaKafkaUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaKafkaUserConfig)(nil)).Elem()
}

func (i GetKafkaKafkaUserConfigArgs) ToGetKafkaKafkaUserConfigOutput() GetKafkaKafkaUserConfigOutput {
	return i.ToGetKafkaKafkaUserConfigOutputWithContext(context.Background())
}

func (i GetKafkaKafkaUserConfigArgs) ToGetKafkaKafkaUserConfigOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaKafkaUserConfigOutput)
}

type GetKafkaKafkaUserConfigOutput struct{ *pulumi.OutputState }

func (GetKafkaKafkaUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaKafkaUserConfig)(nil)).Elem()
}

func (o GetKafkaKafkaUserConfigOutput) ToGetKafkaKafkaUserConfigOutput() GetKafkaKafkaUserConfigOutput {
	return o
}

func (o GetKafkaKafkaUserConfigOutput) ToGetKafkaKafkaUserConfigOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigOutput {
	return o
}

// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
func (o GetKafkaKafkaUserConfigOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfig) *string { return v.CustomDomain }).(pulumi.StringPtrOutput)
}

// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
func (o GetKafkaKafkaUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// Kafka server provided values:
func (o GetKafkaKafkaUserConfigOutput) Kafka() GetKafkaKafkaUserConfigKafkaPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfig) *GetKafkaKafkaUserConfigKafka { return v.Kafka }).(GetKafkaKafkaUserConfigKafkaPtrOutput)
}

// Kafka authentication methods
func (o GetKafkaKafkaUserConfigOutput) KafkaAuthenticationMethods() GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfig) *GetKafkaKafkaUserConfigKafkaAuthenticationMethods {
		return v.KafkaAuthenticationMethods
	}).(GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput)
}

// Enable kafka_connect
func (o GetKafkaKafkaUserConfigOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfig) *string { return v.KafkaConnect }).(pulumi.StringPtrOutput)
}

// Kafka Connect configuration values
func (o GetKafkaKafkaUserConfigOutput) KafkaConnectConfig() GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfig) *GetKafkaKafkaUserConfigKafkaConnectConfig {
		return v.KafkaConnectConfig
	}).(GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput)
}

// Enable kafka_rest
func (o GetKafkaKafkaUserConfigOutput) KafkaRest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfig) *string { return v.KafkaRest }).(pulumi.StringPtrOutput)
}

// Kafka-REST configuration
func (o GetKafkaKafkaUserConfigOutput) KafkaRestConfig() GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfig) *GetKafkaKafkaUserConfigKafkaRestConfig { return v.KafkaRestConfig }).(GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput)
}

// Kafka major version
func (o GetKafkaKafkaUserConfigOutput) KafkaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfig) *string { return v.KafkaVersion }).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from private networks
func (o GetKafkaKafkaUserConfigOutput) PrivateAccess() GetKafkaKafkaUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfig) *GetKafkaKafkaUserConfigPrivateAccess { return v.PrivateAccess }).(GetKafkaKafkaUserConfigPrivateAccessPtrOutput)
}

// Allow access to selected service components through Privatelink
func (o GetKafkaKafkaUserConfigOutput) PrivatelinkAccess() GetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfig) *GetKafkaKafkaUserConfigPrivatelinkAccess { return v.PrivatelinkAccess }).(GetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput)
}

// Allow access to selected service ports from the public Internet
func (o GetKafkaKafkaUserConfigOutput) PublicAccess() GetKafkaKafkaUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfig) *GetKafkaKafkaUserConfigPublicAccess { return v.PublicAccess }).(GetKafkaKafkaUserConfigPublicAccessPtrOutput)
}

// Enable schema_registry
func (o GetKafkaKafkaUserConfigOutput) SchemaRegistry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfig) *string { return v.SchemaRegistry }).(pulumi.StringPtrOutput)
}

// Schema Registry configuration
func (o GetKafkaKafkaUserConfigOutput) SchemaRegistryConfig() GetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfig) *GetKafkaKafkaUserConfigSchemaRegistryConfig {
		return v.SchemaRegistryConfig
	}).(GetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput)
}

type GetKafkaKafkaUserConfigKafka struct {
	// Enable auto creation of topics
	AutoCreateTopicsEnable *string `pulumi:"autoCreateTopicsEnable"`
	// Specify the final compression type for a given topic. This
	// configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd').
	// It additionally accepts 'uncompressed' which is equivalent to no compression; and 'producer'
	// which means retain the original compression codec set by the producer.
	CompressionType *string `pulumi:"compressionType"`
	// Idle connections timeout: the server socket processor
	// threads close the connections that idle for longer than this.
	ConnectionsMaxIdleMs *string `pulumi:"connectionsMaxIdleMs"`
	// Replication factor for autocreated topics
	DefaultReplicationFactor *string `pulumi:"defaultReplicationFactor"`
	// The amount of time, in milliseconds, the group
	// coordinator will wait for more consumers to join a new group before performing the first rebalance.
	// A longer delay means potentially fewer rebalances, but increases the time until processing begins.
	// The default value for this is 3 seconds. During development and testing it might be desirable to set
	// this to 0 in order to not delay test execution time.
	GroupInitialRebalanceDelayMs *string `pulumi:"groupInitialRebalanceDelayMs"`
	// The maximum allowed session timeout for registered
	// consumers. Longer timeouts give consumers more time to process messages in between heartbeats
	// at the cost of a longer time to detect failures.
	GroupMaxSessionTimeoutMs *string `pulumi:"groupMaxSessionTimeoutMs"`
	// The minimum allowed session timeout for registered
	// consumers. Longer timeouts give consumers more time to process messages in between heartbeats
	// at the cost of a longer time to detect failures.
	GroupMinSessionTimeoutMs    *string `pulumi:"groupMinSessionTimeoutMs"`
	LogCleanerDeleteRetentionMs *string `pulumi:"logCleanerDeleteRetentionMs"`
	// The maximum amount of time message will
	// remain uncompacted. Only applicable for logs that are being compacted
	LogCleanerMaxCompactionLagMs *string `pulumi:"logCleanerMaxCompactionLagMs"`
	// Controls log compactor frequency. Larger
	// value means more frequent compactions but also more space wasted for logs. Consider setting
	// log.cleaner.max.compaction.lag.ms to enforce compactions sooner, instead of setting a very
	// high value for this option.
	LogCleanerMinCleanableRatio *string `pulumi:"logCleanerMinCleanableRatio"`
	// The minimum time a message will remain
	// uncompacted in the log. Only applicable for logs that are being compacted.
	LogCleanerMinCompactionLagMs *string `pulumi:"logCleanerMinCompactionLagMs"`
	// The default cleanup policy for segments beyond the retention window.
	LogCleanupPolicy *string `pulumi:"logCleanupPolicy"`
	// The number of messages accumulated on a log partition
	// before messages are flushed to disk.
	LogFlushIntervalMessages *string `pulumi:"logFlushIntervalMessages"`
	// The maximum time in ms that a message in any topic is kept
	// in memory before flushed to disk. If not set, the value in log.flush.scheduler.interval.ms is used.
	LogFlushIntervalMs *string `pulumi:"logFlushIntervalMs"`
	// The interval with which Kafka adds an entry to the offset index.
	LogIndexIntervalBytes *string `pulumi:"logIndexIntervalBytes"`
	// The maximum size in bytes of the offset index.
	LogIndexSizeMaxBytes *string `pulumi:"logIndexSizeMaxBytes"`
	// This configuration controls whether down-conversion
	// of message formats is enabled to satisfy consume requests.
	LogMessageDownconversionEnable *string `pulumi:"logMessageDownconversionEnable"`
	// The maximum difference allowed between
	// the timestamp when a broker receives a message and the timestamp specified in the message
	LogMessageTimestampDifferenceMaxMs *string `pulumi:"logMessageTimestampDifferenceMaxMs"`
	// Define whether the timestamp in the message is
	// message create time or log append time.
	LogMessageTimestampType *string `pulumi:"logMessageTimestampType"`
	// Should pre allocate file when create new segment?
	LogPreallocate *string `pulumi:"logPreallocate"`
	// The maximum size of the log before deleting messages
	LogRetentionBytes *string `pulumi:"logRetentionBytes"`
	// The number of hours to keep a log file before deleting it.
	LogRetentionHours *string `pulumi:"logRetentionHours"`
	// The number of milliseconds to keep a log file before deleting it
	// (in milliseconds), If not set, the value in log.retention.minutes is used. If set to -1, no
	// time limit is applied.
	LogRetentionMs *string `pulumi:"logRetentionMs"`
	// The maximum jitter to subtract from logRollTimeMillis
	// (in milliseconds). If not set, the value in log.roll.jitter.hours is used.
	LogRollJitterMs *string `pulumi:"logRollJitterMs"`
	// The maximum time before a new log segment is rolled out (in milliseconds).
	LogRollMs *string `pulumi:"logRollMs"`
	// The maximum size of a single log file
	LogSegmentBytes *string `pulumi:"logSegmentBytes"`
	// The amount of time to wait before deleting a file
	// from the filesystem.
	LogSegmentDeleteDelayMs *string `pulumi:"logSegmentDeleteDelayMs"`
	// The maximum number of connections allowed from each ip
	// address (defaults to 2147483647).
	MaxConnectionsPerIp *string `pulumi:"maxConnectionsPerIp"`
	// The maximum number of incremental fetch
	// sessions that the broker will maintain.
	MaxIncrementalFetchSessionCacheSlots *string `pulumi:"maxIncrementalFetchSessionCacheSlots"`
	// The maximum size of message that the server can receive.
	MessageMaxBytes *string `pulumi:"messageMaxBytes"`
	// When a producer sets acks to 'all' (or '-1'),
	// min.insync.replicas specifies the minimum number of replicas that must acknowledge a write for
	// the write to be considered successful.
	MinInsyncReplicas *string `pulumi:"minInsyncReplicas"`
	// Number of partitions for autocreated topics
	NumPartitions *string `pulumi:"numPartitions"`
	// Log retention window in minutes for offsets topic.
	OffsetsRetentionMinutes *string `pulumi:"offsetsRetentionMinutes"`
	// The purge interval (in number of
	// requests) of the producer request purgatory(defaults to 1000).
	ProducerPurgatoryPurgeIntervalRequests *string `pulumi:"producerPurgatoryPurgeIntervalRequests"`
	// The number of bytes of messages to attempt to fetch
	// for each partition (defaults to 1048576). This is not an absolute maximum, if the first record
	// batch in the first non-empty partition of the fetch is larger than this value, the record batch
	// will still be returned to ensure that progress can be made.
	ReplicaFetchMaxBytes *string `pulumi:"replicaFetchMaxBytes"`
	// Maximum bytes expected for the entire fetch
	// response (defaults to 10485760). Records are fetched in batches, and if the first record batch
	// in the first non-empty partition of the fetch is larger than this value, the record batch will
	// still be returned to ensure that progress can be made. As such, this is not an absolute maximum.
	ReplicaFetchResponseMaxBytes *string `pulumi:"replicaFetchResponseMaxBytes"`
	// The maximum number of bytes in a socket request
	// (defaults to 104857600).
	SocketRequestMaxBytes *string `pulumi:"socketRequestMaxBytes"`
	// The interval at which
	// to remove transactions that have expired due to transactional.id.expiration.ms passing (defaults
	// to 3600000 (1 hour)).
	TransactionRemoveExpiredTransactionCleanupIntervalMs *string `pulumi:"transactionRemoveExpiredTransactionCleanupIntervalMs"`
	// The transaction topic segment bytes should
	// be kept relatively small in order to facilitate faster log compaction and cache loads (defaults
	// to 104857600 (100 mebibytes)).
	TransactionStateLogSegmentBytes *string `pulumi:"transactionStateLogSegmentBytes"`
}

// GetKafkaKafkaUserConfigKafkaInput is an input type that accepts GetKafkaKafkaUserConfigKafkaArgs and GetKafkaKafkaUserConfigKafkaOutput values.
// You can construct a concrete instance of `GetKafkaKafkaUserConfigKafkaInput` via:
//
//          GetKafkaKafkaUserConfigKafkaArgs{...}
type GetKafkaKafkaUserConfigKafkaInput interface {
	pulumi.Input

	ToGetKafkaKafkaUserConfigKafkaOutput() GetKafkaKafkaUserConfigKafkaOutput
	ToGetKafkaKafkaUserConfigKafkaOutputWithContext(context.Context) GetKafkaKafkaUserConfigKafkaOutput
}

type GetKafkaKafkaUserConfigKafkaArgs struct {
	// Enable auto creation of topics
	AutoCreateTopicsEnable pulumi.StringPtrInput `pulumi:"autoCreateTopicsEnable"`
	// Specify the final compression type for a given topic. This
	// configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd').
	// It additionally accepts 'uncompressed' which is equivalent to no compression; and 'producer'
	// which means retain the original compression codec set by the producer.
	CompressionType pulumi.StringPtrInput `pulumi:"compressionType"`
	// Idle connections timeout: the server socket processor
	// threads close the connections that idle for longer than this.
	ConnectionsMaxIdleMs pulumi.StringPtrInput `pulumi:"connectionsMaxIdleMs"`
	// Replication factor for autocreated topics
	DefaultReplicationFactor pulumi.StringPtrInput `pulumi:"defaultReplicationFactor"`
	// The amount of time, in milliseconds, the group
	// coordinator will wait for more consumers to join a new group before performing the first rebalance.
	// A longer delay means potentially fewer rebalances, but increases the time until processing begins.
	// The default value for this is 3 seconds. During development and testing it might be desirable to set
	// this to 0 in order to not delay test execution time.
	GroupInitialRebalanceDelayMs pulumi.StringPtrInput `pulumi:"groupInitialRebalanceDelayMs"`
	// The maximum allowed session timeout for registered
	// consumers. Longer timeouts give consumers more time to process messages in between heartbeats
	// at the cost of a longer time to detect failures.
	GroupMaxSessionTimeoutMs pulumi.StringPtrInput `pulumi:"groupMaxSessionTimeoutMs"`
	// The minimum allowed session timeout for registered
	// consumers. Longer timeouts give consumers more time to process messages in between heartbeats
	// at the cost of a longer time to detect failures.
	GroupMinSessionTimeoutMs    pulumi.StringPtrInput `pulumi:"groupMinSessionTimeoutMs"`
	LogCleanerDeleteRetentionMs pulumi.StringPtrInput `pulumi:"logCleanerDeleteRetentionMs"`
	// The maximum amount of time message will
	// remain uncompacted. Only applicable for logs that are being compacted
	LogCleanerMaxCompactionLagMs pulumi.StringPtrInput `pulumi:"logCleanerMaxCompactionLagMs"`
	// Controls log compactor frequency. Larger
	// value means more frequent compactions but also more space wasted for logs. Consider setting
	// log.cleaner.max.compaction.lag.ms to enforce compactions sooner, instead of setting a very
	// high value for this option.
	LogCleanerMinCleanableRatio pulumi.StringPtrInput `pulumi:"logCleanerMinCleanableRatio"`
	// The minimum time a message will remain
	// uncompacted in the log. Only applicable for logs that are being compacted.
	LogCleanerMinCompactionLagMs pulumi.StringPtrInput `pulumi:"logCleanerMinCompactionLagMs"`
	// The default cleanup policy for segments beyond the retention window.
	LogCleanupPolicy pulumi.StringPtrInput `pulumi:"logCleanupPolicy"`
	// The number of messages accumulated on a log partition
	// before messages are flushed to disk.
	LogFlushIntervalMessages pulumi.StringPtrInput `pulumi:"logFlushIntervalMessages"`
	// The maximum time in ms that a message in any topic is kept
	// in memory before flushed to disk. If not set, the value in log.flush.scheduler.interval.ms is used.
	LogFlushIntervalMs pulumi.StringPtrInput `pulumi:"logFlushIntervalMs"`
	// The interval with which Kafka adds an entry to the offset index.
	LogIndexIntervalBytes pulumi.StringPtrInput `pulumi:"logIndexIntervalBytes"`
	// The maximum size in bytes of the offset index.
	LogIndexSizeMaxBytes pulumi.StringPtrInput `pulumi:"logIndexSizeMaxBytes"`
	// This configuration controls whether down-conversion
	// of message formats is enabled to satisfy consume requests.
	LogMessageDownconversionEnable pulumi.StringPtrInput `pulumi:"logMessageDownconversionEnable"`
	// The maximum difference allowed between
	// the timestamp when a broker receives a message and the timestamp specified in the message
	LogMessageTimestampDifferenceMaxMs pulumi.StringPtrInput `pulumi:"logMessageTimestampDifferenceMaxMs"`
	// Define whether the timestamp in the message is
	// message create time or log append time.
	LogMessageTimestampType pulumi.StringPtrInput `pulumi:"logMessageTimestampType"`
	// Should pre allocate file when create new segment?
	LogPreallocate pulumi.StringPtrInput `pulumi:"logPreallocate"`
	// The maximum size of the log before deleting messages
	LogRetentionBytes pulumi.StringPtrInput `pulumi:"logRetentionBytes"`
	// The number of hours to keep a log file before deleting it.
	LogRetentionHours pulumi.StringPtrInput `pulumi:"logRetentionHours"`
	// The number of milliseconds to keep a log file before deleting it
	// (in milliseconds), If not set, the value in log.retention.minutes is used. If set to -1, no
	// time limit is applied.
	LogRetentionMs pulumi.StringPtrInput `pulumi:"logRetentionMs"`
	// The maximum jitter to subtract from logRollTimeMillis
	// (in milliseconds). If not set, the value in log.roll.jitter.hours is used.
	LogRollJitterMs pulumi.StringPtrInput `pulumi:"logRollJitterMs"`
	// The maximum time before a new log segment is rolled out (in milliseconds).
	LogRollMs pulumi.StringPtrInput `pulumi:"logRollMs"`
	// The maximum size of a single log file
	LogSegmentBytes pulumi.StringPtrInput `pulumi:"logSegmentBytes"`
	// The amount of time to wait before deleting a file
	// from the filesystem.
	LogSegmentDeleteDelayMs pulumi.StringPtrInput `pulumi:"logSegmentDeleteDelayMs"`
	// The maximum number of connections allowed from each ip
	// address (defaults to 2147483647).
	MaxConnectionsPerIp pulumi.StringPtrInput `pulumi:"maxConnectionsPerIp"`
	// The maximum number of incremental fetch
	// sessions that the broker will maintain.
	MaxIncrementalFetchSessionCacheSlots pulumi.StringPtrInput `pulumi:"maxIncrementalFetchSessionCacheSlots"`
	// The maximum size of message that the server can receive.
	MessageMaxBytes pulumi.StringPtrInput `pulumi:"messageMaxBytes"`
	// When a producer sets acks to 'all' (or '-1'),
	// min.insync.replicas specifies the minimum number of replicas that must acknowledge a write for
	// the write to be considered successful.
	MinInsyncReplicas pulumi.StringPtrInput `pulumi:"minInsyncReplicas"`
	// Number of partitions for autocreated topics
	NumPartitions pulumi.StringPtrInput `pulumi:"numPartitions"`
	// Log retention window in minutes for offsets topic.
	OffsetsRetentionMinutes pulumi.StringPtrInput `pulumi:"offsetsRetentionMinutes"`
	// The purge interval (in number of
	// requests) of the producer request purgatory(defaults to 1000).
	ProducerPurgatoryPurgeIntervalRequests pulumi.StringPtrInput `pulumi:"producerPurgatoryPurgeIntervalRequests"`
	// The number of bytes of messages to attempt to fetch
	// for each partition (defaults to 1048576). This is not an absolute maximum, if the first record
	// batch in the first non-empty partition of the fetch is larger than this value, the record batch
	// will still be returned to ensure that progress can be made.
	ReplicaFetchMaxBytes pulumi.StringPtrInput `pulumi:"replicaFetchMaxBytes"`
	// Maximum bytes expected for the entire fetch
	// response (defaults to 10485760). Records are fetched in batches, and if the first record batch
	// in the first non-empty partition of the fetch is larger than this value, the record batch will
	// still be returned to ensure that progress can be made. As such, this is not an absolute maximum.
	ReplicaFetchResponseMaxBytes pulumi.StringPtrInput `pulumi:"replicaFetchResponseMaxBytes"`
	// The maximum number of bytes in a socket request
	// (defaults to 104857600).
	SocketRequestMaxBytes pulumi.StringPtrInput `pulumi:"socketRequestMaxBytes"`
	// The interval at which
	// to remove transactions that have expired due to transactional.id.expiration.ms passing (defaults
	// to 3600000 (1 hour)).
	TransactionRemoveExpiredTransactionCleanupIntervalMs pulumi.StringPtrInput `pulumi:"transactionRemoveExpiredTransactionCleanupIntervalMs"`
	// The transaction topic segment bytes should
	// be kept relatively small in order to facilitate faster log compaction and cache loads (defaults
	// to 104857600 (100 mebibytes)).
	TransactionStateLogSegmentBytes pulumi.StringPtrInput `pulumi:"transactionStateLogSegmentBytes"`
}

func (GetKafkaKafkaUserConfigKafkaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaKafkaUserConfigKafka)(nil)).Elem()
}

func (i GetKafkaKafkaUserConfigKafkaArgs) ToGetKafkaKafkaUserConfigKafkaOutput() GetKafkaKafkaUserConfigKafkaOutput {
	return i.ToGetKafkaKafkaUserConfigKafkaOutputWithContext(context.Background())
}

func (i GetKafkaKafkaUserConfigKafkaArgs) ToGetKafkaKafkaUserConfigKafkaOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigKafkaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaKafkaUserConfigKafkaOutput)
}

func (i GetKafkaKafkaUserConfigKafkaArgs) ToGetKafkaKafkaUserConfigKafkaPtrOutput() GetKafkaKafkaUserConfigKafkaPtrOutput {
	return i.ToGetKafkaKafkaUserConfigKafkaPtrOutputWithContext(context.Background())
}

func (i GetKafkaKafkaUserConfigKafkaArgs) ToGetKafkaKafkaUserConfigKafkaPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigKafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaKafkaUserConfigKafkaOutput).ToGetKafkaKafkaUserConfigKafkaPtrOutputWithContext(ctx)
}

// GetKafkaKafkaUserConfigKafkaPtrInput is an input type that accepts GetKafkaKafkaUserConfigKafkaArgs, GetKafkaKafkaUserConfigKafkaPtr and GetKafkaKafkaUserConfigKafkaPtrOutput values.
// You can construct a concrete instance of `GetKafkaKafkaUserConfigKafkaPtrInput` via:
//
//          GetKafkaKafkaUserConfigKafkaArgs{...}
//
//  or:
//
//          nil
type GetKafkaKafkaUserConfigKafkaPtrInput interface {
	pulumi.Input

	ToGetKafkaKafkaUserConfigKafkaPtrOutput() GetKafkaKafkaUserConfigKafkaPtrOutput
	ToGetKafkaKafkaUserConfigKafkaPtrOutputWithContext(context.Context) GetKafkaKafkaUserConfigKafkaPtrOutput
}

type getKafkaKafkaUserConfigKafkaPtrType GetKafkaKafkaUserConfigKafkaArgs

func GetKafkaKafkaUserConfigKafkaPtr(v *GetKafkaKafkaUserConfigKafkaArgs) GetKafkaKafkaUserConfigKafkaPtrInput {
	return (*getKafkaKafkaUserConfigKafkaPtrType)(v)
}

func (*getKafkaKafkaUserConfigKafkaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaKafkaUserConfigKafka)(nil)).Elem()
}

func (i *getKafkaKafkaUserConfigKafkaPtrType) ToGetKafkaKafkaUserConfigKafkaPtrOutput() GetKafkaKafkaUserConfigKafkaPtrOutput {
	return i.ToGetKafkaKafkaUserConfigKafkaPtrOutputWithContext(context.Background())
}

func (i *getKafkaKafkaUserConfigKafkaPtrType) ToGetKafkaKafkaUserConfigKafkaPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigKafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaKafkaUserConfigKafkaPtrOutput)
}

type GetKafkaKafkaUserConfigKafkaOutput struct{ *pulumi.OutputState }

func (GetKafkaKafkaUserConfigKafkaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaKafkaUserConfigKafka)(nil)).Elem()
}

func (o GetKafkaKafkaUserConfigKafkaOutput) ToGetKafkaKafkaUserConfigKafkaOutput() GetKafkaKafkaUserConfigKafkaOutput {
	return o
}

func (o GetKafkaKafkaUserConfigKafkaOutput) ToGetKafkaKafkaUserConfigKafkaOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigKafkaOutput {
	return o
}

func (o GetKafkaKafkaUserConfigKafkaOutput) ToGetKafkaKafkaUserConfigKafkaPtrOutput() GetKafkaKafkaUserConfigKafkaPtrOutput {
	return o.ToGetKafkaKafkaUserConfigKafkaPtrOutputWithContext(context.Background())
}

func (o GetKafkaKafkaUserConfigKafkaOutput) ToGetKafkaKafkaUserConfigKafkaPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigKafkaPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *GetKafkaKafkaUserConfigKafka {
		return &v
	}).(GetKafkaKafkaUserConfigKafkaPtrOutput)
}

// Enable auto creation of topics
func (o GetKafkaKafkaUserConfigKafkaOutput) AutoCreateTopicsEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.AutoCreateTopicsEnable }).(pulumi.StringPtrOutput)
}

// Specify the final compression type for a given topic. This
// configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd').
// It additionally accepts 'uncompressed' which is equivalent to no compression; and 'producer'
// which means retain the original compression codec set by the producer.
func (o GetKafkaKafkaUserConfigKafkaOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.CompressionType }).(pulumi.StringPtrOutput)
}

// Idle connections timeout: the server socket processor
// threads close the connections that idle for longer than this.
func (o GetKafkaKafkaUserConfigKafkaOutput) ConnectionsMaxIdleMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.ConnectionsMaxIdleMs }).(pulumi.StringPtrOutput)
}

// Replication factor for autocreated topics
func (o GetKafkaKafkaUserConfigKafkaOutput) DefaultReplicationFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.DefaultReplicationFactor }).(pulumi.StringPtrOutput)
}

// The amount of time, in milliseconds, the group
// coordinator will wait for more consumers to join a new group before performing the first rebalance.
// A longer delay means potentially fewer rebalances, but increases the time until processing begins.
// The default value for this is 3 seconds. During development and testing it might be desirable to set
// this to 0 in order to not delay test execution time.
func (o GetKafkaKafkaUserConfigKafkaOutput) GroupInitialRebalanceDelayMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.GroupInitialRebalanceDelayMs }).(pulumi.StringPtrOutput)
}

// The maximum allowed session timeout for registered
// consumers. Longer timeouts give consumers more time to process messages in between heartbeats
// at the cost of a longer time to detect failures.
func (o GetKafkaKafkaUserConfigKafkaOutput) GroupMaxSessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.GroupMaxSessionTimeoutMs }).(pulumi.StringPtrOutput)
}

// The minimum allowed session timeout for registered
// consumers. Longer timeouts give consumers more time to process messages in between heartbeats
// at the cost of a longer time to detect failures.
func (o GetKafkaKafkaUserConfigKafkaOutput) GroupMinSessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.GroupMinSessionTimeoutMs }).(pulumi.StringPtrOutput)
}

func (o GetKafkaKafkaUserConfigKafkaOutput) LogCleanerDeleteRetentionMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.LogCleanerDeleteRetentionMs }).(pulumi.StringPtrOutput)
}

// The maximum amount of time message will
// remain uncompacted. Only applicable for logs that are being compacted
func (o GetKafkaKafkaUserConfigKafkaOutput) LogCleanerMaxCompactionLagMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.LogCleanerMaxCompactionLagMs }).(pulumi.StringPtrOutput)
}

// Controls log compactor frequency. Larger
// value means more frequent compactions but also more space wasted for logs. Consider setting
// log.cleaner.max.compaction.lag.ms to enforce compactions sooner, instead of setting a very
// high value for this option.
func (o GetKafkaKafkaUserConfigKafkaOutput) LogCleanerMinCleanableRatio() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.LogCleanerMinCleanableRatio }).(pulumi.StringPtrOutput)
}

// The minimum time a message will remain
// uncompacted in the log. Only applicable for logs that are being compacted.
func (o GetKafkaKafkaUserConfigKafkaOutput) LogCleanerMinCompactionLagMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.LogCleanerMinCompactionLagMs }).(pulumi.StringPtrOutput)
}

// The default cleanup policy for segments beyond the retention window.
func (o GetKafkaKafkaUserConfigKafkaOutput) LogCleanupPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.LogCleanupPolicy }).(pulumi.StringPtrOutput)
}

// The number of messages accumulated on a log partition
// before messages are flushed to disk.
func (o GetKafkaKafkaUserConfigKafkaOutput) LogFlushIntervalMessages() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.LogFlushIntervalMessages }).(pulumi.StringPtrOutput)
}

// The maximum time in ms that a message in any topic is kept
// in memory before flushed to disk. If not set, the value in log.flush.scheduler.interval.ms is used.
func (o GetKafkaKafkaUserConfigKafkaOutput) LogFlushIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.LogFlushIntervalMs }).(pulumi.StringPtrOutput)
}

// The interval with which Kafka adds an entry to the offset index.
func (o GetKafkaKafkaUserConfigKafkaOutput) LogIndexIntervalBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.LogIndexIntervalBytes }).(pulumi.StringPtrOutput)
}

// The maximum size in bytes of the offset index.
func (o GetKafkaKafkaUserConfigKafkaOutput) LogIndexSizeMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.LogIndexSizeMaxBytes }).(pulumi.StringPtrOutput)
}

// This configuration controls whether down-conversion
// of message formats is enabled to satisfy consume requests.
func (o GetKafkaKafkaUserConfigKafkaOutput) LogMessageDownconversionEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.LogMessageDownconversionEnable }).(pulumi.StringPtrOutput)
}

// The maximum difference allowed between
// the timestamp when a broker receives a message and the timestamp specified in the message
func (o GetKafkaKafkaUserConfigKafkaOutput) LogMessageTimestampDifferenceMaxMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.LogMessageTimestampDifferenceMaxMs }).(pulumi.StringPtrOutput)
}

// Define whether the timestamp in the message is
// message create time or log append time.
func (o GetKafkaKafkaUserConfigKafkaOutput) LogMessageTimestampType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.LogMessageTimestampType }).(pulumi.StringPtrOutput)
}

// Should pre allocate file when create new segment?
func (o GetKafkaKafkaUserConfigKafkaOutput) LogPreallocate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.LogPreallocate }).(pulumi.StringPtrOutput)
}

// The maximum size of the log before deleting messages
func (o GetKafkaKafkaUserConfigKafkaOutput) LogRetentionBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.LogRetentionBytes }).(pulumi.StringPtrOutput)
}

// The number of hours to keep a log file before deleting it.
func (o GetKafkaKafkaUserConfigKafkaOutput) LogRetentionHours() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.LogRetentionHours }).(pulumi.StringPtrOutput)
}

// The number of milliseconds to keep a log file before deleting it
// (in milliseconds), If not set, the value in log.retention.minutes is used. If set to -1, no
// time limit is applied.
func (o GetKafkaKafkaUserConfigKafkaOutput) LogRetentionMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.LogRetentionMs }).(pulumi.StringPtrOutput)
}

// The maximum jitter to subtract from logRollTimeMillis
// (in milliseconds). If not set, the value in log.roll.jitter.hours is used.
func (o GetKafkaKafkaUserConfigKafkaOutput) LogRollJitterMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.LogRollJitterMs }).(pulumi.StringPtrOutput)
}

// The maximum time before a new log segment is rolled out (in milliseconds).
func (o GetKafkaKafkaUserConfigKafkaOutput) LogRollMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.LogRollMs }).(pulumi.StringPtrOutput)
}

// The maximum size of a single log file
func (o GetKafkaKafkaUserConfigKafkaOutput) LogSegmentBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.LogSegmentBytes }).(pulumi.StringPtrOutput)
}

// The amount of time to wait before deleting a file
// from the filesystem.
func (o GetKafkaKafkaUserConfigKafkaOutput) LogSegmentDeleteDelayMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.LogSegmentDeleteDelayMs }).(pulumi.StringPtrOutput)
}

// The maximum number of connections allowed from each ip
// address (defaults to 2147483647).
func (o GetKafkaKafkaUserConfigKafkaOutput) MaxConnectionsPerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.MaxConnectionsPerIp }).(pulumi.StringPtrOutput)
}

// The maximum number of incremental fetch
// sessions that the broker will maintain.
func (o GetKafkaKafkaUserConfigKafkaOutput) MaxIncrementalFetchSessionCacheSlots() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.MaxIncrementalFetchSessionCacheSlots }).(pulumi.StringPtrOutput)
}

// The maximum size of message that the server can receive.
func (o GetKafkaKafkaUserConfigKafkaOutput) MessageMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.MessageMaxBytes }).(pulumi.StringPtrOutput)
}

// When a producer sets acks to 'all' (or '-1'),
// min.insync.replicas specifies the minimum number of replicas that must acknowledge a write for
// the write to be considered successful.
func (o GetKafkaKafkaUserConfigKafkaOutput) MinInsyncReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.MinInsyncReplicas }).(pulumi.StringPtrOutput)
}

// Number of partitions for autocreated topics
func (o GetKafkaKafkaUserConfigKafkaOutput) NumPartitions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.NumPartitions }).(pulumi.StringPtrOutput)
}

// Log retention window in minutes for offsets topic.
func (o GetKafkaKafkaUserConfigKafkaOutput) OffsetsRetentionMinutes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.OffsetsRetentionMinutes }).(pulumi.StringPtrOutput)
}

// The purge interval (in number of
// requests) of the producer request purgatory(defaults to 1000).
func (o GetKafkaKafkaUserConfigKafkaOutput) ProducerPurgatoryPurgeIntervalRequests() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.ProducerPurgatoryPurgeIntervalRequests }).(pulumi.StringPtrOutput)
}

// The number of bytes of messages to attempt to fetch
// for each partition (defaults to 1048576). This is not an absolute maximum, if the first record
// batch in the first non-empty partition of the fetch is larger than this value, the record batch
// will still be returned to ensure that progress can be made.
func (o GetKafkaKafkaUserConfigKafkaOutput) ReplicaFetchMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.ReplicaFetchMaxBytes }).(pulumi.StringPtrOutput)
}

// Maximum bytes expected for the entire fetch
// response (defaults to 10485760). Records are fetched in batches, and if the first record batch
// in the first non-empty partition of the fetch is larger than this value, the record batch will
// still be returned to ensure that progress can be made. As such, this is not an absolute maximum.
func (o GetKafkaKafkaUserConfigKafkaOutput) ReplicaFetchResponseMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.ReplicaFetchResponseMaxBytes }).(pulumi.StringPtrOutput)
}

// The maximum number of bytes in a socket request
// (defaults to 104857600).
func (o GetKafkaKafkaUserConfigKafkaOutput) SocketRequestMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.SocketRequestMaxBytes }).(pulumi.StringPtrOutput)
}

// The interval at which
// to remove transactions that have expired due to transactional.id.expiration.ms passing (defaults
// to 3600000 (1 hour)).
func (o GetKafkaKafkaUserConfigKafkaOutput) TransactionRemoveExpiredTransactionCleanupIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string {
		return v.TransactionRemoveExpiredTransactionCleanupIntervalMs
	}).(pulumi.StringPtrOutput)
}

// The transaction topic segment bytes should
// be kept relatively small in order to facilitate faster log compaction and cache loads (defaults
// to 104857600 (100 mebibytes)).
func (o GetKafkaKafkaUserConfigKafkaOutput) TransactionStateLogSegmentBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafka) *string { return v.TransactionStateLogSegmentBytes }).(pulumi.StringPtrOutput)
}

type GetKafkaKafkaUserConfigKafkaPtrOutput struct{ *pulumi.OutputState }

func (GetKafkaKafkaUserConfigKafkaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaKafkaUserConfigKafka)(nil)).Elem()
}

func (o GetKafkaKafkaUserConfigKafkaPtrOutput) ToGetKafkaKafkaUserConfigKafkaPtrOutput() GetKafkaKafkaUserConfigKafkaPtrOutput {
	return o
}

func (o GetKafkaKafkaUserConfigKafkaPtrOutput) ToGetKafkaKafkaUserConfigKafkaPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigKafkaPtrOutput {
	return o
}

func (o GetKafkaKafkaUserConfigKafkaPtrOutput) Elem() GetKafkaKafkaUserConfigKafkaOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) GetKafkaKafkaUserConfigKafka { return *v }).(GetKafkaKafkaUserConfigKafkaOutput)
}

// Enable auto creation of topics
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) AutoCreateTopicsEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.AutoCreateTopicsEnable
	}).(pulumi.StringPtrOutput)
}

// Specify the final compression type for a given topic. This
// configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd').
// It additionally accepts 'uncompressed' which is equivalent to no compression; and 'producer'
// which means retain the original compression codec set by the producer.
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.CompressionType
	}).(pulumi.StringPtrOutput)
}

// Idle connections timeout: the server socket processor
// threads close the connections that idle for longer than this.
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) ConnectionsMaxIdleMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionsMaxIdleMs
	}).(pulumi.StringPtrOutput)
}

// Replication factor for autocreated topics
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) DefaultReplicationFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.DefaultReplicationFactor
	}).(pulumi.StringPtrOutput)
}

// The amount of time, in milliseconds, the group
// coordinator will wait for more consumers to join a new group before performing the first rebalance.
// A longer delay means potentially fewer rebalances, but increases the time until processing begins.
// The default value for this is 3 seconds. During development and testing it might be desirable to set
// this to 0 in order to not delay test execution time.
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) GroupInitialRebalanceDelayMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.GroupInitialRebalanceDelayMs
	}).(pulumi.StringPtrOutput)
}

// The maximum allowed session timeout for registered
// consumers. Longer timeouts give consumers more time to process messages in between heartbeats
// at the cost of a longer time to detect failures.
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) GroupMaxSessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.GroupMaxSessionTimeoutMs
	}).(pulumi.StringPtrOutput)
}

// The minimum allowed session timeout for registered
// consumers. Longer timeouts give consumers more time to process messages in between heartbeats
// at the cost of a longer time to detect failures.
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) GroupMinSessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.GroupMinSessionTimeoutMs
	}).(pulumi.StringPtrOutput)
}

func (o GetKafkaKafkaUserConfigKafkaPtrOutput) LogCleanerDeleteRetentionMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogCleanerDeleteRetentionMs
	}).(pulumi.StringPtrOutput)
}

// The maximum amount of time message will
// remain uncompacted. Only applicable for logs that are being compacted
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) LogCleanerMaxCompactionLagMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogCleanerMaxCompactionLagMs
	}).(pulumi.StringPtrOutput)
}

// Controls log compactor frequency. Larger
// value means more frequent compactions but also more space wasted for logs. Consider setting
// log.cleaner.max.compaction.lag.ms to enforce compactions sooner, instead of setting a very
// high value for this option.
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) LogCleanerMinCleanableRatio() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogCleanerMinCleanableRatio
	}).(pulumi.StringPtrOutput)
}

// The minimum time a message will remain
// uncompacted in the log. Only applicable for logs that are being compacted.
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) LogCleanerMinCompactionLagMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogCleanerMinCompactionLagMs
	}).(pulumi.StringPtrOutput)
}

// The default cleanup policy for segments beyond the retention window.
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) LogCleanupPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogCleanupPolicy
	}).(pulumi.StringPtrOutput)
}

// The number of messages accumulated on a log partition
// before messages are flushed to disk.
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) LogFlushIntervalMessages() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogFlushIntervalMessages
	}).(pulumi.StringPtrOutput)
}

// The maximum time in ms that a message in any topic is kept
// in memory before flushed to disk. If not set, the value in log.flush.scheduler.interval.ms is used.
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) LogFlushIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogFlushIntervalMs
	}).(pulumi.StringPtrOutput)
}

// The interval with which Kafka adds an entry to the offset index.
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) LogIndexIntervalBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogIndexIntervalBytes
	}).(pulumi.StringPtrOutput)
}

// The maximum size in bytes of the offset index.
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) LogIndexSizeMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogIndexSizeMaxBytes
	}).(pulumi.StringPtrOutput)
}

// This configuration controls whether down-conversion
// of message formats is enabled to satisfy consume requests.
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) LogMessageDownconversionEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogMessageDownconversionEnable
	}).(pulumi.StringPtrOutput)
}

// The maximum difference allowed between
// the timestamp when a broker receives a message and the timestamp specified in the message
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) LogMessageTimestampDifferenceMaxMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogMessageTimestampDifferenceMaxMs
	}).(pulumi.StringPtrOutput)
}

// Define whether the timestamp in the message is
// message create time or log append time.
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) LogMessageTimestampType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogMessageTimestampType
	}).(pulumi.StringPtrOutput)
}

// Should pre allocate file when create new segment?
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) LogPreallocate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogPreallocate
	}).(pulumi.StringPtrOutput)
}

// The maximum size of the log before deleting messages
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) LogRetentionBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogRetentionBytes
	}).(pulumi.StringPtrOutput)
}

// The number of hours to keep a log file before deleting it.
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) LogRetentionHours() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogRetentionHours
	}).(pulumi.StringPtrOutput)
}

// The number of milliseconds to keep a log file before deleting it
// (in milliseconds), If not set, the value in log.retention.minutes is used. If set to -1, no
// time limit is applied.
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) LogRetentionMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogRetentionMs
	}).(pulumi.StringPtrOutput)
}

// The maximum jitter to subtract from logRollTimeMillis
// (in milliseconds). If not set, the value in log.roll.jitter.hours is used.
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) LogRollJitterMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogRollJitterMs
	}).(pulumi.StringPtrOutput)
}

// The maximum time before a new log segment is rolled out (in milliseconds).
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) LogRollMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogRollMs
	}).(pulumi.StringPtrOutput)
}

// The maximum size of a single log file
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) LogSegmentBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogSegmentBytes
	}).(pulumi.StringPtrOutput)
}

// The amount of time to wait before deleting a file
// from the filesystem.
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) LogSegmentDeleteDelayMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogSegmentDeleteDelayMs
	}).(pulumi.StringPtrOutput)
}

// The maximum number of connections allowed from each ip
// address (defaults to 2147483647).
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) MaxConnectionsPerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.MaxConnectionsPerIp
	}).(pulumi.StringPtrOutput)
}

// The maximum number of incremental fetch
// sessions that the broker will maintain.
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) MaxIncrementalFetchSessionCacheSlots() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.MaxIncrementalFetchSessionCacheSlots
	}).(pulumi.StringPtrOutput)
}

// The maximum size of message that the server can receive.
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) MessageMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.MessageMaxBytes
	}).(pulumi.StringPtrOutput)
}

// When a producer sets acks to 'all' (or '-1'),
// min.insync.replicas specifies the minimum number of replicas that must acknowledge a write for
// the write to be considered successful.
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) MinInsyncReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.MinInsyncReplicas
	}).(pulumi.StringPtrOutput)
}

// Number of partitions for autocreated topics
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) NumPartitions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.NumPartitions
	}).(pulumi.StringPtrOutput)
}

// Log retention window in minutes for offsets topic.
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) OffsetsRetentionMinutes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.OffsetsRetentionMinutes
	}).(pulumi.StringPtrOutput)
}

// The purge interval (in number of
// requests) of the producer request purgatory(defaults to 1000).
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) ProducerPurgatoryPurgeIntervalRequests() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.ProducerPurgatoryPurgeIntervalRequests
	}).(pulumi.StringPtrOutput)
}

// The number of bytes of messages to attempt to fetch
// for each partition (defaults to 1048576). This is not an absolute maximum, if the first record
// batch in the first non-empty partition of the fetch is larger than this value, the record batch
// will still be returned to ensure that progress can be made.
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) ReplicaFetchMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.ReplicaFetchMaxBytes
	}).(pulumi.StringPtrOutput)
}

// Maximum bytes expected for the entire fetch
// response (defaults to 10485760). Records are fetched in batches, and if the first record batch
// in the first non-empty partition of the fetch is larger than this value, the record batch will
// still be returned to ensure that progress can be made. As such, this is not an absolute maximum.
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) ReplicaFetchResponseMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.ReplicaFetchResponseMaxBytes
	}).(pulumi.StringPtrOutput)
}

// The maximum number of bytes in a socket request
// (defaults to 104857600).
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) SocketRequestMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.SocketRequestMaxBytes
	}).(pulumi.StringPtrOutput)
}

// The interval at which
// to remove transactions that have expired due to transactional.id.expiration.ms passing (defaults
// to 3600000 (1 hour)).
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) TransactionRemoveExpiredTransactionCleanupIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.TransactionRemoveExpiredTransactionCleanupIntervalMs
	}).(pulumi.StringPtrOutput)
}

// The transaction topic segment bytes should
// be kept relatively small in order to facilitate faster log compaction and cache loads (defaults
// to 104857600 (100 mebibytes)).
func (o GetKafkaKafkaUserConfigKafkaPtrOutput) TransactionStateLogSegmentBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.TransactionStateLogSegmentBytes
	}).(pulumi.StringPtrOutput)
}

type GetKafkaKafkaUserConfigKafkaAuthenticationMethods struct {
	// Enable certificate/SSL authentication
	Certificate *string `pulumi:"certificate"`
	// Enable SASL authentication
	Sasl *string `pulumi:"sasl"`
}

// GetKafkaKafkaUserConfigKafkaAuthenticationMethodsInput is an input type that accepts GetKafkaKafkaUserConfigKafkaAuthenticationMethodsArgs and GetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutput values.
// You can construct a concrete instance of `GetKafkaKafkaUserConfigKafkaAuthenticationMethodsInput` via:
//
//          GetKafkaKafkaUserConfigKafkaAuthenticationMethodsArgs{...}
type GetKafkaKafkaUserConfigKafkaAuthenticationMethodsInput interface {
	pulumi.Input

	ToGetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutput() GetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutput
	ToGetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutputWithContext(context.Context) GetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutput
}

type GetKafkaKafkaUserConfigKafkaAuthenticationMethodsArgs struct {
	// Enable certificate/SSL authentication
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// Enable SASL authentication
	Sasl pulumi.StringPtrInput `pulumi:"sasl"`
}

func (GetKafkaKafkaUserConfigKafkaAuthenticationMethodsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaKafkaUserConfigKafkaAuthenticationMethods)(nil)).Elem()
}

func (i GetKafkaKafkaUserConfigKafkaAuthenticationMethodsArgs) ToGetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutput() GetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutput {
	return i.ToGetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutputWithContext(context.Background())
}

func (i GetKafkaKafkaUserConfigKafkaAuthenticationMethodsArgs) ToGetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutput)
}

func (i GetKafkaKafkaUserConfigKafkaAuthenticationMethodsArgs) ToGetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput() GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return i.ToGetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(context.Background())
}

func (i GetKafkaKafkaUserConfigKafkaAuthenticationMethodsArgs) ToGetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutput).ToGetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(ctx)
}

// GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrInput is an input type that accepts GetKafkaKafkaUserConfigKafkaAuthenticationMethodsArgs, GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtr and GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput values.
// You can construct a concrete instance of `GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrInput` via:
//
//          GetKafkaKafkaUserConfigKafkaAuthenticationMethodsArgs{...}
//
//  or:
//
//          nil
type GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrInput interface {
	pulumi.Input

	ToGetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput() GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput
	ToGetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(context.Context) GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput
}

type getKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrType GetKafkaKafkaUserConfigKafkaAuthenticationMethodsArgs

func GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtr(v *GetKafkaKafkaUserConfigKafkaAuthenticationMethodsArgs) GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrInput {
	return (*getKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrType)(v)
}

func (*getKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaKafkaUserConfigKafkaAuthenticationMethods)(nil)).Elem()
}

func (i *getKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrType) ToGetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput() GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return i.ToGetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(context.Background())
}

func (i *getKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrType) ToGetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput)
}

type GetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutput struct{ *pulumi.OutputState }

func (GetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaKafkaUserConfigKafkaAuthenticationMethods)(nil)).Elem()
}

func (o GetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutput) ToGetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutput() GetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutput {
	return o
}

func (o GetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutput) ToGetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutput {
	return o
}

func (o GetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutput) ToGetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput() GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return o.ToGetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(context.Background())
}

func (o GetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutput) ToGetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafkaAuthenticationMethods) *GetKafkaKafkaUserConfigKafkaAuthenticationMethods {
		return &v
	}).(GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput)
}

// Enable certificate/SSL authentication
func (o GetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafkaAuthenticationMethods) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// Enable SASL authentication
func (o GetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutput) Sasl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafkaAuthenticationMethods) *string { return v.Sasl }).(pulumi.StringPtrOutput)
}

type GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput struct{ *pulumi.OutputState }

func (GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaKafkaUserConfigKafkaAuthenticationMethods)(nil)).Elem()
}

func (o GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput) ToGetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput() GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return o
}

func (o GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput) ToGetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return o
}

func (o GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput) Elem() GetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafkaAuthenticationMethods) GetKafkaKafkaUserConfigKafkaAuthenticationMethods {
		return *v
	}).(GetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutput)
}

// Enable certificate/SSL authentication
func (o GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafkaAuthenticationMethods) *string {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(pulumi.StringPtrOutput)
}

// Enable SASL authentication
func (o GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput) Sasl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafkaAuthenticationMethods) *string {
		if v == nil {
			return nil
		}
		return v.Sasl
	}).(pulumi.StringPtrOutput)
}

type GetKafkaKafkaUserConfigKafkaConnectConfig struct {
	// Defines what client configurations can
	// be overridden by the connector. Default is None
	ConnectorClientConfigOverridePolicy *string `pulumi:"connectorClientConfigOverridePolicy"`
	// What to do when there is no initial offset in Kafka or
	// if the current offset does not exist any more on the server. Default is earliest.
	ConsumerAutoOffsetReset *string `pulumi:"consumerAutoOffsetReset"`
	// Records are fetched in batches by the consumer, and
	// if the first record batch in the first non-empty partition of the fetch is larger than this value,
	// the record batch will still be returned to ensure that the consumer can make progress. As such,
	// this is not a absolute maximum.
	ConsumerFetchMaxBytes *string `pulumi:"consumerFetchMaxBytes"`
	// Transaction read isolation level. readUncommitted is
	// the default, but readCommitted can be used if consume-exactly-once behavior is desired.
	ConsumerIsolationLevel *string `pulumi:"consumerIsolationLevel"`
	// Records are fetched in batches by the consumer.If
	// the first record batch in the first non-empty partition of the fetch is larger than this limit,
	// the batch will still be returned to ensure that the consumer can make progress.
	ConsumerMaxPartitionFetchBytes *string `pulumi:"consumerMaxPartitionFetchBytes"`
	// The maximum delay in milliseconds between invocations
	// of poll() when using consumer group management (defaults to 300000).
	ConsumerMaxPollIntervalMs *string `pulumi:"consumerMaxPollIntervalMs"`
	// The maximum number of records returned in a single call
	// to poll() (defaults to 500).
	ConsumerMaxPollRecords *string `pulumi:"consumerMaxPollRecords"`
	// The interval at which to try committing offsets for
	// tasks (defaults to 60000).
	OffsetFlushIntervalMs *string `pulumi:"offsetFlushIntervalMs"`
	// Maximum number of milliseconds to wait for records to
	// flush and partition offset data to be committed to offset storage before cancelling the process
	// and restoring the offset data to be committed in a future attempt (defaults to 5000).
	OffsetFlushTimeoutMs *string `pulumi:"offsetFlushTimeoutMs"`
	// This setting will limit the number of record batches
	// the producer will send in a single request to avoid sending huge requests.
	ProducerMaxRequestSize *string `pulumi:"producerMaxRequestSize"`
	// The timeout in milliseconds used to detect failures when
	// using Kafka’s group management facilities (defaults to 10000).
	SessionTimeoutMs *string `pulumi:"sessionTimeoutMs"`
}

// GetKafkaKafkaUserConfigKafkaConnectConfigInput is an input type that accepts GetKafkaKafkaUserConfigKafkaConnectConfigArgs and GetKafkaKafkaUserConfigKafkaConnectConfigOutput values.
// You can construct a concrete instance of `GetKafkaKafkaUserConfigKafkaConnectConfigInput` via:
//
//          GetKafkaKafkaUserConfigKafkaConnectConfigArgs{...}
type GetKafkaKafkaUserConfigKafkaConnectConfigInput interface {
	pulumi.Input

	ToGetKafkaKafkaUserConfigKafkaConnectConfigOutput() GetKafkaKafkaUserConfigKafkaConnectConfigOutput
	ToGetKafkaKafkaUserConfigKafkaConnectConfigOutputWithContext(context.Context) GetKafkaKafkaUserConfigKafkaConnectConfigOutput
}

type GetKafkaKafkaUserConfigKafkaConnectConfigArgs struct {
	// Defines what client configurations can
	// be overridden by the connector. Default is None
	ConnectorClientConfigOverridePolicy pulumi.StringPtrInput `pulumi:"connectorClientConfigOverridePolicy"`
	// What to do when there is no initial offset in Kafka or
	// if the current offset does not exist any more on the server. Default is earliest.
	ConsumerAutoOffsetReset pulumi.StringPtrInput `pulumi:"consumerAutoOffsetReset"`
	// Records are fetched in batches by the consumer, and
	// if the first record batch in the first non-empty partition of the fetch is larger than this value,
	// the record batch will still be returned to ensure that the consumer can make progress. As such,
	// this is not a absolute maximum.
	ConsumerFetchMaxBytes pulumi.StringPtrInput `pulumi:"consumerFetchMaxBytes"`
	// Transaction read isolation level. readUncommitted is
	// the default, but readCommitted can be used if consume-exactly-once behavior is desired.
	ConsumerIsolationLevel pulumi.StringPtrInput `pulumi:"consumerIsolationLevel"`
	// Records are fetched in batches by the consumer.If
	// the first record batch in the first non-empty partition of the fetch is larger than this limit,
	// the batch will still be returned to ensure that the consumer can make progress.
	ConsumerMaxPartitionFetchBytes pulumi.StringPtrInput `pulumi:"consumerMaxPartitionFetchBytes"`
	// The maximum delay in milliseconds between invocations
	// of poll() when using consumer group management (defaults to 300000).
	ConsumerMaxPollIntervalMs pulumi.StringPtrInput `pulumi:"consumerMaxPollIntervalMs"`
	// The maximum number of records returned in a single call
	// to poll() (defaults to 500).
	ConsumerMaxPollRecords pulumi.StringPtrInput `pulumi:"consumerMaxPollRecords"`
	// The interval at which to try committing offsets for
	// tasks (defaults to 60000).
	OffsetFlushIntervalMs pulumi.StringPtrInput `pulumi:"offsetFlushIntervalMs"`
	// Maximum number of milliseconds to wait for records to
	// flush and partition offset data to be committed to offset storage before cancelling the process
	// and restoring the offset data to be committed in a future attempt (defaults to 5000).
	OffsetFlushTimeoutMs pulumi.StringPtrInput `pulumi:"offsetFlushTimeoutMs"`
	// This setting will limit the number of record batches
	// the producer will send in a single request to avoid sending huge requests.
	ProducerMaxRequestSize pulumi.StringPtrInput `pulumi:"producerMaxRequestSize"`
	// The timeout in milliseconds used to detect failures when
	// using Kafka’s group management facilities (defaults to 10000).
	SessionTimeoutMs pulumi.StringPtrInput `pulumi:"sessionTimeoutMs"`
}

func (GetKafkaKafkaUserConfigKafkaConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaKafkaUserConfigKafkaConnectConfig)(nil)).Elem()
}

func (i GetKafkaKafkaUserConfigKafkaConnectConfigArgs) ToGetKafkaKafkaUserConfigKafkaConnectConfigOutput() GetKafkaKafkaUserConfigKafkaConnectConfigOutput {
	return i.ToGetKafkaKafkaUserConfigKafkaConnectConfigOutputWithContext(context.Background())
}

func (i GetKafkaKafkaUserConfigKafkaConnectConfigArgs) ToGetKafkaKafkaUserConfigKafkaConnectConfigOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigKafkaConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaKafkaUserConfigKafkaConnectConfigOutput)
}

func (i GetKafkaKafkaUserConfigKafkaConnectConfigArgs) ToGetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput() GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput {
	return i.ToGetKafkaKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(context.Background())
}

func (i GetKafkaKafkaUserConfigKafkaConnectConfigArgs) ToGetKafkaKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaKafkaUserConfigKafkaConnectConfigOutput).ToGetKafkaKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(ctx)
}

// GetKafkaKafkaUserConfigKafkaConnectConfigPtrInput is an input type that accepts GetKafkaKafkaUserConfigKafkaConnectConfigArgs, GetKafkaKafkaUserConfigKafkaConnectConfigPtr and GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput values.
// You can construct a concrete instance of `GetKafkaKafkaUserConfigKafkaConnectConfigPtrInput` via:
//
//          GetKafkaKafkaUserConfigKafkaConnectConfigArgs{...}
//
//  or:
//
//          nil
type GetKafkaKafkaUserConfigKafkaConnectConfigPtrInput interface {
	pulumi.Input

	ToGetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput() GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput
	ToGetKafkaKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(context.Context) GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput
}

type getKafkaKafkaUserConfigKafkaConnectConfigPtrType GetKafkaKafkaUserConfigKafkaConnectConfigArgs

func GetKafkaKafkaUserConfigKafkaConnectConfigPtr(v *GetKafkaKafkaUserConfigKafkaConnectConfigArgs) GetKafkaKafkaUserConfigKafkaConnectConfigPtrInput {
	return (*getKafkaKafkaUserConfigKafkaConnectConfigPtrType)(v)
}

func (*getKafkaKafkaUserConfigKafkaConnectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaKafkaUserConfigKafkaConnectConfig)(nil)).Elem()
}

func (i *getKafkaKafkaUserConfigKafkaConnectConfigPtrType) ToGetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput() GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput {
	return i.ToGetKafkaKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(context.Background())
}

func (i *getKafkaKafkaUserConfigKafkaConnectConfigPtrType) ToGetKafkaKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput)
}

type GetKafkaKafkaUserConfigKafkaConnectConfigOutput struct{ *pulumi.OutputState }

func (GetKafkaKafkaUserConfigKafkaConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaKafkaUserConfigKafkaConnectConfig)(nil)).Elem()
}

func (o GetKafkaKafkaUserConfigKafkaConnectConfigOutput) ToGetKafkaKafkaUserConfigKafkaConnectConfigOutput() GetKafkaKafkaUserConfigKafkaConnectConfigOutput {
	return o
}

func (o GetKafkaKafkaUserConfigKafkaConnectConfigOutput) ToGetKafkaKafkaUserConfigKafkaConnectConfigOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigKafkaConnectConfigOutput {
	return o
}

func (o GetKafkaKafkaUserConfigKafkaConnectConfigOutput) ToGetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput() GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput {
	return o.ToGetKafkaKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(context.Background())
}

func (o GetKafkaKafkaUserConfigKafkaConnectConfigOutput) ToGetKafkaKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafkaConnectConfig) *GetKafkaKafkaUserConfigKafkaConnectConfig {
		return &v
	}).(GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput)
}

// Defines what client configurations can
// be overridden by the connector. Default is None
func (o GetKafkaKafkaUserConfigKafkaConnectConfigOutput) ConnectorClientConfigOverridePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafkaConnectConfig) *string {
		return v.ConnectorClientConfigOverridePolicy
	}).(pulumi.StringPtrOutput)
}

// What to do when there is no initial offset in Kafka or
// if the current offset does not exist any more on the server. Default is earliest.
func (o GetKafkaKafkaUserConfigKafkaConnectConfigOutput) ConsumerAutoOffsetReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafkaConnectConfig) *string { return v.ConsumerAutoOffsetReset }).(pulumi.StringPtrOutput)
}

// Records are fetched in batches by the consumer, and
// if the first record batch in the first non-empty partition of the fetch is larger than this value,
// the record batch will still be returned to ensure that the consumer can make progress. As such,
// this is not a absolute maximum.
func (o GetKafkaKafkaUserConfigKafkaConnectConfigOutput) ConsumerFetchMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafkaConnectConfig) *string { return v.ConsumerFetchMaxBytes }).(pulumi.StringPtrOutput)
}

// Transaction read isolation level. readUncommitted is
// the default, but readCommitted can be used if consume-exactly-once behavior is desired.
func (o GetKafkaKafkaUserConfigKafkaConnectConfigOutput) ConsumerIsolationLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafkaConnectConfig) *string { return v.ConsumerIsolationLevel }).(pulumi.StringPtrOutput)
}

// Records are fetched in batches by the consumer.If
// the first record batch in the first non-empty partition of the fetch is larger than this limit,
// the batch will still be returned to ensure that the consumer can make progress.
func (o GetKafkaKafkaUserConfigKafkaConnectConfigOutput) ConsumerMaxPartitionFetchBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafkaConnectConfig) *string { return v.ConsumerMaxPartitionFetchBytes }).(pulumi.StringPtrOutput)
}

// The maximum delay in milliseconds between invocations
// of poll() when using consumer group management (defaults to 300000).
func (o GetKafkaKafkaUserConfigKafkaConnectConfigOutput) ConsumerMaxPollIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafkaConnectConfig) *string { return v.ConsumerMaxPollIntervalMs }).(pulumi.StringPtrOutput)
}

// The maximum number of records returned in a single call
// to poll() (defaults to 500).
func (o GetKafkaKafkaUserConfigKafkaConnectConfigOutput) ConsumerMaxPollRecords() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafkaConnectConfig) *string { return v.ConsumerMaxPollRecords }).(pulumi.StringPtrOutput)
}

// The interval at which to try committing offsets for
// tasks (defaults to 60000).
func (o GetKafkaKafkaUserConfigKafkaConnectConfigOutput) OffsetFlushIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafkaConnectConfig) *string { return v.OffsetFlushIntervalMs }).(pulumi.StringPtrOutput)
}

// Maximum number of milliseconds to wait for records to
// flush and partition offset data to be committed to offset storage before cancelling the process
// and restoring the offset data to be committed in a future attempt (defaults to 5000).
func (o GetKafkaKafkaUserConfigKafkaConnectConfigOutput) OffsetFlushTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafkaConnectConfig) *string { return v.OffsetFlushTimeoutMs }).(pulumi.StringPtrOutput)
}

// This setting will limit the number of record batches
// the producer will send in a single request to avoid sending huge requests.
func (o GetKafkaKafkaUserConfigKafkaConnectConfigOutput) ProducerMaxRequestSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafkaConnectConfig) *string { return v.ProducerMaxRequestSize }).(pulumi.StringPtrOutput)
}

// The timeout in milliseconds used to detect failures when
// using Kafka’s group management facilities (defaults to 10000).
func (o GetKafkaKafkaUserConfigKafkaConnectConfigOutput) SessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafkaConnectConfig) *string { return v.SessionTimeoutMs }).(pulumi.StringPtrOutput)
}

type GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaKafkaUserConfigKafkaConnectConfig)(nil)).Elem()
}

func (o GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput) ToGetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput() GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput {
	return o
}

func (o GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput) ToGetKafkaKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput {
	return o
}

func (o GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput) Elem() GetKafkaKafkaUserConfigKafkaConnectConfigOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafkaConnectConfig) GetKafkaKafkaUserConfigKafkaConnectConfig {
		return *v
	}).(GetKafkaKafkaUserConfigKafkaConnectConfigOutput)
}

// Defines what client configurations can
// be overridden by the connector. Default is None
func (o GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput) ConnectorClientConfigOverridePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorClientConfigOverridePolicy
	}).(pulumi.StringPtrOutput)
}

// What to do when there is no initial offset in Kafka or
// if the current offset does not exist any more on the server. Default is earliest.
func (o GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput) ConsumerAutoOffsetReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerAutoOffsetReset
	}).(pulumi.StringPtrOutput)
}

// Records are fetched in batches by the consumer, and
// if the first record batch in the first non-empty partition of the fetch is larger than this value,
// the record batch will still be returned to ensure that the consumer can make progress. As such,
// this is not a absolute maximum.
func (o GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput) ConsumerFetchMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerFetchMaxBytes
	}).(pulumi.StringPtrOutput)
}

// Transaction read isolation level. readUncommitted is
// the default, but readCommitted can be used if consume-exactly-once behavior is desired.
func (o GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput) ConsumerIsolationLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerIsolationLevel
	}).(pulumi.StringPtrOutput)
}

// Records are fetched in batches by the consumer.If
// the first record batch in the first non-empty partition of the fetch is larger than this limit,
// the batch will still be returned to ensure that the consumer can make progress.
func (o GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput) ConsumerMaxPartitionFetchBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerMaxPartitionFetchBytes
	}).(pulumi.StringPtrOutput)
}

// The maximum delay in milliseconds between invocations
// of poll() when using consumer group management (defaults to 300000).
func (o GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput) ConsumerMaxPollIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerMaxPollIntervalMs
	}).(pulumi.StringPtrOutput)
}

// The maximum number of records returned in a single call
// to poll() (defaults to 500).
func (o GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput) ConsumerMaxPollRecords() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerMaxPollRecords
	}).(pulumi.StringPtrOutput)
}

// The interval at which to try committing offsets for
// tasks (defaults to 60000).
func (o GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput) OffsetFlushIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.OffsetFlushIntervalMs
	}).(pulumi.StringPtrOutput)
}

// Maximum number of milliseconds to wait for records to
// flush and partition offset data to be committed to offset storage before cancelling the process
// and restoring the offset data to be committed in a future attempt (defaults to 5000).
func (o GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput) OffsetFlushTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.OffsetFlushTimeoutMs
	}).(pulumi.StringPtrOutput)
}

// This setting will limit the number of record batches
// the producer will send in a single request to avoid sending huge requests.
func (o GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput) ProducerMaxRequestSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProducerMaxRequestSize
	}).(pulumi.StringPtrOutput)
}

// The timeout in milliseconds used to detect failures when
// using Kafka’s group management facilities (defaults to 10000).
func (o GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput) SessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.SessionTimeoutMs
	}).(pulumi.StringPtrOutput)
}

type GetKafkaKafkaUserConfigKafkaRestConfig struct {
	// If true the consumer's offset will be periodically
	// committed to Kafka in the background
	ConsumerEnableAutoCommit *string `pulumi:"consumerEnableAutoCommit"`
	// Maximum number of bytes in unencoded message keys and
	// values by a single request
	ConsumerRequestMaxBytes *string `pulumi:"consumerRequestMaxBytes"`
	// The maximum total time to wait for messages for a
	// request if the maximum number of messages has not yet been reached
	ConsumerRequestTimeoutMs *string `pulumi:"consumerRequestTimeoutMs"`
	// The number of acknowledgments the producer requires the leader to
	// have received before considering a request complete. If set to 'all' or '-1', the leader will wait
	// for the full set of in-sync replicas to acknowledge the record.
	ProducerAcks *string `pulumi:"producerAcks"`
	// Wait for up to the given delay to allow batching records together
	ProducerLingerMs *string `pulumi:"producerLingerMs"`
	// Maximum number of SimpleConsumers that can be
	// instantiated per broker.
	SimpleconsumerPoolSizeMax *string `pulumi:"simpleconsumerPoolSizeMax"`
}

// GetKafkaKafkaUserConfigKafkaRestConfigInput is an input type that accepts GetKafkaKafkaUserConfigKafkaRestConfigArgs and GetKafkaKafkaUserConfigKafkaRestConfigOutput values.
// You can construct a concrete instance of `GetKafkaKafkaUserConfigKafkaRestConfigInput` via:
//
//          GetKafkaKafkaUserConfigKafkaRestConfigArgs{...}
type GetKafkaKafkaUserConfigKafkaRestConfigInput interface {
	pulumi.Input

	ToGetKafkaKafkaUserConfigKafkaRestConfigOutput() GetKafkaKafkaUserConfigKafkaRestConfigOutput
	ToGetKafkaKafkaUserConfigKafkaRestConfigOutputWithContext(context.Context) GetKafkaKafkaUserConfigKafkaRestConfigOutput
}

type GetKafkaKafkaUserConfigKafkaRestConfigArgs struct {
	// If true the consumer's offset will be periodically
	// committed to Kafka in the background
	ConsumerEnableAutoCommit pulumi.StringPtrInput `pulumi:"consumerEnableAutoCommit"`
	// Maximum number of bytes in unencoded message keys and
	// values by a single request
	ConsumerRequestMaxBytes pulumi.StringPtrInput `pulumi:"consumerRequestMaxBytes"`
	// The maximum total time to wait for messages for a
	// request if the maximum number of messages has not yet been reached
	ConsumerRequestTimeoutMs pulumi.StringPtrInput `pulumi:"consumerRequestTimeoutMs"`
	// The number of acknowledgments the producer requires the leader to
	// have received before considering a request complete. If set to 'all' or '-1', the leader will wait
	// for the full set of in-sync replicas to acknowledge the record.
	ProducerAcks pulumi.StringPtrInput `pulumi:"producerAcks"`
	// Wait for up to the given delay to allow batching records together
	ProducerLingerMs pulumi.StringPtrInput `pulumi:"producerLingerMs"`
	// Maximum number of SimpleConsumers that can be
	// instantiated per broker.
	SimpleconsumerPoolSizeMax pulumi.StringPtrInput `pulumi:"simpleconsumerPoolSizeMax"`
}

func (GetKafkaKafkaUserConfigKafkaRestConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaKafkaUserConfigKafkaRestConfig)(nil)).Elem()
}

func (i GetKafkaKafkaUserConfigKafkaRestConfigArgs) ToGetKafkaKafkaUserConfigKafkaRestConfigOutput() GetKafkaKafkaUserConfigKafkaRestConfigOutput {
	return i.ToGetKafkaKafkaUserConfigKafkaRestConfigOutputWithContext(context.Background())
}

func (i GetKafkaKafkaUserConfigKafkaRestConfigArgs) ToGetKafkaKafkaUserConfigKafkaRestConfigOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigKafkaRestConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaKafkaUserConfigKafkaRestConfigOutput)
}

func (i GetKafkaKafkaUserConfigKafkaRestConfigArgs) ToGetKafkaKafkaUserConfigKafkaRestConfigPtrOutput() GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput {
	return i.ToGetKafkaKafkaUserConfigKafkaRestConfigPtrOutputWithContext(context.Background())
}

func (i GetKafkaKafkaUserConfigKafkaRestConfigArgs) ToGetKafkaKafkaUserConfigKafkaRestConfigPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaKafkaUserConfigKafkaRestConfigOutput).ToGetKafkaKafkaUserConfigKafkaRestConfigPtrOutputWithContext(ctx)
}

// GetKafkaKafkaUserConfigKafkaRestConfigPtrInput is an input type that accepts GetKafkaKafkaUserConfigKafkaRestConfigArgs, GetKafkaKafkaUserConfigKafkaRestConfigPtr and GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput values.
// You can construct a concrete instance of `GetKafkaKafkaUserConfigKafkaRestConfigPtrInput` via:
//
//          GetKafkaKafkaUserConfigKafkaRestConfigArgs{...}
//
//  or:
//
//          nil
type GetKafkaKafkaUserConfigKafkaRestConfigPtrInput interface {
	pulumi.Input

	ToGetKafkaKafkaUserConfigKafkaRestConfigPtrOutput() GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput
	ToGetKafkaKafkaUserConfigKafkaRestConfigPtrOutputWithContext(context.Context) GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput
}

type getKafkaKafkaUserConfigKafkaRestConfigPtrType GetKafkaKafkaUserConfigKafkaRestConfigArgs

func GetKafkaKafkaUserConfigKafkaRestConfigPtr(v *GetKafkaKafkaUserConfigKafkaRestConfigArgs) GetKafkaKafkaUserConfigKafkaRestConfigPtrInput {
	return (*getKafkaKafkaUserConfigKafkaRestConfigPtrType)(v)
}

func (*getKafkaKafkaUserConfigKafkaRestConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaKafkaUserConfigKafkaRestConfig)(nil)).Elem()
}

func (i *getKafkaKafkaUserConfigKafkaRestConfigPtrType) ToGetKafkaKafkaUserConfigKafkaRestConfigPtrOutput() GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput {
	return i.ToGetKafkaKafkaUserConfigKafkaRestConfigPtrOutputWithContext(context.Background())
}

func (i *getKafkaKafkaUserConfigKafkaRestConfigPtrType) ToGetKafkaKafkaUserConfigKafkaRestConfigPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput)
}

type GetKafkaKafkaUserConfigKafkaRestConfigOutput struct{ *pulumi.OutputState }

func (GetKafkaKafkaUserConfigKafkaRestConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaKafkaUserConfigKafkaRestConfig)(nil)).Elem()
}

func (o GetKafkaKafkaUserConfigKafkaRestConfigOutput) ToGetKafkaKafkaUserConfigKafkaRestConfigOutput() GetKafkaKafkaUserConfigKafkaRestConfigOutput {
	return o
}

func (o GetKafkaKafkaUserConfigKafkaRestConfigOutput) ToGetKafkaKafkaUserConfigKafkaRestConfigOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigKafkaRestConfigOutput {
	return o
}

func (o GetKafkaKafkaUserConfigKafkaRestConfigOutput) ToGetKafkaKafkaUserConfigKafkaRestConfigPtrOutput() GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput {
	return o.ToGetKafkaKafkaUserConfigKafkaRestConfigPtrOutputWithContext(context.Background())
}

func (o GetKafkaKafkaUserConfigKafkaRestConfigOutput) ToGetKafkaKafkaUserConfigKafkaRestConfigPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafkaRestConfig) *GetKafkaKafkaUserConfigKafkaRestConfig {
		return &v
	}).(GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput)
}

// If true the consumer's offset will be periodically
// committed to Kafka in the background
func (o GetKafkaKafkaUserConfigKafkaRestConfigOutput) ConsumerEnableAutoCommit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafkaRestConfig) *string { return v.ConsumerEnableAutoCommit }).(pulumi.StringPtrOutput)
}

// Maximum number of bytes in unencoded message keys and
// values by a single request
func (o GetKafkaKafkaUserConfigKafkaRestConfigOutput) ConsumerRequestMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafkaRestConfig) *string { return v.ConsumerRequestMaxBytes }).(pulumi.StringPtrOutput)
}

// The maximum total time to wait for messages for a
// request if the maximum number of messages has not yet been reached
func (o GetKafkaKafkaUserConfigKafkaRestConfigOutput) ConsumerRequestTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafkaRestConfig) *string { return v.ConsumerRequestTimeoutMs }).(pulumi.StringPtrOutput)
}

// The number of acknowledgments the producer requires the leader to
// have received before considering a request complete. If set to 'all' or '-1', the leader will wait
// for the full set of in-sync replicas to acknowledge the record.
func (o GetKafkaKafkaUserConfigKafkaRestConfigOutput) ProducerAcks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafkaRestConfig) *string { return v.ProducerAcks }).(pulumi.StringPtrOutput)
}

// Wait for up to the given delay to allow batching records together
func (o GetKafkaKafkaUserConfigKafkaRestConfigOutput) ProducerLingerMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafkaRestConfig) *string { return v.ProducerLingerMs }).(pulumi.StringPtrOutput)
}

// Maximum number of SimpleConsumers that can be
// instantiated per broker.
func (o GetKafkaKafkaUserConfigKafkaRestConfigOutput) SimpleconsumerPoolSizeMax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigKafkaRestConfig) *string { return v.SimpleconsumerPoolSizeMax }).(pulumi.StringPtrOutput)
}

type GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput struct{ *pulumi.OutputState }

func (GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaKafkaUserConfigKafkaRestConfig)(nil)).Elem()
}

func (o GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput) ToGetKafkaKafkaUserConfigKafkaRestConfigPtrOutput() GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput {
	return o
}

func (o GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput) ToGetKafkaKafkaUserConfigKafkaRestConfigPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput {
	return o
}

func (o GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput) Elem() GetKafkaKafkaUserConfigKafkaRestConfigOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafkaRestConfig) GetKafkaKafkaUserConfigKafkaRestConfig { return *v }).(GetKafkaKafkaUserConfigKafkaRestConfigOutput)
}

// If true the consumer's offset will be periodically
// committed to Kafka in the background
func (o GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput) ConsumerEnableAutoCommit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafkaRestConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerEnableAutoCommit
	}).(pulumi.StringPtrOutput)
}

// Maximum number of bytes in unencoded message keys and
// values by a single request
func (o GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput) ConsumerRequestMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafkaRestConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerRequestMaxBytes
	}).(pulumi.StringPtrOutput)
}

// The maximum total time to wait for messages for a
// request if the maximum number of messages has not yet been reached
func (o GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput) ConsumerRequestTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafkaRestConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerRequestTimeoutMs
	}).(pulumi.StringPtrOutput)
}

// The number of acknowledgments the producer requires the leader to
// have received before considering a request complete. If set to 'all' or '-1', the leader will wait
// for the full set of in-sync replicas to acknowledge the record.
func (o GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput) ProducerAcks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafkaRestConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProducerAcks
	}).(pulumi.StringPtrOutput)
}

// Wait for up to the given delay to allow batching records together
func (o GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput) ProducerLingerMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafkaRestConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProducerLingerMs
	}).(pulumi.StringPtrOutput)
}

// Maximum number of SimpleConsumers that can be
// instantiated per broker.
func (o GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput) SimpleconsumerPoolSizeMax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigKafkaRestConfig) *string {
		if v == nil {
			return nil
		}
		return v.SimpleconsumerPoolSizeMax
	}).(pulumi.StringPtrOutput)
}

type GetKafkaKafkaUserConfigPrivateAccess struct {
	// Allow clients to connect to prometheus from the public internet for
	// service nodes that are in a project VPC or another type of private network
	Prometheus *string `pulumi:"prometheus"`
}

// GetKafkaKafkaUserConfigPrivateAccessInput is an input type that accepts GetKafkaKafkaUserConfigPrivateAccessArgs and GetKafkaKafkaUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `GetKafkaKafkaUserConfigPrivateAccessInput` via:
//
//          GetKafkaKafkaUserConfigPrivateAccessArgs{...}
type GetKafkaKafkaUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToGetKafkaKafkaUserConfigPrivateAccessOutput() GetKafkaKafkaUserConfigPrivateAccessOutput
	ToGetKafkaKafkaUserConfigPrivateAccessOutputWithContext(context.Context) GetKafkaKafkaUserConfigPrivateAccessOutput
}

type GetKafkaKafkaUserConfigPrivateAccessArgs struct {
	// Allow clients to connect to prometheus from the public internet for
	// service nodes that are in a project VPC or another type of private network
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (GetKafkaKafkaUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaKafkaUserConfigPrivateAccess)(nil)).Elem()
}

func (i GetKafkaKafkaUserConfigPrivateAccessArgs) ToGetKafkaKafkaUserConfigPrivateAccessOutput() GetKafkaKafkaUserConfigPrivateAccessOutput {
	return i.ToGetKafkaKafkaUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i GetKafkaKafkaUserConfigPrivateAccessArgs) ToGetKafkaKafkaUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaKafkaUserConfigPrivateAccessOutput)
}

func (i GetKafkaKafkaUserConfigPrivateAccessArgs) ToGetKafkaKafkaUserConfigPrivateAccessPtrOutput() GetKafkaKafkaUserConfigPrivateAccessPtrOutput {
	return i.ToGetKafkaKafkaUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i GetKafkaKafkaUserConfigPrivateAccessArgs) ToGetKafkaKafkaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaKafkaUserConfigPrivateAccessOutput).ToGetKafkaKafkaUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// GetKafkaKafkaUserConfigPrivateAccessPtrInput is an input type that accepts GetKafkaKafkaUserConfigPrivateAccessArgs, GetKafkaKafkaUserConfigPrivateAccessPtr and GetKafkaKafkaUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `GetKafkaKafkaUserConfigPrivateAccessPtrInput` via:
//
//          GetKafkaKafkaUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type GetKafkaKafkaUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToGetKafkaKafkaUserConfigPrivateAccessPtrOutput() GetKafkaKafkaUserConfigPrivateAccessPtrOutput
	ToGetKafkaKafkaUserConfigPrivateAccessPtrOutputWithContext(context.Context) GetKafkaKafkaUserConfigPrivateAccessPtrOutput
}

type getKafkaKafkaUserConfigPrivateAccessPtrType GetKafkaKafkaUserConfigPrivateAccessArgs

func GetKafkaKafkaUserConfigPrivateAccessPtr(v *GetKafkaKafkaUserConfigPrivateAccessArgs) GetKafkaKafkaUserConfigPrivateAccessPtrInput {
	return (*getKafkaKafkaUserConfigPrivateAccessPtrType)(v)
}

func (*getKafkaKafkaUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaKafkaUserConfigPrivateAccess)(nil)).Elem()
}

func (i *getKafkaKafkaUserConfigPrivateAccessPtrType) ToGetKafkaKafkaUserConfigPrivateAccessPtrOutput() GetKafkaKafkaUserConfigPrivateAccessPtrOutput {
	return i.ToGetKafkaKafkaUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *getKafkaKafkaUserConfigPrivateAccessPtrType) ToGetKafkaKafkaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaKafkaUserConfigPrivateAccessPtrOutput)
}

type GetKafkaKafkaUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (GetKafkaKafkaUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaKafkaUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetKafkaKafkaUserConfigPrivateAccessOutput) ToGetKafkaKafkaUserConfigPrivateAccessOutput() GetKafkaKafkaUserConfigPrivateAccessOutput {
	return o
}

func (o GetKafkaKafkaUserConfigPrivateAccessOutput) ToGetKafkaKafkaUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigPrivateAccessOutput {
	return o
}

func (o GetKafkaKafkaUserConfigPrivateAccessOutput) ToGetKafkaKafkaUserConfigPrivateAccessPtrOutput() GetKafkaKafkaUserConfigPrivateAccessPtrOutput {
	return o.ToGetKafkaKafkaUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o GetKafkaKafkaUserConfigPrivateAccessOutput) ToGetKafkaKafkaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigPrivateAccess) *GetKafkaKafkaUserConfigPrivateAccess {
		return &v
	}).(GetKafkaKafkaUserConfigPrivateAccessPtrOutput)
}

// Allow clients to connect to prometheus from the public internet for
// service nodes that are in a project VPC or another type of private network
func (o GetKafkaKafkaUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type GetKafkaKafkaUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (GetKafkaKafkaUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaKafkaUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetKafkaKafkaUserConfigPrivateAccessPtrOutput) ToGetKafkaKafkaUserConfigPrivateAccessPtrOutput() GetKafkaKafkaUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetKafkaKafkaUserConfigPrivateAccessPtrOutput) ToGetKafkaKafkaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetKafkaKafkaUserConfigPrivateAccessPtrOutput) Elem() GetKafkaKafkaUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigPrivateAccess) GetKafkaKafkaUserConfigPrivateAccess { return *v }).(GetKafkaKafkaUserConfigPrivateAccessOutput)
}

// Allow clients to connect to prometheus from the public internet for
// service nodes that are in a project VPC or another type of private network
func (o GetKafkaKafkaUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type GetKafkaKafkaUserConfigPrivatelinkAccess struct {
	// Kafka server provided values:
	Kafka *string `pulumi:"kafka"`
	// Enable kafka_connect
	KafkaConnect *string `pulumi:"kafkaConnect"`
	// Enable kafka_rest
	KafkaRest *string `pulumi:"kafkaRest"`
	// Enable schema_registry
	SchemaRegistry *string `pulumi:"schemaRegistry"`
}

// GetKafkaKafkaUserConfigPrivatelinkAccessInput is an input type that accepts GetKafkaKafkaUserConfigPrivatelinkAccessArgs and GetKafkaKafkaUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `GetKafkaKafkaUserConfigPrivatelinkAccessInput` via:
//
//          GetKafkaKafkaUserConfigPrivatelinkAccessArgs{...}
type GetKafkaKafkaUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToGetKafkaKafkaUserConfigPrivatelinkAccessOutput() GetKafkaKafkaUserConfigPrivatelinkAccessOutput
	ToGetKafkaKafkaUserConfigPrivatelinkAccessOutputWithContext(context.Context) GetKafkaKafkaUserConfigPrivatelinkAccessOutput
}

type GetKafkaKafkaUserConfigPrivatelinkAccessArgs struct {
	// Kafka server provided values:
	Kafka pulumi.StringPtrInput `pulumi:"kafka"`
	// Enable kafka_connect
	KafkaConnect pulumi.StringPtrInput `pulumi:"kafkaConnect"`
	// Enable kafka_rest
	KafkaRest pulumi.StringPtrInput `pulumi:"kafkaRest"`
	// Enable schema_registry
	SchemaRegistry pulumi.StringPtrInput `pulumi:"schemaRegistry"`
}

func (GetKafkaKafkaUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaKafkaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i GetKafkaKafkaUserConfigPrivatelinkAccessArgs) ToGetKafkaKafkaUserConfigPrivatelinkAccessOutput() GetKafkaKafkaUserConfigPrivatelinkAccessOutput {
	return i.ToGetKafkaKafkaUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i GetKafkaKafkaUserConfigPrivatelinkAccessArgs) ToGetKafkaKafkaUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaKafkaUserConfigPrivatelinkAccessOutput)
}

func (i GetKafkaKafkaUserConfigPrivatelinkAccessArgs) ToGetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput() GetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetKafkaKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i GetKafkaKafkaUserConfigPrivatelinkAccessArgs) ToGetKafkaKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaKafkaUserConfigPrivatelinkAccessOutput).ToGetKafkaKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// GetKafkaKafkaUserConfigPrivatelinkAccessPtrInput is an input type that accepts GetKafkaKafkaUserConfigPrivatelinkAccessArgs, GetKafkaKafkaUserConfigPrivatelinkAccessPtr and GetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `GetKafkaKafkaUserConfigPrivatelinkAccessPtrInput` via:
//
//          GetKafkaKafkaUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type GetKafkaKafkaUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToGetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput() GetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput
	ToGetKafkaKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) GetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput
}

type getKafkaKafkaUserConfigPrivatelinkAccessPtrType GetKafkaKafkaUserConfigPrivatelinkAccessArgs

func GetKafkaKafkaUserConfigPrivatelinkAccessPtr(v *GetKafkaKafkaUserConfigPrivatelinkAccessArgs) GetKafkaKafkaUserConfigPrivatelinkAccessPtrInput {
	return (*getKafkaKafkaUserConfigPrivatelinkAccessPtrType)(v)
}

func (*getKafkaKafkaUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaKafkaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *getKafkaKafkaUserConfigPrivatelinkAccessPtrType) ToGetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput() GetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetKafkaKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *getKafkaKafkaUserConfigPrivatelinkAccessPtrType) ToGetKafkaKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput)
}

type GetKafkaKafkaUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (GetKafkaKafkaUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaKafkaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetKafkaKafkaUserConfigPrivatelinkAccessOutput) ToGetKafkaKafkaUserConfigPrivatelinkAccessOutput() GetKafkaKafkaUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetKafkaKafkaUserConfigPrivatelinkAccessOutput) ToGetKafkaKafkaUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetKafkaKafkaUserConfigPrivatelinkAccessOutput) ToGetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput() GetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput {
	return o.ToGetKafkaKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o GetKafkaKafkaUserConfigPrivatelinkAccessOutput) ToGetKafkaKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigPrivatelinkAccess) *GetKafkaKafkaUserConfigPrivatelinkAccess {
		return &v
	}).(GetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput)
}

// Kafka server provided values:
func (o GetKafkaKafkaUserConfigPrivatelinkAccessOutput) Kafka() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigPrivatelinkAccess) *string { return v.Kafka }).(pulumi.StringPtrOutput)
}

// Enable kafka_connect
func (o GetKafkaKafkaUserConfigPrivatelinkAccessOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigPrivatelinkAccess) *string { return v.KafkaConnect }).(pulumi.StringPtrOutput)
}

// Enable kafka_rest
func (o GetKafkaKafkaUserConfigPrivatelinkAccessOutput) KafkaRest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigPrivatelinkAccess) *string { return v.KafkaRest }).(pulumi.StringPtrOutput)
}

// Enable schema_registry
func (o GetKafkaKafkaUserConfigPrivatelinkAccessOutput) SchemaRegistry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigPrivatelinkAccess) *string { return v.SchemaRegistry }).(pulumi.StringPtrOutput)
}

type GetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (GetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaKafkaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput) ToGetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput() GetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput) ToGetKafkaKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput) Elem() GetKafkaKafkaUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigPrivatelinkAccess) GetKafkaKafkaUserConfigPrivatelinkAccess { return *v }).(GetKafkaKafkaUserConfigPrivatelinkAccessOutput)
}

// Kafka server provided values:
func (o GetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput) Kafka() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Kafka
	}).(pulumi.StringPtrOutput)
}

// Enable kafka_connect
func (o GetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaConnect
	}).(pulumi.StringPtrOutput)
}

// Enable kafka_rest
func (o GetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput) KafkaRest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaRest
	}).(pulumi.StringPtrOutput)
}

// Enable schema_registry
func (o GetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput) SchemaRegistry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.SchemaRegistry
	}).(pulumi.StringPtrOutput)
}

type GetKafkaKafkaUserConfigPublicAccess struct {
	// Kafka server provided values:
	Kafka *string `pulumi:"kafka"`
	// Enable kafka_connect
	KafkaConnect *string `pulumi:"kafkaConnect"`
	// Enable kafka_rest
	KafkaRest *string `pulumi:"kafkaRest"`
	// Allow clients to connect to prometheus from the public internet for
	// service nodes that are in a project VPC or another type of private network
	Prometheus *string `pulumi:"prometheus"`
	// Enable schema_registry
	SchemaRegistry *string `pulumi:"schemaRegistry"`
}

// GetKafkaKafkaUserConfigPublicAccessInput is an input type that accepts GetKafkaKafkaUserConfigPublicAccessArgs and GetKafkaKafkaUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `GetKafkaKafkaUserConfigPublicAccessInput` via:
//
//          GetKafkaKafkaUserConfigPublicAccessArgs{...}
type GetKafkaKafkaUserConfigPublicAccessInput interface {
	pulumi.Input

	ToGetKafkaKafkaUserConfigPublicAccessOutput() GetKafkaKafkaUserConfigPublicAccessOutput
	ToGetKafkaKafkaUserConfigPublicAccessOutputWithContext(context.Context) GetKafkaKafkaUserConfigPublicAccessOutput
}

type GetKafkaKafkaUserConfigPublicAccessArgs struct {
	// Kafka server provided values:
	Kafka pulumi.StringPtrInput `pulumi:"kafka"`
	// Enable kafka_connect
	KafkaConnect pulumi.StringPtrInput `pulumi:"kafkaConnect"`
	// Enable kafka_rest
	KafkaRest pulumi.StringPtrInput `pulumi:"kafkaRest"`
	// Allow clients to connect to prometheus from the public internet for
	// service nodes that are in a project VPC or another type of private network
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
	// Enable schema_registry
	SchemaRegistry pulumi.StringPtrInput `pulumi:"schemaRegistry"`
}

func (GetKafkaKafkaUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaKafkaUserConfigPublicAccess)(nil)).Elem()
}

func (i GetKafkaKafkaUserConfigPublicAccessArgs) ToGetKafkaKafkaUserConfigPublicAccessOutput() GetKafkaKafkaUserConfigPublicAccessOutput {
	return i.ToGetKafkaKafkaUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i GetKafkaKafkaUserConfigPublicAccessArgs) ToGetKafkaKafkaUserConfigPublicAccessOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaKafkaUserConfigPublicAccessOutput)
}

func (i GetKafkaKafkaUserConfigPublicAccessArgs) ToGetKafkaKafkaUserConfigPublicAccessPtrOutput() GetKafkaKafkaUserConfigPublicAccessPtrOutput {
	return i.ToGetKafkaKafkaUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i GetKafkaKafkaUserConfigPublicAccessArgs) ToGetKafkaKafkaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaKafkaUserConfigPublicAccessOutput).ToGetKafkaKafkaUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// GetKafkaKafkaUserConfigPublicAccessPtrInput is an input type that accepts GetKafkaKafkaUserConfigPublicAccessArgs, GetKafkaKafkaUserConfigPublicAccessPtr and GetKafkaKafkaUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `GetKafkaKafkaUserConfigPublicAccessPtrInput` via:
//
//          GetKafkaKafkaUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type GetKafkaKafkaUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToGetKafkaKafkaUserConfigPublicAccessPtrOutput() GetKafkaKafkaUserConfigPublicAccessPtrOutput
	ToGetKafkaKafkaUserConfigPublicAccessPtrOutputWithContext(context.Context) GetKafkaKafkaUserConfigPublicAccessPtrOutput
}

type getKafkaKafkaUserConfigPublicAccessPtrType GetKafkaKafkaUserConfigPublicAccessArgs

func GetKafkaKafkaUserConfigPublicAccessPtr(v *GetKafkaKafkaUserConfigPublicAccessArgs) GetKafkaKafkaUserConfigPublicAccessPtrInput {
	return (*getKafkaKafkaUserConfigPublicAccessPtrType)(v)
}

func (*getKafkaKafkaUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaKafkaUserConfigPublicAccess)(nil)).Elem()
}

func (i *getKafkaKafkaUserConfigPublicAccessPtrType) ToGetKafkaKafkaUserConfigPublicAccessPtrOutput() GetKafkaKafkaUserConfigPublicAccessPtrOutput {
	return i.ToGetKafkaKafkaUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *getKafkaKafkaUserConfigPublicAccessPtrType) ToGetKafkaKafkaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaKafkaUserConfigPublicAccessPtrOutput)
}

type GetKafkaKafkaUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (GetKafkaKafkaUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaKafkaUserConfigPublicAccess)(nil)).Elem()
}

func (o GetKafkaKafkaUserConfigPublicAccessOutput) ToGetKafkaKafkaUserConfigPublicAccessOutput() GetKafkaKafkaUserConfigPublicAccessOutput {
	return o
}

func (o GetKafkaKafkaUserConfigPublicAccessOutput) ToGetKafkaKafkaUserConfigPublicAccessOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigPublicAccessOutput {
	return o
}

func (o GetKafkaKafkaUserConfigPublicAccessOutput) ToGetKafkaKafkaUserConfigPublicAccessPtrOutput() GetKafkaKafkaUserConfigPublicAccessPtrOutput {
	return o.ToGetKafkaKafkaUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o GetKafkaKafkaUserConfigPublicAccessOutput) ToGetKafkaKafkaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigPublicAccess) *GetKafkaKafkaUserConfigPublicAccess {
		return &v
	}).(GetKafkaKafkaUserConfigPublicAccessPtrOutput)
}

// Kafka server provided values:
func (o GetKafkaKafkaUserConfigPublicAccessOutput) Kafka() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigPublicAccess) *string { return v.Kafka }).(pulumi.StringPtrOutput)
}

// Enable kafka_connect
func (o GetKafkaKafkaUserConfigPublicAccessOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigPublicAccess) *string { return v.KafkaConnect }).(pulumi.StringPtrOutput)
}

// Enable kafka_rest
func (o GetKafkaKafkaUserConfigPublicAccessOutput) KafkaRest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigPublicAccess) *string { return v.KafkaRest }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public internet for
// service nodes that are in a project VPC or another type of private network
func (o GetKafkaKafkaUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

// Enable schema_registry
func (o GetKafkaKafkaUserConfigPublicAccessOutput) SchemaRegistry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigPublicAccess) *string { return v.SchemaRegistry }).(pulumi.StringPtrOutput)
}

type GetKafkaKafkaUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (GetKafkaKafkaUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaKafkaUserConfigPublicAccess)(nil)).Elem()
}

func (o GetKafkaKafkaUserConfigPublicAccessPtrOutput) ToGetKafkaKafkaUserConfigPublicAccessPtrOutput() GetKafkaKafkaUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetKafkaKafkaUserConfigPublicAccessPtrOutput) ToGetKafkaKafkaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetKafkaKafkaUserConfigPublicAccessPtrOutput) Elem() GetKafkaKafkaUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigPublicAccess) GetKafkaKafkaUserConfigPublicAccess { return *v }).(GetKafkaKafkaUserConfigPublicAccessOutput)
}

// Kafka server provided values:
func (o GetKafkaKafkaUserConfigPublicAccessPtrOutput) Kafka() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Kafka
	}).(pulumi.StringPtrOutput)
}

// Enable kafka_connect
func (o GetKafkaKafkaUserConfigPublicAccessPtrOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaConnect
	}).(pulumi.StringPtrOutput)
}

// Enable kafka_rest
func (o GetKafkaKafkaUserConfigPublicAccessPtrOutput) KafkaRest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaRest
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public internet for
// service nodes that are in a project VPC or another type of private network
func (o GetKafkaKafkaUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

// Enable schema_registry
func (o GetKafkaKafkaUserConfigPublicAccessPtrOutput) SchemaRegistry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.SchemaRegistry
	}).(pulumi.StringPtrOutput)
}

type GetKafkaKafkaUserConfigSchemaRegistryConfig struct {
	// If true, Karapace / Schema Registry on the service nodes can
	// participate in leader election. It might be needed to disable this when the schemas topic is replicated
	// to a secondary cluster and Karapace / Schema Registry there must not participate in leader election.
	// Defaults to 'true'.
	LeaderEligibility *string `pulumi:"leaderEligibility"`
	// The durable single partition topic that acts as the durable log for the
	// data. This topic must be compacted to avoid losing data due to retention policy. Please note that
	// changing this configuration in an existing Schema Registry / Karapace setup leads to previous
	// schemas being inaccessible, data encoded with them potentially unreadable and schema ID sequence
	// put out of order. It's only possible to do the switch while Schema Registry / Karapace is disabled.
	// Defaults to '_schemas'.
	TopicName *string `pulumi:"topicName"`
}

// GetKafkaKafkaUserConfigSchemaRegistryConfigInput is an input type that accepts GetKafkaKafkaUserConfigSchemaRegistryConfigArgs and GetKafkaKafkaUserConfigSchemaRegistryConfigOutput values.
// You can construct a concrete instance of `GetKafkaKafkaUserConfigSchemaRegistryConfigInput` via:
//
//          GetKafkaKafkaUserConfigSchemaRegistryConfigArgs{...}
type GetKafkaKafkaUserConfigSchemaRegistryConfigInput interface {
	pulumi.Input

	ToGetKafkaKafkaUserConfigSchemaRegistryConfigOutput() GetKafkaKafkaUserConfigSchemaRegistryConfigOutput
	ToGetKafkaKafkaUserConfigSchemaRegistryConfigOutputWithContext(context.Context) GetKafkaKafkaUserConfigSchemaRegistryConfigOutput
}

type GetKafkaKafkaUserConfigSchemaRegistryConfigArgs struct {
	// If true, Karapace / Schema Registry on the service nodes can
	// participate in leader election. It might be needed to disable this when the schemas topic is replicated
	// to a secondary cluster and Karapace / Schema Registry there must not participate in leader election.
	// Defaults to 'true'.
	LeaderEligibility pulumi.StringPtrInput `pulumi:"leaderEligibility"`
	// The durable single partition topic that acts as the durable log for the
	// data. This topic must be compacted to avoid losing data due to retention policy. Please note that
	// changing this configuration in an existing Schema Registry / Karapace setup leads to previous
	// schemas being inaccessible, data encoded with them potentially unreadable and schema ID sequence
	// put out of order. It's only possible to do the switch while Schema Registry / Karapace is disabled.
	// Defaults to '_schemas'.
	TopicName pulumi.StringPtrInput `pulumi:"topicName"`
}

func (GetKafkaKafkaUserConfigSchemaRegistryConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaKafkaUserConfigSchemaRegistryConfig)(nil)).Elem()
}

func (i GetKafkaKafkaUserConfigSchemaRegistryConfigArgs) ToGetKafkaKafkaUserConfigSchemaRegistryConfigOutput() GetKafkaKafkaUserConfigSchemaRegistryConfigOutput {
	return i.ToGetKafkaKafkaUserConfigSchemaRegistryConfigOutputWithContext(context.Background())
}

func (i GetKafkaKafkaUserConfigSchemaRegistryConfigArgs) ToGetKafkaKafkaUserConfigSchemaRegistryConfigOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigSchemaRegistryConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaKafkaUserConfigSchemaRegistryConfigOutput)
}

func (i GetKafkaKafkaUserConfigSchemaRegistryConfigArgs) ToGetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput() GetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return i.ToGetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(context.Background())
}

func (i GetKafkaKafkaUserConfigSchemaRegistryConfigArgs) ToGetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaKafkaUserConfigSchemaRegistryConfigOutput).ToGetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(ctx)
}

// GetKafkaKafkaUserConfigSchemaRegistryConfigPtrInput is an input type that accepts GetKafkaKafkaUserConfigSchemaRegistryConfigArgs, GetKafkaKafkaUserConfigSchemaRegistryConfigPtr and GetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput values.
// You can construct a concrete instance of `GetKafkaKafkaUserConfigSchemaRegistryConfigPtrInput` via:
//
//          GetKafkaKafkaUserConfigSchemaRegistryConfigArgs{...}
//
//  or:
//
//          nil
type GetKafkaKafkaUserConfigSchemaRegistryConfigPtrInput interface {
	pulumi.Input

	ToGetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput() GetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput
	ToGetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(context.Context) GetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput
}

type getKafkaKafkaUserConfigSchemaRegistryConfigPtrType GetKafkaKafkaUserConfigSchemaRegistryConfigArgs

func GetKafkaKafkaUserConfigSchemaRegistryConfigPtr(v *GetKafkaKafkaUserConfigSchemaRegistryConfigArgs) GetKafkaKafkaUserConfigSchemaRegistryConfigPtrInput {
	return (*getKafkaKafkaUserConfigSchemaRegistryConfigPtrType)(v)
}

func (*getKafkaKafkaUserConfigSchemaRegistryConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaKafkaUserConfigSchemaRegistryConfig)(nil)).Elem()
}

func (i *getKafkaKafkaUserConfigSchemaRegistryConfigPtrType) ToGetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput() GetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return i.ToGetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(context.Background())
}

func (i *getKafkaKafkaUserConfigSchemaRegistryConfigPtrType) ToGetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput)
}

type GetKafkaKafkaUserConfigSchemaRegistryConfigOutput struct{ *pulumi.OutputState }

func (GetKafkaKafkaUserConfigSchemaRegistryConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaKafkaUserConfigSchemaRegistryConfig)(nil)).Elem()
}

func (o GetKafkaKafkaUserConfigSchemaRegistryConfigOutput) ToGetKafkaKafkaUserConfigSchemaRegistryConfigOutput() GetKafkaKafkaUserConfigSchemaRegistryConfigOutput {
	return o
}

func (o GetKafkaKafkaUserConfigSchemaRegistryConfigOutput) ToGetKafkaKafkaUserConfigSchemaRegistryConfigOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigSchemaRegistryConfigOutput {
	return o
}

func (o GetKafkaKafkaUserConfigSchemaRegistryConfigOutput) ToGetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput() GetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return o.ToGetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(context.Background())
}

func (o GetKafkaKafkaUserConfigSchemaRegistryConfigOutput) ToGetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigSchemaRegistryConfig) *GetKafkaKafkaUserConfigSchemaRegistryConfig {
		return &v
	}).(GetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput)
}

// If true, Karapace / Schema Registry on the service nodes can
// participate in leader election. It might be needed to disable this when the schemas topic is replicated
// to a secondary cluster and Karapace / Schema Registry there must not participate in leader election.
// Defaults to 'true'.
func (o GetKafkaKafkaUserConfigSchemaRegistryConfigOutput) LeaderEligibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigSchemaRegistryConfig) *string { return v.LeaderEligibility }).(pulumi.StringPtrOutput)
}

// The durable single partition topic that acts as the durable log for the
// data. This topic must be compacted to avoid losing data due to retention policy. Please note that
// changing this configuration in an existing Schema Registry / Karapace setup leads to previous
// schemas being inaccessible, data encoded with them potentially unreadable and schema ID sequence
// put out of order. It's only possible to do the switch while Schema Registry / Karapace is disabled.
// Defaults to '_schemas'.
func (o GetKafkaKafkaUserConfigSchemaRegistryConfigOutput) TopicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaKafkaUserConfigSchemaRegistryConfig) *string { return v.TopicName }).(pulumi.StringPtrOutput)
}

type GetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput struct{ *pulumi.OutputState }

func (GetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaKafkaUserConfigSchemaRegistryConfig)(nil)).Elem()
}

func (o GetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput) ToGetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput() GetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return o
}

func (o GetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput) ToGetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(ctx context.Context) GetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return o
}

func (o GetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput) Elem() GetKafkaKafkaUserConfigSchemaRegistryConfigOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigSchemaRegistryConfig) GetKafkaKafkaUserConfigSchemaRegistryConfig {
		return *v
	}).(GetKafkaKafkaUserConfigSchemaRegistryConfigOutput)
}

// If true, Karapace / Schema Registry on the service nodes can
// participate in leader election. It might be needed to disable this when the schemas topic is replicated
// to a secondary cluster and Karapace / Schema Registry there must not participate in leader election.
// Defaults to 'true'.
func (o GetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput) LeaderEligibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigSchemaRegistryConfig) *string {
		if v == nil {
			return nil
		}
		return v.LeaderEligibility
	}).(pulumi.StringPtrOutput)
}

// The durable single partition topic that acts as the durable log for the
// data. This topic must be compacted to avoid losing data due to retention policy. Please note that
// changing this configuration in an existing Schema Registry / Karapace setup leads to previous
// schemas being inaccessible, data encoded with them potentially unreadable and schema ID sequence
// put out of order. It's only possible to do the switch while Schema Registry / Karapace is disabled.
// Defaults to '_schemas'.
func (o GetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput) TopicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaKafkaUserConfigSchemaRegistryConfig) *string {
		if v == nil {
			return nil
		}
		return v.TopicName
	}).(pulumi.StringPtrOutput)
}

type GetKafkaMirrorMakerComponent struct {
	Component                 string `pulumi:"component"`
	Host                      string `pulumi:"host"`
	KafkaAuthenticationMethod string `pulumi:"kafkaAuthenticationMethod"`
	Port                      int    `pulumi:"port"`
	Route                     string `pulumi:"route"`
	Ssl                       bool   `pulumi:"ssl"`
	Usage                     string `pulumi:"usage"`
}

// GetKafkaMirrorMakerComponentInput is an input type that accepts GetKafkaMirrorMakerComponentArgs and GetKafkaMirrorMakerComponentOutput values.
// You can construct a concrete instance of `GetKafkaMirrorMakerComponentInput` via:
//
//          GetKafkaMirrorMakerComponentArgs{...}
type GetKafkaMirrorMakerComponentInput interface {
	pulumi.Input

	ToGetKafkaMirrorMakerComponentOutput() GetKafkaMirrorMakerComponentOutput
	ToGetKafkaMirrorMakerComponentOutputWithContext(context.Context) GetKafkaMirrorMakerComponentOutput
}

type GetKafkaMirrorMakerComponentArgs struct {
	Component                 pulumi.StringInput `pulumi:"component"`
	Host                      pulumi.StringInput `pulumi:"host"`
	KafkaAuthenticationMethod pulumi.StringInput `pulumi:"kafkaAuthenticationMethod"`
	Port                      pulumi.IntInput    `pulumi:"port"`
	Route                     pulumi.StringInput `pulumi:"route"`
	Ssl                       pulumi.BoolInput   `pulumi:"ssl"`
	Usage                     pulumi.StringInput `pulumi:"usage"`
}

func (GetKafkaMirrorMakerComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaMirrorMakerComponent)(nil)).Elem()
}

func (i GetKafkaMirrorMakerComponentArgs) ToGetKafkaMirrorMakerComponentOutput() GetKafkaMirrorMakerComponentOutput {
	return i.ToGetKafkaMirrorMakerComponentOutputWithContext(context.Background())
}

func (i GetKafkaMirrorMakerComponentArgs) ToGetKafkaMirrorMakerComponentOutputWithContext(ctx context.Context) GetKafkaMirrorMakerComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaMirrorMakerComponentOutput)
}

// GetKafkaMirrorMakerComponentArrayInput is an input type that accepts GetKafkaMirrorMakerComponentArray and GetKafkaMirrorMakerComponentArrayOutput values.
// You can construct a concrete instance of `GetKafkaMirrorMakerComponentArrayInput` via:
//
//          GetKafkaMirrorMakerComponentArray{ GetKafkaMirrorMakerComponentArgs{...} }
type GetKafkaMirrorMakerComponentArrayInput interface {
	pulumi.Input

	ToGetKafkaMirrorMakerComponentArrayOutput() GetKafkaMirrorMakerComponentArrayOutput
	ToGetKafkaMirrorMakerComponentArrayOutputWithContext(context.Context) GetKafkaMirrorMakerComponentArrayOutput
}

type GetKafkaMirrorMakerComponentArray []GetKafkaMirrorMakerComponentInput

func (GetKafkaMirrorMakerComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaMirrorMakerComponent)(nil)).Elem()
}

func (i GetKafkaMirrorMakerComponentArray) ToGetKafkaMirrorMakerComponentArrayOutput() GetKafkaMirrorMakerComponentArrayOutput {
	return i.ToGetKafkaMirrorMakerComponentArrayOutputWithContext(context.Background())
}

func (i GetKafkaMirrorMakerComponentArray) ToGetKafkaMirrorMakerComponentArrayOutputWithContext(ctx context.Context) GetKafkaMirrorMakerComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaMirrorMakerComponentArrayOutput)
}

type GetKafkaMirrorMakerComponentOutput struct{ *pulumi.OutputState }

func (GetKafkaMirrorMakerComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaMirrorMakerComponent)(nil)).Elem()
}

func (o GetKafkaMirrorMakerComponentOutput) ToGetKafkaMirrorMakerComponentOutput() GetKafkaMirrorMakerComponentOutput {
	return o
}

func (o GetKafkaMirrorMakerComponentOutput) ToGetKafkaMirrorMakerComponentOutputWithContext(ctx context.Context) GetKafkaMirrorMakerComponentOutput {
	return o
}

func (o GetKafkaMirrorMakerComponentOutput) Component() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaMirrorMakerComponent) string { return v.Component }).(pulumi.StringOutput)
}

func (o GetKafkaMirrorMakerComponentOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaMirrorMakerComponent) string { return v.Host }).(pulumi.StringOutput)
}

func (o GetKafkaMirrorMakerComponentOutput) KafkaAuthenticationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaMirrorMakerComponent) string { return v.KafkaAuthenticationMethod }).(pulumi.StringOutput)
}

func (o GetKafkaMirrorMakerComponentOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetKafkaMirrorMakerComponent) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetKafkaMirrorMakerComponentOutput) Route() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaMirrorMakerComponent) string { return v.Route }).(pulumi.StringOutput)
}

func (o GetKafkaMirrorMakerComponentOutput) Ssl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKafkaMirrorMakerComponent) bool { return v.Ssl }).(pulumi.BoolOutput)
}

func (o GetKafkaMirrorMakerComponentOutput) Usage() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaMirrorMakerComponent) string { return v.Usage }).(pulumi.StringOutput)
}

type GetKafkaMirrorMakerComponentArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaMirrorMakerComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaMirrorMakerComponent)(nil)).Elem()
}

func (o GetKafkaMirrorMakerComponentArrayOutput) ToGetKafkaMirrorMakerComponentArrayOutput() GetKafkaMirrorMakerComponentArrayOutput {
	return o
}

func (o GetKafkaMirrorMakerComponentArrayOutput) ToGetKafkaMirrorMakerComponentArrayOutputWithContext(ctx context.Context) GetKafkaMirrorMakerComponentArrayOutput {
	return o
}

func (o GetKafkaMirrorMakerComponentArrayOutput) Index(i pulumi.IntInput) GetKafkaMirrorMakerComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaMirrorMakerComponent {
		return vs[0].([]GetKafkaMirrorMakerComponent)[vs[1].(int)]
	}).(GetKafkaMirrorMakerComponentOutput)
}

type GetKafkaMirrorMakerKafkaMirrormaker struct {
}

// GetKafkaMirrorMakerKafkaMirrormakerInput is an input type that accepts GetKafkaMirrorMakerKafkaMirrormakerArgs and GetKafkaMirrorMakerKafkaMirrormakerOutput values.
// You can construct a concrete instance of `GetKafkaMirrorMakerKafkaMirrormakerInput` via:
//
//          GetKafkaMirrorMakerKafkaMirrormakerArgs{...}
type GetKafkaMirrorMakerKafkaMirrormakerInput interface {
	pulumi.Input

	ToGetKafkaMirrorMakerKafkaMirrormakerOutput() GetKafkaMirrorMakerKafkaMirrormakerOutput
	ToGetKafkaMirrorMakerKafkaMirrormakerOutputWithContext(context.Context) GetKafkaMirrorMakerKafkaMirrormakerOutput
}

type GetKafkaMirrorMakerKafkaMirrormakerArgs struct {
}

func (GetKafkaMirrorMakerKafkaMirrormakerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaMirrorMakerKafkaMirrormaker)(nil)).Elem()
}

func (i GetKafkaMirrorMakerKafkaMirrormakerArgs) ToGetKafkaMirrorMakerKafkaMirrormakerOutput() GetKafkaMirrorMakerKafkaMirrormakerOutput {
	return i.ToGetKafkaMirrorMakerKafkaMirrormakerOutputWithContext(context.Background())
}

func (i GetKafkaMirrorMakerKafkaMirrormakerArgs) ToGetKafkaMirrorMakerKafkaMirrormakerOutputWithContext(ctx context.Context) GetKafkaMirrorMakerKafkaMirrormakerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaMirrorMakerKafkaMirrormakerOutput)
}

type GetKafkaMirrorMakerKafkaMirrormakerOutput struct{ *pulumi.OutputState }

func (GetKafkaMirrorMakerKafkaMirrormakerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaMirrorMakerKafkaMirrormaker)(nil)).Elem()
}

func (o GetKafkaMirrorMakerKafkaMirrormakerOutput) ToGetKafkaMirrorMakerKafkaMirrormakerOutput() GetKafkaMirrorMakerKafkaMirrormakerOutput {
	return o
}

func (o GetKafkaMirrorMakerKafkaMirrormakerOutput) ToGetKafkaMirrorMakerKafkaMirrormakerOutputWithContext(ctx context.Context) GetKafkaMirrorMakerKafkaMirrormakerOutput {
	return o
}

type GetKafkaMirrorMakerKafkaMirrormakerUserConfig struct {
	// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters []string `pulumi:"ipFilters"`
	// Kafka MirrorMaker 2 specific server provided values.
	KafkaMirrormaker *GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker `pulumi:"kafkaMirrormaker"`
}

// GetKafkaMirrorMakerKafkaMirrormakerUserConfigInput is an input type that accepts GetKafkaMirrorMakerKafkaMirrormakerUserConfigArgs and GetKafkaMirrorMakerKafkaMirrormakerUserConfigOutput values.
// You can construct a concrete instance of `GetKafkaMirrorMakerKafkaMirrormakerUserConfigInput` via:
//
//          GetKafkaMirrorMakerKafkaMirrormakerUserConfigArgs{...}
type GetKafkaMirrorMakerKafkaMirrormakerUserConfigInput interface {
	pulumi.Input

	ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigOutput() GetKafkaMirrorMakerKafkaMirrormakerUserConfigOutput
	ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigOutputWithContext(context.Context) GetKafkaMirrorMakerKafkaMirrormakerUserConfigOutput
}

type GetKafkaMirrorMakerKafkaMirrormakerUserConfigArgs struct {
	// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// Kafka MirrorMaker 2 specific server provided values.
	KafkaMirrormaker GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrInput `pulumi:"kafkaMirrormaker"`
}

func (GetKafkaMirrorMakerKafkaMirrormakerUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaMirrorMakerKafkaMirrormakerUserConfig)(nil)).Elem()
}

func (i GetKafkaMirrorMakerKafkaMirrormakerUserConfigArgs) ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigOutput() GetKafkaMirrorMakerKafkaMirrormakerUserConfigOutput {
	return i.ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigOutputWithContext(context.Background())
}

func (i GetKafkaMirrorMakerKafkaMirrormakerUserConfigArgs) ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigOutputWithContext(ctx context.Context) GetKafkaMirrorMakerKafkaMirrormakerUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaMirrorMakerKafkaMirrormakerUserConfigOutput)
}

type GetKafkaMirrorMakerKafkaMirrormakerUserConfigOutput struct{ *pulumi.OutputState }

func (GetKafkaMirrorMakerKafkaMirrormakerUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaMirrorMakerKafkaMirrormakerUserConfig)(nil)).Elem()
}

func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigOutput) ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigOutput() GetKafkaMirrorMakerKafkaMirrormakerUserConfigOutput {
	return o
}

func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigOutput) ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigOutputWithContext(ctx context.Context) GetKafkaMirrorMakerKafkaMirrormakerUserConfigOutput {
	return o
}

// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKafkaMirrorMakerKafkaMirrormakerUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// Kafka MirrorMaker 2 specific server provided values.
func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigOutput) KafkaMirrormaker() GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return o.ApplyT(func(v GetKafkaMirrorMakerKafkaMirrormakerUserConfig) *GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker {
		return v.KafkaMirrormaker
	}).(GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput)
}

type GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker struct {
	// Whether to periodically write the translated offsets
	// of replicated consumer groups (in the source cluster) to __consumer_offsets topic in target cluster,
	// as long as no active consumers in that group are connected to the target cluster.
	EmitCheckpointsEnabled         *string `pulumi:"emitCheckpointsEnabled"`
	EmitCheckpointsIntervalSeconds *string `pulumi:"emitCheckpointsIntervalSeconds"`
	// Whether to periodically check for new consumer groups.
	// Defaults to 'true'.
	RefreshGroupsEnabled *string `pulumi:"refreshGroupsEnabled"`
	// Whether to periodically check for new topics and
	// partitions. Defaults to 'true'.
	RefreshGroupsIntervalSeconds *string `pulumi:"refreshGroupsIntervalSeconds"`
	RefreshTopicsEnabled         *string `pulumi:"refreshTopicsEnabled"`
	// Frequency of topic and partitions refresh in
	// seconds. Defaults to 600 seconds (10 minutes).
	RefreshTopicsIntervalSeconds *string `pulumi:"refreshTopicsIntervalSeconds"`
	SyncGroupOffsetsEnabled      *string `pulumi:"syncGroupOffsetsEnabled"`
	// Frequency at which consumer group offsets
	// are synced (default: 60, every minute).
	SyncGroupOffsetsIntervalSeconds *string `pulumi:"syncGroupOffsetsIntervalSeconds"`
}

// GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerInput is an input type that accepts GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs and GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput values.
// You can construct a concrete instance of `GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerInput` via:
//
//          GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs{...}
type GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerInput interface {
	pulumi.Input

	ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput() GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput
	ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutputWithContext(context.Context) GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput
}

type GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs struct {
	// Whether to periodically write the translated offsets
	// of replicated consumer groups (in the source cluster) to __consumer_offsets topic in target cluster,
	// as long as no active consumers in that group are connected to the target cluster.
	EmitCheckpointsEnabled         pulumi.StringPtrInput `pulumi:"emitCheckpointsEnabled"`
	EmitCheckpointsIntervalSeconds pulumi.StringPtrInput `pulumi:"emitCheckpointsIntervalSeconds"`
	// Whether to periodically check for new consumer groups.
	// Defaults to 'true'.
	RefreshGroupsEnabled pulumi.StringPtrInput `pulumi:"refreshGroupsEnabled"`
	// Whether to periodically check for new topics and
	// partitions. Defaults to 'true'.
	RefreshGroupsIntervalSeconds pulumi.StringPtrInput `pulumi:"refreshGroupsIntervalSeconds"`
	RefreshTopicsEnabled         pulumi.StringPtrInput `pulumi:"refreshTopicsEnabled"`
	// Frequency of topic and partitions refresh in
	// seconds. Defaults to 600 seconds (10 minutes).
	RefreshTopicsIntervalSeconds pulumi.StringPtrInput `pulumi:"refreshTopicsIntervalSeconds"`
	SyncGroupOffsetsEnabled      pulumi.StringPtrInput `pulumi:"syncGroupOffsetsEnabled"`
	// Frequency at which consumer group offsets
	// are synced (default: 60, every minute).
	SyncGroupOffsetsIntervalSeconds pulumi.StringPtrInput `pulumi:"syncGroupOffsetsIntervalSeconds"`
}

func (GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker)(nil)).Elem()
}

func (i GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs) ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput() GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput {
	return i.ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutputWithContext(context.Background())
}

func (i GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs) ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutputWithContext(ctx context.Context) GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput)
}

func (i GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs) ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput() GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return i.ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(context.Background())
}

func (i GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs) ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(ctx context.Context) GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput).ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(ctx)
}

// GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrInput is an input type that accepts GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs, GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtr and GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput values.
// You can construct a concrete instance of `GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrInput` via:
//
//          GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs{...}
//
//  or:
//
//          nil
type GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrInput interface {
	pulumi.Input

	ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput() GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput
	ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(context.Context) GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput
}

type getKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrType GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs

func GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtr(v *GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs) GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrInput {
	return (*getKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrType)(v)
}

func (*getKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker)(nil)).Elem()
}

func (i *getKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrType) ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput() GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return i.ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(context.Background())
}

func (i *getKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrType) ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(ctx context.Context) GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput)
}

type GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput struct{ *pulumi.OutputState }

func (GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker)(nil)).Elem()
}

func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput) ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput() GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput {
	return o
}

func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput) ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutputWithContext(ctx context.Context) GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput {
	return o
}

func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput) ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput() GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return o.ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(context.Background())
}

func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput) ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(ctx context.Context) GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return o.ApplyT(func(v GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker {
		return &v
	}).(GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput)
}

// Whether to periodically write the translated offsets
// of replicated consumer groups (in the source cluster) to __consumer_offsets topic in target cluster,
// as long as no active consumers in that group are connected to the target cluster.
func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput) EmitCheckpointsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		return v.EmitCheckpointsEnabled
	}).(pulumi.StringPtrOutput)
}

func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput) EmitCheckpointsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		return v.EmitCheckpointsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

// Whether to periodically check for new consumer groups.
// Defaults to 'true'.
func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput) RefreshGroupsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		return v.RefreshGroupsEnabled
	}).(pulumi.StringPtrOutput)
}

// Whether to periodically check for new topics and
// partitions. Defaults to 'true'.
func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput) RefreshGroupsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		return v.RefreshGroupsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput) RefreshTopicsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		return v.RefreshTopicsEnabled
	}).(pulumi.StringPtrOutput)
}

// Frequency of topic and partitions refresh in
// seconds. Defaults to 600 seconds (10 minutes).
func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput) RefreshTopicsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		return v.RefreshTopicsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput) SyncGroupOffsetsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		return v.SyncGroupOffsetsEnabled
	}).(pulumi.StringPtrOutput)
}

// Frequency at which consumer group offsets
// are synced (default: 60, every minute).
func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput) SyncGroupOffsetsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		return v.SyncGroupOffsetsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

type GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput struct{ *pulumi.OutputState }

func (GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker)(nil)).Elem()
}

func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput() GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return o
}

func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) ToGetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(ctx context.Context) GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return o
}

func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) Elem() GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput {
	return o.ApplyT(func(v *GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker {
		return *v
	}).(GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput)
}

// Whether to periodically write the translated offsets
// of replicated consumer groups (in the source cluster) to __consumer_offsets topic in target cluster,
// as long as no active consumers in that group are connected to the target cluster.
func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) EmitCheckpointsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.EmitCheckpointsEnabled
	}).(pulumi.StringPtrOutput)
}

func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) EmitCheckpointsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.EmitCheckpointsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

// Whether to periodically check for new consumer groups.
// Defaults to 'true'.
func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) RefreshGroupsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.RefreshGroupsEnabled
	}).(pulumi.StringPtrOutput)
}

// Whether to periodically check for new topics and
// partitions. Defaults to 'true'.
func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) RefreshGroupsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.RefreshGroupsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) RefreshTopicsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.RefreshTopicsEnabled
	}).(pulumi.StringPtrOutput)
}

// Frequency of topic and partitions refresh in
// seconds. Defaults to 600 seconds (10 minutes).
func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) RefreshTopicsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.RefreshTopicsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) SyncGroupOffsetsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.SyncGroupOffsetsEnabled
	}).(pulumi.StringPtrOutput)
}

// Frequency at which consumer group offsets
// are synced (default: 60, every minute).
func (o GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) SyncGroupOffsetsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.SyncGroupOffsetsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

type GetKafkaMirrorMakerServiceIntegration struct {
	IntegrationType   string `pulumi:"integrationType"`
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// GetKafkaMirrorMakerServiceIntegrationInput is an input type that accepts GetKafkaMirrorMakerServiceIntegrationArgs and GetKafkaMirrorMakerServiceIntegrationOutput values.
// You can construct a concrete instance of `GetKafkaMirrorMakerServiceIntegrationInput` via:
//
//          GetKafkaMirrorMakerServiceIntegrationArgs{...}
type GetKafkaMirrorMakerServiceIntegrationInput interface {
	pulumi.Input

	ToGetKafkaMirrorMakerServiceIntegrationOutput() GetKafkaMirrorMakerServiceIntegrationOutput
	ToGetKafkaMirrorMakerServiceIntegrationOutputWithContext(context.Context) GetKafkaMirrorMakerServiceIntegrationOutput
}

type GetKafkaMirrorMakerServiceIntegrationArgs struct {
	IntegrationType   pulumi.StringInput `pulumi:"integrationType"`
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (GetKafkaMirrorMakerServiceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaMirrorMakerServiceIntegration)(nil)).Elem()
}

func (i GetKafkaMirrorMakerServiceIntegrationArgs) ToGetKafkaMirrorMakerServiceIntegrationOutput() GetKafkaMirrorMakerServiceIntegrationOutput {
	return i.ToGetKafkaMirrorMakerServiceIntegrationOutputWithContext(context.Background())
}

func (i GetKafkaMirrorMakerServiceIntegrationArgs) ToGetKafkaMirrorMakerServiceIntegrationOutputWithContext(ctx context.Context) GetKafkaMirrorMakerServiceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaMirrorMakerServiceIntegrationOutput)
}

// GetKafkaMirrorMakerServiceIntegrationArrayInput is an input type that accepts GetKafkaMirrorMakerServiceIntegrationArray and GetKafkaMirrorMakerServiceIntegrationArrayOutput values.
// You can construct a concrete instance of `GetKafkaMirrorMakerServiceIntegrationArrayInput` via:
//
//          GetKafkaMirrorMakerServiceIntegrationArray{ GetKafkaMirrorMakerServiceIntegrationArgs{...} }
type GetKafkaMirrorMakerServiceIntegrationArrayInput interface {
	pulumi.Input

	ToGetKafkaMirrorMakerServiceIntegrationArrayOutput() GetKafkaMirrorMakerServiceIntegrationArrayOutput
	ToGetKafkaMirrorMakerServiceIntegrationArrayOutputWithContext(context.Context) GetKafkaMirrorMakerServiceIntegrationArrayOutput
}

type GetKafkaMirrorMakerServiceIntegrationArray []GetKafkaMirrorMakerServiceIntegrationInput

func (GetKafkaMirrorMakerServiceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaMirrorMakerServiceIntegration)(nil)).Elem()
}

func (i GetKafkaMirrorMakerServiceIntegrationArray) ToGetKafkaMirrorMakerServiceIntegrationArrayOutput() GetKafkaMirrorMakerServiceIntegrationArrayOutput {
	return i.ToGetKafkaMirrorMakerServiceIntegrationArrayOutputWithContext(context.Background())
}

func (i GetKafkaMirrorMakerServiceIntegrationArray) ToGetKafkaMirrorMakerServiceIntegrationArrayOutputWithContext(ctx context.Context) GetKafkaMirrorMakerServiceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaMirrorMakerServiceIntegrationArrayOutput)
}

type GetKafkaMirrorMakerServiceIntegrationOutput struct{ *pulumi.OutputState }

func (GetKafkaMirrorMakerServiceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaMirrorMakerServiceIntegration)(nil)).Elem()
}

func (o GetKafkaMirrorMakerServiceIntegrationOutput) ToGetKafkaMirrorMakerServiceIntegrationOutput() GetKafkaMirrorMakerServiceIntegrationOutput {
	return o
}

func (o GetKafkaMirrorMakerServiceIntegrationOutput) ToGetKafkaMirrorMakerServiceIntegrationOutputWithContext(ctx context.Context) GetKafkaMirrorMakerServiceIntegrationOutput {
	return o
}

func (o GetKafkaMirrorMakerServiceIntegrationOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaMirrorMakerServiceIntegration) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o GetKafkaMirrorMakerServiceIntegrationOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaMirrorMakerServiceIntegration) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

type GetKafkaMirrorMakerServiceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaMirrorMakerServiceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaMirrorMakerServiceIntegration)(nil)).Elem()
}

func (o GetKafkaMirrorMakerServiceIntegrationArrayOutput) ToGetKafkaMirrorMakerServiceIntegrationArrayOutput() GetKafkaMirrorMakerServiceIntegrationArrayOutput {
	return o
}

func (o GetKafkaMirrorMakerServiceIntegrationArrayOutput) ToGetKafkaMirrorMakerServiceIntegrationArrayOutputWithContext(ctx context.Context) GetKafkaMirrorMakerServiceIntegrationArrayOutput {
	return o
}

func (o GetKafkaMirrorMakerServiceIntegrationArrayOutput) Index(i pulumi.IntInput) GetKafkaMirrorMakerServiceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaMirrorMakerServiceIntegration {
		return vs[0].([]GetKafkaMirrorMakerServiceIntegration)[vs[1].(int)]
	}).(GetKafkaMirrorMakerServiceIntegrationOutput)
}

type GetKafkaServiceIntegration struct {
	IntegrationType   string `pulumi:"integrationType"`
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// GetKafkaServiceIntegrationInput is an input type that accepts GetKafkaServiceIntegrationArgs and GetKafkaServiceIntegrationOutput values.
// You can construct a concrete instance of `GetKafkaServiceIntegrationInput` via:
//
//          GetKafkaServiceIntegrationArgs{...}
type GetKafkaServiceIntegrationInput interface {
	pulumi.Input

	ToGetKafkaServiceIntegrationOutput() GetKafkaServiceIntegrationOutput
	ToGetKafkaServiceIntegrationOutputWithContext(context.Context) GetKafkaServiceIntegrationOutput
}

type GetKafkaServiceIntegrationArgs struct {
	IntegrationType   pulumi.StringInput `pulumi:"integrationType"`
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (GetKafkaServiceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaServiceIntegration)(nil)).Elem()
}

func (i GetKafkaServiceIntegrationArgs) ToGetKafkaServiceIntegrationOutput() GetKafkaServiceIntegrationOutput {
	return i.ToGetKafkaServiceIntegrationOutputWithContext(context.Background())
}

func (i GetKafkaServiceIntegrationArgs) ToGetKafkaServiceIntegrationOutputWithContext(ctx context.Context) GetKafkaServiceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaServiceIntegrationOutput)
}

// GetKafkaServiceIntegrationArrayInput is an input type that accepts GetKafkaServiceIntegrationArray and GetKafkaServiceIntegrationArrayOutput values.
// You can construct a concrete instance of `GetKafkaServiceIntegrationArrayInput` via:
//
//          GetKafkaServiceIntegrationArray{ GetKafkaServiceIntegrationArgs{...} }
type GetKafkaServiceIntegrationArrayInput interface {
	pulumi.Input

	ToGetKafkaServiceIntegrationArrayOutput() GetKafkaServiceIntegrationArrayOutput
	ToGetKafkaServiceIntegrationArrayOutputWithContext(context.Context) GetKafkaServiceIntegrationArrayOutput
}

type GetKafkaServiceIntegrationArray []GetKafkaServiceIntegrationInput

func (GetKafkaServiceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaServiceIntegration)(nil)).Elem()
}

func (i GetKafkaServiceIntegrationArray) ToGetKafkaServiceIntegrationArrayOutput() GetKafkaServiceIntegrationArrayOutput {
	return i.ToGetKafkaServiceIntegrationArrayOutputWithContext(context.Background())
}

func (i GetKafkaServiceIntegrationArray) ToGetKafkaServiceIntegrationArrayOutputWithContext(ctx context.Context) GetKafkaServiceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaServiceIntegrationArrayOutput)
}

type GetKafkaServiceIntegrationOutput struct{ *pulumi.OutputState }

func (GetKafkaServiceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaServiceIntegration)(nil)).Elem()
}

func (o GetKafkaServiceIntegrationOutput) ToGetKafkaServiceIntegrationOutput() GetKafkaServiceIntegrationOutput {
	return o
}

func (o GetKafkaServiceIntegrationOutput) ToGetKafkaServiceIntegrationOutputWithContext(ctx context.Context) GetKafkaServiceIntegrationOutput {
	return o
}

func (o GetKafkaServiceIntegrationOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaServiceIntegration) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o GetKafkaServiceIntegrationOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaServiceIntegration) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

type GetKafkaServiceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaServiceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaServiceIntegration)(nil)).Elem()
}

func (o GetKafkaServiceIntegrationArrayOutput) ToGetKafkaServiceIntegrationArrayOutput() GetKafkaServiceIntegrationArrayOutput {
	return o
}

func (o GetKafkaServiceIntegrationArrayOutput) ToGetKafkaServiceIntegrationArrayOutputWithContext(ctx context.Context) GetKafkaServiceIntegrationArrayOutput {
	return o
}

func (o GetKafkaServiceIntegrationArrayOutput) Index(i pulumi.IntInput) GetKafkaServiceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaServiceIntegration {
		return vs[0].([]GetKafkaServiceIntegration)[vs[1].(int)]
	}).(GetKafkaServiceIntegrationOutput)
}

type GetKafkaTopicConfig struct {
	// cleanup.policy value, can be `create`, `delete` or `compact,delete`
	CleanupPolicy *string `pulumi:"cleanupPolicy"`
	// compression.type value
	CompressionType *string `pulumi:"compressionType"`
	// delete.retention.ms value
	DeleteRetentionMs *string `pulumi:"deleteRetentionMs"`
	// file.delete.delay.ms value
	FileDeleteDelayMs *string `pulumi:"fileDeleteDelayMs"`
	// flush.messages value
	FlushMessages *string `pulumi:"flushMessages"`
	// flush.ms value
	FlushMs *string `pulumi:"flushMs"`
	// index.interval.bytes value
	IndexIntervalBytes *string `pulumi:"indexIntervalBytes"`
	// max.compaction.lag.ms value
	MaxCompactionLagMs *string `pulumi:"maxCompactionLagMs"`
	// max.message.bytes value
	MaxMessageBytes *string `pulumi:"maxMessageBytes"`
	// message.downconversion.enable value
	MessageDownconversionEnable *string `pulumi:"messageDownconversionEnable"`
	// message.format.version value
	MessageFormatVersion *string `pulumi:"messageFormatVersion"`
	// message.timestamp.difference.max.ms value
	MessageTimestampDifferenceMaxMs *string `pulumi:"messageTimestampDifferenceMaxMs"`
	// message.timestamp.type value
	MessageTimestampType *string `pulumi:"messageTimestampType"`
	// min.cleanable.dirty.ratio value
	MinCleanableDirtyRatio *string `pulumi:"minCleanableDirtyRatio"`
	// min.compaction.lag.ms value
	MinCompactionLagMs *string `pulumi:"minCompactionLagMs"`
	// min.insync.replicas value
	MinInsyncReplicas *string `pulumi:"minInsyncReplicas"`
	// preallocate value
	Preallocate *string `pulumi:"preallocate"`
	// retention.bytes value
	RetentionBytes *string `pulumi:"retentionBytes"`
	// retention.ms value
	RetentionMs *string `pulumi:"retentionMs"`
	// segment.bytes value
	SegmentBytes *string `pulumi:"segmentBytes"`
	// segment.index.bytes value
	SegmentIndexBytes *string `pulumi:"segmentIndexBytes"`
	// segment.jitter.ms value
	SegmentJitterMs *string `pulumi:"segmentJitterMs"`
	// segment.ms value
	SegmentMs *string `pulumi:"segmentMs"`
	// unclean.leader.election.enable value
	UncleanLeaderElectionEnable *string `pulumi:"uncleanLeaderElectionEnable"`
}

// GetKafkaTopicConfigInput is an input type that accepts GetKafkaTopicConfigArgs and GetKafkaTopicConfigOutput values.
// You can construct a concrete instance of `GetKafkaTopicConfigInput` via:
//
//          GetKafkaTopicConfigArgs{...}
type GetKafkaTopicConfigInput interface {
	pulumi.Input

	ToGetKafkaTopicConfigOutput() GetKafkaTopicConfigOutput
	ToGetKafkaTopicConfigOutputWithContext(context.Context) GetKafkaTopicConfigOutput
}

type GetKafkaTopicConfigArgs struct {
	// cleanup.policy value, can be `create`, `delete` or `compact,delete`
	CleanupPolicy pulumi.StringPtrInput `pulumi:"cleanupPolicy"`
	// compression.type value
	CompressionType pulumi.StringPtrInput `pulumi:"compressionType"`
	// delete.retention.ms value
	DeleteRetentionMs pulumi.StringPtrInput `pulumi:"deleteRetentionMs"`
	// file.delete.delay.ms value
	FileDeleteDelayMs pulumi.StringPtrInput `pulumi:"fileDeleteDelayMs"`
	// flush.messages value
	FlushMessages pulumi.StringPtrInput `pulumi:"flushMessages"`
	// flush.ms value
	FlushMs pulumi.StringPtrInput `pulumi:"flushMs"`
	// index.interval.bytes value
	IndexIntervalBytes pulumi.StringPtrInput `pulumi:"indexIntervalBytes"`
	// max.compaction.lag.ms value
	MaxCompactionLagMs pulumi.StringPtrInput `pulumi:"maxCompactionLagMs"`
	// max.message.bytes value
	MaxMessageBytes pulumi.StringPtrInput `pulumi:"maxMessageBytes"`
	// message.downconversion.enable value
	MessageDownconversionEnable pulumi.StringPtrInput `pulumi:"messageDownconversionEnable"`
	// message.format.version value
	MessageFormatVersion pulumi.StringPtrInput `pulumi:"messageFormatVersion"`
	// message.timestamp.difference.max.ms value
	MessageTimestampDifferenceMaxMs pulumi.StringPtrInput `pulumi:"messageTimestampDifferenceMaxMs"`
	// message.timestamp.type value
	MessageTimestampType pulumi.StringPtrInput `pulumi:"messageTimestampType"`
	// min.cleanable.dirty.ratio value
	MinCleanableDirtyRatio pulumi.StringPtrInput `pulumi:"minCleanableDirtyRatio"`
	// min.compaction.lag.ms value
	MinCompactionLagMs pulumi.StringPtrInput `pulumi:"minCompactionLagMs"`
	// min.insync.replicas value
	MinInsyncReplicas pulumi.StringPtrInput `pulumi:"minInsyncReplicas"`
	// preallocate value
	Preallocate pulumi.StringPtrInput `pulumi:"preallocate"`
	// retention.bytes value
	RetentionBytes pulumi.StringPtrInput `pulumi:"retentionBytes"`
	// retention.ms value
	RetentionMs pulumi.StringPtrInput `pulumi:"retentionMs"`
	// segment.bytes value
	SegmentBytes pulumi.StringPtrInput `pulumi:"segmentBytes"`
	// segment.index.bytes value
	SegmentIndexBytes pulumi.StringPtrInput `pulumi:"segmentIndexBytes"`
	// segment.jitter.ms value
	SegmentJitterMs pulumi.StringPtrInput `pulumi:"segmentJitterMs"`
	// segment.ms value
	SegmentMs pulumi.StringPtrInput `pulumi:"segmentMs"`
	// unclean.leader.election.enable value
	UncleanLeaderElectionEnable pulumi.StringPtrInput `pulumi:"uncleanLeaderElectionEnable"`
}

func (GetKafkaTopicConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaTopicConfig)(nil)).Elem()
}

func (i GetKafkaTopicConfigArgs) ToGetKafkaTopicConfigOutput() GetKafkaTopicConfigOutput {
	return i.ToGetKafkaTopicConfigOutputWithContext(context.Background())
}

func (i GetKafkaTopicConfigArgs) ToGetKafkaTopicConfigOutputWithContext(ctx context.Context) GetKafkaTopicConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaTopicConfigOutput)
}

type GetKafkaTopicConfigOutput struct{ *pulumi.OutputState }

func (GetKafkaTopicConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaTopicConfig)(nil)).Elem()
}

func (o GetKafkaTopicConfigOutput) ToGetKafkaTopicConfigOutput() GetKafkaTopicConfigOutput {
	return o
}

func (o GetKafkaTopicConfigOutput) ToGetKafkaTopicConfigOutputWithContext(ctx context.Context) GetKafkaTopicConfigOutput {
	return o
}

// cleanup.policy value, can be `create`, `delete` or `compact,delete`
func (o GetKafkaTopicConfigOutput) CleanupPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaTopicConfig) *string { return v.CleanupPolicy }).(pulumi.StringPtrOutput)
}

// compression.type value
func (o GetKafkaTopicConfigOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaTopicConfig) *string { return v.CompressionType }).(pulumi.StringPtrOutput)
}

// delete.retention.ms value
func (o GetKafkaTopicConfigOutput) DeleteRetentionMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaTopicConfig) *string { return v.DeleteRetentionMs }).(pulumi.StringPtrOutput)
}

// file.delete.delay.ms value
func (o GetKafkaTopicConfigOutput) FileDeleteDelayMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaTopicConfig) *string { return v.FileDeleteDelayMs }).(pulumi.StringPtrOutput)
}

// flush.messages value
func (o GetKafkaTopicConfigOutput) FlushMessages() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaTopicConfig) *string { return v.FlushMessages }).(pulumi.StringPtrOutput)
}

// flush.ms value
func (o GetKafkaTopicConfigOutput) FlushMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaTopicConfig) *string { return v.FlushMs }).(pulumi.StringPtrOutput)
}

// index.interval.bytes value
func (o GetKafkaTopicConfigOutput) IndexIntervalBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaTopicConfig) *string { return v.IndexIntervalBytes }).(pulumi.StringPtrOutput)
}

// max.compaction.lag.ms value
func (o GetKafkaTopicConfigOutput) MaxCompactionLagMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaTopicConfig) *string { return v.MaxCompactionLagMs }).(pulumi.StringPtrOutput)
}

// max.message.bytes value
func (o GetKafkaTopicConfigOutput) MaxMessageBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaTopicConfig) *string { return v.MaxMessageBytes }).(pulumi.StringPtrOutput)
}

// message.downconversion.enable value
func (o GetKafkaTopicConfigOutput) MessageDownconversionEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaTopicConfig) *string { return v.MessageDownconversionEnable }).(pulumi.StringPtrOutput)
}

// message.format.version value
func (o GetKafkaTopicConfigOutput) MessageFormatVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaTopicConfig) *string { return v.MessageFormatVersion }).(pulumi.StringPtrOutput)
}

// message.timestamp.difference.max.ms value
func (o GetKafkaTopicConfigOutput) MessageTimestampDifferenceMaxMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaTopicConfig) *string { return v.MessageTimestampDifferenceMaxMs }).(pulumi.StringPtrOutput)
}

// message.timestamp.type value
func (o GetKafkaTopicConfigOutput) MessageTimestampType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaTopicConfig) *string { return v.MessageTimestampType }).(pulumi.StringPtrOutput)
}

// min.cleanable.dirty.ratio value
func (o GetKafkaTopicConfigOutput) MinCleanableDirtyRatio() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaTopicConfig) *string { return v.MinCleanableDirtyRatio }).(pulumi.StringPtrOutput)
}

// min.compaction.lag.ms value
func (o GetKafkaTopicConfigOutput) MinCompactionLagMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaTopicConfig) *string { return v.MinCompactionLagMs }).(pulumi.StringPtrOutput)
}

// min.insync.replicas value
func (o GetKafkaTopicConfigOutput) MinInsyncReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaTopicConfig) *string { return v.MinInsyncReplicas }).(pulumi.StringPtrOutput)
}

// preallocate value
func (o GetKafkaTopicConfigOutput) Preallocate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaTopicConfig) *string { return v.Preallocate }).(pulumi.StringPtrOutput)
}

// retention.bytes value
func (o GetKafkaTopicConfigOutput) RetentionBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaTopicConfig) *string { return v.RetentionBytes }).(pulumi.StringPtrOutput)
}

// retention.ms value
func (o GetKafkaTopicConfigOutput) RetentionMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaTopicConfig) *string { return v.RetentionMs }).(pulumi.StringPtrOutput)
}

// segment.bytes value
func (o GetKafkaTopicConfigOutput) SegmentBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaTopicConfig) *string { return v.SegmentBytes }).(pulumi.StringPtrOutput)
}

// segment.index.bytes value
func (o GetKafkaTopicConfigOutput) SegmentIndexBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaTopicConfig) *string { return v.SegmentIndexBytes }).(pulumi.StringPtrOutput)
}

// segment.jitter.ms value
func (o GetKafkaTopicConfigOutput) SegmentJitterMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaTopicConfig) *string { return v.SegmentJitterMs }).(pulumi.StringPtrOutput)
}

// segment.ms value
func (o GetKafkaTopicConfigOutput) SegmentMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaTopicConfig) *string { return v.SegmentMs }).(pulumi.StringPtrOutput)
}

// unclean.leader.election.enable value
func (o GetKafkaTopicConfigOutput) UncleanLeaderElectionEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaTopicConfig) *string { return v.UncleanLeaderElectionEnable }).(pulumi.StringPtrOutput)
}

type GetKafkaTopicTag struct {
	Key   string  `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// GetKafkaTopicTagInput is an input type that accepts GetKafkaTopicTagArgs and GetKafkaTopicTagOutput values.
// You can construct a concrete instance of `GetKafkaTopicTagInput` via:
//
//          GetKafkaTopicTagArgs{...}
type GetKafkaTopicTagInput interface {
	pulumi.Input

	ToGetKafkaTopicTagOutput() GetKafkaTopicTagOutput
	ToGetKafkaTopicTagOutputWithContext(context.Context) GetKafkaTopicTagOutput
}

type GetKafkaTopicTagArgs struct {
	Key   pulumi.StringInput    `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetKafkaTopicTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaTopicTag)(nil)).Elem()
}

func (i GetKafkaTopicTagArgs) ToGetKafkaTopicTagOutput() GetKafkaTopicTagOutput {
	return i.ToGetKafkaTopicTagOutputWithContext(context.Background())
}

func (i GetKafkaTopicTagArgs) ToGetKafkaTopicTagOutputWithContext(ctx context.Context) GetKafkaTopicTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaTopicTagOutput)
}

// GetKafkaTopicTagArrayInput is an input type that accepts GetKafkaTopicTagArray and GetKafkaTopicTagArrayOutput values.
// You can construct a concrete instance of `GetKafkaTopicTagArrayInput` via:
//
//          GetKafkaTopicTagArray{ GetKafkaTopicTagArgs{...} }
type GetKafkaTopicTagArrayInput interface {
	pulumi.Input

	ToGetKafkaTopicTagArrayOutput() GetKafkaTopicTagArrayOutput
	ToGetKafkaTopicTagArrayOutputWithContext(context.Context) GetKafkaTopicTagArrayOutput
}

type GetKafkaTopicTagArray []GetKafkaTopicTagInput

func (GetKafkaTopicTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaTopicTag)(nil)).Elem()
}

func (i GetKafkaTopicTagArray) ToGetKafkaTopicTagArrayOutput() GetKafkaTopicTagArrayOutput {
	return i.ToGetKafkaTopicTagArrayOutputWithContext(context.Background())
}

func (i GetKafkaTopicTagArray) ToGetKafkaTopicTagArrayOutputWithContext(ctx context.Context) GetKafkaTopicTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaTopicTagArrayOutput)
}

type GetKafkaTopicTagOutput struct{ *pulumi.OutputState }

func (GetKafkaTopicTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaTopicTag)(nil)).Elem()
}

func (o GetKafkaTopicTagOutput) ToGetKafkaTopicTagOutput() GetKafkaTopicTagOutput {
	return o
}

func (o GetKafkaTopicTagOutput) ToGetKafkaTopicTagOutputWithContext(ctx context.Context) GetKafkaTopicTagOutput {
	return o
}

func (o GetKafkaTopicTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaTopicTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o GetKafkaTopicTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKafkaTopicTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetKafkaTopicTagArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaTopicTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaTopicTag)(nil)).Elem()
}

func (o GetKafkaTopicTagArrayOutput) ToGetKafkaTopicTagArrayOutput() GetKafkaTopicTagArrayOutput {
	return o
}

func (o GetKafkaTopicTagArrayOutput) ToGetKafkaTopicTagArrayOutputWithContext(ctx context.Context) GetKafkaTopicTagArrayOutput {
	return o
}

func (o GetKafkaTopicTagArrayOutput) Index(i pulumi.IntInput) GetKafkaTopicTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaTopicTag {
		return vs[0].([]GetKafkaTopicTag)[vs[1].(int)]
	}).(GetKafkaTopicTagOutput)
}

type GetM3AggregatorComponent struct {
	Component                 string `pulumi:"component"`
	Host                      string `pulumi:"host"`
	KafkaAuthenticationMethod string `pulumi:"kafkaAuthenticationMethod"`
	Port                      int    `pulumi:"port"`
	Route                     string `pulumi:"route"`
	Ssl                       bool   `pulumi:"ssl"`
	Usage                     string `pulumi:"usage"`
}

// GetM3AggregatorComponentInput is an input type that accepts GetM3AggregatorComponentArgs and GetM3AggregatorComponentOutput values.
// You can construct a concrete instance of `GetM3AggregatorComponentInput` via:
//
//          GetM3AggregatorComponentArgs{...}
type GetM3AggregatorComponentInput interface {
	pulumi.Input

	ToGetM3AggregatorComponentOutput() GetM3AggregatorComponentOutput
	ToGetM3AggregatorComponentOutputWithContext(context.Context) GetM3AggregatorComponentOutput
}

type GetM3AggregatorComponentArgs struct {
	Component                 pulumi.StringInput `pulumi:"component"`
	Host                      pulumi.StringInput `pulumi:"host"`
	KafkaAuthenticationMethod pulumi.StringInput `pulumi:"kafkaAuthenticationMethod"`
	Port                      pulumi.IntInput    `pulumi:"port"`
	Route                     pulumi.StringInput `pulumi:"route"`
	Ssl                       pulumi.BoolInput   `pulumi:"ssl"`
	Usage                     pulumi.StringInput `pulumi:"usage"`
}

func (GetM3AggregatorComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3AggregatorComponent)(nil)).Elem()
}

func (i GetM3AggregatorComponentArgs) ToGetM3AggregatorComponentOutput() GetM3AggregatorComponentOutput {
	return i.ToGetM3AggregatorComponentOutputWithContext(context.Background())
}

func (i GetM3AggregatorComponentArgs) ToGetM3AggregatorComponentOutputWithContext(ctx context.Context) GetM3AggregatorComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3AggregatorComponentOutput)
}

// GetM3AggregatorComponentArrayInput is an input type that accepts GetM3AggregatorComponentArray and GetM3AggregatorComponentArrayOutput values.
// You can construct a concrete instance of `GetM3AggregatorComponentArrayInput` via:
//
//          GetM3AggregatorComponentArray{ GetM3AggregatorComponentArgs{...} }
type GetM3AggregatorComponentArrayInput interface {
	pulumi.Input

	ToGetM3AggregatorComponentArrayOutput() GetM3AggregatorComponentArrayOutput
	ToGetM3AggregatorComponentArrayOutputWithContext(context.Context) GetM3AggregatorComponentArrayOutput
}

type GetM3AggregatorComponentArray []GetM3AggregatorComponentInput

func (GetM3AggregatorComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetM3AggregatorComponent)(nil)).Elem()
}

func (i GetM3AggregatorComponentArray) ToGetM3AggregatorComponentArrayOutput() GetM3AggregatorComponentArrayOutput {
	return i.ToGetM3AggregatorComponentArrayOutputWithContext(context.Background())
}

func (i GetM3AggregatorComponentArray) ToGetM3AggregatorComponentArrayOutputWithContext(ctx context.Context) GetM3AggregatorComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3AggregatorComponentArrayOutput)
}

type GetM3AggregatorComponentOutput struct{ *pulumi.OutputState }

func (GetM3AggregatorComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3AggregatorComponent)(nil)).Elem()
}

func (o GetM3AggregatorComponentOutput) ToGetM3AggregatorComponentOutput() GetM3AggregatorComponentOutput {
	return o
}

func (o GetM3AggregatorComponentOutput) ToGetM3AggregatorComponentOutputWithContext(ctx context.Context) GetM3AggregatorComponentOutput {
	return o
}

func (o GetM3AggregatorComponentOutput) Component() pulumi.StringOutput {
	return o.ApplyT(func(v GetM3AggregatorComponent) string { return v.Component }).(pulumi.StringOutput)
}

func (o GetM3AggregatorComponentOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetM3AggregatorComponent) string { return v.Host }).(pulumi.StringOutput)
}

func (o GetM3AggregatorComponentOutput) KafkaAuthenticationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetM3AggregatorComponent) string { return v.KafkaAuthenticationMethod }).(pulumi.StringOutput)
}

func (o GetM3AggregatorComponentOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetM3AggregatorComponent) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetM3AggregatorComponentOutput) Route() pulumi.StringOutput {
	return o.ApplyT(func(v GetM3AggregatorComponent) string { return v.Route }).(pulumi.StringOutput)
}

func (o GetM3AggregatorComponentOutput) Ssl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetM3AggregatorComponent) bool { return v.Ssl }).(pulumi.BoolOutput)
}

func (o GetM3AggregatorComponentOutput) Usage() pulumi.StringOutput {
	return o.ApplyT(func(v GetM3AggregatorComponent) string { return v.Usage }).(pulumi.StringOutput)
}

type GetM3AggregatorComponentArrayOutput struct{ *pulumi.OutputState }

func (GetM3AggregatorComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetM3AggregatorComponent)(nil)).Elem()
}

func (o GetM3AggregatorComponentArrayOutput) ToGetM3AggregatorComponentArrayOutput() GetM3AggregatorComponentArrayOutput {
	return o
}

func (o GetM3AggregatorComponentArrayOutput) ToGetM3AggregatorComponentArrayOutputWithContext(ctx context.Context) GetM3AggregatorComponentArrayOutput {
	return o
}

func (o GetM3AggregatorComponentArrayOutput) Index(i pulumi.IntInput) GetM3AggregatorComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetM3AggregatorComponent {
		return vs[0].([]GetM3AggregatorComponent)[vs[1].(int)]
	}).(GetM3AggregatorComponentOutput)
}

type GetM3AggregatorM3aggregator struct {
}

// GetM3AggregatorM3aggregatorInput is an input type that accepts GetM3AggregatorM3aggregatorArgs and GetM3AggregatorM3aggregatorOutput values.
// You can construct a concrete instance of `GetM3AggregatorM3aggregatorInput` via:
//
//          GetM3AggregatorM3aggregatorArgs{...}
type GetM3AggregatorM3aggregatorInput interface {
	pulumi.Input

	ToGetM3AggregatorM3aggregatorOutput() GetM3AggregatorM3aggregatorOutput
	ToGetM3AggregatorM3aggregatorOutputWithContext(context.Context) GetM3AggregatorM3aggregatorOutput
}

type GetM3AggregatorM3aggregatorArgs struct {
}

func (GetM3AggregatorM3aggregatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3AggregatorM3aggregator)(nil)).Elem()
}

func (i GetM3AggregatorM3aggregatorArgs) ToGetM3AggregatorM3aggregatorOutput() GetM3AggregatorM3aggregatorOutput {
	return i.ToGetM3AggregatorM3aggregatorOutputWithContext(context.Background())
}

func (i GetM3AggregatorM3aggregatorArgs) ToGetM3AggregatorM3aggregatorOutputWithContext(ctx context.Context) GetM3AggregatorM3aggregatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3AggregatorM3aggregatorOutput)
}

type GetM3AggregatorM3aggregatorOutput struct{ *pulumi.OutputState }

func (GetM3AggregatorM3aggregatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3AggregatorM3aggregator)(nil)).Elem()
}

func (o GetM3AggregatorM3aggregatorOutput) ToGetM3AggregatorM3aggregatorOutput() GetM3AggregatorM3aggregatorOutput {
	return o
}

func (o GetM3AggregatorM3aggregatorOutput) ToGetM3AggregatorM3aggregatorOutputWithContext(ctx context.Context) GetM3AggregatorM3aggregatorOutput {
	return o
}

type GetM3AggregatorM3aggregatorUserConfig struct {
	// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
	CustomDomain *string `pulumi:"customDomain"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
	IpFilters []string `pulumi:"ipFilters"`
	M3Version *string  `pulumi:"m3Version"`
	// M3 major version
	M3aggregatorVersion *string `pulumi:"m3aggregatorVersion"`
}

// GetM3AggregatorM3aggregatorUserConfigInput is an input type that accepts GetM3AggregatorM3aggregatorUserConfigArgs and GetM3AggregatorM3aggregatorUserConfigOutput values.
// You can construct a concrete instance of `GetM3AggregatorM3aggregatorUserConfigInput` via:
//
//          GetM3AggregatorM3aggregatorUserConfigArgs{...}
type GetM3AggregatorM3aggregatorUserConfigInput interface {
	pulumi.Input

	ToGetM3AggregatorM3aggregatorUserConfigOutput() GetM3AggregatorM3aggregatorUserConfigOutput
	ToGetM3AggregatorM3aggregatorUserConfigOutputWithContext(context.Context) GetM3AggregatorM3aggregatorUserConfigOutput
}

type GetM3AggregatorM3aggregatorUserConfigArgs struct {
	// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
	CustomDomain pulumi.StringPtrInput `pulumi:"customDomain"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	M3Version pulumi.StringPtrInput   `pulumi:"m3Version"`
	// M3 major version
	M3aggregatorVersion pulumi.StringPtrInput `pulumi:"m3aggregatorVersion"`
}

func (GetM3AggregatorM3aggregatorUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3AggregatorM3aggregatorUserConfig)(nil)).Elem()
}

func (i GetM3AggregatorM3aggregatorUserConfigArgs) ToGetM3AggregatorM3aggregatorUserConfigOutput() GetM3AggregatorM3aggregatorUserConfigOutput {
	return i.ToGetM3AggregatorM3aggregatorUserConfigOutputWithContext(context.Background())
}

func (i GetM3AggregatorM3aggregatorUserConfigArgs) ToGetM3AggregatorM3aggregatorUserConfigOutputWithContext(ctx context.Context) GetM3AggregatorM3aggregatorUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3AggregatorM3aggregatorUserConfigOutput)
}

type GetM3AggregatorM3aggregatorUserConfigOutput struct{ *pulumi.OutputState }

func (GetM3AggregatorM3aggregatorUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3AggregatorM3aggregatorUserConfig)(nil)).Elem()
}

func (o GetM3AggregatorM3aggregatorUserConfigOutput) ToGetM3AggregatorM3aggregatorUserConfigOutput() GetM3AggregatorM3aggregatorUserConfigOutput {
	return o
}

func (o GetM3AggregatorM3aggregatorUserConfigOutput) ToGetM3AggregatorM3aggregatorUserConfigOutputWithContext(ctx context.Context) GetM3AggregatorM3aggregatorUserConfigOutput {
	return o
}

// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
func (o GetM3AggregatorM3aggregatorUserConfigOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3AggregatorM3aggregatorUserConfig) *string { return v.CustomDomain }).(pulumi.StringPtrOutput)
}

// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
func (o GetM3AggregatorM3aggregatorUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetM3AggregatorM3aggregatorUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

func (o GetM3AggregatorM3aggregatorUserConfigOutput) M3Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3AggregatorM3aggregatorUserConfig) *string { return v.M3Version }).(pulumi.StringPtrOutput)
}

// M3 major version
func (o GetM3AggregatorM3aggregatorUserConfigOutput) M3aggregatorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3AggregatorM3aggregatorUserConfig) *string { return v.M3aggregatorVersion }).(pulumi.StringPtrOutput)
}

type GetM3AggregatorServiceIntegration struct {
	IntegrationType   string `pulumi:"integrationType"`
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// GetM3AggregatorServiceIntegrationInput is an input type that accepts GetM3AggregatorServiceIntegrationArgs and GetM3AggregatorServiceIntegrationOutput values.
// You can construct a concrete instance of `GetM3AggregatorServiceIntegrationInput` via:
//
//          GetM3AggregatorServiceIntegrationArgs{...}
type GetM3AggregatorServiceIntegrationInput interface {
	pulumi.Input

	ToGetM3AggregatorServiceIntegrationOutput() GetM3AggregatorServiceIntegrationOutput
	ToGetM3AggregatorServiceIntegrationOutputWithContext(context.Context) GetM3AggregatorServiceIntegrationOutput
}

type GetM3AggregatorServiceIntegrationArgs struct {
	IntegrationType   pulumi.StringInput `pulumi:"integrationType"`
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (GetM3AggregatorServiceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3AggregatorServiceIntegration)(nil)).Elem()
}

func (i GetM3AggregatorServiceIntegrationArgs) ToGetM3AggregatorServiceIntegrationOutput() GetM3AggregatorServiceIntegrationOutput {
	return i.ToGetM3AggregatorServiceIntegrationOutputWithContext(context.Background())
}

func (i GetM3AggregatorServiceIntegrationArgs) ToGetM3AggregatorServiceIntegrationOutputWithContext(ctx context.Context) GetM3AggregatorServiceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3AggregatorServiceIntegrationOutput)
}

// GetM3AggregatorServiceIntegrationArrayInput is an input type that accepts GetM3AggregatorServiceIntegrationArray and GetM3AggregatorServiceIntegrationArrayOutput values.
// You can construct a concrete instance of `GetM3AggregatorServiceIntegrationArrayInput` via:
//
//          GetM3AggregatorServiceIntegrationArray{ GetM3AggregatorServiceIntegrationArgs{...} }
type GetM3AggregatorServiceIntegrationArrayInput interface {
	pulumi.Input

	ToGetM3AggregatorServiceIntegrationArrayOutput() GetM3AggregatorServiceIntegrationArrayOutput
	ToGetM3AggregatorServiceIntegrationArrayOutputWithContext(context.Context) GetM3AggregatorServiceIntegrationArrayOutput
}

type GetM3AggregatorServiceIntegrationArray []GetM3AggregatorServiceIntegrationInput

func (GetM3AggregatorServiceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetM3AggregatorServiceIntegration)(nil)).Elem()
}

func (i GetM3AggregatorServiceIntegrationArray) ToGetM3AggregatorServiceIntegrationArrayOutput() GetM3AggregatorServiceIntegrationArrayOutput {
	return i.ToGetM3AggregatorServiceIntegrationArrayOutputWithContext(context.Background())
}

func (i GetM3AggregatorServiceIntegrationArray) ToGetM3AggregatorServiceIntegrationArrayOutputWithContext(ctx context.Context) GetM3AggregatorServiceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3AggregatorServiceIntegrationArrayOutput)
}

type GetM3AggregatorServiceIntegrationOutput struct{ *pulumi.OutputState }

func (GetM3AggregatorServiceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3AggregatorServiceIntegration)(nil)).Elem()
}

func (o GetM3AggregatorServiceIntegrationOutput) ToGetM3AggregatorServiceIntegrationOutput() GetM3AggregatorServiceIntegrationOutput {
	return o
}

func (o GetM3AggregatorServiceIntegrationOutput) ToGetM3AggregatorServiceIntegrationOutputWithContext(ctx context.Context) GetM3AggregatorServiceIntegrationOutput {
	return o
}

func (o GetM3AggregatorServiceIntegrationOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetM3AggregatorServiceIntegration) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o GetM3AggregatorServiceIntegrationOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetM3AggregatorServiceIntegration) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

type GetM3AggregatorServiceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (GetM3AggregatorServiceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetM3AggregatorServiceIntegration)(nil)).Elem()
}

func (o GetM3AggregatorServiceIntegrationArrayOutput) ToGetM3AggregatorServiceIntegrationArrayOutput() GetM3AggregatorServiceIntegrationArrayOutput {
	return o
}

func (o GetM3AggregatorServiceIntegrationArrayOutput) ToGetM3AggregatorServiceIntegrationArrayOutputWithContext(ctx context.Context) GetM3AggregatorServiceIntegrationArrayOutput {
	return o
}

func (o GetM3AggregatorServiceIntegrationArrayOutput) Index(i pulumi.IntInput) GetM3AggregatorServiceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetM3AggregatorServiceIntegration {
		return vs[0].([]GetM3AggregatorServiceIntegration)[vs[1].(int)]
	}).(GetM3AggregatorServiceIntegrationOutput)
}

type GetM3DbComponent struct {
	Component                 string `pulumi:"component"`
	Host                      string `pulumi:"host"`
	KafkaAuthenticationMethod string `pulumi:"kafkaAuthenticationMethod"`
	Port                      int    `pulumi:"port"`
	Route                     string `pulumi:"route"`
	Ssl                       bool   `pulumi:"ssl"`
	Usage                     string `pulumi:"usage"`
}

// GetM3DbComponentInput is an input type that accepts GetM3DbComponentArgs and GetM3DbComponentOutput values.
// You can construct a concrete instance of `GetM3DbComponentInput` via:
//
//          GetM3DbComponentArgs{...}
type GetM3DbComponentInput interface {
	pulumi.Input

	ToGetM3DbComponentOutput() GetM3DbComponentOutput
	ToGetM3DbComponentOutputWithContext(context.Context) GetM3DbComponentOutput
}

type GetM3DbComponentArgs struct {
	Component                 pulumi.StringInput `pulumi:"component"`
	Host                      pulumi.StringInput `pulumi:"host"`
	KafkaAuthenticationMethod pulumi.StringInput `pulumi:"kafkaAuthenticationMethod"`
	Port                      pulumi.IntInput    `pulumi:"port"`
	Route                     pulumi.StringInput `pulumi:"route"`
	Ssl                       pulumi.BoolInput   `pulumi:"ssl"`
	Usage                     pulumi.StringInput `pulumi:"usage"`
}

func (GetM3DbComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3DbComponent)(nil)).Elem()
}

func (i GetM3DbComponentArgs) ToGetM3DbComponentOutput() GetM3DbComponentOutput {
	return i.ToGetM3DbComponentOutputWithContext(context.Background())
}

func (i GetM3DbComponentArgs) ToGetM3DbComponentOutputWithContext(ctx context.Context) GetM3DbComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbComponentOutput)
}

// GetM3DbComponentArrayInput is an input type that accepts GetM3DbComponentArray and GetM3DbComponentArrayOutput values.
// You can construct a concrete instance of `GetM3DbComponentArrayInput` via:
//
//          GetM3DbComponentArray{ GetM3DbComponentArgs{...} }
type GetM3DbComponentArrayInput interface {
	pulumi.Input

	ToGetM3DbComponentArrayOutput() GetM3DbComponentArrayOutput
	ToGetM3DbComponentArrayOutputWithContext(context.Context) GetM3DbComponentArrayOutput
}

type GetM3DbComponentArray []GetM3DbComponentInput

func (GetM3DbComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetM3DbComponent)(nil)).Elem()
}

func (i GetM3DbComponentArray) ToGetM3DbComponentArrayOutput() GetM3DbComponentArrayOutput {
	return i.ToGetM3DbComponentArrayOutputWithContext(context.Background())
}

func (i GetM3DbComponentArray) ToGetM3DbComponentArrayOutputWithContext(ctx context.Context) GetM3DbComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbComponentArrayOutput)
}

type GetM3DbComponentOutput struct{ *pulumi.OutputState }

func (GetM3DbComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3DbComponent)(nil)).Elem()
}

func (o GetM3DbComponentOutput) ToGetM3DbComponentOutput() GetM3DbComponentOutput {
	return o
}

func (o GetM3DbComponentOutput) ToGetM3DbComponentOutputWithContext(ctx context.Context) GetM3DbComponentOutput {
	return o
}

func (o GetM3DbComponentOutput) Component() pulumi.StringOutput {
	return o.ApplyT(func(v GetM3DbComponent) string { return v.Component }).(pulumi.StringOutput)
}

func (o GetM3DbComponentOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetM3DbComponent) string { return v.Host }).(pulumi.StringOutput)
}

func (o GetM3DbComponentOutput) KafkaAuthenticationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetM3DbComponent) string { return v.KafkaAuthenticationMethod }).(pulumi.StringOutput)
}

func (o GetM3DbComponentOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetM3DbComponent) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetM3DbComponentOutput) Route() pulumi.StringOutput {
	return o.ApplyT(func(v GetM3DbComponent) string { return v.Route }).(pulumi.StringOutput)
}

func (o GetM3DbComponentOutput) Ssl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetM3DbComponent) bool { return v.Ssl }).(pulumi.BoolOutput)
}

func (o GetM3DbComponentOutput) Usage() pulumi.StringOutput {
	return o.ApplyT(func(v GetM3DbComponent) string { return v.Usage }).(pulumi.StringOutput)
}

type GetM3DbComponentArrayOutput struct{ *pulumi.OutputState }

func (GetM3DbComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetM3DbComponent)(nil)).Elem()
}

func (o GetM3DbComponentArrayOutput) ToGetM3DbComponentArrayOutput() GetM3DbComponentArrayOutput {
	return o
}

func (o GetM3DbComponentArrayOutput) ToGetM3DbComponentArrayOutputWithContext(ctx context.Context) GetM3DbComponentArrayOutput {
	return o
}

func (o GetM3DbComponentArrayOutput) Index(i pulumi.IntInput) GetM3DbComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetM3DbComponent {
		return vs[0].([]GetM3DbComponent)[vs[1].(int)]
	}).(GetM3DbComponentOutput)
}

type GetM3DbM3db struct {
}

// GetM3DbM3dbInput is an input type that accepts GetM3DbM3dbArgs and GetM3DbM3dbOutput values.
// You can construct a concrete instance of `GetM3DbM3dbInput` via:
//
//          GetM3DbM3dbArgs{...}
type GetM3DbM3dbInput interface {
	pulumi.Input

	ToGetM3DbM3dbOutput() GetM3DbM3dbOutput
	ToGetM3DbM3dbOutputWithContext(context.Context) GetM3DbM3dbOutput
}

type GetM3DbM3dbArgs struct {
}

func (GetM3DbM3dbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3DbM3db)(nil)).Elem()
}

func (i GetM3DbM3dbArgs) ToGetM3DbM3dbOutput() GetM3DbM3dbOutput {
	return i.ToGetM3DbM3dbOutputWithContext(context.Background())
}

func (i GetM3DbM3dbArgs) ToGetM3DbM3dbOutputWithContext(ctx context.Context) GetM3DbM3dbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbM3dbOutput)
}

type GetM3DbM3dbOutput struct{ *pulumi.OutputState }

func (GetM3DbM3dbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3DbM3db)(nil)).Elem()
}

func (o GetM3DbM3dbOutput) ToGetM3DbM3dbOutput() GetM3DbM3dbOutput {
	return o
}

func (o GetM3DbM3dbOutput) ToGetM3DbM3dbOutputWithContext(ctx context.Context) GetM3DbM3dbOutput {
	return o
}

type GetM3DbM3dbUserConfig struct {
	// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
	CustomDomain *string `pulumi:"customDomain"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
	IpFilters []string `pulumi:"ipFilters"`
	// M3 limits
	Limits    *GetM3DbM3dbUserConfigLimits `pulumi:"limits"`
	M3Version *string                      `pulumi:"m3Version"`
	// Enables access to Graphite Carbon
	// plaintext metrics ingestion. It can be enabled only for services inside VPCs. The
	// metrics are written to aggregated namespaces only.
	M3coordinatorEnableGraphiteCarbonIngest *string `pulumi:"m3coordinatorEnableGraphiteCarbonIngest"`
	// M3 major version
	M3dbVersion *string `pulumi:"m3dbVersion"`
	// List of M3 namespaces
	Namespaces []GetM3DbM3dbUserConfigNamespace `pulumi:"namespaces"`
	// Allow access to selected service ports from private networks.
	PrivateAccess *GetM3DbM3dbUserConfigPrivateAccess `pulumi:"privateAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom *string `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet.
	PublicAccess *GetM3DbM3dbUserConfigPublicAccess `pulumi:"publicAccess"`
	// Mapping rules allow more granular use of aggregation, not simply sending
	// everything to a namespace. If mapping rules exist that target a namespace, only data matching mapping
	// rules will be sent to it and nothing else.
	Rules *GetM3DbM3dbUserConfigRules `pulumi:"rules"`
	// Name of another service to fork from. This has effect only
	// when a new service is being created.
	ServiceToForkFrom *string `pulumi:"serviceToForkFrom"`
}

// GetM3DbM3dbUserConfigInput is an input type that accepts GetM3DbM3dbUserConfigArgs and GetM3DbM3dbUserConfigOutput values.
// You can construct a concrete instance of `GetM3DbM3dbUserConfigInput` via:
//
//          GetM3DbM3dbUserConfigArgs{...}
type GetM3DbM3dbUserConfigInput interface {
	pulumi.Input

	ToGetM3DbM3dbUserConfigOutput() GetM3DbM3dbUserConfigOutput
	ToGetM3DbM3dbUserConfigOutputWithContext(context.Context) GetM3DbM3dbUserConfigOutput
}

type GetM3DbM3dbUserConfigArgs struct {
	// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
	CustomDomain pulumi.StringPtrInput `pulumi:"customDomain"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// M3 limits
	Limits    GetM3DbM3dbUserConfigLimitsPtrInput `pulumi:"limits"`
	M3Version pulumi.StringPtrInput               `pulumi:"m3Version"`
	// Enables access to Graphite Carbon
	// plaintext metrics ingestion. It can be enabled only for services inside VPCs. The
	// metrics are written to aggregated namespaces only.
	M3coordinatorEnableGraphiteCarbonIngest pulumi.StringPtrInput `pulumi:"m3coordinatorEnableGraphiteCarbonIngest"`
	// M3 major version
	M3dbVersion pulumi.StringPtrInput `pulumi:"m3dbVersion"`
	// List of M3 namespaces
	Namespaces GetM3DbM3dbUserConfigNamespaceArrayInput `pulumi:"namespaces"`
	// Allow access to selected service ports from private networks.
	PrivateAccess GetM3DbM3dbUserConfigPrivateAccessPtrInput `pulumi:"privateAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom pulumi.StringPtrInput `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet.
	PublicAccess GetM3DbM3dbUserConfigPublicAccessPtrInput `pulumi:"publicAccess"`
	// Mapping rules allow more granular use of aggregation, not simply sending
	// everything to a namespace. If mapping rules exist that target a namespace, only data matching mapping
	// rules will be sent to it and nothing else.
	Rules GetM3DbM3dbUserConfigRulesPtrInput `pulumi:"rules"`
	// Name of another service to fork from. This has effect only
	// when a new service is being created.
	ServiceToForkFrom pulumi.StringPtrInput `pulumi:"serviceToForkFrom"`
}

func (GetM3DbM3dbUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3DbM3dbUserConfig)(nil)).Elem()
}

func (i GetM3DbM3dbUserConfigArgs) ToGetM3DbM3dbUserConfigOutput() GetM3DbM3dbUserConfigOutput {
	return i.ToGetM3DbM3dbUserConfigOutputWithContext(context.Background())
}

func (i GetM3DbM3dbUserConfigArgs) ToGetM3DbM3dbUserConfigOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbM3dbUserConfigOutput)
}

type GetM3DbM3dbUserConfigOutput struct{ *pulumi.OutputState }

func (GetM3DbM3dbUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3DbM3dbUserConfig)(nil)).Elem()
}

func (o GetM3DbM3dbUserConfigOutput) ToGetM3DbM3dbUserConfigOutput() GetM3DbM3dbUserConfigOutput {
	return o
}

func (o GetM3DbM3dbUserConfigOutput) ToGetM3DbM3dbUserConfigOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigOutput {
	return o
}

// Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
func (o GetM3DbM3dbUserConfigOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfig) *string { return v.CustomDomain }).(pulumi.StringPtrOutput)
}

// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
func (o GetM3DbM3dbUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// M3 limits
func (o GetM3DbM3dbUserConfigOutput) Limits() GetM3DbM3dbUserConfigLimitsPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfig) *GetM3DbM3dbUserConfigLimits { return v.Limits }).(GetM3DbM3dbUserConfigLimitsPtrOutput)
}

func (o GetM3DbM3dbUserConfigOutput) M3Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfig) *string { return v.M3Version }).(pulumi.StringPtrOutput)
}

// Enables access to Graphite Carbon
// plaintext metrics ingestion. It can be enabled only for services inside VPCs. The
// metrics are written to aggregated namespaces only.
func (o GetM3DbM3dbUserConfigOutput) M3coordinatorEnableGraphiteCarbonIngest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfig) *string { return v.M3coordinatorEnableGraphiteCarbonIngest }).(pulumi.StringPtrOutput)
}

// M3 major version
func (o GetM3DbM3dbUserConfigOutput) M3dbVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfig) *string { return v.M3dbVersion }).(pulumi.StringPtrOutput)
}

// List of M3 namespaces
func (o GetM3DbM3dbUserConfigOutput) Namespaces() GetM3DbM3dbUserConfigNamespaceArrayOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfig) []GetM3DbM3dbUserConfigNamespace { return v.Namespaces }).(GetM3DbM3dbUserConfigNamespaceArrayOutput)
}

// Allow access to selected service ports from private networks.
func (o GetM3DbM3dbUserConfigOutput) PrivateAccess() GetM3DbM3dbUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfig) *GetM3DbM3dbUserConfigPrivateAccess { return v.PrivateAccess }).(GetM3DbM3dbUserConfigPrivateAccessPtrOutput)
}

// Name of another project to fork a service from. This has
// effect only when a new service is being created.
func (o GetM3DbM3dbUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from the public Internet.
func (o GetM3DbM3dbUserConfigOutput) PublicAccess() GetM3DbM3dbUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfig) *GetM3DbM3dbUserConfigPublicAccess { return v.PublicAccess }).(GetM3DbM3dbUserConfigPublicAccessPtrOutput)
}

// Mapping rules allow more granular use of aggregation, not simply sending
// everything to a namespace. If mapping rules exist that target a namespace, only data matching mapping
// rules will be sent to it and nothing else.
func (o GetM3DbM3dbUserConfigOutput) Rules() GetM3DbM3dbUserConfigRulesPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfig) *GetM3DbM3dbUserConfigRules { return v.Rules }).(GetM3DbM3dbUserConfigRulesPtrOutput)
}

// Name of another service to fork from. This has effect only
// when a new service is being created.
func (o GetM3DbM3dbUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

type GetM3DbM3dbUserConfigLimits struct {
	// The maximum number of data points fetched during request
	GlobalDatapoints *string `pulumi:"globalDatapoints"`
	// The maximum number of data points fetched in single query
	QueryDatapoints *string `pulumi:"queryDatapoints"`
	// When query limits are exceeded, whether to return error
	// (if True) or return partial results (False)
	QueryRequireExhaustive *string `pulumi:"queryRequireExhaustive"`
	// The maximum number of series fetched in single query
	QuerySeries *string `pulumi:"querySeries"`
}

// GetM3DbM3dbUserConfigLimitsInput is an input type that accepts GetM3DbM3dbUserConfigLimitsArgs and GetM3DbM3dbUserConfigLimitsOutput values.
// You can construct a concrete instance of `GetM3DbM3dbUserConfigLimitsInput` via:
//
//          GetM3DbM3dbUserConfigLimitsArgs{...}
type GetM3DbM3dbUserConfigLimitsInput interface {
	pulumi.Input

	ToGetM3DbM3dbUserConfigLimitsOutput() GetM3DbM3dbUserConfigLimitsOutput
	ToGetM3DbM3dbUserConfigLimitsOutputWithContext(context.Context) GetM3DbM3dbUserConfigLimitsOutput
}

type GetM3DbM3dbUserConfigLimitsArgs struct {
	// The maximum number of data points fetched during request
	GlobalDatapoints pulumi.StringPtrInput `pulumi:"globalDatapoints"`
	// The maximum number of data points fetched in single query
	QueryDatapoints pulumi.StringPtrInput `pulumi:"queryDatapoints"`
	// When query limits are exceeded, whether to return error
	// (if True) or return partial results (False)
	QueryRequireExhaustive pulumi.StringPtrInput `pulumi:"queryRequireExhaustive"`
	// The maximum number of series fetched in single query
	QuerySeries pulumi.StringPtrInput `pulumi:"querySeries"`
}

func (GetM3DbM3dbUserConfigLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3DbM3dbUserConfigLimits)(nil)).Elem()
}

func (i GetM3DbM3dbUserConfigLimitsArgs) ToGetM3DbM3dbUserConfigLimitsOutput() GetM3DbM3dbUserConfigLimitsOutput {
	return i.ToGetM3DbM3dbUserConfigLimitsOutputWithContext(context.Background())
}

func (i GetM3DbM3dbUserConfigLimitsArgs) ToGetM3DbM3dbUserConfigLimitsOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbM3dbUserConfigLimitsOutput)
}

func (i GetM3DbM3dbUserConfigLimitsArgs) ToGetM3DbM3dbUserConfigLimitsPtrOutput() GetM3DbM3dbUserConfigLimitsPtrOutput {
	return i.ToGetM3DbM3dbUserConfigLimitsPtrOutputWithContext(context.Background())
}

func (i GetM3DbM3dbUserConfigLimitsArgs) ToGetM3DbM3dbUserConfigLimitsPtrOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbM3dbUserConfigLimitsOutput).ToGetM3DbM3dbUserConfigLimitsPtrOutputWithContext(ctx)
}

// GetM3DbM3dbUserConfigLimitsPtrInput is an input type that accepts GetM3DbM3dbUserConfigLimitsArgs, GetM3DbM3dbUserConfigLimitsPtr and GetM3DbM3dbUserConfigLimitsPtrOutput values.
// You can construct a concrete instance of `GetM3DbM3dbUserConfigLimitsPtrInput` via:
//
//          GetM3DbM3dbUserConfigLimitsArgs{...}
//
//  or:
//
//          nil
type GetM3DbM3dbUserConfigLimitsPtrInput interface {
	pulumi.Input

	ToGetM3DbM3dbUserConfigLimitsPtrOutput() GetM3DbM3dbUserConfigLimitsPtrOutput
	ToGetM3DbM3dbUserConfigLimitsPtrOutputWithContext(context.Context) GetM3DbM3dbUserConfigLimitsPtrOutput
}

type getM3DbM3dbUserConfigLimitsPtrType GetM3DbM3dbUserConfigLimitsArgs

func GetM3DbM3dbUserConfigLimitsPtr(v *GetM3DbM3dbUserConfigLimitsArgs) GetM3DbM3dbUserConfigLimitsPtrInput {
	return (*getM3DbM3dbUserConfigLimitsPtrType)(v)
}

func (*getM3DbM3dbUserConfigLimitsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetM3DbM3dbUserConfigLimits)(nil)).Elem()
}

func (i *getM3DbM3dbUserConfigLimitsPtrType) ToGetM3DbM3dbUserConfigLimitsPtrOutput() GetM3DbM3dbUserConfigLimitsPtrOutput {
	return i.ToGetM3DbM3dbUserConfigLimitsPtrOutputWithContext(context.Background())
}

func (i *getM3DbM3dbUserConfigLimitsPtrType) ToGetM3DbM3dbUserConfigLimitsPtrOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbM3dbUserConfigLimitsPtrOutput)
}

type GetM3DbM3dbUserConfigLimitsOutput struct{ *pulumi.OutputState }

func (GetM3DbM3dbUserConfigLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3DbM3dbUserConfigLimits)(nil)).Elem()
}

func (o GetM3DbM3dbUserConfigLimitsOutput) ToGetM3DbM3dbUserConfigLimitsOutput() GetM3DbM3dbUserConfigLimitsOutput {
	return o
}

func (o GetM3DbM3dbUserConfigLimitsOutput) ToGetM3DbM3dbUserConfigLimitsOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigLimitsOutput {
	return o
}

func (o GetM3DbM3dbUserConfigLimitsOutput) ToGetM3DbM3dbUserConfigLimitsPtrOutput() GetM3DbM3dbUserConfigLimitsPtrOutput {
	return o.ToGetM3DbM3dbUserConfigLimitsPtrOutputWithContext(context.Background())
}

func (o GetM3DbM3dbUserConfigLimitsOutput) ToGetM3DbM3dbUserConfigLimitsPtrOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigLimitsPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigLimits) *GetM3DbM3dbUserConfigLimits {
		return &v
	}).(GetM3DbM3dbUserConfigLimitsPtrOutput)
}

// The maximum number of data points fetched during request
func (o GetM3DbM3dbUserConfigLimitsOutput) GlobalDatapoints() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigLimits) *string { return v.GlobalDatapoints }).(pulumi.StringPtrOutput)
}

// The maximum number of data points fetched in single query
func (o GetM3DbM3dbUserConfigLimitsOutput) QueryDatapoints() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigLimits) *string { return v.QueryDatapoints }).(pulumi.StringPtrOutput)
}

// When query limits are exceeded, whether to return error
// (if True) or return partial results (False)
func (o GetM3DbM3dbUserConfigLimitsOutput) QueryRequireExhaustive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigLimits) *string { return v.QueryRequireExhaustive }).(pulumi.StringPtrOutput)
}

// The maximum number of series fetched in single query
func (o GetM3DbM3dbUserConfigLimitsOutput) QuerySeries() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigLimits) *string { return v.QuerySeries }).(pulumi.StringPtrOutput)
}

type GetM3DbM3dbUserConfigLimitsPtrOutput struct{ *pulumi.OutputState }

func (GetM3DbM3dbUserConfigLimitsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetM3DbM3dbUserConfigLimits)(nil)).Elem()
}

func (o GetM3DbM3dbUserConfigLimitsPtrOutput) ToGetM3DbM3dbUserConfigLimitsPtrOutput() GetM3DbM3dbUserConfigLimitsPtrOutput {
	return o
}

func (o GetM3DbM3dbUserConfigLimitsPtrOutput) ToGetM3DbM3dbUserConfigLimitsPtrOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigLimitsPtrOutput {
	return o
}

func (o GetM3DbM3dbUserConfigLimitsPtrOutput) Elem() GetM3DbM3dbUserConfigLimitsOutput {
	return o.ApplyT(func(v *GetM3DbM3dbUserConfigLimits) GetM3DbM3dbUserConfigLimits { return *v }).(GetM3DbM3dbUserConfigLimitsOutput)
}

// The maximum number of data points fetched during request
func (o GetM3DbM3dbUserConfigLimitsPtrOutput) GlobalDatapoints() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetM3DbM3dbUserConfigLimits) *string {
		if v == nil {
			return nil
		}
		return v.GlobalDatapoints
	}).(pulumi.StringPtrOutput)
}

// The maximum number of data points fetched in single query
func (o GetM3DbM3dbUserConfigLimitsPtrOutput) QueryDatapoints() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetM3DbM3dbUserConfigLimits) *string {
		if v == nil {
			return nil
		}
		return v.QueryDatapoints
	}).(pulumi.StringPtrOutput)
}

// When query limits are exceeded, whether to return error
// (if True) or return partial results (False)
func (o GetM3DbM3dbUserConfigLimitsPtrOutput) QueryRequireExhaustive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetM3DbM3dbUserConfigLimits) *string {
		if v == nil {
			return nil
		}
		return v.QueryRequireExhaustive
	}).(pulumi.StringPtrOutput)
}

// The maximum number of series fetched in single query
func (o GetM3DbM3dbUserConfigLimitsPtrOutput) QuerySeries() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetM3DbM3dbUserConfigLimits) *string {
		if v == nil {
			return nil
		}
		return v.QuerySeries
	}).(pulumi.StringPtrOutput)
}

type GetM3DbM3dbUserConfigNamespace struct {
	// The name of the namespace
	Name *string `pulumi:"name"`
	// Namespace options
	Options *GetM3DbM3dbUserConfigNamespaceOptions `pulumi:"options"`
	// The resolution for an aggregated namespace
	Resolution *string `pulumi:"resolution"`
	// The type of aggregation (aggregated/unaggregated)
	Type *string `pulumi:"type"`
}

// GetM3DbM3dbUserConfigNamespaceInput is an input type that accepts GetM3DbM3dbUserConfigNamespaceArgs and GetM3DbM3dbUserConfigNamespaceOutput values.
// You can construct a concrete instance of `GetM3DbM3dbUserConfigNamespaceInput` via:
//
//          GetM3DbM3dbUserConfigNamespaceArgs{...}
type GetM3DbM3dbUserConfigNamespaceInput interface {
	pulumi.Input

	ToGetM3DbM3dbUserConfigNamespaceOutput() GetM3DbM3dbUserConfigNamespaceOutput
	ToGetM3DbM3dbUserConfigNamespaceOutputWithContext(context.Context) GetM3DbM3dbUserConfigNamespaceOutput
}

type GetM3DbM3dbUserConfigNamespaceArgs struct {
	// The name of the namespace
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace options
	Options GetM3DbM3dbUserConfigNamespaceOptionsPtrInput `pulumi:"options"`
	// The resolution for an aggregated namespace
	Resolution pulumi.StringPtrInput `pulumi:"resolution"`
	// The type of aggregation (aggregated/unaggregated)
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetM3DbM3dbUserConfigNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3DbM3dbUserConfigNamespace)(nil)).Elem()
}

func (i GetM3DbM3dbUserConfigNamespaceArgs) ToGetM3DbM3dbUserConfigNamespaceOutput() GetM3DbM3dbUserConfigNamespaceOutput {
	return i.ToGetM3DbM3dbUserConfigNamespaceOutputWithContext(context.Background())
}

func (i GetM3DbM3dbUserConfigNamespaceArgs) ToGetM3DbM3dbUserConfigNamespaceOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbM3dbUserConfigNamespaceOutput)
}

// GetM3DbM3dbUserConfigNamespaceArrayInput is an input type that accepts GetM3DbM3dbUserConfigNamespaceArray and GetM3DbM3dbUserConfigNamespaceArrayOutput values.
// You can construct a concrete instance of `GetM3DbM3dbUserConfigNamespaceArrayInput` via:
//
//          GetM3DbM3dbUserConfigNamespaceArray{ GetM3DbM3dbUserConfigNamespaceArgs{...} }
type GetM3DbM3dbUserConfigNamespaceArrayInput interface {
	pulumi.Input

	ToGetM3DbM3dbUserConfigNamespaceArrayOutput() GetM3DbM3dbUserConfigNamespaceArrayOutput
	ToGetM3DbM3dbUserConfigNamespaceArrayOutputWithContext(context.Context) GetM3DbM3dbUserConfigNamespaceArrayOutput
}

type GetM3DbM3dbUserConfigNamespaceArray []GetM3DbM3dbUserConfigNamespaceInput

func (GetM3DbM3dbUserConfigNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetM3DbM3dbUserConfigNamespace)(nil)).Elem()
}

func (i GetM3DbM3dbUserConfigNamespaceArray) ToGetM3DbM3dbUserConfigNamespaceArrayOutput() GetM3DbM3dbUserConfigNamespaceArrayOutput {
	return i.ToGetM3DbM3dbUserConfigNamespaceArrayOutputWithContext(context.Background())
}

func (i GetM3DbM3dbUserConfigNamespaceArray) ToGetM3DbM3dbUserConfigNamespaceArrayOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbM3dbUserConfigNamespaceArrayOutput)
}

type GetM3DbM3dbUserConfigNamespaceOutput struct{ *pulumi.OutputState }

func (GetM3DbM3dbUserConfigNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3DbM3dbUserConfigNamespace)(nil)).Elem()
}

func (o GetM3DbM3dbUserConfigNamespaceOutput) ToGetM3DbM3dbUserConfigNamespaceOutput() GetM3DbM3dbUserConfigNamespaceOutput {
	return o
}

func (o GetM3DbM3dbUserConfigNamespaceOutput) ToGetM3DbM3dbUserConfigNamespaceOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigNamespaceOutput {
	return o
}

// The name of the namespace
func (o GetM3DbM3dbUserConfigNamespaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigNamespace) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace options
func (o GetM3DbM3dbUserConfigNamespaceOutput) Options() GetM3DbM3dbUserConfigNamespaceOptionsPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigNamespace) *GetM3DbM3dbUserConfigNamespaceOptions { return v.Options }).(GetM3DbM3dbUserConfigNamespaceOptionsPtrOutput)
}

// The resolution for an aggregated namespace
func (o GetM3DbM3dbUserConfigNamespaceOutput) Resolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigNamespace) *string { return v.Resolution }).(pulumi.StringPtrOutput)
}

// The type of aggregation (aggregated/unaggregated)
func (o GetM3DbM3dbUserConfigNamespaceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigNamespace) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GetM3DbM3dbUserConfigNamespaceArrayOutput struct{ *pulumi.OutputState }

func (GetM3DbM3dbUserConfigNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetM3DbM3dbUserConfigNamespace)(nil)).Elem()
}

func (o GetM3DbM3dbUserConfigNamespaceArrayOutput) ToGetM3DbM3dbUserConfigNamespaceArrayOutput() GetM3DbM3dbUserConfigNamespaceArrayOutput {
	return o
}

func (o GetM3DbM3dbUserConfigNamespaceArrayOutput) ToGetM3DbM3dbUserConfigNamespaceArrayOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigNamespaceArrayOutput {
	return o
}

func (o GetM3DbM3dbUserConfigNamespaceArrayOutput) Index(i pulumi.IntInput) GetM3DbM3dbUserConfigNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetM3DbM3dbUserConfigNamespace {
		return vs[0].([]GetM3DbM3dbUserConfigNamespace)[vs[1].(int)]
	}).(GetM3DbM3dbUserConfigNamespaceOutput)
}

type GetM3DbM3dbUserConfigNamespaceOptions struct {
	// Retention options
	RetentionOptions *GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptions `pulumi:"retentionOptions"`
	// Controls whether M3DB will create snapshot files for
	// this namespace
	SnapshotEnabled *string `pulumi:"snapshotEnabled"`
	// Controls whether M3DB will include writes to this
	// namespace in the commitlog.
	WritesToCommitlog *string `pulumi:"writesToCommitlog"`
}

// GetM3DbM3dbUserConfigNamespaceOptionsInput is an input type that accepts GetM3DbM3dbUserConfigNamespaceOptionsArgs and GetM3DbM3dbUserConfigNamespaceOptionsOutput values.
// You can construct a concrete instance of `GetM3DbM3dbUserConfigNamespaceOptionsInput` via:
//
//          GetM3DbM3dbUserConfigNamespaceOptionsArgs{...}
type GetM3DbM3dbUserConfigNamespaceOptionsInput interface {
	pulumi.Input

	ToGetM3DbM3dbUserConfigNamespaceOptionsOutput() GetM3DbM3dbUserConfigNamespaceOptionsOutput
	ToGetM3DbM3dbUserConfigNamespaceOptionsOutputWithContext(context.Context) GetM3DbM3dbUserConfigNamespaceOptionsOutput
}

type GetM3DbM3dbUserConfigNamespaceOptionsArgs struct {
	// Retention options
	RetentionOptions GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrInput `pulumi:"retentionOptions"`
	// Controls whether M3DB will create snapshot files for
	// this namespace
	SnapshotEnabled pulumi.StringPtrInput `pulumi:"snapshotEnabled"`
	// Controls whether M3DB will include writes to this
	// namespace in the commitlog.
	WritesToCommitlog pulumi.StringPtrInput `pulumi:"writesToCommitlog"`
}

func (GetM3DbM3dbUserConfigNamespaceOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3DbM3dbUserConfigNamespaceOptions)(nil)).Elem()
}

func (i GetM3DbM3dbUserConfigNamespaceOptionsArgs) ToGetM3DbM3dbUserConfigNamespaceOptionsOutput() GetM3DbM3dbUserConfigNamespaceOptionsOutput {
	return i.ToGetM3DbM3dbUserConfigNamespaceOptionsOutputWithContext(context.Background())
}

func (i GetM3DbM3dbUserConfigNamespaceOptionsArgs) ToGetM3DbM3dbUserConfigNamespaceOptionsOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigNamespaceOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbM3dbUserConfigNamespaceOptionsOutput)
}

func (i GetM3DbM3dbUserConfigNamespaceOptionsArgs) ToGetM3DbM3dbUserConfigNamespaceOptionsPtrOutput() GetM3DbM3dbUserConfigNamespaceOptionsPtrOutput {
	return i.ToGetM3DbM3dbUserConfigNamespaceOptionsPtrOutputWithContext(context.Background())
}

func (i GetM3DbM3dbUserConfigNamespaceOptionsArgs) ToGetM3DbM3dbUserConfigNamespaceOptionsPtrOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigNamespaceOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbM3dbUserConfigNamespaceOptionsOutput).ToGetM3DbM3dbUserConfigNamespaceOptionsPtrOutputWithContext(ctx)
}

// GetM3DbM3dbUserConfigNamespaceOptionsPtrInput is an input type that accepts GetM3DbM3dbUserConfigNamespaceOptionsArgs, GetM3DbM3dbUserConfigNamespaceOptionsPtr and GetM3DbM3dbUserConfigNamespaceOptionsPtrOutput values.
// You can construct a concrete instance of `GetM3DbM3dbUserConfigNamespaceOptionsPtrInput` via:
//
//          GetM3DbM3dbUserConfigNamespaceOptionsArgs{...}
//
//  or:
//
//          nil
type GetM3DbM3dbUserConfigNamespaceOptionsPtrInput interface {
	pulumi.Input

	ToGetM3DbM3dbUserConfigNamespaceOptionsPtrOutput() GetM3DbM3dbUserConfigNamespaceOptionsPtrOutput
	ToGetM3DbM3dbUserConfigNamespaceOptionsPtrOutputWithContext(context.Context) GetM3DbM3dbUserConfigNamespaceOptionsPtrOutput
}

type getM3DbM3dbUserConfigNamespaceOptionsPtrType GetM3DbM3dbUserConfigNamespaceOptionsArgs

func GetM3DbM3dbUserConfigNamespaceOptionsPtr(v *GetM3DbM3dbUserConfigNamespaceOptionsArgs) GetM3DbM3dbUserConfigNamespaceOptionsPtrInput {
	return (*getM3DbM3dbUserConfigNamespaceOptionsPtrType)(v)
}

func (*getM3DbM3dbUserConfigNamespaceOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetM3DbM3dbUserConfigNamespaceOptions)(nil)).Elem()
}

func (i *getM3DbM3dbUserConfigNamespaceOptionsPtrType) ToGetM3DbM3dbUserConfigNamespaceOptionsPtrOutput() GetM3DbM3dbUserConfigNamespaceOptionsPtrOutput {
	return i.ToGetM3DbM3dbUserConfigNamespaceOptionsPtrOutputWithContext(context.Background())
}

func (i *getM3DbM3dbUserConfigNamespaceOptionsPtrType) ToGetM3DbM3dbUserConfigNamespaceOptionsPtrOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigNamespaceOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbM3dbUserConfigNamespaceOptionsPtrOutput)
}

type GetM3DbM3dbUserConfigNamespaceOptionsOutput struct{ *pulumi.OutputState }

func (GetM3DbM3dbUserConfigNamespaceOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3DbM3dbUserConfigNamespaceOptions)(nil)).Elem()
}

func (o GetM3DbM3dbUserConfigNamespaceOptionsOutput) ToGetM3DbM3dbUserConfigNamespaceOptionsOutput() GetM3DbM3dbUserConfigNamespaceOptionsOutput {
	return o
}

func (o GetM3DbM3dbUserConfigNamespaceOptionsOutput) ToGetM3DbM3dbUserConfigNamespaceOptionsOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigNamespaceOptionsOutput {
	return o
}

func (o GetM3DbM3dbUserConfigNamespaceOptionsOutput) ToGetM3DbM3dbUserConfigNamespaceOptionsPtrOutput() GetM3DbM3dbUserConfigNamespaceOptionsPtrOutput {
	return o.ToGetM3DbM3dbUserConfigNamespaceOptionsPtrOutputWithContext(context.Background())
}

func (o GetM3DbM3dbUserConfigNamespaceOptionsOutput) ToGetM3DbM3dbUserConfigNamespaceOptionsPtrOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigNamespaceOptionsPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigNamespaceOptions) *GetM3DbM3dbUserConfigNamespaceOptions {
		return &v
	}).(GetM3DbM3dbUserConfigNamespaceOptionsPtrOutput)
}

// Retention options
func (o GetM3DbM3dbUserConfigNamespaceOptionsOutput) RetentionOptions() GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigNamespaceOptions) *GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptions {
		return v.RetentionOptions
	}).(GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput)
}

// Controls whether M3DB will create snapshot files for
// this namespace
func (o GetM3DbM3dbUserConfigNamespaceOptionsOutput) SnapshotEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigNamespaceOptions) *string { return v.SnapshotEnabled }).(pulumi.StringPtrOutput)
}

// Controls whether M3DB will include writes to this
// namespace in the commitlog.
func (o GetM3DbM3dbUserConfigNamespaceOptionsOutput) WritesToCommitlog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigNamespaceOptions) *string { return v.WritesToCommitlog }).(pulumi.StringPtrOutput)
}

type GetM3DbM3dbUserConfigNamespaceOptionsPtrOutput struct{ *pulumi.OutputState }

func (GetM3DbM3dbUserConfigNamespaceOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetM3DbM3dbUserConfigNamespaceOptions)(nil)).Elem()
}

func (o GetM3DbM3dbUserConfigNamespaceOptionsPtrOutput) ToGetM3DbM3dbUserConfigNamespaceOptionsPtrOutput() GetM3DbM3dbUserConfigNamespaceOptionsPtrOutput {
	return o
}

func (o GetM3DbM3dbUserConfigNamespaceOptionsPtrOutput) ToGetM3DbM3dbUserConfigNamespaceOptionsPtrOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigNamespaceOptionsPtrOutput {
	return o
}

func (o GetM3DbM3dbUserConfigNamespaceOptionsPtrOutput) Elem() GetM3DbM3dbUserConfigNamespaceOptionsOutput {
	return o.ApplyT(func(v *GetM3DbM3dbUserConfigNamespaceOptions) GetM3DbM3dbUserConfigNamespaceOptions { return *v }).(GetM3DbM3dbUserConfigNamespaceOptionsOutput)
}

// Retention options
func (o GetM3DbM3dbUserConfigNamespaceOptionsPtrOutput) RetentionOptions() GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput {
	return o.ApplyT(func(v *GetM3DbM3dbUserConfigNamespaceOptions) *GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptions {
		if v == nil {
			return nil
		}
		return v.RetentionOptions
	}).(GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput)
}

// Controls whether M3DB will create snapshot files for
// this namespace
func (o GetM3DbM3dbUserConfigNamespaceOptionsPtrOutput) SnapshotEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetM3DbM3dbUserConfigNamespaceOptions) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotEnabled
	}).(pulumi.StringPtrOutput)
}

// Controls whether M3DB will include writes to this
// namespace in the commitlog.
func (o GetM3DbM3dbUserConfigNamespaceOptionsPtrOutput) WritesToCommitlog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetM3DbM3dbUserConfigNamespaceOptions) *string {
		if v == nil {
			return nil
		}
		return v.WritesToCommitlog
	}).(pulumi.StringPtrOutput)
}

type GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptions struct {
	// Controls how long we wait before expiring stale data
	BlockDataExpiryDuration *string `pulumi:"blockDataExpiryDuration"`
	// Controls how long to keep a block in memory before
	// flushing to a fileset on disk
	BlocksizeDuration *string `pulumi:"blocksizeDuration"`
	// Controls how far into the future writes to
	// the namespace will be accepted
	BufferFutureDuration *string `pulumi:"bufferFutureDuration"`
	// Controls how far into the past writes to the
	// namespace will be accepted
	BufferPastDuration *string `pulumi:"bufferPastDuration"`
	// Controls the duration of time that M3DB will
	// retain data for the namespace
	RetentionPeriodDuration *string `pulumi:"retentionPeriodDuration"`
}

// GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsInput is an input type that accepts GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsArgs and GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput values.
// You can construct a concrete instance of `GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsInput` via:
//
//          GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsArgs{...}
type GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsInput interface {
	pulumi.Input

	ToGetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput() GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput
	ToGetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutputWithContext(context.Context) GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput
}

type GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsArgs struct {
	// Controls how long we wait before expiring stale data
	BlockDataExpiryDuration pulumi.StringPtrInput `pulumi:"blockDataExpiryDuration"`
	// Controls how long to keep a block in memory before
	// flushing to a fileset on disk
	BlocksizeDuration pulumi.StringPtrInput `pulumi:"blocksizeDuration"`
	// Controls how far into the future writes to
	// the namespace will be accepted
	BufferFutureDuration pulumi.StringPtrInput `pulumi:"bufferFutureDuration"`
	// Controls how far into the past writes to the
	// namespace will be accepted
	BufferPastDuration pulumi.StringPtrInput `pulumi:"bufferPastDuration"`
	// Controls the duration of time that M3DB will
	// retain data for the namespace
	RetentionPeriodDuration pulumi.StringPtrInput `pulumi:"retentionPeriodDuration"`
}

func (GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptions)(nil)).Elem()
}

func (i GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsArgs) ToGetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput() GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput {
	return i.ToGetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutputWithContext(context.Background())
}

func (i GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsArgs) ToGetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput)
}

func (i GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsArgs) ToGetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput() GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput {
	return i.ToGetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutputWithContext(context.Background())
}

func (i GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsArgs) ToGetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput).ToGetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutputWithContext(ctx)
}

// GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrInput is an input type that accepts GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsArgs, GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtr and GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput values.
// You can construct a concrete instance of `GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrInput` via:
//
//          GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsArgs{...}
//
//  or:
//
//          nil
type GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrInput interface {
	pulumi.Input

	ToGetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput() GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput
	ToGetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutputWithContext(context.Context) GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput
}

type getM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrType GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsArgs

func GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtr(v *GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsArgs) GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrInput {
	return (*getM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrType)(v)
}

func (*getM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptions)(nil)).Elem()
}

func (i *getM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrType) ToGetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput() GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput {
	return i.ToGetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutputWithContext(context.Background())
}

func (i *getM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrType) ToGetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput)
}

type GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput struct{ *pulumi.OutputState }

func (GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptions)(nil)).Elem()
}

func (o GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput) ToGetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput() GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput {
	return o
}

func (o GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput) ToGetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput {
	return o
}

func (o GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput) ToGetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput() GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput {
	return o.ToGetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutputWithContext(context.Background())
}

func (o GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput) ToGetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptions) *GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptions {
		return &v
	}).(GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput)
}

// Controls how long we wait before expiring stale data
func (o GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput) BlockDataExpiryDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptions) *string {
		return v.BlockDataExpiryDuration
	}).(pulumi.StringPtrOutput)
}

// Controls how long to keep a block in memory before
// flushing to a fileset on disk
func (o GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput) BlocksizeDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptions) *string { return v.BlocksizeDuration }).(pulumi.StringPtrOutput)
}

// Controls how far into the future writes to
// the namespace will be accepted
func (o GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput) BufferFutureDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptions) *string { return v.BufferFutureDuration }).(pulumi.StringPtrOutput)
}

// Controls how far into the past writes to the
// namespace will be accepted
func (o GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput) BufferPastDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptions) *string { return v.BufferPastDuration }).(pulumi.StringPtrOutput)
}

// Controls the duration of time that M3DB will
// retain data for the namespace
func (o GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput) RetentionPeriodDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptions) *string {
		return v.RetentionPeriodDuration
	}).(pulumi.StringPtrOutput)
}

type GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput struct{ *pulumi.OutputState }

func (GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptions)(nil)).Elem()
}

func (o GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput) ToGetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput() GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput {
	return o
}

func (o GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput) ToGetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput {
	return o
}

func (o GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput) Elem() GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput {
	return o.ApplyT(func(v *GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptions) GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptions {
		return *v
	}).(GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput)
}

// Controls how long we wait before expiring stale data
func (o GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput) BlockDataExpiryDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptions) *string {
		if v == nil {
			return nil
		}
		return v.BlockDataExpiryDuration
	}).(pulumi.StringPtrOutput)
}

// Controls how long to keep a block in memory before
// flushing to a fileset on disk
func (o GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput) BlocksizeDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptions) *string {
		if v == nil {
			return nil
		}
		return v.BlocksizeDuration
	}).(pulumi.StringPtrOutput)
}

// Controls how far into the future writes to
// the namespace will be accepted
func (o GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput) BufferFutureDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptions) *string {
		if v == nil {
			return nil
		}
		return v.BufferFutureDuration
	}).(pulumi.StringPtrOutput)
}

// Controls how far into the past writes to the
// namespace will be accepted
func (o GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput) BufferPastDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptions) *string {
		if v == nil {
			return nil
		}
		return v.BufferPastDuration
	}).(pulumi.StringPtrOutput)
}

// Controls the duration of time that M3DB will
// retain data for the namespace
func (o GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput) RetentionPeriodDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptions) *string {
		if v == nil {
			return nil
		}
		return v.RetentionPeriodDuration
	}).(pulumi.StringPtrOutput)
}

type GetM3DbM3dbUserConfigPrivateAccess struct {
	// Allow clients to connect to m3coordinator from the public internet
	// for service nodes that are in a project VPC or another type of private network.
	M3coordinator *string `pulumi:"m3coordinator"`
}

// GetM3DbM3dbUserConfigPrivateAccessInput is an input type that accepts GetM3DbM3dbUserConfigPrivateAccessArgs and GetM3DbM3dbUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `GetM3DbM3dbUserConfigPrivateAccessInput` via:
//
//          GetM3DbM3dbUserConfigPrivateAccessArgs{...}
type GetM3DbM3dbUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToGetM3DbM3dbUserConfigPrivateAccessOutput() GetM3DbM3dbUserConfigPrivateAccessOutput
	ToGetM3DbM3dbUserConfigPrivateAccessOutputWithContext(context.Context) GetM3DbM3dbUserConfigPrivateAccessOutput
}

type GetM3DbM3dbUserConfigPrivateAccessArgs struct {
	// Allow clients to connect to m3coordinator from the public internet
	// for service nodes that are in a project VPC or another type of private network.
	M3coordinator pulumi.StringPtrInput `pulumi:"m3coordinator"`
}

func (GetM3DbM3dbUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3DbM3dbUserConfigPrivateAccess)(nil)).Elem()
}

func (i GetM3DbM3dbUserConfigPrivateAccessArgs) ToGetM3DbM3dbUserConfigPrivateAccessOutput() GetM3DbM3dbUserConfigPrivateAccessOutput {
	return i.ToGetM3DbM3dbUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i GetM3DbM3dbUserConfigPrivateAccessArgs) ToGetM3DbM3dbUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbM3dbUserConfigPrivateAccessOutput)
}

func (i GetM3DbM3dbUserConfigPrivateAccessArgs) ToGetM3DbM3dbUserConfigPrivateAccessPtrOutput() GetM3DbM3dbUserConfigPrivateAccessPtrOutput {
	return i.ToGetM3DbM3dbUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i GetM3DbM3dbUserConfigPrivateAccessArgs) ToGetM3DbM3dbUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbM3dbUserConfigPrivateAccessOutput).ToGetM3DbM3dbUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// GetM3DbM3dbUserConfigPrivateAccessPtrInput is an input type that accepts GetM3DbM3dbUserConfigPrivateAccessArgs, GetM3DbM3dbUserConfigPrivateAccessPtr and GetM3DbM3dbUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `GetM3DbM3dbUserConfigPrivateAccessPtrInput` via:
//
//          GetM3DbM3dbUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type GetM3DbM3dbUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToGetM3DbM3dbUserConfigPrivateAccessPtrOutput() GetM3DbM3dbUserConfigPrivateAccessPtrOutput
	ToGetM3DbM3dbUserConfigPrivateAccessPtrOutputWithContext(context.Context) GetM3DbM3dbUserConfigPrivateAccessPtrOutput
}

type getM3DbM3dbUserConfigPrivateAccessPtrType GetM3DbM3dbUserConfigPrivateAccessArgs

func GetM3DbM3dbUserConfigPrivateAccessPtr(v *GetM3DbM3dbUserConfigPrivateAccessArgs) GetM3DbM3dbUserConfigPrivateAccessPtrInput {
	return (*getM3DbM3dbUserConfigPrivateAccessPtrType)(v)
}

func (*getM3DbM3dbUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetM3DbM3dbUserConfigPrivateAccess)(nil)).Elem()
}

func (i *getM3DbM3dbUserConfigPrivateAccessPtrType) ToGetM3DbM3dbUserConfigPrivateAccessPtrOutput() GetM3DbM3dbUserConfigPrivateAccessPtrOutput {
	return i.ToGetM3DbM3dbUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *getM3DbM3dbUserConfigPrivateAccessPtrType) ToGetM3DbM3dbUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbM3dbUserConfigPrivateAccessPtrOutput)
}

type GetM3DbM3dbUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (GetM3DbM3dbUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3DbM3dbUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetM3DbM3dbUserConfigPrivateAccessOutput) ToGetM3DbM3dbUserConfigPrivateAccessOutput() GetM3DbM3dbUserConfigPrivateAccessOutput {
	return o
}

func (o GetM3DbM3dbUserConfigPrivateAccessOutput) ToGetM3DbM3dbUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigPrivateAccessOutput {
	return o
}

func (o GetM3DbM3dbUserConfigPrivateAccessOutput) ToGetM3DbM3dbUserConfigPrivateAccessPtrOutput() GetM3DbM3dbUserConfigPrivateAccessPtrOutput {
	return o.ToGetM3DbM3dbUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o GetM3DbM3dbUserConfigPrivateAccessOutput) ToGetM3DbM3dbUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigPrivateAccess) *GetM3DbM3dbUserConfigPrivateAccess {
		return &v
	}).(GetM3DbM3dbUserConfigPrivateAccessPtrOutput)
}

// Allow clients to connect to m3coordinator from the public internet
// for service nodes that are in a project VPC or another type of private network.
func (o GetM3DbM3dbUserConfigPrivateAccessOutput) M3coordinator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigPrivateAccess) *string { return v.M3coordinator }).(pulumi.StringPtrOutput)
}

type GetM3DbM3dbUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (GetM3DbM3dbUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetM3DbM3dbUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetM3DbM3dbUserConfigPrivateAccessPtrOutput) ToGetM3DbM3dbUserConfigPrivateAccessPtrOutput() GetM3DbM3dbUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetM3DbM3dbUserConfigPrivateAccessPtrOutput) ToGetM3DbM3dbUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetM3DbM3dbUserConfigPrivateAccessPtrOutput) Elem() GetM3DbM3dbUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *GetM3DbM3dbUserConfigPrivateAccess) GetM3DbM3dbUserConfigPrivateAccess { return *v }).(GetM3DbM3dbUserConfigPrivateAccessOutput)
}

// Allow clients to connect to m3coordinator from the public internet
// for service nodes that are in a project VPC or another type of private network.
func (o GetM3DbM3dbUserConfigPrivateAccessPtrOutput) M3coordinator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetM3DbM3dbUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.M3coordinator
	}).(pulumi.StringPtrOutput)
}

type GetM3DbM3dbUserConfigPublicAccess struct {
	// Allow clients to connect to m3coordinator from the public internet
	// for service nodes that are in a project VPC or another type of private network.
	M3coordinator *string `pulumi:"m3coordinator"`
}

// GetM3DbM3dbUserConfigPublicAccessInput is an input type that accepts GetM3DbM3dbUserConfigPublicAccessArgs and GetM3DbM3dbUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `GetM3DbM3dbUserConfigPublicAccessInput` via:
//
//          GetM3DbM3dbUserConfigPublicAccessArgs{...}
type GetM3DbM3dbUserConfigPublicAccessInput interface {
	pulumi.Input

	ToGetM3DbM3dbUserConfigPublicAccessOutput() GetM3DbM3dbUserConfigPublicAccessOutput
	ToGetM3DbM3dbUserConfigPublicAccessOutputWithContext(context.Context) GetM3DbM3dbUserConfigPublicAccessOutput
}

type GetM3DbM3dbUserConfigPublicAccessArgs struct {
	// Allow clients to connect to m3coordinator from the public internet
	// for service nodes that are in a project VPC or another type of private network.
	M3coordinator pulumi.StringPtrInput `pulumi:"m3coordinator"`
}

func (GetM3DbM3dbUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3DbM3dbUserConfigPublicAccess)(nil)).Elem()
}

func (i GetM3DbM3dbUserConfigPublicAccessArgs) ToGetM3DbM3dbUserConfigPublicAccessOutput() GetM3DbM3dbUserConfigPublicAccessOutput {
	return i.ToGetM3DbM3dbUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i GetM3DbM3dbUserConfigPublicAccessArgs) ToGetM3DbM3dbUserConfigPublicAccessOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbM3dbUserConfigPublicAccessOutput)
}

func (i GetM3DbM3dbUserConfigPublicAccessArgs) ToGetM3DbM3dbUserConfigPublicAccessPtrOutput() GetM3DbM3dbUserConfigPublicAccessPtrOutput {
	return i.ToGetM3DbM3dbUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i GetM3DbM3dbUserConfigPublicAccessArgs) ToGetM3DbM3dbUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbM3dbUserConfigPublicAccessOutput).ToGetM3DbM3dbUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// GetM3DbM3dbUserConfigPublicAccessPtrInput is an input type that accepts GetM3DbM3dbUserConfigPublicAccessArgs, GetM3DbM3dbUserConfigPublicAccessPtr and GetM3DbM3dbUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `GetM3DbM3dbUserConfigPublicAccessPtrInput` via:
//
//          GetM3DbM3dbUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type GetM3DbM3dbUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToGetM3DbM3dbUserConfigPublicAccessPtrOutput() GetM3DbM3dbUserConfigPublicAccessPtrOutput
	ToGetM3DbM3dbUserConfigPublicAccessPtrOutputWithContext(context.Context) GetM3DbM3dbUserConfigPublicAccessPtrOutput
}

type getM3DbM3dbUserConfigPublicAccessPtrType GetM3DbM3dbUserConfigPublicAccessArgs

func GetM3DbM3dbUserConfigPublicAccessPtr(v *GetM3DbM3dbUserConfigPublicAccessArgs) GetM3DbM3dbUserConfigPublicAccessPtrInput {
	return (*getM3DbM3dbUserConfigPublicAccessPtrType)(v)
}

func (*getM3DbM3dbUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetM3DbM3dbUserConfigPublicAccess)(nil)).Elem()
}

func (i *getM3DbM3dbUserConfigPublicAccessPtrType) ToGetM3DbM3dbUserConfigPublicAccessPtrOutput() GetM3DbM3dbUserConfigPublicAccessPtrOutput {
	return i.ToGetM3DbM3dbUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *getM3DbM3dbUserConfigPublicAccessPtrType) ToGetM3DbM3dbUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbM3dbUserConfigPublicAccessPtrOutput)
}

type GetM3DbM3dbUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (GetM3DbM3dbUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3DbM3dbUserConfigPublicAccess)(nil)).Elem()
}

func (o GetM3DbM3dbUserConfigPublicAccessOutput) ToGetM3DbM3dbUserConfigPublicAccessOutput() GetM3DbM3dbUserConfigPublicAccessOutput {
	return o
}

func (o GetM3DbM3dbUserConfigPublicAccessOutput) ToGetM3DbM3dbUserConfigPublicAccessOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigPublicAccessOutput {
	return o
}

func (o GetM3DbM3dbUserConfigPublicAccessOutput) ToGetM3DbM3dbUserConfigPublicAccessPtrOutput() GetM3DbM3dbUserConfigPublicAccessPtrOutput {
	return o.ToGetM3DbM3dbUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o GetM3DbM3dbUserConfigPublicAccessOutput) ToGetM3DbM3dbUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigPublicAccess) *GetM3DbM3dbUserConfigPublicAccess {
		return &v
	}).(GetM3DbM3dbUserConfigPublicAccessPtrOutput)
}

// Allow clients to connect to m3coordinator from the public internet
// for service nodes that are in a project VPC or another type of private network.
func (o GetM3DbM3dbUserConfigPublicAccessOutput) M3coordinator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigPublicAccess) *string { return v.M3coordinator }).(pulumi.StringPtrOutput)
}

type GetM3DbM3dbUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (GetM3DbM3dbUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetM3DbM3dbUserConfigPublicAccess)(nil)).Elem()
}

func (o GetM3DbM3dbUserConfigPublicAccessPtrOutput) ToGetM3DbM3dbUserConfigPublicAccessPtrOutput() GetM3DbM3dbUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetM3DbM3dbUserConfigPublicAccessPtrOutput) ToGetM3DbM3dbUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetM3DbM3dbUserConfigPublicAccessPtrOutput) Elem() GetM3DbM3dbUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *GetM3DbM3dbUserConfigPublicAccess) GetM3DbM3dbUserConfigPublicAccess { return *v }).(GetM3DbM3dbUserConfigPublicAccessOutput)
}

// Allow clients to connect to m3coordinator from the public internet
// for service nodes that are in a project VPC or another type of private network.
func (o GetM3DbM3dbUserConfigPublicAccessPtrOutput) M3coordinator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetM3DbM3dbUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.M3coordinator
	}).(pulumi.StringPtrOutput)
}

type GetM3DbM3dbUserConfigRules struct {
	Mappings []GetM3DbM3dbUserConfigRulesMapping `pulumi:"mappings"`
}

// GetM3DbM3dbUserConfigRulesInput is an input type that accepts GetM3DbM3dbUserConfigRulesArgs and GetM3DbM3dbUserConfigRulesOutput values.
// You can construct a concrete instance of `GetM3DbM3dbUserConfigRulesInput` via:
//
//          GetM3DbM3dbUserConfigRulesArgs{...}
type GetM3DbM3dbUserConfigRulesInput interface {
	pulumi.Input

	ToGetM3DbM3dbUserConfigRulesOutput() GetM3DbM3dbUserConfigRulesOutput
	ToGetM3DbM3dbUserConfigRulesOutputWithContext(context.Context) GetM3DbM3dbUserConfigRulesOutput
}

type GetM3DbM3dbUserConfigRulesArgs struct {
	Mappings GetM3DbM3dbUserConfigRulesMappingArrayInput `pulumi:"mappings"`
}

func (GetM3DbM3dbUserConfigRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3DbM3dbUserConfigRules)(nil)).Elem()
}

func (i GetM3DbM3dbUserConfigRulesArgs) ToGetM3DbM3dbUserConfigRulesOutput() GetM3DbM3dbUserConfigRulesOutput {
	return i.ToGetM3DbM3dbUserConfigRulesOutputWithContext(context.Background())
}

func (i GetM3DbM3dbUserConfigRulesArgs) ToGetM3DbM3dbUserConfigRulesOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbM3dbUserConfigRulesOutput)
}

func (i GetM3DbM3dbUserConfigRulesArgs) ToGetM3DbM3dbUserConfigRulesPtrOutput() GetM3DbM3dbUserConfigRulesPtrOutput {
	return i.ToGetM3DbM3dbUserConfigRulesPtrOutputWithContext(context.Background())
}

func (i GetM3DbM3dbUserConfigRulesArgs) ToGetM3DbM3dbUserConfigRulesPtrOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbM3dbUserConfigRulesOutput).ToGetM3DbM3dbUserConfigRulesPtrOutputWithContext(ctx)
}

// GetM3DbM3dbUserConfigRulesPtrInput is an input type that accepts GetM3DbM3dbUserConfigRulesArgs, GetM3DbM3dbUserConfigRulesPtr and GetM3DbM3dbUserConfigRulesPtrOutput values.
// You can construct a concrete instance of `GetM3DbM3dbUserConfigRulesPtrInput` via:
//
//          GetM3DbM3dbUserConfigRulesArgs{...}
//
//  or:
//
//          nil
type GetM3DbM3dbUserConfigRulesPtrInput interface {
	pulumi.Input

	ToGetM3DbM3dbUserConfigRulesPtrOutput() GetM3DbM3dbUserConfigRulesPtrOutput
	ToGetM3DbM3dbUserConfigRulesPtrOutputWithContext(context.Context) GetM3DbM3dbUserConfigRulesPtrOutput
}

type getM3DbM3dbUserConfigRulesPtrType GetM3DbM3dbUserConfigRulesArgs

func GetM3DbM3dbUserConfigRulesPtr(v *GetM3DbM3dbUserConfigRulesArgs) GetM3DbM3dbUserConfigRulesPtrInput {
	return (*getM3DbM3dbUserConfigRulesPtrType)(v)
}

func (*getM3DbM3dbUserConfigRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetM3DbM3dbUserConfigRules)(nil)).Elem()
}

func (i *getM3DbM3dbUserConfigRulesPtrType) ToGetM3DbM3dbUserConfigRulesPtrOutput() GetM3DbM3dbUserConfigRulesPtrOutput {
	return i.ToGetM3DbM3dbUserConfigRulesPtrOutputWithContext(context.Background())
}

func (i *getM3DbM3dbUserConfigRulesPtrType) ToGetM3DbM3dbUserConfigRulesPtrOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbM3dbUserConfigRulesPtrOutput)
}

type GetM3DbM3dbUserConfigRulesOutput struct{ *pulumi.OutputState }

func (GetM3DbM3dbUserConfigRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3DbM3dbUserConfigRules)(nil)).Elem()
}

func (o GetM3DbM3dbUserConfigRulesOutput) ToGetM3DbM3dbUserConfigRulesOutput() GetM3DbM3dbUserConfigRulesOutput {
	return o
}

func (o GetM3DbM3dbUserConfigRulesOutput) ToGetM3DbM3dbUserConfigRulesOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigRulesOutput {
	return o
}

func (o GetM3DbM3dbUserConfigRulesOutput) ToGetM3DbM3dbUserConfigRulesPtrOutput() GetM3DbM3dbUserConfigRulesPtrOutput {
	return o.ToGetM3DbM3dbUserConfigRulesPtrOutputWithContext(context.Background())
}

func (o GetM3DbM3dbUserConfigRulesOutput) ToGetM3DbM3dbUserConfigRulesPtrOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigRulesPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigRules) *GetM3DbM3dbUserConfigRules {
		return &v
	}).(GetM3DbM3dbUserConfigRulesPtrOutput)
}
func (o GetM3DbM3dbUserConfigRulesOutput) Mappings() GetM3DbM3dbUserConfigRulesMappingArrayOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigRules) []GetM3DbM3dbUserConfigRulesMapping { return v.Mappings }).(GetM3DbM3dbUserConfigRulesMappingArrayOutput)
}

type GetM3DbM3dbUserConfigRulesPtrOutput struct{ *pulumi.OutputState }

func (GetM3DbM3dbUserConfigRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetM3DbM3dbUserConfigRules)(nil)).Elem()
}

func (o GetM3DbM3dbUserConfigRulesPtrOutput) ToGetM3DbM3dbUserConfigRulesPtrOutput() GetM3DbM3dbUserConfigRulesPtrOutput {
	return o
}

func (o GetM3DbM3dbUserConfigRulesPtrOutput) ToGetM3DbM3dbUserConfigRulesPtrOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigRulesPtrOutput {
	return o
}

func (o GetM3DbM3dbUserConfigRulesPtrOutput) Elem() GetM3DbM3dbUserConfigRulesOutput {
	return o.ApplyT(func(v *GetM3DbM3dbUserConfigRules) GetM3DbM3dbUserConfigRules { return *v }).(GetM3DbM3dbUserConfigRulesOutput)
}

func (o GetM3DbM3dbUserConfigRulesPtrOutput) Mappings() GetM3DbM3dbUserConfigRulesMappingArrayOutput {
	return o.ApplyT(func(v *GetM3DbM3dbUserConfigRules) []GetM3DbM3dbUserConfigRulesMapping {
		if v == nil {
			return nil
		}
		return v.Mappings
	}).(GetM3DbM3dbUserConfigRulesMappingArrayOutput)
}

type GetM3DbM3dbUserConfigRulesMapping struct {
	// List of aggregations to be applied
	Aggregations []string `pulumi:"aggregations"`
	// Drop the matching metric; Only store the derived metric (as specified in the roll-up rules), if any.
	Drop *string `pulumi:"drop"`
	// The metrics to be used with this particular rule; Matching metric names with wildcards (using
	// __name__:wildcard) or matching tags and their (optionally wildcarded) values. For value, !
	// can be used at start of value for negation, and multiple filters can be supplied using space as separator.
	Filter *string `pulumi:"filter"`
	// The name of the namespace
	Name *string `pulumi:"name"`
	// List of tags to be appended to matching metrics.
	Tags []GetM3DbM3dbUserConfigRulesMappingTag `pulumi:"tags"`
}

// GetM3DbM3dbUserConfigRulesMappingInput is an input type that accepts GetM3DbM3dbUserConfigRulesMappingArgs and GetM3DbM3dbUserConfigRulesMappingOutput values.
// You can construct a concrete instance of `GetM3DbM3dbUserConfigRulesMappingInput` via:
//
//          GetM3DbM3dbUserConfigRulesMappingArgs{...}
type GetM3DbM3dbUserConfigRulesMappingInput interface {
	pulumi.Input

	ToGetM3DbM3dbUserConfigRulesMappingOutput() GetM3DbM3dbUserConfigRulesMappingOutput
	ToGetM3DbM3dbUserConfigRulesMappingOutputWithContext(context.Context) GetM3DbM3dbUserConfigRulesMappingOutput
}

type GetM3DbM3dbUserConfigRulesMappingArgs struct {
	// List of aggregations to be applied
	Aggregations pulumi.StringArrayInput `pulumi:"aggregations"`
	// Drop the matching metric; Only store the derived metric (as specified in the roll-up rules), if any.
	Drop pulumi.StringPtrInput `pulumi:"drop"`
	// The metrics to be used with this particular rule; Matching metric names with wildcards (using
	// __name__:wildcard) or matching tags and their (optionally wildcarded) values. For value, !
	// can be used at start of value for negation, and multiple filters can be supplied using space as separator.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// The name of the namespace
	Name pulumi.StringPtrInput `pulumi:"name"`
	// List of tags to be appended to matching metrics.
	Tags GetM3DbM3dbUserConfigRulesMappingTagArrayInput `pulumi:"tags"`
}

func (GetM3DbM3dbUserConfigRulesMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3DbM3dbUserConfigRulesMapping)(nil)).Elem()
}

func (i GetM3DbM3dbUserConfigRulesMappingArgs) ToGetM3DbM3dbUserConfigRulesMappingOutput() GetM3DbM3dbUserConfigRulesMappingOutput {
	return i.ToGetM3DbM3dbUserConfigRulesMappingOutputWithContext(context.Background())
}

func (i GetM3DbM3dbUserConfigRulesMappingArgs) ToGetM3DbM3dbUserConfigRulesMappingOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigRulesMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbM3dbUserConfigRulesMappingOutput)
}

// GetM3DbM3dbUserConfigRulesMappingArrayInput is an input type that accepts GetM3DbM3dbUserConfigRulesMappingArray and GetM3DbM3dbUserConfigRulesMappingArrayOutput values.
// You can construct a concrete instance of `GetM3DbM3dbUserConfigRulesMappingArrayInput` via:
//
//          GetM3DbM3dbUserConfigRulesMappingArray{ GetM3DbM3dbUserConfigRulesMappingArgs{...} }
type GetM3DbM3dbUserConfigRulesMappingArrayInput interface {
	pulumi.Input

	ToGetM3DbM3dbUserConfigRulesMappingArrayOutput() GetM3DbM3dbUserConfigRulesMappingArrayOutput
	ToGetM3DbM3dbUserConfigRulesMappingArrayOutputWithContext(context.Context) GetM3DbM3dbUserConfigRulesMappingArrayOutput
}

type GetM3DbM3dbUserConfigRulesMappingArray []GetM3DbM3dbUserConfigRulesMappingInput

func (GetM3DbM3dbUserConfigRulesMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetM3DbM3dbUserConfigRulesMapping)(nil)).Elem()
}

func (i GetM3DbM3dbUserConfigRulesMappingArray) ToGetM3DbM3dbUserConfigRulesMappingArrayOutput() GetM3DbM3dbUserConfigRulesMappingArrayOutput {
	return i.ToGetM3DbM3dbUserConfigRulesMappingArrayOutputWithContext(context.Background())
}

func (i GetM3DbM3dbUserConfigRulesMappingArray) ToGetM3DbM3dbUserConfigRulesMappingArrayOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigRulesMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbM3dbUserConfigRulesMappingArrayOutput)
}

type GetM3DbM3dbUserConfigRulesMappingOutput struct{ *pulumi.OutputState }

func (GetM3DbM3dbUserConfigRulesMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3DbM3dbUserConfigRulesMapping)(nil)).Elem()
}

func (o GetM3DbM3dbUserConfigRulesMappingOutput) ToGetM3DbM3dbUserConfigRulesMappingOutput() GetM3DbM3dbUserConfigRulesMappingOutput {
	return o
}

func (o GetM3DbM3dbUserConfigRulesMappingOutput) ToGetM3DbM3dbUserConfigRulesMappingOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigRulesMappingOutput {
	return o
}

// List of aggregations to be applied
func (o GetM3DbM3dbUserConfigRulesMappingOutput) Aggregations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigRulesMapping) []string { return v.Aggregations }).(pulumi.StringArrayOutput)
}

// Drop the matching metric; Only store the derived metric (as specified in the roll-up rules), if any.
func (o GetM3DbM3dbUserConfigRulesMappingOutput) Drop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigRulesMapping) *string { return v.Drop }).(pulumi.StringPtrOutput)
}

// The metrics to be used with this particular rule; Matching metric names with wildcards (using
// __name__:wildcard) or matching tags and their (optionally wildcarded) values. For value, !
// can be used at start of value for negation, and multiple filters can be supplied using space as separator.
func (o GetM3DbM3dbUserConfigRulesMappingOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigRulesMapping) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// The name of the namespace
func (o GetM3DbM3dbUserConfigRulesMappingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigRulesMapping) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of tags to be appended to matching metrics.
func (o GetM3DbM3dbUserConfigRulesMappingOutput) Tags() GetM3DbM3dbUserConfigRulesMappingTagArrayOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigRulesMapping) []GetM3DbM3dbUserConfigRulesMappingTag { return v.Tags }).(GetM3DbM3dbUserConfigRulesMappingTagArrayOutput)
}

type GetM3DbM3dbUserConfigRulesMappingArrayOutput struct{ *pulumi.OutputState }

func (GetM3DbM3dbUserConfigRulesMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetM3DbM3dbUserConfigRulesMapping)(nil)).Elem()
}

func (o GetM3DbM3dbUserConfigRulesMappingArrayOutput) ToGetM3DbM3dbUserConfigRulesMappingArrayOutput() GetM3DbM3dbUserConfigRulesMappingArrayOutput {
	return o
}

func (o GetM3DbM3dbUserConfigRulesMappingArrayOutput) ToGetM3DbM3dbUserConfigRulesMappingArrayOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigRulesMappingArrayOutput {
	return o
}

func (o GetM3DbM3dbUserConfigRulesMappingArrayOutput) Index(i pulumi.IntInput) GetM3DbM3dbUserConfigRulesMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetM3DbM3dbUserConfigRulesMapping {
		return vs[0].([]GetM3DbM3dbUserConfigRulesMapping)[vs[1].(int)]
	}).(GetM3DbM3dbUserConfigRulesMappingOutput)
}

type GetM3DbM3dbUserConfigRulesMappingTag struct {
	// The name of the namespace
	Name *string `pulumi:"name"`
	// Value of the tag.
	Value *string `pulumi:"value"`
}

// GetM3DbM3dbUserConfigRulesMappingTagInput is an input type that accepts GetM3DbM3dbUserConfigRulesMappingTagArgs and GetM3DbM3dbUserConfigRulesMappingTagOutput values.
// You can construct a concrete instance of `GetM3DbM3dbUserConfigRulesMappingTagInput` via:
//
//          GetM3DbM3dbUserConfigRulesMappingTagArgs{...}
type GetM3DbM3dbUserConfigRulesMappingTagInput interface {
	pulumi.Input

	ToGetM3DbM3dbUserConfigRulesMappingTagOutput() GetM3DbM3dbUserConfigRulesMappingTagOutput
	ToGetM3DbM3dbUserConfigRulesMappingTagOutputWithContext(context.Context) GetM3DbM3dbUserConfigRulesMappingTagOutput
}

type GetM3DbM3dbUserConfigRulesMappingTagArgs struct {
	// The name of the namespace
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value of the tag.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetM3DbM3dbUserConfigRulesMappingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3DbM3dbUserConfigRulesMappingTag)(nil)).Elem()
}

func (i GetM3DbM3dbUserConfigRulesMappingTagArgs) ToGetM3DbM3dbUserConfigRulesMappingTagOutput() GetM3DbM3dbUserConfigRulesMappingTagOutput {
	return i.ToGetM3DbM3dbUserConfigRulesMappingTagOutputWithContext(context.Background())
}

func (i GetM3DbM3dbUserConfigRulesMappingTagArgs) ToGetM3DbM3dbUserConfigRulesMappingTagOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigRulesMappingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbM3dbUserConfigRulesMappingTagOutput)
}

// GetM3DbM3dbUserConfigRulesMappingTagArrayInput is an input type that accepts GetM3DbM3dbUserConfigRulesMappingTagArray and GetM3DbM3dbUserConfigRulesMappingTagArrayOutput values.
// You can construct a concrete instance of `GetM3DbM3dbUserConfigRulesMappingTagArrayInput` via:
//
//          GetM3DbM3dbUserConfigRulesMappingTagArray{ GetM3DbM3dbUserConfigRulesMappingTagArgs{...} }
type GetM3DbM3dbUserConfigRulesMappingTagArrayInput interface {
	pulumi.Input

	ToGetM3DbM3dbUserConfigRulesMappingTagArrayOutput() GetM3DbM3dbUserConfigRulesMappingTagArrayOutput
	ToGetM3DbM3dbUserConfigRulesMappingTagArrayOutputWithContext(context.Context) GetM3DbM3dbUserConfigRulesMappingTagArrayOutput
}

type GetM3DbM3dbUserConfigRulesMappingTagArray []GetM3DbM3dbUserConfigRulesMappingTagInput

func (GetM3DbM3dbUserConfigRulesMappingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetM3DbM3dbUserConfigRulesMappingTag)(nil)).Elem()
}

func (i GetM3DbM3dbUserConfigRulesMappingTagArray) ToGetM3DbM3dbUserConfigRulesMappingTagArrayOutput() GetM3DbM3dbUserConfigRulesMappingTagArrayOutput {
	return i.ToGetM3DbM3dbUserConfigRulesMappingTagArrayOutputWithContext(context.Background())
}

func (i GetM3DbM3dbUserConfigRulesMappingTagArray) ToGetM3DbM3dbUserConfigRulesMappingTagArrayOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigRulesMappingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbM3dbUserConfigRulesMappingTagArrayOutput)
}

type GetM3DbM3dbUserConfigRulesMappingTagOutput struct{ *pulumi.OutputState }

func (GetM3DbM3dbUserConfigRulesMappingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3DbM3dbUserConfigRulesMappingTag)(nil)).Elem()
}

func (o GetM3DbM3dbUserConfigRulesMappingTagOutput) ToGetM3DbM3dbUserConfigRulesMappingTagOutput() GetM3DbM3dbUserConfigRulesMappingTagOutput {
	return o
}

func (o GetM3DbM3dbUserConfigRulesMappingTagOutput) ToGetM3DbM3dbUserConfigRulesMappingTagOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigRulesMappingTagOutput {
	return o
}

// The name of the namespace
func (o GetM3DbM3dbUserConfigRulesMappingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigRulesMappingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value of the tag.
func (o GetM3DbM3dbUserConfigRulesMappingTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetM3DbM3dbUserConfigRulesMappingTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetM3DbM3dbUserConfigRulesMappingTagArrayOutput struct{ *pulumi.OutputState }

func (GetM3DbM3dbUserConfigRulesMappingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetM3DbM3dbUserConfigRulesMappingTag)(nil)).Elem()
}

func (o GetM3DbM3dbUserConfigRulesMappingTagArrayOutput) ToGetM3DbM3dbUserConfigRulesMappingTagArrayOutput() GetM3DbM3dbUserConfigRulesMappingTagArrayOutput {
	return o
}

func (o GetM3DbM3dbUserConfigRulesMappingTagArrayOutput) ToGetM3DbM3dbUserConfigRulesMappingTagArrayOutputWithContext(ctx context.Context) GetM3DbM3dbUserConfigRulesMappingTagArrayOutput {
	return o
}

func (o GetM3DbM3dbUserConfigRulesMappingTagArrayOutput) Index(i pulumi.IntInput) GetM3DbM3dbUserConfigRulesMappingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetM3DbM3dbUserConfigRulesMappingTag {
		return vs[0].([]GetM3DbM3dbUserConfigRulesMappingTag)[vs[1].(int)]
	}).(GetM3DbM3dbUserConfigRulesMappingTagOutput)
}

type GetM3DbServiceIntegration struct {
	IntegrationType   string `pulumi:"integrationType"`
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// GetM3DbServiceIntegrationInput is an input type that accepts GetM3DbServiceIntegrationArgs and GetM3DbServiceIntegrationOutput values.
// You can construct a concrete instance of `GetM3DbServiceIntegrationInput` via:
//
//          GetM3DbServiceIntegrationArgs{...}
type GetM3DbServiceIntegrationInput interface {
	pulumi.Input

	ToGetM3DbServiceIntegrationOutput() GetM3DbServiceIntegrationOutput
	ToGetM3DbServiceIntegrationOutputWithContext(context.Context) GetM3DbServiceIntegrationOutput
}

type GetM3DbServiceIntegrationArgs struct {
	IntegrationType   pulumi.StringInput `pulumi:"integrationType"`
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (GetM3DbServiceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3DbServiceIntegration)(nil)).Elem()
}

func (i GetM3DbServiceIntegrationArgs) ToGetM3DbServiceIntegrationOutput() GetM3DbServiceIntegrationOutput {
	return i.ToGetM3DbServiceIntegrationOutputWithContext(context.Background())
}

func (i GetM3DbServiceIntegrationArgs) ToGetM3DbServiceIntegrationOutputWithContext(ctx context.Context) GetM3DbServiceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbServiceIntegrationOutput)
}

// GetM3DbServiceIntegrationArrayInput is an input type that accepts GetM3DbServiceIntegrationArray and GetM3DbServiceIntegrationArrayOutput values.
// You can construct a concrete instance of `GetM3DbServiceIntegrationArrayInput` via:
//
//          GetM3DbServiceIntegrationArray{ GetM3DbServiceIntegrationArgs{...} }
type GetM3DbServiceIntegrationArrayInput interface {
	pulumi.Input

	ToGetM3DbServiceIntegrationArrayOutput() GetM3DbServiceIntegrationArrayOutput
	ToGetM3DbServiceIntegrationArrayOutputWithContext(context.Context) GetM3DbServiceIntegrationArrayOutput
}

type GetM3DbServiceIntegrationArray []GetM3DbServiceIntegrationInput

func (GetM3DbServiceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetM3DbServiceIntegration)(nil)).Elem()
}

func (i GetM3DbServiceIntegrationArray) ToGetM3DbServiceIntegrationArrayOutput() GetM3DbServiceIntegrationArrayOutput {
	return i.ToGetM3DbServiceIntegrationArrayOutputWithContext(context.Background())
}

func (i GetM3DbServiceIntegrationArray) ToGetM3DbServiceIntegrationArrayOutputWithContext(ctx context.Context) GetM3DbServiceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetM3DbServiceIntegrationArrayOutput)
}

type GetM3DbServiceIntegrationOutput struct{ *pulumi.OutputState }

func (GetM3DbServiceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3DbServiceIntegration)(nil)).Elem()
}

func (o GetM3DbServiceIntegrationOutput) ToGetM3DbServiceIntegrationOutput() GetM3DbServiceIntegrationOutput {
	return o
}

func (o GetM3DbServiceIntegrationOutput) ToGetM3DbServiceIntegrationOutputWithContext(ctx context.Context) GetM3DbServiceIntegrationOutput {
	return o
}

func (o GetM3DbServiceIntegrationOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetM3DbServiceIntegration) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o GetM3DbServiceIntegrationOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetM3DbServiceIntegration) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

type GetM3DbServiceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (GetM3DbServiceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetM3DbServiceIntegration)(nil)).Elem()
}

func (o GetM3DbServiceIntegrationArrayOutput) ToGetM3DbServiceIntegrationArrayOutput() GetM3DbServiceIntegrationArrayOutput {
	return o
}

func (o GetM3DbServiceIntegrationArrayOutput) ToGetM3DbServiceIntegrationArrayOutputWithContext(ctx context.Context) GetM3DbServiceIntegrationArrayOutput {
	return o
}

func (o GetM3DbServiceIntegrationArrayOutput) Index(i pulumi.IntInput) GetM3DbServiceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetM3DbServiceIntegration {
		return vs[0].([]GetM3DbServiceIntegration)[vs[1].(int)]
	}).(GetM3DbServiceIntegrationOutput)
}

type GetMySqlComponent struct {
	Component string `pulumi:"component"`
	// Hostname or IP address of the server where to migrate data from
	Host                      string `pulumi:"host"`
	KafkaAuthenticationMethod string `pulumi:"kafkaAuthenticationMethod"`
	// Port number of the server where to migrate data from
	Port  int    `pulumi:"port"`
	Route string `pulumi:"route"`
	// The server where to migrate data from is secured with SSL
	Ssl   bool   `pulumi:"ssl"`
	Usage string `pulumi:"usage"`
}

// GetMySqlComponentInput is an input type that accepts GetMySqlComponentArgs and GetMySqlComponentOutput values.
// You can construct a concrete instance of `GetMySqlComponentInput` via:
//
//          GetMySqlComponentArgs{...}
type GetMySqlComponentInput interface {
	pulumi.Input

	ToGetMySqlComponentOutput() GetMySqlComponentOutput
	ToGetMySqlComponentOutputWithContext(context.Context) GetMySqlComponentOutput
}

type GetMySqlComponentArgs struct {
	Component pulumi.StringInput `pulumi:"component"`
	// Hostname or IP address of the server where to migrate data from
	Host                      pulumi.StringInput `pulumi:"host"`
	KafkaAuthenticationMethod pulumi.StringInput `pulumi:"kafkaAuthenticationMethod"`
	// Port number of the server where to migrate data from
	Port  pulumi.IntInput    `pulumi:"port"`
	Route pulumi.StringInput `pulumi:"route"`
	// The server where to migrate data from is secured with SSL
	Ssl   pulumi.BoolInput   `pulumi:"ssl"`
	Usage pulumi.StringInput `pulumi:"usage"`
}

func (GetMySqlComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMySqlComponent)(nil)).Elem()
}

func (i GetMySqlComponentArgs) ToGetMySqlComponentOutput() GetMySqlComponentOutput {
	return i.ToGetMySqlComponentOutputWithContext(context.Background())
}

func (i GetMySqlComponentArgs) ToGetMySqlComponentOutputWithContext(ctx context.Context) GetMySqlComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMySqlComponentOutput)
}

// GetMySqlComponentArrayInput is an input type that accepts GetMySqlComponentArray and GetMySqlComponentArrayOutput values.
// You can construct a concrete instance of `GetMySqlComponentArrayInput` via:
//
//          GetMySqlComponentArray{ GetMySqlComponentArgs{...} }
type GetMySqlComponentArrayInput interface {
	pulumi.Input

	ToGetMySqlComponentArrayOutput() GetMySqlComponentArrayOutput
	ToGetMySqlComponentArrayOutputWithContext(context.Context) GetMySqlComponentArrayOutput
}

type GetMySqlComponentArray []GetMySqlComponentInput

func (GetMySqlComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMySqlComponent)(nil)).Elem()
}

func (i GetMySqlComponentArray) ToGetMySqlComponentArrayOutput() GetMySqlComponentArrayOutput {
	return i.ToGetMySqlComponentArrayOutputWithContext(context.Background())
}

func (i GetMySqlComponentArray) ToGetMySqlComponentArrayOutputWithContext(ctx context.Context) GetMySqlComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMySqlComponentArrayOutput)
}

type GetMySqlComponentOutput struct{ *pulumi.OutputState }

func (GetMySqlComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMySqlComponent)(nil)).Elem()
}

func (o GetMySqlComponentOutput) ToGetMySqlComponentOutput() GetMySqlComponentOutput {
	return o
}

func (o GetMySqlComponentOutput) ToGetMySqlComponentOutputWithContext(ctx context.Context) GetMySqlComponentOutput {
	return o
}

func (o GetMySqlComponentOutput) Component() pulumi.StringOutput {
	return o.ApplyT(func(v GetMySqlComponent) string { return v.Component }).(pulumi.StringOutput)
}

// Hostname or IP address of the server where to migrate data from
func (o GetMySqlComponentOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetMySqlComponent) string { return v.Host }).(pulumi.StringOutput)
}

func (o GetMySqlComponentOutput) KafkaAuthenticationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetMySqlComponent) string { return v.KafkaAuthenticationMethod }).(pulumi.StringOutput)
}

// Port number of the server where to migrate data from
func (o GetMySqlComponentOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetMySqlComponent) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetMySqlComponentOutput) Route() pulumi.StringOutput {
	return o.ApplyT(func(v GetMySqlComponent) string { return v.Route }).(pulumi.StringOutput)
}

// The server where to migrate data from is secured with SSL
func (o GetMySqlComponentOutput) Ssl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMySqlComponent) bool { return v.Ssl }).(pulumi.BoolOutput)
}

func (o GetMySqlComponentOutput) Usage() pulumi.StringOutput {
	return o.ApplyT(func(v GetMySqlComponent) string { return v.Usage }).(pulumi.StringOutput)
}

type GetMySqlComponentArrayOutput struct{ *pulumi.OutputState }

func (GetMySqlComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMySqlComponent)(nil)).Elem()
}

func (o GetMySqlComponentArrayOutput) ToGetMySqlComponentArrayOutput() GetMySqlComponentArrayOutput {
	return o
}

func (o GetMySqlComponentArrayOutput) ToGetMySqlComponentArrayOutputWithContext(ctx context.Context) GetMySqlComponentArrayOutput {
	return o
}

func (o GetMySqlComponentArrayOutput) Index(i pulumi.IntInput) GetMySqlComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMySqlComponent {
		return vs[0].([]GetMySqlComponent)[vs[1].(int)]
	}).(GetMySqlComponentOutput)
}

type GetMySqlMysql struct {
}

// GetMySqlMysqlInput is an input type that accepts GetMySqlMysqlArgs and GetMySqlMysqlOutput values.
// You can construct a concrete instance of `GetMySqlMysqlInput` via:
//
//          GetMySqlMysqlArgs{...}
type GetMySqlMysqlInput interface {
	pulumi.Input

	ToGetMySqlMysqlOutput() GetMySqlMysqlOutput
	ToGetMySqlMysqlOutputWithContext(context.Context) GetMySqlMysqlOutput
}

type GetMySqlMysqlArgs struct {
}

func (GetMySqlMysqlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMySqlMysql)(nil)).Elem()
}

func (i GetMySqlMysqlArgs) ToGetMySqlMysqlOutput() GetMySqlMysqlOutput {
	return i.ToGetMySqlMysqlOutputWithContext(context.Background())
}

func (i GetMySqlMysqlArgs) ToGetMySqlMysqlOutputWithContext(ctx context.Context) GetMySqlMysqlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMySqlMysqlOutput)
}

type GetMySqlMysqlOutput struct{ *pulumi.OutputState }

func (GetMySqlMysqlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMySqlMysql)(nil)).Elem()
}

func (o GetMySqlMysqlOutput) ToGetMySqlMysqlOutput() GetMySqlMysqlOutput {
	return o
}

func (o GetMySqlMysqlOutput) ToGetMySqlMysqlOutputWithContext(ctx context.Context) GetMySqlMysqlOutput {
	return o
}

type GetMySqlMysqlUserConfig struct {
	// Custom password for admin user. Defaults to random string.
	// This must be set only when a new service is being created.
	AdminPassword *string `pulumi:"adminPassword"`
	// Custom username for admin user. This must be set only when a
	// new service is being created.
	AdminUsername *string `pulumi:"adminUsername"`
	// The hour of day (in UTC) when backup for the service is started.
	// New backup is only started if previous backup has already completed.
	BackupHour *string `pulumi:"backupHour"`
	// The minute of an hour when backup for the service is started.
	// New backup is only started if previous backup has already completed.
	BackupMinute *string `pulumi:"backupMinute"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
	IpFilters []string `pulumi:"ipFilters"`
	// Migrate data from existing server
	Migration *GetMySqlMysqlUserConfigMigration `pulumi:"migration"`
	// MySQL specific server provided values.
	Mysql *GetMySqlMysqlUserConfigMysql `pulumi:"mysql"`
	// MySQL major version
	MysqlVersion *string `pulumi:"mysqlVersion"`
	// Allow access to selected service ports from private networks
	PrivateAccess *GetMySqlMysqlUserConfigPrivateAccess `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess *GetMySqlMysqlUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom *string `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet
	PublicAccess *GetMySqlMysqlUserConfigPublicAccess `pulumi:"publicAccess"`
	// Recovery target time when forking a service. This has effect
	// only when a new service is being created.
	RecoveryTargetTime *string `pulumi:"recoveryTargetTime"`
	// Name of another service to fork from. This has effect only when
	// a new service is being created.
	ServiceToForkFrom *string `pulumi:"serviceToForkFrom"`
}

// GetMySqlMysqlUserConfigInput is an input type that accepts GetMySqlMysqlUserConfigArgs and GetMySqlMysqlUserConfigOutput values.
// You can construct a concrete instance of `GetMySqlMysqlUserConfigInput` via:
//
//          GetMySqlMysqlUserConfigArgs{...}
type GetMySqlMysqlUserConfigInput interface {
	pulumi.Input

	ToGetMySqlMysqlUserConfigOutput() GetMySqlMysqlUserConfigOutput
	ToGetMySqlMysqlUserConfigOutputWithContext(context.Context) GetMySqlMysqlUserConfigOutput
}

type GetMySqlMysqlUserConfigArgs struct {
	// Custom password for admin user. Defaults to random string.
	// This must be set only when a new service is being created.
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// Custom username for admin user. This must be set only when a
	// new service is being created.
	AdminUsername pulumi.StringPtrInput `pulumi:"adminUsername"`
	// The hour of day (in UTC) when backup for the service is started.
	// New backup is only started if previous backup has already completed.
	BackupHour pulumi.StringPtrInput `pulumi:"backupHour"`
	// The minute of an hour when backup for the service is started.
	// New backup is only started if previous backup has already completed.
	BackupMinute pulumi.StringPtrInput `pulumi:"backupMinute"`
	// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// Migrate data from existing server
	Migration GetMySqlMysqlUserConfigMigrationPtrInput `pulumi:"migration"`
	// MySQL specific server provided values.
	Mysql GetMySqlMysqlUserConfigMysqlPtrInput `pulumi:"mysql"`
	// MySQL major version
	MysqlVersion pulumi.StringPtrInput `pulumi:"mysqlVersion"`
	// Allow access to selected service ports from private networks
	PrivateAccess GetMySqlMysqlUserConfigPrivateAccessPtrInput `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess GetMySqlMysqlUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom pulumi.StringPtrInput `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet
	PublicAccess GetMySqlMysqlUserConfigPublicAccessPtrInput `pulumi:"publicAccess"`
	// Recovery target time when forking a service. This has effect
	// only when a new service is being created.
	RecoveryTargetTime pulumi.StringPtrInput `pulumi:"recoveryTargetTime"`
	// Name of another service to fork from. This has effect only when
	// a new service is being created.
	ServiceToForkFrom pulumi.StringPtrInput `pulumi:"serviceToForkFrom"`
}

func (GetMySqlMysqlUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMySqlMysqlUserConfig)(nil)).Elem()
}

func (i GetMySqlMysqlUserConfigArgs) ToGetMySqlMysqlUserConfigOutput() GetMySqlMysqlUserConfigOutput {
	return i.ToGetMySqlMysqlUserConfigOutputWithContext(context.Background())
}

func (i GetMySqlMysqlUserConfigArgs) ToGetMySqlMysqlUserConfigOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMySqlMysqlUserConfigOutput)
}

type GetMySqlMysqlUserConfigOutput struct{ *pulumi.OutputState }

func (GetMySqlMysqlUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMySqlMysqlUserConfig)(nil)).Elem()
}

func (o GetMySqlMysqlUserConfigOutput) ToGetMySqlMysqlUserConfigOutput() GetMySqlMysqlUserConfigOutput {
	return o
}

func (o GetMySqlMysqlUserConfigOutput) ToGetMySqlMysqlUserConfigOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigOutput {
	return o
}

// Custom password for admin user. Defaults to random string.
// This must be set only when a new service is being created.
func (o GetMySqlMysqlUserConfigOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfig) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// Custom username for admin user. This must be set only when a
// new service is being created.
func (o GetMySqlMysqlUserConfigOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfig) *string { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

// The hour of day (in UTC) when backup for the service is started.
// New backup is only started if previous backup has already completed.
func (o GetMySqlMysqlUserConfigOutput) BackupHour() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfig) *string { return v.BackupHour }).(pulumi.StringPtrOutput)
}

// The minute of an hour when backup for the service is started.
// New backup is only started if previous backup has already completed.
func (o GetMySqlMysqlUserConfigOutput) BackupMinute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfig) *string { return v.BackupMinute }).(pulumi.StringPtrOutput)
}

// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
func (o GetMySqlMysqlUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// Migrate data from existing server
func (o GetMySqlMysqlUserConfigOutput) Migration() GetMySqlMysqlUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfig) *GetMySqlMysqlUserConfigMigration { return v.Migration }).(GetMySqlMysqlUserConfigMigrationPtrOutput)
}

// MySQL specific server provided values.
func (o GetMySqlMysqlUserConfigOutput) Mysql() GetMySqlMysqlUserConfigMysqlPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfig) *GetMySqlMysqlUserConfigMysql { return v.Mysql }).(GetMySqlMysqlUserConfigMysqlPtrOutput)
}

// MySQL major version
func (o GetMySqlMysqlUserConfigOutput) MysqlVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfig) *string { return v.MysqlVersion }).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from private networks
func (o GetMySqlMysqlUserConfigOutput) PrivateAccess() GetMySqlMysqlUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfig) *GetMySqlMysqlUserConfigPrivateAccess { return v.PrivateAccess }).(GetMySqlMysqlUserConfigPrivateAccessPtrOutput)
}

// Allow access to selected service components through Privatelink
func (o GetMySqlMysqlUserConfigOutput) PrivatelinkAccess() GetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfig) *GetMySqlMysqlUserConfigPrivatelinkAccess { return v.PrivatelinkAccess }).(GetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput)
}

// Name of another project to fork a service from. This has
// effect only when a new service is being created.
func (o GetMySqlMysqlUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from the public Internet
func (o GetMySqlMysqlUserConfigOutput) PublicAccess() GetMySqlMysqlUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfig) *GetMySqlMysqlUserConfigPublicAccess { return v.PublicAccess }).(GetMySqlMysqlUserConfigPublicAccessPtrOutput)
}

// Recovery target time when forking a service. This has effect
// only when a new service is being created.
func (o GetMySqlMysqlUserConfigOutput) RecoveryTargetTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfig) *string { return v.RecoveryTargetTime }).(pulumi.StringPtrOutput)
}

// Name of another service to fork from. This has effect only when
// a new service is being created.
func (o GetMySqlMysqlUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

type GetMySqlMysqlUserConfigMigration struct {
	// Database name for bootstrapping the initial connection
	Dbname *string `pulumi:"dbname"`
	// Hostname or IP address of the server where to migrate data from
	Host *string `pulumi:"host"`
	// Comma-separated list of databases, which should be ignored
	// during migration (supported by MySQL only at the moment)
	IgnoreDbs *string `pulumi:"ignoreDbs"`
	// Password for authentication with the server where to migrate data from
	Password *string `pulumi:"password"`
	// Port number of the server where to migrate data from
	Port *string `pulumi:"port"`
	// The server where to migrate data from is secured with SSL
	Ssl *string `pulumi:"ssl"`
	// User name for authentication with the server where to migrate data from
	Username *string `pulumi:"username"`
}

// GetMySqlMysqlUserConfigMigrationInput is an input type that accepts GetMySqlMysqlUserConfigMigrationArgs and GetMySqlMysqlUserConfigMigrationOutput values.
// You can construct a concrete instance of `GetMySqlMysqlUserConfigMigrationInput` via:
//
//          GetMySqlMysqlUserConfigMigrationArgs{...}
type GetMySqlMysqlUserConfigMigrationInput interface {
	pulumi.Input

	ToGetMySqlMysqlUserConfigMigrationOutput() GetMySqlMysqlUserConfigMigrationOutput
	ToGetMySqlMysqlUserConfigMigrationOutputWithContext(context.Context) GetMySqlMysqlUserConfigMigrationOutput
}

type GetMySqlMysqlUserConfigMigrationArgs struct {
	// Database name for bootstrapping the initial connection
	Dbname pulumi.StringPtrInput `pulumi:"dbname"`
	// Hostname or IP address of the server where to migrate data from
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Comma-separated list of databases, which should be ignored
	// during migration (supported by MySQL only at the moment)
	IgnoreDbs pulumi.StringPtrInput `pulumi:"ignoreDbs"`
	// Password for authentication with the server where to migrate data from
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Port number of the server where to migrate data from
	Port pulumi.StringPtrInput `pulumi:"port"`
	// The server where to migrate data from is secured with SSL
	Ssl pulumi.StringPtrInput `pulumi:"ssl"`
	// User name for authentication with the server where to migrate data from
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (GetMySqlMysqlUserConfigMigrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMySqlMysqlUserConfigMigration)(nil)).Elem()
}

func (i GetMySqlMysqlUserConfigMigrationArgs) ToGetMySqlMysqlUserConfigMigrationOutput() GetMySqlMysqlUserConfigMigrationOutput {
	return i.ToGetMySqlMysqlUserConfigMigrationOutputWithContext(context.Background())
}

func (i GetMySqlMysqlUserConfigMigrationArgs) ToGetMySqlMysqlUserConfigMigrationOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigMigrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMySqlMysqlUserConfigMigrationOutput)
}

func (i GetMySqlMysqlUserConfigMigrationArgs) ToGetMySqlMysqlUserConfigMigrationPtrOutput() GetMySqlMysqlUserConfigMigrationPtrOutput {
	return i.ToGetMySqlMysqlUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (i GetMySqlMysqlUserConfigMigrationArgs) ToGetMySqlMysqlUserConfigMigrationPtrOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMySqlMysqlUserConfigMigrationOutput).ToGetMySqlMysqlUserConfigMigrationPtrOutputWithContext(ctx)
}

// GetMySqlMysqlUserConfigMigrationPtrInput is an input type that accepts GetMySqlMysqlUserConfigMigrationArgs, GetMySqlMysqlUserConfigMigrationPtr and GetMySqlMysqlUserConfigMigrationPtrOutput values.
// You can construct a concrete instance of `GetMySqlMysqlUserConfigMigrationPtrInput` via:
//
//          GetMySqlMysqlUserConfigMigrationArgs{...}
//
//  or:
//
//          nil
type GetMySqlMysqlUserConfigMigrationPtrInput interface {
	pulumi.Input

	ToGetMySqlMysqlUserConfigMigrationPtrOutput() GetMySqlMysqlUserConfigMigrationPtrOutput
	ToGetMySqlMysqlUserConfigMigrationPtrOutputWithContext(context.Context) GetMySqlMysqlUserConfigMigrationPtrOutput
}

type getMySqlMysqlUserConfigMigrationPtrType GetMySqlMysqlUserConfigMigrationArgs

func GetMySqlMysqlUserConfigMigrationPtr(v *GetMySqlMysqlUserConfigMigrationArgs) GetMySqlMysqlUserConfigMigrationPtrInput {
	return (*getMySqlMysqlUserConfigMigrationPtrType)(v)
}

func (*getMySqlMysqlUserConfigMigrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetMySqlMysqlUserConfigMigration)(nil)).Elem()
}

func (i *getMySqlMysqlUserConfigMigrationPtrType) ToGetMySqlMysqlUserConfigMigrationPtrOutput() GetMySqlMysqlUserConfigMigrationPtrOutput {
	return i.ToGetMySqlMysqlUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (i *getMySqlMysqlUserConfigMigrationPtrType) ToGetMySqlMysqlUserConfigMigrationPtrOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMySqlMysqlUserConfigMigrationPtrOutput)
}

type GetMySqlMysqlUserConfigMigrationOutput struct{ *pulumi.OutputState }

func (GetMySqlMysqlUserConfigMigrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMySqlMysqlUserConfigMigration)(nil)).Elem()
}

func (o GetMySqlMysqlUserConfigMigrationOutput) ToGetMySqlMysqlUserConfigMigrationOutput() GetMySqlMysqlUserConfigMigrationOutput {
	return o
}

func (o GetMySqlMysqlUserConfigMigrationOutput) ToGetMySqlMysqlUserConfigMigrationOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigMigrationOutput {
	return o
}

func (o GetMySqlMysqlUserConfigMigrationOutput) ToGetMySqlMysqlUserConfigMigrationPtrOutput() GetMySqlMysqlUserConfigMigrationPtrOutput {
	return o.ToGetMySqlMysqlUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (o GetMySqlMysqlUserConfigMigrationOutput) ToGetMySqlMysqlUserConfigMigrationPtrOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMigration) *GetMySqlMysqlUserConfigMigration {
		return &v
	}).(GetMySqlMysqlUserConfigMigrationPtrOutput)
}

// Database name for bootstrapping the initial connection
func (o GetMySqlMysqlUserConfigMigrationOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMigration) *string { return v.Dbname }).(pulumi.StringPtrOutput)
}

// Hostname or IP address of the server where to migrate data from
func (o GetMySqlMysqlUserConfigMigrationOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMigration) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Comma-separated list of databases, which should be ignored
// during migration (supported by MySQL only at the moment)
func (o GetMySqlMysqlUserConfigMigrationOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMigration) *string { return v.IgnoreDbs }).(pulumi.StringPtrOutput)
}

// Password for authentication with the server where to migrate data from
func (o GetMySqlMysqlUserConfigMigrationOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMigration) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Port number of the server where to migrate data from
func (o GetMySqlMysqlUserConfigMigrationOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMigration) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The server where to migrate data from is secured with SSL
func (o GetMySqlMysqlUserConfigMigrationOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMigration) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

// User name for authentication with the server where to migrate data from
func (o GetMySqlMysqlUserConfigMigrationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMigration) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GetMySqlMysqlUserConfigMigrationPtrOutput struct{ *pulumi.OutputState }

func (GetMySqlMysqlUserConfigMigrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetMySqlMysqlUserConfigMigration)(nil)).Elem()
}

func (o GetMySqlMysqlUserConfigMigrationPtrOutput) ToGetMySqlMysqlUserConfigMigrationPtrOutput() GetMySqlMysqlUserConfigMigrationPtrOutput {
	return o
}

func (o GetMySqlMysqlUserConfigMigrationPtrOutput) ToGetMySqlMysqlUserConfigMigrationPtrOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigMigrationPtrOutput {
	return o
}

func (o GetMySqlMysqlUserConfigMigrationPtrOutput) Elem() GetMySqlMysqlUserConfigMigrationOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMigration) GetMySqlMysqlUserConfigMigration { return *v }).(GetMySqlMysqlUserConfigMigrationOutput)
}

// Database name for bootstrapping the initial connection
func (o GetMySqlMysqlUserConfigMigrationPtrOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Dbname
	}).(pulumi.StringPtrOutput)
}

// Hostname or IP address of the server where to migrate data from
func (o GetMySqlMysqlUserConfigMigrationPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Comma-separated list of databases, which should be ignored
// during migration (supported by MySQL only at the moment)
func (o GetMySqlMysqlUserConfigMigrationPtrOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.IgnoreDbs
	}).(pulumi.StringPtrOutput)
}

// Password for authentication with the server where to migrate data from
func (o GetMySqlMysqlUserConfigMigrationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Port number of the server where to migrate data from
func (o GetMySqlMysqlUserConfigMigrationPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// The server where to migrate data from is secured with SSL
func (o GetMySqlMysqlUserConfigMigrationPtrOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Ssl
	}).(pulumi.StringPtrOutput)
}

// User name for authentication with the server where to migrate data from
func (o GetMySqlMysqlUserConfigMigrationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type GetMySqlMysqlUserConfigMysql struct {
	// The number of seconds that the mysqld server waits for a
	// connect packet before responding with Bad handshake
	ConnectTimeout *string `pulumi:"connectTimeout"`
	// Default server time zone as an offset from UTC
	// (from -12:00 to +12:00), a time zone name, or 'SYSTEM' to use the MySQL server default.
	DefaultTimeZone *string `pulumi:"defaultTimeZone"`
	// The maximum permitted result length in bytes for
	// the GROUP_CONCAT() function.
	GroupConcatMaxLen *string `pulumi:"groupConcatMaxLen"`
	// The time, in seconds, before cached
	// statistics expire
	InformationSchemaStatsExpiry *string `pulumi:"informationSchemaStatsExpiry"`
	// Minimum length of words that are stored in
	// an InnoDB FULLTEXT index.
	InnodbFtMinTokenSize *string `pulumi:"innodbFtMinTokenSize"`
	// This option is used to specify your
	// own InnoDB FULLTEXT index stopword list for all InnoDB tables.
	InnodbFtServerStopwordTable *string `pulumi:"innodbFtServerStopwordTable"`
	// The length of time in seconds an InnoDB
	// transaction waits for a row lock before giving up.
	InnodbLockWaitTimeout *string `pulumi:"innodbLockWaitTimeout"`
	// The size in bytes of the buffer that InnoDB
	// uses to write to the log files on disk.
	InnodbLogBufferSize *string `pulumi:"innodbLogBufferSize"`
	// The upper limit in bytes on the
	// size of the temporary log files used during online DDL operations for InnoDB tables.
	InnodbOnlineAlterLogMaxSize *string `pulumi:"innodbOnlineAlterLogMaxSize"`
	// When enabled, information about all
	// deadlocks in InnoDB user transactions is recorded in the error log. Disabled by default.
	InnodbPrintAllDeadlocks *string `pulumi:"innodbPrintAllDeadlocks"`
	// When enabled a transaction timeout
	// causes InnoDB to abort and roll back the entire transaction.
	InnodbRollbackOnTimeout *string `pulumi:"innodbRollbackOnTimeout"`
	// The number of seconds the server waits for
	// activity on an interactive connection before closing it.
	InteractiveTimeout *string `pulumi:"interactiveTimeout"`
	// The slowQueryLogs work as SQL statements that take
	// more than longQueryTime seconds to execute. Default is 10s
	LongQueryTime *string `pulumi:"longQueryTime"`
	// Size of the largest message in bytes that can
	// be received by the server. Default is 67108864 (64M)
	MaxAllowedPacket *string `pulumi:"maxAllowedPacket"`
	// Limits the size of internal in-memory tables.
	// Also set tmp_table_size. Default is 16777216 (16M)
	MaxHeapTableSize *string `pulumi:"maxHeapTableSize"`
	// The number of seconds to wait for more data from
	// a connection before aborting the read.
	NetReadTimeout *string `pulumi:"netReadTimeout"`
	// The number of seconds to wait for a block to be
	// written to a connection before aborting the write.
	NetWriteTimeout *string `pulumi:"netWriteTimeout"`
	// Slow query log enables capturing of slow queries.
	// Setting slowQueryLog to false also truncates the mysql.slow_log table. Default is off
	SlowQueryLog *string `pulumi:"slowQueryLog"`
	// Sort buffer size in bytes for ORDER BY optimization.
	// Default is 262144 (256K)
	SortBufferSize *string `pulumi:"sortBufferSize"`
	// Global SQL mode. Set to empty to use MySQL server defaults.
	// When creating a new service and not setting this field Aiven default SQL mode (strict,
	// SQL standard compliant) will be assigned.
	SqlMode *string `pulumi:"sqlMode"`
	// Require primary key to be defined for new
	// tables or old tables modified with ALTER TABLE and fail if missing. It is recommended
	// to always have primary keys because various functionality may break if any large table
	// is missing them.
	SqlRequirePrimaryKey *string `pulumi:"sqlRequirePrimaryKey"`
	// Limits the size of internal in-memory tables. Also set
	// max_heap_table_size. Default is 16777216 (16M)
	TmpTableSize *string `pulumi:"tmpTableSize"`
	// The number of seconds the server waits for activity on
	// a noninteractive connection before closing it.
	WaitTimeout *string `pulumi:"waitTimeout"`
}

// GetMySqlMysqlUserConfigMysqlInput is an input type that accepts GetMySqlMysqlUserConfigMysqlArgs and GetMySqlMysqlUserConfigMysqlOutput values.
// You can construct a concrete instance of `GetMySqlMysqlUserConfigMysqlInput` via:
//
//          GetMySqlMysqlUserConfigMysqlArgs{...}
type GetMySqlMysqlUserConfigMysqlInput interface {
	pulumi.Input

	ToGetMySqlMysqlUserConfigMysqlOutput() GetMySqlMysqlUserConfigMysqlOutput
	ToGetMySqlMysqlUserConfigMysqlOutputWithContext(context.Context) GetMySqlMysqlUserConfigMysqlOutput
}

type GetMySqlMysqlUserConfigMysqlArgs struct {
	// The number of seconds that the mysqld server waits for a
	// connect packet before responding with Bad handshake
	ConnectTimeout pulumi.StringPtrInput `pulumi:"connectTimeout"`
	// Default server time zone as an offset from UTC
	// (from -12:00 to +12:00), a time zone name, or 'SYSTEM' to use the MySQL server default.
	DefaultTimeZone pulumi.StringPtrInput `pulumi:"defaultTimeZone"`
	// The maximum permitted result length in bytes for
	// the GROUP_CONCAT() function.
	GroupConcatMaxLen pulumi.StringPtrInput `pulumi:"groupConcatMaxLen"`
	// The time, in seconds, before cached
	// statistics expire
	InformationSchemaStatsExpiry pulumi.StringPtrInput `pulumi:"informationSchemaStatsExpiry"`
	// Minimum length of words that are stored in
	// an InnoDB FULLTEXT index.
	InnodbFtMinTokenSize pulumi.StringPtrInput `pulumi:"innodbFtMinTokenSize"`
	// This option is used to specify your
	// own InnoDB FULLTEXT index stopword list for all InnoDB tables.
	InnodbFtServerStopwordTable pulumi.StringPtrInput `pulumi:"innodbFtServerStopwordTable"`
	// The length of time in seconds an InnoDB
	// transaction waits for a row lock before giving up.
	InnodbLockWaitTimeout pulumi.StringPtrInput `pulumi:"innodbLockWaitTimeout"`
	// The size in bytes of the buffer that InnoDB
	// uses to write to the log files on disk.
	InnodbLogBufferSize pulumi.StringPtrInput `pulumi:"innodbLogBufferSize"`
	// The upper limit in bytes on the
	// size of the temporary log files used during online DDL operations for InnoDB tables.
	InnodbOnlineAlterLogMaxSize pulumi.StringPtrInput `pulumi:"innodbOnlineAlterLogMaxSize"`
	// When enabled, information about all
	// deadlocks in InnoDB user transactions is recorded in the error log. Disabled by default.
	InnodbPrintAllDeadlocks pulumi.StringPtrInput `pulumi:"innodbPrintAllDeadlocks"`
	// When enabled a transaction timeout
	// causes InnoDB to abort and roll back the entire transaction.
	InnodbRollbackOnTimeout pulumi.StringPtrInput `pulumi:"innodbRollbackOnTimeout"`
	// The number of seconds the server waits for
	// activity on an interactive connection before closing it.
	InteractiveTimeout pulumi.StringPtrInput `pulumi:"interactiveTimeout"`
	// The slowQueryLogs work as SQL statements that take
	// more than longQueryTime seconds to execute. Default is 10s
	LongQueryTime pulumi.StringPtrInput `pulumi:"longQueryTime"`
	// Size of the largest message in bytes that can
	// be received by the server. Default is 67108864 (64M)
	MaxAllowedPacket pulumi.StringPtrInput `pulumi:"maxAllowedPacket"`
	// Limits the size of internal in-memory tables.
	// Also set tmp_table_size. Default is 16777216 (16M)
	MaxHeapTableSize pulumi.StringPtrInput `pulumi:"maxHeapTableSize"`
	// The number of seconds to wait for more data from
	// a connection before aborting the read.
	NetReadTimeout pulumi.StringPtrInput `pulumi:"netReadTimeout"`
	// The number of seconds to wait for a block to be
	// written to a connection before aborting the write.
	NetWriteTimeout pulumi.StringPtrInput `pulumi:"netWriteTimeout"`
	// Slow query log enables capturing of slow queries.
	// Setting slowQueryLog to false also truncates the mysql.slow_log table. Default is off
	SlowQueryLog pulumi.StringPtrInput `pulumi:"slowQueryLog"`
	// Sort buffer size in bytes for ORDER BY optimization.
	// Default is 262144 (256K)
	SortBufferSize pulumi.StringPtrInput `pulumi:"sortBufferSize"`
	// Global SQL mode. Set to empty to use MySQL server defaults.
	// When creating a new service and not setting this field Aiven default SQL mode (strict,
	// SQL standard compliant) will be assigned.
	SqlMode pulumi.StringPtrInput `pulumi:"sqlMode"`
	// Require primary key to be defined for new
	// tables or old tables modified with ALTER TABLE and fail if missing. It is recommended
	// to always have primary keys because various functionality may break if any large table
	// is missing them.
	SqlRequirePrimaryKey pulumi.StringPtrInput `pulumi:"sqlRequirePrimaryKey"`
	// Limits the size of internal in-memory tables. Also set
	// max_heap_table_size. Default is 16777216 (16M)
	TmpTableSize pulumi.StringPtrInput `pulumi:"tmpTableSize"`
	// The number of seconds the server waits for activity on
	// a noninteractive connection before closing it.
	WaitTimeout pulumi.StringPtrInput `pulumi:"waitTimeout"`
}

func (GetMySqlMysqlUserConfigMysqlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMySqlMysqlUserConfigMysql)(nil)).Elem()
}

func (i GetMySqlMysqlUserConfigMysqlArgs) ToGetMySqlMysqlUserConfigMysqlOutput() GetMySqlMysqlUserConfigMysqlOutput {
	return i.ToGetMySqlMysqlUserConfigMysqlOutputWithContext(context.Background())
}

func (i GetMySqlMysqlUserConfigMysqlArgs) ToGetMySqlMysqlUserConfigMysqlOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigMysqlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMySqlMysqlUserConfigMysqlOutput)
}

func (i GetMySqlMysqlUserConfigMysqlArgs) ToGetMySqlMysqlUserConfigMysqlPtrOutput() GetMySqlMysqlUserConfigMysqlPtrOutput {
	return i.ToGetMySqlMysqlUserConfigMysqlPtrOutputWithContext(context.Background())
}

func (i GetMySqlMysqlUserConfigMysqlArgs) ToGetMySqlMysqlUserConfigMysqlPtrOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMySqlMysqlUserConfigMysqlOutput).ToGetMySqlMysqlUserConfigMysqlPtrOutputWithContext(ctx)
}

// GetMySqlMysqlUserConfigMysqlPtrInput is an input type that accepts GetMySqlMysqlUserConfigMysqlArgs, GetMySqlMysqlUserConfigMysqlPtr and GetMySqlMysqlUserConfigMysqlPtrOutput values.
// You can construct a concrete instance of `GetMySqlMysqlUserConfigMysqlPtrInput` via:
//
//          GetMySqlMysqlUserConfigMysqlArgs{...}
//
//  or:
//
//          nil
type GetMySqlMysqlUserConfigMysqlPtrInput interface {
	pulumi.Input

	ToGetMySqlMysqlUserConfigMysqlPtrOutput() GetMySqlMysqlUserConfigMysqlPtrOutput
	ToGetMySqlMysqlUserConfigMysqlPtrOutputWithContext(context.Context) GetMySqlMysqlUserConfigMysqlPtrOutput
}

type getMySqlMysqlUserConfigMysqlPtrType GetMySqlMysqlUserConfigMysqlArgs

func GetMySqlMysqlUserConfigMysqlPtr(v *GetMySqlMysqlUserConfigMysqlArgs) GetMySqlMysqlUserConfigMysqlPtrInput {
	return (*getMySqlMysqlUserConfigMysqlPtrType)(v)
}

func (*getMySqlMysqlUserConfigMysqlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetMySqlMysqlUserConfigMysql)(nil)).Elem()
}

func (i *getMySqlMysqlUserConfigMysqlPtrType) ToGetMySqlMysqlUserConfigMysqlPtrOutput() GetMySqlMysqlUserConfigMysqlPtrOutput {
	return i.ToGetMySqlMysqlUserConfigMysqlPtrOutputWithContext(context.Background())
}

func (i *getMySqlMysqlUserConfigMysqlPtrType) ToGetMySqlMysqlUserConfigMysqlPtrOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMySqlMysqlUserConfigMysqlPtrOutput)
}

type GetMySqlMysqlUserConfigMysqlOutput struct{ *pulumi.OutputState }

func (GetMySqlMysqlUserConfigMysqlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMySqlMysqlUserConfigMysql)(nil)).Elem()
}

func (o GetMySqlMysqlUserConfigMysqlOutput) ToGetMySqlMysqlUserConfigMysqlOutput() GetMySqlMysqlUserConfigMysqlOutput {
	return o
}

func (o GetMySqlMysqlUserConfigMysqlOutput) ToGetMySqlMysqlUserConfigMysqlOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigMysqlOutput {
	return o
}

func (o GetMySqlMysqlUserConfigMysqlOutput) ToGetMySqlMysqlUserConfigMysqlPtrOutput() GetMySqlMysqlUserConfigMysqlPtrOutput {
	return o.ToGetMySqlMysqlUserConfigMysqlPtrOutputWithContext(context.Background())
}

func (o GetMySqlMysqlUserConfigMysqlOutput) ToGetMySqlMysqlUserConfigMysqlPtrOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigMysqlPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMysql) *GetMySqlMysqlUserConfigMysql {
		return &v
	}).(GetMySqlMysqlUserConfigMysqlPtrOutput)
}

// The number of seconds that the mysqld server waits for a
// connect packet before responding with Bad handshake
func (o GetMySqlMysqlUserConfigMysqlOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMysql) *string { return v.ConnectTimeout }).(pulumi.StringPtrOutput)
}

// Default server time zone as an offset from UTC
// (from -12:00 to +12:00), a time zone name, or 'SYSTEM' to use the MySQL server default.
func (o GetMySqlMysqlUserConfigMysqlOutput) DefaultTimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMysql) *string { return v.DefaultTimeZone }).(pulumi.StringPtrOutput)
}

// The maximum permitted result length in bytes for
// the GROUP_CONCAT() function.
func (o GetMySqlMysqlUserConfigMysqlOutput) GroupConcatMaxLen() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMysql) *string { return v.GroupConcatMaxLen }).(pulumi.StringPtrOutput)
}

// The time, in seconds, before cached
// statistics expire
func (o GetMySqlMysqlUserConfigMysqlOutput) InformationSchemaStatsExpiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMysql) *string { return v.InformationSchemaStatsExpiry }).(pulumi.StringPtrOutput)
}

// Minimum length of words that are stored in
// an InnoDB FULLTEXT index.
func (o GetMySqlMysqlUserConfigMysqlOutput) InnodbFtMinTokenSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMysql) *string { return v.InnodbFtMinTokenSize }).(pulumi.StringPtrOutput)
}

// This option is used to specify your
// own InnoDB FULLTEXT index stopword list for all InnoDB tables.
func (o GetMySqlMysqlUserConfigMysqlOutput) InnodbFtServerStopwordTable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMysql) *string { return v.InnodbFtServerStopwordTable }).(pulumi.StringPtrOutput)
}

// The length of time in seconds an InnoDB
// transaction waits for a row lock before giving up.
func (o GetMySqlMysqlUserConfigMysqlOutput) InnodbLockWaitTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMysql) *string { return v.InnodbLockWaitTimeout }).(pulumi.StringPtrOutput)
}

// The size in bytes of the buffer that InnoDB
// uses to write to the log files on disk.
func (o GetMySqlMysqlUserConfigMysqlOutput) InnodbLogBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMysql) *string { return v.InnodbLogBufferSize }).(pulumi.StringPtrOutput)
}

// The upper limit in bytes on the
// size of the temporary log files used during online DDL operations for InnoDB tables.
func (o GetMySqlMysqlUserConfigMysqlOutput) InnodbOnlineAlterLogMaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMysql) *string { return v.InnodbOnlineAlterLogMaxSize }).(pulumi.StringPtrOutput)
}

// When enabled, information about all
// deadlocks in InnoDB user transactions is recorded in the error log. Disabled by default.
func (o GetMySqlMysqlUserConfigMysqlOutput) InnodbPrintAllDeadlocks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMysql) *string { return v.InnodbPrintAllDeadlocks }).(pulumi.StringPtrOutput)
}

// When enabled a transaction timeout
// causes InnoDB to abort and roll back the entire transaction.
func (o GetMySqlMysqlUserConfigMysqlOutput) InnodbRollbackOnTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMysql) *string { return v.InnodbRollbackOnTimeout }).(pulumi.StringPtrOutput)
}

// The number of seconds the server waits for
// activity on an interactive connection before closing it.
func (o GetMySqlMysqlUserConfigMysqlOutput) InteractiveTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMysql) *string { return v.InteractiveTimeout }).(pulumi.StringPtrOutput)
}

// The slowQueryLogs work as SQL statements that take
// more than longQueryTime seconds to execute. Default is 10s
func (o GetMySqlMysqlUserConfigMysqlOutput) LongQueryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMysql) *string { return v.LongQueryTime }).(pulumi.StringPtrOutput)
}

// Size of the largest message in bytes that can
// be received by the server. Default is 67108864 (64M)
func (o GetMySqlMysqlUserConfigMysqlOutput) MaxAllowedPacket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMysql) *string { return v.MaxAllowedPacket }).(pulumi.StringPtrOutput)
}

// Limits the size of internal in-memory tables.
// Also set tmp_table_size. Default is 16777216 (16M)
func (o GetMySqlMysqlUserConfigMysqlOutput) MaxHeapTableSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMysql) *string { return v.MaxHeapTableSize }).(pulumi.StringPtrOutput)
}

// The number of seconds to wait for more data from
// a connection before aborting the read.
func (o GetMySqlMysqlUserConfigMysqlOutput) NetReadTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMysql) *string { return v.NetReadTimeout }).(pulumi.StringPtrOutput)
}

// The number of seconds to wait for a block to be
// written to a connection before aborting the write.
func (o GetMySqlMysqlUserConfigMysqlOutput) NetWriteTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMysql) *string { return v.NetWriteTimeout }).(pulumi.StringPtrOutput)
}

// Slow query log enables capturing of slow queries.
// Setting slowQueryLog to false also truncates the mysql.slow_log table. Default is off
func (o GetMySqlMysqlUserConfigMysqlOutput) SlowQueryLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMysql) *string { return v.SlowQueryLog }).(pulumi.StringPtrOutput)
}

// Sort buffer size in bytes for ORDER BY optimization.
// Default is 262144 (256K)
func (o GetMySqlMysqlUserConfigMysqlOutput) SortBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMysql) *string { return v.SortBufferSize }).(pulumi.StringPtrOutput)
}

// Global SQL mode. Set to empty to use MySQL server defaults.
// When creating a new service and not setting this field Aiven default SQL mode (strict,
// SQL standard compliant) will be assigned.
func (o GetMySqlMysqlUserConfigMysqlOutput) SqlMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMysql) *string { return v.SqlMode }).(pulumi.StringPtrOutput)
}

// Require primary key to be defined for new
// tables or old tables modified with ALTER TABLE and fail if missing. It is recommended
// to always have primary keys because various functionality may break if any large table
// is missing them.
func (o GetMySqlMysqlUserConfigMysqlOutput) SqlRequirePrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMysql) *string { return v.SqlRequirePrimaryKey }).(pulumi.StringPtrOutput)
}

// Limits the size of internal in-memory tables. Also set
// max_heap_table_size. Default is 16777216 (16M)
func (o GetMySqlMysqlUserConfigMysqlOutput) TmpTableSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMysql) *string { return v.TmpTableSize }).(pulumi.StringPtrOutput)
}

// The number of seconds the server waits for activity on
// a noninteractive connection before closing it.
func (o GetMySqlMysqlUserConfigMysqlOutput) WaitTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigMysql) *string { return v.WaitTimeout }).(pulumi.StringPtrOutput)
}

type GetMySqlMysqlUserConfigMysqlPtrOutput struct{ *pulumi.OutputState }

func (GetMySqlMysqlUserConfigMysqlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetMySqlMysqlUserConfigMysql)(nil)).Elem()
}

func (o GetMySqlMysqlUserConfigMysqlPtrOutput) ToGetMySqlMysqlUserConfigMysqlPtrOutput() GetMySqlMysqlUserConfigMysqlPtrOutput {
	return o
}

func (o GetMySqlMysqlUserConfigMysqlPtrOutput) ToGetMySqlMysqlUserConfigMysqlPtrOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigMysqlPtrOutput {
	return o
}

func (o GetMySqlMysqlUserConfigMysqlPtrOutput) Elem() GetMySqlMysqlUserConfigMysqlOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMysql) GetMySqlMysqlUserConfigMysql { return *v }).(GetMySqlMysqlUserConfigMysqlOutput)
}

// The number of seconds that the mysqld server waits for a
// connect packet before responding with Bad handshake
func (o GetMySqlMysqlUserConfigMysqlPtrOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.ConnectTimeout
	}).(pulumi.StringPtrOutput)
}

// Default server time zone as an offset from UTC
// (from -12:00 to +12:00), a time zone name, or 'SYSTEM' to use the MySQL server default.
func (o GetMySqlMysqlUserConfigMysqlPtrOutput) DefaultTimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.DefaultTimeZone
	}).(pulumi.StringPtrOutput)
}

// The maximum permitted result length in bytes for
// the GROUP_CONCAT() function.
func (o GetMySqlMysqlUserConfigMysqlPtrOutput) GroupConcatMaxLen() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.GroupConcatMaxLen
	}).(pulumi.StringPtrOutput)
}

// The time, in seconds, before cached
// statistics expire
func (o GetMySqlMysqlUserConfigMysqlPtrOutput) InformationSchemaStatsExpiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InformationSchemaStatsExpiry
	}).(pulumi.StringPtrOutput)
}

// Minimum length of words that are stored in
// an InnoDB FULLTEXT index.
func (o GetMySqlMysqlUserConfigMysqlPtrOutput) InnodbFtMinTokenSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbFtMinTokenSize
	}).(pulumi.StringPtrOutput)
}

// This option is used to specify your
// own InnoDB FULLTEXT index stopword list for all InnoDB tables.
func (o GetMySqlMysqlUserConfigMysqlPtrOutput) InnodbFtServerStopwordTable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbFtServerStopwordTable
	}).(pulumi.StringPtrOutput)
}

// The length of time in seconds an InnoDB
// transaction waits for a row lock before giving up.
func (o GetMySqlMysqlUserConfigMysqlPtrOutput) InnodbLockWaitTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbLockWaitTimeout
	}).(pulumi.StringPtrOutput)
}

// The size in bytes of the buffer that InnoDB
// uses to write to the log files on disk.
func (o GetMySqlMysqlUserConfigMysqlPtrOutput) InnodbLogBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbLogBufferSize
	}).(pulumi.StringPtrOutput)
}

// The upper limit in bytes on the
// size of the temporary log files used during online DDL operations for InnoDB tables.
func (o GetMySqlMysqlUserConfigMysqlPtrOutput) InnodbOnlineAlterLogMaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbOnlineAlterLogMaxSize
	}).(pulumi.StringPtrOutput)
}

// When enabled, information about all
// deadlocks in InnoDB user transactions is recorded in the error log. Disabled by default.
func (o GetMySqlMysqlUserConfigMysqlPtrOutput) InnodbPrintAllDeadlocks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbPrintAllDeadlocks
	}).(pulumi.StringPtrOutput)
}

// When enabled a transaction timeout
// causes InnoDB to abort and roll back the entire transaction.
func (o GetMySqlMysqlUserConfigMysqlPtrOutput) InnodbRollbackOnTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbRollbackOnTimeout
	}).(pulumi.StringPtrOutput)
}

// The number of seconds the server waits for
// activity on an interactive connection before closing it.
func (o GetMySqlMysqlUserConfigMysqlPtrOutput) InteractiveTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InteractiveTimeout
	}).(pulumi.StringPtrOutput)
}

// The slowQueryLogs work as SQL statements that take
// more than longQueryTime seconds to execute. Default is 10s
func (o GetMySqlMysqlUserConfigMysqlPtrOutput) LongQueryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.LongQueryTime
	}).(pulumi.StringPtrOutput)
}

// Size of the largest message in bytes that can
// be received by the server. Default is 67108864 (64M)
func (o GetMySqlMysqlUserConfigMysqlPtrOutput) MaxAllowedPacket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.MaxAllowedPacket
	}).(pulumi.StringPtrOutput)
}

// Limits the size of internal in-memory tables.
// Also set tmp_table_size. Default is 16777216 (16M)
func (o GetMySqlMysqlUserConfigMysqlPtrOutput) MaxHeapTableSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.MaxHeapTableSize
	}).(pulumi.StringPtrOutput)
}

// The number of seconds to wait for more data from
// a connection before aborting the read.
func (o GetMySqlMysqlUserConfigMysqlPtrOutput) NetReadTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.NetReadTimeout
	}).(pulumi.StringPtrOutput)
}

// The number of seconds to wait for a block to be
// written to a connection before aborting the write.
func (o GetMySqlMysqlUserConfigMysqlPtrOutput) NetWriteTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.NetWriteTimeout
	}).(pulumi.StringPtrOutput)
}

// Slow query log enables capturing of slow queries.
// Setting slowQueryLog to false also truncates the mysql.slow_log table. Default is off
func (o GetMySqlMysqlUserConfigMysqlPtrOutput) SlowQueryLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.SlowQueryLog
	}).(pulumi.StringPtrOutput)
}

// Sort buffer size in bytes for ORDER BY optimization.
// Default is 262144 (256K)
func (o GetMySqlMysqlUserConfigMysqlPtrOutput) SortBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.SortBufferSize
	}).(pulumi.StringPtrOutput)
}

// Global SQL mode. Set to empty to use MySQL server defaults.
// When creating a new service and not setting this field Aiven default SQL mode (strict,
// SQL standard compliant) will be assigned.
func (o GetMySqlMysqlUserConfigMysqlPtrOutput) SqlMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.SqlMode
	}).(pulumi.StringPtrOutput)
}

// Require primary key to be defined for new
// tables or old tables modified with ALTER TABLE and fail if missing. It is recommended
// to always have primary keys because various functionality may break if any large table
// is missing them.
func (o GetMySqlMysqlUserConfigMysqlPtrOutput) SqlRequirePrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.SqlRequirePrimaryKey
	}).(pulumi.StringPtrOutput)
}

// Limits the size of internal in-memory tables. Also set
// max_heap_table_size. Default is 16777216 (16M)
func (o GetMySqlMysqlUserConfigMysqlPtrOutput) TmpTableSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.TmpTableSize
	}).(pulumi.StringPtrOutput)
}

// The number of seconds the server waits for activity on
// a noninteractive connection before closing it.
func (o GetMySqlMysqlUserConfigMysqlPtrOutput) WaitTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.WaitTimeout
	}).(pulumi.StringPtrOutput)
}

type GetMySqlMysqlUserConfigPrivateAccess struct {
	// MySQL specific server provided values.
	Mysql *string `pulumi:"mysql"`
	// Allow clients to connect to prometheus from the public internet
	// for service nodes that are in a project VPC or another type of private network
	Prometheus *string `pulumi:"prometheus"`
}

// GetMySqlMysqlUserConfigPrivateAccessInput is an input type that accepts GetMySqlMysqlUserConfigPrivateAccessArgs and GetMySqlMysqlUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `GetMySqlMysqlUserConfigPrivateAccessInput` via:
//
//          GetMySqlMysqlUserConfigPrivateAccessArgs{...}
type GetMySqlMysqlUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToGetMySqlMysqlUserConfigPrivateAccessOutput() GetMySqlMysqlUserConfigPrivateAccessOutput
	ToGetMySqlMysqlUserConfigPrivateAccessOutputWithContext(context.Context) GetMySqlMysqlUserConfigPrivateAccessOutput
}

type GetMySqlMysqlUserConfigPrivateAccessArgs struct {
	// MySQL specific server provided values.
	Mysql pulumi.StringPtrInput `pulumi:"mysql"`
	// Allow clients to connect to prometheus from the public internet
	// for service nodes that are in a project VPC or another type of private network
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (GetMySqlMysqlUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMySqlMysqlUserConfigPrivateAccess)(nil)).Elem()
}

func (i GetMySqlMysqlUserConfigPrivateAccessArgs) ToGetMySqlMysqlUserConfigPrivateAccessOutput() GetMySqlMysqlUserConfigPrivateAccessOutput {
	return i.ToGetMySqlMysqlUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i GetMySqlMysqlUserConfigPrivateAccessArgs) ToGetMySqlMysqlUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMySqlMysqlUserConfigPrivateAccessOutput)
}

func (i GetMySqlMysqlUserConfigPrivateAccessArgs) ToGetMySqlMysqlUserConfigPrivateAccessPtrOutput() GetMySqlMysqlUserConfigPrivateAccessPtrOutput {
	return i.ToGetMySqlMysqlUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i GetMySqlMysqlUserConfigPrivateAccessArgs) ToGetMySqlMysqlUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMySqlMysqlUserConfigPrivateAccessOutput).ToGetMySqlMysqlUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// GetMySqlMysqlUserConfigPrivateAccessPtrInput is an input type that accepts GetMySqlMysqlUserConfigPrivateAccessArgs, GetMySqlMysqlUserConfigPrivateAccessPtr and GetMySqlMysqlUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `GetMySqlMysqlUserConfigPrivateAccessPtrInput` via:
//
//          GetMySqlMysqlUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type GetMySqlMysqlUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToGetMySqlMysqlUserConfigPrivateAccessPtrOutput() GetMySqlMysqlUserConfigPrivateAccessPtrOutput
	ToGetMySqlMysqlUserConfigPrivateAccessPtrOutputWithContext(context.Context) GetMySqlMysqlUserConfigPrivateAccessPtrOutput
}

type getMySqlMysqlUserConfigPrivateAccessPtrType GetMySqlMysqlUserConfigPrivateAccessArgs

func GetMySqlMysqlUserConfigPrivateAccessPtr(v *GetMySqlMysqlUserConfigPrivateAccessArgs) GetMySqlMysqlUserConfigPrivateAccessPtrInput {
	return (*getMySqlMysqlUserConfigPrivateAccessPtrType)(v)
}

func (*getMySqlMysqlUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetMySqlMysqlUserConfigPrivateAccess)(nil)).Elem()
}

func (i *getMySqlMysqlUserConfigPrivateAccessPtrType) ToGetMySqlMysqlUserConfigPrivateAccessPtrOutput() GetMySqlMysqlUserConfigPrivateAccessPtrOutput {
	return i.ToGetMySqlMysqlUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *getMySqlMysqlUserConfigPrivateAccessPtrType) ToGetMySqlMysqlUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMySqlMysqlUserConfigPrivateAccessPtrOutput)
}

type GetMySqlMysqlUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (GetMySqlMysqlUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMySqlMysqlUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetMySqlMysqlUserConfigPrivateAccessOutput) ToGetMySqlMysqlUserConfigPrivateAccessOutput() GetMySqlMysqlUserConfigPrivateAccessOutput {
	return o
}

func (o GetMySqlMysqlUserConfigPrivateAccessOutput) ToGetMySqlMysqlUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigPrivateAccessOutput {
	return o
}

func (o GetMySqlMysqlUserConfigPrivateAccessOutput) ToGetMySqlMysqlUserConfigPrivateAccessPtrOutput() GetMySqlMysqlUserConfigPrivateAccessPtrOutput {
	return o.ToGetMySqlMysqlUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o GetMySqlMysqlUserConfigPrivateAccessOutput) ToGetMySqlMysqlUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigPrivateAccess) *GetMySqlMysqlUserConfigPrivateAccess {
		return &v
	}).(GetMySqlMysqlUserConfigPrivateAccessPtrOutput)
}

// MySQL specific server provided values.
func (o GetMySqlMysqlUserConfigPrivateAccessOutput) Mysql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigPrivateAccess) *string { return v.Mysql }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public internet
// for service nodes that are in a project VPC or another type of private network
func (o GetMySqlMysqlUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type GetMySqlMysqlUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (GetMySqlMysqlUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetMySqlMysqlUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetMySqlMysqlUserConfigPrivateAccessPtrOutput) ToGetMySqlMysqlUserConfigPrivateAccessPtrOutput() GetMySqlMysqlUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetMySqlMysqlUserConfigPrivateAccessPtrOutput) ToGetMySqlMysqlUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetMySqlMysqlUserConfigPrivateAccessPtrOutput) Elem() GetMySqlMysqlUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigPrivateAccess) GetMySqlMysqlUserConfigPrivateAccess { return *v }).(GetMySqlMysqlUserConfigPrivateAccessOutput)
}

// MySQL specific server provided values.
func (o GetMySqlMysqlUserConfigPrivateAccessPtrOutput) Mysql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Mysql
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public internet
// for service nodes that are in a project VPC or another type of private network
func (o GetMySqlMysqlUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type GetMySqlMysqlUserConfigPrivatelinkAccess struct {
	// MySQL specific server provided values.
	Mysql *string `pulumi:"mysql"`
}

// GetMySqlMysqlUserConfigPrivatelinkAccessInput is an input type that accepts GetMySqlMysqlUserConfigPrivatelinkAccessArgs and GetMySqlMysqlUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `GetMySqlMysqlUserConfigPrivatelinkAccessInput` via:
//
//          GetMySqlMysqlUserConfigPrivatelinkAccessArgs{...}
type GetMySqlMysqlUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToGetMySqlMysqlUserConfigPrivatelinkAccessOutput() GetMySqlMysqlUserConfigPrivatelinkAccessOutput
	ToGetMySqlMysqlUserConfigPrivatelinkAccessOutputWithContext(context.Context) GetMySqlMysqlUserConfigPrivatelinkAccessOutput
}

type GetMySqlMysqlUserConfigPrivatelinkAccessArgs struct {
	// MySQL specific server provided values.
	Mysql pulumi.StringPtrInput `pulumi:"mysql"`
}

func (GetMySqlMysqlUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMySqlMysqlUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i GetMySqlMysqlUserConfigPrivatelinkAccessArgs) ToGetMySqlMysqlUserConfigPrivatelinkAccessOutput() GetMySqlMysqlUserConfigPrivatelinkAccessOutput {
	return i.ToGetMySqlMysqlUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i GetMySqlMysqlUserConfigPrivatelinkAccessArgs) ToGetMySqlMysqlUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMySqlMysqlUserConfigPrivatelinkAccessOutput)
}

func (i GetMySqlMysqlUserConfigPrivatelinkAccessArgs) ToGetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput() GetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetMySqlMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i GetMySqlMysqlUserConfigPrivatelinkAccessArgs) ToGetMySqlMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMySqlMysqlUserConfigPrivatelinkAccessOutput).ToGetMySqlMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// GetMySqlMysqlUserConfigPrivatelinkAccessPtrInput is an input type that accepts GetMySqlMysqlUserConfigPrivatelinkAccessArgs, GetMySqlMysqlUserConfigPrivatelinkAccessPtr and GetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `GetMySqlMysqlUserConfigPrivatelinkAccessPtrInput` via:
//
//          GetMySqlMysqlUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type GetMySqlMysqlUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToGetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput() GetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput
	ToGetMySqlMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) GetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput
}

type getMySqlMysqlUserConfigPrivatelinkAccessPtrType GetMySqlMysqlUserConfigPrivatelinkAccessArgs

func GetMySqlMysqlUserConfigPrivatelinkAccessPtr(v *GetMySqlMysqlUserConfigPrivatelinkAccessArgs) GetMySqlMysqlUserConfigPrivatelinkAccessPtrInput {
	return (*getMySqlMysqlUserConfigPrivatelinkAccessPtrType)(v)
}

func (*getMySqlMysqlUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetMySqlMysqlUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *getMySqlMysqlUserConfigPrivatelinkAccessPtrType) ToGetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput() GetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetMySqlMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *getMySqlMysqlUserConfigPrivatelinkAccessPtrType) ToGetMySqlMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput)
}

type GetMySqlMysqlUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (GetMySqlMysqlUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMySqlMysqlUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetMySqlMysqlUserConfigPrivatelinkAccessOutput) ToGetMySqlMysqlUserConfigPrivatelinkAccessOutput() GetMySqlMysqlUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetMySqlMysqlUserConfigPrivatelinkAccessOutput) ToGetMySqlMysqlUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetMySqlMysqlUserConfigPrivatelinkAccessOutput) ToGetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput() GetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput {
	return o.ToGetMySqlMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o GetMySqlMysqlUserConfigPrivatelinkAccessOutput) ToGetMySqlMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigPrivatelinkAccess) *GetMySqlMysqlUserConfigPrivatelinkAccess {
		return &v
	}).(GetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput)
}

// MySQL specific server provided values.
func (o GetMySqlMysqlUserConfigPrivatelinkAccessOutput) Mysql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigPrivatelinkAccess) *string { return v.Mysql }).(pulumi.StringPtrOutput)
}

type GetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (GetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetMySqlMysqlUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput) ToGetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput() GetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput) ToGetMySqlMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput) Elem() GetMySqlMysqlUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigPrivatelinkAccess) GetMySqlMysqlUserConfigPrivatelinkAccess { return *v }).(GetMySqlMysqlUserConfigPrivatelinkAccessOutput)
}

// MySQL specific server provided values.
func (o GetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput) Mysql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Mysql
	}).(pulumi.StringPtrOutput)
}

type GetMySqlMysqlUserConfigPublicAccess struct {
	// MySQL specific server provided values.
	Mysql *string `pulumi:"mysql"`
	// Allow clients to connect to prometheus from the public internet
	// for service nodes that are in a project VPC or another type of private network
	Prometheus *string `pulumi:"prometheus"`
}

// GetMySqlMysqlUserConfigPublicAccessInput is an input type that accepts GetMySqlMysqlUserConfigPublicAccessArgs and GetMySqlMysqlUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `GetMySqlMysqlUserConfigPublicAccessInput` via:
//
//          GetMySqlMysqlUserConfigPublicAccessArgs{...}
type GetMySqlMysqlUserConfigPublicAccessInput interface {
	pulumi.Input

	ToGetMySqlMysqlUserConfigPublicAccessOutput() GetMySqlMysqlUserConfigPublicAccessOutput
	ToGetMySqlMysqlUserConfigPublicAccessOutputWithContext(context.Context) GetMySqlMysqlUserConfigPublicAccessOutput
}

type GetMySqlMysqlUserConfigPublicAccessArgs struct {
	// MySQL specific server provided values.
	Mysql pulumi.StringPtrInput `pulumi:"mysql"`
	// Allow clients to connect to prometheus from the public internet
	// for service nodes that are in a project VPC or another type of private network
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (GetMySqlMysqlUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMySqlMysqlUserConfigPublicAccess)(nil)).Elem()
}

func (i GetMySqlMysqlUserConfigPublicAccessArgs) ToGetMySqlMysqlUserConfigPublicAccessOutput() GetMySqlMysqlUserConfigPublicAccessOutput {
	return i.ToGetMySqlMysqlUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i GetMySqlMysqlUserConfigPublicAccessArgs) ToGetMySqlMysqlUserConfigPublicAccessOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMySqlMysqlUserConfigPublicAccessOutput)
}

func (i GetMySqlMysqlUserConfigPublicAccessArgs) ToGetMySqlMysqlUserConfigPublicAccessPtrOutput() GetMySqlMysqlUserConfigPublicAccessPtrOutput {
	return i.ToGetMySqlMysqlUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i GetMySqlMysqlUserConfigPublicAccessArgs) ToGetMySqlMysqlUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMySqlMysqlUserConfigPublicAccessOutput).ToGetMySqlMysqlUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// GetMySqlMysqlUserConfigPublicAccessPtrInput is an input type that accepts GetMySqlMysqlUserConfigPublicAccessArgs, GetMySqlMysqlUserConfigPublicAccessPtr and GetMySqlMysqlUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `GetMySqlMysqlUserConfigPublicAccessPtrInput` via:
//
//          GetMySqlMysqlUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type GetMySqlMysqlUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToGetMySqlMysqlUserConfigPublicAccessPtrOutput() GetMySqlMysqlUserConfigPublicAccessPtrOutput
	ToGetMySqlMysqlUserConfigPublicAccessPtrOutputWithContext(context.Context) GetMySqlMysqlUserConfigPublicAccessPtrOutput
}

type getMySqlMysqlUserConfigPublicAccessPtrType GetMySqlMysqlUserConfigPublicAccessArgs

func GetMySqlMysqlUserConfigPublicAccessPtr(v *GetMySqlMysqlUserConfigPublicAccessArgs) GetMySqlMysqlUserConfigPublicAccessPtrInput {
	return (*getMySqlMysqlUserConfigPublicAccessPtrType)(v)
}

func (*getMySqlMysqlUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetMySqlMysqlUserConfigPublicAccess)(nil)).Elem()
}

func (i *getMySqlMysqlUserConfigPublicAccessPtrType) ToGetMySqlMysqlUserConfigPublicAccessPtrOutput() GetMySqlMysqlUserConfigPublicAccessPtrOutput {
	return i.ToGetMySqlMysqlUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *getMySqlMysqlUserConfigPublicAccessPtrType) ToGetMySqlMysqlUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMySqlMysqlUserConfigPublicAccessPtrOutput)
}

type GetMySqlMysqlUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (GetMySqlMysqlUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMySqlMysqlUserConfigPublicAccess)(nil)).Elem()
}

func (o GetMySqlMysqlUserConfigPublicAccessOutput) ToGetMySqlMysqlUserConfigPublicAccessOutput() GetMySqlMysqlUserConfigPublicAccessOutput {
	return o
}

func (o GetMySqlMysqlUserConfigPublicAccessOutput) ToGetMySqlMysqlUserConfigPublicAccessOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigPublicAccessOutput {
	return o
}

func (o GetMySqlMysqlUserConfigPublicAccessOutput) ToGetMySqlMysqlUserConfigPublicAccessPtrOutput() GetMySqlMysqlUserConfigPublicAccessPtrOutput {
	return o.ToGetMySqlMysqlUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o GetMySqlMysqlUserConfigPublicAccessOutput) ToGetMySqlMysqlUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigPublicAccess) *GetMySqlMysqlUserConfigPublicAccess {
		return &v
	}).(GetMySqlMysqlUserConfigPublicAccessPtrOutput)
}

// MySQL specific server provided values.
func (o GetMySqlMysqlUserConfigPublicAccessOutput) Mysql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigPublicAccess) *string { return v.Mysql }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public internet
// for service nodes that are in a project VPC or another type of private network
func (o GetMySqlMysqlUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMySqlMysqlUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type GetMySqlMysqlUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (GetMySqlMysqlUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetMySqlMysqlUserConfigPublicAccess)(nil)).Elem()
}

func (o GetMySqlMysqlUserConfigPublicAccessPtrOutput) ToGetMySqlMysqlUserConfigPublicAccessPtrOutput() GetMySqlMysqlUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetMySqlMysqlUserConfigPublicAccessPtrOutput) ToGetMySqlMysqlUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetMySqlMysqlUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetMySqlMysqlUserConfigPublicAccessPtrOutput) Elem() GetMySqlMysqlUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigPublicAccess) GetMySqlMysqlUserConfigPublicAccess { return *v }).(GetMySqlMysqlUserConfigPublicAccessOutput)
}

// MySQL specific server provided values.
func (o GetMySqlMysqlUserConfigPublicAccessPtrOutput) Mysql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Mysql
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public internet
// for service nodes that are in a project VPC or another type of private network
func (o GetMySqlMysqlUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetMySqlMysqlUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type GetMySqlServiceIntegration struct {
	IntegrationType   string `pulumi:"integrationType"`
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// GetMySqlServiceIntegrationInput is an input type that accepts GetMySqlServiceIntegrationArgs and GetMySqlServiceIntegrationOutput values.
// You can construct a concrete instance of `GetMySqlServiceIntegrationInput` via:
//
//          GetMySqlServiceIntegrationArgs{...}
type GetMySqlServiceIntegrationInput interface {
	pulumi.Input

	ToGetMySqlServiceIntegrationOutput() GetMySqlServiceIntegrationOutput
	ToGetMySqlServiceIntegrationOutputWithContext(context.Context) GetMySqlServiceIntegrationOutput
}

type GetMySqlServiceIntegrationArgs struct {
	IntegrationType   pulumi.StringInput `pulumi:"integrationType"`
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (GetMySqlServiceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMySqlServiceIntegration)(nil)).Elem()
}

func (i GetMySqlServiceIntegrationArgs) ToGetMySqlServiceIntegrationOutput() GetMySqlServiceIntegrationOutput {
	return i.ToGetMySqlServiceIntegrationOutputWithContext(context.Background())
}

func (i GetMySqlServiceIntegrationArgs) ToGetMySqlServiceIntegrationOutputWithContext(ctx context.Context) GetMySqlServiceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMySqlServiceIntegrationOutput)
}

// GetMySqlServiceIntegrationArrayInput is an input type that accepts GetMySqlServiceIntegrationArray and GetMySqlServiceIntegrationArrayOutput values.
// You can construct a concrete instance of `GetMySqlServiceIntegrationArrayInput` via:
//
//          GetMySqlServiceIntegrationArray{ GetMySqlServiceIntegrationArgs{...} }
type GetMySqlServiceIntegrationArrayInput interface {
	pulumi.Input

	ToGetMySqlServiceIntegrationArrayOutput() GetMySqlServiceIntegrationArrayOutput
	ToGetMySqlServiceIntegrationArrayOutputWithContext(context.Context) GetMySqlServiceIntegrationArrayOutput
}

type GetMySqlServiceIntegrationArray []GetMySqlServiceIntegrationInput

func (GetMySqlServiceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMySqlServiceIntegration)(nil)).Elem()
}

func (i GetMySqlServiceIntegrationArray) ToGetMySqlServiceIntegrationArrayOutput() GetMySqlServiceIntegrationArrayOutput {
	return i.ToGetMySqlServiceIntegrationArrayOutputWithContext(context.Background())
}

func (i GetMySqlServiceIntegrationArray) ToGetMySqlServiceIntegrationArrayOutputWithContext(ctx context.Context) GetMySqlServiceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMySqlServiceIntegrationArrayOutput)
}

type GetMySqlServiceIntegrationOutput struct{ *pulumi.OutputState }

func (GetMySqlServiceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMySqlServiceIntegration)(nil)).Elem()
}

func (o GetMySqlServiceIntegrationOutput) ToGetMySqlServiceIntegrationOutput() GetMySqlServiceIntegrationOutput {
	return o
}

func (o GetMySqlServiceIntegrationOutput) ToGetMySqlServiceIntegrationOutputWithContext(ctx context.Context) GetMySqlServiceIntegrationOutput {
	return o
}

func (o GetMySqlServiceIntegrationOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMySqlServiceIntegration) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o GetMySqlServiceIntegrationOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMySqlServiceIntegration) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

type GetMySqlServiceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (GetMySqlServiceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMySqlServiceIntegration)(nil)).Elem()
}

func (o GetMySqlServiceIntegrationArrayOutput) ToGetMySqlServiceIntegrationArrayOutput() GetMySqlServiceIntegrationArrayOutput {
	return o
}

func (o GetMySqlServiceIntegrationArrayOutput) ToGetMySqlServiceIntegrationArrayOutputWithContext(ctx context.Context) GetMySqlServiceIntegrationArrayOutput {
	return o
}

func (o GetMySqlServiceIntegrationArrayOutput) Index(i pulumi.IntInput) GetMySqlServiceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMySqlServiceIntegration {
		return vs[0].([]GetMySqlServiceIntegration)[vs[1].(int)]
	}).(GetMySqlServiceIntegrationOutput)
}

type GetPgComponent struct {
	Component string `pulumi:"component"`
	// PostgreSQL master node host IP or name
	Host                      string `pulumi:"host"`
	KafkaAuthenticationMethod string `pulumi:"kafkaAuthenticationMethod"`
	// PostgreSQL port
	Port  int    `pulumi:"port"`
	Route string `pulumi:"route"`
	// the server where to migrate data from is secured with SSL.
	Ssl   bool   `pulumi:"ssl"`
	Usage string `pulumi:"usage"`
}

// GetPgComponentInput is an input type that accepts GetPgComponentArgs and GetPgComponentOutput values.
// You can construct a concrete instance of `GetPgComponentInput` via:
//
//          GetPgComponentArgs{...}
type GetPgComponentInput interface {
	pulumi.Input

	ToGetPgComponentOutput() GetPgComponentOutput
	ToGetPgComponentOutputWithContext(context.Context) GetPgComponentOutput
}

type GetPgComponentArgs struct {
	Component pulumi.StringInput `pulumi:"component"`
	// PostgreSQL master node host IP or name
	Host                      pulumi.StringInput `pulumi:"host"`
	KafkaAuthenticationMethod pulumi.StringInput `pulumi:"kafkaAuthenticationMethod"`
	// PostgreSQL port
	Port  pulumi.IntInput    `pulumi:"port"`
	Route pulumi.StringInput `pulumi:"route"`
	// the server where to migrate data from is secured with SSL.
	Ssl   pulumi.BoolInput   `pulumi:"ssl"`
	Usage pulumi.StringInput `pulumi:"usage"`
}

func (GetPgComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgComponent)(nil)).Elem()
}

func (i GetPgComponentArgs) ToGetPgComponentOutput() GetPgComponentOutput {
	return i.ToGetPgComponentOutputWithContext(context.Background())
}

func (i GetPgComponentArgs) ToGetPgComponentOutputWithContext(ctx context.Context) GetPgComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgComponentOutput)
}

// GetPgComponentArrayInput is an input type that accepts GetPgComponentArray and GetPgComponentArrayOutput values.
// You can construct a concrete instance of `GetPgComponentArrayInput` via:
//
//          GetPgComponentArray{ GetPgComponentArgs{...} }
type GetPgComponentArrayInput interface {
	pulumi.Input

	ToGetPgComponentArrayOutput() GetPgComponentArrayOutput
	ToGetPgComponentArrayOutputWithContext(context.Context) GetPgComponentArrayOutput
}

type GetPgComponentArray []GetPgComponentInput

func (GetPgComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgComponent)(nil)).Elem()
}

func (i GetPgComponentArray) ToGetPgComponentArrayOutput() GetPgComponentArrayOutput {
	return i.ToGetPgComponentArrayOutputWithContext(context.Background())
}

func (i GetPgComponentArray) ToGetPgComponentArrayOutputWithContext(ctx context.Context) GetPgComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgComponentArrayOutput)
}

type GetPgComponentOutput struct{ *pulumi.OutputState }

func (GetPgComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgComponent)(nil)).Elem()
}

func (o GetPgComponentOutput) ToGetPgComponentOutput() GetPgComponentOutput {
	return o
}

func (o GetPgComponentOutput) ToGetPgComponentOutputWithContext(ctx context.Context) GetPgComponentOutput {
	return o
}

func (o GetPgComponentOutput) Component() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgComponent) string { return v.Component }).(pulumi.StringOutput)
}

// PostgreSQL master node host IP or name
func (o GetPgComponentOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgComponent) string { return v.Host }).(pulumi.StringOutput)
}

func (o GetPgComponentOutput) KafkaAuthenticationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgComponent) string { return v.KafkaAuthenticationMethod }).(pulumi.StringOutput)
}

// PostgreSQL port
func (o GetPgComponentOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetPgComponent) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetPgComponentOutput) Route() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgComponent) string { return v.Route }).(pulumi.StringOutput)
}

// the server where to migrate data from is secured with SSL.
func (o GetPgComponentOutput) Ssl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPgComponent) bool { return v.Ssl }).(pulumi.BoolOutput)
}

func (o GetPgComponentOutput) Usage() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgComponent) string { return v.Usage }).(pulumi.StringOutput)
}

type GetPgComponentArrayOutput struct{ *pulumi.OutputState }

func (GetPgComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgComponent)(nil)).Elem()
}

func (o GetPgComponentArrayOutput) ToGetPgComponentArrayOutput() GetPgComponentArrayOutput {
	return o
}

func (o GetPgComponentArrayOutput) ToGetPgComponentArrayOutputWithContext(ctx context.Context) GetPgComponentArrayOutput {
	return o
}

func (o GetPgComponentArrayOutput) Index(i pulumi.IntInput) GetPgComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPgComponent {
		return vs[0].([]GetPgComponent)[vs[1].(int)]
	}).(GetPgComponentOutput)
}

type GetPgPg struct {
	// Primary PostgreSQL database name
	Dbname string `pulumi:"dbname"`
	// PostgreSQL master node host IP or name
	Host string `pulumi:"host"`
	// PostgreSQL admin user password
	Password string `pulumi:"password"`
	// PostgreSQL port
	Port int `pulumi:"port"`
	// PostgreSQL replica URI for services with a replica
	ReplicaUri string `pulumi:"replicaUri"`
	// PostgreSQL sslmode setting (currently always `require`)
	Sslmode string `pulumi:"sslmode"`
	// PostgreSQL master connection URI
	Uri string `pulumi:"uri"`
	// PostgreSQL admin user name
	User string `pulumi:"user"`
}

// GetPgPgInput is an input type that accepts GetPgPgArgs and GetPgPgOutput values.
// You can construct a concrete instance of `GetPgPgInput` via:
//
//          GetPgPgArgs{...}
type GetPgPgInput interface {
	pulumi.Input

	ToGetPgPgOutput() GetPgPgOutput
	ToGetPgPgOutputWithContext(context.Context) GetPgPgOutput
}

type GetPgPgArgs struct {
	// Primary PostgreSQL database name
	Dbname pulumi.StringInput `pulumi:"dbname"`
	// PostgreSQL master node host IP or name
	Host pulumi.StringInput `pulumi:"host"`
	// PostgreSQL admin user password
	Password pulumi.StringInput `pulumi:"password"`
	// PostgreSQL port
	Port pulumi.IntInput `pulumi:"port"`
	// PostgreSQL replica URI for services with a replica
	ReplicaUri pulumi.StringInput `pulumi:"replicaUri"`
	// PostgreSQL sslmode setting (currently always `require`)
	Sslmode pulumi.StringInput `pulumi:"sslmode"`
	// PostgreSQL master connection URI
	Uri pulumi.StringInput `pulumi:"uri"`
	// PostgreSQL admin user name
	User pulumi.StringInput `pulumi:"user"`
}

func (GetPgPgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgPg)(nil)).Elem()
}

func (i GetPgPgArgs) ToGetPgPgOutput() GetPgPgOutput {
	return i.ToGetPgPgOutputWithContext(context.Background())
}

func (i GetPgPgArgs) ToGetPgPgOutputWithContext(ctx context.Context) GetPgPgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPgOutput)
}

type GetPgPgOutput struct{ *pulumi.OutputState }

func (GetPgPgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgPg)(nil)).Elem()
}

func (o GetPgPgOutput) ToGetPgPgOutput() GetPgPgOutput {
	return o
}

func (o GetPgPgOutput) ToGetPgPgOutputWithContext(ctx context.Context) GetPgPgOutput {
	return o
}

// Primary PostgreSQL database name
func (o GetPgPgOutput) Dbname() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgPg) string { return v.Dbname }).(pulumi.StringOutput)
}

// PostgreSQL master node host IP or name
func (o GetPgPgOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgPg) string { return v.Host }).(pulumi.StringOutput)
}

// PostgreSQL admin user password
func (o GetPgPgOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgPg) string { return v.Password }).(pulumi.StringOutput)
}

// PostgreSQL port
func (o GetPgPgOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetPgPg) int { return v.Port }).(pulumi.IntOutput)
}

// PostgreSQL replica URI for services with a replica
func (o GetPgPgOutput) ReplicaUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgPg) string { return v.ReplicaUri }).(pulumi.StringOutput)
}

// PostgreSQL sslmode setting (currently always `require`)
func (o GetPgPgOutput) Sslmode() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgPg) string { return v.Sslmode }).(pulumi.StringOutput)
}

// PostgreSQL master connection URI
func (o GetPgPgOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgPg) string { return v.Uri }).(pulumi.StringOutput)
}

// PostgreSQL admin user name
func (o GetPgPgOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgPg) string { return v.User }).(pulumi.StringOutput)
}

type GetPgPgUserConfig struct {
	// custom password for admin user. Defaults to random string. *This must
	// be set only when a new service is being created.*
	AdminPassword *string `pulumi:"adminPassword"`
	// custom username for admin user. *This must be set only when a new service
	// is being created.*
	AdminUsername *string `pulumi:"adminUsername"`
	// the hour of day (in UTC) when backup for the service is started. New backup
	// is only started if previous backup has already completed.
	BackupHour *string `pulumi:"backupHour"`
	// the minute of an hour when backup for the service is started. New backup
	// is only started if previous backup has already completed.
	BackupMinute *string `pulumi:"backupMinute"`
	// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters []string `pulumi:"ipFilters"`
	// migrate data from existing server, has the following options:
	Migration *GetPgPgUserConfigMigration `pulumi:"migration"`
	// PostgreSQL specific server provided values.
	Pg *GetPgPgUserConfigPg `pulumi:"pg"`
	// This setting is deprecated. Use read-replica service integration instead.
	PgReadReplica *string `pulumi:"pgReadReplica"`
	// Name of the PG Service from which to fork (deprecated, use service_to_fork_from).
	// This has effect only when a new service is being created.
	PgServiceToForkFrom *string `pulumi:"pgServiceToForkFrom"`
	// PostgreSQL major version.
	PgVersion *string `pulumi:"pgVersion"`
	// Enable pgbouncer.
	Pgbouncer *GetPgPgUserConfigPgbouncer `pulumi:"pgbouncer"`
	// PGLookout settings.
	Pglookout *GetPgPgUserConfigPglookout `pulumi:"pglookout"`
	// Allow access to selected service ports from private networks.
	PrivateAccess *GetPgPgUserConfigPrivateAccess `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink.
	PrivatelinkAccess *GetPgPgUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom *string `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet
	PublicAccess *GetPgPgUserConfigPublicAccess `pulumi:"publicAccess"`
	// Recovery target time when forking a service. This has effect
	// only when a new service is being created.
	RecoveryTargetTime *string `pulumi:"recoveryTargetTime"`
	// Name of another service to fork from. This has effect only
	// when a new service is being created.
	ServiceToForkFrom *string `pulumi:"serviceToForkFrom"`
	// Percentage of total RAM that the database server uses for
	// memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts
	// the sharedBuffers configuration value. The absolute maximum is 12 GB.
	SharedBuffersPercentage *string `pulumi:"sharedBuffersPercentage"`
	// Synchronous replication type. Note that the service plan
	// also needs to support synchronous replication.
	SynchronousReplication *string `pulumi:"synchronousReplication"`
	// TimescaleDB extension configuration values.
	Timescaledb *GetPgPgUserConfigTimescaledb `pulumi:"timescaledb"`
	// Variant of the PostgreSQL service, may affect the features that are
	// exposed by default. Options: `aiven` or `timescale`.
	Variant *string `pulumi:"variant"`
	// Sets the maximum amount of memory to be used by a query operation (such
	// as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of
	// total RAM (up to 32MB).
	WorkMem *string `pulumi:"workMem"`
}

// GetPgPgUserConfigInput is an input type that accepts GetPgPgUserConfigArgs and GetPgPgUserConfigOutput values.
// You can construct a concrete instance of `GetPgPgUserConfigInput` via:
//
//          GetPgPgUserConfigArgs{...}
type GetPgPgUserConfigInput interface {
	pulumi.Input

	ToGetPgPgUserConfigOutput() GetPgPgUserConfigOutput
	ToGetPgPgUserConfigOutputWithContext(context.Context) GetPgPgUserConfigOutput
}

type GetPgPgUserConfigArgs struct {
	// custom password for admin user. Defaults to random string. *This must
	// be set only when a new service is being created.*
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// custom username for admin user. *This must be set only when a new service
	// is being created.*
	AdminUsername pulumi.StringPtrInput `pulumi:"adminUsername"`
	// the hour of day (in UTC) when backup for the service is started. New backup
	// is only started if previous backup has already completed.
	BackupHour pulumi.StringPtrInput `pulumi:"backupHour"`
	// the minute of an hour when backup for the service is started. New backup
	// is only started if previous backup has already completed.
	BackupMinute pulumi.StringPtrInput `pulumi:"backupMinute"`
	// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// migrate data from existing server, has the following options:
	Migration GetPgPgUserConfigMigrationPtrInput `pulumi:"migration"`
	// PostgreSQL specific server provided values.
	Pg GetPgPgUserConfigPgPtrInput `pulumi:"pg"`
	// This setting is deprecated. Use read-replica service integration instead.
	PgReadReplica pulumi.StringPtrInput `pulumi:"pgReadReplica"`
	// Name of the PG Service from which to fork (deprecated, use service_to_fork_from).
	// This has effect only when a new service is being created.
	PgServiceToForkFrom pulumi.StringPtrInput `pulumi:"pgServiceToForkFrom"`
	// PostgreSQL major version.
	PgVersion pulumi.StringPtrInput `pulumi:"pgVersion"`
	// Enable pgbouncer.
	Pgbouncer GetPgPgUserConfigPgbouncerPtrInput `pulumi:"pgbouncer"`
	// PGLookout settings.
	Pglookout GetPgPgUserConfigPglookoutPtrInput `pulumi:"pglookout"`
	// Allow access to selected service ports from private networks.
	PrivateAccess GetPgPgUserConfigPrivateAccessPtrInput `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink.
	PrivatelinkAccess GetPgPgUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom pulumi.StringPtrInput `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet
	PublicAccess GetPgPgUserConfigPublicAccessPtrInput `pulumi:"publicAccess"`
	// Recovery target time when forking a service. This has effect
	// only when a new service is being created.
	RecoveryTargetTime pulumi.StringPtrInput `pulumi:"recoveryTargetTime"`
	// Name of another service to fork from. This has effect only
	// when a new service is being created.
	ServiceToForkFrom pulumi.StringPtrInput `pulumi:"serviceToForkFrom"`
	// Percentage of total RAM that the database server uses for
	// memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts
	// the sharedBuffers configuration value. The absolute maximum is 12 GB.
	SharedBuffersPercentage pulumi.StringPtrInput `pulumi:"sharedBuffersPercentage"`
	// Synchronous replication type. Note that the service plan
	// also needs to support synchronous replication.
	SynchronousReplication pulumi.StringPtrInput `pulumi:"synchronousReplication"`
	// TimescaleDB extension configuration values.
	Timescaledb GetPgPgUserConfigTimescaledbPtrInput `pulumi:"timescaledb"`
	// Variant of the PostgreSQL service, may affect the features that are
	// exposed by default. Options: `aiven` or `timescale`.
	Variant pulumi.StringPtrInput `pulumi:"variant"`
	// Sets the maximum amount of memory to be used by a query operation (such
	// as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of
	// total RAM (up to 32MB).
	WorkMem pulumi.StringPtrInput `pulumi:"workMem"`
}

func (GetPgPgUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgPgUserConfig)(nil)).Elem()
}

func (i GetPgPgUserConfigArgs) ToGetPgPgUserConfigOutput() GetPgPgUserConfigOutput {
	return i.ToGetPgPgUserConfigOutputWithContext(context.Background())
}

func (i GetPgPgUserConfigArgs) ToGetPgPgUserConfigOutputWithContext(ctx context.Context) GetPgPgUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPgUserConfigOutput)
}

type GetPgPgUserConfigOutput struct{ *pulumi.OutputState }

func (GetPgPgUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgPgUserConfig)(nil)).Elem()
}

func (o GetPgPgUserConfigOutput) ToGetPgPgUserConfigOutput() GetPgPgUserConfigOutput {
	return o
}

func (o GetPgPgUserConfigOutput) ToGetPgPgUserConfigOutputWithContext(ctx context.Context) GetPgPgUserConfigOutput {
	return o
}

// custom password for admin user. Defaults to random string. *This must
// be set only when a new service is being created.*
func (o GetPgPgUserConfigOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfig) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// custom username for admin user. *This must be set only when a new service
// is being created.*
func (o GetPgPgUserConfigOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfig) *string { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

// the hour of day (in UTC) when backup for the service is started. New backup
// is only started if previous backup has already completed.
func (o GetPgPgUserConfigOutput) BackupHour() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfig) *string { return v.BackupHour }).(pulumi.StringPtrOutput)
}

// the minute of an hour when backup for the service is started. New backup
// is only started if previous backup has already completed.
func (o GetPgPgUserConfigOutput) BackupMinute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfig) *string { return v.BackupMinute }).(pulumi.StringPtrOutput)
}

// allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
func (o GetPgPgUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPgPgUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// migrate data from existing server, has the following options:
func (o GetPgPgUserConfigOutput) Migration() GetPgPgUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfig) *GetPgPgUserConfigMigration { return v.Migration }).(GetPgPgUserConfigMigrationPtrOutput)
}

// PostgreSQL specific server provided values.
func (o GetPgPgUserConfigOutput) Pg() GetPgPgUserConfigPgPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfig) *GetPgPgUserConfigPg { return v.Pg }).(GetPgPgUserConfigPgPtrOutput)
}

// This setting is deprecated. Use read-replica service integration instead.
func (o GetPgPgUserConfigOutput) PgReadReplica() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfig) *string { return v.PgReadReplica }).(pulumi.StringPtrOutput)
}

// Name of the PG Service from which to fork (deprecated, use service_to_fork_from).
// This has effect only when a new service is being created.
func (o GetPgPgUserConfigOutput) PgServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfig) *string { return v.PgServiceToForkFrom }).(pulumi.StringPtrOutput)
}

// PostgreSQL major version.
func (o GetPgPgUserConfigOutput) PgVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfig) *string { return v.PgVersion }).(pulumi.StringPtrOutput)
}

// Enable pgbouncer.
func (o GetPgPgUserConfigOutput) Pgbouncer() GetPgPgUserConfigPgbouncerPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfig) *GetPgPgUserConfigPgbouncer { return v.Pgbouncer }).(GetPgPgUserConfigPgbouncerPtrOutput)
}

// PGLookout settings.
func (o GetPgPgUserConfigOutput) Pglookout() GetPgPgUserConfigPglookoutPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfig) *GetPgPgUserConfigPglookout { return v.Pglookout }).(GetPgPgUserConfigPglookoutPtrOutput)
}

// Allow access to selected service ports from private networks.
func (o GetPgPgUserConfigOutput) PrivateAccess() GetPgPgUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfig) *GetPgPgUserConfigPrivateAccess { return v.PrivateAccess }).(GetPgPgUserConfigPrivateAccessPtrOutput)
}

// Allow access to selected service components through Privatelink.
func (o GetPgPgUserConfigOutput) PrivatelinkAccess() GetPgPgUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfig) *GetPgPgUserConfigPrivatelinkAccess { return v.PrivatelinkAccess }).(GetPgPgUserConfigPrivatelinkAccessPtrOutput)
}

// Name of another project to fork a service from. This has
// effect only when a new service is being created.
func (o GetPgPgUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from the public Internet
func (o GetPgPgUserConfigOutput) PublicAccess() GetPgPgUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfig) *GetPgPgUserConfigPublicAccess { return v.PublicAccess }).(GetPgPgUserConfigPublicAccessPtrOutput)
}

// Recovery target time when forking a service. This has effect
// only when a new service is being created.
func (o GetPgPgUserConfigOutput) RecoveryTargetTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfig) *string { return v.RecoveryTargetTime }).(pulumi.StringPtrOutput)
}

// Name of another service to fork from. This has effect only
// when a new service is being created.
func (o GetPgPgUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

// Percentage of total RAM that the database server uses for
// memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts
// the sharedBuffers configuration value. The absolute maximum is 12 GB.
func (o GetPgPgUserConfigOutput) SharedBuffersPercentage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfig) *string { return v.SharedBuffersPercentage }).(pulumi.StringPtrOutput)
}

// Synchronous replication type. Note that the service plan
// also needs to support synchronous replication.
func (o GetPgPgUserConfigOutput) SynchronousReplication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfig) *string { return v.SynchronousReplication }).(pulumi.StringPtrOutput)
}

// TimescaleDB extension configuration values.
func (o GetPgPgUserConfigOutput) Timescaledb() GetPgPgUserConfigTimescaledbPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfig) *GetPgPgUserConfigTimescaledb { return v.Timescaledb }).(GetPgPgUserConfigTimescaledbPtrOutput)
}

// Variant of the PostgreSQL service, may affect the features that are
// exposed by default. Options: `aiven` or `timescale`.
func (o GetPgPgUserConfigOutput) Variant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfig) *string { return v.Variant }).(pulumi.StringPtrOutput)
}

// Sets the maximum amount of memory to be used by a query operation (such
// as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of
// total RAM (up to 32MB).
func (o GetPgPgUserConfigOutput) WorkMem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfig) *string { return v.WorkMem }).(pulumi.StringPtrOutput)
}

type GetPgPgUserConfigMigration struct {
	// Primary PostgreSQL database name
	Dbname *string `pulumi:"dbname"`
	// PostgreSQL master node host IP or name
	Host *string `pulumi:"host"`
	// Comma-separated list of databases, which should be ignored during
	// migration (supported by MySQL only at the moment)
	IgnoreDbs *string `pulumi:"ignoreDbs"`
	// PostgreSQL admin user password
	Password *string `pulumi:"password"`
	// PostgreSQL port
	Port *string `pulumi:"port"`
	// the server where to migrate data from is secured with SSL.
	Ssl *string `pulumi:"ssl"`
	// user name for authentication with the server where to migrate data from.
	Username *string `pulumi:"username"`
}

// GetPgPgUserConfigMigrationInput is an input type that accepts GetPgPgUserConfigMigrationArgs and GetPgPgUserConfigMigrationOutput values.
// You can construct a concrete instance of `GetPgPgUserConfigMigrationInput` via:
//
//          GetPgPgUserConfigMigrationArgs{...}
type GetPgPgUserConfigMigrationInput interface {
	pulumi.Input

	ToGetPgPgUserConfigMigrationOutput() GetPgPgUserConfigMigrationOutput
	ToGetPgPgUserConfigMigrationOutputWithContext(context.Context) GetPgPgUserConfigMigrationOutput
}

type GetPgPgUserConfigMigrationArgs struct {
	// Primary PostgreSQL database name
	Dbname pulumi.StringPtrInput `pulumi:"dbname"`
	// PostgreSQL master node host IP or name
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Comma-separated list of databases, which should be ignored during
	// migration (supported by MySQL only at the moment)
	IgnoreDbs pulumi.StringPtrInput `pulumi:"ignoreDbs"`
	// PostgreSQL admin user password
	Password pulumi.StringPtrInput `pulumi:"password"`
	// PostgreSQL port
	Port pulumi.StringPtrInput `pulumi:"port"`
	// the server where to migrate data from is secured with SSL.
	Ssl pulumi.StringPtrInput `pulumi:"ssl"`
	// user name for authentication with the server where to migrate data from.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (GetPgPgUserConfigMigrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgPgUserConfigMigration)(nil)).Elem()
}

func (i GetPgPgUserConfigMigrationArgs) ToGetPgPgUserConfigMigrationOutput() GetPgPgUserConfigMigrationOutput {
	return i.ToGetPgPgUserConfigMigrationOutputWithContext(context.Background())
}

func (i GetPgPgUserConfigMigrationArgs) ToGetPgPgUserConfigMigrationOutputWithContext(ctx context.Context) GetPgPgUserConfigMigrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPgUserConfigMigrationOutput)
}

func (i GetPgPgUserConfigMigrationArgs) ToGetPgPgUserConfigMigrationPtrOutput() GetPgPgUserConfigMigrationPtrOutput {
	return i.ToGetPgPgUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (i GetPgPgUserConfigMigrationArgs) ToGetPgPgUserConfigMigrationPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPgUserConfigMigrationOutput).ToGetPgPgUserConfigMigrationPtrOutputWithContext(ctx)
}

// GetPgPgUserConfigMigrationPtrInput is an input type that accepts GetPgPgUserConfigMigrationArgs, GetPgPgUserConfigMigrationPtr and GetPgPgUserConfigMigrationPtrOutput values.
// You can construct a concrete instance of `GetPgPgUserConfigMigrationPtrInput` via:
//
//          GetPgPgUserConfigMigrationArgs{...}
//
//  or:
//
//          nil
type GetPgPgUserConfigMigrationPtrInput interface {
	pulumi.Input

	ToGetPgPgUserConfigMigrationPtrOutput() GetPgPgUserConfigMigrationPtrOutput
	ToGetPgPgUserConfigMigrationPtrOutputWithContext(context.Context) GetPgPgUserConfigMigrationPtrOutput
}

type getPgPgUserConfigMigrationPtrType GetPgPgUserConfigMigrationArgs

func GetPgPgUserConfigMigrationPtr(v *GetPgPgUserConfigMigrationArgs) GetPgPgUserConfigMigrationPtrInput {
	return (*getPgPgUserConfigMigrationPtrType)(v)
}

func (*getPgPgUserConfigMigrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPgPgUserConfigMigration)(nil)).Elem()
}

func (i *getPgPgUserConfigMigrationPtrType) ToGetPgPgUserConfigMigrationPtrOutput() GetPgPgUserConfigMigrationPtrOutput {
	return i.ToGetPgPgUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (i *getPgPgUserConfigMigrationPtrType) ToGetPgPgUserConfigMigrationPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPgUserConfigMigrationPtrOutput)
}

type GetPgPgUserConfigMigrationOutput struct{ *pulumi.OutputState }

func (GetPgPgUserConfigMigrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgPgUserConfigMigration)(nil)).Elem()
}

func (o GetPgPgUserConfigMigrationOutput) ToGetPgPgUserConfigMigrationOutput() GetPgPgUserConfigMigrationOutput {
	return o
}

func (o GetPgPgUserConfigMigrationOutput) ToGetPgPgUserConfigMigrationOutputWithContext(ctx context.Context) GetPgPgUserConfigMigrationOutput {
	return o
}

func (o GetPgPgUserConfigMigrationOutput) ToGetPgPgUserConfigMigrationPtrOutput() GetPgPgUserConfigMigrationPtrOutput {
	return o.ToGetPgPgUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (o GetPgPgUserConfigMigrationOutput) ToGetPgPgUserConfigMigrationPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigMigration) *GetPgPgUserConfigMigration {
		return &v
	}).(GetPgPgUserConfigMigrationPtrOutput)
}

// Primary PostgreSQL database name
func (o GetPgPgUserConfigMigrationOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigMigration) *string { return v.Dbname }).(pulumi.StringPtrOutput)
}

// PostgreSQL master node host IP or name
func (o GetPgPgUserConfigMigrationOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigMigration) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Comma-separated list of databases, which should be ignored during
// migration (supported by MySQL only at the moment)
func (o GetPgPgUserConfigMigrationOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigMigration) *string { return v.IgnoreDbs }).(pulumi.StringPtrOutput)
}

// PostgreSQL admin user password
func (o GetPgPgUserConfigMigrationOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigMigration) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// PostgreSQL port
func (o GetPgPgUserConfigMigrationOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigMigration) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// the server where to migrate data from is secured with SSL.
func (o GetPgPgUserConfigMigrationOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigMigration) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

// user name for authentication with the server where to migrate data from.
func (o GetPgPgUserConfigMigrationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigMigration) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GetPgPgUserConfigMigrationPtrOutput struct{ *pulumi.OutputState }

func (GetPgPgUserConfigMigrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPgPgUserConfigMigration)(nil)).Elem()
}

func (o GetPgPgUserConfigMigrationPtrOutput) ToGetPgPgUserConfigMigrationPtrOutput() GetPgPgUserConfigMigrationPtrOutput {
	return o
}

func (o GetPgPgUserConfigMigrationPtrOutput) ToGetPgPgUserConfigMigrationPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigMigrationPtrOutput {
	return o
}

func (o GetPgPgUserConfigMigrationPtrOutput) Elem() GetPgPgUserConfigMigrationOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigMigration) GetPgPgUserConfigMigration { return *v }).(GetPgPgUserConfigMigrationOutput)
}

// Primary PostgreSQL database name
func (o GetPgPgUserConfigMigrationPtrOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Dbname
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL master node host IP or name
func (o GetPgPgUserConfigMigrationPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Comma-separated list of databases, which should be ignored during
// migration (supported by MySQL only at the moment)
func (o GetPgPgUserConfigMigrationPtrOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.IgnoreDbs
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL admin user password
func (o GetPgPgUserConfigMigrationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL port
func (o GetPgPgUserConfigMigrationPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// the server where to migrate data from is secured with SSL.
func (o GetPgPgUserConfigMigrationPtrOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Ssl
	}).(pulumi.StringPtrOutput)
}

// user name for authentication with the server where to migrate data from.
func (o GetPgPgUserConfigMigrationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type GetPgPgUserConfigPg struct {
	// Specifies a fraction of the table size to add to
	// autovacuumAnalyzeThreshold when deciding whether to trigger an ANALYZE. The default is 0.2
	// (20% of table size).
	AutovacuumAnalyzeScaleFactor *string `pulumi:"autovacuumAnalyzeScaleFactor"`
	// specifies the minimum number of inserted, updated
	// or deleted tuples needed to trigger an ANALYZE in any one table. The default is 50 tuples.
	AutovacuumAnalyzeThreshold *string `pulumi:"autovacuumAnalyzeThreshold"`
	// specifies the maximum age (in transactions) that a table's
	// pg_class.relfrozenxid field can attain before a VACUUM operation is forced to prevent transaction ID
	// wraparound within the table. Note that the system will launch autovacuum processes to prevent wraparound
	// even when autovacuum is otherwise disabled. This parameter will cause the server to be restarted.
	AutovacuumFreezeMaxAge *string `pulumi:"autovacuumFreezeMaxAge"`
	// specifies the maximum number of autovacuum processes (other
	// than the autovacuum launcher) that may be running at any one time. The default is three. This parameter
	// can only be set at server start.
	AutovacuumMaxWorkers *string `pulumi:"autovacuumMaxWorkers"`
	// specifies the minimum delay between autovacuum runs on any
	// given database. The delay is measured in seconds, and the default is one minute.
	AutovacuumNaptime *string `pulumi:"autovacuumNaptime"`
	// specifies the cost delay value that will be used
	// in automatic VACUUM operations. If -1 is specified, the regular vacuumCostDelay value will be
	// used. The default value is 20 milliseconds.
	AutovacuumVacuumCostDelay *string `pulumi:"autovacuumVacuumCostDelay"`
	// specifies the cost limit value that will be used in
	// automatic VACUUM operations. If -1 is specified (which is the default), the regular vacuumCostLimit
	// value will be used.
	AutovacuumVacuumCostLimit *string `pulumi:"autovacuumVacuumCostLimit"`
	// specifies a fraction of the table size to add to
	// autovacuumVacuumThreshold when deciding whether to trigger a VACUUM. The default is 0.2 (20% of table size).
	AutovacuumVacuumScaleFactor *string `pulumi:"autovacuumVacuumScaleFactor"`
	// specifies the minimum number of updated or deleted tuples
	// needed to trigger a VACUUM in any one table. The default is 50 tuples
	AutovacuumVacuumThreshold *string `pulumi:"autovacuumVacuumThreshold"`
	// this is the amount of time, in milliseconds, to wait on a lock before
	// checking to see if there is a deadlock condition.
	DeadlockTimeout *string `pulumi:"deadlockTimeout"`
	// Time out sessions with open transactions after
	// this number of milliseconds.
	IdleInTransactionSessionTimeout *string `pulumi:"idleInTransactionSessionTimeout"`
	// Controls system-wide use of Just-in-Time Compilation (JIT).
	Jit *string `pulumi:"jit"`
	// Causes each action executed by autovacuum to be logged
	// if it ran for at least the specified number of milliseconds. Setting this to zero logs all autovacuum
	// actions. Minus-one (the default) disables logging autovacuum actions.
	LogAutovacuumMinDuration *string `pulumi:"logAutovacuumMinDuration"`
	// Controls the amount of detail written in the server log for
	// each message that is logged. Possible values: `TERSE`, `DEFAULT` and `VERBOSE`.
	LogErrorVerbosity *string `pulumi:"logErrorVerbosity"`
	// Choose from one of the available log-formats. These can support
	// popular log analyzers like pgbadger, pganalyze etc.
	LogLinePrefix *string `pulumi:"logLinePrefix"`
	// Log statements that take more than this number of
	// milliseconds to run, -1 disables
	LogMinDurationStatement *string `pulumi:"logMinDurationStatement"`
	// PostgreSQL maximum number of files that can be open per process
	MaxFilesPerProcess *string `pulumi:"maxFilesPerProcess"`
	// PostgreSQL maximum locks per transaction
	MaxLocksPerTransaction *string `pulumi:"maxLocksPerTransaction"`
	// PostgreSQL maximum logical replication workers
	// (taken from the pool of max_parallel_workers)
	MaxLogicalReplicationWorkers *string `pulumi:"maxLogicalReplicationWorkers"`
	// Sets the maximum number of workers that the system can
	// support for parallel queries.
	MaxParallelWorkers *string `pulumi:"maxParallelWorkers"`
	// Sets the maximum number of workers that can be
	// started by a single Gather or Gather Merge node.
	MaxParallelWorkersPerGather *string `pulumi:"maxParallelWorkersPerGather"`
	// PostgreSQL maximum predicate locks per transaction
	MaxPredLocksPerTransaction *string `pulumi:"maxPredLocksPerTransaction"`
	// PostgreSQL maximum prepared transactions
	MaxPreparedTransactions *string `pulumi:"maxPreparedTransactions"`
	// PostgreSQL maximum replication slots
	MaxReplicationSlots *string `pulumi:"maxReplicationSlots"`
	// Maximum depth of the stack in bytes
	MaxStackDepth *string `pulumi:"maxStackDepth"`
	// Max standby archive delay in milliseconds
	MaxStandbyArchiveDelay *string `pulumi:"maxStandbyArchiveDelay"`
	// Max standby streaming delay in milliseconds
	MaxStandbyStreamingDelay *string `pulumi:"maxStandbyStreamingDelay"`
	// PostgreSQL maximum WAL senders
	MaxWalSenders *string `pulumi:"maxWalSenders"`
	// Sets the maximum number of background processes that the system
	// can support
	// * `pg_partman_bgw.interval` - Sets the time interval to run pg_partman's scheduled tasks
	// * `pg_partman_bgw.role` - Controls which role to use for pg_partman's scheduled
	//   background tasks.
	// * `pg_stat_statements.track` - Controls which statements are counted. Specify top
	//   to track top-level statements (those issued directly by clients), all to also track nested
	//   statements (such as statements invoked within functions), or none to disable statement statistics
	//   collection. The default value is top.
	MaxWorkerProcesses       *string `pulumi:"maxWorkerProcesses"`
	PgPartmanBgwDotInterval  *string `pulumi:"pgPartmanBgwDotInterval"`
	PgPartmanBgwDotRole      *string `pulumi:"pgPartmanBgwDotRole"`
	PgStatStatementsDotTrack *string `pulumi:"pgStatStatementsDotTrack"`
	// PostgreSQL temporary file limit in KiB, -1 for unlimited
	TempFileLimit *string `pulumi:"tempFileLimit"`
	// PostgreSQL service timezone
	Timezone *string `pulumi:"timezone"`
	// Specifies the number of bytes reserved to track the currently
	// executing command for each active session.
	TrackActivityQuerySize *string `pulumi:"trackActivityQuerySize"`
	// Record commit time of transactions
	TrackCommitTimestamp *string `pulumi:"trackCommitTimestamp"`
	// Enables tracking of function call counts and time used.
	TrackFunctions *string `pulumi:"trackFunctions"`
	// Terminate replication connections that are inactive for longer than
	// this amount of time, in milliseconds.
	WalSenderTimeout *string `pulumi:"walSenderTimeout"`
	// WAL flush interval in milliseconds. Note that setting this value
	// to lower than the default 200ms may negatively impact performance
	WalWriterDelay *string `pulumi:"walWriterDelay"`
}

// GetPgPgUserConfigPgInput is an input type that accepts GetPgPgUserConfigPgArgs and GetPgPgUserConfigPgOutput values.
// You can construct a concrete instance of `GetPgPgUserConfigPgInput` via:
//
//          GetPgPgUserConfigPgArgs{...}
type GetPgPgUserConfigPgInput interface {
	pulumi.Input

	ToGetPgPgUserConfigPgOutput() GetPgPgUserConfigPgOutput
	ToGetPgPgUserConfigPgOutputWithContext(context.Context) GetPgPgUserConfigPgOutput
}

type GetPgPgUserConfigPgArgs struct {
	// Specifies a fraction of the table size to add to
	// autovacuumAnalyzeThreshold when deciding whether to trigger an ANALYZE. The default is 0.2
	// (20% of table size).
	AutovacuumAnalyzeScaleFactor pulumi.StringPtrInput `pulumi:"autovacuumAnalyzeScaleFactor"`
	// specifies the minimum number of inserted, updated
	// or deleted tuples needed to trigger an ANALYZE in any one table. The default is 50 tuples.
	AutovacuumAnalyzeThreshold pulumi.StringPtrInput `pulumi:"autovacuumAnalyzeThreshold"`
	// specifies the maximum age (in transactions) that a table's
	// pg_class.relfrozenxid field can attain before a VACUUM operation is forced to prevent transaction ID
	// wraparound within the table. Note that the system will launch autovacuum processes to prevent wraparound
	// even when autovacuum is otherwise disabled. This parameter will cause the server to be restarted.
	AutovacuumFreezeMaxAge pulumi.StringPtrInput `pulumi:"autovacuumFreezeMaxAge"`
	// specifies the maximum number of autovacuum processes (other
	// than the autovacuum launcher) that may be running at any one time. The default is three. This parameter
	// can only be set at server start.
	AutovacuumMaxWorkers pulumi.StringPtrInput `pulumi:"autovacuumMaxWorkers"`
	// specifies the minimum delay between autovacuum runs on any
	// given database. The delay is measured in seconds, and the default is one minute.
	AutovacuumNaptime pulumi.StringPtrInput `pulumi:"autovacuumNaptime"`
	// specifies the cost delay value that will be used
	// in automatic VACUUM operations. If -1 is specified, the regular vacuumCostDelay value will be
	// used. The default value is 20 milliseconds.
	AutovacuumVacuumCostDelay pulumi.StringPtrInput `pulumi:"autovacuumVacuumCostDelay"`
	// specifies the cost limit value that will be used in
	// automatic VACUUM operations. If -1 is specified (which is the default), the regular vacuumCostLimit
	// value will be used.
	AutovacuumVacuumCostLimit pulumi.StringPtrInput `pulumi:"autovacuumVacuumCostLimit"`
	// specifies a fraction of the table size to add to
	// autovacuumVacuumThreshold when deciding whether to trigger a VACUUM. The default is 0.2 (20% of table size).
	AutovacuumVacuumScaleFactor pulumi.StringPtrInput `pulumi:"autovacuumVacuumScaleFactor"`
	// specifies the minimum number of updated or deleted tuples
	// needed to trigger a VACUUM in any one table. The default is 50 tuples
	AutovacuumVacuumThreshold pulumi.StringPtrInput `pulumi:"autovacuumVacuumThreshold"`
	// this is the amount of time, in milliseconds, to wait on a lock before
	// checking to see if there is a deadlock condition.
	DeadlockTimeout pulumi.StringPtrInput `pulumi:"deadlockTimeout"`
	// Time out sessions with open transactions after
	// this number of milliseconds.
	IdleInTransactionSessionTimeout pulumi.StringPtrInput `pulumi:"idleInTransactionSessionTimeout"`
	// Controls system-wide use of Just-in-Time Compilation (JIT).
	Jit pulumi.StringPtrInput `pulumi:"jit"`
	// Causes each action executed by autovacuum to be logged
	// if it ran for at least the specified number of milliseconds. Setting this to zero logs all autovacuum
	// actions. Minus-one (the default) disables logging autovacuum actions.
	LogAutovacuumMinDuration pulumi.StringPtrInput `pulumi:"logAutovacuumMinDuration"`
	// Controls the amount of detail written in the server log for
	// each message that is logged. Possible values: `TERSE`, `DEFAULT` and `VERBOSE`.
	LogErrorVerbosity pulumi.StringPtrInput `pulumi:"logErrorVerbosity"`
	// Choose from one of the available log-formats. These can support
	// popular log analyzers like pgbadger, pganalyze etc.
	LogLinePrefix pulumi.StringPtrInput `pulumi:"logLinePrefix"`
	// Log statements that take more than this number of
	// milliseconds to run, -1 disables
	LogMinDurationStatement pulumi.StringPtrInput `pulumi:"logMinDurationStatement"`
	// PostgreSQL maximum number of files that can be open per process
	MaxFilesPerProcess pulumi.StringPtrInput `pulumi:"maxFilesPerProcess"`
	// PostgreSQL maximum locks per transaction
	MaxLocksPerTransaction pulumi.StringPtrInput `pulumi:"maxLocksPerTransaction"`
	// PostgreSQL maximum logical replication workers
	// (taken from the pool of max_parallel_workers)
	MaxLogicalReplicationWorkers pulumi.StringPtrInput `pulumi:"maxLogicalReplicationWorkers"`
	// Sets the maximum number of workers that the system can
	// support for parallel queries.
	MaxParallelWorkers pulumi.StringPtrInput `pulumi:"maxParallelWorkers"`
	// Sets the maximum number of workers that can be
	// started by a single Gather or Gather Merge node.
	MaxParallelWorkersPerGather pulumi.StringPtrInput `pulumi:"maxParallelWorkersPerGather"`
	// PostgreSQL maximum predicate locks per transaction
	MaxPredLocksPerTransaction pulumi.StringPtrInput `pulumi:"maxPredLocksPerTransaction"`
	// PostgreSQL maximum prepared transactions
	MaxPreparedTransactions pulumi.StringPtrInput `pulumi:"maxPreparedTransactions"`
	// PostgreSQL maximum replication slots
	MaxReplicationSlots pulumi.StringPtrInput `pulumi:"maxReplicationSlots"`
	// Maximum depth of the stack in bytes
	MaxStackDepth pulumi.StringPtrInput `pulumi:"maxStackDepth"`
	// Max standby archive delay in milliseconds
	MaxStandbyArchiveDelay pulumi.StringPtrInput `pulumi:"maxStandbyArchiveDelay"`
	// Max standby streaming delay in milliseconds
	MaxStandbyStreamingDelay pulumi.StringPtrInput `pulumi:"maxStandbyStreamingDelay"`
	// PostgreSQL maximum WAL senders
	MaxWalSenders pulumi.StringPtrInput `pulumi:"maxWalSenders"`
	// Sets the maximum number of background processes that the system
	// can support
	// * `pg_partman_bgw.interval` - Sets the time interval to run pg_partman's scheduled tasks
	// * `pg_partman_bgw.role` - Controls which role to use for pg_partman's scheduled
	//   background tasks.
	// * `pg_stat_statements.track` - Controls which statements are counted. Specify top
	//   to track top-level statements (those issued directly by clients), all to also track nested
	//   statements (such as statements invoked within functions), or none to disable statement statistics
	//   collection. The default value is top.
	MaxWorkerProcesses       pulumi.StringPtrInput `pulumi:"maxWorkerProcesses"`
	PgPartmanBgwDotInterval  pulumi.StringPtrInput `pulumi:"pgPartmanBgwDotInterval"`
	PgPartmanBgwDotRole      pulumi.StringPtrInput `pulumi:"pgPartmanBgwDotRole"`
	PgStatStatementsDotTrack pulumi.StringPtrInput `pulumi:"pgStatStatementsDotTrack"`
	// PostgreSQL temporary file limit in KiB, -1 for unlimited
	TempFileLimit pulumi.StringPtrInput `pulumi:"tempFileLimit"`
	// PostgreSQL service timezone
	Timezone pulumi.StringPtrInput `pulumi:"timezone"`
	// Specifies the number of bytes reserved to track the currently
	// executing command for each active session.
	TrackActivityQuerySize pulumi.StringPtrInput `pulumi:"trackActivityQuerySize"`
	// Record commit time of transactions
	TrackCommitTimestamp pulumi.StringPtrInput `pulumi:"trackCommitTimestamp"`
	// Enables tracking of function call counts and time used.
	TrackFunctions pulumi.StringPtrInput `pulumi:"trackFunctions"`
	// Terminate replication connections that are inactive for longer than
	// this amount of time, in milliseconds.
	WalSenderTimeout pulumi.StringPtrInput `pulumi:"walSenderTimeout"`
	// WAL flush interval in milliseconds. Note that setting this value
	// to lower than the default 200ms may negatively impact performance
	WalWriterDelay pulumi.StringPtrInput `pulumi:"walWriterDelay"`
}

func (GetPgPgUserConfigPgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgPgUserConfigPg)(nil)).Elem()
}

func (i GetPgPgUserConfigPgArgs) ToGetPgPgUserConfigPgOutput() GetPgPgUserConfigPgOutput {
	return i.ToGetPgPgUserConfigPgOutputWithContext(context.Background())
}

func (i GetPgPgUserConfigPgArgs) ToGetPgPgUserConfigPgOutputWithContext(ctx context.Context) GetPgPgUserConfigPgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPgUserConfigPgOutput)
}

func (i GetPgPgUserConfigPgArgs) ToGetPgPgUserConfigPgPtrOutput() GetPgPgUserConfigPgPtrOutput {
	return i.ToGetPgPgUserConfigPgPtrOutputWithContext(context.Background())
}

func (i GetPgPgUserConfigPgArgs) ToGetPgPgUserConfigPgPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigPgPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPgUserConfigPgOutput).ToGetPgPgUserConfigPgPtrOutputWithContext(ctx)
}

// GetPgPgUserConfigPgPtrInput is an input type that accepts GetPgPgUserConfigPgArgs, GetPgPgUserConfigPgPtr and GetPgPgUserConfigPgPtrOutput values.
// You can construct a concrete instance of `GetPgPgUserConfigPgPtrInput` via:
//
//          GetPgPgUserConfigPgArgs{...}
//
//  or:
//
//          nil
type GetPgPgUserConfigPgPtrInput interface {
	pulumi.Input

	ToGetPgPgUserConfigPgPtrOutput() GetPgPgUserConfigPgPtrOutput
	ToGetPgPgUserConfigPgPtrOutputWithContext(context.Context) GetPgPgUserConfigPgPtrOutput
}

type getPgPgUserConfigPgPtrType GetPgPgUserConfigPgArgs

func GetPgPgUserConfigPgPtr(v *GetPgPgUserConfigPgArgs) GetPgPgUserConfigPgPtrInput {
	return (*getPgPgUserConfigPgPtrType)(v)
}

func (*getPgPgUserConfigPgPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPgPgUserConfigPg)(nil)).Elem()
}

func (i *getPgPgUserConfigPgPtrType) ToGetPgPgUserConfigPgPtrOutput() GetPgPgUserConfigPgPtrOutput {
	return i.ToGetPgPgUserConfigPgPtrOutputWithContext(context.Background())
}

func (i *getPgPgUserConfigPgPtrType) ToGetPgPgUserConfigPgPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigPgPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPgUserConfigPgPtrOutput)
}

type GetPgPgUserConfigPgOutput struct{ *pulumi.OutputState }

func (GetPgPgUserConfigPgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgPgUserConfigPg)(nil)).Elem()
}

func (o GetPgPgUserConfigPgOutput) ToGetPgPgUserConfigPgOutput() GetPgPgUserConfigPgOutput {
	return o
}

func (o GetPgPgUserConfigPgOutput) ToGetPgPgUserConfigPgOutputWithContext(ctx context.Context) GetPgPgUserConfigPgOutput {
	return o
}

func (o GetPgPgUserConfigPgOutput) ToGetPgPgUserConfigPgPtrOutput() GetPgPgUserConfigPgPtrOutput {
	return o.ToGetPgPgUserConfigPgPtrOutputWithContext(context.Background())
}

func (o GetPgPgUserConfigPgOutput) ToGetPgPgUserConfigPgPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigPgPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *GetPgPgUserConfigPg {
		return &v
	}).(GetPgPgUserConfigPgPtrOutput)
}

// Specifies a fraction of the table size to add to
// autovacuumAnalyzeThreshold when deciding whether to trigger an ANALYZE. The default is 0.2
// (20% of table size).
func (o GetPgPgUserConfigPgOutput) AutovacuumAnalyzeScaleFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.AutovacuumAnalyzeScaleFactor }).(pulumi.StringPtrOutput)
}

// specifies the minimum number of inserted, updated
// or deleted tuples needed to trigger an ANALYZE in any one table. The default is 50 tuples.
func (o GetPgPgUserConfigPgOutput) AutovacuumAnalyzeThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.AutovacuumAnalyzeThreshold }).(pulumi.StringPtrOutput)
}

// specifies the maximum age (in transactions) that a table's
// pg_class.relfrozenxid field can attain before a VACUUM operation is forced to prevent transaction ID
// wraparound within the table. Note that the system will launch autovacuum processes to prevent wraparound
// even when autovacuum is otherwise disabled. This parameter will cause the server to be restarted.
func (o GetPgPgUserConfigPgOutput) AutovacuumFreezeMaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.AutovacuumFreezeMaxAge }).(pulumi.StringPtrOutput)
}

// specifies the maximum number of autovacuum processes (other
// than the autovacuum launcher) that may be running at any one time. The default is three. This parameter
// can only be set at server start.
func (o GetPgPgUserConfigPgOutput) AutovacuumMaxWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.AutovacuumMaxWorkers }).(pulumi.StringPtrOutput)
}

// specifies the minimum delay between autovacuum runs on any
// given database. The delay is measured in seconds, and the default is one minute.
func (o GetPgPgUserConfigPgOutput) AutovacuumNaptime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.AutovacuumNaptime }).(pulumi.StringPtrOutput)
}

// specifies the cost delay value that will be used
// in automatic VACUUM operations. If -1 is specified, the regular vacuumCostDelay value will be
// used. The default value is 20 milliseconds.
func (o GetPgPgUserConfigPgOutput) AutovacuumVacuumCostDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.AutovacuumVacuumCostDelay }).(pulumi.StringPtrOutput)
}

// specifies the cost limit value that will be used in
// automatic VACUUM operations. If -1 is specified (which is the default), the regular vacuumCostLimit
// value will be used.
func (o GetPgPgUserConfigPgOutput) AutovacuumVacuumCostLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.AutovacuumVacuumCostLimit }).(pulumi.StringPtrOutput)
}

// specifies a fraction of the table size to add to
// autovacuumVacuumThreshold when deciding whether to trigger a VACUUM. The default is 0.2 (20% of table size).
func (o GetPgPgUserConfigPgOutput) AutovacuumVacuumScaleFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.AutovacuumVacuumScaleFactor }).(pulumi.StringPtrOutput)
}

// specifies the minimum number of updated or deleted tuples
// needed to trigger a VACUUM in any one table. The default is 50 tuples
func (o GetPgPgUserConfigPgOutput) AutovacuumVacuumThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.AutovacuumVacuumThreshold }).(pulumi.StringPtrOutput)
}

// this is the amount of time, in milliseconds, to wait on a lock before
// checking to see if there is a deadlock condition.
func (o GetPgPgUserConfigPgOutput) DeadlockTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.DeadlockTimeout }).(pulumi.StringPtrOutput)
}

// Time out sessions with open transactions after
// this number of milliseconds.
func (o GetPgPgUserConfigPgOutput) IdleInTransactionSessionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.IdleInTransactionSessionTimeout }).(pulumi.StringPtrOutput)
}

// Controls system-wide use of Just-in-Time Compilation (JIT).
func (o GetPgPgUserConfigPgOutput) Jit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.Jit }).(pulumi.StringPtrOutput)
}

// Causes each action executed by autovacuum to be logged
// if it ran for at least the specified number of milliseconds. Setting this to zero logs all autovacuum
// actions. Minus-one (the default) disables logging autovacuum actions.
func (o GetPgPgUserConfigPgOutput) LogAutovacuumMinDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.LogAutovacuumMinDuration }).(pulumi.StringPtrOutput)
}

// Controls the amount of detail written in the server log for
// each message that is logged. Possible values: `TERSE`, `DEFAULT` and `VERBOSE`.
func (o GetPgPgUserConfigPgOutput) LogErrorVerbosity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.LogErrorVerbosity }).(pulumi.StringPtrOutput)
}

// Choose from one of the available log-formats. These can support
// popular log analyzers like pgbadger, pganalyze etc.
func (o GetPgPgUserConfigPgOutput) LogLinePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.LogLinePrefix }).(pulumi.StringPtrOutput)
}

// Log statements that take more than this number of
// milliseconds to run, -1 disables
func (o GetPgPgUserConfigPgOutput) LogMinDurationStatement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.LogMinDurationStatement }).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum number of files that can be open per process
func (o GetPgPgUserConfigPgOutput) MaxFilesPerProcess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.MaxFilesPerProcess }).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum locks per transaction
func (o GetPgPgUserConfigPgOutput) MaxLocksPerTransaction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.MaxLocksPerTransaction }).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum logical replication workers
// (taken from the pool of max_parallel_workers)
func (o GetPgPgUserConfigPgOutput) MaxLogicalReplicationWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.MaxLogicalReplicationWorkers }).(pulumi.StringPtrOutput)
}

// Sets the maximum number of workers that the system can
// support for parallel queries.
func (o GetPgPgUserConfigPgOutput) MaxParallelWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.MaxParallelWorkers }).(pulumi.StringPtrOutput)
}

// Sets the maximum number of workers that can be
// started by a single Gather or Gather Merge node.
func (o GetPgPgUserConfigPgOutput) MaxParallelWorkersPerGather() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.MaxParallelWorkersPerGather }).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum predicate locks per transaction
func (o GetPgPgUserConfigPgOutput) MaxPredLocksPerTransaction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.MaxPredLocksPerTransaction }).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum prepared transactions
func (o GetPgPgUserConfigPgOutput) MaxPreparedTransactions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.MaxPreparedTransactions }).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum replication slots
func (o GetPgPgUserConfigPgOutput) MaxReplicationSlots() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.MaxReplicationSlots }).(pulumi.StringPtrOutput)
}

// Maximum depth of the stack in bytes
func (o GetPgPgUserConfigPgOutput) MaxStackDepth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.MaxStackDepth }).(pulumi.StringPtrOutput)
}

// Max standby archive delay in milliseconds
func (o GetPgPgUserConfigPgOutput) MaxStandbyArchiveDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.MaxStandbyArchiveDelay }).(pulumi.StringPtrOutput)
}

// Max standby streaming delay in milliseconds
func (o GetPgPgUserConfigPgOutput) MaxStandbyStreamingDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.MaxStandbyStreamingDelay }).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum WAL senders
func (o GetPgPgUserConfigPgOutput) MaxWalSenders() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.MaxWalSenders }).(pulumi.StringPtrOutput)
}

// Sets the maximum number of background processes that the system
// can support
// * `pg_partman_bgw.interval` - Sets the time interval to run pg_partman's scheduled tasks
// * `pg_partman_bgw.role` - Controls which role to use for pg_partman's scheduled
//   background tasks.
// * `pg_stat_statements.track` - Controls which statements are counted. Specify top
//   to track top-level statements (those issued directly by clients), all to also track nested
//   statements (such as statements invoked within functions), or none to disable statement statistics
//   collection. The default value is top.
func (o GetPgPgUserConfigPgOutput) MaxWorkerProcesses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.MaxWorkerProcesses }).(pulumi.StringPtrOutput)
}

func (o GetPgPgUserConfigPgOutput) PgPartmanBgwDotInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.PgPartmanBgwDotInterval }).(pulumi.StringPtrOutput)
}

func (o GetPgPgUserConfigPgOutput) PgPartmanBgwDotRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.PgPartmanBgwDotRole }).(pulumi.StringPtrOutput)
}

func (o GetPgPgUserConfigPgOutput) PgStatStatementsDotTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.PgStatStatementsDotTrack }).(pulumi.StringPtrOutput)
}

// PostgreSQL temporary file limit in KiB, -1 for unlimited
func (o GetPgPgUserConfigPgOutput) TempFileLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.TempFileLimit }).(pulumi.StringPtrOutput)
}

// PostgreSQL service timezone
func (o GetPgPgUserConfigPgOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

// Specifies the number of bytes reserved to track the currently
// executing command for each active session.
func (o GetPgPgUserConfigPgOutput) TrackActivityQuerySize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.TrackActivityQuerySize }).(pulumi.StringPtrOutput)
}

// Record commit time of transactions
func (o GetPgPgUserConfigPgOutput) TrackCommitTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.TrackCommitTimestamp }).(pulumi.StringPtrOutput)
}

// Enables tracking of function call counts and time used.
func (o GetPgPgUserConfigPgOutput) TrackFunctions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.TrackFunctions }).(pulumi.StringPtrOutput)
}

// Terminate replication connections that are inactive for longer than
// this amount of time, in milliseconds.
func (o GetPgPgUserConfigPgOutput) WalSenderTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.WalSenderTimeout }).(pulumi.StringPtrOutput)
}

// WAL flush interval in milliseconds. Note that setting this value
// to lower than the default 200ms may negatively impact performance
func (o GetPgPgUserConfigPgOutput) WalWriterDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPg) *string { return v.WalWriterDelay }).(pulumi.StringPtrOutput)
}

type GetPgPgUserConfigPgPtrOutput struct{ *pulumi.OutputState }

func (GetPgPgUserConfigPgPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPgPgUserConfigPg)(nil)).Elem()
}

func (o GetPgPgUserConfigPgPtrOutput) ToGetPgPgUserConfigPgPtrOutput() GetPgPgUserConfigPgPtrOutput {
	return o
}

func (o GetPgPgUserConfigPgPtrOutput) ToGetPgPgUserConfigPgPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigPgPtrOutput {
	return o
}

func (o GetPgPgUserConfigPgPtrOutput) Elem() GetPgPgUserConfigPgOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) GetPgPgUserConfigPg { return *v }).(GetPgPgUserConfigPgOutput)
}

// Specifies a fraction of the table size to add to
// autovacuumAnalyzeThreshold when deciding whether to trigger an ANALYZE. The default is 0.2
// (20% of table size).
func (o GetPgPgUserConfigPgPtrOutput) AutovacuumAnalyzeScaleFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumAnalyzeScaleFactor
	}).(pulumi.StringPtrOutput)
}

// specifies the minimum number of inserted, updated
// or deleted tuples needed to trigger an ANALYZE in any one table. The default is 50 tuples.
func (o GetPgPgUserConfigPgPtrOutput) AutovacuumAnalyzeThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumAnalyzeThreshold
	}).(pulumi.StringPtrOutput)
}

// specifies the maximum age (in transactions) that a table's
// pg_class.relfrozenxid field can attain before a VACUUM operation is forced to prevent transaction ID
// wraparound within the table. Note that the system will launch autovacuum processes to prevent wraparound
// even when autovacuum is otherwise disabled. This parameter will cause the server to be restarted.
func (o GetPgPgUserConfigPgPtrOutput) AutovacuumFreezeMaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumFreezeMaxAge
	}).(pulumi.StringPtrOutput)
}

// specifies the maximum number of autovacuum processes (other
// than the autovacuum launcher) that may be running at any one time. The default is three. This parameter
// can only be set at server start.
func (o GetPgPgUserConfigPgPtrOutput) AutovacuumMaxWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumMaxWorkers
	}).(pulumi.StringPtrOutput)
}

// specifies the minimum delay between autovacuum runs on any
// given database. The delay is measured in seconds, and the default is one minute.
func (o GetPgPgUserConfigPgPtrOutput) AutovacuumNaptime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumNaptime
	}).(pulumi.StringPtrOutput)
}

// specifies the cost delay value that will be used
// in automatic VACUUM operations. If -1 is specified, the regular vacuumCostDelay value will be
// used. The default value is 20 milliseconds.
func (o GetPgPgUserConfigPgPtrOutput) AutovacuumVacuumCostDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumVacuumCostDelay
	}).(pulumi.StringPtrOutput)
}

// specifies the cost limit value that will be used in
// automatic VACUUM operations. If -1 is specified (which is the default), the regular vacuumCostLimit
// value will be used.
func (o GetPgPgUserConfigPgPtrOutput) AutovacuumVacuumCostLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumVacuumCostLimit
	}).(pulumi.StringPtrOutput)
}

// specifies a fraction of the table size to add to
// autovacuumVacuumThreshold when deciding whether to trigger a VACUUM. The default is 0.2 (20% of table size).
func (o GetPgPgUserConfigPgPtrOutput) AutovacuumVacuumScaleFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumVacuumScaleFactor
	}).(pulumi.StringPtrOutput)
}

// specifies the minimum number of updated or deleted tuples
// needed to trigger a VACUUM in any one table. The default is 50 tuples
func (o GetPgPgUserConfigPgPtrOutput) AutovacuumVacuumThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumVacuumThreshold
	}).(pulumi.StringPtrOutput)
}

// this is the amount of time, in milliseconds, to wait on a lock before
// checking to see if there is a deadlock condition.
func (o GetPgPgUserConfigPgPtrOutput) DeadlockTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.DeadlockTimeout
	}).(pulumi.StringPtrOutput)
}

// Time out sessions with open transactions after
// this number of milliseconds.
func (o GetPgPgUserConfigPgPtrOutput) IdleInTransactionSessionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.IdleInTransactionSessionTimeout
	}).(pulumi.StringPtrOutput)
}

// Controls system-wide use of Just-in-Time Compilation (JIT).
func (o GetPgPgUserConfigPgPtrOutput) Jit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.Jit
	}).(pulumi.StringPtrOutput)
}

// Causes each action executed by autovacuum to be logged
// if it ran for at least the specified number of milliseconds. Setting this to zero logs all autovacuum
// actions. Minus-one (the default) disables logging autovacuum actions.
func (o GetPgPgUserConfigPgPtrOutput) LogAutovacuumMinDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.LogAutovacuumMinDuration
	}).(pulumi.StringPtrOutput)
}

// Controls the amount of detail written in the server log for
// each message that is logged. Possible values: `TERSE`, `DEFAULT` and `VERBOSE`.
func (o GetPgPgUserConfigPgPtrOutput) LogErrorVerbosity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.LogErrorVerbosity
	}).(pulumi.StringPtrOutput)
}

// Choose from one of the available log-formats. These can support
// popular log analyzers like pgbadger, pganalyze etc.
func (o GetPgPgUserConfigPgPtrOutput) LogLinePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.LogLinePrefix
	}).(pulumi.StringPtrOutput)
}

// Log statements that take more than this number of
// milliseconds to run, -1 disables
func (o GetPgPgUserConfigPgPtrOutput) LogMinDurationStatement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.LogMinDurationStatement
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum number of files that can be open per process
func (o GetPgPgUserConfigPgPtrOutput) MaxFilesPerProcess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxFilesPerProcess
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum locks per transaction
func (o GetPgPgUserConfigPgPtrOutput) MaxLocksPerTransaction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxLocksPerTransaction
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum logical replication workers
// (taken from the pool of max_parallel_workers)
func (o GetPgPgUserConfigPgPtrOutput) MaxLogicalReplicationWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxLogicalReplicationWorkers
	}).(pulumi.StringPtrOutput)
}

// Sets the maximum number of workers that the system can
// support for parallel queries.
func (o GetPgPgUserConfigPgPtrOutput) MaxParallelWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxParallelWorkers
	}).(pulumi.StringPtrOutput)
}

// Sets the maximum number of workers that can be
// started by a single Gather or Gather Merge node.
func (o GetPgPgUserConfigPgPtrOutput) MaxParallelWorkersPerGather() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxParallelWorkersPerGather
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum predicate locks per transaction
func (o GetPgPgUserConfigPgPtrOutput) MaxPredLocksPerTransaction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxPredLocksPerTransaction
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum prepared transactions
func (o GetPgPgUserConfigPgPtrOutput) MaxPreparedTransactions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxPreparedTransactions
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum replication slots
func (o GetPgPgUserConfigPgPtrOutput) MaxReplicationSlots() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxReplicationSlots
	}).(pulumi.StringPtrOutput)
}

// Maximum depth of the stack in bytes
func (o GetPgPgUserConfigPgPtrOutput) MaxStackDepth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxStackDepth
	}).(pulumi.StringPtrOutput)
}

// Max standby archive delay in milliseconds
func (o GetPgPgUserConfigPgPtrOutput) MaxStandbyArchiveDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxStandbyArchiveDelay
	}).(pulumi.StringPtrOutput)
}

// Max standby streaming delay in milliseconds
func (o GetPgPgUserConfigPgPtrOutput) MaxStandbyStreamingDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxStandbyStreamingDelay
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL maximum WAL senders
func (o GetPgPgUserConfigPgPtrOutput) MaxWalSenders() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxWalSenders
	}).(pulumi.StringPtrOutput)
}

// Sets the maximum number of background processes that the system
// can support
// * `pg_partman_bgw.interval` - Sets the time interval to run pg_partman's scheduled tasks
// * `pg_partman_bgw.role` - Controls which role to use for pg_partman's scheduled
//   background tasks.
// * `pg_stat_statements.track` - Controls which statements are counted. Specify top
//   to track top-level statements (those issued directly by clients), all to also track nested
//   statements (such as statements invoked within functions), or none to disable statement statistics
//   collection. The default value is top.
func (o GetPgPgUserConfigPgPtrOutput) MaxWorkerProcesses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxWorkerProcesses
	}).(pulumi.StringPtrOutput)
}

func (o GetPgPgUserConfigPgPtrOutput) PgPartmanBgwDotInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.PgPartmanBgwDotInterval
	}).(pulumi.StringPtrOutput)
}

func (o GetPgPgUserConfigPgPtrOutput) PgPartmanBgwDotRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.PgPartmanBgwDotRole
	}).(pulumi.StringPtrOutput)
}

func (o GetPgPgUserConfigPgPtrOutput) PgStatStatementsDotTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.PgStatStatementsDotTrack
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL temporary file limit in KiB, -1 for unlimited
func (o GetPgPgUserConfigPgPtrOutput) TempFileLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.TempFileLimit
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL service timezone
func (o GetPgPgUserConfigPgPtrOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.Timezone
	}).(pulumi.StringPtrOutput)
}

// Specifies the number of bytes reserved to track the currently
// executing command for each active session.
func (o GetPgPgUserConfigPgPtrOutput) TrackActivityQuerySize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.TrackActivityQuerySize
	}).(pulumi.StringPtrOutput)
}

// Record commit time of transactions
func (o GetPgPgUserConfigPgPtrOutput) TrackCommitTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.TrackCommitTimestamp
	}).(pulumi.StringPtrOutput)
}

// Enables tracking of function call counts and time used.
func (o GetPgPgUserConfigPgPtrOutput) TrackFunctions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.TrackFunctions
	}).(pulumi.StringPtrOutput)
}

// Terminate replication connections that are inactive for longer than
// this amount of time, in milliseconds.
func (o GetPgPgUserConfigPgPtrOutput) WalSenderTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.WalSenderTimeout
	}).(pulumi.StringPtrOutput)
}

// WAL flush interval in milliseconds. Note that setting this value
// to lower than the default 200ms may negatively impact performance
func (o GetPgPgUserConfigPgPtrOutput) WalWriterDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.WalWriterDelay
	}).(pulumi.StringPtrOutput)
}

type GetPgPgUserConfigPgbouncer struct {
	// If the automatically created database pools have been unused this
	// many seconds, they are freed. If 0 then timeout is disabled.
	AutodbIdleTimeout *string `pulumi:"autodbIdleTimeout"`
	// Do not allow more than this many server connections per database
	// (regardless of user). Setting it to 0 means unlimited.
	AutodbMaxDbConnections *string `pulumi:"autodbMaxDbConnections"`
	// PGBouncer pool mode
	AutodbPoolMode *string `pulumi:"autodbPoolMode"`
	// If non-zero then create automatically a pool of that size per user
	// when a pool doesn't exist.
	AutodbPoolSize *string `pulumi:"autodbPoolSize"`
	// Enum of parameters to ignore when given in startup packet.
	IgnoreStartupParameters []string `pulumi:"ignoreStartupParameters"`
	// Add more server connections to pool if below this number. Improves
	// behavior when usual load comes suddenly back after period of total inactivity. The value is
	// effectively capped at the pool size.
	MinPoolSize *string `pulumi:"minPoolSize"`
	// If a server connection has been idle more than this many seconds
	// it will be dropped. If 0 then timeout is disabled.
	ServerIdleTimeout *string `pulumi:"serverIdleTimeout"`
	// The pooler will close an unused server connection that has been connected
	// longer than this.
	ServerLifetime *string `pulumi:"serverLifetime"`
	// Run serverResetQuery (DISCARD ALL) in all pooling modes.
	ServerResetQueryAlways *string `pulumi:"serverResetQueryAlways"`
}

// GetPgPgUserConfigPgbouncerInput is an input type that accepts GetPgPgUserConfigPgbouncerArgs and GetPgPgUserConfigPgbouncerOutput values.
// You can construct a concrete instance of `GetPgPgUserConfigPgbouncerInput` via:
//
//          GetPgPgUserConfigPgbouncerArgs{...}
type GetPgPgUserConfigPgbouncerInput interface {
	pulumi.Input

	ToGetPgPgUserConfigPgbouncerOutput() GetPgPgUserConfigPgbouncerOutput
	ToGetPgPgUserConfigPgbouncerOutputWithContext(context.Context) GetPgPgUserConfigPgbouncerOutput
}

type GetPgPgUserConfigPgbouncerArgs struct {
	// If the automatically created database pools have been unused this
	// many seconds, they are freed. If 0 then timeout is disabled.
	AutodbIdleTimeout pulumi.StringPtrInput `pulumi:"autodbIdleTimeout"`
	// Do not allow more than this many server connections per database
	// (regardless of user). Setting it to 0 means unlimited.
	AutodbMaxDbConnections pulumi.StringPtrInput `pulumi:"autodbMaxDbConnections"`
	// PGBouncer pool mode
	AutodbPoolMode pulumi.StringPtrInput `pulumi:"autodbPoolMode"`
	// If non-zero then create automatically a pool of that size per user
	// when a pool doesn't exist.
	AutodbPoolSize pulumi.StringPtrInput `pulumi:"autodbPoolSize"`
	// Enum of parameters to ignore when given in startup packet.
	IgnoreStartupParameters pulumi.StringArrayInput `pulumi:"ignoreStartupParameters"`
	// Add more server connections to pool if below this number. Improves
	// behavior when usual load comes suddenly back after period of total inactivity. The value is
	// effectively capped at the pool size.
	MinPoolSize pulumi.StringPtrInput `pulumi:"minPoolSize"`
	// If a server connection has been idle more than this many seconds
	// it will be dropped. If 0 then timeout is disabled.
	ServerIdleTimeout pulumi.StringPtrInput `pulumi:"serverIdleTimeout"`
	// The pooler will close an unused server connection that has been connected
	// longer than this.
	ServerLifetime pulumi.StringPtrInput `pulumi:"serverLifetime"`
	// Run serverResetQuery (DISCARD ALL) in all pooling modes.
	ServerResetQueryAlways pulumi.StringPtrInput `pulumi:"serverResetQueryAlways"`
}

func (GetPgPgUserConfigPgbouncerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgPgUserConfigPgbouncer)(nil)).Elem()
}

func (i GetPgPgUserConfigPgbouncerArgs) ToGetPgPgUserConfigPgbouncerOutput() GetPgPgUserConfigPgbouncerOutput {
	return i.ToGetPgPgUserConfigPgbouncerOutputWithContext(context.Background())
}

func (i GetPgPgUserConfigPgbouncerArgs) ToGetPgPgUserConfigPgbouncerOutputWithContext(ctx context.Context) GetPgPgUserConfigPgbouncerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPgUserConfigPgbouncerOutput)
}

func (i GetPgPgUserConfigPgbouncerArgs) ToGetPgPgUserConfigPgbouncerPtrOutput() GetPgPgUserConfigPgbouncerPtrOutput {
	return i.ToGetPgPgUserConfigPgbouncerPtrOutputWithContext(context.Background())
}

func (i GetPgPgUserConfigPgbouncerArgs) ToGetPgPgUserConfigPgbouncerPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigPgbouncerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPgUserConfigPgbouncerOutput).ToGetPgPgUserConfigPgbouncerPtrOutputWithContext(ctx)
}

// GetPgPgUserConfigPgbouncerPtrInput is an input type that accepts GetPgPgUserConfigPgbouncerArgs, GetPgPgUserConfigPgbouncerPtr and GetPgPgUserConfigPgbouncerPtrOutput values.
// You can construct a concrete instance of `GetPgPgUserConfigPgbouncerPtrInput` via:
//
//          GetPgPgUserConfigPgbouncerArgs{...}
//
//  or:
//
//          nil
type GetPgPgUserConfigPgbouncerPtrInput interface {
	pulumi.Input

	ToGetPgPgUserConfigPgbouncerPtrOutput() GetPgPgUserConfigPgbouncerPtrOutput
	ToGetPgPgUserConfigPgbouncerPtrOutputWithContext(context.Context) GetPgPgUserConfigPgbouncerPtrOutput
}

type getPgPgUserConfigPgbouncerPtrType GetPgPgUserConfigPgbouncerArgs

func GetPgPgUserConfigPgbouncerPtr(v *GetPgPgUserConfigPgbouncerArgs) GetPgPgUserConfigPgbouncerPtrInput {
	return (*getPgPgUserConfigPgbouncerPtrType)(v)
}

func (*getPgPgUserConfigPgbouncerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPgPgUserConfigPgbouncer)(nil)).Elem()
}

func (i *getPgPgUserConfigPgbouncerPtrType) ToGetPgPgUserConfigPgbouncerPtrOutput() GetPgPgUserConfigPgbouncerPtrOutput {
	return i.ToGetPgPgUserConfigPgbouncerPtrOutputWithContext(context.Background())
}

func (i *getPgPgUserConfigPgbouncerPtrType) ToGetPgPgUserConfigPgbouncerPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigPgbouncerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPgUserConfigPgbouncerPtrOutput)
}

type GetPgPgUserConfigPgbouncerOutput struct{ *pulumi.OutputState }

func (GetPgPgUserConfigPgbouncerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgPgUserConfigPgbouncer)(nil)).Elem()
}

func (o GetPgPgUserConfigPgbouncerOutput) ToGetPgPgUserConfigPgbouncerOutput() GetPgPgUserConfigPgbouncerOutput {
	return o
}

func (o GetPgPgUserConfigPgbouncerOutput) ToGetPgPgUserConfigPgbouncerOutputWithContext(ctx context.Context) GetPgPgUserConfigPgbouncerOutput {
	return o
}

func (o GetPgPgUserConfigPgbouncerOutput) ToGetPgPgUserConfigPgbouncerPtrOutput() GetPgPgUserConfigPgbouncerPtrOutput {
	return o.ToGetPgPgUserConfigPgbouncerPtrOutputWithContext(context.Background())
}

func (o GetPgPgUserConfigPgbouncerOutput) ToGetPgPgUserConfigPgbouncerPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigPgbouncerPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPgbouncer) *GetPgPgUserConfigPgbouncer {
		return &v
	}).(GetPgPgUserConfigPgbouncerPtrOutput)
}

// If the automatically created database pools have been unused this
// many seconds, they are freed. If 0 then timeout is disabled.
func (o GetPgPgUserConfigPgbouncerOutput) AutodbIdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPgbouncer) *string { return v.AutodbIdleTimeout }).(pulumi.StringPtrOutput)
}

// Do not allow more than this many server connections per database
// (regardless of user). Setting it to 0 means unlimited.
func (o GetPgPgUserConfigPgbouncerOutput) AutodbMaxDbConnections() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPgbouncer) *string { return v.AutodbMaxDbConnections }).(pulumi.StringPtrOutput)
}

// PGBouncer pool mode
func (o GetPgPgUserConfigPgbouncerOutput) AutodbPoolMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPgbouncer) *string { return v.AutodbPoolMode }).(pulumi.StringPtrOutput)
}

// If non-zero then create automatically a pool of that size per user
// when a pool doesn't exist.
func (o GetPgPgUserConfigPgbouncerOutput) AutodbPoolSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPgbouncer) *string { return v.AutodbPoolSize }).(pulumi.StringPtrOutput)
}

// Enum of parameters to ignore when given in startup packet.
func (o GetPgPgUserConfigPgbouncerOutput) IgnoreStartupParameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPgbouncer) []string { return v.IgnoreStartupParameters }).(pulumi.StringArrayOutput)
}

// Add more server connections to pool if below this number. Improves
// behavior when usual load comes suddenly back after period of total inactivity. The value is
// effectively capped at the pool size.
func (o GetPgPgUserConfigPgbouncerOutput) MinPoolSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPgbouncer) *string { return v.MinPoolSize }).(pulumi.StringPtrOutput)
}

// If a server connection has been idle more than this many seconds
// it will be dropped. If 0 then timeout is disabled.
func (o GetPgPgUserConfigPgbouncerOutput) ServerIdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPgbouncer) *string { return v.ServerIdleTimeout }).(pulumi.StringPtrOutput)
}

// The pooler will close an unused server connection that has been connected
// longer than this.
func (o GetPgPgUserConfigPgbouncerOutput) ServerLifetime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPgbouncer) *string { return v.ServerLifetime }).(pulumi.StringPtrOutput)
}

// Run serverResetQuery (DISCARD ALL) in all pooling modes.
func (o GetPgPgUserConfigPgbouncerOutput) ServerResetQueryAlways() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPgbouncer) *string { return v.ServerResetQueryAlways }).(pulumi.StringPtrOutput)
}

type GetPgPgUserConfigPgbouncerPtrOutput struct{ *pulumi.OutputState }

func (GetPgPgUserConfigPgbouncerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPgPgUserConfigPgbouncer)(nil)).Elem()
}

func (o GetPgPgUserConfigPgbouncerPtrOutput) ToGetPgPgUserConfigPgbouncerPtrOutput() GetPgPgUserConfigPgbouncerPtrOutput {
	return o
}

func (o GetPgPgUserConfigPgbouncerPtrOutput) ToGetPgPgUserConfigPgbouncerPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigPgbouncerPtrOutput {
	return o
}

func (o GetPgPgUserConfigPgbouncerPtrOutput) Elem() GetPgPgUserConfigPgbouncerOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPgbouncer) GetPgPgUserConfigPgbouncer { return *v }).(GetPgPgUserConfigPgbouncerOutput)
}

// If the automatically created database pools have been unused this
// many seconds, they are freed. If 0 then timeout is disabled.
func (o GetPgPgUserConfigPgbouncerPtrOutput) AutodbIdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.AutodbIdleTimeout
	}).(pulumi.StringPtrOutput)
}

// Do not allow more than this many server connections per database
// (regardless of user). Setting it to 0 means unlimited.
func (o GetPgPgUserConfigPgbouncerPtrOutput) AutodbMaxDbConnections() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.AutodbMaxDbConnections
	}).(pulumi.StringPtrOutput)
}

// PGBouncer pool mode
func (o GetPgPgUserConfigPgbouncerPtrOutput) AutodbPoolMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.AutodbPoolMode
	}).(pulumi.StringPtrOutput)
}

// If non-zero then create automatically a pool of that size per user
// when a pool doesn't exist.
func (o GetPgPgUserConfigPgbouncerPtrOutput) AutodbPoolSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.AutodbPoolSize
	}).(pulumi.StringPtrOutput)
}

// Enum of parameters to ignore when given in startup packet.
func (o GetPgPgUserConfigPgbouncerPtrOutput) IgnoreStartupParameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPgbouncer) []string {
		if v == nil {
			return nil
		}
		return v.IgnoreStartupParameters
	}).(pulumi.StringArrayOutput)
}

// Add more server connections to pool if below this number. Improves
// behavior when usual load comes suddenly back after period of total inactivity. The value is
// effectively capped at the pool size.
func (o GetPgPgUserConfigPgbouncerPtrOutput) MinPoolSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.MinPoolSize
	}).(pulumi.StringPtrOutput)
}

// If a server connection has been idle more than this many seconds
// it will be dropped. If 0 then timeout is disabled.
func (o GetPgPgUserConfigPgbouncerPtrOutput) ServerIdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.ServerIdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The pooler will close an unused server connection that has been connected
// longer than this.
func (o GetPgPgUserConfigPgbouncerPtrOutput) ServerLifetime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.ServerLifetime
	}).(pulumi.StringPtrOutput)
}

// Run serverResetQuery (DISCARD ALL) in all pooling modes.
func (o GetPgPgUserConfigPgbouncerPtrOutput) ServerResetQueryAlways() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.ServerResetQueryAlways
	}).(pulumi.StringPtrOutput)
}

type GetPgPgUserConfigPglookout struct {
	// Number of seconds of master unavailability before
	// triggering database failover to standby
	MaxFailoverReplicationTimeLag *string `pulumi:"maxFailoverReplicationTimeLag"`
}

// GetPgPgUserConfigPglookoutInput is an input type that accepts GetPgPgUserConfigPglookoutArgs and GetPgPgUserConfigPglookoutOutput values.
// You can construct a concrete instance of `GetPgPgUserConfigPglookoutInput` via:
//
//          GetPgPgUserConfigPglookoutArgs{...}
type GetPgPgUserConfigPglookoutInput interface {
	pulumi.Input

	ToGetPgPgUserConfigPglookoutOutput() GetPgPgUserConfigPglookoutOutput
	ToGetPgPgUserConfigPglookoutOutputWithContext(context.Context) GetPgPgUserConfigPglookoutOutput
}

type GetPgPgUserConfigPglookoutArgs struct {
	// Number of seconds of master unavailability before
	// triggering database failover to standby
	MaxFailoverReplicationTimeLag pulumi.StringPtrInput `pulumi:"maxFailoverReplicationTimeLag"`
}

func (GetPgPgUserConfigPglookoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgPgUserConfigPglookout)(nil)).Elem()
}

func (i GetPgPgUserConfigPglookoutArgs) ToGetPgPgUserConfigPglookoutOutput() GetPgPgUserConfigPglookoutOutput {
	return i.ToGetPgPgUserConfigPglookoutOutputWithContext(context.Background())
}

func (i GetPgPgUserConfigPglookoutArgs) ToGetPgPgUserConfigPglookoutOutputWithContext(ctx context.Context) GetPgPgUserConfigPglookoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPgUserConfigPglookoutOutput)
}

func (i GetPgPgUserConfigPglookoutArgs) ToGetPgPgUserConfigPglookoutPtrOutput() GetPgPgUserConfigPglookoutPtrOutput {
	return i.ToGetPgPgUserConfigPglookoutPtrOutputWithContext(context.Background())
}

func (i GetPgPgUserConfigPglookoutArgs) ToGetPgPgUserConfigPglookoutPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigPglookoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPgUserConfigPglookoutOutput).ToGetPgPgUserConfigPglookoutPtrOutputWithContext(ctx)
}

// GetPgPgUserConfigPglookoutPtrInput is an input type that accepts GetPgPgUserConfigPglookoutArgs, GetPgPgUserConfigPglookoutPtr and GetPgPgUserConfigPglookoutPtrOutput values.
// You can construct a concrete instance of `GetPgPgUserConfigPglookoutPtrInput` via:
//
//          GetPgPgUserConfigPglookoutArgs{...}
//
//  or:
//
//          nil
type GetPgPgUserConfigPglookoutPtrInput interface {
	pulumi.Input

	ToGetPgPgUserConfigPglookoutPtrOutput() GetPgPgUserConfigPglookoutPtrOutput
	ToGetPgPgUserConfigPglookoutPtrOutputWithContext(context.Context) GetPgPgUserConfigPglookoutPtrOutput
}

type getPgPgUserConfigPglookoutPtrType GetPgPgUserConfigPglookoutArgs

func GetPgPgUserConfigPglookoutPtr(v *GetPgPgUserConfigPglookoutArgs) GetPgPgUserConfigPglookoutPtrInput {
	return (*getPgPgUserConfigPglookoutPtrType)(v)
}

func (*getPgPgUserConfigPglookoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPgPgUserConfigPglookout)(nil)).Elem()
}

func (i *getPgPgUserConfigPglookoutPtrType) ToGetPgPgUserConfigPglookoutPtrOutput() GetPgPgUserConfigPglookoutPtrOutput {
	return i.ToGetPgPgUserConfigPglookoutPtrOutputWithContext(context.Background())
}

func (i *getPgPgUserConfigPglookoutPtrType) ToGetPgPgUserConfigPglookoutPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigPglookoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPgUserConfigPglookoutPtrOutput)
}

type GetPgPgUserConfigPglookoutOutput struct{ *pulumi.OutputState }

func (GetPgPgUserConfigPglookoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgPgUserConfigPglookout)(nil)).Elem()
}

func (o GetPgPgUserConfigPglookoutOutput) ToGetPgPgUserConfigPglookoutOutput() GetPgPgUserConfigPglookoutOutput {
	return o
}

func (o GetPgPgUserConfigPglookoutOutput) ToGetPgPgUserConfigPglookoutOutputWithContext(ctx context.Context) GetPgPgUserConfigPglookoutOutput {
	return o
}

func (o GetPgPgUserConfigPglookoutOutput) ToGetPgPgUserConfigPglookoutPtrOutput() GetPgPgUserConfigPglookoutPtrOutput {
	return o.ToGetPgPgUserConfigPglookoutPtrOutputWithContext(context.Background())
}

func (o GetPgPgUserConfigPglookoutOutput) ToGetPgPgUserConfigPglookoutPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigPglookoutPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPglookout) *GetPgPgUserConfigPglookout {
		return &v
	}).(GetPgPgUserConfigPglookoutPtrOutput)
}

// Number of seconds of master unavailability before
// triggering database failover to standby
func (o GetPgPgUserConfigPglookoutOutput) MaxFailoverReplicationTimeLag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPglookout) *string { return v.MaxFailoverReplicationTimeLag }).(pulumi.StringPtrOutput)
}

type GetPgPgUserConfigPglookoutPtrOutput struct{ *pulumi.OutputState }

func (GetPgPgUserConfigPglookoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPgPgUserConfigPglookout)(nil)).Elem()
}

func (o GetPgPgUserConfigPglookoutPtrOutput) ToGetPgPgUserConfigPglookoutPtrOutput() GetPgPgUserConfigPglookoutPtrOutput {
	return o
}

func (o GetPgPgUserConfigPglookoutPtrOutput) ToGetPgPgUserConfigPglookoutPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigPglookoutPtrOutput {
	return o
}

func (o GetPgPgUserConfigPglookoutPtrOutput) Elem() GetPgPgUserConfigPglookoutOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPglookout) GetPgPgUserConfigPglookout { return *v }).(GetPgPgUserConfigPglookoutOutput)
}

// Number of seconds of master unavailability before
// triggering database failover to standby
func (o GetPgPgUserConfigPglookoutPtrOutput) MaxFailoverReplicationTimeLag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPglookout) *string {
		if v == nil {
			return nil
		}
		return v.MaxFailoverReplicationTimeLag
	}).(pulumi.StringPtrOutput)
}

type GetPgPgUserConfigPrivateAccess struct {
	// PostgreSQL specific server provided values.
	Pg *string `pulumi:"pg"`
	// Enable pgbouncer.
	Pgbouncer *string `pulumi:"pgbouncer"`
	// Allow clients to connect to prometheus from the public internet for
	// service nodes that are in a project VPC or another type of private network
	Prometheus *string `pulumi:"prometheus"`
}

// GetPgPgUserConfigPrivateAccessInput is an input type that accepts GetPgPgUserConfigPrivateAccessArgs and GetPgPgUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `GetPgPgUserConfigPrivateAccessInput` via:
//
//          GetPgPgUserConfigPrivateAccessArgs{...}
type GetPgPgUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToGetPgPgUserConfigPrivateAccessOutput() GetPgPgUserConfigPrivateAccessOutput
	ToGetPgPgUserConfigPrivateAccessOutputWithContext(context.Context) GetPgPgUserConfigPrivateAccessOutput
}

type GetPgPgUserConfigPrivateAccessArgs struct {
	// PostgreSQL specific server provided values.
	Pg pulumi.StringPtrInput `pulumi:"pg"`
	// Enable pgbouncer.
	Pgbouncer pulumi.StringPtrInput `pulumi:"pgbouncer"`
	// Allow clients to connect to prometheus from the public internet for
	// service nodes that are in a project VPC or another type of private network
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (GetPgPgUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgPgUserConfigPrivateAccess)(nil)).Elem()
}

func (i GetPgPgUserConfigPrivateAccessArgs) ToGetPgPgUserConfigPrivateAccessOutput() GetPgPgUserConfigPrivateAccessOutput {
	return i.ToGetPgPgUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i GetPgPgUserConfigPrivateAccessArgs) ToGetPgPgUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetPgPgUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPgUserConfigPrivateAccessOutput)
}

func (i GetPgPgUserConfigPrivateAccessArgs) ToGetPgPgUserConfigPrivateAccessPtrOutput() GetPgPgUserConfigPrivateAccessPtrOutput {
	return i.ToGetPgPgUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i GetPgPgUserConfigPrivateAccessArgs) ToGetPgPgUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPgUserConfigPrivateAccessOutput).ToGetPgPgUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// GetPgPgUserConfigPrivateAccessPtrInput is an input type that accepts GetPgPgUserConfigPrivateAccessArgs, GetPgPgUserConfigPrivateAccessPtr and GetPgPgUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `GetPgPgUserConfigPrivateAccessPtrInput` via:
//
//          GetPgPgUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type GetPgPgUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToGetPgPgUserConfigPrivateAccessPtrOutput() GetPgPgUserConfigPrivateAccessPtrOutput
	ToGetPgPgUserConfigPrivateAccessPtrOutputWithContext(context.Context) GetPgPgUserConfigPrivateAccessPtrOutput
}

type getPgPgUserConfigPrivateAccessPtrType GetPgPgUserConfigPrivateAccessArgs

func GetPgPgUserConfigPrivateAccessPtr(v *GetPgPgUserConfigPrivateAccessArgs) GetPgPgUserConfigPrivateAccessPtrInput {
	return (*getPgPgUserConfigPrivateAccessPtrType)(v)
}

func (*getPgPgUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPgPgUserConfigPrivateAccess)(nil)).Elem()
}

func (i *getPgPgUserConfigPrivateAccessPtrType) ToGetPgPgUserConfigPrivateAccessPtrOutput() GetPgPgUserConfigPrivateAccessPtrOutput {
	return i.ToGetPgPgUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *getPgPgUserConfigPrivateAccessPtrType) ToGetPgPgUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPgUserConfigPrivateAccessPtrOutput)
}

type GetPgPgUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (GetPgPgUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgPgUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetPgPgUserConfigPrivateAccessOutput) ToGetPgPgUserConfigPrivateAccessOutput() GetPgPgUserConfigPrivateAccessOutput {
	return o
}

func (o GetPgPgUserConfigPrivateAccessOutput) ToGetPgPgUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetPgPgUserConfigPrivateAccessOutput {
	return o
}

func (o GetPgPgUserConfigPrivateAccessOutput) ToGetPgPgUserConfigPrivateAccessPtrOutput() GetPgPgUserConfigPrivateAccessPtrOutput {
	return o.ToGetPgPgUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o GetPgPgUserConfigPrivateAccessOutput) ToGetPgPgUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPrivateAccess) *GetPgPgUserConfigPrivateAccess {
		return &v
	}).(GetPgPgUserConfigPrivateAccessPtrOutput)
}

// PostgreSQL specific server provided values.
func (o GetPgPgUserConfigPrivateAccessOutput) Pg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPrivateAccess) *string { return v.Pg }).(pulumi.StringPtrOutput)
}

// Enable pgbouncer.
func (o GetPgPgUserConfigPrivateAccessOutput) Pgbouncer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPrivateAccess) *string { return v.Pgbouncer }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public internet for
// service nodes that are in a project VPC or another type of private network
func (o GetPgPgUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type GetPgPgUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (GetPgPgUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPgPgUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetPgPgUserConfigPrivateAccessPtrOutput) ToGetPgPgUserConfigPrivateAccessPtrOutput() GetPgPgUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetPgPgUserConfigPrivateAccessPtrOutput) ToGetPgPgUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetPgPgUserConfigPrivateAccessPtrOutput) Elem() GetPgPgUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPrivateAccess) GetPgPgUserConfigPrivateAccess { return *v }).(GetPgPgUserConfigPrivateAccessOutput)
}

// PostgreSQL specific server provided values.
func (o GetPgPgUserConfigPrivateAccessPtrOutput) Pg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Pg
	}).(pulumi.StringPtrOutput)
}

// Enable pgbouncer.
func (o GetPgPgUserConfigPrivateAccessPtrOutput) Pgbouncer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Pgbouncer
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public internet for
// service nodes that are in a project VPC or another type of private network
func (o GetPgPgUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type GetPgPgUserConfigPrivatelinkAccess struct {
	// PostgreSQL specific server provided values.
	Pg *string `pulumi:"pg"`
	// Enable pgbouncer.
	Pgbouncer *string `pulumi:"pgbouncer"`
}

// GetPgPgUserConfigPrivatelinkAccessInput is an input type that accepts GetPgPgUserConfigPrivatelinkAccessArgs and GetPgPgUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `GetPgPgUserConfigPrivatelinkAccessInput` via:
//
//          GetPgPgUserConfigPrivatelinkAccessArgs{...}
type GetPgPgUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToGetPgPgUserConfigPrivatelinkAccessOutput() GetPgPgUserConfigPrivatelinkAccessOutput
	ToGetPgPgUserConfigPrivatelinkAccessOutputWithContext(context.Context) GetPgPgUserConfigPrivatelinkAccessOutput
}

type GetPgPgUserConfigPrivatelinkAccessArgs struct {
	// PostgreSQL specific server provided values.
	Pg pulumi.StringPtrInput `pulumi:"pg"`
	// Enable pgbouncer.
	Pgbouncer pulumi.StringPtrInput `pulumi:"pgbouncer"`
}

func (GetPgPgUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgPgUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i GetPgPgUserConfigPrivatelinkAccessArgs) ToGetPgPgUserConfigPrivatelinkAccessOutput() GetPgPgUserConfigPrivatelinkAccessOutput {
	return i.ToGetPgPgUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i GetPgPgUserConfigPrivatelinkAccessArgs) ToGetPgPgUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetPgPgUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPgUserConfigPrivatelinkAccessOutput)
}

func (i GetPgPgUserConfigPrivatelinkAccessArgs) ToGetPgPgUserConfigPrivatelinkAccessPtrOutput() GetPgPgUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetPgPgUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i GetPgPgUserConfigPrivatelinkAccessArgs) ToGetPgPgUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPgUserConfigPrivatelinkAccessOutput).ToGetPgPgUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// GetPgPgUserConfigPrivatelinkAccessPtrInput is an input type that accepts GetPgPgUserConfigPrivatelinkAccessArgs, GetPgPgUserConfigPrivatelinkAccessPtr and GetPgPgUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `GetPgPgUserConfigPrivatelinkAccessPtrInput` via:
//
//          GetPgPgUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type GetPgPgUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToGetPgPgUserConfigPrivatelinkAccessPtrOutput() GetPgPgUserConfigPrivatelinkAccessPtrOutput
	ToGetPgPgUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) GetPgPgUserConfigPrivatelinkAccessPtrOutput
}

type getPgPgUserConfigPrivatelinkAccessPtrType GetPgPgUserConfigPrivatelinkAccessArgs

func GetPgPgUserConfigPrivatelinkAccessPtr(v *GetPgPgUserConfigPrivatelinkAccessArgs) GetPgPgUserConfigPrivatelinkAccessPtrInput {
	return (*getPgPgUserConfigPrivatelinkAccessPtrType)(v)
}

func (*getPgPgUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPgPgUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *getPgPgUserConfigPrivatelinkAccessPtrType) ToGetPgPgUserConfigPrivatelinkAccessPtrOutput() GetPgPgUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetPgPgUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *getPgPgUserConfigPrivatelinkAccessPtrType) ToGetPgPgUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPgUserConfigPrivatelinkAccessPtrOutput)
}

type GetPgPgUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (GetPgPgUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgPgUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetPgPgUserConfigPrivatelinkAccessOutput) ToGetPgPgUserConfigPrivatelinkAccessOutput() GetPgPgUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetPgPgUserConfigPrivatelinkAccessOutput) ToGetPgPgUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetPgPgUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetPgPgUserConfigPrivatelinkAccessOutput) ToGetPgPgUserConfigPrivatelinkAccessPtrOutput() GetPgPgUserConfigPrivatelinkAccessPtrOutput {
	return o.ToGetPgPgUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o GetPgPgUserConfigPrivatelinkAccessOutput) ToGetPgPgUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPrivatelinkAccess) *GetPgPgUserConfigPrivatelinkAccess {
		return &v
	}).(GetPgPgUserConfigPrivatelinkAccessPtrOutput)
}

// PostgreSQL specific server provided values.
func (o GetPgPgUserConfigPrivatelinkAccessOutput) Pg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPrivatelinkAccess) *string { return v.Pg }).(pulumi.StringPtrOutput)
}

// Enable pgbouncer.
func (o GetPgPgUserConfigPrivatelinkAccessOutput) Pgbouncer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPrivatelinkAccess) *string { return v.Pgbouncer }).(pulumi.StringPtrOutput)
}

type GetPgPgUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (GetPgPgUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPgPgUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetPgPgUserConfigPrivatelinkAccessPtrOutput) ToGetPgPgUserConfigPrivatelinkAccessPtrOutput() GetPgPgUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetPgPgUserConfigPrivatelinkAccessPtrOutput) ToGetPgPgUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetPgPgUserConfigPrivatelinkAccessPtrOutput) Elem() GetPgPgUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPrivatelinkAccess) GetPgPgUserConfigPrivatelinkAccess { return *v }).(GetPgPgUserConfigPrivatelinkAccessOutput)
}

// PostgreSQL specific server provided values.
func (o GetPgPgUserConfigPrivatelinkAccessPtrOutput) Pg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Pg
	}).(pulumi.StringPtrOutput)
}

// Enable pgbouncer.
func (o GetPgPgUserConfigPrivatelinkAccessPtrOutput) Pgbouncer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Pgbouncer
	}).(pulumi.StringPtrOutput)
}

type GetPgPgUserConfigPublicAccess struct {
	// PostgreSQL specific server provided values.
	Pg *string `pulumi:"pg"`
	// Enable pgbouncer.
	Pgbouncer *string `pulumi:"pgbouncer"`
	// Allow clients to connect to prometheus from the public internet for
	// service nodes that are in a project VPC or another type of private network
	Prometheus *string `pulumi:"prometheus"`
}

// GetPgPgUserConfigPublicAccessInput is an input type that accepts GetPgPgUserConfigPublicAccessArgs and GetPgPgUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `GetPgPgUserConfigPublicAccessInput` via:
//
//          GetPgPgUserConfigPublicAccessArgs{...}
type GetPgPgUserConfigPublicAccessInput interface {
	pulumi.Input

	ToGetPgPgUserConfigPublicAccessOutput() GetPgPgUserConfigPublicAccessOutput
	ToGetPgPgUserConfigPublicAccessOutputWithContext(context.Context) GetPgPgUserConfigPublicAccessOutput
}

type GetPgPgUserConfigPublicAccessArgs struct {
	// PostgreSQL specific server provided values.
	Pg pulumi.StringPtrInput `pulumi:"pg"`
	// Enable pgbouncer.
	Pgbouncer pulumi.StringPtrInput `pulumi:"pgbouncer"`
	// Allow clients to connect to prometheus from the public internet for
	// service nodes that are in a project VPC or another type of private network
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (GetPgPgUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgPgUserConfigPublicAccess)(nil)).Elem()
}

func (i GetPgPgUserConfigPublicAccessArgs) ToGetPgPgUserConfigPublicAccessOutput() GetPgPgUserConfigPublicAccessOutput {
	return i.ToGetPgPgUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i GetPgPgUserConfigPublicAccessArgs) ToGetPgPgUserConfigPublicAccessOutputWithContext(ctx context.Context) GetPgPgUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPgUserConfigPublicAccessOutput)
}

func (i GetPgPgUserConfigPublicAccessArgs) ToGetPgPgUserConfigPublicAccessPtrOutput() GetPgPgUserConfigPublicAccessPtrOutput {
	return i.ToGetPgPgUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i GetPgPgUserConfigPublicAccessArgs) ToGetPgPgUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPgUserConfigPublicAccessOutput).ToGetPgPgUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// GetPgPgUserConfigPublicAccessPtrInput is an input type that accepts GetPgPgUserConfigPublicAccessArgs, GetPgPgUserConfigPublicAccessPtr and GetPgPgUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `GetPgPgUserConfigPublicAccessPtrInput` via:
//
//          GetPgPgUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type GetPgPgUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToGetPgPgUserConfigPublicAccessPtrOutput() GetPgPgUserConfigPublicAccessPtrOutput
	ToGetPgPgUserConfigPublicAccessPtrOutputWithContext(context.Context) GetPgPgUserConfigPublicAccessPtrOutput
}

type getPgPgUserConfigPublicAccessPtrType GetPgPgUserConfigPublicAccessArgs

func GetPgPgUserConfigPublicAccessPtr(v *GetPgPgUserConfigPublicAccessArgs) GetPgPgUserConfigPublicAccessPtrInput {
	return (*getPgPgUserConfigPublicAccessPtrType)(v)
}

func (*getPgPgUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPgPgUserConfigPublicAccess)(nil)).Elem()
}

func (i *getPgPgUserConfigPublicAccessPtrType) ToGetPgPgUserConfigPublicAccessPtrOutput() GetPgPgUserConfigPublicAccessPtrOutput {
	return i.ToGetPgPgUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *getPgPgUserConfigPublicAccessPtrType) ToGetPgPgUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPgUserConfigPublicAccessPtrOutput)
}

type GetPgPgUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (GetPgPgUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgPgUserConfigPublicAccess)(nil)).Elem()
}

func (o GetPgPgUserConfigPublicAccessOutput) ToGetPgPgUserConfigPublicAccessOutput() GetPgPgUserConfigPublicAccessOutput {
	return o
}

func (o GetPgPgUserConfigPublicAccessOutput) ToGetPgPgUserConfigPublicAccessOutputWithContext(ctx context.Context) GetPgPgUserConfigPublicAccessOutput {
	return o
}

func (o GetPgPgUserConfigPublicAccessOutput) ToGetPgPgUserConfigPublicAccessPtrOutput() GetPgPgUserConfigPublicAccessPtrOutput {
	return o.ToGetPgPgUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o GetPgPgUserConfigPublicAccessOutput) ToGetPgPgUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPublicAccess) *GetPgPgUserConfigPublicAccess {
		return &v
	}).(GetPgPgUserConfigPublicAccessPtrOutput)
}

// PostgreSQL specific server provided values.
func (o GetPgPgUserConfigPublicAccessOutput) Pg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPublicAccess) *string { return v.Pg }).(pulumi.StringPtrOutput)
}

// Enable pgbouncer.
func (o GetPgPgUserConfigPublicAccessOutput) Pgbouncer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPublicAccess) *string { return v.Pgbouncer }).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public internet for
// service nodes that are in a project VPC or another type of private network
func (o GetPgPgUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type GetPgPgUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (GetPgPgUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPgPgUserConfigPublicAccess)(nil)).Elem()
}

func (o GetPgPgUserConfigPublicAccessPtrOutput) ToGetPgPgUserConfigPublicAccessPtrOutput() GetPgPgUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetPgPgUserConfigPublicAccessPtrOutput) ToGetPgPgUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetPgPgUserConfigPublicAccessPtrOutput) Elem() GetPgPgUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPublicAccess) GetPgPgUserConfigPublicAccess { return *v }).(GetPgPgUserConfigPublicAccessOutput)
}

// PostgreSQL specific server provided values.
func (o GetPgPgUserConfigPublicAccessPtrOutput) Pg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Pg
	}).(pulumi.StringPtrOutput)
}

// Enable pgbouncer.
func (o GetPgPgUserConfigPublicAccessPtrOutput) Pgbouncer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Pgbouncer
	}).(pulumi.StringPtrOutput)
}

// Allow clients to connect to prometheus from the public internet for
// service nodes that are in a project VPC or another type of private network
func (o GetPgPgUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type GetPgPgUserConfigTimescaledb struct {
	// The number of background workers for timescaledb
	// operations. You should configure this setting to the sum of your number of databases and the
	// total number of concurrent background workers you want running at any given point in time.
	MaxBackgroundWorkers *string `pulumi:"maxBackgroundWorkers"`
}

// GetPgPgUserConfigTimescaledbInput is an input type that accepts GetPgPgUserConfigTimescaledbArgs and GetPgPgUserConfigTimescaledbOutput values.
// You can construct a concrete instance of `GetPgPgUserConfigTimescaledbInput` via:
//
//          GetPgPgUserConfigTimescaledbArgs{...}
type GetPgPgUserConfigTimescaledbInput interface {
	pulumi.Input

	ToGetPgPgUserConfigTimescaledbOutput() GetPgPgUserConfigTimescaledbOutput
	ToGetPgPgUserConfigTimescaledbOutputWithContext(context.Context) GetPgPgUserConfigTimescaledbOutput
}

type GetPgPgUserConfigTimescaledbArgs struct {
	// The number of background workers for timescaledb
	// operations. You should configure this setting to the sum of your number of databases and the
	// total number of concurrent background workers you want running at any given point in time.
	MaxBackgroundWorkers pulumi.StringPtrInput `pulumi:"maxBackgroundWorkers"`
}

func (GetPgPgUserConfigTimescaledbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgPgUserConfigTimescaledb)(nil)).Elem()
}

func (i GetPgPgUserConfigTimescaledbArgs) ToGetPgPgUserConfigTimescaledbOutput() GetPgPgUserConfigTimescaledbOutput {
	return i.ToGetPgPgUserConfigTimescaledbOutputWithContext(context.Background())
}

func (i GetPgPgUserConfigTimescaledbArgs) ToGetPgPgUserConfigTimescaledbOutputWithContext(ctx context.Context) GetPgPgUserConfigTimescaledbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPgUserConfigTimescaledbOutput)
}

func (i GetPgPgUserConfigTimescaledbArgs) ToGetPgPgUserConfigTimescaledbPtrOutput() GetPgPgUserConfigTimescaledbPtrOutput {
	return i.ToGetPgPgUserConfigTimescaledbPtrOutputWithContext(context.Background())
}

func (i GetPgPgUserConfigTimescaledbArgs) ToGetPgPgUserConfigTimescaledbPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigTimescaledbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPgUserConfigTimescaledbOutput).ToGetPgPgUserConfigTimescaledbPtrOutputWithContext(ctx)
}

// GetPgPgUserConfigTimescaledbPtrInput is an input type that accepts GetPgPgUserConfigTimescaledbArgs, GetPgPgUserConfigTimescaledbPtr and GetPgPgUserConfigTimescaledbPtrOutput values.
// You can construct a concrete instance of `GetPgPgUserConfigTimescaledbPtrInput` via:
//
//          GetPgPgUserConfigTimescaledbArgs{...}
//
//  or:
//
//          nil
type GetPgPgUserConfigTimescaledbPtrInput interface {
	pulumi.Input

	ToGetPgPgUserConfigTimescaledbPtrOutput() GetPgPgUserConfigTimescaledbPtrOutput
	ToGetPgPgUserConfigTimescaledbPtrOutputWithContext(context.Context) GetPgPgUserConfigTimescaledbPtrOutput
}

type getPgPgUserConfigTimescaledbPtrType GetPgPgUserConfigTimescaledbArgs

func GetPgPgUserConfigTimescaledbPtr(v *GetPgPgUserConfigTimescaledbArgs) GetPgPgUserConfigTimescaledbPtrInput {
	return (*getPgPgUserConfigTimescaledbPtrType)(v)
}

func (*getPgPgUserConfigTimescaledbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPgPgUserConfigTimescaledb)(nil)).Elem()
}

func (i *getPgPgUserConfigTimescaledbPtrType) ToGetPgPgUserConfigTimescaledbPtrOutput() GetPgPgUserConfigTimescaledbPtrOutput {
	return i.ToGetPgPgUserConfigTimescaledbPtrOutputWithContext(context.Background())
}

func (i *getPgPgUserConfigTimescaledbPtrType) ToGetPgPgUserConfigTimescaledbPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigTimescaledbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPgUserConfigTimescaledbPtrOutput)
}

type GetPgPgUserConfigTimescaledbOutput struct{ *pulumi.OutputState }

func (GetPgPgUserConfigTimescaledbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgPgUserConfigTimescaledb)(nil)).Elem()
}

func (o GetPgPgUserConfigTimescaledbOutput) ToGetPgPgUserConfigTimescaledbOutput() GetPgPgUserConfigTimescaledbOutput {
	return o
}

func (o GetPgPgUserConfigTimescaledbOutput) ToGetPgPgUserConfigTimescaledbOutputWithContext(ctx context.Context) GetPgPgUserConfigTimescaledbOutput {
	return o
}

func (o GetPgPgUserConfigTimescaledbOutput) ToGetPgPgUserConfigTimescaledbPtrOutput() GetPgPgUserConfigTimescaledbPtrOutput {
	return o.ToGetPgPgUserConfigTimescaledbPtrOutputWithContext(context.Background())
}

func (o GetPgPgUserConfigTimescaledbOutput) ToGetPgPgUserConfigTimescaledbPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigTimescaledbPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigTimescaledb) *GetPgPgUserConfigTimescaledb {
		return &v
	}).(GetPgPgUserConfigTimescaledbPtrOutput)
}

// The number of background workers for timescaledb
// operations. You should configure this setting to the sum of your number of databases and the
// total number of concurrent background workers you want running at any given point in time.
func (o GetPgPgUserConfigTimescaledbOutput) MaxBackgroundWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPgUserConfigTimescaledb) *string { return v.MaxBackgroundWorkers }).(pulumi.StringPtrOutput)
}

type GetPgPgUserConfigTimescaledbPtrOutput struct{ *pulumi.OutputState }

func (GetPgPgUserConfigTimescaledbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPgPgUserConfigTimescaledb)(nil)).Elem()
}

func (o GetPgPgUserConfigTimescaledbPtrOutput) ToGetPgPgUserConfigTimescaledbPtrOutput() GetPgPgUserConfigTimescaledbPtrOutput {
	return o
}

func (o GetPgPgUserConfigTimescaledbPtrOutput) ToGetPgPgUserConfigTimescaledbPtrOutputWithContext(ctx context.Context) GetPgPgUserConfigTimescaledbPtrOutput {
	return o
}

func (o GetPgPgUserConfigTimescaledbPtrOutput) Elem() GetPgPgUserConfigTimescaledbOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigTimescaledb) GetPgPgUserConfigTimescaledb { return *v }).(GetPgPgUserConfigTimescaledbOutput)
}

// The number of background workers for timescaledb
// operations. You should configure this setting to the sum of your number of databases and the
// total number of concurrent background workers you want running at any given point in time.
func (o GetPgPgUserConfigTimescaledbPtrOutput) MaxBackgroundWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPgPgUserConfigTimescaledb) *string {
		if v == nil {
			return nil
		}
		return v.MaxBackgroundWorkers
	}).(pulumi.StringPtrOutput)
}

type GetPgServiceIntegration struct {
	IntegrationType   string `pulumi:"integrationType"`
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// GetPgServiceIntegrationInput is an input type that accepts GetPgServiceIntegrationArgs and GetPgServiceIntegrationOutput values.
// You can construct a concrete instance of `GetPgServiceIntegrationInput` via:
//
//          GetPgServiceIntegrationArgs{...}
type GetPgServiceIntegrationInput interface {
	pulumi.Input

	ToGetPgServiceIntegrationOutput() GetPgServiceIntegrationOutput
	ToGetPgServiceIntegrationOutputWithContext(context.Context) GetPgServiceIntegrationOutput
}

type GetPgServiceIntegrationArgs struct {
	IntegrationType   pulumi.StringInput `pulumi:"integrationType"`
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (GetPgServiceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgServiceIntegration)(nil)).Elem()
}

func (i GetPgServiceIntegrationArgs) ToGetPgServiceIntegrationOutput() GetPgServiceIntegrationOutput {
	return i.ToGetPgServiceIntegrationOutputWithContext(context.Background())
}

func (i GetPgServiceIntegrationArgs) ToGetPgServiceIntegrationOutputWithContext(ctx context.Context) GetPgServiceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgServiceIntegrationOutput)
}

// GetPgServiceIntegrationArrayInput is an input type that accepts GetPgServiceIntegrationArray and GetPgServiceIntegrationArrayOutput values.
// You can construct a concrete instance of `GetPgServiceIntegrationArrayInput` via:
//
//          GetPgServiceIntegrationArray{ GetPgServiceIntegrationArgs{...} }
type GetPgServiceIntegrationArrayInput interface {
	pulumi.Input

	ToGetPgServiceIntegrationArrayOutput() GetPgServiceIntegrationArrayOutput
	ToGetPgServiceIntegrationArrayOutputWithContext(context.Context) GetPgServiceIntegrationArrayOutput
}

type GetPgServiceIntegrationArray []GetPgServiceIntegrationInput

func (GetPgServiceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgServiceIntegration)(nil)).Elem()
}

func (i GetPgServiceIntegrationArray) ToGetPgServiceIntegrationArrayOutput() GetPgServiceIntegrationArrayOutput {
	return i.ToGetPgServiceIntegrationArrayOutputWithContext(context.Background())
}

func (i GetPgServiceIntegrationArray) ToGetPgServiceIntegrationArrayOutputWithContext(ctx context.Context) GetPgServiceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgServiceIntegrationArrayOutput)
}

type GetPgServiceIntegrationOutput struct{ *pulumi.OutputState }

func (GetPgServiceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgServiceIntegration)(nil)).Elem()
}

func (o GetPgServiceIntegrationOutput) ToGetPgServiceIntegrationOutput() GetPgServiceIntegrationOutput {
	return o
}

func (o GetPgServiceIntegrationOutput) ToGetPgServiceIntegrationOutputWithContext(ctx context.Context) GetPgServiceIntegrationOutput {
	return o
}

func (o GetPgServiceIntegrationOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgServiceIntegration) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o GetPgServiceIntegrationOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgServiceIntegration) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

type GetPgServiceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (GetPgServiceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgServiceIntegration)(nil)).Elem()
}

func (o GetPgServiceIntegrationArrayOutput) ToGetPgServiceIntegrationArrayOutput() GetPgServiceIntegrationArrayOutput {
	return o
}

func (o GetPgServiceIntegrationArrayOutput) ToGetPgServiceIntegrationArrayOutputWithContext(ctx context.Context) GetPgServiceIntegrationArrayOutput {
	return o
}

func (o GetPgServiceIntegrationArrayOutput) Index(i pulumi.IntInput) GetPgServiceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPgServiceIntegration {
		return vs[0].([]GetPgServiceIntegration)[vs[1].(int)]
	}).(GetPgServiceIntegrationOutput)
}

type GetRedisComponent struct {
	Component string `pulumi:"component"`
	// (Required) Hostname or IP address of the server where to migrate data from
	Host                      string `pulumi:"host"`
	KafkaAuthenticationMethod string `pulumi:"kafkaAuthenticationMethod"`
	// (Required) Port number of the server where to migrate data from
	Port  int    `pulumi:"port"`
	Route string `pulumi:"route"`
	// The server where to migrate data from is secured with SSL
	Ssl   bool   `pulumi:"ssl"`
	Usage string `pulumi:"usage"`
}

// GetRedisComponentInput is an input type that accepts GetRedisComponentArgs and GetRedisComponentOutput values.
// You can construct a concrete instance of `GetRedisComponentInput` via:
//
//          GetRedisComponentArgs{...}
type GetRedisComponentInput interface {
	pulumi.Input

	ToGetRedisComponentOutput() GetRedisComponentOutput
	ToGetRedisComponentOutputWithContext(context.Context) GetRedisComponentOutput
}

type GetRedisComponentArgs struct {
	Component pulumi.StringInput `pulumi:"component"`
	// (Required) Hostname or IP address of the server where to migrate data from
	Host                      pulumi.StringInput `pulumi:"host"`
	KafkaAuthenticationMethod pulumi.StringInput `pulumi:"kafkaAuthenticationMethod"`
	// (Required) Port number of the server where to migrate data from
	Port  pulumi.IntInput    `pulumi:"port"`
	Route pulumi.StringInput `pulumi:"route"`
	// The server where to migrate data from is secured with SSL
	Ssl   pulumi.BoolInput   `pulumi:"ssl"`
	Usage pulumi.StringInput `pulumi:"usage"`
}

func (GetRedisComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisComponent)(nil)).Elem()
}

func (i GetRedisComponentArgs) ToGetRedisComponentOutput() GetRedisComponentOutput {
	return i.ToGetRedisComponentOutputWithContext(context.Background())
}

func (i GetRedisComponentArgs) ToGetRedisComponentOutputWithContext(ctx context.Context) GetRedisComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisComponentOutput)
}

// GetRedisComponentArrayInput is an input type that accepts GetRedisComponentArray and GetRedisComponentArrayOutput values.
// You can construct a concrete instance of `GetRedisComponentArrayInput` via:
//
//          GetRedisComponentArray{ GetRedisComponentArgs{...} }
type GetRedisComponentArrayInput interface {
	pulumi.Input

	ToGetRedisComponentArrayOutput() GetRedisComponentArrayOutput
	ToGetRedisComponentArrayOutputWithContext(context.Context) GetRedisComponentArrayOutput
}

type GetRedisComponentArray []GetRedisComponentInput

func (GetRedisComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisComponent)(nil)).Elem()
}

func (i GetRedisComponentArray) ToGetRedisComponentArrayOutput() GetRedisComponentArrayOutput {
	return i.ToGetRedisComponentArrayOutputWithContext(context.Background())
}

func (i GetRedisComponentArray) ToGetRedisComponentArrayOutputWithContext(ctx context.Context) GetRedisComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisComponentArrayOutput)
}

type GetRedisComponentOutput struct{ *pulumi.OutputState }

func (GetRedisComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisComponent)(nil)).Elem()
}

func (o GetRedisComponentOutput) ToGetRedisComponentOutput() GetRedisComponentOutput {
	return o
}

func (o GetRedisComponentOutput) ToGetRedisComponentOutputWithContext(ctx context.Context) GetRedisComponentOutput {
	return o
}

func (o GetRedisComponentOutput) Component() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisComponent) string { return v.Component }).(pulumi.StringOutput)
}

// (Required) Hostname or IP address of the server where to migrate data from
func (o GetRedisComponentOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisComponent) string { return v.Host }).(pulumi.StringOutput)
}

func (o GetRedisComponentOutput) KafkaAuthenticationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisComponent) string { return v.KafkaAuthenticationMethod }).(pulumi.StringOutput)
}

// (Required) Port number of the server where to migrate data from
func (o GetRedisComponentOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetRedisComponent) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetRedisComponentOutput) Route() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisComponent) string { return v.Route }).(pulumi.StringOutput)
}

// The server where to migrate data from is secured with SSL
func (o GetRedisComponentOutput) Ssl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRedisComponent) bool { return v.Ssl }).(pulumi.BoolOutput)
}

func (o GetRedisComponentOutput) Usage() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisComponent) string { return v.Usage }).(pulumi.StringOutput)
}

type GetRedisComponentArrayOutput struct{ *pulumi.OutputState }

func (GetRedisComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisComponent)(nil)).Elem()
}

func (o GetRedisComponentArrayOutput) ToGetRedisComponentArrayOutput() GetRedisComponentArrayOutput {
	return o
}

func (o GetRedisComponentArrayOutput) ToGetRedisComponentArrayOutputWithContext(ctx context.Context) GetRedisComponentArrayOutput {
	return o
}

func (o GetRedisComponentArrayOutput) Index(i pulumi.IntInput) GetRedisComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRedisComponent {
		return vs[0].([]GetRedisComponent)[vs[1].(int)]
	}).(GetRedisComponentOutput)
}

type GetRedisRedis struct {
}

// GetRedisRedisInput is an input type that accepts GetRedisRedisArgs and GetRedisRedisOutput values.
// You can construct a concrete instance of `GetRedisRedisInput` via:
//
//          GetRedisRedisArgs{...}
type GetRedisRedisInput interface {
	pulumi.Input

	ToGetRedisRedisOutput() GetRedisRedisOutput
	ToGetRedisRedisOutputWithContext(context.Context) GetRedisRedisOutput
}

type GetRedisRedisArgs struct {
}

func (GetRedisRedisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisRedis)(nil)).Elem()
}

func (i GetRedisRedisArgs) ToGetRedisRedisOutput() GetRedisRedisOutput {
	return i.ToGetRedisRedisOutputWithContext(context.Background())
}

func (i GetRedisRedisArgs) ToGetRedisRedisOutputWithContext(ctx context.Context) GetRedisRedisOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisRedisOutput)
}

type GetRedisRedisOutput struct{ *pulumi.OutputState }

func (GetRedisRedisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisRedis)(nil)).Elem()
}

func (o GetRedisRedisOutput) ToGetRedisRedisOutput() GetRedisRedisOutput {
	return o
}

func (o GetRedisRedisOutput) ToGetRedisRedisOutputWithContext(ctx context.Context) GetRedisRedisOutput {
	return o
}

type GetRedisRedisUserConfig struct {
	// Allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters []string `pulumi:"ipFilters"`
	// Migrate data from existing server
	Migration *GetRedisRedisUserConfigMigration `pulumi:"migration"`
	// Allow access to selected service ports from private networks
	PrivateAccess *GetRedisRedisUserConfigPrivateAccess `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess *GetRedisRedisUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom *string `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet
	PublicAccess *GetRedisRedisUserConfigPublicAccess `pulumi:"publicAccess"`
	// Name of the basebackup to restore in forked service
	RecoveryBasebackupName *string `pulumi:"recoveryBasebackupName"`
	// Redis IO thread count
	// * `redisLfuDecayTime"` - LFU maxmemory-policy counter decay time in minutes
	RedisIoThreads    *string `pulumi:"redisIoThreads"`
	RedisLfuDecayTime *string `pulumi:"redisLfuDecayTime"`
	// Counter logarithm factor for volatile-lfu and allkeys-lfu
	// maxmemory-policies
	RedisLfuLogFactor *string `pulumi:"redisLfuLogFactor"`
	// Redis maxmemory-policy
	RedisMaxmemoryPolicy *string `pulumi:"redisMaxmemoryPolicy"`
	// Set notify-keyspace-events option
	RedisNotifyKeyspaceEvents *string `pulumi:"redisNotifyKeyspaceEvents"`
	// Require SSL to access Redis
	RedisSsl *string `pulumi:"redisSsl"`
	// Redis idle connection timeout
	// * `serviceToForkFrom"` - Name of another service to fork from. This has effect only
	//   when a new service is being created.
	RedisTimeout      *string `pulumi:"redisTimeout"`
	ServiceToForkFrom *string `pulumi:"serviceToForkFrom"`
}

// GetRedisRedisUserConfigInput is an input type that accepts GetRedisRedisUserConfigArgs and GetRedisRedisUserConfigOutput values.
// You can construct a concrete instance of `GetRedisRedisUserConfigInput` via:
//
//          GetRedisRedisUserConfigArgs{...}
type GetRedisRedisUserConfigInput interface {
	pulumi.Input

	ToGetRedisRedisUserConfigOutput() GetRedisRedisUserConfigOutput
	ToGetRedisRedisUserConfigOutputWithContext(context.Context) GetRedisRedisUserConfigOutput
}

type GetRedisRedisUserConfigArgs struct {
	// Allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// Migrate data from existing server
	Migration GetRedisRedisUserConfigMigrationPtrInput `pulumi:"migration"`
	// Allow access to selected service ports from private networks
	PrivateAccess GetRedisRedisUserConfigPrivateAccessPtrInput `pulumi:"privateAccess"`
	// Allow access to selected service components through Privatelink
	PrivatelinkAccess GetRedisRedisUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	// Name of another project to fork a service from. This has
	// effect only when a new service is being created.
	ProjectToForkFrom pulumi.StringPtrInput `pulumi:"projectToForkFrom"`
	// Allow access to selected service ports from the public Internet
	PublicAccess GetRedisRedisUserConfigPublicAccessPtrInput `pulumi:"publicAccess"`
	// Name of the basebackup to restore in forked service
	RecoveryBasebackupName pulumi.StringPtrInput `pulumi:"recoveryBasebackupName"`
	// Redis IO thread count
	// * `redisLfuDecayTime"` - LFU maxmemory-policy counter decay time in minutes
	RedisIoThreads    pulumi.StringPtrInput `pulumi:"redisIoThreads"`
	RedisLfuDecayTime pulumi.StringPtrInput `pulumi:"redisLfuDecayTime"`
	// Counter logarithm factor for volatile-lfu and allkeys-lfu
	// maxmemory-policies
	RedisLfuLogFactor pulumi.StringPtrInput `pulumi:"redisLfuLogFactor"`
	// Redis maxmemory-policy
	RedisMaxmemoryPolicy pulumi.StringPtrInput `pulumi:"redisMaxmemoryPolicy"`
	// Set notify-keyspace-events option
	RedisNotifyKeyspaceEvents pulumi.StringPtrInput `pulumi:"redisNotifyKeyspaceEvents"`
	// Require SSL to access Redis
	RedisSsl pulumi.StringPtrInput `pulumi:"redisSsl"`
	// Redis idle connection timeout
	// * `serviceToForkFrom"` - Name of another service to fork from. This has effect only
	//   when a new service is being created.
	RedisTimeout      pulumi.StringPtrInput `pulumi:"redisTimeout"`
	ServiceToForkFrom pulumi.StringPtrInput `pulumi:"serviceToForkFrom"`
}

func (GetRedisRedisUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisRedisUserConfig)(nil)).Elem()
}

func (i GetRedisRedisUserConfigArgs) ToGetRedisRedisUserConfigOutput() GetRedisRedisUserConfigOutput {
	return i.ToGetRedisRedisUserConfigOutputWithContext(context.Background())
}

func (i GetRedisRedisUserConfigArgs) ToGetRedisRedisUserConfigOutputWithContext(ctx context.Context) GetRedisRedisUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisRedisUserConfigOutput)
}

type GetRedisRedisUserConfigOutput struct{ *pulumi.OutputState }

func (GetRedisRedisUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisRedisUserConfig)(nil)).Elem()
}

func (o GetRedisRedisUserConfigOutput) ToGetRedisRedisUserConfigOutput() GetRedisRedisUserConfigOutput {
	return o
}

func (o GetRedisRedisUserConfigOutput) ToGetRedisRedisUserConfigOutputWithContext(ctx context.Context) GetRedisRedisUserConfigOutput {
	return o
}

// Allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
func (o GetRedisRedisUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// Migrate data from existing server
func (o GetRedisRedisUserConfigOutput) Migration() GetRedisRedisUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfig) *GetRedisRedisUserConfigMigration { return v.Migration }).(GetRedisRedisUserConfigMigrationPtrOutput)
}

// Allow access to selected service ports from private networks
func (o GetRedisRedisUserConfigOutput) PrivateAccess() GetRedisRedisUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfig) *GetRedisRedisUserConfigPrivateAccess { return v.PrivateAccess }).(GetRedisRedisUserConfigPrivateAccessPtrOutput)
}

// Allow access to selected service components through Privatelink
func (o GetRedisRedisUserConfigOutput) PrivatelinkAccess() GetRedisRedisUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfig) *GetRedisRedisUserConfigPrivatelinkAccess { return v.PrivatelinkAccess }).(GetRedisRedisUserConfigPrivatelinkAccessPtrOutput)
}

// Name of another project to fork a service from. This has
// effect only when a new service is being created.
func (o GetRedisRedisUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

// Allow access to selected service ports from the public Internet
func (o GetRedisRedisUserConfigOutput) PublicAccess() GetRedisRedisUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfig) *GetRedisRedisUserConfigPublicAccess { return v.PublicAccess }).(GetRedisRedisUserConfigPublicAccessPtrOutput)
}

// Name of the basebackup to restore in forked service
func (o GetRedisRedisUserConfigOutput) RecoveryBasebackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfig) *string { return v.RecoveryBasebackupName }).(pulumi.StringPtrOutput)
}

// Redis IO thread count
// * `redisLfuDecayTime"` - LFU maxmemory-policy counter decay time in minutes
func (o GetRedisRedisUserConfigOutput) RedisIoThreads() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfig) *string { return v.RedisIoThreads }).(pulumi.StringPtrOutput)
}

func (o GetRedisRedisUserConfigOutput) RedisLfuDecayTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfig) *string { return v.RedisLfuDecayTime }).(pulumi.StringPtrOutput)
}

// Counter logarithm factor for volatile-lfu and allkeys-lfu
// maxmemory-policies
func (o GetRedisRedisUserConfigOutput) RedisLfuLogFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfig) *string { return v.RedisLfuLogFactor }).(pulumi.StringPtrOutput)
}

// Redis maxmemory-policy
func (o GetRedisRedisUserConfigOutput) RedisMaxmemoryPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfig) *string { return v.RedisMaxmemoryPolicy }).(pulumi.StringPtrOutput)
}

// Set notify-keyspace-events option
func (o GetRedisRedisUserConfigOutput) RedisNotifyKeyspaceEvents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfig) *string { return v.RedisNotifyKeyspaceEvents }).(pulumi.StringPtrOutput)
}

// Require SSL to access Redis
func (o GetRedisRedisUserConfigOutput) RedisSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfig) *string { return v.RedisSsl }).(pulumi.StringPtrOutput)
}

// Redis idle connection timeout
// * `serviceToForkFrom"` - Name of another service to fork from. This has effect only
//   when a new service is being created.
func (o GetRedisRedisUserConfigOutput) RedisTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfig) *string { return v.RedisTimeout }).(pulumi.StringPtrOutput)
}

func (o GetRedisRedisUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

type GetRedisRedisUserConfigMigration struct {
	// Database name for bootstrapping the initial connection
	Dbname *string `pulumi:"dbname"`
	// (Required) Hostname or IP address of the server where to migrate data from
	Host *string `pulumi:"host"`
	// Comma-separated list of databases, which should be ignored during
	// migration (supported by MySQL only at the moment)
	IgnoreDbs *string `pulumi:"ignoreDbs"`
	// Password for authentication with the server where to migrate data from
	Password *string `pulumi:"password"`
	// (Required) Port number of the server where to migrate data from
	Port *string `pulumi:"port"`
	// The server where to migrate data from is secured with SSL
	Ssl *string `pulumi:"ssl"`
	// User name for authentication with the server where to migrate data from
	Username *string `pulumi:"username"`
}

// GetRedisRedisUserConfigMigrationInput is an input type that accepts GetRedisRedisUserConfigMigrationArgs and GetRedisRedisUserConfigMigrationOutput values.
// You can construct a concrete instance of `GetRedisRedisUserConfigMigrationInput` via:
//
//          GetRedisRedisUserConfigMigrationArgs{...}
type GetRedisRedisUserConfigMigrationInput interface {
	pulumi.Input

	ToGetRedisRedisUserConfigMigrationOutput() GetRedisRedisUserConfigMigrationOutput
	ToGetRedisRedisUserConfigMigrationOutputWithContext(context.Context) GetRedisRedisUserConfigMigrationOutput
}

type GetRedisRedisUserConfigMigrationArgs struct {
	// Database name for bootstrapping the initial connection
	Dbname pulumi.StringPtrInput `pulumi:"dbname"`
	// (Required) Hostname or IP address of the server where to migrate data from
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Comma-separated list of databases, which should be ignored during
	// migration (supported by MySQL only at the moment)
	IgnoreDbs pulumi.StringPtrInput `pulumi:"ignoreDbs"`
	// Password for authentication with the server where to migrate data from
	Password pulumi.StringPtrInput `pulumi:"password"`
	// (Required) Port number of the server where to migrate data from
	Port pulumi.StringPtrInput `pulumi:"port"`
	// The server where to migrate data from is secured with SSL
	Ssl pulumi.StringPtrInput `pulumi:"ssl"`
	// User name for authentication with the server where to migrate data from
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (GetRedisRedisUserConfigMigrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisRedisUserConfigMigration)(nil)).Elem()
}

func (i GetRedisRedisUserConfigMigrationArgs) ToGetRedisRedisUserConfigMigrationOutput() GetRedisRedisUserConfigMigrationOutput {
	return i.ToGetRedisRedisUserConfigMigrationOutputWithContext(context.Background())
}

func (i GetRedisRedisUserConfigMigrationArgs) ToGetRedisRedisUserConfigMigrationOutputWithContext(ctx context.Context) GetRedisRedisUserConfigMigrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisRedisUserConfigMigrationOutput)
}

func (i GetRedisRedisUserConfigMigrationArgs) ToGetRedisRedisUserConfigMigrationPtrOutput() GetRedisRedisUserConfigMigrationPtrOutput {
	return i.ToGetRedisRedisUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (i GetRedisRedisUserConfigMigrationArgs) ToGetRedisRedisUserConfigMigrationPtrOutputWithContext(ctx context.Context) GetRedisRedisUserConfigMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisRedisUserConfigMigrationOutput).ToGetRedisRedisUserConfigMigrationPtrOutputWithContext(ctx)
}

// GetRedisRedisUserConfigMigrationPtrInput is an input type that accepts GetRedisRedisUserConfigMigrationArgs, GetRedisRedisUserConfigMigrationPtr and GetRedisRedisUserConfigMigrationPtrOutput values.
// You can construct a concrete instance of `GetRedisRedisUserConfigMigrationPtrInput` via:
//
//          GetRedisRedisUserConfigMigrationArgs{...}
//
//  or:
//
//          nil
type GetRedisRedisUserConfigMigrationPtrInput interface {
	pulumi.Input

	ToGetRedisRedisUserConfigMigrationPtrOutput() GetRedisRedisUserConfigMigrationPtrOutput
	ToGetRedisRedisUserConfigMigrationPtrOutputWithContext(context.Context) GetRedisRedisUserConfigMigrationPtrOutput
}

type getRedisRedisUserConfigMigrationPtrType GetRedisRedisUserConfigMigrationArgs

func GetRedisRedisUserConfigMigrationPtr(v *GetRedisRedisUserConfigMigrationArgs) GetRedisRedisUserConfigMigrationPtrInput {
	return (*getRedisRedisUserConfigMigrationPtrType)(v)
}

func (*getRedisRedisUserConfigMigrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetRedisRedisUserConfigMigration)(nil)).Elem()
}

func (i *getRedisRedisUserConfigMigrationPtrType) ToGetRedisRedisUserConfigMigrationPtrOutput() GetRedisRedisUserConfigMigrationPtrOutput {
	return i.ToGetRedisRedisUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (i *getRedisRedisUserConfigMigrationPtrType) ToGetRedisRedisUserConfigMigrationPtrOutputWithContext(ctx context.Context) GetRedisRedisUserConfigMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisRedisUserConfigMigrationPtrOutput)
}

type GetRedisRedisUserConfigMigrationOutput struct{ *pulumi.OutputState }

func (GetRedisRedisUserConfigMigrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisRedisUserConfigMigration)(nil)).Elem()
}

func (o GetRedisRedisUserConfigMigrationOutput) ToGetRedisRedisUserConfigMigrationOutput() GetRedisRedisUserConfigMigrationOutput {
	return o
}

func (o GetRedisRedisUserConfigMigrationOutput) ToGetRedisRedisUserConfigMigrationOutputWithContext(ctx context.Context) GetRedisRedisUserConfigMigrationOutput {
	return o
}

func (o GetRedisRedisUserConfigMigrationOutput) ToGetRedisRedisUserConfigMigrationPtrOutput() GetRedisRedisUserConfigMigrationPtrOutput {
	return o.ToGetRedisRedisUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (o GetRedisRedisUserConfigMigrationOutput) ToGetRedisRedisUserConfigMigrationPtrOutputWithContext(ctx context.Context) GetRedisRedisUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfigMigration) *GetRedisRedisUserConfigMigration {
		return &v
	}).(GetRedisRedisUserConfigMigrationPtrOutput)
}

// Database name for bootstrapping the initial connection
func (o GetRedisRedisUserConfigMigrationOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfigMigration) *string { return v.Dbname }).(pulumi.StringPtrOutput)
}

// (Required) Hostname or IP address of the server where to migrate data from
func (o GetRedisRedisUserConfigMigrationOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfigMigration) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Comma-separated list of databases, which should be ignored during
// migration (supported by MySQL only at the moment)
func (o GetRedisRedisUserConfigMigrationOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfigMigration) *string { return v.IgnoreDbs }).(pulumi.StringPtrOutput)
}

// Password for authentication with the server where to migrate data from
func (o GetRedisRedisUserConfigMigrationOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfigMigration) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// (Required) Port number of the server where to migrate data from
func (o GetRedisRedisUserConfigMigrationOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfigMigration) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The server where to migrate data from is secured with SSL
func (o GetRedisRedisUserConfigMigrationOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfigMigration) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

// User name for authentication with the server where to migrate data from
func (o GetRedisRedisUserConfigMigrationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfigMigration) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GetRedisRedisUserConfigMigrationPtrOutput struct{ *pulumi.OutputState }

func (GetRedisRedisUserConfigMigrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetRedisRedisUserConfigMigration)(nil)).Elem()
}

func (o GetRedisRedisUserConfigMigrationPtrOutput) ToGetRedisRedisUserConfigMigrationPtrOutput() GetRedisRedisUserConfigMigrationPtrOutput {
	return o
}

func (o GetRedisRedisUserConfigMigrationPtrOutput) ToGetRedisRedisUserConfigMigrationPtrOutputWithContext(ctx context.Context) GetRedisRedisUserConfigMigrationPtrOutput {
	return o
}

func (o GetRedisRedisUserConfigMigrationPtrOutput) Elem() GetRedisRedisUserConfigMigrationOutput {
	return o.ApplyT(func(v *GetRedisRedisUserConfigMigration) GetRedisRedisUserConfigMigration { return *v }).(GetRedisRedisUserConfigMigrationOutput)
}

// Database name for bootstrapping the initial connection
func (o GetRedisRedisUserConfigMigrationPtrOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetRedisRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Dbname
	}).(pulumi.StringPtrOutput)
}

// (Required) Hostname or IP address of the server where to migrate data from
func (o GetRedisRedisUserConfigMigrationPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetRedisRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Comma-separated list of databases, which should be ignored during
// migration (supported by MySQL only at the moment)
func (o GetRedisRedisUserConfigMigrationPtrOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetRedisRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.IgnoreDbs
	}).(pulumi.StringPtrOutput)
}

// Password for authentication with the server where to migrate data from
func (o GetRedisRedisUserConfigMigrationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetRedisRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// (Required) Port number of the server where to migrate data from
func (o GetRedisRedisUserConfigMigrationPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetRedisRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// The server where to migrate data from is secured with SSL
func (o GetRedisRedisUserConfigMigrationPtrOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetRedisRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Ssl
	}).(pulumi.StringPtrOutput)
}

// User name for authentication with the server where to migrate data from
func (o GetRedisRedisUserConfigMigrationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetRedisRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type GetRedisRedisUserConfigPrivateAccess struct {
	// Allow clients to connect to prometheus from the public internet
	// for service nodes that are in a project VPC or another type of private network
	Prometheus *string `pulumi:"prometheus"`
	// Redis specific server provided values.
	Redis *string `pulumi:"redis"`
}

// GetRedisRedisUserConfigPrivateAccessInput is an input type that accepts GetRedisRedisUserConfigPrivateAccessArgs and GetRedisRedisUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `GetRedisRedisUserConfigPrivateAccessInput` via:
//
//          GetRedisRedisUserConfigPrivateAccessArgs{...}
type GetRedisRedisUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToGetRedisRedisUserConfigPrivateAccessOutput() GetRedisRedisUserConfigPrivateAccessOutput
	ToGetRedisRedisUserConfigPrivateAccessOutputWithContext(context.Context) GetRedisRedisUserConfigPrivateAccessOutput
}

type GetRedisRedisUserConfigPrivateAccessArgs struct {
	// Allow clients to connect to prometheus from the public internet
	// for service nodes that are in a project VPC or another type of private network
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
	// Redis specific server provided values.
	Redis pulumi.StringPtrInput `pulumi:"redis"`
}

func (GetRedisRedisUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisRedisUserConfigPrivateAccess)(nil)).Elem()
}

func (i GetRedisRedisUserConfigPrivateAccessArgs) ToGetRedisRedisUserConfigPrivateAccessOutput() GetRedisRedisUserConfigPrivateAccessOutput {
	return i.ToGetRedisRedisUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i GetRedisRedisUserConfigPrivateAccessArgs) ToGetRedisRedisUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetRedisRedisUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisRedisUserConfigPrivateAccessOutput)
}

func (i GetRedisRedisUserConfigPrivateAccessArgs) ToGetRedisRedisUserConfigPrivateAccessPtrOutput() GetRedisRedisUserConfigPrivateAccessPtrOutput {
	return i.ToGetRedisRedisUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i GetRedisRedisUserConfigPrivateAccessArgs) ToGetRedisRedisUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetRedisRedisUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisRedisUserConfigPrivateAccessOutput).ToGetRedisRedisUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// GetRedisRedisUserConfigPrivateAccessPtrInput is an input type that accepts GetRedisRedisUserConfigPrivateAccessArgs, GetRedisRedisUserConfigPrivateAccessPtr and GetRedisRedisUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `GetRedisRedisUserConfigPrivateAccessPtrInput` via:
//
//          GetRedisRedisUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type GetRedisRedisUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToGetRedisRedisUserConfigPrivateAccessPtrOutput() GetRedisRedisUserConfigPrivateAccessPtrOutput
	ToGetRedisRedisUserConfigPrivateAccessPtrOutputWithContext(context.Context) GetRedisRedisUserConfigPrivateAccessPtrOutput
}

type getRedisRedisUserConfigPrivateAccessPtrType GetRedisRedisUserConfigPrivateAccessArgs

func GetRedisRedisUserConfigPrivateAccessPtr(v *GetRedisRedisUserConfigPrivateAccessArgs) GetRedisRedisUserConfigPrivateAccessPtrInput {
	return (*getRedisRedisUserConfigPrivateAccessPtrType)(v)
}

func (*getRedisRedisUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetRedisRedisUserConfigPrivateAccess)(nil)).Elem()
}

func (i *getRedisRedisUserConfigPrivateAccessPtrType) ToGetRedisRedisUserConfigPrivateAccessPtrOutput() GetRedisRedisUserConfigPrivateAccessPtrOutput {
	return i.ToGetRedisRedisUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *getRedisRedisUserConfigPrivateAccessPtrType) ToGetRedisRedisUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetRedisRedisUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisRedisUserConfigPrivateAccessPtrOutput)
}

type GetRedisRedisUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (GetRedisRedisUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisRedisUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetRedisRedisUserConfigPrivateAccessOutput) ToGetRedisRedisUserConfigPrivateAccessOutput() GetRedisRedisUserConfigPrivateAccessOutput {
	return o
}

func (o GetRedisRedisUserConfigPrivateAccessOutput) ToGetRedisRedisUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetRedisRedisUserConfigPrivateAccessOutput {
	return o
}

func (o GetRedisRedisUserConfigPrivateAccessOutput) ToGetRedisRedisUserConfigPrivateAccessPtrOutput() GetRedisRedisUserConfigPrivateAccessPtrOutput {
	return o.ToGetRedisRedisUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o GetRedisRedisUserConfigPrivateAccessOutput) ToGetRedisRedisUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetRedisRedisUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfigPrivateAccess) *GetRedisRedisUserConfigPrivateAccess {
		return &v
	}).(GetRedisRedisUserConfigPrivateAccessPtrOutput)
}

// Allow clients to connect to prometheus from the public internet
// for service nodes that are in a project VPC or another type of private network
func (o GetRedisRedisUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

// Redis specific server provided values.
func (o GetRedisRedisUserConfigPrivateAccessOutput) Redis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfigPrivateAccess) *string { return v.Redis }).(pulumi.StringPtrOutput)
}

type GetRedisRedisUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (GetRedisRedisUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetRedisRedisUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetRedisRedisUserConfigPrivateAccessPtrOutput) ToGetRedisRedisUserConfigPrivateAccessPtrOutput() GetRedisRedisUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetRedisRedisUserConfigPrivateAccessPtrOutput) ToGetRedisRedisUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetRedisRedisUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetRedisRedisUserConfigPrivateAccessPtrOutput) Elem() GetRedisRedisUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *GetRedisRedisUserConfigPrivateAccess) GetRedisRedisUserConfigPrivateAccess { return *v }).(GetRedisRedisUserConfigPrivateAccessOutput)
}

// Allow clients to connect to prometheus from the public internet
// for service nodes that are in a project VPC or another type of private network
func (o GetRedisRedisUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetRedisRedisUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

// Redis specific server provided values.
func (o GetRedisRedisUserConfigPrivateAccessPtrOutput) Redis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetRedisRedisUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Redis
	}).(pulumi.StringPtrOutput)
}

type GetRedisRedisUserConfigPrivatelinkAccess struct {
	// Redis specific server provided values.
	Redis *string `pulumi:"redis"`
}

// GetRedisRedisUserConfigPrivatelinkAccessInput is an input type that accepts GetRedisRedisUserConfigPrivatelinkAccessArgs and GetRedisRedisUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `GetRedisRedisUserConfigPrivatelinkAccessInput` via:
//
//          GetRedisRedisUserConfigPrivatelinkAccessArgs{...}
type GetRedisRedisUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToGetRedisRedisUserConfigPrivatelinkAccessOutput() GetRedisRedisUserConfigPrivatelinkAccessOutput
	ToGetRedisRedisUserConfigPrivatelinkAccessOutputWithContext(context.Context) GetRedisRedisUserConfigPrivatelinkAccessOutput
}

type GetRedisRedisUserConfigPrivatelinkAccessArgs struct {
	// Redis specific server provided values.
	Redis pulumi.StringPtrInput `pulumi:"redis"`
}

func (GetRedisRedisUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisRedisUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i GetRedisRedisUserConfigPrivatelinkAccessArgs) ToGetRedisRedisUserConfigPrivatelinkAccessOutput() GetRedisRedisUserConfigPrivatelinkAccessOutput {
	return i.ToGetRedisRedisUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i GetRedisRedisUserConfigPrivatelinkAccessArgs) ToGetRedisRedisUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetRedisRedisUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisRedisUserConfigPrivatelinkAccessOutput)
}

func (i GetRedisRedisUserConfigPrivatelinkAccessArgs) ToGetRedisRedisUserConfigPrivatelinkAccessPtrOutput() GetRedisRedisUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetRedisRedisUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i GetRedisRedisUserConfigPrivatelinkAccessArgs) ToGetRedisRedisUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetRedisRedisUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisRedisUserConfigPrivatelinkAccessOutput).ToGetRedisRedisUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// GetRedisRedisUserConfigPrivatelinkAccessPtrInput is an input type that accepts GetRedisRedisUserConfigPrivatelinkAccessArgs, GetRedisRedisUserConfigPrivatelinkAccessPtr and GetRedisRedisUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `GetRedisRedisUserConfigPrivatelinkAccessPtrInput` via:
//
//          GetRedisRedisUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type GetRedisRedisUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToGetRedisRedisUserConfigPrivatelinkAccessPtrOutput() GetRedisRedisUserConfigPrivatelinkAccessPtrOutput
	ToGetRedisRedisUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) GetRedisRedisUserConfigPrivatelinkAccessPtrOutput
}

type getRedisRedisUserConfigPrivatelinkAccessPtrType GetRedisRedisUserConfigPrivatelinkAccessArgs

func GetRedisRedisUserConfigPrivatelinkAccessPtr(v *GetRedisRedisUserConfigPrivatelinkAccessArgs) GetRedisRedisUserConfigPrivatelinkAccessPtrInput {
	return (*getRedisRedisUserConfigPrivatelinkAccessPtrType)(v)
}

func (*getRedisRedisUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetRedisRedisUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *getRedisRedisUserConfigPrivatelinkAccessPtrType) ToGetRedisRedisUserConfigPrivatelinkAccessPtrOutput() GetRedisRedisUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetRedisRedisUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *getRedisRedisUserConfigPrivatelinkAccessPtrType) ToGetRedisRedisUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetRedisRedisUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisRedisUserConfigPrivatelinkAccessPtrOutput)
}

type GetRedisRedisUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (GetRedisRedisUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisRedisUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetRedisRedisUserConfigPrivatelinkAccessOutput) ToGetRedisRedisUserConfigPrivatelinkAccessOutput() GetRedisRedisUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetRedisRedisUserConfigPrivatelinkAccessOutput) ToGetRedisRedisUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetRedisRedisUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetRedisRedisUserConfigPrivatelinkAccessOutput) ToGetRedisRedisUserConfigPrivatelinkAccessPtrOutput() GetRedisRedisUserConfigPrivatelinkAccessPtrOutput {
	return o.ToGetRedisRedisUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o GetRedisRedisUserConfigPrivatelinkAccessOutput) ToGetRedisRedisUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetRedisRedisUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfigPrivatelinkAccess) *GetRedisRedisUserConfigPrivatelinkAccess {
		return &v
	}).(GetRedisRedisUserConfigPrivatelinkAccessPtrOutput)
}

// Redis specific server provided values.
func (o GetRedisRedisUserConfigPrivatelinkAccessOutput) Redis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfigPrivatelinkAccess) *string { return v.Redis }).(pulumi.StringPtrOutput)
}

type GetRedisRedisUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (GetRedisRedisUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetRedisRedisUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetRedisRedisUserConfigPrivatelinkAccessPtrOutput) ToGetRedisRedisUserConfigPrivatelinkAccessPtrOutput() GetRedisRedisUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetRedisRedisUserConfigPrivatelinkAccessPtrOutput) ToGetRedisRedisUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetRedisRedisUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetRedisRedisUserConfigPrivatelinkAccessPtrOutput) Elem() GetRedisRedisUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *GetRedisRedisUserConfigPrivatelinkAccess) GetRedisRedisUserConfigPrivatelinkAccess { return *v }).(GetRedisRedisUserConfigPrivatelinkAccessOutput)
}

// Redis specific server provided values.
func (o GetRedisRedisUserConfigPrivatelinkAccessPtrOutput) Redis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetRedisRedisUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Redis
	}).(pulumi.StringPtrOutput)
}

type GetRedisRedisUserConfigPublicAccess struct {
	// Allow clients to connect to prometheus from the public internet
	// for service nodes that are in a project VPC or another type of private network
	Prometheus *string `pulumi:"prometheus"`
	// Redis specific server provided values.
	Redis *string `pulumi:"redis"`
}

// GetRedisRedisUserConfigPublicAccessInput is an input type that accepts GetRedisRedisUserConfigPublicAccessArgs and GetRedisRedisUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `GetRedisRedisUserConfigPublicAccessInput` via:
//
//          GetRedisRedisUserConfigPublicAccessArgs{...}
type GetRedisRedisUserConfigPublicAccessInput interface {
	pulumi.Input

	ToGetRedisRedisUserConfigPublicAccessOutput() GetRedisRedisUserConfigPublicAccessOutput
	ToGetRedisRedisUserConfigPublicAccessOutputWithContext(context.Context) GetRedisRedisUserConfigPublicAccessOutput
}

type GetRedisRedisUserConfigPublicAccessArgs struct {
	// Allow clients to connect to prometheus from the public internet
	// for service nodes that are in a project VPC or another type of private network
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
	// Redis specific server provided values.
	Redis pulumi.StringPtrInput `pulumi:"redis"`
}

func (GetRedisRedisUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisRedisUserConfigPublicAccess)(nil)).Elem()
}

func (i GetRedisRedisUserConfigPublicAccessArgs) ToGetRedisRedisUserConfigPublicAccessOutput() GetRedisRedisUserConfigPublicAccessOutput {
	return i.ToGetRedisRedisUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i GetRedisRedisUserConfigPublicAccessArgs) ToGetRedisRedisUserConfigPublicAccessOutputWithContext(ctx context.Context) GetRedisRedisUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisRedisUserConfigPublicAccessOutput)
}

func (i GetRedisRedisUserConfigPublicAccessArgs) ToGetRedisRedisUserConfigPublicAccessPtrOutput() GetRedisRedisUserConfigPublicAccessPtrOutput {
	return i.ToGetRedisRedisUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i GetRedisRedisUserConfigPublicAccessArgs) ToGetRedisRedisUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetRedisRedisUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisRedisUserConfigPublicAccessOutput).ToGetRedisRedisUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// GetRedisRedisUserConfigPublicAccessPtrInput is an input type that accepts GetRedisRedisUserConfigPublicAccessArgs, GetRedisRedisUserConfigPublicAccessPtr and GetRedisRedisUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `GetRedisRedisUserConfigPublicAccessPtrInput` via:
//
//          GetRedisRedisUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type GetRedisRedisUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToGetRedisRedisUserConfigPublicAccessPtrOutput() GetRedisRedisUserConfigPublicAccessPtrOutput
	ToGetRedisRedisUserConfigPublicAccessPtrOutputWithContext(context.Context) GetRedisRedisUserConfigPublicAccessPtrOutput
}

type getRedisRedisUserConfigPublicAccessPtrType GetRedisRedisUserConfigPublicAccessArgs

func GetRedisRedisUserConfigPublicAccessPtr(v *GetRedisRedisUserConfigPublicAccessArgs) GetRedisRedisUserConfigPublicAccessPtrInput {
	return (*getRedisRedisUserConfigPublicAccessPtrType)(v)
}

func (*getRedisRedisUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetRedisRedisUserConfigPublicAccess)(nil)).Elem()
}

func (i *getRedisRedisUserConfigPublicAccessPtrType) ToGetRedisRedisUserConfigPublicAccessPtrOutput() GetRedisRedisUserConfigPublicAccessPtrOutput {
	return i.ToGetRedisRedisUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *getRedisRedisUserConfigPublicAccessPtrType) ToGetRedisRedisUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetRedisRedisUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisRedisUserConfigPublicAccessPtrOutput)
}

type GetRedisRedisUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (GetRedisRedisUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisRedisUserConfigPublicAccess)(nil)).Elem()
}

func (o GetRedisRedisUserConfigPublicAccessOutput) ToGetRedisRedisUserConfigPublicAccessOutput() GetRedisRedisUserConfigPublicAccessOutput {
	return o
}

func (o GetRedisRedisUserConfigPublicAccessOutput) ToGetRedisRedisUserConfigPublicAccessOutputWithContext(ctx context.Context) GetRedisRedisUserConfigPublicAccessOutput {
	return o
}

func (o GetRedisRedisUserConfigPublicAccessOutput) ToGetRedisRedisUserConfigPublicAccessPtrOutput() GetRedisRedisUserConfigPublicAccessPtrOutput {
	return o.ToGetRedisRedisUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o GetRedisRedisUserConfigPublicAccessOutput) ToGetRedisRedisUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetRedisRedisUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfigPublicAccess) *GetRedisRedisUserConfigPublicAccess {
		return &v
	}).(GetRedisRedisUserConfigPublicAccessPtrOutput)
}

// Allow clients to connect to prometheus from the public internet
// for service nodes that are in a project VPC or another type of private network
func (o GetRedisRedisUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

// Redis specific server provided values.
func (o GetRedisRedisUserConfigPublicAccessOutput) Redis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRedisRedisUserConfigPublicAccess) *string { return v.Redis }).(pulumi.StringPtrOutput)
}

type GetRedisRedisUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (GetRedisRedisUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetRedisRedisUserConfigPublicAccess)(nil)).Elem()
}

func (o GetRedisRedisUserConfigPublicAccessPtrOutput) ToGetRedisRedisUserConfigPublicAccessPtrOutput() GetRedisRedisUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetRedisRedisUserConfigPublicAccessPtrOutput) ToGetRedisRedisUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetRedisRedisUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetRedisRedisUserConfigPublicAccessPtrOutput) Elem() GetRedisRedisUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *GetRedisRedisUserConfigPublicAccess) GetRedisRedisUserConfigPublicAccess { return *v }).(GetRedisRedisUserConfigPublicAccessOutput)
}

// Allow clients to connect to prometheus from the public internet
// for service nodes that are in a project VPC or another type of private network
func (o GetRedisRedisUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetRedisRedisUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

// Redis specific server provided values.
func (o GetRedisRedisUserConfigPublicAccessPtrOutput) Redis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetRedisRedisUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Redis
	}).(pulumi.StringPtrOutput)
}

type GetRedisServiceIntegration struct {
	IntegrationType   string `pulumi:"integrationType"`
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// GetRedisServiceIntegrationInput is an input type that accepts GetRedisServiceIntegrationArgs and GetRedisServiceIntegrationOutput values.
// You can construct a concrete instance of `GetRedisServiceIntegrationInput` via:
//
//          GetRedisServiceIntegrationArgs{...}
type GetRedisServiceIntegrationInput interface {
	pulumi.Input

	ToGetRedisServiceIntegrationOutput() GetRedisServiceIntegrationOutput
	ToGetRedisServiceIntegrationOutputWithContext(context.Context) GetRedisServiceIntegrationOutput
}

type GetRedisServiceIntegrationArgs struct {
	IntegrationType   pulumi.StringInput `pulumi:"integrationType"`
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (GetRedisServiceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisServiceIntegration)(nil)).Elem()
}

func (i GetRedisServiceIntegrationArgs) ToGetRedisServiceIntegrationOutput() GetRedisServiceIntegrationOutput {
	return i.ToGetRedisServiceIntegrationOutputWithContext(context.Background())
}

func (i GetRedisServiceIntegrationArgs) ToGetRedisServiceIntegrationOutputWithContext(ctx context.Context) GetRedisServiceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisServiceIntegrationOutput)
}

// GetRedisServiceIntegrationArrayInput is an input type that accepts GetRedisServiceIntegrationArray and GetRedisServiceIntegrationArrayOutput values.
// You can construct a concrete instance of `GetRedisServiceIntegrationArrayInput` via:
//
//          GetRedisServiceIntegrationArray{ GetRedisServiceIntegrationArgs{...} }
type GetRedisServiceIntegrationArrayInput interface {
	pulumi.Input

	ToGetRedisServiceIntegrationArrayOutput() GetRedisServiceIntegrationArrayOutput
	ToGetRedisServiceIntegrationArrayOutputWithContext(context.Context) GetRedisServiceIntegrationArrayOutput
}

type GetRedisServiceIntegrationArray []GetRedisServiceIntegrationInput

func (GetRedisServiceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisServiceIntegration)(nil)).Elem()
}

func (i GetRedisServiceIntegrationArray) ToGetRedisServiceIntegrationArrayOutput() GetRedisServiceIntegrationArrayOutput {
	return i.ToGetRedisServiceIntegrationArrayOutputWithContext(context.Background())
}

func (i GetRedisServiceIntegrationArray) ToGetRedisServiceIntegrationArrayOutputWithContext(ctx context.Context) GetRedisServiceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisServiceIntegrationArrayOutput)
}

type GetRedisServiceIntegrationOutput struct{ *pulumi.OutputState }

func (GetRedisServiceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisServiceIntegration)(nil)).Elem()
}

func (o GetRedisServiceIntegrationOutput) ToGetRedisServiceIntegrationOutput() GetRedisServiceIntegrationOutput {
	return o
}

func (o GetRedisServiceIntegrationOutput) ToGetRedisServiceIntegrationOutputWithContext(ctx context.Context) GetRedisServiceIntegrationOutput {
	return o
}

func (o GetRedisServiceIntegrationOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisServiceIntegration) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o GetRedisServiceIntegrationOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisServiceIntegration) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

type GetRedisServiceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (GetRedisServiceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisServiceIntegration)(nil)).Elem()
}

func (o GetRedisServiceIntegrationArrayOutput) ToGetRedisServiceIntegrationArrayOutput() GetRedisServiceIntegrationArrayOutput {
	return o
}

func (o GetRedisServiceIntegrationArrayOutput) ToGetRedisServiceIntegrationArrayOutputWithContext(ctx context.Context) GetRedisServiceIntegrationArrayOutput {
	return o
}

func (o GetRedisServiceIntegrationArrayOutput) Index(i pulumi.IntInput) GetRedisServiceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRedisServiceIntegration {
		return vs[0].([]GetRedisServiceIntegration)[vs[1].(int)]
	}).(GetRedisServiceIntegrationOutput)
}

type GetServiceCassandra struct {
}

// GetServiceCassandraInput is an input type that accepts GetServiceCassandraArgs and GetServiceCassandraOutput values.
// You can construct a concrete instance of `GetServiceCassandraInput` via:
//
//          GetServiceCassandraArgs{...}
type GetServiceCassandraInput interface {
	pulumi.Input

	ToGetServiceCassandraOutput() GetServiceCassandraOutput
	ToGetServiceCassandraOutputWithContext(context.Context) GetServiceCassandraOutput
}

type GetServiceCassandraArgs struct {
}

func (GetServiceCassandraArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceCassandra)(nil)).Elem()
}

func (i GetServiceCassandraArgs) ToGetServiceCassandraOutput() GetServiceCassandraOutput {
	return i.ToGetServiceCassandraOutputWithContext(context.Background())
}

func (i GetServiceCassandraArgs) ToGetServiceCassandraOutputWithContext(ctx context.Context) GetServiceCassandraOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceCassandraOutput)
}

type GetServiceCassandraOutput struct{ *pulumi.OutputState }

func (GetServiceCassandraOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceCassandra)(nil)).Elem()
}

func (o GetServiceCassandraOutput) ToGetServiceCassandraOutput() GetServiceCassandraOutput {
	return o
}

func (o GetServiceCassandraOutput) ToGetServiceCassandraOutputWithContext(ctx context.Context) GetServiceCassandraOutput {
	return o
}

type GetServiceCassandraUserConfig struct {
	Cassandra            *GetServiceCassandraUserConfigCassandra     `pulumi:"cassandra"`
	IpFilters            []string                                    `pulumi:"ipFilters"`
	MigrateSstableloader *string                                     `pulumi:"migrateSstableloader"`
	PrivateAccess        *GetServiceCassandraUserConfigPrivateAccess `pulumi:"privateAccess"`
	ProjectToForkFrom    *string                                     `pulumi:"projectToForkFrom"`
	PublicAccess         *GetServiceCassandraUserConfigPublicAccess  `pulumi:"publicAccess"`
	ServiceToForkFrom    *string                                     `pulumi:"serviceToForkFrom"`
}

// GetServiceCassandraUserConfigInput is an input type that accepts GetServiceCassandraUserConfigArgs and GetServiceCassandraUserConfigOutput values.
// You can construct a concrete instance of `GetServiceCassandraUserConfigInput` via:
//
//          GetServiceCassandraUserConfigArgs{...}
type GetServiceCassandraUserConfigInput interface {
	pulumi.Input

	ToGetServiceCassandraUserConfigOutput() GetServiceCassandraUserConfigOutput
	ToGetServiceCassandraUserConfigOutputWithContext(context.Context) GetServiceCassandraUserConfigOutput
}

type GetServiceCassandraUserConfigArgs struct {
	Cassandra            GetServiceCassandraUserConfigCassandraPtrInput     `pulumi:"cassandra"`
	IpFilters            pulumi.StringArrayInput                            `pulumi:"ipFilters"`
	MigrateSstableloader pulumi.StringPtrInput                              `pulumi:"migrateSstableloader"`
	PrivateAccess        GetServiceCassandraUserConfigPrivateAccessPtrInput `pulumi:"privateAccess"`
	ProjectToForkFrom    pulumi.StringPtrInput                              `pulumi:"projectToForkFrom"`
	PublicAccess         GetServiceCassandraUserConfigPublicAccessPtrInput  `pulumi:"publicAccess"`
	ServiceToForkFrom    pulumi.StringPtrInput                              `pulumi:"serviceToForkFrom"`
}

func (GetServiceCassandraUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceCassandraUserConfig)(nil)).Elem()
}

func (i GetServiceCassandraUserConfigArgs) ToGetServiceCassandraUserConfigOutput() GetServiceCassandraUserConfigOutput {
	return i.ToGetServiceCassandraUserConfigOutputWithContext(context.Background())
}

func (i GetServiceCassandraUserConfigArgs) ToGetServiceCassandraUserConfigOutputWithContext(ctx context.Context) GetServiceCassandraUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceCassandraUserConfigOutput)
}

type GetServiceCassandraUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceCassandraUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceCassandraUserConfig)(nil)).Elem()
}

func (o GetServiceCassandraUserConfigOutput) ToGetServiceCassandraUserConfigOutput() GetServiceCassandraUserConfigOutput {
	return o
}

func (o GetServiceCassandraUserConfigOutput) ToGetServiceCassandraUserConfigOutputWithContext(ctx context.Context) GetServiceCassandraUserConfigOutput {
	return o
}

func (o GetServiceCassandraUserConfigOutput) Cassandra() GetServiceCassandraUserConfigCassandraPtrOutput {
	return o.ApplyT(func(v GetServiceCassandraUserConfig) *GetServiceCassandraUserConfigCassandra { return v.Cassandra }).(GetServiceCassandraUserConfigCassandraPtrOutput)
}

func (o GetServiceCassandraUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceCassandraUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

func (o GetServiceCassandraUserConfigOutput) MigrateSstableloader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceCassandraUserConfig) *string { return v.MigrateSstableloader }).(pulumi.StringPtrOutput)
}

func (o GetServiceCassandraUserConfigOutput) PrivateAccess() GetServiceCassandraUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetServiceCassandraUserConfig) *GetServiceCassandraUserConfigPrivateAccess {
		return v.PrivateAccess
	}).(GetServiceCassandraUserConfigPrivateAccessPtrOutput)
}

func (o GetServiceCassandraUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceCassandraUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

func (o GetServiceCassandraUserConfigOutput) PublicAccess() GetServiceCassandraUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetServiceCassandraUserConfig) *GetServiceCassandraUserConfigPublicAccess {
		return v.PublicAccess
	}).(GetServiceCassandraUserConfigPublicAccessPtrOutput)
}

func (o GetServiceCassandraUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceCassandraUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

type GetServiceCassandraUserConfigCassandra struct {
	BatchSizeFailThresholdInKb *string `pulumi:"batchSizeFailThresholdInKb"`
	BatchSizeWarnThresholdInKb *string `pulumi:"batchSizeWarnThresholdInKb"`
}

// GetServiceCassandraUserConfigCassandraInput is an input type that accepts GetServiceCassandraUserConfigCassandraArgs and GetServiceCassandraUserConfigCassandraOutput values.
// You can construct a concrete instance of `GetServiceCassandraUserConfigCassandraInput` via:
//
//          GetServiceCassandraUserConfigCassandraArgs{...}
type GetServiceCassandraUserConfigCassandraInput interface {
	pulumi.Input

	ToGetServiceCassandraUserConfigCassandraOutput() GetServiceCassandraUserConfigCassandraOutput
	ToGetServiceCassandraUserConfigCassandraOutputWithContext(context.Context) GetServiceCassandraUserConfigCassandraOutput
}

type GetServiceCassandraUserConfigCassandraArgs struct {
	BatchSizeFailThresholdInKb pulumi.StringPtrInput `pulumi:"batchSizeFailThresholdInKb"`
	BatchSizeWarnThresholdInKb pulumi.StringPtrInput `pulumi:"batchSizeWarnThresholdInKb"`
}

func (GetServiceCassandraUserConfigCassandraArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceCassandraUserConfigCassandra)(nil)).Elem()
}

func (i GetServiceCassandraUserConfigCassandraArgs) ToGetServiceCassandraUserConfigCassandraOutput() GetServiceCassandraUserConfigCassandraOutput {
	return i.ToGetServiceCassandraUserConfigCassandraOutputWithContext(context.Background())
}

func (i GetServiceCassandraUserConfigCassandraArgs) ToGetServiceCassandraUserConfigCassandraOutputWithContext(ctx context.Context) GetServiceCassandraUserConfigCassandraOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceCassandraUserConfigCassandraOutput)
}

func (i GetServiceCassandraUserConfigCassandraArgs) ToGetServiceCassandraUserConfigCassandraPtrOutput() GetServiceCassandraUserConfigCassandraPtrOutput {
	return i.ToGetServiceCassandraUserConfigCassandraPtrOutputWithContext(context.Background())
}

func (i GetServiceCassandraUserConfigCassandraArgs) ToGetServiceCassandraUserConfigCassandraPtrOutputWithContext(ctx context.Context) GetServiceCassandraUserConfigCassandraPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceCassandraUserConfigCassandraOutput).ToGetServiceCassandraUserConfigCassandraPtrOutputWithContext(ctx)
}

// GetServiceCassandraUserConfigCassandraPtrInput is an input type that accepts GetServiceCassandraUserConfigCassandraArgs, GetServiceCassandraUserConfigCassandraPtr and GetServiceCassandraUserConfigCassandraPtrOutput values.
// You can construct a concrete instance of `GetServiceCassandraUserConfigCassandraPtrInput` via:
//
//          GetServiceCassandraUserConfigCassandraArgs{...}
//
//  or:
//
//          nil
type GetServiceCassandraUserConfigCassandraPtrInput interface {
	pulumi.Input

	ToGetServiceCassandraUserConfigCassandraPtrOutput() GetServiceCassandraUserConfigCassandraPtrOutput
	ToGetServiceCassandraUserConfigCassandraPtrOutputWithContext(context.Context) GetServiceCassandraUserConfigCassandraPtrOutput
}

type getServiceCassandraUserConfigCassandraPtrType GetServiceCassandraUserConfigCassandraArgs

func GetServiceCassandraUserConfigCassandraPtr(v *GetServiceCassandraUserConfigCassandraArgs) GetServiceCassandraUserConfigCassandraPtrInput {
	return (*getServiceCassandraUserConfigCassandraPtrType)(v)
}

func (*getServiceCassandraUserConfigCassandraPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceCassandraUserConfigCassandra)(nil)).Elem()
}

func (i *getServiceCassandraUserConfigCassandraPtrType) ToGetServiceCassandraUserConfigCassandraPtrOutput() GetServiceCassandraUserConfigCassandraPtrOutput {
	return i.ToGetServiceCassandraUserConfigCassandraPtrOutputWithContext(context.Background())
}

func (i *getServiceCassandraUserConfigCassandraPtrType) ToGetServiceCassandraUserConfigCassandraPtrOutputWithContext(ctx context.Context) GetServiceCassandraUserConfigCassandraPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceCassandraUserConfigCassandraPtrOutput)
}

type GetServiceCassandraUserConfigCassandraOutput struct{ *pulumi.OutputState }

func (GetServiceCassandraUserConfigCassandraOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceCassandraUserConfigCassandra)(nil)).Elem()
}

func (o GetServiceCassandraUserConfigCassandraOutput) ToGetServiceCassandraUserConfigCassandraOutput() GetServiceCassandraUserConfigCassandraOutput {
	return o
}

func (o GetServiceCassandraUserConfigCassandraOutput) ToGetServiceCassandraUserConfigCassandraOutputWithContext(ctx context.Context) GetServiceCassandraUserConfigCassandraOutput {
	return o
}

func (o GetServiceCassandraUserConfigCassandraOutput) ToGetServiceCassandraUserConfigCassandraPtrOutput() GetServiceCassandraUserConfigCassandraPtrOutput {
	return o.ToGetServiceCassandraUserConfigCassandraPtrOutputWithContext(context.Background())
}

func (o GetServiceCassandraUserConfigCassandraOutput) ToGetServiceCassandraUserConfigCassandraPtrOutputWithContext(ctx context.Context) GetServiceCassandraUserConfigCassandraPtrOutput {
	return o.ApplyT(func(v GetServiceCassandraUserConfigCassandra) *GetServiceCassandraUserConfigCassandra {
		return &v
	}).(GetServiceCassandraUserConfigCassandraPtrOutput)
}
func (o GetServiceCassandraUserConfigCassandraOutput) BatchSizeFailThresholdInKb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceCassandraUserConfigCassandra) *string { return v.BatchSizeFailThresholdInKb }).(pulumi.StringPtrOutput)
}

func (o GetServiceCassandraUserConfigCassandraOutput) BatchSizeWarnThresholdInKb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceCassandraUserConfigCassandra) *string { return v.BatchSizeWarnThresholdInKb }).(pulumi.StringPtrOutput)
}

type GetServiceCassandraUserConfigCassandraPtrOutput struct{ *pulumi.OutputState }

func (GetServiceCassandraUserConfigCassandraPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceCassandraUserConfigCassandra)(nil)).Elem()
}

func (o GetServiceCassandraUserConfigCassandraPtrOutput) ToGetServiceCassandraUserConfigCassandraPtrOutput() GetServiceCassandraUserConfigCassandraPtrOutput {
	return o
}

func (o GetServiceCassandraUserConfigCassandraPtrOutput) ToGetServiceCassandraUserConfigCassandraPtrOutputWithContext(ctx context.Context) GetServiceCassandraUserConfigCassandraPtrOutput {
	return o
}

func (o GetServiceCassandraUserConfigCassandraPtrOutput) Elem() GetServiceCassandraUserConfigCassandraOutput {
	return o.ApplyT(func(v *GetServiceCassandraUserConfigCassandra) GetServiceCassandraUserConfigCassandra { return *v }).(GetServiceCassandraUserConfigCassandraOutput)
}

func (o GetServiceCassandraUserConfigCassandraPtrOutput) BatchSizeFailThresholdInKb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceCassandraUserConfigCassandra) *string {
		if v == nil {
			return nil
		}
		return v.BatchSizeFailThresholdInKb
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceCassandraUserConfigCassandraPtrOutput) BatchSizeWarnThresholdInKb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceCassandraUserConfigCassandra) *string {
		if v == nil {
			return nil
		}
		return v.BatchSizeWarnThresholdInKb
	}).(pulumi.StringPtrOutput)
}

type GetServiceCassandraUserConfigPrivateAccess struct {
	Prometheus *string `pulumi:"prometheus"`
}

// GetServiceCassandraUserConfigPrivateAccessInput is an input type that accepts GetServiceCassandraUserConfigPrivateAccessArgs and GetServiceCassandraUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `GetServiceCassandraUserConfigPrivateAccessInput` via:
//
//          GetServiceCassandraUserConfigPrivateAccessArgs{...}
type GetServiceCassandraUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToGetServiceCassandraUserConfigPrivateAccessOutput() GetServiceCassandraUserConfigPrivateAccessOutput
	ToGetServiceCassandraUserConfigPrivateAccessOutputWithContext(context.Context) GetServiceCassandraUserConfigPrivateAccessOutput
}

type GetServiceCassandraUserConfigPrivateAccessArgs struct {
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (GetServiceCassandraUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceCassandraUserConfigPrivateAccess)(nil)).Elem()
}

func (i GetServiceCassandraUserConfigPrivateAccessArgs) ToGetServiceCassandraUserConfigPrivateAccessOutput() GetServiceCassandraUserConfigPrivateAccessOutput {
	return i.ToGetServiceCassandraUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i GetServiceCassandraUserConfigPrivateAccessArgs) ToGetServiceCassandraUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetServiceCassandraUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceCassandraUserConfigPrivateAccessOutput)
}

func (i GetServiceCassandraUserConfigPrivateAccessArgs) ToGetServiceCassandraUserConfigPrivateAccessPtrOutput() GetServiceCassandraUserConfigPrivateAccessPtrOutput {
	return i.ToGetServiceCassandraUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i GetServiceCassandraUserConfigPrivateAccessArgs) ToGetServiceCassandraUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceCassandraUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceCassandraUserConfigPrivateAccessOutput).ToGetServiceCassandraUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// GetServiceCassandraUserConfigPrivateAccessPtrInput is an input type that accepts GetServiceCassandraUserConfigPrivateAccessArgs, GetServiceCassandraUserConfigPrivateAccessPtr and GetServiceCassandraUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `GetServiceCassandraUserConfigPrivateAccessPtrInput` via:
//
//          GetServiceCassandraUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type GetServiceCassandraUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToGetServiceCassandraUserConfigPrivateAccessPtrOutput() GetServiceCassandraUserConfigPrivateAccessPtrOutput
	ToGetServiceCassandraUserConfigPrivateAccessPtrOutputWithContext(context.Context) GetServiceCassandraUserConfigPrivateAccessPtrOutput
}

type getServiceCassandraUserConfigPrivateAccessPtrType GetServiceCassandraUserConfigPrivateAccessArgs

func GetServiceCassandraUserConfigPrivateAccessPtr(v *GetServiceCassandraUserConfigPrivateAccessArgs) GetServiceCassandraUserConfigPrivateAccessPtrInput {
	return (*getServiceCassandraUserConfigPrivateAccessPtrType)(v)
}

func (*getServiceCassandraUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceCassandraUserConfigPrivateAccess)(nil)).Elem()
}

func (i *getServiceCassandraUserConfigPrivateAccessPtrType) ToGetServiceCassandraUserConfigPrivateAccessPtrOutput() GetServiceCassandraUserConfigPrivateAccessPtrOutput {
	return i.ToGetServiceCassandraUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *getServiceCassandraUserConfigPrivateAccessPtrType) ToGetServiceCassandraUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceCassandraUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceCassandraUserConfigPrivateAccessPtrOutput)
}

type GetServiceCassandraUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (GetServiceCassandraUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceCassandraUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetServiceCassandraUserConfigPrivateAccessOutput) ToGetServiceCassandraUserConfigPrivateAccessOutput() GetServiceCassandraUserConfigPrivateAccessOutput {
	return o
}

func (o GetServiceCassandraUserConfigPrivateAccessOutput) ToGetServiceCassandraUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetServiceCassandraUserConfigPrivateAccessOutput {
	return o
}

func (o GetServiceCassandraUserConfigPrivateAccessOutput) ToGetServiceCassandraUserConfigPrivateAccessPtrOutput() GetServiceCassandraUserConfigPrivateAccessPtrOutput {
	return o.ToGetServiceCassandraUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o GetServiceCassandraUserConfigPrivateAccessOutput) ToGetServiceCassandraUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceCassandraUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetServiceCassandraUserConfigPrivateAccess) *GetServiceCassandraUserConfigPrivateAccess {
		return &v
	}).(GetServiceCassandraUserConfigPrivateAccessPtrOutput)
}
func (o GetServiceCassandraUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceCassandraUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type GetServiceCassandraUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (GetServiceCassandraUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceCassandraUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetServiceCassandraUserConfigPrivateAccessPtrOutput) ToGetServiceCassandraUserConfigPrivateAccessPtrOutput() GetServiceCassandraUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetServiceCassandraUserConfigPrivateAccessPtrOutput) ToGetServiceCassandraUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceCassandraUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetServiceCassandraUserConfigPrivateAccessPtrOutput) Elem() GetServiceCassandraUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *GetServiceCassandraUserConfigPrivateAccess) GetServiceCassandraUserConfigPrivateAccess {
		return *v
	}).(GetServiceCassandraUserConfigPrivateAccessOutput)
}

func (o GetServiceCassandraUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceCassandraUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type GetServiceCassandraUserConfigPublicAccess struct {
	Prometheus *string `pulumi:"prometheus"`
}

// GetServiceCassandraUserConfigPublicAccessInput is an input type that accepts GetServiceCassandraUserConfigPublicAccessArgs and GetServiceCassandraUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `GetServiceCassandraUserConfigPublicAccessInput` via:
//
//          GetServiceCassandraUserConfigPublicAccessArgs{...}
type GetServiceCassandraUserConfigPublicAccessInput interface {
	pulumi.Input

	ToGetServiceCassandraUserConfigPublicAccessOutput() GetServiceCassandraUserConfigPublicAccessOutput
	ToGetServiceCassandraUserConfigPublicAccessOutputWithContext(context.Context) GetServiceCassandraUserConfigPublicAccessOutput
}

type GetServiceCassandraUserConfigPublicAccessArgs struct {
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (GetServiceCassandraUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceCassandraUserConfigPublicAccess)(nil)).Elem()
}

func (i GetServiceCassandraUserConfigPublicAccessArgs) ToGetServiceCassandraUserConfigPublicAccessOutput() GetServiceCassandraUserConfigPublicAccessOutput {
	return i.ToGetServiceCassandraUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i GetServiceCassandraUserConfigPublicAccessArgs) ToGetServiceCassandraUserConfigPublicAccessOutputWithContext(ctx context.Context) GetServiceCassandraUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceCassandraUserConfigPublicAccessOutput)
}

func (i GetServiceCassandraUserConfigPublicAccessArgs) ToGetServiceCassandraUserConfigPublicAccessPtrOutput() GetServiceCassandraUserConfigPublicAccessPtrOutput {
	return i.ToGetServiceCassandraUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i GetServiceCassandraUserConfigPublicAccessArgs) ToGetServiceCassandraUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceCassandraUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceCassandraUserConfigPublicAccessOutput).ToGetServiceCassandraUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// GetServiceCassandraUserConfigPublicAccessPtrInput is an input type that accepts GetServiceCassandraUserConfigPublicAccessArgs, GetServiceCassandraUserConfigPublicAccessPtr and GetServiceCassandraUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `GetServiceCassandraUserConfigPublicAccessPtrInput` via:
//
//          GetServiceCassandraUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type GetServiceCassandraUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToGetServiceCassandraUserConfigPublicAccessPtrOutput() GetServiceCassandraUserConfigPublicAccessPtrOutput
	ToGetServiceCassandraUserConfigPublicAccessPtrOutputWithContext(context.Context) GetServiceCassandraUserConfigPublicAccessPtrOutput
}

type getServiceCassandraUserConfigPublicAccessPtrType GetServiceCassandraUserConfigPublicAccessArgs

func GetServiceCassandraUserConfigPublicAccessPtr(v *GetServiceCassandraUserConfigPublicAccessArgs) GetServiceCassandraUserConfigPublicAccessPtrInput {
	return (*getServiceCassandraUserConfigPublicAccessPtrType)(v)
}

func (*getServiceCassandraUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceCassandraUserConfigPublicAccess)(nil)).Elem()
}

func (i *getServiceCassandraUserConfigPublicAccessPtrType) ToGetServiceCassandraUserConfigPublicAccessPtrOutput() GetServiceCassandraUserConfigPublicAccessPtrOutput {
	return i.ToGetServiceCassandraUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *getServiceCassandraUserConfigPublicAccessPtrType) ToGetServiceCassandraUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceCassandraUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceCassandraUserConfigPublicAccessPtrOutput)
}

type GetServiceCassandraUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (GetServiceCassandraUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceCassandraUserConfigPublicAccess)(nil)).Elem()
}

func (o GetServiceCassandraUserConfigPublicAccessOutput) ToGetServiceCassandraUserConfigPublicAccessOutput() GetServiceCassandraUserConfigPublicAccessOutput {
	return o
}

func (o GetServiceCassandraUserConfigPublicAccessOutput) ToGetServiceCassandraUserConfigPublicAccessOutputWithContext(ctx context.Context) GetServiceCassandraUserConfigPublicAccessOutput {
	return o
}

func (o GetServiceCassandraUserConfigPublicAccessOutput) ToGetServiceCassandraUserConfigPublicAccessPtrOutput() GetServiceCassandraUserConfigPublicAccessPtrOutput {
	return o.ToGetServiceCassandraUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o GetServiceCassandraUserConfigPublicAccessOutput) ToGetServiceCassandraUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceCassandraUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetServiceCassandraUserConfigPublicAccess) *GetServiceCassandraUserConfigPublicAccess {
		return &v
	}).(GetServiceCassandraUserConfigPublicAccessPtrOutput)
}
func (o GetServiceCassandraUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceCassandraUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type GetServiceCassandraUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (GetServiceCassandraUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceCassandraUserConfigPublicAccess)(nil)).Elem()
}

func (o GetServiceCassandraUserConfigPublicAccessPtrOutput) ToGetServiceCassandraUserConfigPublicAccessPtrOutput() GetServiceCassandraUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetServiceCassandraUserConfigPublicAccessPtrOutput) ToGetServiceCassandraUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceCassandraUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetServiceCassandraUserConfigPublicAccessPtrOutput) Elem() GetServiceCassandraUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *GetServiceCassandraUserConfigPublicAccess) GetServiceCassandraUserConfigPublicAccess {
		return *v
	}).(GetServiceCassandraUserConfigPublicAccessOutput)
}

func (o GetServiceCassandraUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceCassandraUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type GetServiceComponentType struct {
	Component                 string `pulumi:"component"`
	Host                      string `pulumi:"host"`
	KafkaAuthenticationMethod string `pulumi:"kafkaAuthenticationMethod"`
	Port                      int    `pulumi:"port"`
	Route                     string `pulumi:"route"`
	Ssl                       bool   `pulumi:"ssl"`
	Usage                     string `pulumi:"usage"`
}

// GetServiceComponentTypeInput is an input type that accepts GetServiceComponentTypeArgs and GetServiceComponentTypeOutput values.
// You can construct a concrete instance of `GetServiceComponentTypeInput` via:
//
//          GetServiceComponentTypeArgs{...}
type GetServiceComponentTypeInput interface {
	pulumi.Input

	ToGetServiceComponentTypeOutput() GetServiceComponentTypeOutput
	ToGetServiceComponentTypeOutputWithContext(context.Context) GetServiceComponentTypeOutput
}

type GetServiceComponentTypeArgs struct {
	Component                 pulumi.StringInput `pulumi:"component"`
	Host                      pulumi.StringInput `pulumi:"host"`
	KafkaAuthenticationMethod pulumi.StringInput `pulumi:"kafkaAuthenticationMethod"`
	Port                      pulumi.IntInput    `pulumi:"port"`
	Route                     pulumi.StringInput `pulumi:"route"`
	Ssl                       pulumi.BoolInput   `pulumi:"ssl"`
	Usage                     pulumi.StringInput `pulumi:"usage"`
}

func (GetServiceComponentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceComponentType)(nil)).Elem()
}

func (i GetServiceComponentTypeArgs) ToGetServiceComponentTypeOutput() GetServiceComponentTypeOutput {
	return i.ToGetServiceComponentTypeOutputWithContext(context.Background())
}

func (i GetServiceComponentTypeArgs) ToGetServiceComponentTypeOutputWithContext(ctx context.Context) GetServiceComponentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceComponentTypeOutput)
}

// GetServiceComponentTypeArrayInput is an input type that accepts GetServiceComponentTypeArray and GetServiceComponentTypeArrayOutput values.
// You can construct a concrete instance of `GetServiceComponentTypeArrayInput` via:
//
//          GetServiceComponentTypeArray{ GetServiceComponentTypeArgs{...} }
type GetServiceComponentTypeArrayInput interface {
	pulumi.Input

	ToGetServiceComponentTypeArrayOutput() GetServiceComponentTypeArrayOutput
	ToGetServiceComponentTypeArrayOutputWithContext(context.Context) GetServiceComponentTypeArrayOutput
}

type GetServiceComponentTypeArray []GetServiceComponentTypeInput

func (GetServiceComponentTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceComponentType)(nil)).Elem()
}

func (i GetServiceComponentTypeArray) ToGetServiceComponentTypeArrayOutput() GetServiceComponentTypeArrayOutput {
	return i.ToGetServiceComponentTypeArrayOutputWithContext(context.Background())
}

func (i GetServiceComponentTypeArray) ToGetServiceComponentTypeArrayOutputWithContext(ctx context.Context) GetServiceComponentTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceComponentTypeArrayOutput)
}

type GetServiceComponentTypeOutput struct{ *pulumi.OutputState }

func (GetServiceComponentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceComponentType)(nil)).Elem()
}

func (o GetServiceComponentTypeOutput) ToGetServiceComponentTypeOutput() GetServiceComponentTypeOutput {
	return o
}

func (o GetServiceComponentTypeOutput) ToGetServiceComponentTypeOutputWithContext(ctx context.Context) GetServiceComponentTypeOutput {
	return o
}

func (o GetServiceComponentTypeOutput) Component() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceComponentType) string { return v.Component }).(pulumi.StringOutput)
}

func (o GetServiceComponentTypeOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceComponentType) string { return v.Host }).(pulumi.StringOutput)
}

func (o GetServiceComponentTypeOutput) KafkaAuthenticationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceComponentType) string { return v.KafkaAuthenticationMethod }).(pulumi.StringOutput)
}

func (o GetServiceComponentTypeOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetServiceComponentType) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetServiceComponentTypeOutput) Route() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceComponentType) string { return v.Route }).(pulumi.StringOutput)
}

func (o GetServiceComponentTypeOutput) Ssl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceComponentType) bool { return v.Ssl }).(pulumi.BoolOutput)
}

func (o GetServiceComponentTypeOutput) Usage() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceComponentType) string { return v.Usage }).(pulumi.StringOutput)
}

type GetServiceComponentTypeArrayOutput struct{ *pulumi.OutputState }

func (GetServiceComponentTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceComponentType)(nil)).Elem()
}

func (o GetServiceComponentTypeArrayOutput) ToGetServiceComponentTypeArrayOutput() GetServiceComponentTypeArrayOutput {
	return o
}

func (o GetServiceComponentTypeArrayOutput) ToGetServiceComponentTypeArrayOutputWithContext(ctx context.Context) GetServiceComponentTypeArrayOutput {
	return o
}

func (o GetServiceComponentTypeArrayOutput) Index(i pulumi.IntInput) GetServiceComponentTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceComponentType {
		return vs[0].([]GetServiceComponentType)[vs[1].(int)]
	}).(GetServiceComponentTypeOutput)
}

type GetServiceElasticsearch struct {
	KibanaUri string `pulumi:"kibanaUri"`
}

// GetServiceElasticsearchInput is an input type that accepts GetServiceElasticsearchArgs and GetServiceElasticsearchOutput values.
// You can construct a concrete instance of `GetServiceElasticsearchInput` via:
//
//          GetServiceElasticsearchArgs{...}
type GetServiceElasticsearchInput interface {
	pulumi.Input

	ToGetServiceElasticsearchOutput() GetServiceElasticsearchOutput
	ToGetServiceElasticsearchOutputWithContext(context.Context) GetServiceElasticsearchOutput
}

type GetServiceElasticsearchArgs struct {
	KibanaUri pulumi.StringInput `pulumi:"kibanaUri"`
}

func (GetServiceElasticsearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceElasticsearch)(nil)).Elem()
}

func (i GetServiceElasticsearchArgs) ToGetServiceElasticsearchOutput() GetServiceElasticsearchOutput {
	return i.ToGetServiceElasticsearchOutputWithContext(context.Background())
}

func (i GetServiceElasticsearchArgs) ToGetServiceElasticsearchOutputWithContext(ctx context.Context) GetServiceElasticsearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceElasticsearchOutput)
}

type GetServiceElasticsearchOutput struct{ *pulumi.OutputState }

func (GetServiceElasticsearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceElasticsearch)(nil)).Elem()
}

func (o GetServiceElasticsearchOutput) ToGetServiceElasticsearchOutput() GetServiceElasticsearchOutput {
	return o
}

func (o GetServiceElasticsearchOutput) ToGetServiceElasticsearchOutputWithContext(ctx context.Context) GetServiceElasticsearchOutput {
	return o
}

func (o GetServiceElasticsearchOutput) KibanaUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceElasticsearch) string { return v.KibanaUri }).(pulumi.StringOutput)
}

type GetServiceElasticsearchUserConfig struct {
	CustomDomain                       *string                                             `pulumi:"customDomain"`
	DisableReplicationFactorAdjustment *string                                             `pulumi:"disableReplicationFactorAdjustment"`
	Elasticsearch                      *GetServiceElasticsearchUserConfigElasticsearch     `pulumi:"elasticsearch"`
	ElasticsearchVersion               *string                                             `pulumi:"elasticsearchVersion"`
	IndexPatterns                      []GetServiceElasticsearchUserConfigIndexPattern     `pulumi:"indexPatterns"`
	IndexTemplate                      *GetServiceElasticsearchUserConfigIndexTemplate     `pulumi:"indexTemplate"`
	IpFilters                          []string                                            `pulumi:"ipFilters"`
	Kibana                             *GetServiceElasticsearchUserConfigKibana            `pulumi:"kibana"`
	MaxIndexCount                      *string                                             `pulumi:"maxIndexCount"`
	PrivateAccess                      *GetServiceElasticsearchUserConfigPrivateAccess     `pulumi:"privateAccess"`
	PrivatelinkAccess                  *GetServiceElasticsearchUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	ProjectToForkFrom                  *string                                             `pulumi:"projectToForkFrom"`
	PublicAccess                       *GetServiceElasticsearchUserConfigPublicAccess      `pulumi:"publicAccess"`
	RecoveryBasebackupName             *string                                             `pulumi:"recoveryBasebackupName"`
	ServiceToForkFrom                  *string                                             `pulumi:"serviceToForkFrom"`
}

// GetServiceElasticsearchUserConfigInput is an input type that accepts GetServiceElasticsearchUserConfigArgs and GetServiceElasticsearchUserConfigOutput values.
// You can construct a concrete instance of `GetServiceElasticsearchUserConfigInput` via:
//
//          GetServiceElasticsearchUserConfigArgs{...}
type GetServiceElasticsearchUserConfigInput interface {
	pulumi.Input

	ToGetServiceElasticsearchUserConfigOutput() GetServiceElasticsearchUserConfigOutput
	ToGetServiceElasticsearchUserConfigOutputWithContext(context.Context) GetServiceElasticsearchUserConfigOutput
}

type GetServiceElasticsearchUserConfigArgs struct {
	CustomDomain                       pulumi.StringPtrInput                                      `pulumi:"customDomain"`
	DisableReplicationFactorAdjustment pulumi.StringPtrInput                                      `pulumi:"disableReplicationFactorAdjustment"`
	Elasticsearch                      GetServiceElasticsearchUserConfigElasticsearchPtrInput     `pulumi:"elasticsearch"`
	ElasticsearchVersion               pulumi.StringPtrInput                                      `pulumi:"elasticsearchVersion"`
	IndexPatterns                      GetServiceElasticsearchUserConfigIndexPatternArrayInput    `pulumi:"indexPatterns"`
	IndexTemplate                      GetServiceElasticsearchUserConfigIndexTemplatePtrInput     `pulumi:"indexTemplate"`
	IpFilters                          pulumi.StringArrayInput                                    `pulumi:"ipFilters"`
	Kibana                             GetServiceElasticsearchUserConfigKibanaPtrInput            `pulumi:"kibana"`
	MaxIndexCount                      pulumi.StringPtrInput                                      `pulumi:"maxIndexCount"`
	PrivateAccess                      GetServiceElasticsearchUserConfigPrivateAccessPtrInput     `pulumi:"privateAccess"`
	PrivatelinkAccess                  GetServiceElasticsearchUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	ProjectToForkFrom                  pulumi.StringPtrInput                                      `pulumi:"projectToForkFrom"`
	PublicAccess                       GetServiceElasticsearchUserConfigPublicAccessPtrInput      `pulumi:"publicAccess"`
	RecoveryBasebackupName             pulumi.StringPtrInput                                      `pulumi:"recoveryBasebackupName"`
	ServiceToForkFrom                  pulumi.StringPtrInput                                      `pulumi:"serviceToForkFrom"`
}

func (GetServiceElasticsearchUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceElasticsearchUserConfig)(nil)).Elem()
}

func (i GetServiceElasticsearchUserConfigArgs) ToGetServiceElasticsearchUserConfigOutput() GetServiceElasticsearchUserConfigOutput {
	return i.ToGetServiceElasticsearchUserConfigOutputWithContext(context.Background())
}

func (i GetServiceElasticsearchUserConfigArgs) ToGetServiceElasticsearchUserConfigOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceElasticsearchUserConfigOutput)
}

type GetServiceElasticsearchUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceElasticsearchUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceElasticsearchUserConfig)(nil)).Elem()
}

func (o GetServiceElasticsearchUserConfigOutput) ToGetServiceElasticsearchUserConfigOutput() GetServiceElasticsearchUserConfigOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigOutput) ToGetServiceElasticsearchUserConfigOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfig) *string { return v.CustomDomain }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigOutput) DisableReplicationFactorAdjustment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfig) *string { return v.DisableReplicationFactorAdjustment }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigOutput) Elasticsearch() GetServiceElasticsearchUserConfigElasticsearchPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfig) *GetServiceElasticsearchUserConfigElasticsearch {
		return v.Elasticsearch
	}).(GetServiceElasticsearchUserConfigElasticsearchPtrOutput)
}

func (o GetServiceElasticsearchUserConfigOutput) ElasticsearchVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfig) *string { return v.ElasticsearchVersion }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigOutput) IndexPatterns() GetServiceElasticsearchUserConfigIndexPatternArrayOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfig) []GetServiceElasticsearchUserConfigIndexPattern {
		return v.IndexPatterns
	}).(GetServiceElasticsearchUserConfigIndexPatternArrayOutput)
}

func (o GetServiceElasticsearchUserConfigOutput) IndexTemplate() GetServiceElasticsearchUserConfigIndexTemplatePtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfig) *GetServiceElasticsearchUserConfigIndexTemplate {
		return v.IndexTemplate
	}).(GetServiceElasticsearchUserConfigIndexTemplatePtrOutput)
}

func (o GetServiceElasticsearchUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

func (o GetServiceElasticsearchUserConfigOutput) Kibana() GetServiceElasticsearchUserConfigKibanaPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfig) *GetServiceElasticsearchUserConfigKibana { return v.Kibana }).(GetServiceElasticsearchUserConfigKibanaPtrOutput)
}

func (o GetServiceElasticsearchUserConfigOutput) MaxIndexCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfig) *string { return v.MaxIndexCount }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigOutput) PrivateAccess() GetServiceElasticsearchUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfig) *GetServiceElasticsearchUserConfigPrivateAccess {
		return v.PrivateAccess
	}).(GetServiceElasticsearchUserConfigPrivateAccessPtrOutput)
}

func (o GetServiceElasticsearchUserConfigOutput) PrivatelinkAccess() GetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfig) *GetServiceElasticsearchUserConfigPrivatelinkAccess {
		return v.PrivatelinkAccess
	}).(GetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput)
}

func (o GetServiceElasticsearchUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigOutput) PublicAccess() GetServiceElasticsearchUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfig) *GetServiceElasticsearchUserConfigPublicAccess {
		return v.PublicAccess
	}).(GetServiceElasticsearchUserConfigPublicAccessPtrOutput)
}

func (o GetServiceElasticsearchUserConfigOutput) RecoveryBasebackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfig) *string { return v.RecoveryBasebackupName }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

type GetServiceElasticsearchUserConfigElasticsearch struct {
	ActionAutoCreateIndexEnabled       *string  `pulumi:"actionAutoCreateIndexEnabled"`
	ActionDestructiveRequiresName      *string  `pulumi:"actionDestructiveRequiresName"`
	ClusterMaxShardsPerNode            *string  `pulumi:"clusterMaxShardsPerNode"`
	HttpMaxContentLength               *string  `pulumi:"httpMaxContentLength"`
	HttpMaxHeaderSize                  *string  `pulumi:"httpMaxHeaderSize"`
	HttpMaxInitialLineLength           *string  `pulumi:"httpMaxInitialLineLength"`
	IndicesFielddataCacheSize          *string  `pulumi:"indicesFielddataCacheSize"`
	IndicesMemoryIndexBufferSize       *string  `pulumi:"indicesMemoryIndexBufferSize"`
	IndicesQueriesCacheSize            *string  `pulumi:"indicesQueriesCacheSize"`
	IndicesQueryBoolMaxClauseCount     *string  `pulumi:"indicesQueryBoolMaxClauseCount"`
	ReindexRemoteWhitelists            []string `pulumi:"reindexRemoteWhitelists"`
	SearchMaxBuckets                   *string  `pulumi:"searchMaxBuckets"`
	ThreadPoolAnalyzeQueueSize         *string  `pulumi:"threadPoolAnalyzeQueueSize"`
	ThreadPoolAnalyzeSize              *string  `pulumi:"threadPoolAnalyzeSize"`
	ThreadPoolForceMergeSize           *string  `pulumi:"threadPoolForceMergeSize"`
	ThreadPoolGetQueueSize             *string  `pulumi:"threadPoolGetQueueSize"`
	ThreadPoolGetSize                  *string  `pulumi:"threadPoolGetSize"`
	ThreadPoolIndexQueueSize           *string  `pulumi:"threadPoolIndexQueueSize"`
	ThreadPoolIndexSize                *string  `pulumi:"threadPoolIndexSize"`
	ThreadPoolSearchQueueSize          *string  `pulumi:"threadPoolSearchQueueSize"`
	ThreadPoolSearchSize               *string  `pulumi:"threadPoolSearchSize"`
	ThreadPoolSearchThrottledQueueSize *string  `pulumi:"threadPoolSearchThrottledQueueSize"`
	ThreadPoolSearchThrottledSize      *string  `pulumi:"threadPoolSearchThrottledSize"`
	ThreadPoolWriteQueueSize           *string  `pulumi:"threadPoolWriteQueueSize"`
	ThreadPoolWriteSize                *string  `pulumi:"threadPoolWriteSize"`
}

// GetServiceElasticsearchUserConfigElasticsearchInput is an input type that accepts GetServiceElasticsearchUserConfigElasticsearchArgs and GetServiceElasticsearchUserConfigElasticsearchOutput values.
// You can construct a concrete instance of `GetServiceElasticsearchUserConfigElasticsearchInput` via:
//
//          GetServiceElasticsearchUserConfigElasticsearchArgs{...}
type GetServiceElasticsearchUserConfigElasticsearchInput interface {
	pulumi.Input

	ToGetServiceElasticsearchUserConfigElasticsearchOutput() GetServiceElasticsearchUserConfigElasticsearchOutput
	ToGetServiceElasticsearchUserConfigElasticsearchOutputWithContext(context.Context) GetServiceElasticsearchUserConfigElasticsearchOutput
}

type GetServiceElasticsearchUserConfigElasticsearchArgs struct {
	ActionAutoCreateIndexEnabled       pulumi.StringPtrInput   `pulumi:"actionAutoCreateIndexEnabled"`
	ActionDestructiveRequiresName      pulumi.StringPtrInput   `pulumi:"actionDestructiveRequiresName"`
	ClusterMaxShardsPerNode            pulumi.StringPtrInput   `pulumi:"clusterMaxShardsPerNode"`
	HttpMaxContentLength               pulumi.StringPtrInput   `pulumi:"httpMaxContentLength"`
	HttpMaxHeaderSize                  pulumi.StringPtrInput   `pulumi:"httpMaxHeaderSize"`
	HttpMaxInitialLineLength           pulumi.StringPtrInput   `pulumi:"httpMaxInitialLineLength"`
	IndicesFielddataCacheSize          pulumi.StringPtrInput   `pulumi:"indicesFielddataCacheSize"`
	IndicesMemoryIndexBufferSize       pulumi.StringPtrInput   `pulumi:"indicesMemoryIndexBufferSize"`
	IndicesQueriesCacheSize            pulumi.StringPtrInput   `pulumi:"indicesQueriesCacheSize"`
	IndicesQueryBoolMaxClauseCount     pulumi.StringPtrInput   `pulumi:"indicesQueryBoolMaxClauseCount"`
	ReindexRemoteWhitelists            pulumi.StringArrayInput `pulumi:"reindexRemoteWhitelists"`
	SearchMaxBuckets                   pulumi.StringPtrInput   `pulumi:"searchMaxBuckets"`
	ThreadPoolAnalyzeQueueSize         pulumi.StringPtrInput   `pulumi:"threadPoolAnalyzeQueueSize"`
	ThreadPoolAnalyzeSize              pulumi.StringPtrInput   `pulumi:"threadPoolAnalyzeSize"`
	ThreadPoolForceMergeSize           pulumi.StringPtrInput   `pulumi:"threadPoolForceMergeSize"`
	ThreadPoolGetQueueSize             pulumi.StringPtrInput   `pulumi:"threadPoolGetQueueSize"`
	ThreadPoolGetSize                  pulumi.StringPtrInput   `pulumi:"threadPoolGetSize"`
	ThreadPoolIndexQueueSize           pulumi.StringPtrInput   `pulumi:"threadPoolIndexQueueSize"`
	ThreadPoolIndexSize                pulumi.StringPtrInput   `pulumi:"threadPoolIndexSize"`
	ThreadPoolSearchQueueSize          pulumi.StringPtrInput   `pulumi:"threadPoolSearchQueueSize"`
	ThreadPoolSearchSize               pulumi.StringPtrInput   `pulumi:"threadPoolSearchSize"`
	ThreadPoolSearchThrottledQueueSize pulumi.StringPtrInput   `pulumi:"threadPoolSearchThrottledQueueSize"`
	ThreadPoolSearchThrottledSize      pulumi.StringPtrInput   `pulumi:"threadPoolSearchThrottledSize"`
	ThreadPoolWriteQueueSize           pulumi.StringPtrInput   `pulumi:"threadPoolWriteQueueSize"`
	ThreadPoolWriteSize                pulumi.StringPtrInput   `pulumi:"threadPoolWriteSize"`
}

func (GetServiceElasticsearchUserConfigElasticsearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceElasticsearchUserConfigElasticsearch)(nil)).Elem()
}

func (i GetServiceElasticsearchUserConfigElasticsearchArgs) ToGetServiceElasticsearchUserConfigElasticsearchOutput() GetServiceElasticsearchUserConfigElasticsearchOutput {
	return i.ToGetServiceElasticsearchUserConfigElasticsearchOutputWithContext(context.Background())
}

func (i GetServiceElasticsearchUserConfigElasticsearchArgs) ToGetServiceElasticsearchUserConfigElasticsearchOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigElasticsearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceElasticsearchUserConfigElasticsearchOutput)
}

func (i GetServiceElasticsearchUserConfigElasticsearchArgs) ToGetServiceElasticsearchUserConfigElasticsearchPtrOutput() GetServiceElasticsearchUserConfigElasticsearchPtrOutput {
	return i.ToGetServiceElasticsearchUserConfigElasticsearchPtrOutputWithContext(context.Background())
}

func (i GetServiceElasticsearchUserConfigElasticsearchArgs) ToGetServiceElasticsearchUserConfigElasticsearchPtrOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigElasticsearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceElasticsearchUserConfigElasticsearchOutput).ToGetServiceElasticsearchUserConfigElasticsearchPtrOutputWithContext(ctx)
}

// GetServiceElasticsearchUserConfigElasticsearchPtrInput is an input type that accepts GetServiceElasticsearchUserConfigElasticsearchArgs, GetServiceElasticsearchUserConfigElasticsearchPtr and GetServiceElasticsearchUserConfigElasticsearchPtrOutput values.
// You can construct a concrete instance of `GetServiceElasticsearchUserConfigElasticsearchPtrInput` via:
//
//          GetServiceElasticsearchUserConfigElasticsearchArgs{...}
//
//  or:
//
//          nil
type GetServiceElasticsearchUserConfigElasticsearchPtrInput interface {
	pulumi.Input

	ToGetServiceElasticsearchUserConfigElasticsearchPtrOutput() GetServiceElasticsearchUserConfigElasticsearchPtrOutput
	ToGetServiceElasticsearchUserConfigElasticsearchPtrOutputWithContext(context.Context) GetServiceElasticsearchUserConfigElasticsearchPtrOutput
}

type getServiceElasticsearchUserConfigElasticsearchPtrType GetServiceElasticsearchUserConfigElasticsearchArgs

func GetServiceElasticsearchUserConfigElasticsearchPtr(v *GetServiceElasticsearchUserConfigElasticsearchArgs) GetServiceElasticsearchUserConfigElasticsearchPtrInput {
	return (*getServiceElasticsearchUserConfigElasticsearchPtrType)(v)
}

func (*getServiceElasticsearchUserConfigElasticsearchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceElasticsearchUserConfigElasticsearch)(nil)).Elem()
}

func (i *getServiceElasticsearchUserConfigElasticsearchPtrType) ToGetServiceElasticsearchUserConfigElasticsearchPtrOutput() GetServiceElasticsearchUserConfigElasticsearchPtrOutput {
	return i.ToGetServiceElasticsearchUserConfigElasticsearchPtrOutputWithContext(context.Background())
}

func (i *getServiceElasticsearchUserConfigElasticsearchPtrType) ToGetServiceElasticsearchUserConfigElasticsearchPtrOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigElasticsearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceElasticsearchUserConfigElasticsearchPtrOutput)
}

type GetServiceElasticsearchUserConfigElasticsearchOutput struct{ *pulumi.OutputState }

func (GetServiceElasticsearchUserConfigElasticsearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceElasticsearchUserConfigElasticsearch)(nil)).Elem()
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) ToGetServiceElasticsearchUserConfigElasticsearchOutput() GetServiceElasticsearchUserConfigElasticsearchOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) ToGetServiceElasticsearchUserConfigElasticsearchOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigElasticsearchOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) ToGetServiceElasticsearchUserConfigElasticsearchPtrOutput() GetServiceElasticsearchUserConfigElasticsearchPtrOutput {
	return o.ToGetServiceElasticsearchUserConfigElasticsearchPtrOutputWithContext(context.Background())
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) ToGetServiceElasticsearchUserConfigElasticsearchPtrOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigElasticsearchPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigElasticsearch) *GetServiceElasticsearchUserConfigElasticsearch {
		return &v
	}).(GetServiceElasticsearchUserConfigElasticsearchPtrOutput)
}
func (o GetServiceElasticsearchUserConfigElasticsearchOutput) ActionAutoCreateIndexEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigElasticsearch) *string { return v.ActionAutoCreateIndexEnabled }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) ActionDestructiveRequiresName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigElasticsearch) *string { return v.ActionDestructiveRequiresName }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) ClusterMaxShardsPerNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigElasticsearch) *string { return v.ClusterMaxShardsPerNode }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) HttpMaxContentLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigElasticsearch) *string { return v.HttpMaxContentLength }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) HttpMaxHeaderSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigElasticsearch) *string { return v.HttpMaxHeaderSize }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) HttpMaxInitialLineLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigElasticsearch) *string { return v.HttpMaxInitialLineLength }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) IndicesFielddataCacheSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigElasticsearch) *string { return v.IndicesFielddataCacheSize }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) IndicesMemoryIndexBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigElasticsearch) *string { return v.IndicesMemoryIndexBufferSize }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) IndicesQueriesCacheSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigElasticsearch) *string { return v.IndicesQueriesCacheSize }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) IndicesQueryBoolMaxClauseCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigElasticsearch) *string {
		return v.IndicesQueryBoolMaxClauseCount
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) ReindexRemoteWhitelists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigElasticsearch) []string { return v.ReindexRemoteWhitelists }).(pulumi.StringArrayOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) SearchMaxBuckets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigElasticsearch) *string { return v.SearchMaxBuckets }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) ThreadPoolAnalyzeQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolAnalyzeQueueSize }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) ThreadPoolAnalyzeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolAnalyzeSize }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) ThreadPoolForceMergeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolForceMergeSize }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) ThreadPoolGetQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolGetQueueSize }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) ThreadPoolGetSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolGetSize }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) ThreadPoolIndexQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolIndexQueueSize }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) ThreadPoolIndexSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolIndexSize }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) ThreadPoolSearchQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolSearchQueueSize }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) ThreadPoolSearchSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolSearchSize }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) ThreadPoolSearchThrottledQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigElasticsearch) *string {
		return v.ThreadPoolSearchThrottledQueueSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) ThreadPoolSearchThrottledSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolSearchThrottledSize }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) ThreadPoolWriteQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolWriteQueueSize }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchOutput) ThreadPoolWriteSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigElasticsearch) *string { return v.ThreadPoolWriteSize }).(pulumi.StringPtrOutput)
}

type GetServiceElasticsearchUserConfigElasticsearchPtrOutput struct{ *pulumi.OutputState }

func (GetServiceElasticsearchUserConfigElasticsearchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceElasticsearchUserConfigElasticsearch)(nil)).Elem()
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) ToGetServiceElasticsearchUserConfigElasticsearchPtrOutput() GetServiceElasticsearchUserConfigElasticsearchPtrOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) ToGetServiceElasticsearchUserConfigElasticsearchPtrOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigElasticsearchPtrOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) Elem() GetServiceElasticsearchUserConfigElasticsearchOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigElasticsearch) GetServiceElasticsearchUserConfigElasticsearch {
		return *v
	}).(GetServiceElasticsearchUserConfigElasticsearchOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) ActionAutoCreateIndexEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ActionAutoCreateIndexEnabled
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) ActionDestructiveRequiresName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ActionDestructiveRequiresName
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) ClusterMaxShardsPerNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ClusterMaxShardsPerNode
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) HttpMaxContentLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.HttpMaxContentLength
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) HttpMaxHeaderSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.HttpMaxHeaderSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) HttpMaxInitialLineLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.HttpMaxInitialLineLength
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) IndicesFielddataCacheSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.IndicesFielddataCacheSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) IndicesMemoryIndexBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.IndicesMemoryIndexBufferSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) IndicesQueriesCacheSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.IndicesQueriesCacheSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) IndicesQueryBoolMaxClauseCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.IndicesQueryBoolMaxClauseCount
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) ReindexRemoteWhitelists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigElasticsearch) []string {
		if v == nil {
			return nil
		}
		return v.ReindexRemoteWhitelists
	}).(pulumi.StringArrayOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) SearchMaxBuckets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.SearchMaxBuckets
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolAnalyzeQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolAnalyzeQueueSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolAnalyzeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolAnalyzeSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolForceMergeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolForceMergeSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolGetQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolGetQueueSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolGetSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolGetSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolIndexQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolIndexQueueSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolIndexSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolIndexSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolSearchQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolSearchQueueSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolSearchSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolSearchSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolSearchThrottledQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolSearchThrottledQueueSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolSearchThrottledSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolSearchThrottledSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolWriteQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolWriteQueueSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigElasticsearchPtrOutput) ThreadPoolWriteSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ThreadPoolWriteSize
	}).(pulumi.StringPtrOutput)
}

type GetServiceElasticsearchUserConfigIndexPattern struct {
	MaxIndexCount    *string `pulumi:"maxIndexCount"`
	Pattern          *string `pulumi:"pattern"`
	SortingAlgorithm *string `pulumi:"sortingAlgorithm"`
}

// GetServiceElasticsearchUserConfigIndexPatternInput is an input type that accepts GetServiceElasticsearchUserConfigIndexPatternArgs and GetServiceElasticsearchUserConfigIndexPatternOutput values.
// You can construct a concrete instance of `GetServiceElasticsearchUserConfigIndexPatternInput` via:
//
//          GetServiceElasticsearchUserConfigIndexPatternArgs{...}
type GetServiceElasticsearchUserConfigIndexPatternInput interface {
	pulumi.Input

	ToGetServiceElasticsearchUserConfigIndexPatternOutput() GetServiceElasticsearchUserConfigIndexPatternOutput
	ToGetServiceElasticsearchUserConfigIndexPatternOutputWithContext(context.Context) GetServiceElasticsearchUserConfigIndexPatternOutput
}

type GetServiceElasticsearchUserConfigIndexPatternArgs struct {
	MaxIndexCount    pulumi.StringPtrInput `pulumi:"maxIndexCount"`
	Pattern          pulumi.StringPtrInput `pulumi:"pattern"`
	SortingAlgorithm pulumi.StringPtrInput `pulumi:"sortingAlgorithm"`
}

func (GetServiceElasticsearchUserConfigIndexPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceElasticsearchUserConfigIndexPattern)(nil)).Elem()
}

func (i GetServiceElasticsearchUserConfigIndexPatternArgs) ToGetServiceElasticsearchUserConfigIndexPatternOutput() GetServiceElasticsearchUserConfigIndexPatternOutput {
	return i.ToGetServiceElasticsearchUserConfigIndexPatternOutputWithContext(context.Background())
}

func (i GetServiceElasticsearchUserConfigIndexPatternArgs) ToGetServiceElasticsearchUserConfigIndexPatternOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigIndexPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceElasticsearchUserConfigIndexPatternOutput)
}

// GetServiceElasticsearchUserConfigIndexPatternArrayInput is an input type that accepts GetServiceElasticsearchUserConfigIndexPatternArray and GetServiceElasticsearchUserConfigIndexPatternArrayOutput values.
// You can construct a concrete instance of `GetServiceElasticsearchUserConfigIndexPatternArrayInput` via:
//
//          GetServiceElasticsearchUserConfigIndexPatternArray{ GetServiceElasticsearchUserConfigIndexPatternArgs{...} }
type GetServiceElasticsearchUserConfigIndexPatternArrayInput interface {
	pulumi.Input

	ToGetServiceElasticsearchUserConfigIndexPatternArrayOutput() GetServiceElasticsearchUserConfigIndexPatternArrayOutput
	ToGetServiceElasticsearchUserConfigIndexPatternArrayOutputWithContext(context.Context) GetServiceElasticsearchUserConfigIndexPatternArrayOutput
}

type GetServiceElasticsearchUserConfigIndexPatternArray []GetServiceElasticsearchUserConfigIndexPatternInput

func (GetServiceElasticsearchUserConfigIndexPatternArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceElasticsearchUserConfigIndexPattern)(nil)).Elem()
}

func (i GetServiceElasticsearchUserConfigIndexPatternArray) ToGetServiceElasticsearchUserConfigIndexPatternArrayOutput() GetServiceElasticsearchUserConfigIndexPatternArrayOutput {
	return i.ToGetServiceElasticsearchUserConfigIndexPatternArrayOutputWithContext(context.Background())
}

func (i GetServiceElasticsearchUserConfigIndexPatternArray) ToGetServiceElasticsearchUserConfigIndexPatternArrayOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigIndexPatternArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceElasticsearchUserConfigIndexPatternArrayOutput)
}

type GetServiceElasticsearchUserConfigIndexPatternOutput struct{ *pulumi.OutputState }

func (GetServiceElasticsearchUserConfigIndexPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceElasticsearchUserConfigIndexPattern)(nil)).Elem()
}

func (o GetServiceElasticsearchUserConfigIndexPatternOutput) ToGetServiceElasticsearchUserConfigIndexPatternOutput() GetServiceElasticsearchUserConfigIndexPatternOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigIndexPatternOutput) ToGetServiceElasticsearchUserConfigIndexPatternOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigIndexPatternOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigIndexPatternOutput) MaxIndexCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigIndexPattern) *string { return v.MaxIndexCount }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigIndexPatternOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigIndexPattern) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigIndexPatternOutput) SortingAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigIndexPattern) *string { return v.SortingAlgorithm }).(pulumi.StringPtrOutput)
}

type GetServiceElasticsearchUserConfigIndexPatternArrayOutput struct{ *pulumi.OutputState }

func (GetServiceElasticsearchUserConfigIndexPatternArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceElasticsearchUserConfigIndexPattern)(nil)).Elem()
}

func (o GetServiceElasticsearchUserConfigIndexPatternArrayOutput) ToGetServiceElasticsearchUserConfigIndexPatternArrayOutput() GetServiceElasticsearchUserConfigIndexPatternArrayOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigIndexPatternArrayOutput) ToGetServiceElasticsearchUserConfigIndexPatternArrayOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigIndexPatternArrayOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigIndexPatternArrayOutput) Index(i pulumi.IntInput) GetServiceElasticsearchUserConfigIndexPatternOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceElasticsearchUserConfigIndexPattern {
		return vs[0].([]GetServiceElasticsearchUserConfigIndexPattern)[vs[1].(int)]
	}).(GetServiceElasticsearchUserConfigIndexPatternOutput)
}

type GetServiceElasticsearchUserConfigIndexTemplate struct {
	MappingNestedObjectsLimit *string `pulumi:"mappingNestedObjectsLimit"`
	NumberOfReplicas          *string `pulumi:"numberOfReplicas"`
	NumberOfShards            *string `pulumi:"numberOfShards"`
}

// GetServiceElasticsearchUserConfigIndexTemplateInput is an input type that accepts GetServiceElasticsearchUserConfigIndexTemplateArgs and GetServiceElasticsearchUserConfigIndexTemplateOutput values.
// You can construct a concrete instance of `GetServiceElasticsearchUserConfigIndexTemplateInput` via:
//
//          GetServiceElasticsearchUserConfigIndexTemplateArgs{...}
type GetServiceElasticsearchUserConfigIndexTemplateInput interface {
	pulumi.Input

	ToGetServiceElasticsearchUserConfigIndexTemplateOutput() GetServiceElasticsearchUserConfigIndexTemplateOutput
	ToGetServiceElasticsearchUserConfigIndexTemplateOutputWithContext(context.Context) GetServiceElasticsearchUserConfigIndexTemplateOutput
}

type GetServiceElasticsearchUserConfigIndexTemplateArgs struct {
	MappingNestedObjectsLimit pulumi.StringPtrInput `pulumi:"mappingNestedObjectsLimit"`
	NumberOfReplicas          pulumi.StringPtrInput `pulumi:"numberOfReplicas"`
	NumberOfShards            pulumi.StringPtrInput `pulumi:"numberOfShards"`
}

func (GetServiceElasticsearchUserConfigIndexTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceElasticsearchUserConfigIndexTemplate)(nil)).Elem()
}

func (i GetServiceElasticsearchUserConfigIndexTemplateArgs) ToGetServiceElasticsearchUserConfigIndexTemplateOutput() GetServiceElasticsearchUserConfigIndexTemplateOutput {
	return i.ToGetServiceElasticsearchUserConfigIndexTemplateOutputWithContext(context.Background())
}

func (i GetServiceElasticsearchUserConfigIndexTemplateArgs) ToGetServiceElasticsearchUserConfigIndexTemplateOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigIndexTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceElasticsearchUserConfigIndexTemplateOutput)
}

func (i GetServiceElasticsearchUserConfigIndexTemplateArgs) ToGetServiceElasticsearchUserConfigIndexTemplatePtrOutput() GetServiceElasticsearchUserConfigIndexTemplatePtrOutput {
	return i.ToGetServiceElasticsearchUserConfigIndexTemplatePtrOutputWithContext(context.Background())
}

func (i GetServiceElasticsearchUserConfigIndexTemplateArgs) ToGetServiceElasticsearchUserConfigIndexTemplatePtrOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigIndexTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceElasticsearchUserConfigIndexTemplateOutput).ToGetServiceElasticsearchUserConfigIndexTemplatePtrOutputWithContext(ctx)
}

// GetServiceElasticsearchUserConfigIndexTemplatePtrInput is an input type that accepts GetServiceElasticsearchUserConfigIndexTemplateArgs, GetServiceElasticsearchUserConfigIndexTemplatePtr and GetServiceElasticsearchUserConfigIndexTemplatePtrOutput values.
// You can construct a concrete instance of `GetServiceElasticsearchUserConfigIndexTemplatePtrInput` via:
//
//          GetServiceElasticsearchUserConfigIndexTemplateArgs{...}
//
//  or:
//
//          nil
type GetServiceElasticsearchUserConfigIndexTemplatePtrInput interface {
	pulumi.Input

	ToGetServiceElasticsearchUserConfigIndexTemplatePtrOutput() GetServiceElasticsearchUserConfigIndexTemplatePtrOutput
	ToGetServiceElasticsearchUserConfigIndexTemplatePtrOutputWithContext(context.Context) GetServiceElasticsearchUserConfigIndexTemplatePtrOutput
}

type getServiceElasticsearchUserConfigIndexTemplatePtrType GetServiceElasticsearchUserConfigIndexTemplateArgs

func GetServiceElasticsearchUserConfigIndexTemplatePtr(v *GetServiceElasticsearchUserConfigIndexTemplateArgs) GetServiceElasticsearchUserConfigIndexTemplatePtrInput {
	return (*getServiceElasticsearchUserConfigIndexTemplatePtrType)(v)
}

func (*getServiceElasticsearchUserConfigIndexTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceElasticsearchUserConfigIndexTemplate)(nil)).Elem()
}

func (i *getServiceElasticsearchUserConfigIndexTemplatePtrType) ToGetServiceElasticsearchUserConfigIndexTemplatePtrOutput() GetServiceElasticsearchUserConfigIndexTemplatePtrOutput {
	return i.ToGetServiceElasticsearchUserConfigIndexTemplatePtrOutputWithContext(context.Background())
}

func (i *getServiceElasticsearchUserConfigIndexTemplatePtrType) ToGetServiceElasticsearchUserConfigIndexTemplatePtrOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigIndexTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceElasticsearchUserConfigIndexTemplatePtrOutput)
}

type GetServiceElasticsearchUserConfigIndexTemplateOutput struct{ *pulumi.OutputState }

func (GetServiceElasticsearchUserConfigIndexTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceElasticsearchUserConfigIndexTemplate)(nil)).Elem()
}

func (o GetServiceElasticsearchUserConfigIndexTemplateOutput) ToGetServiceElasticsearchUserConfigIndexTemplateOutput() GetServiceElasticsearchUserConfigIndexTemplateOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigIndexTemplateOutput) ToGetServiceElasticsearchUserConfigIndexTemplateOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigIndexTemplateOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigIndexTemplateOutput) ToGetServiceElasticsearchUserConfigIndexTemplatePtrOutput() GetServiceElasticsearchUserConfigIndexTemplatePtrOutput {
	return o.ToGetServiceElasticsearchUserConfigIndexTemplatePtrOutputWithContext(context.Background())
}

func (o GetServiceElasticsearchUserConfigIndexTemplateOutput) ToGetServiceElasticsearchUserConfigIndexTemplatePtrOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigIndexTemplatePtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigIndexTemplate) *GetServiceElasticsearchUserConfigIndexTemplate {
		return &v
	}).(GetServiceElasticsearchUserConfigIndexTemplatePtrOutput)
}
func (o GetServiceElasticsearchUserConfigIndexTemplateOutput) MappingNestedObjectsLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigIndexTemplate) *string { return v.MappingNestedObjectsLimit }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigIndexTemplateOutput) NumberOfReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigIndexTemplate) *string { return v.NumberOfReplicas }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigIndexTemplateOutput) NumberOfShards() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigIndexTemplate) *string { return v.NumberOfShards }).(pulumi.StringPtrOutput)
}

type GetServiceElasticsearchUserConfigIndexTemplatePtrOutput struct{ *pulumi.OutputState }

func (GetServiceElasticsearchUserConfigIndexTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceElasticsearchUserConfigIndexTemplate)(nil)).Elem()
}

func (o GetServiceElasticsearchUserConfigIndexTemplatePtrOutput) ToGetServiceElasticsearchUserConfigIndexTemplatePtrOutput() GetServiceElasticsearchUserConfigIndexTemplatePtrOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigIndexTemplatePtrOutput) ToGetServiceElasticsearchUserConfigIndexTemplatePtrOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigIndexTemplatePtrOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigIndexTemplatePtrOutput) Elem() GetServiceElasticsearchUserConfigIndexTemplateOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigIndexTemplate) GetServiceElasticsearchUserConfigIndexTemplate {
		return *v
	}).(GetServiceElasticsearchUserConfigIndexTemplateOutput)
}

func (o GetServiceElasticsearchUserConfigIndexTemplatePtrOutput) MappingNestedObjectsLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigIndexTemplate) *string {
		if v == nil {
			return nil
		}
		return v.MappingNestedObjectsLimit
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigIndexTemplatePtrOutput) NumberOfReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigIndexTemplate) *string {
		if v == nil {
			return nil
		}
		return v.NumberOfReplicas
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigIndexTemplatePtrOutput) NumberOfShards() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigIndexTemplate) *string {
		if v == nil {
			return nil
		}
		return v.NumberOfShards
	}).(pulumi.StringPtrOutput)
}

type GetServiceElasticsearchUserConfigKibana struct {
	ElasticsearchRequestTimeout *string `pulumi:"elasticsearchRequestTimeout"`
	Enabled                     *string `pulumi:"enabled"`
	MaxOldSpaceSize             *string `pulumi:"maxOldSpaceSize"`
}

// GetServiceElasticsearchUserConfigKibanaInput is an input type that accepts GetServiceElasticsearchUserConfigKibanaArgs and GetServiceElasticsearchUserConfigKibanaOutput values.
// You can construct a concrete instance of `GetServiceElasticsearchUserConfigKibanaInput` via:
//
//          GetServiceElasticsearchUserConfigKibanaArgs{...}
type GetServiceElasticsearchUserConfigKibanaInput interface {
	pulumi.Input

	ToGetServiceElasticsearchUserConfigKibanaOutput() GetServiceElasticsearchUserConfigKibanaOutput
	ToGetServiceElasticsearchUserConfigKibanaOutputWithContext(context.Context) GetServiceElasticsearchUserConfigKibanaOutput
}

type GetServiceElasticsearchUserConfigKibanaArgs struct {
	ElasticsearchRequestTimeout pulumi.StringPtrInput `pulumi:"elasticsearchRequestTimeout"`
	Enabled                     pulumi.StringPtrInput `pulumi:"enabled"`
	MaxOldSpaceSize             pulumi.StringPtrInput `pulumi:"maxOldSpaceSize"`
}

func (GetServiceElasticsearchUserConfigKibanaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceElasticsearchUserConfigKibana)(nil)).Elem()
}

func (i GetServiceElasticsearchUserConfigKibanaArgs) ToGetServiceElasticsearchUserConfigKibanaOutput() GetServiceElasticsearchUserConfigKibanaOutput {
	return i.ToGetServiceElasticsearchUserConfigKibanaOutputWithContext(context.Background())
}

func (i GetServiceElasticsearchUserConfigKibanaArgs) ToGetServiceElasticsearchUserConfigKibanaOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigKibanaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceElasticsearchUserConfigKibanaOutput)
}

func (i GetServiceElasticsearchUserConfigKibanaArgs) ToGetServiceElasticsearchUserConfigKibanaPtrOutput() GetServiceElasticsearchUserConfigKibanaPtrOutput {
	return i.ToGetServiceElasticsearchUserConfigKibanaPtrOutputWithContext(context.Background())
}

func (i GetServiceElasticsearchUserConfigKibanaArgs) ToGetServiceElasticsearchUserConfigKibanaPtrOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigKibanaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceElasticsearchUserConfigKibanaOutput).ToGetServiceElasticsearchUserConfigKibanaPtrOutputWithContext(ctx)
}

// GetServiceElasticsearchUserConfigKibanaPtrInput is an input type that accepts GetServiceElasticsearchUserConfigKibanaArgs, GetServiceElasticsearchUserConfigKibanaPtr and GetServiceElasticsearchUserConfigKibanaPtrOutput values.
// You can construct a concrete instance of `GetServiceElasticsearchUserConfigKibanaPtrInput` via:
//
//          GetServiceElasticsearchUserConfigKibanaArgs{...}
//
//  or:
//
//          nil
type GetServiceElasticsearchUserConfigKibanaPtrInput interface {
	pulumi.Input

	ToGetServiceElasticsearchUserConfigKibanaPtrOutput() GetServiceElasticsearchUserConfigKibanaPtrOutput
	ToGetServiceElasticsearchUserConfigKibanaPtrOutputWithContext(context.Context) GetServiceElasticsearchUserConfigKibanaPtrOutput
}

type getServiceElasticsearchUserConfigKibanaPtrType GetServiceElasticsearchUserConfigKibanaArgs

func GetServiceElasticsearchUserConfigKibanaPtr(v *GetServiceElasticsearchUserConfigKibanaArgs) GetServiceElasticsearchUserConfigKibanaPtrInput {
	return (*getServiceElasticsearchUserConfigKibanaPtrType)(v)
}

func (*getServiceElasticsearchUserConfigKibanaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceElasticsearchUserConfigKibana)(nil)).Elem()
}

func (i *getServiceElasticsearchUserConfigKibanaPtrType) ToGetServiceElasticsearchUserConfigKibanaPtrOutput() GetServiceElasticsearchUserConfigKibanaPtrOutput {
	return i.ToGetServiceElasticsearchUserConfigKibanaPtrOutputWithContext(context.Background())
}

func (i *getServiceElasticsearchUserConfigKibanaPtrType) ToGetServiceElasticsearchUserConfigKibanaPtrOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigKibanaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceElasticsearchUserConfigKibanaPtrOutput)
}

type GetServiceElasticsearchUserConfigKibanaOutput struct{ *pulumi.OutputState }

func (GetServiceElasticsearchUserConfigKibanaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceElasticsearchUserConfigKibana)(nil)).Elem()
}

func (o GetServiceElasticsearchUserConfigKibanaOutput) ToGetServiceElasticsearchUserConfigKibanaOutput() GetServiceElasticsearchUserConfigKibanaOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigKibanaOutput) ToGetServiceElasticsearchUserConfigKibanaOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigKibanaOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigKibanaOutput) ToGetServiceElasticsearchUserConfigKibanaPtrOutput() GetServiceElasticsearchUserConfigKibanaPtrOutput {
	return o.ToGetServiceElasticsearchUserConfigKibanaPtrOutputWithContext(context.Background())
}

func (o GetServiceElasticsearchUserConfigKibanaOutput) ToGetServiceElasticsearchUserConfigKibanaPtrOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigKibanaPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigKibana) *GetServiceElasticsearchUserConfigKibana {
		return &v
	}).(GetServiceElasticsearchUserConfigKibanaPtrOutput)
}
func (o GetServiceElasticsearchUserConfigKibanaOutput) ElasticsearchRequestTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigKibana) *string { return v.ElasticsearchRequestTimeout }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigKibanaOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigKibana) *string { return v.Enabled }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigKibanaOutput) MaxOldSpaceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigKibana) *string { return v.MaxOldSpaceSize }).(pulumi.StringPtrOutput)
}

type GetServiceElasticsearchUserConfigKibanaPtrOutput struct{ *pulumi.OutputState }

func (GetServiceElasticsearchUserConfigKibanaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceElasticsearchUserConfigKibana)(nil)).Elem()
}

func (o GetServiceElasticsearchUserConfigKibanaPtrOutput) ToGetServiceElasticsearchUserConfigKibanaPtrOutput() GetServiceElasticsearchUserConfigKibanaPtrOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigKibanaPtrOutput) ToGetServiceElasticsearchUserConfigKibanaPtrOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigKibanaPtrOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigKibanaPtrOutput) Elem() GetServiceElasticsearchUserConfigKibanaOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigKibana) GetServiceElasticsearchUserConfigKibana { return *v }).(GetServiceElasticsearchUserConfigKibanaOutput)
}

func (o GetServiceElasticsearchUserConfigKibanaPtrOutput) ElasticsearchRequestTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigKibana) *string {
		if v == nil {
			return nil
		}
		return v.ElasticsearchRequestTimeout
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigKibanaPtrOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigKibana) *string {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigKibanaPtrOutput) MaxOldSpaceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigKibana) *string {
		if v == nil {
			return nil
		}
		return v.MaxOldSpaceSize
	}).(pulumi.StringPtrOutput)
}

type GetServiceElasticsearchUserConfigPrivateAccess struct {
	Elasticsearch *string `pulumi:"elasticsearch"`
	Kibana        *string `pulumi:"kibana"`
	Prometheus    *string `pulumi:"prometheus"`
}

// GetServiceElasticsearchUserConfigPrivateAccessInput is an input type that accepts GetServiceElasticsearchUserConfigPrivateAccessArgs and GetServiceElasticsearchUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `GetServiceElasticsearchUserConfigPrivateAccessInput` via:
//
//          GetServiceElasticsearchUserConfigPrivateAccessArgs{...}
type GetServiceElasticsearchUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToGetServiceElasticsearchUserConfigPrivateAccessOutput() GetServiceElasticsearchUserConfigPrivateAccessOutput
	ToGetServiceElasticsearchUserConfigPrivateAccessOutputWithContext(context.Context) GetServiceElasticsearchUserConfigPrivateAccessOutput
}

type GetServiceElasticsearchUserConfigPrivateAccessArgs struct {
	Elasticsearch pulumi.StringPtrInput `pulumi:"elasticsearch"`
	Kibana        pulumi.StringPtrInput `pulumi:"kibana"`
	Prometheus    pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (GetServiceElasticsearchUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceElasticsearchUserConfigPrivateAccess)(nil)).Elem()
}

func (i GetServiceElasticsearchUserConfigPrivateAccessArgs) ToGetServiceElasticsearchUserConfigPrivateAccessOutput() GetServiceElasticsearchUserConfigPrivateAccessOutput {
	return i.ToGetServiceElasticsearchUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i GetServiceElasticsearchUserConfigPrivateAccessArgs) ToGetServiceElasticsearchUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceElasticsearchUserConfigPrivateAccessOutput)
}

func (i GetServiceElasticsearchUserConfigPrivateAccessArgs) ToGetServiceElasticsearchUserConfigPrivateAccessPtrOutput() GetServiceElasticsearchUserConfigPrivateAccessPtrOutput {
	return i.ToGetServiceElasticsearchUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i GetServiceElasticsearchUserConfigPrivateAccessArgs) ToGetServiceElasticsearchUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceElasticsearchUserConfigPrivateAccessOutput).ToGetServiceElasticsearchUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// GetServiceElasticsearchUserConfigPrivateAccessPtrInput is an input type that accepts GetServiceElasticsearchUserConfigPrivateAccessArgs, GetServiceElasticsearchUserConfigPrivateAccessPtr and GetServiceElasticsearchUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `GetServiceElasticsearchUserConfigPrivateAccessPtrInput` via:
//
//          GetServiceElasticsearchUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type GetServiceElasticsearchUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToGetServiceElasticsearchUserConfigPrivateAccessPtrOutput() GetServiceElasticsearchUserConfigPrivateAccessPtrOutput
	ToGetServiceElasticsearchUserConfigPrivateAccessPtrOutputWithContext(context.Context) GetServiceElasticsearchUserConfigPrivateAccessPtrOutput
}

type getServiceElasticsearchUserConfigPrivateAccessPtrType GetServiceElasticsearchUserConfigPrivateAccessArgs

func GetServiceElasticsearchUserConfigPrivateAccessPtr(v *GetServiceElasticsearchUserConfigPrivateAccessArgs) GetServiceElasticsearchUserConfigPrivateAccessPtrInput {
	return (*getServiceElasticsearchUserConfigPrivateAccessPtrType)(v)
}

func (*getServiceElasticsearchUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceElasticsearchUserConfigPrivateAccess)(nil)).Elem()
}

func (i *getServiceElasticsearchUserConfigPrivateAccessPtrType) ToGetServiceElasticsearchUserConfigPrivateAccessPtrOutput() GetServiceElasticsearchUserConfigPrivateAccessPtrOutput {
	return i.ToGetServiceElasticsearchUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *getServiceElasticsearchUserConfigPrivateAccessPtrType) ToGetServiceElasticsearchUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceElasticsearchUserConfigPrivateAccessPtrOutput)
}

type GetServiceElasticsearchUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (GetServiceElasticsearchUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceElasticsearchUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetServiceElasticsearchUserConfigPrivateAccessOutput) ToGetServiceElasticsearchUserConfigPrivateAccessOutput() GetServiceElasticsearchUserConfigPrivateAccessOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigPrivateAccessOutput) ToGetServiceElasticsearchUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigPrivateAccessOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigPrivateAccessOutput) ToGetServiceElasticsearchUserConfigPrivateAccessPtrOutput() GetServiceElasticsearchUserConfigPrivateAccessPtrOutput {
	return o.ToGetServiceElasticsearchUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o GetServiceElasticsearchUserConfigPrivateAccessOutput) ToGetServiceElasticsearchUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigPrivateAccess) *GetServiceElasticsearchUserConfigPrivateAccess {
		return &v
	}).(GetServiceElasticsearchUserConfigPrivateAccessPtrOutput)
}
func (o GetServiceElasticsearchUserConfigPrivateAccessOutput) Elasticsearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigPrivateAccess) *string { return v.Elasticsearch }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigPrivateAccessOutput) Kibana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigPrivateAccess) *string { return v.Kibana }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type GetServiceElasticsearchUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (GetServiceElasticsearchUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceElasticsearchUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetServiceElasticsearchUserConfigPrivateAccessPtrOutput) ToGetServiceElasticsearchUserConfigPrivateAccessPtrOutput() GetServiceElasticsearchUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigPrivateAccessPtrOutput) ToGetServiceElasticsearchUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigPrivateAccessPtrOutput) Elem() GetServiceElasticsearchUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigPrivateAccess) GetServiceElasticsearchUserConfigPrivateAccess {
		return *v
	}).(GetServiceElasticsearchUserConfigPrivateAccessOutput)
}

func (o GetServiceElasticsearchUserConfigPrivateAccessPtrOutput) Elasticsearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Elasticsearch
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigPrivateAccessPtrOutput) Kibana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Kibana
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type GetServiceElasticsearchUserConfigPrivatelinkAccess struct {
	Elasticsearch *string `pulumi:"elasticsearch"`
	Kibana        *string `pulumi:"kibana"`
}

// GetServiceElasticsearchUserConfigPrivatelinkAccessInput is an input type that accepts GetServiceElasticsearchUserConfigPrivatelinkAccessArgs and GetServiceElasticsearchUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `GetServiceElasticsearchUserConfigPrivatelinkAccessInput` via:
//
//          GetServiceElasticsearchUserConfigPrivatelinkAccessArgs{...}
type GetServiceElasticsearchUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToGetServiceElasticsearchUserConfigPrivatelinkAccessOutput() GetServiceElasticsearchUserConfigPrivatelinkAccessOutput
	ToGetServiceElasticsearchUserConfigPrivatelinkAccessOutputWithContext(context.Context) GetServiceElasticsearchUserConfigPrivatelinkAccessOutput
}

type GetServiceElasticsearchUserConfigPrivatelinkAccessArgs struct {
	Elasticsearch pulumi.StringPtrInput `pulumi:"elasticsearch"`
	Kibana        pulumi.StringPtrInput `pulumi:"kibana"`
}

func (GetServiceElasticsearchUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceElasticsearchUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i GetServiceElasticsearchUserConfigPrivatelinkAccessArgs) ToGetServiceElasticsearchUserConfigPrivatelinkAccessOutput() GetServiceElasticsearchUserConfigPrivatelinkAccessOutput {
	return i.ToGetServiceElasticsearchUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i GetServiceElasticsearchUserConfigPrivatelinkAccessArgs) ToGetServiceElasticsearchUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceElasticsearchUserConfigPrivatelinkAccessOutput)
}

func (i GetServiceElasticsearchUserConfigPrivatelinkAccessArgs) ToGetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput() GetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i GetServiceElasticsearchUserConfigPrivatelinkAccessArgs) ToGetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceElasticsearchUserConfigPrivatelinkAccessOutput).ToGetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// GetServiceElasticsearchUserConfigPrivatelinkAccessPtrInput is an input type that accepts GetServiceElasticsearchUserConfigPrivatelinkAccessArgs, GetServiceElasticsearchUserConfigPrivatelinkAccessPtr and GetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `GetServiceElasticsearchUserConfigPrivatelinkAccessPtrInput` via:
//
//          GetServiceElasticsearchUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type GetServiceElasticsearchUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToGetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput() GetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput
	ToGetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) GetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput
}

type getServiceElasticsearchUserConfigPrivatelinkAccessPtrType GetServiceElasticsearchUserConfigPrivatelinkAccessArgs

func GetServiceElasticsearchUserConfigPrivatelinkAccessPtr(v *GetServiceElasticsearchUserConfigPrivatelinkAccessArgs) GetServiceElasticsearchUserConfigPrivatelinkAccessPtrInput {
	return (*getServiceElasticsearchUserConfigPrivatelinkAccessPtrType)(v)
}

func (*getServiceElasticsearchUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceElasticsearchUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *getServiceElasticsearchUserConfigPrivatelinkAccessPtrType) ToGetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput() GetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *getServiceElasticsearchUserConfigPrivatelinkAccessPtrType) ToGetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput)
}

type GetServiceElasticsearchUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (GetServiceElasticsearchUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceElasticsearchUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetServiceElasticsearchUserConfigPrivatelinkAccessOutput) ToGetServiceElasticsearchUserConfigPrivatelinkAccessOutput() GetServiceElasticsearchUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigPrivatelinkAccessOutput) ToGetServiceElasticsearchUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigPrivatelinkAccessOutput) ToGetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput() GetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return o.ToGetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o GetServiceElasticsearchUserConfigPrivatelinkAccessOutput) ToGetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigPrivatelinkAccess) *GetServiceElasticsearchUserConfigPrivatelinkAccess {
		return &v
	}).(GetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput)
}
func (o GetServiceElasticsearchUserConfigPrivatelinkAccessOutput) Elasticsearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigPrivatelinkAccess) *string { return v.Elasticsearch }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigPrivatelinkAccessOutput) Kibana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigPrivatelinkAccess) *string { return v.Kibana }).(pulumi.StringPtrOutput)
}

type GetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (GetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceElasticsearchUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput) ToGetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput() GetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput) ToGetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput) Elem() GetServiceElasticsearchUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigPrivatelinkAccess) GetServiceElasticsearchUserConfigPrivatelinkAccess {
		return *v
	}).(GetServiceElasticsearchUserConfigPrivatelinkAccessOutput)
}

func (o GetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput) Elasticsearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Elasticsearch
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput) Kibana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Kibana
	}).(pulumi.StringPtrOutput)
}

type GetServiceElasticsearchUserConfigPublicAccess struct {
	Elasticsearch *string `pulumi:"elasticsearch"`
	Kibana        *string `pulumi:"kibana"`
	Prometheus    *string `pulumi:"prometheus"`
}

// GetServiceElasticsearchUserConfigPublicAccessInput is an input type that accepts GetServiceElasticsearchUserConfigPublicAccessArgs and GetServiceElasticsearchUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `GetServiceElasticsearchUserConfigPublicAccessInput` via:
//
//          GetServiceElasticsearchUserConfigPublicAccessArgs{...}
type GetServiceElasticsearchUserConfigPublicAccessInput interface {
	pulumi.Input

	ToGetServiceElasticsearchUserConfigPublicAccessOutput() GetServiceElasticsearchUserConfigPublicAccessOutput
	ToGetServiceElasticsearchUserConfigPublicAccessOutputWithContext(context.Context) GetServiceElasticsearchUserConfigPublicAccessOutput
}

type GetServiceElasticsearchUserConfigPublicAccessArgs struct {
	Elasticsearch pulumi.StringPtrInput `pulumi:"elasticsearch"`
	Kibana        pulumi.StringPtrInput `pulumi:"kibana"`
	Prometheus    pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (GetServiceElasticsearchUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceElasticsearchUserConfigPublicAccess)(nil)).Elem()
}

func (i GetServiceElasticsearchUserConfigPublicAccessArgs) ToGetServiceElasticsearchUserConfigPublicAccessOutput() GetServiceElasticsearchUserConfigPublicAccessOutput {
	return i.ToGetServiceElasticsearchUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i GetServiceElasticsearchUserConfigPublicAccessArgs) ToGetServiceElasticsearchUserConfigPublicAccessOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceElasticsearchUserConfigPublicAccessOutput)
}

func (i GetServiceElasticsearchUserConfigPublicAccessArgs) ToGetServiceElasticsearchUserConfigPublicAccessPtrOutput() GetServiceElasticsearchUserConfigPublicAccessPtrOutput {
	return i.ToGetServiceElasticsearchUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i GetServiceElasticsearchUserConfigPublicAccessArgs) ToGetServiceElasticsearchUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceElasticsearchUserConfigPublicAccessOutput).ToGetServiceElasticsearchUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// GetServiceElasticsearchUserConfigPublicAccessPtrInput is an input type that accepts GetServiceElasticsearchUserConfigPublicAccessArgs, GetServiceElasticsearchUserConfigPublicAccessPtr and GetServiceElasticsearchUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `GetServiceElasticsearchUserConfigPublicAccessPtrInput` via:
//
//          GetServiceElasticsearchUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type GetServiceElasticsearchUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToGetServiceElasticsearchUserConfigPublicAccessPtrOutput() GetServiceElasticsearchUserConfigPublicAccessPtrOutput
	ToGetServiceElasticsearchUserConfigPublicAccessPtrOutputWithContext(context.Context) GetServiceElasticsearchUserConfigPublicAccessPtrOutput
}

type getServiceElasticsearchUserConfigPublicAccessPtrType GetServiceElasticsearchUserConfigPublicAccessArgs

func GetServiceElasticsearchUserConfigPublicAccessPtr(v *GetServiceElasticsearchUserConfigPublicAccessArgs) GetServiceElasticsearchUserConfigPublicAccessPtrInput {
	return (*getServiceElasticsearchUserConfigPublicAccessPtrType)(v)
}

func (*getServiceElasticsearchUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceElasticsearchUserConfigPublicAccess)(nil)).Elem()
}

func (i *getServiceElasticsearchUserConfigPublicAccessPtrType) ToGetServiceElasticsearchUserConfigPublicAccessPtrOutput() GetServiceElasticsearchUserConfigPublicAccessPtrOutput {
	return i.ToGetServiceElasticsearchUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *getServiceElasticsearchUserConfigPublicAccessPtrType) ToGetServiceElasticsearchUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceElasticsearchUserConfigPublicAccessPtrOutput)
}

type GetServiceElasticsearchUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (GetServiceElasticsearchUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceElasticsearchUserConfigPublicAccess)(nil)).Elem()
}

func (o GetServiceElasticsearchUserConfigPublicAccessOutput) ToGetServiceElasticsearchUserConfigPublicAccessOutput() GetServiceElasticsearchUserConfigPublicAccessOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigPublicAccessOutput) ToGetServiceElasticsearchUserConfigPublicAccessOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigPublicAccessOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigPublicAccessOutput) ToGetServiceElasticsearchUserConfigPublicAccessPtrOutput() GetServiceElasticsearchUserConfigPublicAccessPtrOutput {
	return o.ToGetServiceElasticsearchUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o GetServiceElasticsearchUserConfigPublicAccessOutput) ToGetServiceElasticsearchUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigPublicAccess) *GetServiceElasticsearchUserConfigPublicAccess {
		return &v
	}).(GetServiceElasticsearchUserConfigPublicAccessPtrOutput)
}
func (o GetServiceElasticsearchUserConfigPublicAccessOutput) Elasticsearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigPublicAccess) *string { return v.Elasticsearch }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigPublicAccessOutput) Kibana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigPublicAccess) *string { return v.Kibana }).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceElasticsearchUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type GetServiceElasticsearchUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (GetServiceElasticsearchUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceElasticsearchUserConfigPublicAccess)(nil)).Elem()
}

func (o GetServiceElasticsearchUserConfigPublicAccessPtrOutput) ToGetServiceElasticsearchUserConfigPublicAccessPtrOutput() GetServiceElasticsearchUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigPublicAccessPtrOutput) ToGetServiceElasticsearchUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceElasticsearchUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetServiceElasticsearchUserConfigPublicAccessPtrOutput) Elem() GetServiceElasticsearchUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigPublicAccess) GetServiceElasticsearchUserConfigPublicAccess {
		return *v
	}).(GetServiceElasticsearchUserConfigPublicAccessOutput)
}

func (o GetServiceElasticsearchUserConfigPublicAccessPtrOutput) Elasticsearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Elasticsearch
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigPublicAccessPtrOutput) Kibana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Kibana
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceElasticsearchUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceElasticsearchUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type GetServiceGrafana struct {
}

// GetServiceGrafanaInput is an input type that accepts GetServiceGrafanaArgs and GetServiceGrafanaOutput values.
// You can construct a concrete instance of `GetServiceGrafanaInput` via:
//
//          GetServiceGrafanaArgs{...}
type GetServiceGrafanaInput interface {
	pulumi.Input

	ToGetServiceGrafanaOutput() GetServiceGrafanaOutput
	ToGetServiceGrafanaOutputWithContext(context.Context) GetServiceGrafanaOutput
}

type GetServiceGrafanaArgs struct {
}

func (GetServiceGrafanaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGrafana)(nil)).Elem()
}

func (i GetServiceGrafanaArgs) ToGetServiceGrafanaOutput() GetServiceGrafanaOutput {
	return i.ToGetServiceGrafanaOutputWithContext(context.Background())
}

func (i GetServiceGrafanaArgs) ToGetServiceGrafanaOutputWithContext(ctx context.Context) GetServiceGrafanaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaOutput)
}

type GetServiceGrafanaOutput struct{ *pulumi.OutputState }

func (GetServiceGrafanaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGrafana)(nil)).Elem()
}

func (o GetServiceGrafanaOutput) ToGetServiceGrafanaOutput() GetServiceGrafanaOutput {
	return o
}

func (o GetServiceGrafanaOutput) ToGetServiceGrafanaOutputWithContext(ctx context.Context) GetServiceGrafanaOutput {
	return o
}

type GetServiceGrafanaUserConfig struct {
	AlertingEnabled              *string                                          `pulumi:"alertingEnabled"`
	AlertingErrorOrTimeout       *string                                          `pulumi:"alertingErrorOrTimeout"`
	AlertingNodataOrNullvalues   *string                                          `pulumi:"alertingNodataOrNullvalues"`
	AllowEmbedding               *string                                          `pulumi:"allowEmbedding"`
	AuthBasicEnabled             *string                                          `pulumi:"authBasicEnabled"`
	AuthGenericOauth             *GetServiceGrafanaUserConfigAuthGenericOauth     `pulumi:"authGenericOauth"`
	AuthGithub                   *GetServiceGrafanaUserConfigAuthGithub           `pulumi:"authGithub"`
	AuthGitlab                   *GetServiceGrafanaUserConfigAuthGitlab           `pulumi:"authGitlab"`
	AuthGoogle                   *GetServiceGrafanaUserConfigAuthGoogle           `pulumi:"authGoogle"`
	CookieSamesite               *string                                          `pulumi:"cookieSamesite"`
	CustomDomain                 *string                                          `pulumi:"customDomain"`
	DashboardsMinRefreshInterval *string                                          `pulumi:"dashboardsMinRefreshInterval"`
	DashboardsVersionsToKeep     *string                                          `pulumi:"dashboardsVersionsToKeep"`
	DataproxySendUserHeader      *string                                          `pulumi:"dataproxySendUserHeader"`
	DataproxyTimeout             *string                                          `pulumi:"dataproxyTimeout"`
	DisableGravatar              *string                                          `pulumi:"disableGravatar"`
	EditorsCanAdmin              *string                                          `pulumi:"editorsCanAdmin"`
	ExternalImageStorage         *GetServiceGrafanaUserConfigExternalImageStorage `pulumi:"externalImageStorage"`
	GoogleAnalyticsUaId          *string                                          `pulumi:"googleAnalyticsUaId"`
	IpFilters                    []string                                         `pulumi:"ipFilters"`
	MetricsEnabled               *string                                          `pulumi:"metricsEnabled"`
	PrivateAccess                *GetServiceGrafanaUserConfigPrivateAccess        `pulumi:"privateAccess"`
	PrivatelinkAccess            *GetServiceGrafanaUserConfigPrivatelinkAccess    `pulumi:"privatelinkAccess"`
	ProjectToForkFrom            *string                                          `pulumi:"projectToForkFrom"`
	PublicAccess                 *GetServiceGrafanaUserConfigPublicAccess         `pulumi:"publicAccess"`
	RecoveryBasebackupName       *string                                          `pulumi:"recoveryBasebackupName"`
	ServiceToForkFrom            *string                                          `pulumi:"serviceToForkFrom"`
	SmtpServer                   *GetServiceGrafanaUserConfigSmtpServer           `pulumi:"smtpServer"`
	UserAutoAssignOrg            *string                                          `pulumi:"userAutoAssignOrg"`
	UserAutoAssignOrgRole        *string                                          `pulumi:"userAutoAssignOrgRole"`
	ViewersCanEdit               *string                                          `pulumi:"viewersCanEdit"`
}

// GetServiceGrafanaUserConfigInput is an input type that accepts GetServiceGrafanaUserConfigArgs and GetServiceGrafanaUserConfigOutput values.
// You can construct a concrete instance of `GetServiceGrafanaUserConfigInput` via:
//
//          GetServiceGrafanaUserConfigArgs{...}
type GetServiceGrafanaUserConfigInput interface {
	pulumi.Input

	ToGetServiceGrafanaUserConfigOutput() GetServiceGrafanaUserConfigOutput
	ToGetServiceGrafanaUserConfigOutputWithContext(context.Context) GetServiceGrafanaUserConfigOutput
}

type GetServiceGrafanaUserConfigArgs struct {
	AlertingEnabled              pulumi.StringPtrInput                                   `pulumi:"alertingEnabled"`
	AlertingErrorOrTimeout       pulumi.StringPtrInput                                   `pulumi:"alertingErrorOrTimeout"`
	AlertingNodataOrNullvalues   pulumi.StringPtrInput                                   `pulumi:"alertingNodataOrNullvalues"`
	AllowEmbedding               pulumi.StringPtrInput                                   `pulumi:"allowEmbedding"`
	AuthBasicEnabled             pulumi.StringPtrInput                                   `pulumi:"authBasicEnabled"`
	AuthGenericOauth             GetServiceGrafanaUserConfigAuthGenericOauthPtrInput     `pulumi:"authGenericOauth"`
	AuthGithub                   GetServiceGrafanaUserConfigAuthGithubPtrInput           `pulumi:"authGithub"`
	AuthGitlab                   GetServiceGrafanaUserConfigAuthGitlabPtrInput           `pulumi:"authGitlab"`
	AuthGoogle                   GetServiceGrafanaUserConfigAuthGooglePtrInput           `pulumi:"authGoogle"`
	CookieSamesite               pulumi.StringPtrInput                                   `pulumi:"cookieSamesite"`
	CustomDomain                 pulumi.StringPtrInput                                   `pulumi:"customDomain"`
	DashboardsMinRefreshInterval pulumi.StringPtrInput                                   `pulumi:"dashboardsMinRefreshInterval"`
	DashboardsVersionsToKeep     pulumi.StringPtrInput                                   `pulumi:"dashboardsVersionsToKeep"`
	DataproxySendUserHeader      pulumi.StringPtrInput                                   `pulumi:"dataproxySendUserHeader"`
	DataproxyTimeout             pulumi.StringPtrInput                                   `pulumi:"dataproxyTimeout"`
	DisableGravatar              pulumi.StringPtrInput                                   `pulumi:"disableGravatar"`
	EditorsCanAdmin              pulumi.StringPtrInput                                   `pulumi:"editorsCanAdmin"`
	ExternalImageStorage         GetServiceGrafanaUserConfigExternalImageStoragePtrInput `pulumi:"externalImageStorage"`
	GoogleAnalyticsUaId          pulumi.StringPtrInput                                   `pulumi:"googleAnalyticsUaId"`
	IpFilters                    pulumi.StringArrayInput                                 `pulumi:"ipFilters"`
	MetricsEnabled               pulumi.StringPtrInput                                   `pulumi:"metricsEnabled"`
	PrivateAccess                GetServiceGrafanaUserConfigPrivateAccessPtrInput        `pulumi:"privateAccess"`
	PrivatelinkAccess            GetServiceGrafanaUserConfigPrivatelinkAccessPtrInput    `pulumi:"privatelinkAccess"`
	ProjectToForkFrom            pulumi.StringPtrInput                                   `pulumi:"projectToForkFrom"`
	PublicAccess                 GetServiceGrafanaUserConfigPublicAccessPtrInput         `pulumi:"publicAccess"`
	RecoveryBasebackupName       pulumi.StringPtrInput                                   `pulumi:"recoveryBasebackupName"`
	ServiceToForkFrom            pulumi.StringPtrInput                                   `pulumi:"serviceToForkFrom"`
	SmtpServer                   GetServiceGrafanaUserConfigSmtpServerPtrInput           `pulumi:"smtpServer"`
	UserAutoAssignOrg            pulumi.StringPtrInput                                   `pulumi:"userAutoAssignOrg"`
	UserAutoAssignOrgRole        pulumi.StringPtrInput                                   `pulumi:"userAutoAssignOrgRole"`
	ViewersCanEdit               pulumi.StringPtrInput                                   `pulumi:"viewersCanEdit"`
}

func (GetServiceGrafanaUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGrafanaUserConfig)(nil)).Elem()
}

func (i GetServiceGrafanaUserConfigArgs) ToGetServiceGrafanaUserConfigOutput() GetServiceGrafanaUserConfigOutput {
	return i.ToGetServiceGrafanaUserConfigOutputWithContext(context.Background())
}

func (i GetServiceGrafanaUserConfigArgs) ToGetServiceGrafanaUserConfigOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigOutput)
}

type GetServiceGrafanaUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceGrafanaUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGrafanaUserConfig)(nil)).Elem()
}

func (o GetServiceGrafanaUserConfigOutput) ToGetServiceGrafanaUserConfigOutput() GetServiceGrafanaUserConfigOutput {
	return o
}

func (o GetServiceGrafanaUserConfigOutput) ToGetServiceGrafanaUserConfigOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigOutput {
	return o
}

func (o GetServiceGrafanaUserConfigOutput) AlertingEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *string { return v.AlertingEnabled }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) AlertingErrorOrTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *string { return v.AlertingErrorOrTimeout }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) AlertingNodataOrNullvalues() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *string { return v.AlertingNodataOrNullvalues }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) AllowEmbedding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *string { return v.AllowEmbedding }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) AuthBasicEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *string { return v.AuthBasicEnabled }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) AuthGenericOauth() GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *GetServiceGrafanaUserConfigAuthGenericOauth {
		return v.AuthGenericOauth
	}).(GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) AuthGithub() GetServiceGrafanaUserConfigAuthGithubPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *GetServiceGrafanaUserConfigAuthGithub { return v.AuthGithub }).(GetServiceGrafanaUserConfigAuthGithubPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) AuthGitlab() GetServiceGrafanaUserConfigAuthGitlabPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *GetServiceGrafanaUserConfigAuthGitlab { return v.AuthGitlab }).(GetServiceGrafanaUserConfigAuthGitlabPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) AuthGoogle() GetServiceGrafanaUserConfigAuthGooglePtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *GetServiceGrafanaUserConfigAuthGoogle { return v.AuthGoogle }).(GetServiceGrafanaUserConfigAuthGooglePtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) CookieSamesite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *string { return v.CookieSamesite }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *string { return v.CustomDomain }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) DashboardsMinRefreshInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *string { return v.DashboardsMinRefreshInterval }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) DashboardsVersionsToKeep() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *string { return v.DashboardsVersionsToKeep }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) DataproxySendUserHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *string { return v.DataproxySendUserHeader }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) DataproxyTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *string { return v.DataproxyTimeout }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) DisableGravatar() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *string { return v.DisableGravatar }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) EditorsCanAdmin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *string { return v.EditorsCanAdmin }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) ExternalImageStorage() GetServiceGrafanaUserConfigExternalImageStoragePtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *GetServiceGrafanaUserConfigExternalImageStorage {
		return v.ExternalImageStorage
	}).(GetServiceGrafanaUserConfigExternalImageStoragePtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) GoogleAnalyticsUaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *string { return v.GoogleAnalyticsUaId }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

func (o GetServiceGrafanaUserConfigOutput) MetricsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *string { return v.MetricsEnabled }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) PrivateAccess() GetServiceGrafanaUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *GetServiceGrafanaUserConfigPrivateAccess { return v.PrivateAccess }).(GetServiceGrafanaUserConfigPrivateAccessPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) PrivatelinkAccess() GetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *GetServiceGrafanaUserConfigPrivatelinkAccess {
		return v.PrivatelinkAccess
	}).(GetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) PublicAccess() GetServiceGrafanaUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *GetServiceGrafanaUserConfigPublicAccess { return v.PublicAccess }).(GetServiceGrafanaUserConfigPublicAccessPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) RecoveryBasebackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *string { return v.RecoveryBasebackupName }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) SmtpServer() GetServiceGrafanaUserConfigSmtpServerPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *GetServiceGrafanaUserConfigSmtpServer { return v.SmtpServer }).(GetServiceGrafanaUserConfigSmtpServerPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) UserAutoAssignOrg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *string { return v.UserAutoAssignOrg }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) UserAutoAssignOrgRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *string { return v.UserAutoAssignOrgRole }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigOutput) ViewersCanEdit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfig) *string { return v.ViewersCanEdit }).(pulumi.StringPtrOutput)
}

type GetServiceGrafanaUserConfigAuthGenericOauth struct {
	AllowSignUp          *string  `pulumi:"allowSignUp"`
	AllowedDomains       []string `pulumi:"allowedDomains"`
	AllowedOrganizations []string `pulumi:"allowedOrganizations"`
	ApiUrl               *string  `pulumi:"apiUrl"`
	AuthUrl              *string  `pulumi:"authUrl"`
	ClientId             *string  `pulumi:"clientId"`
	ClientSecret         *string  `pulumi:"clientSecret"`
	Name                 *string  `pulumi:"name"`
	Scopes               []string `pulumi:"scopes"`
	TokenUrl             *string  `pulumi:"tokenUrl"`
}

// GetServiceGrafanaUserConfigAuthGenericOauthInput is an input type that accepts GetServiceGrafanaUserConfigAuthGenericOauthArgs and GetServiceGrafanaUserConfigAuthGenericOauthOutput values.
// You can construct a concrete instance of `GetServiceGrafanaUserConfigAuthGenericOauthInput` via:
//
//          GetServiceGrafanaUserConfigAuthGenericOauthArgs{...}
type GetServiceGrafanaUserConfigAuthGenericOauthInput interface {
	pulumi.Input

	ToGetServiceGrafanaUserConfigAuthGenericOauthOutput() GetServiceGrafanaUserConfigAuthGenericOauthOutput
	ToGetServiceGrafanaUserConfigAuthGenericOauthOutputWithContext(context.Context) GetServiceGrafanaUserConfigAuthGenericOauthOutput
}

type GetServiceGrafanaUserConfigAuthGenericOauthArgs struct {
	AllowSignUp          pulumi.StringPtrInput   `pulumi:"allowSignUp"`
	AllowedDomains       pulumi.StringArrayInput `pulumi:"allowedDomains"`
	AllowedOrganizations pulumi.StringArrayInput `pulumi:"allowedOrganizations"`
	ApiUrl               pulumi.StringPtrInput   `pulumi:"apiUrl"`
	AuthUrl              pulumi.StringPtrInput   `pulumi:"authUrl"`
	ClientId             pulumi.StringPtrInput   `pulumi:"clientId"`
	ClientSecret         pulumi.StringPtrInput   `pulumi:"clientSecret"`
	Name                 pulumi.StringPtrInput   `pulumi:"name"`
	Scopes               pulumi.StringArrayInput `pulumi:"scopes"`
	TokenUrl             pulumi.StringPtrInput   `pulumi:"tokenUrl"`
}

func (GetServiceGrafanaUserConfigAuthGenericOauthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGrafanaUserConfigAuthGenericOauth)(nil)).Elem()
}

func (i GetServiceGrafanaUserConfigAuthGenericOauthArgs) ToGetServiceGrafanaUserConfigAuthGenericOauthOutput() GetServiceGrafanaUserConfigAuthGenericOauthOutput {
	return i.ToGetServiceGrafanaUserConfigAuthGenericOauthOutputWithContext(context.Background())
}

func (i GetServiceGrafanaUserConfigAuthGenericOauthArgs) ToGetServiceGrafanaUserConfigAuthGenericOauthOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigAuthGenericOauthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigAuthGenericOauthOutput)
}

func (i GetServiceGrafanaUserConfigAuthGenericOauthArgs) ToGetServiceGrafanaUserConfigAuthGenericOauthPtrOutput() GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput {
	return i.ToGetServiceGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(context.Background())
}

func (i GetServiceGrafanaUserConfigAuthGenericOauthArgs) ToGetServiceGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigAuthGenericOauthOutput).ToGetServiceGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(ctx)
}

// GetServiceGrafanaUserConfigAuthGenericOauthPtrInput is an input type that accepts GetServiceGrafanaUserConfigAuthGenericOauthArgs, GetServiceGrafanaUserConfigAuthGenericOauthPtr and GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput values.
// You can construct a concrete instance of `GetServiceGrafanaUserConfigAuthGenericOauthPtrInput` via:
//
//          GetServiceGrafanaUserConfigAuthGenericOauthArgs{...}
//
//  or:
//
//          nil
type GetServiceGrafanaUserConfigAuthGenericOauthPtrInput interface {
	pulumi.Input

	ToGetServiceGrafanaUserConfigAuthGenericOauthPtrOutput() GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput
	ToGetServiceGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(context.Context) GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput
}

type getServiceGrafanaUserConfigAuthGenericOauthPtrType GetServiceGrafanaUserConfigAuthGenericOauthArgs

func GetServiceGrafanaUserConfigAuthGenericOauthPtr(v *GetServiceGrafanaUserConfigAuthGenericOauthArgs) GetServiceGrafanaUserConfigAuthGenericOauthPtrInput {
	return (*getServiceGrafanaUserConfigAuthGenericOauthPtrType)(v)
}

func (*getServiceGrafanaUserConfigAuthGenericOauthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceGrafanaUserConfigAuthGenericOauth)(nil)).Elem()
}

func (i *getServiceGrafanaUserConfigAuthGenericOauthPtrType) ToGetServiceGrafanaUserConfigAuthGenericOauthPtrOutput() GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput {
	return i.ToGetServiceGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(context.Background())
}

func (i *getServiceGrafanaUserConfigAuthGenericOauthPtrType) ToGetServiceGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput)
}

type GetServiceGrafanaUserConfigAuthGenericOauthOutput struct{ *pulumi.OutputState }

func (GetServiceGrafanaUserConfigAuthGenericOauthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGrafanaUserConfigAuthGenericOauth)(nil)).Elem()
}

func (o GetServiceGrafanaUserConfigAuthGenericOauthOutput) ToGetServiceGrafanaUserConfigAuthGenericOauthOutput() GetServiceGrafanaUserConfigAuthGenericOauthOutput {
	return o
}

func (o GetServiceGrafanaUserConfigAuthGenericOauthOutput) ToGetServiceGrafanaUserConfigAuthGenericOauthOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigAuthGenericOauthOutput {
	return o
}

func (o GetServiceGrafanaUserConfigAuthGenericOauthOutput) ToGetServiceGrafanaUserConfigAuthGenericOauthPtrOutput() GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput {
	return o.ToGetServiceGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(context.Background())
}

func (o GetServiceGrafanaUserConfigAuthGenericOauthOutput) ToGetServiceGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGenericOauth) *GetServiceGrafanaUserConfigAuthGenericOauth {
		return &v
	}).(GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput)
}
func (o GetServiceGrafanaUserConfigAuthGenericOauthOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGenericOauth) *string { return v.AllowSignUp }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGenericOauthOutput) AllowedDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGenericOauth) []string { return v.AllowedDomains }).(pulumi.StringArrayOutput)
}

func (o GetServiceGrafanaUserConfigAuthGenericOauthOutput) AllowedOrganizations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGenericOauth) []string { return v.AllowedOrganizations }).(pulumi.StringArrayOutput)
}

func (o GetServiceGrafanaUserConfigAuthGenericOauthOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGenericOauth) *string { return v.ApiUrl }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGenericOauthOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGenericOauth) *string { return v.AuthUrl }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGenericOauthOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGenericOauth) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGenericOauthOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGenericOauth) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGenericOauthOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGenericOauth) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGenericOauthOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGenericOauth) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

func (o GetServiceGrafanaUserConfigAuthGenericOauthOutput) TokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGenericOauth) *string { return v.TokenUrl }).(pulumi.StringPtrOutput)
}

type GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput struct{ *pulumi.OutputState }

func (GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceGrafanaUserConfigAuthGenericOauth)(nil)).Elem()
}

func (o GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput) ToGetServiceGrafanaUserConfigAuthGenericOauthPtrOutput() GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput {
	return o
}

func (o GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput) ToGetServiceGrafanaUserConfigAuthGenericOauthPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput {
	return o
}

func (o GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput) Elem() GetServiceGrafanaUserConfigAuthGenericOauthOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGenericOauth) GetServiceGrafanaUserConfigAuthGenericOauth {
		return *v
	}).(GetServiceGrafanaUserConfigAuthGenericOauthOutput)
}

func (o GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.AllowSignUp
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput) AllowedDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGenericOauth) []string {
		if v == nil {
			return nil
		}
		return v.AllowedDomains
	}).(pulumi.StringArrayOutput)
}

func (o GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput) AllowedOrganizations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGenericOauth) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrganizations
	}).(pulumi.StringArrayOutput)
}

func (o GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.ApiUrl
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.AuthUrl
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGenericOauth) []string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringArrayOutput)
}

func (o GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput) TokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGenericOauth) *string {
		if v == nil {
			return nil
		}
		return v.TokenUrl
	}).(pulumi.StringPtrOutput)
}

type GetServiceGrafanaUserConfigAuthGithub struct {
	AllowSignUp          *string  `pulumi:"allowSignUp"`
	AllowedOrganizations []string `pulumi:"allowedOrganizations"`
	ClientId             *string  `pulumi:"clientId"`
	ClientSecret         *string  `pulumi:"clientSecret"`
	TeamIds              []string `pulumi:"teamIds"`
}

// GetServiceGrafanaUserConfigAuthGithubInput is an input type that accepts GetServiceGrafanaUserConfigAuthGithubArgs and GetServiceGrafanaUserConfigAuthGithubOutput values.
// You can construct a concrete instance of `GetServiceGrafanaUserConfigAuthGithubInput` via:
//
//          GetServiceGrafanaUserConfigAuthGithubArgs{...}
type GetServiceGrafanaUserConfigAuthGithubInput interface {
	pulumi.Input

	ToGetServiceGrafanaUserConfigAuthGithubOutput() GetServiceGrafanaUserConfigAuthGithubOutput
	ToGetServiceGrafanaUserConfigAuthGithubOutputWithContext(context.Context) GetServiceGrafanaUserConfigAuthGithubOutput
}

type GetServiceGrafanaUserConfigAuthGithubArgs struct {
	AllowSignUp          pulumi.StringPtrInput   `pulumi:"allowSignUp"`
	AllowedOrganizations pulumi.StringArrayInput `pulumi:"allowedOrganizations"`
	ClientId             pulumi.StringPtrInput   `pulumi:"clientId"`
	ClientSecret         pulumi.StringPtrInput   `pulumi:"clientSecret"`
	TeamIds              pulumi.StringArrayInput `pulumi:"teamIds"`
}

func (GetServiceGrafanaUserConfigAuthGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGrafanaUserConfigAuthGithub)(nil)).Elem()
}

func (i GetServiceGrafanaUserConfigAuthGithubArgs) ToGetServiceGrafanaUserConfigAuthGithubOutput() GetServiceGrafanaUserConfigAuthGithubOutput {
	return i.ToGetServiceGrafanaUserConfigAuthGithubOutputWithContext(context.Background())
}

func (i GetServiceGrafanaUserConfigAuthGithubArgs) ToGetServiceGrafanaUserConfigAuthGithubOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigAuthGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigAuthGithubOutput)
}

func (i GetServiceGrafanaUserConfigAuthGithubArgs) ToGetServiceGrafanaUserConfigAuthGithubPtrOutput() GetServiceGrafanaUserConfigAuthGithubPtrOutput {
	return i.ToGetServiceGrafanaUserConfigAuthGithubPtrOutputWithContext(context.Background())
}

func (i GetServiceGrafanaUserConfigAuthGithubArgs) ToGetServiceGrafanaUserConfigAuthGithubPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigAuthGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigAuthGithubOutput).ToGetServiceGrafanaUserConfigAuthGithubPtrOutputWithContext(ctx)
}

// GetServiceGrafanaUserConfigAuthGithubPtrInput is an input type that accepts GetServiceGrafanaUserConfigAuthGithubArgs, GetServiceGrafanaUserConfigAuthGithubPtr and GetServiceGrafanaUserConfigAuthGithubPtrOutput values.
// You can construct a concrete instance of `GetServiceGrafanaUserConfigAuthGithubPtrInput` via:
//
//          GetServiceGrafanaUserConfigAuthGithubArgs{...}
//
//  or:
//
//          nil
type GetServiceGrafanaUserConfigAuthGithubPtrInput interface {
	pulumi.Input

	ToGetServiceGrafanaUserConfigAuthGithubPtrOutput() GetServiceGrafanaUserConfigAuthGithubPtrOutput
	ToGetServiceGrafanaUserConfigAuthGithubPtrOutputWithContext(context.Context) GetServiceGrafanaUserConfigAuthGithubPtrOutput
}

type getServiceGrafanaUserConfigAuthGithubPtrType GetServiceGrafanaUserConfigAuthGithubArgs

func GetServiceGrafanaUserConfigAuthGithubPtr(v *GetServiceGrafanaUserConfigAuthGithubArgs) GetServiceGrafanaUserConfigAuthGithubPtrInput {
	return (*getServiceGrafanaUserConfigAuthGithubPtrType)(v)
}

func (*getServiceGrafanaUserConfigAuthGithubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceGrafanaUserConfigAuthGithub)(nil)).Elem()
}

func (i *getServiceGrafanaUserConfigAuthGithubPtrType) ToGetServiceGrafanaUserConfigAuthGithubPtrOutput() GetServiceGrafanaUserConfigAuthGithubPtrOutput {
	return i.ToGetServiceGrafanaUserConfigAuthGithubPtrOutputWithContext(context.Background())
}

func (i *getServiceGrafanaUserConfigAuthGithubPtrType) ToGetServiceGrafanaUserConfigAuthGithubPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigAuthGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigAuthGithubPtrOutput)
}

type GetServiceGrafanaUserConfigAuthGithubOutput struct{ *pulumi.OutputState }

func (GetServiceGrafanaUserConfigAuthGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGrafanaUserConfigAuthGithub)(nil)).Elem()
}

func (o GetServiceGrafanaUserConfigAuthGithubOutput) ToGetServiceGrafanaUserConfigAuthGithubOutput() GetServiceGrafanaUserConfigAuthGithubOutput {
	return o
}

func (o GetServiceGrafanaUserConfigAuthGithubOutput) ToGetServiceGrafanaUserConfigAuthGithubOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigAuthGithubOutput {
	return o
}

func (o GetServiceGrafanaUserConfigAuthGithubOutput) ToGetServiceGrafanaUserConfigAuthGithubPtrOutput() GetServiceGrafanaUserConfigAuthGithubPtrOutput {
	return o.ToGetServiceGrafanaUserConfigAuthGithubPtrOutputWithContext(context.Background())
}

func (o GetServiceGrafanaUserConfigAuthGithubOutput) ToGetServiceGrafanaUserConfigAuthGithubPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigAuthGithubPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGithub) *GetServiceGrafanaUserConfigAuthGithub {
		return &v
	}).(GetServiceGrafanaUserConfigAuthGithubPtrOutput)
}
func (o GetServiceGrafanaUserConfigAuthGithubOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGithub) *string { return v.AllowSignUp }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGithubOutput) AllowedOrganizations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGithub) []string { return v.AllowedOrganizations }).(pulumi.StringArrayOutput)
}

func (o GetServiceGrafanaUserConfigAuthGithubOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGithub) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGithubOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGithub) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGithubOutput) TeamIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGithub) []string { return v.TeamIds }).(pulumi.StringArrayOutput)
}

type GetServiceGrafanaUserConfigAuthGithubPtrOutput struct{ *pulumi.OutputState }

func (GetServiceGrafanaUserConfigAuthGithubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceGrafanaUserConfigAuthGithub)(nil)).Elem()
}

func (o GetServiceGrafanaUserConfigAuthGithubPtrOutput) ToGetServiceGrafanaUserConfigAuthGithubPtrOutput() GetServiceGrafanaUserConfigAuthGithubPtrOutput {
	return o
}

func (o GetServiceGrafanaUserConfigAuthGithubPtrOutput) ToGetServiceGrafanaUserConfigAuthGithubPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigAuthGithubPtrOutput {
	return o
}

func (o GetServiceGrafanaUserConfigAuthGithubPtrOutput) Elem() GetServiceGrafanaUserConfigAuthGithubOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGithub) GetServiceGrafanaUserConfigAuthGithub { return *v }).(GetServiceGrafanaUserConfigAuthGithubOutput)
}

func (o GetServiceGrafanaUserConfigAuthGithubPtrOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGithub) *string {
		if v == nil {
			return nil
		}
		return v.AllowSignUp
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGithubPtrOutput) AllowedOrganizations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGithub) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrganizations
	}).(pulumi.StringArrayOutput)
}

func (o GetServiceGrafanaUserConfigAuthGithubPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGithub) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGithubPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGithub) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGithubPtrOutput) TeamIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGithub) []string {
		if v == nil {
			return nil
		}
		return v.TeamIds
	}).(pulumi.StringArrayOutput)
}

type GetServiceGrafanaUserConfigAuthGitlab struct {
	AllowSignUp   *string  `pulumi:"allowSignUp"`
	AllowedGroups []string `pulumi:"allowedGroups"`
	ApiUrl        *string  `pulumi:"apiUrl"`
	AuthUrl       *string  `pulumi:"authUrl"`
	ClientId      *string  `pulumi:"clientId"`
	ClientSecret  *string  `pulumi:"clientSecret"`
	TokenUrl      *string  `pulumi:"tokenUrl"`
}

// GetServiceGrafanaUserConfigAuthGitlabInput is an input type that accepts GetServiceGrafanaUserConfigAuthGitlabArgs and GetServiceGrafanaUserConfigAuthGitlabOutput values.
// You can construct a concrete instance of `GetServiceGrafanaUserConfigAuthGitlabInput` via:
//
//          GetServiceGrafanaUserConfigAuthGitlabArgs{...}
type GetServiceGrafanaUserConfigAuthGitlabInput interface {
	pulumi.Input

	ToGetServiceGrafanaUserConfigAuthGitlabOutput() GetServiceGrafanaUserConfigAuthGitlabOutput
	ToGetServiceGrafanaUserConfigAuthGitlabOutputWithContext(context.Context) GetServiceGrafanaUserConfigAuthGitlabOutput
}

type GetServiceGrafanaUserConfigAuthGitlabArgs struct {
	AllowSignUp   pulumi.StringPtrInput   `pulumi:"allowSignUp"`
	AllowedGroups pulumi.StringArrayInput `pulumi:"allowedGroups"`
	ApiUrl        pulumi.StringPtrInput   `pulumi:"apiUrl"`
	AuthUrl       pulumi.StringPtrInput   `pulumi:"authUrl"`
	ClientId      pulumi.StringPtrInput   `pulumi:"clientId"`
	ClientSecret  pulumi.StringPtrInput   `pulumi:"clientSecret"`
	TokenUrl      pulumi.StringPtrInput   `pulumi:"tokenUrl"`
}

func (GetServiceGrafanaUserConfigAuthGitlabArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGrafanaUserConfigAuthGitlab)(nil)).Elem()
}

func (i GetServiceGrafanaUserConfigAuthGitlabArgs) ToGetServiceGrafanaUserConfigAuthGitlabOutput() GetServiceGrafanaUserConfigAuthGitlabOutput {
	return i.ToGetServiceGrafanaUserConfigAuthGitlabOutputWithContext(context.Background())
}

func (i GetServiceGrafanaUserConfigAuthGitlabArgs) ToGetServiceGrafanaUserConfigAuthGitlabOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigAuthGitlabOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigAuthGitlabOutput)
}

func (i GetServiceGrafanaUserConfigAuthGitlabArgs) ToGetServiceGrafanaUserConfigAuthGitlabPtrOutput() GetServiceGrafanaUserConfigAuthGitlabPtrOutput {
	return i.ToGetServiceGrafanaUserConfigAuthGitlabPtrOutputWithContext(context.Background())
}

func (i GetServiceGrafanaUserConfigAuthGitlabArgs) ToGetServiceGrafanaUserConfigAuthGitlabPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigAuthGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigAuthGitlabOutput).ToGetServiceGrafanaUserConfigAuthGitlabPtrOutputWithContext(ctx)
}

// GetServiceGrafanaUserConfigAuthGitlabPtrInput is an input type that accepts GetServiceGrafanaUserConfigAuthGitlabArgs, GetServiceGrafanaUserConfigAuthGitlabPtr and GetServiceGrafanaUserConfigAuthGitlabPtrOutput values.
// You can construct a concrete instance of `GetServiceGrafanaUserConfigAuthGitlabPtrInput` via:
//
//          GetServiceGrafanaUserConfigAuthGitlabArgs{...}
//
//  or:
//
//          nil
type GetServiceGrafanaUserConfigAuthGitlabPtrInput interface {
	pulumi.Input

	ToGetServiceGrafanaUserConfigAuthGitlabPtrOutput() GetServiceGrafanaUserConfigAuthGitlabPtrOutput
	ToGetServiceGrafanaUserConfigAuthGitlabPtrOutputWithContext(context.Context) GetServiceGrafanaUserConfigAuthGitlabPtrOutput
}

type getServiceGrafanaUserConfigAuthGitlabPtrType GetServiceGrafanaUserConfigAuthGitlabArgs

func GetServiceGrafanaUserConfigAuthGitlabPtr(v *GetServiceGrafanaUserConfigAuthGitlabArgs) GetServiceGrafanaUserConfigAuthGitlabPtrInput {
	return (*getServiceGrafanaUserConfigAuthGitlabPtrType)(v)
}

func (*getServiceGrafanaUserConfigAuthGitlabPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceGrafanaUserConfigAuthGitlab)(nil)).Elem()
}

func (i *getServiceGrafanaUserConfigAuthGitlabPtrType) ToGetServiceGrafanaUserConfigAuthGitlabPtrOutput() GetServiceGrafanaUserConfigAuthGitlabPtrOutput {
	return i.ToGetServiceGrafanaUserConfigAuthGitlabPtrOutputWithContext(context.Background())
}

func (i *getServiceGrafanaUserConfigAuthGitlabPtrType) ToGetServiceGrafanaUserConfigAuthGitlabPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigAuthGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigAuthGitlabPtrOutput)
}

type GetServiceGrafanaUserConfigAuthGitlabOutput struct{ *pulumi.OutputState }

func (GetServiceGrafanaUserConfigAuthGitlabOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGrafanaUserConfigAuthGitlab)(nil)).Elem()
}

func (o GetServiceGrafanaUserConfigAuthGitlabOutput) ToGetServiceGrafanaUserConfigAuthGitlabOutput() GetServiceGrafanaUserConfigAuthGitlabOutput {
	return o
}

func (o GetServiceGrafanaUserConfigAuthGitlabOutput) ToGetServiceGrafanaUserConfigAuthGitlabOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigAuthGitlabOutput {
	return o
}

func (o GetServiceGrafanaUserConfigAuthGitlabOutput) ToGetServiceGrafanaUserConfigAuthGitlabPtrOutput() GetServiceGrafanaUserConfigAuthGitlabPtrOutput {
	return o.ToGetServiceGrafanaUserConfigAuthGitlabPtrOutputWithContext(context.Background())
}

func (o GetServiceGrafanaUserConfigAuthGitlabOutput) ToGetServiceGrafanaUserConfigAuthGitlabPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigAuthGitlabPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGitlab) *GetServiceGrafanaUserConfigAuthGitlab {
		return &v
	}).(GetServiceGrafanaUserConfigAuthGitlabPtrOutput)
}
func (o GetServiceGrafanaUserConfigAuthGitlabOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGitlab) *string { return v.AllowSignUp }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGitlabOutput) AllowedGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGitlab) []string { return v.AllowedGroups }).(pulumi.StringArrayOutput)
}

func (o GetServiceGrafanaUserConfigAuthGitlabOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGitlab) *string { return v.ApiUrl }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGitlabOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGitlab) *string { return v.AuthUrl }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGitlabOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGitlab) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGitlabOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGitlab) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGitlabOutput) TokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGitlab) *string { return v.TokenUrl }).(pulumi.StringPtrOutput)
}

type GetServiceGrafanaUserConfigAuthGitlabPtrOutput struct{ *pulumi.OutputState }

func (GetServiceGrafanaUserConfigAuthGitlabPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceGrafanaUserConfigAuthGitlab)(nil)).Elem()
}

func (o GetServiceGrafanaUserConfigAuthGitlabPtrOutput) ToGetServiceGrafanaUserConfigAuthGitlabPtrOutput() GetServiceGrafanaUserConfigAuthGitlabPtrOutput {
	return o
}

func (o GetServiceGrafanaUserConfigAuthGitlabPtrOutput) ToGetServiceGrafanaUserConfigAuthGitlabPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigAuthGitlabPtrOutput {
	return o
}

func (o GetServiceGrafanaUserConfigAuthGitlabPtrOutput) Elem() GetServiceGrafanaUserConfigAuthGitlabOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGitlab) GetServiceGrafanaUserConfigAuthGitlab { return *v }).(GetServiceGrafanaUserConfigAuthGitlabOutput)
}

func (o GetServiceGrafanaUserConfigAuthGitlabPtrOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGitlab) *string {
		if v == nil {
			return nil
		}
		return v.AllowSignUp
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGitlabPtrOutput) AllowedGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGitlab) []string {
		if v == nil {
			return nil
		}
		return v.AllowedGroups
	}).(pulumi.StringArrayOutput)
}

func (o GetServiceGrafanaUserConfigAuthGitlabPtrOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGitlab) *string {
		if v == nil {
			return nil
		}
		return v.ApiUrl
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGitlabPtrOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGitlab) *string {
		if v == nil {
			return nil
		}
		return v.AuthUrl
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGitlabPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGitlab) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGitlabPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGitlab) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGitlabPtrOutput) TokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGitlab) *string {
		if v == nil {
			return nil
		}
		return v.TokenUrl
	}).(pulumi.StringPtrOutput)
}

type GetServiceGrafanaUserConfigAuthGoogle struct {
	AllowSignUp    *string  `pulumi:"allowSignUp"`
	AllowedDomains []string `pulumi:"allowedDomains"`
	ClientId       *string  `pulumi:"clientId"`
	ClientSecret   *string  `pulumi:"clientSecret"`
}

// GetServiceGrafanaUserConfigAuthGoogleInput is an input type that accepts GetServiceGrafanaUserConfigAuthGoogleArgs and GetServiceGrafanaUserConfigAuthGoogleOutput values.
// You can construct a concrete instance of `GetServiceGrafanaUserConfigAuthGoogleInput` via:
//
//          GetServiceGrafanaUserConfigAuthGoogleArgs{...}
type GetServiceGrafanaUserConfigAuthGoogleInput interface {
	pulumi.Input

	ToGetServiceGrafanaUserConfigAuthGoogleOutput() GetServiceGrafanaUserConfigAuthGoogleOutput
	ToGetServiceGrafanaUserConfigAuthGoogleOutputWithContext(context.Context) GetServiceGrafanaUserConfigAuthGoogleOutput
}

type GetServiceGrafanaUserConfigAuthGoogleArgs struct {
	AllowSignUp    pulumi.StringPtrInput   `pulumi:"allowSignUp"`
	AllowedDomains pulumi.StringArrayInput `pulumi:"allowedDomains"`
	ClientId       pulumi.StringPtrInput   `pulumi:"clientId"`
	ClientSecret   pulumi.StringPtrInput   `pulumi:"clientSecret"`
}

func (GetServiceGrafanaUserConfigAuthGoogleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGrafanaUserConfigAuthGoogle)(nil)).Elem()
}

func (i GetServiceGrafanaUserConfigAuthGoogleArgs) ToGetServiceGrafanaUserConfigAuthGoogleOutput() GetServiceGrafanaUserConfigAuthGoogleOutput {
	return i.ToGetServiceGrafanaUserConfigAuthGoogleOutputWithContext(context.Background())
}

func (i GetServiceGrafanaUserConfigAuthGoogleArgs) ToGetServiceGrafanaUserConfigAuthGoogleOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigAuthGoogleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigAuthGoogleOutput)
}

func (i GetServiceGrafanaUserConfigAuthGoogleArgs) ToGetServiceGrafanaUserConfigAuthGooglePtrOutput() GetServiceGrafanaUserConfigAuthGooglePtrOutput {
	return i.ToGetServiceGrafanaUserConfigAuthGooglePtrOutputWithContext(context.Background())
}

func (i GetServiceGrafanaUserConfigAuthGoogleArgs) ToGetServiceGrafanaUserConfigAuthGooglePtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigAuthGooglePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigAuthGoogleOutput).ToGetServiceGrafanaUserConfigAuthGooglePtrOutputWithContext(ctx)
}

// GetServiceGrafanaUserConfigAuthGooglePtrInput is an input type that accepts GetServiceGrafanaUserConfigAuthGoogleArgs, GetServiceGrafanaUserConfigAuthGooglePtr and GetServiceGrafanaUserConfigAuthGooglePtrOutput values.
// You can construct a concrete instance of `GetServiceGrafanaUserConfigAuthGooglePtrInput` via:
//
//          GetServiceGrafanaUserConfigAuthGoogleArgs{...}
//
//  or:
//
//          nil
type GetServiceGrafanaUserConfigAuthGooglePtrInput interface {
	pulumi.Input

	ToGetServiceGrafanaUserConfigAuthGooglePtrOutput() GetServiceGrafanaUserConfigAuthGooglePtrOutput
	ToGetServiceGrafanaUserConfigAuthGooglePtrOutputWithContext(context.Context) GetServiceGrafanaUserConfigAuthGooglePtrOutput
}

type getServiceGrafanaUserConfigAuthGooglePtrType GetServiceGrafanaUserConfigAuthGoogleArgs

func GetServiceGrafanaUserConfigAuthGooglePtr(v *GetServiceGrafanaUserConfigAuthGoogleArgs) GetServiceGrafanaUserConfigAuthGooglePtrInput {
	return (*getServiceGrafanaUserConfigAuthGooglePtrType)(v)
}

func (*getServiceGrafanaUserConfigAuthGooglePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceGrafanaUserConfigAuthGoogle)(nil)).Elem()
}

func (i *getServiceGrafanaUserConfigAuthGooglePtrType) ToGetServiceGrafanaUserConfigAuthGooglePtrOutput() GetServiceGrafanaUserConfigAuthGooglePtrOutput {
	return i.ToGetServiceGrafanaUserConfigAuthGooglePtrOutputWithContext(context.Background())
}

func (i *getServiceGrafanaUserConfigAuthGooglePtrType) ToGetServiceGrafanaUserConfigAuthGooglePtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigAuthGooglePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigAuthGooglePtrOutput)
}

type GetServiceGrafanaUserConfigAuthGoogleOutput struct{ *pulumi.OutputState }

func (GetServiceGrafanaUserConfigAuthGoogleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGrafanaUserConfigAuthGoogle)(nil)).Elem()
}

func (o GetServiceGrafanaUserConfigAuthGoogleOutput) ToGetServiceGrafanaUserConfigAuthGoogleOutput() GetServiceGrafanaUserConfigAuthGoogleOutput {
	return o
}

func (o GetServiceGrafanaUserConfigAuthGoogleOutput) ToGetServiceGrafanaUserConfigAuthGoogleOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigAuthGoogleOutput {
	return o
}

func (o GetServiceGrafanaUserConfigAuthGoogleOutput) ToGetServiceGrafanaUserConfigAuthGooglePtrOutput() GetServiceGrafanaUserConfigAuthGooglePtrOutput {
	return o.ToGetServiceGrafanaUserConfigAuthGooglePtrOutputWithContext(context.Background())
}

func (o GetServiceGrafanaUserConfigAuthGoogleOutput) ToGetServiceGrafanaUserConfigAuthGooglePtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigAuthGooglePtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGoogle) *GetServiceGrafanaUserConfigAuthGoogle {
		return &v
	}).(GetServiceGrafanaUserConfigAuthGooglePtrOutput)
}
func (o GetServiceGrafanaUserConfigAuthGoogleOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGoogle) *string { return v.AllowSignUp }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGoogleOutput) AllowedDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGoogle) []string { return v.AllowedDomains }).(pulumi.StringArrayOutput)
}

func (o GetServiceGrafanaUserConfigAuthGoogleOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGoogle) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGoogleOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigAuthGoogle) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

type GetServiceGrafanaUserConfigAuthGooglePtrOutput struct{ *pulumi.OutputState }

func (GetServiceGrafanaUserConfigAuthGooglePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceGrafanaUserConfigAuthGoogle)(nil)).Elem()
}

func (o GetServiceGrafanaUserConfigAuthGooglePtrOutput) ToGetServiceGrafanaUserConfigAuthGooglePtrOutput() GetServiceGrafanaUserConfigAuthGooglePtrOutput {
	return o
}

func (o GetServiceGrafanaUserConfigAuthGooglePtrOutput) ToGetServiceGrafanaUserConfigAuthGooglePtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigAuthGooglePtrOutput {
	return o
}

func (o GetServiceGrafanaUserConfigAuthGooglePtrOutput) Elem() GetServiceGrafanaUserConfigAuthGoogleOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGoogle) GetServiceGrafanaUserConfigAuthGoogle { return *v }).(GetServiceGrafanaUserConfigAuthGoogleOutput)
}

func (o GetServiceGrafanaUserConfigAuthGooglePtrOutput) AllowSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGoogle) *string {
		if v == nil {
			return nil
		}
		return v.AllowSignUp
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGooglePtrOutput) AllowedDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGoogle) []string {
		if v == nil {
			return nil
		}
		return v.AllowedDomains
	}).(pulumi.StringArrayOutput)
}

func (o GetServiceGrafanaUserConfigAuthGooglePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGoogle) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigAuthGooglePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigAuthGoogle) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

type GetServiceGrafanaUserConfigExternalImageStorage struct {
	AccessKey *string `pulumi:"accessKey"`
	BucketUrl *string `pulumi:"bucketUrl"`
	Provider  *string `pulumi:"provider"`
	SecretKey *string `pulumi:"secretKey"`
}

// GetServiceGrafanaUserConfigExternalImageStorageInput is an input type that accepts GetServiceGrafanaUserConfigExternalImageStorageArgs and GetServiceGrafanaUserConfigExternalImageStorageOutput values.
// You can construct a concrete instance of `GetServiceGrafanaUserConfigExternalImageStorageInput` via:
//
//          GetServiceGrafanaUserConfigExternalImageStorageArgs{...}
type GetServiceGrafanaUserConfigExternalImageStorageInput interface {
	pulumi.Input

	ToGetServiceGrafanaUserConfigExternalImageStorageOutput() GetServiceGrafanaUserConfigExternalImageStorageOutput
	ToGetServiceGrafanaUserConfigExternalImageStorageOutputWithContext(context.Context) GetServiceGrafanaUserConfigExternalImageStorageOutput
}

type GetServiceGrafanaUserConfigExternalImageStorageArgs struct {
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	BucketUrl pulumi.StringPtrInput `pulumi:"bucketUrl"`
	Provider  pulumi.StringPtrInput `pulumi:"provider"`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
}

func (GetServiceGrafanaUserConfigExternalImageStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGrafanaUserConfigExternalImageStorage)(nil)).Elem()
}

func (i GetServiceGrafanaUserConfigExternalImageStorageArgs) ToGetServiceGrafanaUserConfigExternalImageStorageOutput() GetServiceGrafanaUserConfigExternalImageStorageOutput {
	return i.ToGetServiceGrafanaUserConfigExternalImageStorageOutputWithContext(context.Background())
}

func (i GetServiceGrafanaUserConfigExternalImageStorageArgs) ToGetServiceGrafanaUserConfigExternalImageStorageOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigExternalImageStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigExternalImageStorageOutput)
}

func (i GetServiceGrafanaUserConfigExternalImageStorageArgs) ToGetServiceGrafanaUserConfigExternalImageStoragePtrOutput() GetServiceGrafanaUserConfigExternalImageStoragePtrOutput {
	return i.ToGetServiceGrafanaUserConfigExternalImageStoragePtrOutputWithContext(context.Background())
}

func (i GetServiceGrafanaUserConfigExternalImageStorageArgs) ToGetServiceGrafanaUserConfigExternalImageStoragePtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigExternalImageStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigExternalImageStorageOutput).ToGetServiceGrafanaUserConfigExternalImageStoragePtrOutputWithContext(ctx)
}

// GetServiceGrafanaUserConfigExternalImageStoragePtrInput is an input type that accepts GetServiceGrafanaUserConfigExternalImageStorageArgs, GetServiceGrafanaUserConfigExternalImageStoragePtr and GetServiceGrafanaUserConfigExternalImageStoragePtrOutput values.
// You can construct a concrete instance of `GetServiceGrafanaUserConfigExternalImageStoragePtrInput` via:
//
//          GetServiceGrafanaUserConfigExternalImageStorageArgs{...}
//
//  or:
//
//          nil
type GetServiceGrafanaUserConfigExternalImageStoragePtrInput interface {
	pulumi.Input

	ToGetServiceGrafanaUserConfigExternalImageStoragePtrOutput() GetServiceGrafanaUserConfigExternalImageStoragePtrOutput
	ToGetServiceGrafanaUserConfigExternalImageStoragePtrOutputWithContext(context.Context) GetServiceGrafanaUserConfigExternalImageStoragePtrOutput
}

type getServiceGrafanaUserConfigExternalImageStoragePtrType GetServiceGrafanaUserConfigExternalImageStorageArgs

func GetServiceGrafanaUserConfigExternalImageStoragePtr(v *GetServiceGrafanaUserConfigExternalImageStorageArgs) GetServiceGrafanaUserConfigExternalImageStoragePtrInput {
	return (*getServiceGrafanaUserConfigExternalImageStoragePtrType)(v)
}

func (*getServiceGrafanaUserConfigExternalImageStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceGrafanaUserConfigExternalImageStorage)(nil)).Elem()
}

func (i *getServiceGrafanaUserConfigExternalImageStoragePtrType) ToGetServiceGrafanaUserConfigExternalImageStoragePtrOutput() GetServiceGrafanaUserConfigExternalImageStoragePtrOutput {
	return i.ToGetServiceGrafanaUserConfigExternalImageStoragePtrOutputWithContext(context.Background())
}

func (i *getServiceGrafanaUserConfigExternalImageStoragePtrType) ToGetServiceGrafanaUserConfigExternalImageStoragePtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigExternalImageStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigExternalImageStoragePtrOutput)
}

type GetServiceGrafanaUserConfigExternalImageStorageOutput struct{ *pulumi.OutputState }

func (GetServiceGrafanaUserConfigExternalImageStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGrafanaUserConfigExternalImageStorage)(nil)).Elem()
}

func (o GetServiceGrafanaUserConfigExternalImageStorageOutput) ToGetServiceGrafanaUserConfigExternalImageStorageOutput() GetServiceGrafanaUserConfigExternalImageStorageOutput {
	return o
}

func (o GetServiceGrafanaUserConfigExternalImageStorageOutput) ToGetServiceGrafanaUserConfigExternalImageStorageOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigExternalImageStorageOutput {
	return o
}

func (o GetServiceGrafanaUserConfigExternalImageStorageOutput) ToGetServiceGrafanaUserConfigExternalImageStoragePtrOutput() GetServiceGrafanaUserConfigExternalImageStoragePtrOutput {
	return o.ToGetServiceGrafanaUserConfigExternalImageStoragePtrOutputWithContext(context.Background())
}

func (o GetServiceGrafanaUserConfigExternalImageStorageOutput) ToGetServiceGrafanaUserConfigExternalImageStoragePtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigExternalImageStoragePtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigExternalImageStorage) *GetServiceGrafanaUserConfigExternalImageStorage {
		return &v
	}).(GetServiceGrafanaUserConfigExternalImageStoragePtrOutput)
}
func (o GetServiceGrafanaUserConfigExternalImageStorageOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigExternalImageStorage) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigExternalImageStorageOutput) BucketUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigExternalImageStorage) *string { return v.BucketUrl }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigExternalImageStorageOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigExternalImageStorage) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigExternalImageStorageOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigExternalImageStorage) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

type GetServiceGrafanaUserConfigExternalImageStoragePtrOutput struct{ *pulumi.OutputState }

func (GetServiceGrafanaUserConfigExternalImageStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceGrafanaUserConfigExternalImageStorage)(nil)).Elem()
}

func (o GetServiceGrafanaUserConfigExternalImageStoragePtrOutput) ToGetServiceGrafanaUserConfigExternalImageStoragePtrOutput() GetServiceGrafanaUserConfigExternalImageStoragePtrOutput {
	return o
}

func (o GetServiceGrafanaUserConfigExternalImageStoragePtrOutput) ToGetServiceGrafanaUserConfigExternalImageStoragePtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigExternalImageStoragePtrOutput {
	return o
}

func (o GetServiceGrafanaUserConfigExternalImageStoragePtrOutput) Elem() GetServiceGrafanaUserConfigExternalImageStorageOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigExternalImageStorage) GetServiceGrafanaUserConfigExternalImageStorage {
		return *v
	}).(GetServiceGrafanaUserConfigExternalImageStorageOutput)
}

func (o GetServiceGrafanaUserConfigExternalImageStoragePtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigExternalImageStorage) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigExternalImageStoragePtrOutput) BucketUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigExternalImageStorage) *string {
		if v == nil {
			return nil
		}
		return v.BucketUrl
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigExternalImageStoragePtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigExternalImageStorage) *string {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigExternalImageStoragePtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigExternalImageStorage) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

type GetServiceGrafanaUserConfigPrivateAccess struct {
	Grafana *string `pulumi:"grafana"`
}

// GetServiceGrafanaUserConfigPrivateAccessInput is an input type that accepts GetServiceGrafanaUserConfigPrivateAccessArgs and GetServiceGrafanaUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `GetServiceGrafanaUserConfigPrivateAccessInput` via:
//
//          GetServiceGrafanaUserConfigPrivateAccessArgs{...}
type GetServiceGrafanaUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToGetServiceGrafanaUserConfigPrivateAccessOutput() GetServiceGrafanaUserConfigPrivateAccessOutput
	ToGetServiceGrafanaUserConfigPrivateAccessOutputWithContext(context.Context) GetServiceGrafanaUserConfigPrivateAccessOutput
}

type GetServiceGrafanaUserConfigPrivateAccessArgs struct {
	Grafana pulumi.StringPtrInput `pulumi:"grafana"`
}

func (GetServiceGrafanaUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGrafanaUserConfigPrivateAccess)(nil)).Elem()
}

func (i GetServiceGrafanaUserConfigPrivateAccessArgs) ToGetServiceGrafanaUserConfigPrivateAccessOutput() GetServiceGrafanaUserConfigPrivateAccessOutput {
	return i.ToGetServiceGrafanaUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i GetServiceGrafanaUserConfigPrivateAccessArgs) ToGetServiceGrafanaUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigPrivateAccessOutput)
}

func (i GetServiceGrafanaUserConfigPrivateAccessArgs) ToGetServiceGrafanaUserConfigPrivateAccessPtrOutput() GetServiceGrafanaUserConfigPrivateAccessPtrOutput {
	return i.ToGetServiceGrafanaUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i GetServiceGrafanaUserConfigPrivateAccessArgs) ToGetServiceGrafanaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigPrivateAccessOutput).ToGetServiceGrafanaUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// GetServiceGrafanaUserConfigPrivateAccessPtrInput is an input type that accepts GetServiceGrafanaUserConfigPrivateAccessArgs, GetServiceGrafanaUserConfigPrivateAccessPtr and GetServiceGrafanaUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `GetServiceGrafanaUserConfigPrivateAccessPtrInput` via:
//
//          GetServiceGrafanaUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type GetServiceGrafanaUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToGetServiceGrafanaUserConfigPrivateAccessPtrOutput() GetServiceGrafanaUserConfigPrivateAccessPtrOutput
	ToGetServiceGrafanaUserConfigPrivateAccessPtrOutputWithContext(context.Context) GetServiceGrafanaUserConfigPrivateAccessPtrOutput
}

type getServiceGrafanaUserConfigPrivateAccessPtrType GetServiceGrafanaUserConfigPrivateAccessArgs

func GetServiceGrafanaUserConfigPrivateAccessPtr(v *GetServiceGrafanaUserConfigPrivateAccessArgs) GetServiceGrafanaUserConfigPrivateAccessPtrInput {
	return (*getServiceGrafanaUserConfigPrivateAccessPtrType)(v)
}

func (*getServiceGrafanaUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceGrafanaUserConfigPrivateAccess)(nil)).Elem()
}

func (i *getServiceGrafanaUserConfigPrivateAccessPtrType) ToGetServiceGrafanaUserConfigPrivateAccessPtrOutput() GetServiceGrafanaUserConfigPrivateAccessPtrOutput {
	return i.ToGetServiceGrafanaUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *getServiceGrafanaUserConfigPrivateAccessPtrType) ToGetServiceGrafanaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigPrivateAccessPtrOutput)
}

type GetServiceGrafanaUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (GetServiceGrafanaUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGrafanaUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetServiceGrafanaUserConfigPrivateAccessOutput) ToGetServiceGrafanaUserConfigPrivateAccessOutput() GetServiceGrafanaUserConfigPrivateAccessOutput {
	return o
}

func (o GetServiceGrafanaUserConfigPrivateAccessOutput) ToGetServiceGrafanaUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigPrivateAccessOutput {
	return o
}

func (o GetServiceGrafanaUserConfigPrivateAccessOutput) ToGetServiceGrafanaUserConfigPrivateAccessPtrOutput() GetServiceGrafanaUserConfigPrivateAccessPtrOutput {
	return o.ToGetServiceGrafanaUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o GetServiceGrafanaUserConfigPrivateAccessOutput) ToGetServiceGrafanaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigPrivateAccess) *GetServiceGrafanaUserConfigPrivateAccess {
		return &v
	}).(GetServiceGrafanaUserConfigPrivateAccessPtrOutput)
}
func (o GetServiceGrafanaUserConfigPrivateAccessOutput) Grafana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigPrivateAccess) *string { return v.Grafana }).(pulumi.StringPtrOutput)
}

type GetServiceGrafanaUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (GetServiceGrafanaUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceGrafanaUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetServiceGrafanaUserConfigPrivateAccessPtrOutput) ToGetServiceGrafanaUserConfigPrivateAccessPtrOutput() GetServiceGrafanaUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetServiceGrafanaUserConfigPrivateAccessPtrOutput) ToGetServiceGrafanaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetServiceGrafanaUserConfigPrivateAccessPtrOutput) Elem() GetServiceGrafanaUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigPrivateAccess) GetServiceGrafanaUserConfigPrivateAccess { return *v }).(GetServiceGrafanaUserConfigPrivateAccessOutput)
}

func (o GetServiceGrafanaUserConfigPrivateAccessPtrOutput) Grafana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Grafana
	}).(pulumi.StringPtrOutput)
}

type GetServiceGrafanaUserConfigPrivatelinkAccess struct {
	Grafana *string `pulumi:"grafana"`
}

// GetServiceGrafanaUserConfigPrivatelinkAccessInput is an input type that accepts GetServiceGrafanaUserConfigPrivatelinkAccessArgs and GetServiceGrafanaUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `GetServiceGrafanaUserConfigPrivatelinkAccessInput` via:
//
//          GetServiceGrafanaUserConfigPrivatelinkAccessArgs{...}
type GetServiceGrafanaUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToGetServiceGrafanaUserConfigPrivatelinkAccessOutput() GetServiceGrafanaUserConfigPrivatelinkAccessOutput
	ToGetServiceGrafanaUserConfigPrivatelinkAccessOutputWithContext(context.Context) GetServiceGrafanaUserConfigPrivatelinkAccessOutput
}

type GetServiceGrafanaUserConfigPrivatelinkAccessArgs struct {
	Grafana pulumi.StringPtrInput `pulumi:"grafana"`
}

func (GetServiceGrafanaUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGrafanaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i GetServiceGrafanaUserConfigPrivatelinkAccessArgs) ToGetServiceGrafanaUserConfigPrivatelinkAccessOutput() GetServiceGrafanaUserConfigPrivatelinkAccessOutput {
	return i.ToGetServiceGrafanaUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i GetServiceGrafanaUserConfigPrivatelinkAccessArgs) ToGetServiceGrafanaUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigPrivatelinkAccessOutput)
}

func (i GetServiceGrafanaUserConfigPrivatelinkAccessArgs) ToGetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput() GetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetServiceGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i GetServiceGrafanaUserConfigPrivatelinkAccessArgs) ToGetServiceGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigPrivatelinkAccessOutput).ToGetServiceGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// GetServiceGrafanaUserConfigPrivatelinkAccessPtrInput is an input type that accepts GetServiceGrafanaUserConfigPrivatelinkAccessArgs, GetServiceGrafanaUserConfigPrivatelinkAccessPtr and GetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `GetServiceGrafanaUserConfigPrivatelinkAccessPtrInput` via:
//
//          GetServiceGrafanaUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type GetServiceGrafanaUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToGetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput() GetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput
	ToGetServiceGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) GetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput
}

type getServiceGrafanaUserConfigPrivatelinkAccessPtrType GetServiceGrafanaUserConfigPrivatelinkAccessArgs

func GetServiceGrafanaUserConfigPrivatelinkAccessPtr(v *GetServiceGrafanaUserConfigPrivatelinkAccessArgs) GetServiceGrafanaUserConfigPrivatelinkAccessPtrInput {
	return (*getServiceGrafanaUserConfigPrivatelinkAccessPtrType)(v)
}

func (*getServiceGrafanaUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceGrafanaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *getServiceGrafanaUserConfigPrivatelinkAccessPtrType) ToGetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput() GetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetServiceGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *getServiceGrafanaUserConfigPrivatelinkAccessPtrType) ToGetServiceGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput)
}

type GetServiceGrafanaUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (GetServiceGrafanaUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGrafanaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetServiceGrafanaUserConfigPrivatelinkAccessOutput) ToGetServiceGrafanaUserConfigPrivatelinkAccessOutput() GetServiceGrafanaUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetServiceGrafanaUserConfigPrivatelinkAccessOutput) ToGetServiceGrafanaUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetServiceGrafanaUserConfigPrivatelinkAccessOutput) ToGetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput() GetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return o.ToGetServiceGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o GetServiceGrafanaUserConfigPrivatelinkAccessOutput) ToGetServiceGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigPrivatelinkAccess) *GetServiceGrafanaUserConfigPrivatelinkAccess {
		return &v
	}).(GetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput)
}
func (o GetServiceGrafanaUserConfigPrivatelinkAccessOutput) Grafana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigPrivatelinkAccess) *string { return v.Grafana }).(pulumi.StringPtrOutput)
}

type GetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (GetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceGrafanaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput) ToGetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput() GetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput) ToGetServiceGrafanaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput) Elem() GetServiceGrafanaUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigPrivatelinkAccess) GetServiceGrafanaUserConfigPrivatelinkAccess {
		return *v
	}).(GetServiceGrafanaUserConfigPrivatelinkAccessOutput)
}

func (o GetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput) Grafana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Grafana
	}).(pulumi.StringPtrOutput)
}

type GetServiceGrafanaUserConfigPublicAccess struct {
	Grafana *string `pulumi:"grafana"`
}

// GetServiceGrafanaUserConfigPublicAccessInput is an input type that accepts GetServiceGrafanaUserConfigPublicAccessArgs and GetServiceGrafanaUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `GetServiceGrafanaUserConfigPublicAccessInput` via:
//
//          GetServiceGrafanaUserConfigPublicAccessArgs{...}
type GetServiceGrafanaUserConfigPublicAccessInput interface {
	pulumi.Input

	ToGetServiceGrafanaUserConfigPublicAccessOutput() GetServiceGrafanaUserConfigPublicAccessOutput
	ToGetServiceGrafanaUserConfigPublicAccessOutputWithContext(context.Context) GetServiceGrafanaUserConfigPublicAccessOutput
}

type GetServiceGrafanaUserConfigPublicAccessArgs struct {
	Grafana pulumi.StringPtrInput `pulumi:"grafana"`
}

func (GetServiceGrafanaUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGrafanaUserConfigPublicAccess)(nil)).Elem()
}

func (i GetServiceGrafanaUserConfigPublicAccessArgs) ToGetServiceGrafanaUserConfigPublicAccessOutput() GetServiceGrafanaUserConfigPublicAccessOutput {
	return i.ToGetServiceGrafanaUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i GetServiceGrafanaUserConfigPublicAccessArgs) ToGetServiceGrafanaUserConfigPublicAccessOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigPublicAccessOutput)
}

func (i GetServiceGrafanaUserConfigPublicAccessArgs) ToGetServiceGrafanaUserConfigPublicAccessPtrOutput() GetServiceGrafanaUserConfigPublicAccessPtrOutput {
	return i.ToGetServiceGrafanaUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i GetServiceGrafanaUserConfigPublicAccessArgs) ToGetServiceGrafanaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigPublicAccessOutput).ToGetServiceGrafanaUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// GetServiceGrafanaUserConfigPublicAccessPtrInput is an input type that accepts GetServiceGrafanaUserConfigPublicAccessArgs, GetServiceGrafanaUserConfigPublicAccessPtr and GetServiceGrafanaUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `GetServiceGrafanaUserConfigPublicAccessPtrInput` via:
//
//          GetServiceGrafanaUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type GetServiceGrafanaUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToGetServiceGrafanaUserConfigPublicAccessPtrOutput() GetServiceGrafanaUserConfigPublicAccessPtrOutput
	ToGetServiceGrafanaUserConfigPublicAccessPtrOutputWithContext(context.Context) GetServiceGrafanaUserConfigPublicAccessPtrOutput
}

type getServiceGrafanaUserConfigPublicAccessPtrType GetServiceGrafanaUserConfigPublicAccessArgs

func GetServiceGrafanaUserConfigPublicAccessPtr(v *GetServiceGrafanaUserConfigPublicAccessArgs) GetServiceGrafanaUserConfigPublicAccessPtrInput {
	return (*getServiceGrafanaUserConfigPublicAccessPtrType)(v)
}

func (*getServiceGrafanaUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceGrafanaUserConfigPublicAccess)(nil)).Elem()
}

func (i *getServiceGrafanaUserConfigPublicAccessPtrType) ToGetServiceGrafanaUserConfigPublicAccessPtrOutput() GetServiceGrafanaUserConfigPublicAccessPtrOutput {
	return i.ToGetServiceGrafanaUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *getServiceGrafanaUserConfigPublicAccessPtrType) ToGetServiceGrafanaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigPublicAccessPtrOutput)
}

type GetServiceGrafanaUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (GetServiceGrafanaUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGrafanaUserConfigPublicAccess)(nil)).Elem()
}

func (o GetServiceGrafanaUserConfigPublicAccessOutput) ToGetServiceGrafanaUserConfigPublicAccessOutput() GetServiceGrafanaUserConfigPublicAccessOutput {
	return o
}

func (o GetServiceGrafanaUserConfigPublicAccessOutput) ToGetServiceGrafanaUserConfigPublicAccessOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigPublicAccessOutput {
	return o
}

func (o GetServiceGrafanaUserConfigPublicAccessOutput) ToGetServiceGrafanaUserConfigPublicAccessPtrOutput() GetServiceGrafanaUserConfigPublicAccessPtrOutput {
	return o.ToGetServiceGrafanaUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o GetServiceGrafanaUserConfigPublicAccessOutput) ToGetServiceGrafanaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigPublicAccess) *GetServiceGrafanaUserConfigPublicAccess {
		return &v
	}).(GetServiceGrafanaUserConfigPublicAccessPtrOutput)
}
func (o GetServiceGrafanaUserConfigPublicAccessOutput) Grafana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigPublicAccess) *string { return v.Grafana }).(pulumi.StringPtrOutput)
}

type GetServiceGrafanaUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (GetServiceGrafanaUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceGrafanaUserConfigPublicAccess)(nil)).Elem()
}

func (o GetServiceGrafanaUserConfigPublicAccessPtrOutput) ToGetServiceGrafanaUserConfigPublicAccessPtrOutput() GetServiceGrafanaUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetServiceGrafanaUserConfigPublicAccessPtrOutput) ToGetServiceGrafanaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetServiceGrafanaUserConfigPublicAccessPtrOutput) Elem() GetServiceGrafanaUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigPublicAccess) GetServiceGrafanaUserConfigPublicAccess { return *v }).(GetServiceGrafanaUserConfigPublicAccessOutput)
}

func (o GetServiceGrafanaUserConfigPublicAccessPtrOutput) Grafana() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Grafana
	}).(pulumi.StringPtrOutput)
}

type GetServiceGrafanaUserConfigSmtpServer struct {
	FromAddress    *string `pulumi:"fromAddress"`
	FromName       *string `pulumi:"fromName"`
	Host           *string `pulumi:"host"`
	Password       *string `pulumi:"password"`
	Port           *string `pulumi:"port"`
	SkipVerify     *string `pulumi:"skipVerify"`
	StarttlsPolicy *string `pulumi:"starttlsPolicy"`
	Username       *string `pulumi:"username"`
}

// GetServiceGrafanaUserConfigSmtpServerInput is an input type that accepts GetServiceGrafanaUserConfigSmtpServerArgs and GetServiceGrafanaUserConfigSmtpServerOutput values.
// You can construct a concrete instance of `GetServiceGrafanaUserConfigSmtpServerInput` via:
//
//          GetServiceGrafanaUserConfigSmtpServerArgs{...}
type GetServiceGrafanaUserConfigSmtpServerInput interface {
	pulumi.Input

	ToGetServiceGrafanaUserConfigSmtpServerOutput() GetServiceGrafanaUserConfigSmtpServerOutput
	ToGetServiceGrafanaUserConfigSmtpServerOutputWithContext(context.Context) GetServiceGrafanaUserConfigSmtpServerOutput
}

type GetServiceGrafanaUserConfigSmtpServerArgs struct {
	FromAddress    pulumi.StringPtrInput `pulumi:"fromAddress"`
	FromName       pulumi.StringPtrInput `pulumi:"fromName"`
	Host           pulumi.StringPtrInput `pulumi:"host"`
	Password       pulumi.StringPtrInput `pulumi:"password"`
	Port           pulumi.StringPtrInput `pulumi:"port"`
	SkipVerify     pulumi.StringPtrInput `pulumi:"skipVerify"`
	StarttlsPolicy pulumi.StringPtrInput `pulumi:"starttlsPolicy"`
	Username       pulumi.StringPtrInput `pulumi:"username"`
}

func (GetServiceGrafanaUserConfigSmtpServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGrafanaUserConfigSmtpServer)(nil)).Elem()
}

func (i GetServiceGrafanaUserConfigSmtpServerArgs) ToGetServiceGrafanaUserConfigSmtpServerOutput() GetServiceGrafanaUserConfigSmtpServerOutput {
	return i.ToGetServiceGrafanaUserConfigSmtpServerOutputWithContext(context.Background())
}

func (i GetServiceGrafanaUserConfigSmtpServerArgs) ToGetServiceGrafanaUserConfigSmtpServerOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigSmtpServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigSmtpServerOutput)
}

func (i GetServiceGrafanaUserConfigSmtpServerArgs) ToGetServiceGrafanaUserConfigSmtpServerPtrOutput() GetServiceGrafanaUserConfigSmtpServerPtrOutput {
	return i.ToGetServiceGrafanaUserConfigSmtpServerPtrOutputWithContext(context.Background())
}

func (i GetServiceGrafanaUserConfigSmtpServerArgs) ToGetServiceGrafanaUserConfigSmtpServerPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigSmtpServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigSmtpServerOutput).ToGetServiceGrafanaUserConfigSmtpServerPtrOutputWithContext(ctx)
}

// GetServiceGrafanaUserConfigSmtpServerPtrInput is an input type that accepts GetServiceGrafanaUserConfigSmtpServerArgs, GetServiceGrafanaUserConfigSmtpServerPtr and GetServiceGrafanaUserConfigSmtpServerPtrOutput values.
// You can construct a concrete instance of `GetServiceGrafanaUserConfigSmtpServerPtrInput` via:
//
//          GetServiceGrafanaUserConfigSmtpServerArgs{...}
//
//  or:
//
//          nil
type GetServiceGrafanaUserConfigSmtpServerPtrInput interface {
	pulumi.Input

	ToGetServiceGrafanaUserConfigSmtpServerPtrOutput() GetServiceGrafanaUserConfigSmtpServerPtrOutput
	ToGetServiceGrafanaUserConfigSmtpServerPtrOutputWithContext(context.Context) GetServiceGrafanaUserConfigSmtpServerPtrOutput
}

type getServiceGrafanaUserConfigSmtpServerPtrType GetServiceGrafanaUserConfigSmtpServerArgs

func GetServiceGrafanaUserConfigSmtpServerPtr(v *GetServiceGrafanaUserConfigSmtpServerArgs) GetServiceGrafanaUserConfigSmtpServerPtrInput {
	return (*getServiceGrafanaUserConfigSmtpServerPtrType)(v)
}

func (*getServiceGrafanaUserConfigSmtpServerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceGrafanaUserConfigSmtpServer)(nil)).Elem()
}

func (i *getServiceGrafanaUserConfigSmtpServerPtrType) ToGetServiceGrafanaUserConfigSmtpServerPtrOutput() GetServiceGrafanaUserConfigSmtpServerPtrOutput {
	return i.ToGetServiceGrafanaUserConfigSmtpServerPtrOutputWithContext(context.Background())
}

func (i *getServiceGrafanaUserConfigSmtpServerPtrType) ToGetServiceGrafanaUserConfigSmtpServerPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigSmtpServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGrafanaUserConfigSmtpServerPtrOutput)
}

type GetServiceGrafanaUserConfigSmtpServerOutput struct{ *pulumi.OutputState }

func (GetServiceGrafanaUserConfigSmtpServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGrafanaUserConfigSmtpServer)(nil)).Elem()
}

func (o GetServiceGrafanaUserConfigSmtpServerOutput) ToGetServiceGrafanaUserConfigSmtpServerOutput() GetServiceGrafanaUserConfigSmtpServerOutput {
	return o
}

func (o GetServiceGrafanaUserConfigSmtpServerOutput) ToGetServiceGrafanaUserConfigSmtpServerOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigSmtpServerOutput {
	return o
}

func (o GetServiceGrafanaUserConfigSmtpServerOutput) ToGetServiceGrafanaUserConfigSmtpServerPtrOutput() GetServiceGrafanaUserConfigSmtpServerPtrOutput {
	return o.ToGetServiceGrafanaUserConfigSmtpServerPtrOutputWithContext(context.Background())
}

func (o GetServiceGrafanaUserConfigSmtpServerOutput) ToGetServiceGrafanaUserConfigSmtpServerPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigSmtpServerPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigSmtpServer) *GetServiceGrafanaUserConfigSmtpServer {
		return &v
	}).(GetServiceGrafanaUserConfigSmtpServerPtrOutput)
}
func (o GetServiceGrafanaUserConfigSmtpServerOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigSmtpServer) *string { return v.FromAddress }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigSmtpServerOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigSmtpServer) *string { return v.FromName }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigSmtpServerOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigSmtpServer) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigSmtpServerOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigSmtpServer) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigSmtpServerOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigSmtpServer) *string { return v.Port }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigSmtpServerOutput) SkipVerify() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigSmtpServer) *string { return v.SkipVerify }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigSmtpServerOutput) StarttlsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigSmtpServer) *string { return v.StarttlsPolicy }).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigSmtpServerOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceGrafanaUserConfigSmtpServer) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GetServiceGrafanaUserConfigSmtpServerPtrOutput struct{ *pulumi.OutputState }

func (GetServiceGrafanaUserConfigSmtpServerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceGrafanaUserConfigSmtpServer)(nil)).Elem()
}

func (o GetServiceGrafanaUserConfigSmtpServerPtrOutput) ToGetServiceGrafanaUserConfigSmtpServerPtrOutput() GetServiceGrafanaUserConfigSmtpServerPtrOutput {
	return o
}

func (o GetServiceGrafanaUserConfigSmtpServerPtrOutput) ToGetServiceGrafanaUserConfigSmtpServerPtrOutputWithContext(ctx context.Context) GetServiceGrafanaUserConfigSmtpServerPtrOutput {
	return o
}

func (o GetServiceGrafanaUserConfigSmtpServerPtrOutput) Elem() GetServiceGrafanaUserConfigSmtpServerOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigSmtpServer) GetServiceGrafanaUserConfigSmtpServer { return *v }).(GetServiceGrafanaUserConfigSmtpServerOutput)
}

func (o GetServiceGrafanaUserConfigSmtpServerPtrOutput) FromAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.FromAddress
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigSmtpServerPtrOutput) FromName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.FromName
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigSmtpServerPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigSmtpServerPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigSmtpServerPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigSmtpServerPtrOutput) SkipVerify() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.SkipVerify
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigSmtpServerPtrOutput) StarttlsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.StarttlsPolicy
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceGrafanaUserConfigSmtpServerPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGrafanaUserConfigSmtpServer) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type GetServiceInfluxdb struct {
	DatabaseName string `pulumi:"databaseName"`
}

// GetServiceInfluxdbInput is an input type that accepts GetServiceInfluxdbArgs and GetServiceInfluxdbOutput values.
// You can construct a concrete instance of `GetServiceInfluxdbInput` via:
//
//          GetServiceInfluxdbArgs{...}
type GetServiceInfluxdbInput interface {
	pulumi.Input

	ToGetServiceInfluxdbOutput() GetServiceInfluxdbOutput
	ToGetServiceInfluxdbOutputWithContext(context.Context) GetServiceInfluxdbOutput
}

type GetServiceInfluxdbArgs struct {
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
}

func (GetServiceInfluxdbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceInfluxdb)(nil)).Elem()
}

func (i GetServiceInfluxdbArgs) ToGetServiceInfluxdbOutput() GetServiceInfluxdbOutput {
	return i.ToGetServiceInfluxdbOutputWithContext(context.Background())
}

func (i GetServiceInfluxdbArgs) ToGetServiceInfluxdbOutputWithContext(ctx context.Context) GetServiceInfluxdbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceInfluxdbOutput)
}

type GetServiceInfluxdbOutput struct{ *pulumi.OutputState }

func (GetServiceInfluxdbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceInfluxdb)(nil)).Elem()
}

func (o GetServiceInfluxdbOutput) ToGetServiceInfluxdbOutput() GetServiceInfluxdbOutput {
	return o
}

func (o GetServiceInfluxdbOutput) ToGetServiceInfluxdbOutputWithContext(ctx context.Context) GetServiceInfluxdbOutput {
	return o
}

func (o GetServiceInfluxdbOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceInfluxdb) string { return v.DatabaseName }).(pulumi.StringOutput)
}

type GetServiceInfluxdbUserConfig struct {
	CustomDomain           *string                                        `pulumi:"customDomain"`
	Influxdb               *GetServiceInfluxdbUserConfigInfluxdb          `pulumi:"influxdb"`
	IpFilters              []string                                       `pulumi:"ipFilters"`
	PrivateAccess          *GetServiceInfluxdbUserConfigPrivateAccess     `pulumi:"privateAccess"`
	PrivatelinkAccess      *GetServiceInfluxdbUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	ProjectToForkFrom      *string                                        `pulumi:"projectToForkFrom"`
	PublicAccess           *GetServiceInfluxdbUserConfigPublicAccess      `pulumi:"publicAccess"`
	RecoveryBasebackupName *string                                        `pulumi:"recoveryBasebackupName"`
	ServiceToForkFrom      *string                                        `pulumi:"serviceToForkFrom"`
}

// GetServiceInfluxdbUserConfigInput is an input type that accepts GetServiceInfluxdbUserConfigArgs and GetServiceInfluxdbUserConfigOutput values.
// You can construct a concrete instance of `GetServiceInfluxdbUserConfigInput` via:
//
//          GetServiceInfluxdbUserConfigArgs{...}
type GetServiceInfluxdbUserConfigInput interface {
	pulumi.Input

	ToGetServiceInfluxdbUserConfigOutput() GetServiceInfluxdbUserConfigOutput
	ToGetServiceInfluxdbUserConfigOutputWithContext(context.Context) GetServiceInfluxdbUserConfigOutput
}

type GetServiceInfluxdbUserConfigArgs struct {
	CustomDomain           pulumi.StringPtrInput                                 `pulumi:"customDomain"`
	Influxdb               GetServiceInfluxdbUserConfigInfluxdbPtrInput          `pulumi:"influxdb"`
	IpFilters              pulumi.StringArrayInput                               `pulumi:"ipFilters"`
	PrivateAccess          GetServiceInfluxdbUserConfigPrivateAccessPtrInput     `pulumi:"privateAccess"`
	PrivatelinkAccess      GetServiceInfluxdbUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	ProjectToForkFrom      pulumi.StringPtrInput                                 `pulumi:"projectToForkFrom"`
	PublicAccess           GetServiceInfluxdbUserConfigPublicAccessPtrInput      `pulumi:"publicAccess"`
	RecoveryBasebackupName pulumi.StringPtrInput                                 `pulumi:"recoveryBasebackupName"`
	ServiceToForkFrom      pulumi.StringPtrInput                                 `pulumi:"serviceToForkFrom"`
}

func (GetServiceInfluxdbUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceInfluxdbUserConfig)(nil)).Elem()
}

func (i GetServiceInfluxdbUserConfigArgs) ToGetServiceInfluxdbUserConfigOutput() GetServiceInfluxdbUserConfigOutput {
	return i.ToGetServiceInfluxdbUserConfigOutputWithContext(context.Background())
}

func (i GetServiceInfluxdbUserConfigArgs) ToGetServiceInfluxdbUserConfigOutputWithContext(ctx context.Context) GetServiceInfluxdbUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceInfluxdbUserConfigOutput)
}

type GetServiceInfluxdbUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceInfluxdbUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceInfluxdbUserConfig)(nil)).Elem()
}

func (o GetServiceInfluxdbUserConfigOutput) ToGetServiceInfluxdbUserConfigOutput() GetServiceInfluxdbUserConfigOutput {
	return o
}

func (o GetServiceInfluxdbUserConfigOutput) ToGetServiceInfluxdbUserConfigOutputWithContext(ctx context.Context) GetServiceInfluxdbUserConfigOutput {
	return o
}

func (o GetServiceInfluxdbUserConfigOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceInfluxdbUserConfig) *string { return v.CustomDomain }).(pulumi.StringPtrOutput)
}

func (o GetServiceInfluxdbUserConfigOutput) Influxdb() GetServiceInfluxdbUserConfigInfluxdbPtrOutput {
	return o.ApplyT(func(v GetServiceInfluxdbUserConfig) *GetServiceInfluxdbUserConfigInfluxdb { return v.Influxdb }).(GetServiceInfluxdbUserConfigInfluxdbPtrOutput)
}

func (o GetServiceInfluxdbUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceInfluxdbUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

func (o GetServiceInfluxdbUserConfigOutput) PrivateAccess() GetServiceInfluxdbUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetServiceInfluxdbUserConfig) *GetServiceInfluxdbUserConfigPrivateAccess {
		return v.PrivateAccess
	}).(GetServiceInfluxdbUserConfigPrivateAccessPtrOutput)
}

func (o GetServiceInfluxdbUserConfigOutput) PrivatelinkAccess() GetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetServiceInfluxdbUserConfig) *GetServiceInfluxdbUserConfigPrivatelinkAccess {
		return v.PrivatelinkAccess
	}).(GetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput)
}

func (o GetServiceInfluxdbUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceInfluxdbUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

func (o GetServiceInfluxdbUserConfigOutput) PublicAccess() GetServiceInfluxdbUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetServiceInfluxdbUserConfig) *GetServiceInfluxdbUserConfigPublicAccess { return v.PublicAccess }).(GetServiceInfluxdbUserConfigPublicAccessPtrOutput)
}

func (o GetServiceInfluxdbUserConfigOutput) RecoveryBasebackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceInfluxdbUserConfig) *string { return v.RecoveryBasebackupName }).(pulumi.StringPtrOutput)
}

func (o GetServiceInfluxdbUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceInfluxdbUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

type GetServiceInfluxdbUserConfigInfluxdb struct {
	LogQueriesAfter  *string `pulumi:"logQueriesAfter"`
	MaxRowLimit      *string `pulumi:"maxRowLimit"`
	MaxSelectBuckets *string `pulumi:"maxSelectBuckets"`
	MaxSelectPoint   *string `pulumi:"maxSelectPoint"`
	QueryTimeout     *string `pulumi:"queryTimeout"`
}

// GetServiceInfluxdbUserConfigInfluxdbInput is an input type that accepts GetServiceInfluxdbUserConfigInfluxdbArgs and GetServiceInfluxdbUserConfigInfluxdbOutput values.
// You can construct a concrete instance of `GetServiceInfluxdbUserConfigInfluxdbInput` via:
//
//          GetServiceInfluxdbUserConfigInfluxdbArgs{...}
type GetServiceInfluxdbUserConfigInfluxdbInput interface {
	pulumi.Input

	ToGetServiceInfluxdbUserConfigInfluxdbOutput() GetServiceInfluxdbUserConfigInfluxdbOutput
	ToGetServiceInfluxdbUserConfigInfluxdbOutputWithContext(context.Context) GetServiceInfluxdbUserConfigInfluxdbOutput
}

type GetServiceInfluxdbUserConfigInfluxdbArgs struct {
	LogQueriesAfter  pulumi.StringPtrInput `pulumi:"logQueriesAfter"`
	MaxRowLimit      pulumi.StringPtrInput `pulumi:"maxRowLimit"`
	MaxSelectBuckets pulumi.StringPtrInput `pulumi:"maxSelectBuckets"`
	MaxSelectPoint   pulumi.StringPtrInput `pulumi:"maxSelectPoint"`
	QueryTimeout     pulumi.StringPtrInput `pulumi:"queryTimeout"`
}

func (GetServiceInfluxdbUserConfigInfluxdbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceInfluxdbUserConfigInfluxdb)(nil)).Elem()
}

func (i GetServiceInfluxdbUserConfigInfluxdbArgs) ToGetServiceInfluxdbUserConfigInfluxdbOutput() GetServiceInfluxdbUserConfigInfluxdbOutput {
	return i.ToGetServiceInfluxdbUserConfigInfluxdbOutputWithContext(context.Background())
}

func (i GetServiceInfluxdbUserConfigInfluxdbArgs) ToGetServiceInfluxdbUserConfigInfluxdbOutputWithContext(ctx context.Context) GetServiceInfluxdbUserConfigInfluxdbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceInfluxdbUserConfigInfluxdbOutput)
}

func (i GetServiceInfluxdbUserConfigInfluxdbArgs) ToGetServiceInfluxdbUserConfigInfluxdbPtrOutput() GetServiceInfluxdbUserConfigInfluxdbPtrOutput {
	return i.ToGetServiceInfluxdbUserConfigInfluxdbPtrOutputWithContext(context.Background())
}

func (i GetServiceInfluxdbUserConfigInfluxdbArgs) ToGetServiceInfluxdbUserConfigInfluxdbPtrOutputWithContext(ctx context.Context) GetServiceInfluxdbUserConfigInfluxdbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceInfluxdbUserConfigInfluxdbOutput).ToGetServiceInfluxdbUserConfigInfluxdbPtrOutputWithContext(ctx)
}

// GetServiceInfluxdbUserConfigInfluxdbPtrInput is an input type that accepts GetServiceInfluxdbUserConfigInfluxdbArgs, GetServiceInfluxdbUserConfigInfluxdbPtr and GetServiceInfluxdbUserConfigInfluxdbPtrOutput values.
// You can construct a concrete instance of `GetServiceInfluxdbUserConfigInfluxdbPtrInput` via:
//
//          GetServiceInfluxdbUserConfigInfluxdbArgs{...}
//
//  or:
//
//          nil
type GetServiceInfluxdbUserConfigInfluxdbPtrInput interface {
	pulumi.Input

	ToGetServiceInfluxdbUserConfigInfluxdbPtrOutput() GetServiceInfluxdbUserConfigInfluxdbPtrOutput
	ToGetServiceInfluxdbUserConfigInfluxdbPtrOutputWithContext(context.Context) GetServiceInfluxdbUserConfigInfluxdbPtrOutput
}

type getServiceInfluxdbUserConfigInfluxdbPtrType GetServiceInfluxdbUserConfigInfluxdbArgs

func GetServiceInfluxdbUserConfigInfluxdbPtr(v *GetServiceInfluxdbUserConfigInfluxdbArgs) GetServiceInfluxdbUserConfigInfluxdbPtrInput {
	return (*getServiceInfluxdbUserConfigInfluxdbPtrType)(v)
}

func (*getServiceInfluxdbUserConfigInfluxdbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceInfluxdbUserConfigInfluxdb)(nil)).Elem()
}

func (i *getServiceInfluxdbUserConfigInfluxdbPtrType) ToGetServiceInfluxdbUserConfigInfluxdbPtrOutput() GetServiceInfluxdbUserConfigInfluxdbPtrOutput {
	return i.ToGetServiceInfluxdbUserConfigInfluxdbPtrOutputWithContext(context.Background())
}

func (i *getServiceInfluxdbUserConfigInfluxdbPtrType) ToGetServiceInfluxdbUserConfigInfluxdbPtrOutputWithContext(ctx context.Context) GetServiceInfluxdbUserConfigInfluxdbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceInfluxdbUserConfigInfluxdbPtrOutput)
}

type GetServiceInfluxdbUserConfigInfluxdbOutput struct{ *pulumi.OutputState }

func (GetServiceInfluxdbUserConfigInfluxdbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceInfluxdbUserConfigInfluxdb)(nil)).Elem()
}

func (o GetServiceInfluxdbUserConfigInfluxdbOutput) ToGetServiceInfluxdbUserConfigInfluxdbOutput() GetServiceInfluxdbUserConfigInfluxdbOutput {
	return o
}

func (o GetServiceInfluxdbUserConfigInfluxdbOutput) ToGetServiceInfluxdbUserConfigInfluxdbOutputWithContext(ctx context.Context) GetServiceInfluxdbUserConfigInfluxdbOutput {
	return o
}

func (o GetServiceInfluxdbUserConfigInfluxdbOutput) ToGetServiceInfluxdbUserConfigInfluxdbPtrOutput() GetServiceInfluxdbUserConfigInfluxdbPtrOutput {
	return o.ToGetServiceInfluxdbUserConfigInfluxdbPtrOutputWithContext(context.Background())
}

func (o GetServiceInfluxdbUserConfigInfluxdbOutput) ToGetServiceInfluxdbUserConfigInfluxdbPtrOutputWithContext(ctx context.Context) GetServiceInfluxdbUserConfigInfluxdbPtrOutput {
	return o.ApplyT(func(v GetServiceInfluxdbUserConfigInfluxdb) *GetServiceInfluxdbUserConfigInfluxdb {
		return &v
	}).(GetServiceInfluxdbUserConfigInfluxdbPtrOutput)
}
func (o GetServiceInfluxdbUserConfigInfluxdbOutput) LogQueriesAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceInfluxdbUserConfigInfluxdb) *string { return v.LogQueriesAfter }).(pulumi.StringPtrOutput)
}

func (o GetServiceInfluxdbUserConfigInfluxdbOutput) MaxRowLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceInfluxdbUserConfigInfluxdb) *string { return v.MaxRowLimit }).(pulumi.StringPtrOutput)
}

func (o GetServiceInfluxdbUserConfigInfluxdbOutput) MaxSelectBuckets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceInfluxdbUserConfigInfluxdb) *string { return v.MaxSelectBuckets }).(pulumi.StringPtrOutput)
}

func (o GetServiceInfluxdbUserConfigInfluxdbOutput) MaxSelectPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceInfluxdbUserConfigInfluxdb) *string { return v.MaxSelectPoint }).(pulumi.StringPtrOutput)
}

func (o GetServiceInfluxdbUserConfigInfluxdbOutput) QueryTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceInfluxdbUserConfigInfluxdb) *string { return v.QueryTimeout }).(pulumi.StringPtrOutput)
}

type GetServiceInfluxdbUserConfigInfluxdbPtrOutput struct{ *pulumi.OutputState }

func (GetServiceInfluxdbUserConfigInfluxdbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceInfluxdbUserConfigInfluxdb)(nil)).Elem()
}

func (o GetServiceInfluxdbUserConfigInfluxdbPtrOutput) ToGetServiceInfluxdbUserConfigInfluxdbPtrOutput() GetServiceInfluxdbUserConfigInfluxdbPtrOutput {
	return o
}

func (o GetServiceInfluxdbUserConfigInfluxdbPtrOutput) ToGetServiceInfluxdbUserConfigInfluxdbPtrOutputWithContext(ctx context.Context) GetServiceInfluxdbUserConfigInfluxdbPtrOutput {
	return o
}

func (o GetServiceInfluxdbUserConfigInfluxdbPtrOutput) Elem() GetServiceInfluxdbUserConfigInfluxdbOutput {
	return o.ApplyT(func(v *GetServiceInfluxdbUserConfigInfluxdb) GetServiceInfluxdbUserConfigInfluxdb { return *v }).(GetServiceInfluxdbUserConfigInfluxdbOutput)
}

func (o GetServiceInfluxdbUserConfigInfluxdbPtrOutput) LogQueriesAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceInfluxdbUserConfigInfluxdb) *string {
		if v == nil {
			return nil
		}
		return v.LogQueriesAfter
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceInfluxdbUserConfigInfluxdbPtrOutput) MaxRowLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceInfluxdbUserConfigInfluxdb) *string {
		if v == nil {
			return nil
		}
		return v.MaxRowLimit
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceInfluxdbUserConfigInfluxdbPtrOutput) MaxSelectBuckets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceInfluxdbUserConfigInfluxdb) *string {
		if v == nil {
			return nil
		}
		return v.MaxSelectBuckets
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceInfluxdbUserConfigInfluxdbPtrOutput) MaxSelectPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceInfluxdbUserConfigInfluxdb) *string {
		if v == nil {
			return nil
		}
		return v.MaxSelectPoint
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceInfluxdbUserConfigInfluxdbPtrOutput) QueryTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceInfluxdbUserConfigInfluxdb) *string {
		if v == nil {
			return nil
		}
		return v.QueryTimeout
	}).(pulumi.StringPtrOutput)
}

type GetServiceInfluxdbUserConfigPrivateAccess struct {
	Influxdb *string `pulumi:"influxdb"`
}

// GetServiceInfluxdbUserConfigPrivateAccessInput is an input type that accepts GetServiceInfluxdbUserConfigPrivateAccessArgs and GetServiceInfluxdbUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `GetServiceInfluxdbUserConfigPrivateAccessInput` via:
//
//          GetServiceInfluxdbUserConfigPrivateAccessArgs{...}
type GetServiceInfluxdbUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToGetServiceInfluxdbUserConfigPrivateAccessOutput() GetServiceInfluxdbUserConfigPrivateAccessOutput
	ToGetServiceInfluxdbUserConfigPrivateAccessOutputWithContext(context.Context) GetServiceInfluxdbUserConfigPrivateAccessOutput
}

type GetServiceInfluxdbUserConfigPrivateAccessArgs struct {
	Influxdb pulumi.StringPtrInput `pulumi:"influxdb"`
}

func (GetServiceInfluxdbUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceInfluxdbUserConfigPrivateAccess)(nil)).Elem()
}

func (i GetServiceInfluxdbUserConfigPrivateAccessArgs) ToGetServiceInfluxdbUserConfigPrivateAccessOutput() GetServiceInfluxdbUserConfigPrivateAccessOutput {
	return i.ToGetServiceInfluxdbUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i GetServiceInfluxdbUserConfigPrivateAccessArgs) ToGetServiceInfluxdbUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetServiceInfluxdbUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceInfluxdbUserConfigPrivateAccessOutput)
}

func (i GetServiceInfluxdbUserConfigPrivateAccessArgs) ToGetServiceInfluxdbUserConfigPrivateAccessPtrOutput() GetServiceInfluxdbUserConfigPrivateAccessPtrOutput {
	return i.ToGetServiceInfluxdbUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i GetServiceInfluxdbUserConfigPrivateAccessArgs) ToGetServiceInfluxdbUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceInfluxdbUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceInfluxdbUserConfigPrivateAccessOutput).ToGetServiceInfluxdbUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// GetServiceInfluxdbUserConfigPrivateAccessPtrInput is an input type that accepts GetServiceInfluxdbUserConfigPrivateAccessArgs, GetServiceInfluxdbUserConfigPrivateAccessPtr and GetServiceInfluxdbUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `GetServiceInfluxdbUserConfigPrivateAccessPtrInput` via:
//
//          GetServiceInfluxdbUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type GetServiceInfluxdbUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToGetServiceInfluxdbUserConfigPrivateAccessPtrOutput() GetServiceInfluxdbUserConfigPrivateAccessPtrOutput
	ToGetServiceInfluxdbUserConfigPrivateAccessPtrOutputWithContext(context.Context) GetServiceInfluxdbUserConfigPrivateAccessPtrOutput
}

type getServiceInfluxdbUserConfigPrivateAccessPtrType GetServiceInfluxdbUserConfigPrivateAccessArgs

func GetServiceInfluxdbUserConfigPrivateAccessPtr(v *GetServiceInfluxdbUserConfigPrivateAccessArgs) GetServiceInfluxdbUserConfigPrivateAccessPtrInput {
	return (*getServiceInfluxdbUserConfigPrivateAccessPtrType)(v)
}

func (*getServiceInfluxdbUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceInfluxdbUserConfigPrivateAccess)(nil)).Elem()
}

func (i *getServiceInfluxdbUserConfigPrivateAccessPtrType) ToGetServiceInfluxdbUserConfigPrivateAccessPtrOutput() GetServiceInfluxdbUserConfigPrivateAccessPtrOutput {
	return i.ToGetServiceInfluxdbUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *getServiceInfluxdbUserConfigPrivateAccessPtrType) ToGetServiceInfluxdbUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceInfluxdbUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceInfluxdbUserConfigPrivateAccessPtrOutput)
}

type GetServiceInfluxdbUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (GetServiceInfluxdbUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceInfluxdbUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetServiceInfluxdbUserConfigPrivateAccessOutput) ToGetServiceInfluxdbUserConfigPrivateAccessOutput() GetServiceInfluxdbUserConfigPrivateAccessOutput {
	return o
}

func (o GetServiceInfluxdbUserConfigPrivateAccessOutput) ToGetServiceInfluxdbUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetServiceInfluxdbUserConfigPrivateAccessOutput {
	return o
}

func (o GetServiceInfluxdbUserConfigPrivateAccessOutput) ToGetServiceInfluxdbUserConfigPrivateAccessPtrOutput() GetServiceInfluxdbUserConfigPrivateAccessPtrOutput {
	return o.ToGetServiceInfluxdbUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o GetServiceInfluxdbUserConfigPrivateAccessOutput) ToGetServiceInfluxdbUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceInfluxdbUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetServiceInfluxdbUserConfigPrivateAccess) *GetServiceInfluxdbUserConfigPrivateAccess {
		return &v
	}).(GetServiceInfluxdbUserConfigPrivateAccessPtrOutput)
}
func (o GetServiceInfluxdbUserConfigPrivateAccessOutput) Influxdb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceInfluxdbUserConfigPrivateAccess) *string { return v.Influxdb }).(pulumi.StringPtrOutput)
}

type GetServiceInfluxdbUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (GetServiceInfluxdbUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceInfluxdbUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetServiceInfluxdbUserConfigPrivateAccessPtrOutput) ToGetServiceInfluxdbUserConfigPrivateAccessPtrOutput() GetServiceInfluxdbUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetServiceInfluxdbUserConfigPrivateAccessPtrOutput) ToGetServiceInfluxdbUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceInfluxdbUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetServiceInfluxdbUserConfigPrivateAccessPtrOutput) Elem() GetServiceInfluxdbUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *GetServiceInfluxdbUserConfigPrivateAccess) GetServiceInfluxdbUserConfigPrivateAccess {
		return *v
	}).(GetServiceInfluxdbUserConfigPrivateAccessOutput)
}

func (o GetServiceInfluxdbUserConfigPrivateAccessPtrOutput) Influxdb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceInfluxdbUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Influxdb
	}).(pulumi.StringPtrOutput)
}

type GetServiceInfluxdbUserConfigPrivatelinkAccess struct {
	Influxdb *string `pulumi:"influxdb"`
}

// GetServiceInfluxdbUserConfigPrivatelinkAccessInput is an input type that accepts GetServiceInfluxdbUserConfigPrivatelinkAccessArgs and GetServiceInfluxdbUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `GetServiceInfluxdbUserConfigPrivatelinkAccessInput` via:
//
//          GetServiceInfluxdbUserConfigPrivatelinkAccessArgs{...}
type GetServiceInfluxdbUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToGetServiceInfluxdbUserConfigPrivatelinkAccessOutput() GetServiceInfluxdbUserConfigPrivatelinkAccessOutput
	ToGetServiceInfluxdbUserConfigPrivatelinkAccessOutputWithContext(context.Context) GetServiceInfluxdbUserConfigPrivatelinkAccessOutput
}

type GetServiceInfluxdbUserConfigPrivatelinkAccessArgs struct {
	Influxdb pulumi.StringPtrInput `pulumi:"influxdb"`
}

func (GetServiceInfluxdbUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceInfluxdbUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i GetServiceInfluxdbUserConfigPrivatelinkAccessArgs) ToGetServiceInfluxdbUserConfigPrivatelinkAccessOutput() GetServiceInfluxdbUserConfigPrivatelinkAccessOutput {
	return i.ToGetServiceInfluxdbUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i GetServiceInfluxdbUserConfigPrivatelinkAccessArgs) ToGetServiceInfluxdbUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetServiceInfluxdbUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceInfluxdbUserConfigPrivatelinkAccessOutput)
}

func (i GetServiceInfluxdbUserConfigPrivatelinkAccessArgs) ToGetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput() GetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i GetServiceInfluxdbUserConfigPrivatelinkAccessArgs) ToGetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceInfluxdbUserConfigPrivatelinkAccessOutput).ToGetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// GetServiceInfluxdbUserConfigPrivatelinkAccessPtrInput is an input type that accepts GetServiceInfluxdbUserConfigPrivatelinkAccessArgs, GetServiceInfluxdbUserConfigPrivatelinkAccessPtr and GetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `GetServiceInfluxdbUserConfigPrivatelinkAccessPtrInput` via:
//
//          GetServiceInfluxdbUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type GetServiceInfluxdbUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToGetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput() GetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput
	ToGetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) GetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput
}

type getServiceInfluxdbUserConfigPrivatelinkAccessPtrType GetServiceInfluxdbUserConfigPrivatelinkAccessArgs

func GetServiceInfluxdbUserConfigPrivatelinkAccessPtr(v *GetServiceInfluxdbUserConfigPrivatelinkAccessArgs) GetServiceInfluxdbUserConfigPrivatelinkAccessPtrInput {
	return (*getServiceInfluxdbUserConfigPrivatelinkAccessPtrType)(v)
}

func (*getServiceInfluxdbUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceInfluxdbUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *getServiceInfluxdbUserConfigPrivatelinkAccessPtrType) ToGetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput() GetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *getServiceInfluxdbUserConfigPrivatelinkAccessPtrType) ToGetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput)
}

type GetServiceInfluxdbUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (GetServiceInfluxdbUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceInfluxdbUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetServiceInfluxdbUserConfigPrivatelinkAccessOutput) ToGetServiceInfluxdbUserConfigPrivatelinkAccessOutput() GetServiceInfluxdbUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetServiceInfluxdbUserConfigPrivatelinkAccessOutput) ToGetServiceInfluxdbUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetServiceInfluxdbUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetServiceInfluxdbUserConfigPrivatelinkAccessOutput) ToGetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput() GetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return o.ToGetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o GetServiceInfluxdbUserConfigPrivatelinkAccessOutput) ToGetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetServiceInfluxdbUserConfigPrivatelinkAccess) *GetServiceInfluxdbUserConfigPrivatelinkAccess {
		return &v
	}).(GetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput)
}
func (o GetServiceInfluxdbUserConfigPrivatelinkAccessOutput) Influxdb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceInfluxdbUserConfigPrivatelinkAccess) *string { return v.Influxdb }).(pulumi.StringPtrOutput)
}

type GetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (GetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceInfluxdbUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput) ToGetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput() GetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput) ToGetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput) Elem() GetServiceInfluxdbUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *GetServiceInfluxdbUserConfigPrivatelinkAccess) GetServiceInfluxdbUserConfigPrivatelinkAccess {
		return *v
	}).(GetServiceInfluxdbUserConfigPrivatelinkAccessOutput)
}

func (o GetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput) Influxdb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceInfluxdbUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Influxdb
	}).(pulumi.StringPtrOutput)
}

type GetServiceInfluxdbUserConfigPublicAccess struct {
	Influxdb *string `pulumi:"influxdb"`
}

// GetServiceInfluxdbUserConfigPublicAccessInput is an input type that accepts GetServiceInfluxdbUserConfigPublicAccessArgs and GetServiceInfluxdbUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `GetServiceInfluxdbUserConfigPublicAccessInput` via:
//
//          GetServiceInfluxdbUserConfigPublicAccessArgs{...}
type GetServiceInfluxdbUserConfigPublicAccessInput interface {
	pulumi.Input

	ToGetServiceInfluxdbUserConfigPublicAccessOutput() GetServiceInfluxdbUserConfigPublicAccessOutput
	ToGetServiceInfluxdbUserConfigPublicAccessOutputWithContext(context.Context) GetServiceInfluxdbUserConfigPublicAccessOutput
}

type GetServiceInfluxdbUserConfigPublicAccessArgs struct {
	Influxdb pulumi.StringPtrInput `pulumi:"influxdb"`
}

func (GetServiceInfluxdbUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceInfluxdbUserConfigPublicAccess)(nil)).Elem()
}

func (i GetServiceInfluxdbUserConfigPublicAccessArgs) ToGetServiceInfluxdbUserConfigPublicAccessOutput() GetServiceInfluxdbUserConfigPublicAccessOutput {
	return i.ToGetServiceInfluxdbUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i GetServiceInfluxdbUserConfigPublicAccessArgs) ToGetServiceInfluxdbUserConfigPublicAccessOutputWithContext(ctx context.Context) GetServiceInfluxdbUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceInfluxdbUserConfigPublicAccessOutput)
}

func (i GetServiceInfluxdbUserConfigPublicAccessArgs) ToGetServiceInfluxdbUserConfigPublicAccessPtrOutput() GetServiceInfluxdbUserConfigPublicAccessPtrOutput {
	return i.ToGetServiceInfluxdbUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i GetServiceInfluxdbUserConfigPublicAccessArgs) ToGetServiceInfluxdbUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceInfluxdbUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceInfluxdbUserConfigPublicAccessOutput).ToGetServiceInfluxdbUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// GetServiceInfluxdbUserConfigPublicAccessPtrInput is an input type that accepts GetServiceInfluxdbUserConfigPublicAccessArgs, GetServiceInfluxdbUserConfigPublicAccessPtr and GetServiceInfluxdbUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `GetServiceInfluxdbUserConfigPublicAccessPtrInput` via:
//
//          GetServiceInfluxdbUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type GetServiceInfluxdbUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToGetServiceInfluxdbUserConfigPublicAccessPtrOutput() GetServiceInfluxdbUserConfigPublicAccessPtrOutput
	ToGetServiceInfluxdbUserConfigPublicAccessPtrOutputWithContext(context.Context) GetServiceInfluxdbUserConfigPublicAccessPtrOutput
}

type getServiceInfluxdbUserConfigPublicAccessPtrType GetServiceInfluxdbUserConfigPublicAccessArgs

func GetServiceInfluxdbUserConfigPublicAccessPtr(v *GetServiceInfluxdbUserConfigPublicAccessArgs) GetServiceInfluxdbUserConfigPublicAccessPtrInput {
	return (*getServiceInfluxdbUserConfigPublicAccessPtrType)(v)
}

func (*getServiceInfluxdbUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceInfluxdbUserConfigPublicAccess)(nil)).Elem()
}

func (i *getServiceInfluxdbUserConfigPublicAccessPtrType) ToGetServiceInfluxdbUserConfigPublicAccessPtrOutput() GetServiceInfluxdbUserConfigPublicAccessPtrOutput {
	return i.ToGetServiceInfluxdbUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *getServiceInfluxdbUserConfigPublicAccessPtrType) ToGetServiceInfluxdbUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceInfluxdbUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceInfluxdbUserConfigPublicAccessPtrOutput)
}

type GetServiceInfluxdbUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (GetServiceInfluxdbUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceInfluxdbUserConfigPublicAccess)(nil)).Elem()
}

func (o GetServiceInfluxdbUserConfigPublicAccessOutput) ToGetServiceInfluxdbUserConfigPublicAccessOutput() GetServiceInfluxdbUserConfigPublicAccessOutput {
	return o
}

func (o GetServiceInfluxdbUserConfigPublicAccessOutput) ToGetServiceInfluxdbUserConfigPublicAccessOutputWithContext(ctx context.Context) GetServiceInfluxdbUserConfigPublicAccessOutput {
	return o
}

func (o GetServiceInfluxdbUserConfigPublicAccessOutput) ToGetServiceInfluxdbUserConfigPublicAccessPtrOutput() GetServiceInfluxdbUserConfigPublicAccessPtrOutput {
	return o.ToGetServiceInfluxdbUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o GetServiceInfluxdbUserConfigPublicAccessOutput) ToGetServiceInfluxdbUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceInfluxdbUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetServiceInfluxdbUserConfigPublicAccess) *GetServiceInfluxdbUserConfigPublicAccess {
		return &v
	}).(GetServiceInfluxdbUserConfigPublicAccessPtrOutput)
}
func (o GetServiceInfluxdbUserConfigPublicAccessOutput) Influxdb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceInfluxdbUserConfigPublicAccess) *string { return v.Influxdb }).(pulumi.StringPtrOutput)
}

type GetServiceInfluxdbUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (GetServiceInfluxdbUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceInfluxdbUserConfigPublicAccess)(nil)).Elem()
}

func (o GetServiceInfluxdbUserConfigPublicAccessPtrOutput) ToGetServiceInfluxdbUserConfigPublicAccessPtrOutput() GetServiceInfluxdbUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetServiceInfluxdbUserConfigPublicAccessPtrOutput) ToGetServiceInfluxdbUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceInfluxdbUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetServiceInfluxdbUserConfigPublicAccessPtrOutput) Elem() GetServiceInfluxdbUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *GetServiceInfluxdbUserConfigPublicAccess) GetServiceInfluxdbUserConfigPublicAccess { return *v }).(GetServiceInfluxdbUserConfigPublicAccessOutput)
}

func (o GetServiceInfluxdbUserConfigPublicAccessPtrOutput) Influxdb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceInfluxdbUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Influxdb
	}).(pulumi.StringPtrOutput)
}

type GetServiceIntegrationDashboardUserConfig struct {
}

// GetServiceIntegrationDashboardUserConfigInput is an input type that accepts GetServiceIntegrationDashboardUserConfigArgs and GetServiceIntegrationDashboardUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationDashboardUserConfigInput` via:
//
//          GetServiceIntegrationDashboardUserConfigArgs{...}
type GetServiceIntegrationDashboardUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationDashboardUserConfigOutput() GetServiceIntegrationDashboardUserConfigOutput
	ToGetServiceIntegrationDashboardUserConfigOutputWithContext(context.Context) GetServiceIntegrationDashboardUserConfigOutput
}

type GetServiceIntegrationDashboardUserConfigArgs struct {
}

func (GetServiceIntegrationDashboardUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationDashboardUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationDashboardUserConfigArgs) ToGetServiceIntegrationDashboardUserConfigOutput() GetServiceIntegrationDashboardUserConfigOutput {
	return i.ToGetServiceIntegrationDashboardUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationDashboardUserConfigArgs) ToGetServiceIntegrationDashboardUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationDashboardUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationDashboardUserConfigOutput)
}

type GetServiceIntegrationDashboardUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationDashboardUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationDashboardUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationDashboardUserConfigOutput) ToGetServiceIntegrationDashboardUserConfigOutput() GetServiceIntegrationDashboardUserConfigOutput {
	return o
}

func (o GetServiceIntegrationDashboardUserConfigOutput) ToGetServiceIntegrationDashboardUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationDashboardUserConfigOutput {
	return o
}

type GetServiceIntegrationDatadogUserConfig struct {
	DatadogTags           []GetServiceIntegrationDatadogUserConfigDatadogTag `pulumi:"datadogTags"`
	ExcludeConsumerGroups []string                                           `pulumi:"excludeConsumerGroups"`
	ExcludeTopics         []string                                           `pulumi:"excludeTopics"`
	IncludeConsumerGroups []string                                           `pulumi:"includeConsumerGroups"`
	IncludeTopics         []string                                           `pulumi:"includeTopics"`
	KafkaCustomMetrics    []string                                           `pulumi:"kafkaCustomMetrics"`
}

// GetServiceIntegrationDatadogUserConfigInput is an input type that accepts GetServiceIntegrationDatadogUserConfigArgs and GetServiceIntegrationDatadogUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationDatadogUserConfigInput` via:
//
//          GetServiceIntegrationDatadogUserConfigArgs{...}
type GetServiceIntegrationDatadogUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationDatadogUserConfigOutput() GetServiceIntegrationDatadogUserConfigOutput
	ToGetServiceIntegrationDatadogUserConfigOutputWithContext(context.Context) GetServiceIntegrationDatadogUserConfigOutput
}

type GetServiceIntegrationDatadogUserConfigArgs struct {
	DatadogTags           GetServiceIntegrationDatadogUserConfigDatadogTagArrayInput `pulumi:"datadogTags"`
	ExcludeConsumerGroups pulumi.StringArrayInput                                    `pulumi:"excludeConsumerGroups"`
	ExcludeTopics         pulumi.StringArrayInput                                    `pulumi:"excludeTopics"`
	IncludeConsumerGroups pulumi.StringArrayInput                                    `pulumi:"includeConsumerGroups"`
	IncludeTopics         pulumi.StringArrayInput                                    `pulumi:"includeTopics"`
	KafkaCustomMetrics    pulumi.StringArrayInput                                    `pulumi:"kafkaCustomMetrics"`
}

func (GetServiceIntegrationDatadogUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationDatadogUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationDatadogUserConfigArgs) ToGetServiceIntegrationDatadogUserConfigOutput() GetServiceIntegrationDatadogUserConfigOutput {
	return i.ToGetServiceIntegrationDatadogUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationDatadogUserConfigArgs) ToGetServiceIntegrationDatadogUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationDatadogUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationDatadogUserConfigOutput)
}

type GetServiceIntegrationDatadogUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationDatadogUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationDatadogUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationDatadogUserConfigOutput) ToGetServiceIntegrationDatadogUserConfigOutput() GetServiceIntegrationDatadogUserConfigOutput {
	return o
}

func (o GetServiceIntegrationDatadogUserConfigOutput) ToGetServiceIntegrationDatadogUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationDatadogUserConfigOutput {
	return o
}

func (o GetServiceIntegrationDatadogUserConfigOutput) DatadogTags() GetServiceIntegrationDatadogUserConfigDatadogTagArrayOutput {
	return o.ApplyT(func(v GetServiceIntegrationDatadogUserConfig) []GetServiceIntegrationDatadogUserConfigDatadogTag {
		return v.DatadogTags
	}).(GetServiceIntegrationDatadogUserConfigDatadogTagArrayOutput)
}

func (o GetServiceIntegrationDatadogUserConfigOutput) ExcludeConsumerGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceIntegrationDatadogUserConfig) []string { return v.ExcludeConsumerGroups }).(pulumi.StringArrayOutput)
}

func (o GetServiceIntegrationDatadogUserConfigOutput) ExcludeTopics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceIntegrationDatadogUserConfig) []string { return v.ExcludeTopics }).(pulumi.StringArrayOutput)
}

func (o GetServiceIntegrationDatadogUserConfigOutput) IncludeConsumerGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceIntegrationDatadogUserConfig) []string { return v.IncludeConsumerGroups }).(pulumi.StringArrayOutput)
}

func (o GetServiceIntegrationDatadogUserConfigOutput) IncludeTopics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceIntegrationDatadogUserConfig) []string { return v.IncludeTopics }).(pulumi.StringArrayOutput)
}

func (o GetServiceIntegrationDatadogUserConfigOutput) KafkaCustomMetrics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceIntegrationDatadogUserConfig) []string { return v.KafkaCustomMetrics }).(pulumi.StringArrayOutput)
}

type GetServiceIntegrationDatadogUserConfigDatadogTag struct {
	Comment *string `pulumi:"comment"`
	Tag     *string `pulumi:"tag"`
}

// GetServiceIntegrationDatadogUserConfigDatadogTagInput is an input type that accepts GetServiceIntegrationDatadogUserConfigDatadogTagArgs and GetServiceIntegrationDatadogUserConfigDatadogTagOutput values.
// You can construct a concrete instance of `GetServiceIntegrationDatadogUserConfigDatadogTagInput` via:
//
//          GetServiceIntegrationDatadogUserConfigDatadogTagArgs{...}
type GetServiceIntegrationDatadogUserConfigDatadogTagInput interface {
	pulumi.Input

	ToGetServiceIntegrationDatadogUserConfigDatadogTagOutput() GetServiceIntegrationDatadogUserConfigDatadogTagOutput
	ToGetServiceIntegrationDatadogUserConfigDatadogTagOutputWithContext(context.Context) GetServiceIntegrationDatadogUserConfigDatadogTagOutput
}

type GetServiceIntegrationDatadogUserConfigDatadogTagArgs struct {
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	Tag     pulumi.StringPtrInput `pulumi:"tag"`
}

func (GetServiceIntegrationDatadogUserConfigDatadogTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationDatadogUserConfigDatadogTag)(nil)).Elem()
}

func (i GetServiceIntegrationDatadogUserConfigDatadogTagArgs) ToGetServiceIntegrationDatadogUserConfigDatadogTagOutput() GetServiceIntegrationDatadogUserConfigDatadogTagOutput {
	return i.ToGetServiceIntegrationDatadogUserConfigDatadogTagOutputWithContext(context.Background())
}

func (i GetServiceIntegrationDatadogUserConfigDatadogTagArgs) ToGetServiceIntegrationDatadogUserConfigDatadogTagOutputWithContext(ctx context.Context) GetServiceIntegrationDatadogUserConfigDatadogTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationDatadogUserConfigDatadogTagOutput)
}

// GetServiceIntegrationDatadogUserConfigDatadogTagArrayInput is an input type that accepts GetServiceIntegrationDatadogUserConfigDatadogTagArray and GetServiceIntegrationDatadogUserConfigDatadogTagArrayOutput values.
// You can construct a concrete instance of `GetServiceIntegrationDatadogUserConfigDatadogTagArrayInput` via:
//
//          GetServiceIntegrationDatadogUserConfigDatadogTagArray{ GetServiceIntegrationDatadogUserConfigDatadogTagArgs{...} }
type GetServiceIntegrationDatadogUserConfigDatadogTagArrayInput interface {
	pulumi.Input

	ToGetServiceIntegrationDatadogUserConfigDatadogTagArrayOutput() GetServiceIntegrationDatadogUserConfigDatadogTagArrayOutput
	ToGetServiceIntegrationDatadogUserConfigDatadogTagArrayOutputWithContext(context.Context) GetServiceIntegrationDatadogUserConfigDatadogTagArrayOutput
}

type GetServiceIntegrationDatadogUserConfigDatadogTagArray []GetServiceIntegrationDatadogUserConfigDatadogTagInput

func (GetServiceIntegrationDatadogUserConfigDatadogTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceIntegrationDatadogUserConfigDatadogTag)(nil)).Elem()
}

func (i GetServiceIntegrationDatadogUserConfigDatadogTagArray) ToGetServiceIntegrationDatadogUserConfigDatadogTagArrayOutput() GetServiceIntegrationDatadogUserConfigDatadogTagArrayOutput {
	return i.ToGetServiceIntegrationDatadogUserConfigDatadogTagArrayOutputWithContext(context.Background())
}

func (i GetServiceIntegrationDatadogUserConfigDatadogTagArray) ToGetServiceIntegrationDatadogUserConfigDatadogTagArrayOutputWithContext(ctx context.Context) GetServiceIntegrationDatadogUserConfigDatadogTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationDatadogUserConfigDatadogTagArrayOutput)
}

type GetServiceIntegrationDatadogUserConfigDatadogTagOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationDatadogUserConfigDatadogTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationDatadogUserConfigDatadogTag)(nil)).Elem()
}

func (o GetServiceIntegrationDatadogUserConfigDatadogTagOutput) ToGetServiceIntegrationDatadogUserConfigDatadogTagOutput() GetServiceIntegrationDatadogUserConfigDatadogTagOutput {
	return o
}

func (o GetServiceIntegrationDatadogUserConfigDatadogTagOutput) ToGetServiceIntegrationDatadogUserConfigDatadogTagOutputWithContext(ctx context.Context) GetServiceIntegrationDatadogUserConfigDatadogTagOutput {
	return o
}

func (o GetServiceIntegrationDatadogUserConfigDatadogTagOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationDatadogUserConfigDatadogTag) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationDatadogUserConfigDatadogTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationDatadogUserConfigDatadogTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type GetServiceIntegrationDatadogUserConfigDatadogTagArrayOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationDatadogUserConfigDatadogTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceIntegrationDatadogUserConfigDatadogTag)(nil)).Elem()
}

func (o GetServiceIntegrationDatadogUserConfigDatadogTagArrayOutput) ToGetServiceIntegrationDatadogUserConfigDatadogTagArrayOutput() GetServiceIntegrationDatadogUserConfigDatadogTagArrayOutput {
	return o
}

func (o GetServiceIntegrationDatadogUserConfigDatadogTagArrayOutput) ToGetServiceIntegrationDatadogUserConfigDatadogTagArrayOutputWithContext(ctx context.Context) GetServiceIntegrationDatadogUserConfigDatadogTagArrayOutput {
	return o
}

func (o GetServiceIntegrationDatadogUserConfigDatadogTagArrayOutput) Index(i pulumi.IntInput) GetServiceIntegrationDatadogUserConfigDatadogTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceIntegrationDatadogUserConfigDatadogTag {
		return vs[0].([]GetServiceIntegrationDatadogUserConfigDatadogTag)[vs[1].(int)]
	}).(GetServiceIntegrationDatadogUserConfigDatadogTagOutput)
}

type GetServiceIntegrationEndpointDatadogUserConfig struct {
	DatadogApiKey        *string                                                    `pulumi:"datadogApiKey"`
	DatadogTags          []GetServiceIntegrationEndpointDatadogUserConfigDatadogTag `pulumi:"datadogTags"`
	DisableConsumerStats *string                                                    `pulumi:"disableConsumerStats"`
	MaxPartitionContexts *string                                                    `pulumi:"maxPartitionContexts"`
	Site                 *string                                                    `pulumi:"site"`
}

// GetServiceIntegrationEndpointDatadogUserConfigInput is an input type that accepts GetServiceIntegrationEndpointDatadogUserConfigArgs and GetServiceIntegrationEndpointDatadogUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationEndpointDatadogUserConfigInput` via:
//
//          GetServiceIntegrationEndpointDatadogUserConfigArgs{...}
type GetServiceIntegrationEndpointDatadogUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationEndpointDatadogUserConfigOutput() GetServiceIntegrationEndpointDatadogUserConfigOutput
	ToGetServiceIntegrationEndpointDatadogUserConfigOutputWithContext(context.Context) GetServiceIntegrationEndpointDatadogUserConfigOutput
}

type GetServiceIntegrationEndpointDatadogUserConfigArgs struct {
	DatadogApiKey        pulumi.StringPtrInput                                              `pulumi:"datadogApiKey"`
	DatadogTags          GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayInput `pulumi:"datadogTags"`
	DisableConsumerStats pulumi.StringPtrInput                                              `pulumi:"disableConsumerStats"`
	MaxPartitionContexts pulumi.StringPtrInput                                              `pulumi:"maxPartitionContexts"`
	Site                 pulumi.StringPtrInput                                              `pulumi:"site"`
}

func (GetServiceIntegrationEndpointDatadogUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationEndpointDatadogUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationEndpointDatadogUserConfigArgs) ToGetServiceIntegrationEndpointDatadogUserConfigOutput() GetServiceIntegrationEndpointDatadogUserConfigOutput {
	return i.ToGetServiceIntegrationEndpointDatadogUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationEndpointDatadogUserConfigArgs) ToGetServiceIntegrationEndpointDatadogUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationEndpointDatadogUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationEndpointDatadogUserConfigOutput)
}

type GetServiceIntegrationEndpointDatadogUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationEndpointDatadogUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationEndpointDatadogUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationEndpointDatadogUserConfigOutput) ToGetServiceIntegrationEndpointDatadogUserConfigOutput() GetServiceIntegrationEndpointDatadogUserConfigOutput {
	return o
}

func (o GetServiceIntegrationEndpointDatadogUserConfigOutput) ToGetServiceIntegrationEndpointDatadogUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationEndpointDatadogUserConfigOutput {
	return o
}

func (o GetServiceIntegrationEndpointDatadogUserConfigOutput) DatadogApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointDatadogUserConfig) *string { return v.DatadogApiKey }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointDatadogUserConfigOutput) DatadogTags() GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointDatadogUserConfig) []GetServiceIntegrationEndpointDatadogUserConfigDatadogTag {
		return v.DatadogTags
	}).(GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput)
}

func (o GetServiceIntegrationEndpointDatadogUserConfigOutput) DisableConsumerStats() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointDatadogUserConfig) *string { return v.DisableConsumerStats }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointDatadogUserConfigOutput) MaxPartitionContexts() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointDatadogUserConfig) *string { return v.MaxPartitionContexts }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointDatadogUserConfigOutput) Site() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointDatadogUserConfig) *string { return v.Site }).(pulumi.StringPtrOutput)
}

type GetServiceIntegrationEndpointDatadogUserConfigDatadogTag struct {
	Comment *string `pulumi:"comment"`
	Tag     *string `pulumi:"tag"`
}

// GetServiceIntegrationEndpointDatadogUserConfigDatadogTagInput is an input type that accepts GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArgs and GetServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput values.
// You can construct a concrete instance of `GetServiceIntegrationEndpointDatadogUserConfigDatadogTagInput` via:
//
//          GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArgs{...}
type GetServiceIntegrationEndpointDatadogUserConfigDatadogTagInput interface {
	pulumi.Input

	ToGetServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput() GetServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput
	ToGetServiceIntegrationEndpointDatadogUserConfigDatadogTagOutputWithContext(context.Context) GetServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput
}

type GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArgs struct {
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	Tag     pulumi.StringPtrInput `pulumi:"tag"`
}

func (GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationEndpointDatadogUserConfigDatadogTag)(nil)).Elem()
}

func (i GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArgs) ToGetServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput() GetServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput {
	return i.ToGetServiceIntegrationEndpointDatadogUserConfigDatadogTagOutputWithContext(context.Background())
}

func (i GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArgs) ToGetServiceIntegrationEndpointDatadogUserConfigDatadogTagOutputWithContext(ctx context.Context) GetServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput)
}

// GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayInput is an input type that accepts GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArray and GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput values.
// You can construct a concrete instance of `GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayInput` via:
//
//          GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArray{ GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArgs{...} }
type GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayInput interface {
	pulumi.Input

	ToGetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput() GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput
	ToGetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutputWithContext(context.Context) GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput
}

type GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArray []GetServiceIntegrationEndpointDatadogUserConfigDatadogTagInput

func (GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceIntegrationEndpointDatadogUserConfigDatadogTag)(nil)).Elem()
}

func (i GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArray) ToGetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput() GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput {
	return i.ToGetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutputWithContext(context.Background())
}

func (i GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArray) ToGetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutputWithContext(ctx context.Context) GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput)
}

type GetServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationEndpointDatadogUserConfigDatadogTag)(nil)).Elem()
}

func (o GetServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput) ToGetServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput() GetServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput {
	return o
}

func (o GetServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput) ToGetServiceIntegrationEndpointDatadogUserConfigDatadogTagOutputWithContext(ctx context.Context) GetServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput {
	return o
}

func (o GetServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointDatadogUserConfigDatadogTag) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointDatadogUserConfigDatadogTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceIntegrationEndpointDatadogUserConfigDatadogTag)(nil)).Elem()
}

func (o GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput) ToGetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput() GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput {
	return o
}

func (o GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput) ToGetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutputWithContext(ctx context.Context) GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput {
	return o
}

func (o GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput) Index(i pulumi.IntInput) GetServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceIntegrationEndpointDatadogUserConfigDatadogTag {
		return vs[0].([]GetServiceIntegrationEndpointDatadogUserConfigDatadogTag)[vs[1].(int)]
	}).(GetServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput)
}

type GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig struct {
	AccessKey    *string `pulumi:"accessKey"`
	LogGroupName *string `pulumi:"logGroupName"`
	Region       *string `pulumi:"region"`
	SecretKey    *string `pulumi:"secretKey"`
}

// GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigInput is an input type that accepts GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigArgs and GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigInput` via:
//
//          GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigArgs{...}
type GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput() GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput
	ToGetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutputWithContext(context.Context) GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput
}

type GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigArgs struct {
	AccessKey    pulumi.StringPtrInput `pulumi:"accessKey"`
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	Region       pulumi.StringPtrInput `pulumi:"region"`
	SecretKey    pulumi.StringPtrInput `pulumi:"secretKey"`
}

func (GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigArgs) ToGetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput() GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput {
	return i.ToGetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigArgs) ToGetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput)
}

type GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput) ToGetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput() GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput {
	return o
}

func (o GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput) ToGetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput {
	return o
}

func (o GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

type GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig struct {
	AccessKey *string `pulumi:"accessKey"`
	Namespace *string `pulumi:"namespace"`
	Region    *string `pulumi:"region"`
	SecretKey *string `pulumi:"secretKey"`
}

// GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigInput is an input type that accepts GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs and GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigInput` via:
//
//          GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs{...}
type GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput() GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput
	ToGetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutputWithContext(context.Context) GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput
}

type GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs struct {
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	Region    pulumi.StringPtrInput `pulumi:"region"`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
}

func (GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs) ToGetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput() GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput {
	return i.ToGetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs) ToGetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput)
}

type GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput) ToGetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput() GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput {
	return o
}

func (o GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput) ToGetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput {
	return o
}

func (o GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig) *string {
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig) *string {
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

type GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfig struct {
	Ca           *string `pulumi:"ca"`
	IndexDaysMax *string `pulumi:"indexDaysMax"`
	IndexPrefix  *string `pulumi:"indexPrefix"`
	Timeout      *string `pulumi:"timeout"`
	Url          *string `pulumi:"url"`
}

// GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigInput is an input type that accepts GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigArgs and GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigInput` via:
//
//          GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigArgs{...}
type GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput() GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput
	ToGetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutputWithContext(context.Context) GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput
}

type GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigArgs struct {
	Ca           pulumi.StringPtrInput `pulumi:"ca"`
	IndexDaysMax pulumi.StringPtrInput `pulumi:"indexDaysMax"`
	IndexPrefix  pulumi.StringPtrInput `pulumi:"indexPrefix"`
	Timeout      pulumi.StringPtrInput `pulumi:"timeout"`
	Url          pulumi.StringPtrInput `pulumi:"url"`
}

func (GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigArgs) ToGetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput() GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput {
	return i.ToGetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigArgs) ToGetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput)
}

type GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput) ToGetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput() GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput {
	return o
}

func (o GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput) ToGetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput {
	return o
}

func (o GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput) Ca() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfig) *string { return v.Ca }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput) IndexDaysMax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfig) *string {
		return v.IndexDaysMax
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput) IndexPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfig) *string { return v.IndexPrefix }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfig) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfig) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig struct {
	LogId                     *string `pulumi:"logId"`
	ProjectId                 *string `pulumi:"projectId"`
	ServiceAccountCredentials *string `pulumi:"serviceAccountCredentials"`
}

// GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigInput is an input type that accepts GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigArgs and GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigInput` via:
//
//          GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigArgs{...}
type GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput() GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput
	ToGetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutputWithContext(context.Context) GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput
}

type GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigArgs struct {
	LogId                     pulumi.StringPtrInput `pulumi:"logId"`
	ProjectId                 pulumi.StringPtrInput `pulumi:"projectId"`
	ServiceAccountCredentials pulumi.StringPtrInput `pulumi:"serviceAccountCredentials"`
}

func (GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigArgs) ToGetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput() GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput {
	return i.ToGetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigArgs) ToGetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput)
}

type GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput) ToGetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput() GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput {
	return o
}

func (o GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput) ToGetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput {
	return o
}

func (o GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput) LogId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig) *string { return v.LogId }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput) ServiceAccountCredentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig) *string {
		return v.ServiceAccountCredentials
	}).(pulumi.StringPtrOutput)
}

type GetServiceIntegrationEndpointExternalKafkaUserConfig struct {
	BootstrapServers                   *string `pulumi:"bootstrapServers"`
	SaslMechanism                      *string `pulumi:"saslMechanism"`
	SaslPlainPassword                  *string `pulumi:"saslPlainPassword"`
	SaslPlainUsername                  *string `pulumi:"saslPlainUsername"`
	SecurityProtocol                   *string `pulumi:"securityProtocol"`
	SslCaCert                          *string `pulumi:"sslCaCert"`
	SslClientCert                      *string `pulumi:"sslClientCert"`
	SslClientKey                       *string `pulumi:"sslClientKey"`
	SslEndpointIdentificationAlgorithm *string `pulumi:"sslEndpointIdentificationAlgorithm"`
}

// GetServiceIntegrationEndpointExternalKafkaUserConfigInput is an input type that accepts GetServiceIntegrationEndpointExternalKafkaUserConfigArgs and GetServiceIntegrationEndpointExternalKafkaUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationEndpointExternalKafkaUserConfigInput` via:
//
//          GetServiceIntegrationEndpointExternalKafkaUserConfigArgs{...}
type GetServiceIntegrationEndpointExternalKafkaUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationEndpointExternalKafkaUserConfigOutput() GetServiceIntegrationEndpointExternalKafkaUserConfigOutput
	ToGetServiceIntegrationEndpointExternalKafkaUserConfigOutputWithContext(context.Context) GetServiceIntegrationEndpointExternalKafkaUserConfigOutput
}

type GetServiceIntegrationEndpointExternalKafkaUserConfigArgs struct {
	BootstrapServers                   pulumi.StringPtrInput `pulumi:"bootstrapServers"`
	SaslMechanism                      pulumi.StringPtrInput `pulumi:"saslMechanism"`
	SaslPlainPassword                  pulumi.StringPtrInput `pulumi:"saslPlainPassword"`
	SaslPlainUsername                  pulumi.StringPtrInput `pulumi:"saslPlainUsername"`
	SecurityProtocol                   pulumi.StringPtrInput `pulumi:"securityProtocol"`
	SslCaCert                          pulumi.StringPtrInput `pulumi:"sslCaCert"`
	SslClientCert                      pulumi.StringPtrInput `pulumi:"sslClientCert"`
	SslClientKey                       pulumi.StringPtrInput `pulumi:"sslClientKey"`
	SslEndpointIdentificationAlgorithm pulumi.StringPtrInput `pulumi:"sslEndpointIdentificationAlgorithm"`
}

func (GetServiceIntegrationEndpointExternalKafkaUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationEndpointExternalKafkaUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationEndpointExternalKafkaUserConfigArgs) ToGetServiceIntegrationEndpointExternalKafkaUserConfigOutput() GetServiceIntegrationEndpointExternalKafkaUserConfigOutput {
	return i.ToGetServiceIntegrationEndpointExternalKafkaUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationEndpointExternalKafkaUserConfigArgs) ToGetServiceIntegrationEndpointExternalKafkaUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationEndpointExternalKafkaUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationEndpointExternalKafkaUserConfigOutput)
}

type GetServiceIntegrationEndpointExternalKafkaUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationEndpointExternalKafkaUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationEndpointExternalKafkaUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationEndpointExternalKafkaUserConfigOutput) ToGetServiceIntegrationEndpointExternalKafkaUserConfigOutput() GetServiceIntegrationEndpointExternalKafkaUserConfigOutput {
	return o
}

func (o GetServiceIntegrationEndpointExternalKafkaUserConfigOutput) ToGetServiceIntegrationEndpointExternalKafkaUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationEndpointExternalKafkaUserConfigOutput {
	return o
}

func (o GetServiceIntegrationEndpointExternalKafkaUserConfigOutput) BootstrapServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalKafkaUserConfig) *string { return v.BootstrapServers }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointExternalKafkaUserConfigOutput) SaslMechanism() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalKafkaUserConfig) *string { return v.SaslMechanism }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointExternalKafkaUserConfigOutput) SaslPlainPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalKafkaUserConfig) *string { return v.SaslPlainPassword }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointExternalKafkaUserConfigOutput) SaslPlainUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalKafkaUserConfig) *string { return v.SaslPlainUsername }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointExternalKafkaUserConfigOutput) SecurityProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalKafkaUserConfig) *string { return v.SecurityProtocol }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointExternalKafkaUserConfigOutput) SslCaCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalKafkaUserConfig) *string { return v.SslCaCert }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointExternalKafkaUserConfigOutput) SslClientCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalKafkaUserConfig) *string { return v.SslClientCert }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointExternalKafkaUserConfigOutput) SslClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalKafkaUserConfig) *string { return v.SslClientKey }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointExternalKafkaUserConfigOutput) SslEndpointIdentificationAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalKafkaUserConfig) *string {
		return v.SslEndpointIdentificationAlgorithm
	}).(pulumi.StringPtrOutput)
}

type GetServiceIntegrationEndpointExternalSchemaRegistryUserConfig struct {
	Authentication    *string `pulumi:"authentication"`
	BasicAuthPassword *string `pulumi:"basicAuthPassword"`
	BasicAuthUsername *string `pulumi:"basicAuthUsername"`
	Url               *string `pulumi:"url"`
}

// GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigInput is an input type that accepts GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigArgs and GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigInput` via:
//
//          GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigArgs{...}
type GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput() GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput
	ToGetServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutputWithContext(context.Context) GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput
}

type GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigArgs struct {
	Authentication    pulumi.StringPtrInput `pulumi:"authentication"`
	BasicAuthPassword pulumi.StringPtrInput `pulumi:"basicAuthPassword"`
	BasicAuthUsername pulumi.StringPtrInput `pulumi:"basicAuthUsername"`
	Url               pulumi.StringPtrInput `pulumi:"url"`
}

func (GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationEndpointExternalSchemaRegistryUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigArgs) ToGetServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput() GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput {
	return i.ToGetServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigArgs) ToGetServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput)
}

type GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationEndpointExternalSchemaRegistryUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput) ToGetServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput() GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput {
	return o
}

func (o GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput) ToGetServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput {
	return o
}

func (o GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalSchemaRegistryUserConfig) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput) BasicAuthPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalSchemaRegistryUserConfig) *string {
		return v.BasicAuthPassword
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput) BasicAuthUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalSchemaRegistryUserConfig) *string {
		return v.BasicAuthUsername
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointExternalSchemaRegistryUserConfig) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type GetServiceIntegrationEndpointJolokiaUserConfig struct {
	BasicAuthPassword *string `pulumi:"basicAuthPassword"`
	BasicAuthUsername *string `pulumi:"basicAuthUsername"`
}

// GetServiceIntegrationEndpointJolokiaUserConfigInput is an input type that accepts GetServiceIntegrationEndpointJolokiaUserConfigArgs and GetServiceIntegrationEndpointJolokiaUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationEndpointJolokiaUserConfigInput` via:
//
//          GetServiceIntegrationEndpointJolokiaUserConfigArgs{...}
type GetServiceIntegrationEndpointJolokiaUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationEndpointJolokiaUserConfigOutput() GetServiceIntegrationEndpointJolokiaUserConfigOutput
	ToGetServiceIntegrationEndpointJolokiaUserConfigOutputWithContext(context.Context) GetServiceIntegrationEndpointJolokiaUserConfigOutput
}

type GetServiceIntegrationEndpointJolokiaUserConfigArgs struct {
	BasicAuthPassword pulumi.StringPtrInput `pulumi:"basicAuthPassword"`
	BasicAuthUsername pulumi.StringPtrInput `pulumi:"basicAuthUsername"`
}

func (GetServiceIntegrationEndpointJolokiaUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationEndpointJolokiaUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationEndpointJolokiaUserConfigArgs) ToGetServiceIntegrationEndpointJolokiaUserConfigOutput() GetServiceIntegrationEndpointJolokiaUserConfigOutput {
	return i.ToGetServiceIntegrationEndpointJolokiaUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationEndpointJolokiaUserConfigArgs) ToGetServiceIntegrationEndpointJolokiaUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationEndpointJolokiaUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationEndpointJolokiaUserConfigOutput)
}

type GetServiceIntegrationEndpointJolokiaUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationEndpointJolokiaUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationEndpointJolokiaUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationEndpointJolokiaUserConfigOutput) ToGetServiceIntegrationEndpointJolokiaUserConfigOutput() GetServiceIntegrationEndpointJolokiaUserConfigOutput {
	return o
}

func (o GetServiceIntegrationEndpointJolokiaUserConfigOutput) ToGetServiceIntegrationEndpointJolokiaUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationEndpointJolokiaUserConfigOutput {
	return o
}

func (o GetServiceIntegrationEndpointJolokiaUserConfigOutput) BasicAuthPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointJolokiaUserConfig) *string { return v.BasicAuthPassword }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointJolokiaUserConfigOutput) BasicAuthUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointJolokiaUserConfig) *string { return v.BasicAuthUsername }).(pulumi.StringPtrOutput)
}

type GetServiceIntegrationEndpointPrometheusUserConfig struct {
	BasicAuthPassword *string `pulumi:"basicAuthPassword"`
	BasicAuthUsername *string `pulumi:"basicAuthUsername"`
}

// GetServiceIntegrationEndpointPrometheusUserConfigInput is an input type that accepts GetServiceIntegrationEndpointPrometheusUserConfigArgs and GetServiceIntegrationEndpointPrometheusUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationEndpointPrometheusUserConfigInput` via:
//
//          GetServiceIntegrationEndpointPrometheusUserConfigArgs{...}
type GetServiceIntegrationEndpointPrometheusUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationEndpointPrometheusUserConfigOutput() GetServiceIntegrationEndpointPrometheusUserConfigOutput
	ToGetServiceIntegrationEndpointPrometheusUserConfigOutputWithContext(context.Context) GetServiceIntegrationEndpointPrometheusUserConfigOutput
}

type GetServiceIntegrationEndpointPrometheusUserConfigArgs struct {
	BasicAuthPassword pulumi.StringPtrInput `pulumi:"basicAuthPassword"`
	BasicAuthUsername pulumi.StringPtrInput `pulumi:"basicAuthUsername"`
}

func (GetServiceIntegrationEndpointPrometheusUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationEndpointPrometheusUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationEndpointPrometheusUserConfigArgs) ToGetServiceIntegrationEndpointPrometheusUserConfigOutput() GetServiceIntegrationEndpointPrometheusUserConfigOutput {
	return i.ToGetServiceIntegrationEndpointPrometheusUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationEndpointPrometheusUserConfigArgs) ToGetServiceIntegrationEndpointPrometheusUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationEndpointPrometheusUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationEndpointPrometheusUserConfigOutput)
}

type GetServiceIntegrationEndpointPrometheusUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationEndpointPrometheusUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationEndpointPrometheusUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationEndpointPrometheusUserConfigOutput) ToGetServiceIntegrationEndpointPrometheusUserConfigOutput() GetServiceIntegrationEndpointPrometheusUserConfigOutput {
	return o
}

func (o GetServiceIntegrationEndpointPrometheusUserConfigOutput) ToGetServiceIntegrationEndpointPrometheusUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationEndpointPrometheusUserConfigOutput {
	return o
}

func (o GetServiceIntegrationEndpointPrometheusUserConfigOutput) BasicAuthPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointPrometheusUserConfig) *string { return v.BasicAuthPassword }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointPrometheusUserConfigOutput) BasicAuthUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointPrometheusUserConfig) *string { return v.BasicAuthUsername }).(pulumi.StringPtrOutput)
}

type GetServiceIntegrationEndpointRsyslogUserConfig struct {
	Ca      *string `pulumi:"ca"`
	Cert    *string `pulumi:"cert"`
	Format  *string `pulumi:"format"`
	Key     *string `pulumi:"key"`
	Logline *string `pulumi:"logline"`
	Port    *string `pulumi:"port"`
	Sd      *string `pulumi:"sd"`
	Server  *string `pulumi:"server"`
	Tls     *string `pulumi:"tls"`
}

// GetServiceIntegrationEndpointRsyslogUserConfigInput is an input type that accepts GetServiceIntegrationEndpointRsyslogUserConfigArgs and GetServiceIntegrationEndpointRsyslogUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationEndpointRsyslogUserConfigInput` via:
//
//          GetServiceIntegrationEndpointRsyslogUserConfigArgs{...}
type GetServiceIntegrationEndpointRsyslogUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationEndpointRsyslogUserConfigOutput() GetServiceIntegrationEndpointRsyslogUserConfigOutput
	ToGetServiceIntegrationEndpointRsyslogUserConfigOutputWithContext(context.Context) GetServiceIntegrationEndpointRsyslogUserConfigOutput
}

type GetServiceIntegrationEndpointRsyslogUserConfigArgs struct {
	Ca      pulumi.StringPtrInput `pulumi:"ca"`
	Cert    pulumi.StringPtrInput `pulumi:"cert"`
	Format  pulumi.StringPtrInput `pulumi:"format"`
	Key     pulumi.StringPtrInput `pulumi:"key"`
	Logline pulumi.StringPtrInput `pulumi:"logline"`
	Port    pulumi.StringPtrInput `pulumi:"port"`
	Sd      pulumi.StringPtrInput `pulumi:"sd"`
	Server  pulumi.StringPtrInput `pulumi:"server"`
	Tls     pulumi.StringPtrInput `pulumi:"tls"`
}

func (GetServiceIntegrationEndpointRsyslogUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationEndpointRsyslogUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationEndpointRsyslogUserConfigArgs) ToGetServiceIntegrationEndpointRsyslogUserConfigOutput() GetServiceIntegrationEndpointRsyslogUserConfigOutput {
	return i.ToGetServiceIntegrationEndpointRsyslogUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationEndpointRsyslogUserConfigArgs) ToGetServiceIntegrationEndpointRsyslogUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationEndpointRsyslogUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationEndpointRsyslogUserConfigOutput)
}

type GetServiceIntegrationEndpointRsyslogUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationEndpointRsyslogUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationEndpointRsyslogUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationEndpointRsyslogUserConfigOutput) ToGetServiceIntegrationEndpointRsyslogUserConfigOutput() GetServiceIntegrationEndpointRsyslogUserConfigOutput {
	return o
}

func (o GetServiceIntegrationEndpointRsyslogUserConfigOutput) ToGetServiceIntegrationEndpointRsyslogUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationEndpointRsyslogUserConfigOutput {
	return o
}

func (o GetServiceIntegrationEndpointRsyslogUserConfigOutput) Ca() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointRsyslogUserConfig) *string { return v.Ca }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointRsyslogUserConfigOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointRsyslogUserConfig) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointRsyslogUserConfigOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointRsyslogUserConfig) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointRsyslogUserConfigOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointRsyslogUserConfig) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointRsyslogUserConfigOutput) Logline() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointRsyslogUserConfig) *string { return v.Logline }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointRsyslogUserConfigOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointRsyslogUserConfig) *string { return v.Port }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointRsyslogUserConfigOutput) Sd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointRsyslogUserConfig) *string { return v.Sd }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointRsyslogUserConfigOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointRsyslogUserConfig) *string { return v.Server }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointRsyslogUserConfigOutput) Tls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointRsyslogUserConfig) *string { return v.Tls }).(pulumi.StringPtrOutput)
}

type GetServiceIntegrationEndpointSignalfxUserConfig struct {
	EnabledMetrics []string `pulumi:"enabledMetrics"`
	SignalfxApiKey *string  `pulumi:"signalfxApiKey"`
	SignalfxRealm  *string  `pulumi:"signalfxRealm"`
}

// GetServiceIntegrationEndpointSignalfxUserConfigInput is an input type that accepts GetServiceIntegrationEndpointSignalfxUserConfigArgs and GetServiceIntegrationEndpointSignalfxUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationEndpointSignalfxUserConfigInput` via:
//
//          GetServiceIntegrationEndpointSignalfxUserConfigArgs{...}
type GetServiceIntegrationEndpointSignalfxUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationEndpointSignalfxUserConfigOutput() GetServiceIntegrationEndpointSignalfxUserConfigOutput
	ToGetServiceIntegrationEndpointSignalfxUserConfigOutputWithContext(context.Context) GetServiceIntegrationEndpointSignalfxUserConfigOutput
}

type GetServiceIntegrationEndpointSignalfxUserConfigArgs struct {
	EnabledMetrics pulumi.StringArrayInput `pulumi:"enabledMetrics"`
	SignalfxApiKey pulumi.StringPtrInput   `pulumi:"signalfxApiKey"`
	SignalfxRealm  pulumi.StringPtrInput   `pulumi:"signalfxRealm"`
}

func (GetServiceIntegrationEndpointSignalfxUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationEndpointSignalfxUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationEndpointSignalfxUserConfigArgs) ToGetServiceIntegrationEndpointSignalfxUserConfigOutput() GetServiceIntegrationEndpointSignalfxUserConfigOutput {
	return i.ToGetServiceIntegrationEndpointSignalfxUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationEndpointSignalfxUserConfigArgs) ToGetServiceIntegrationEndpointSignalfxUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationEndpointSignalfxUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationEndpointSignalfxUserConfigOutput)
}

type GetServiceIntegrationEndpointSignalfxUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationEndpointSignalfxUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationEndpointSignalfxUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationEndpointSignalfxUserConfigOutput) ToGetServiceIntegrationEndpointSignalfxUserConfigOutput() GetServiceIntegrationEndpointSignalfxUserConfigOutput {
	return o
}

func (o GetServiceIntegrationEndpointSignalfxUserConfigOutput) ToGetServiceIntegrationEndpointSignalfxUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationEndpointSignalfxUserConfigOutput {
	return o
}

func (o GetServiceIntegrationEndpointSignalfxUserConfigOutput) EnabledMetrics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointSignalfxUserConfig) []string { return v.EnabledMetrics }).(pulumi.StringArrayOutput)
}

func (o GetServiceIntegrationEndpointSignalfxUserConfigOutput) SignalfxApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointSignalfxUserConfig) *string { return v.SignalfxApiKey }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationEndpointSignalfxUserConfigOutput) SignalfxRealm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationEndpointSignalfxUserConfig) *string { return v.SignalfxRealm }).(pulumi.StringPtrOutput)
}

type GetServiceIntegrationExternalAwsCloudwatchLogsUserConfig struct {
}

// GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigInput is an input type that accepts GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs and GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigInput` via:
//
//          GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs{...}
type GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput() GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput
	ToGetServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutputWithContext(context.Context) GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput
}

type GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs struct {
}

func (GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationExternalAwsCloudwatchLogsUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs) ToGetServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput() GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput {
	return i.ToGetServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs) ToGetServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput)
}

type GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationExternalAwsCloudwatchLogsUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput) ToGetServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput() GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput {
	return o
}

func (o GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput) ToGetServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput {
	return o
}

type GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfig struct {
}

// GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigInput is an input type that accepts GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigArgs and GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigInput` via:
//
//          GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigArgs{...}
type GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput() GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput
	ToGetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutputWithContext(context.Context) GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput
}

type GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigArgs struct {
}

func (GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigArgs) ToGetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput() GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput {
	return i.ToGetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigArgs) ToGetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput)
}

type GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput) ToGetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput() GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput {
	return o
}

func (o GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput) ToGetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput {
	return o
}

type GetServiceIntegrationExternalElasticsearchLogsUserConfig struct {
}

// GetServiceIntegrationExternalElasticsearchLogsUserConfigInput is an input type that accepts GetServiceIntegrationExternalElasticsearchLogsUserConfigArgs and GetServiceIntegrationExternalElasticsearchLogsUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationExternalElasticsearchLogsUserConfigInput` via:
//
//          GetServiceIntegrationExternalElasticsearchLogsUserConfigArgs{...}
type GetServiceIntegrationExternalElasticsearchLogsUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationExternalElasticsearchLogsUserConfigOutput() GetServiceIntegrationExternalElasticsearchLogsUserConfigOutput
	ToGetServiceIntegrationExternalElasticsearchLogsUserConfigOutputWithContext(context.Context) GetServiceIntegrationExternalElasticsearchLogsUserConfigOutput
}

type GetServiceIntegrationExternalElasticsearchLogsUserConfigArgs struct {
}

func (GetServiceIntegrationExternalElasticsearchLogsUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationExternalElasticsearchLogsUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationExternalElasticsearchLogsUserConfigArgs) ToGetServiceIntegrationExternalElasticsearchLogsUserConfigOutput() GetServiceIntegrationExternalElasticsearchLogsUserConfigOutput {
	return i.ToGetServiceIntegrationExternalElasticsearchLogsUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationExternalElasticsearchLogsUserConfigArgs) ToGetServiceIntegrationExternalElasticsearchLogsUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationExternalElasticsearchLogsUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationExternalElasticsearchLogsUserConfigOutput)
}

type GetServiceIntegrationExternalElasticsearchLogsUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationExternalElasticsearchLogsUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationExternalElasticsearchLogsUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationExternalElasticsearchLogsUserConfigOutput) ToGetServiceIntegrationExternalElasticsearchLogsUserConfigOutput() GetServiceIntegrationExternalElasticsearchLogsUserConfigOutput {
	return o
}

func (o GetServiceIntegrationExternalElasticsearchLogsUserConfigOutput) ToGetServiceIntegrationExternalElasticsearchLogsUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationExternalElasticsearchLogsUserConfigOutput {
	return o
}

type GetServiceIntegrationExternalGoogleCloudLoggingUserConfig struct {
}

// GetServiceIntegrationExternalGoogleCloudLoggingUserConfigInput is an input type that accepts GetServiceIntegrationExternalGoogleCloudLoggingUserConfigArgs and GetServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationExternalGoogleCloudLoggingUserConfigInput` via:
//
//          GetServiceIntegrationExternalGoogleCloudLoggingUserConfigArgs{...}
type GetServiceIntegrationExternalGoogleCloudLoggingUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput() GetServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput
	ToGetServiceIntegrationExternalGoogleCloudLoggingUserConfigOutputWithContext(context.Context) GetServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput
}

type GetServiceIntegrationExternalGoogleCloudLoggingUserConfigArgs struct {
}

func (GetServiceIntegrationExternalGoogleCloudLoggingUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationExternalGoogleCloudLoggingUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationExternalGoogleCloudLoggingUserConfigArgs) ToGetServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput() GetServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput {
	return i.ToGetServiceIntegrationExternalGoogleCloudLoggingUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationExternalGoogleCloudLoggingUserConfigArgs) ToGetServiceIntegrationExternalGoogleCloudLoggingUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput)
}

type GetServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationExternalGoogleCloudLoggingUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput) ToGetServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput() GetServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput {
	return o
}

func (o GetServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput) ToGetServiceIntegrationExternalGoogleCloudLoggingUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput {
	return o
}

type GetServiceIntegrationKafkaConnectUserConfig struct {
	KafkaConnect *GetServiceIntegrationKafkaConnectUserConfigKafkaConnect `pulumi:"kafkaConnect"`
}

// GetServiceIntegrationKafkaConnectUserConfigInput is an input type that accepts GetServiceIntegrationKafkaConnectUserConfigArgs and GetServiceIntegrationKafkaConnectUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationKafkaConnectUserConfigInput` via:
//
//          GetServiceIntegrationKafkaConnectUserConfigArgs{...}
type GetServiceIntegrationKafkaConnectUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationKafkaConnectUserConfigOutput() GetServiceIntegrationKafkaConnectUserConfigOutput
	ToGetServiceIntegrationKafkaConnectUserConfigOutputWithContext(context.Context) GetServiceIntegrationKafkaConnectUserConfigOutput
}

type GetServiceIntegrationKafkaConnectUserConfigArgs struct {
	KafkaConnect GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrInput `pulumi:"kafkaConnect"`
}

func (GetServiceIntegrationKafkaConnectUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationKafkaConnectUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationKafkaConnectUserConfigArgs) ToGetServiceIntegrationKafkaConnectUserConfigOutput() GetServiceIntegrationKafkaConnectUserConfigOutput {
	return i.ToGetServiceIntegrationKafkaConnectUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationKafkaConnectUserConfigArgs) ToGetServiceIntegrationKafkaConnectUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationKafkaConnectUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationKafkaConnectUserConfigOutput)
}

type GetServiceIntegrationKafkaConnectUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationKafkaConnectUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationKafkaConnectUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationKafkaConnectUserConfigOutput) ToGetServiceIntegrationKafkaConnectUserConfigOutput() GetServiceIntegrationKafkaConnectUserConfigOutput {
	return o
}

func (o GetServiceIntegrationKafkaConnectUserConfigOutput) ToGetServiceIntegrationKafkaConnectUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationKafkaConnectUserConfigOutput {
	return o
}

func (o GetServiceIntegrationKafkaConnectUserConfigOutput) KafkaConnect() GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationKafkaConnectUserConfig) *GetServiceIntegrationKafkaConnectUserConfigKafkaConnect {
		return v.KafkaConnect
	}).(GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput)
}

type GetServiceIntegrationKafkaConnectUserConfigKafkaConnect struct {
	ConfigStorageTopic *string `pulumi:"configStorageTopic"`
	GroupId            *string `pulumi:"groupId"`
	OffsetStorageTopic *string `pulumi:"offsetStorageTopic"`
	StatusStorageTopic *string `pulumi:"statusStorageTopic"`
}

// GetServiceIntegrationKafkaConnectUserConfigKafkaConnectInput is an input type that accepts GetServiceIntegrationKafkaConnectUserConfigKafkaConnectArgs and GetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput values.
// You can construct a concrete instance of `GetServiceIntegrationKafkaConnectUserConfigKafkaConnectInput` via:
//
//          GetServiceIntegrationKafkaConnectUserConfigKafkaConnectArgs{...}
type GetServiceIntegrationKafkaConnectUserConfigKafkaConnectInput interface {
	pulumi.Input

	ToGetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput() GetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput
	ToGetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutputWithContext(context.Context) GetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput
}

type GetServiceIntegrationKafkaConnectUserConfigKafkaConnectArgs struct {
	ConfigStorageTopic pulumi.StringPtrInput `pulumi:"configStorageTopic"`
	GroupId            pulumi.StringPtrInput `pulumi:"groupId"`
	OffsetStorageTopic pulumi.StringPtrInput `pulumi:"offsetStorageTopic"`
	StatusStorageTopic pulumi.StringPtrInput `pulumi:"statusStorageTopic"`
}

func (GetServiceIntegrationKafkaConnectUserConfigKafkaConnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationKafkaConnectUserConfigKafkaConnect)(nil)).Elem()
}

func (i GetServiceIntegrationKafkaConnectUserConfigKafkaConnectArgs) ToGetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput() GetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput {
	return i.ToGetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutputWithContext(context.Background())
}

func (i GetServiceIntegrationKafkaConnectUserConfigKafkaConnectArgs) ToGetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutputWithContext(ctx context.Context) GetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput)
}

func (i GetServiceIntegrationKafkaConnectUserConfigKafkaConnectArgs) ToGetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput() GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput {
	return i.ToGetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(context.Background())
}

func (i GetServiceIntegrationKafkaConnectUserConfigKafkaConnectArgs) ToGetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx context.Context) GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput).ToGetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx)
}

// GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrInput is an input type that accepts GetServiceIntegrationKafkaConnectUserConfigKafkaConnectArgs, GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtr and GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput values.
// You can construct a concrete instance of `GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrInput` via:
//
//          GetServiceIntegrationKafkaConnectUserConfigKafkaConnectArgs{...}
//
//  or:
//
//          nil
type GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrInput interface {
	pulumi.Input

	ToGetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput() GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput
	ToGetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(context.Context) GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput
}

type getServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrType GetServiceIntegrationKafkaConnectUserConfigKafkaConnectArgs

func GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtr(v *GetServiceIntegrationKafkaConnectUserConfigKafkaConnectArgs) GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrInput {
	return (*getServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrType)(v)
}

func (*getServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceIntegrationKafkaConnectUserConfigKafkaConnect)(nil)).Elem()
}

func (i *getServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrType) ToGetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput() GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput {
	return i.ToGetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(context.Background())
}

func (i *getServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrType) ToGetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx context.Context) GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput)
}

type GetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationKafkaConnectUserConfigKafkaConnect)(nil)).Elem()
}

func (o GetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput) ToGetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput() GetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput {
	return o
}

func (o GetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput) ToGetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutputWithContext(ctx context.Context) GetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput {
	return o
}

func (o GetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput) ToGetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput() GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o.ToGetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(context.Background())
}

func (o GetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput) ToGetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx context.Context) GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationKafkaConnectUserConfigKafkaConnect) *GetServiceIntegrationKafkaConnectUserConfigKafkaConnect {
		return &v
	}).(GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput)
}
func (o GetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput) ConfigStorageTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationKafkaConnectUserConfigKafkaConnect) *string { return v.ConfigStorageTopic }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationKafkaConnectUserConfigKafkaConnect) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput) OffsetStorageTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationKafkaConnectUserConfigKafkaConnect) *string { return v.OffsetStorageTopic }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput) StatusStorageTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationKafkaConnectUserConfigKafkaConnect) *string { return v.StatusStorageTopic }).(pulumi.StringPtrOutput)
}

type GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceIntegrationKafkaConnectUserConfigKafkaConnect)(nil)).Elem()
}

func (o GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput) ToGetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput() GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o
}

func (o GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput) ToGetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx context.Context) GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o
}

func (o GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput) Elem() GetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput {
	return o.ApplyT(func(v *GetServiceIntegrationKafkaConnectUserConfigKafkaConnect) GetServiceIntegrationKafkaConnectUserConfigKafkaConnect {
		return *v
	}).(GetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput)
}

func (o GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput) ConfigStorageTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConfigStorageTopic
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.GroupId
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput) OffsetStorageTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.OffsetStorageTopic
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput) StatusStorageTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.StatusStorageTopic
	}).(pulumi.StringPtrOutput)
}

type GetServiceIntegrationKafkaLogsUserConfig struct {
	KafkaTopic *string `pulumi:"kafkaTopic"`
}

// GetServiceIntegrationKafkaLogsUserConfigInput is an input type that accepts GetServiceIntegrationKafkaLogsUserConfigArgs and GetServiceIntegrationKafkaLogsUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationKafkaLogsUserConfigInput` via:
//
//          GetServiceIntegrationKafkaLogsUserConfigArgs{...}
type GetServiceIntegrationKafkaLogsUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationKafkaLogsUserConfigOutput() GetServiceIntegrationKafkaLogsUserConfigOutput
	ToGetServiceIntegrationKafkaLogsUserConfigOutputWithContext(context.Context) GetServiceIntegrationKafkaLogsUserConfigOutput
}

type GetServiceIntegrationKafkaLogsUserConfigArgs struct {
	KafkaTopic pulumi.StringPtrInput `pulumi:"kafkaTopic"`
}

func (GetServiceIntegrationKafkaLogsUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationKafkaLogsUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationKafkaLogsUserConfigArgs) ToGetServiceIntegrationKafkaLogsUserConfigOutput() GetServiceIntegrationKafkaLogsUserConfigOutput {
	return i.ToGetServiceIntegrationKafkaLogsUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationKafkaLogsUserConfigArgs) ToGetServiceIntegrationKafkaLogsUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationKafkaLogsUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationKafkaLogsUserConfigOutput)
}

type GetServiceIntegrationKafkaLogsUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationKafkaLogsUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationKafkaLogsUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationKafkaLogsUserConfigOutput) ToGetServiceIntegrationKafkaLogsUserConfigOutput() GetServiceIntegrationKafkaLogsUserConfigOutput {
	return o
}

func (o GetServiceIntegrationKafkaLogsUserConfigOutput) ToGetServiceIntegrationKafkaLogsUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationKafkaLogsUserConfigOutput {
	return o
}

func (o GetServiceIntegrationKafkaLogsUserConfigOutput) KafkaTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationKafkaLogsUserConfig) *string { return v.KafkaTopic }).(pulumi.StringPtrOutput)
}

type GetServiceIntegrationKafkaMirrormakerUserConfig struct {
	ClusterAlias *string `pulumi:"clusterAlias"`
}

// GetServiceIntegrationKafkaMirrormakerUserConfigInput is an input type that accepts GetServiceIntegrationKafkaMirrormakerUserConfigArgs and GetServiceIntegrationKafkaMirrormakerUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationKafkaMirrormakerUserConfigInput` via:
//
//          GetServiceIntegrationKafkaMirrormakerUserConfigArgs{...}
type GetServiceIntegrationKafkaMirrormakerUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationKafkaMirrormakerUserConfigOutput() GetServiceIntegrationKafkaMirrormakerUserConfigOutput
	ToGetServiceIntegrationKafkaMirrormakerUserConfigOutputWithContext(context.Context) GetServiceIntegrationKafkaMirrormakerUserConfigOutput
}

type GetServiceIntegrationKafkaMirrormakerUserConfigArgs struct {
	ClusterAlias pulumi.StringPtrInput `pulumi:"clusterAlias"`
}

func (GetServiceIntegrationKafkaMirrormakerUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationKafkaMirrormakerUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationKafkaMirrormakerUserConfigArgs) ToGetServiceIntegrationKafkaMirrormakerUserConfigOutput() GetServiceIntegrationKafkaMirrormakerUserConfigOutput {
	return i.ToGetServiceIntegrationKafkaMirrormakerUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationKafkaMirrormakerUserConfigArgs) ToGetServiceIntegrationKafkaMirrormakerUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationKafkaMirrormakerUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationKafkaMirrormakerUserConfigOutput)
}

type GetServiceIntegrationKafkaMirrormakerUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationKafkaMirrormakerUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationKafkaMirrormakerUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationKafkaMirrormakerUserConfigOutput) ToGetServiceIntegrationKafkaMirrormakerUserConfigOutput() GetServiceIntegrationKafkaMirrormakerUserConfigOutput {
	return o
}

func (o GetServiceIntegrationKafkaMirrormakerUserConfigOutput) ToGetServiceIntegrationKafkaMirrormakerUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationKafkaMirrormakerUserConfigOutput {
	return o
}

func (o GetServiceIntegrationKafkaMirrormakerUserConfigOutput) ClusterAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationKafkaMirrormakerUserConfig) *string { return v.ClusterAlias }).(pulumi.StringPtrOutput)
}

type GetServiceIntegrationLogsUserConfig struct {
	ElasticsearchIndexDaysMax *string `pulumi:"elasticsearchIndexDaysMax"`
	ElasticsearchIndexPrefix  *string `pulumi:"elasticsearchIndexPrefix"`
}

// GetServiceIntegrationLogsUserConfigInput is an input type that accepts GetServiceIntegrationLogsUserConfigArgs and GetServiceIntegrationLogsUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationLogsUserConfigInput` via:
//
//          GetServiceIntegrationLogsUserConfigArgs{...}
type GetServiceIntegrationLogsUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationLogsUserConfigOutput() GetServiceIntegrationLogsUserConfigOutput
	ToGetServiceIntegrationLogsUserConfigOutputWithContext(context.Context) GetServiceIntegrationLogsUserConfigOutput
}

type GetServiceIntegrationLogsUserConfigArgs struct {
	ElasticsearchIndexDaysMax pulumi.StringPtrInput `pulumi:"elasticsearchIndexDaysMax"`
	ElasticsearchIndexPrefix  pulumi.StringPtrInput `pulumi:"elasticsearchIndexPrefix"`
}

func (GetServiceIntegrationLogsUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationLogsUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationLogsUserConfigArgs) ToGetServiceIntegrationLogsUserConfigOutput() GetServiceIntegrationLogsUserConfigOutput {
	return i.ToGetServiceIntegrationLogsUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationLogsUserConfigArgs) ToGetServiceIntegrationLogsUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationLogsUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationLogsUserConfigOutput)
}

type GetServiceIntegrationLogsUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationLogsUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationLogsUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationLogsUserConfigOutput) ToGetServiceIntegrationLogsUserConfigOutput() GetServiceIntegrationLogsUserConfigOutput {
	return o
}

func (o GetServiceIntegrationLogsUserConfigOutput) ToGetServiceIntegrationLogsUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationLogsUserConfigOutput {
	return o
}

func (o GetServiceIntegrationLogsUserConfigOutput) ElasticsearchIndexDaysMax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationLogsUserConfig) *string { return v.ElasticsearchIndexDaysMax }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationLogsUserConfigOutput) ElasticsearchIndexPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationLogsUserConfig) *string { return v.ElasticsearchIndexPrefix }).(pulumi.StringPtrOutput)
}

type GetServiceIntegrationM3aggregatorUserConfig struct {
}

// GetServiceIntegrationM3aggregatorUserConfigInput is an input type that accepts GetServiceIntegrationM3aggregatorUserConfigArgs and GetServiceIntegrationM3aggregatorUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationM3aggregatorUserConfigInput` via:
//
//          GetServiceIntegrationM3aggregatorUserConfigArgs{...}
type GetServiceIntegrationM3aggregatorUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationM3aggregatorUserConfigOutput() GetServiceIntegrationM3aggregatorUserConfigOutput
	ToGetServiceIntegrationM3aggregatorUserConfigOutputWithContext(context.Context) GetServiceIntegrationM3aggregatorUserConfigOutput
}

type GetServiceIntegrationM3aggregatorUserConfigArgs struct {
}

func (GetServiceIntegrationM3aggregatorUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationM3aggregatorUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationM3aggregatorUserConfigArgs) ToGetServiceIntegrationM3aggregatorUserConfigOutput() GetServiceIntegrationM3aggregatorUserConfigOutput {
	return i.ToGetServiceIntegrationM3aggregatorUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationM3aggregatorUserConfigArgs) ToGetServiceIntegrationM3aggregatorUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationM3aggregatorUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationM3aggregatorUserConfigOutput)
}

type GetServiceIntegrationM3aggregatorUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationM3aggregatorUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationM3aggregatorUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationM3aggregatorUserConfigOutput) ToGetServiceIntegrationM3aggregatorUserConfigOutput() GetServiceIntegrationM3aggregatorUserConfigOutput {
	return o
}

func (o GetServiceIntegrationM3aggregatorUserConfigOutput) ToGetServiceIntegrationM3aggregatorUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationM3aggregatorUserConfigOutput {
	return o
}

type GetServiceIntegrationM3coordinatorUserConfig struct {
}

// GetServiceIntegrationM3coordinatorUserConfigInput is an input type that accepts GetServiceIntegrationM3coordinatorUserConfigArgs and GetServiceIntegrationM3coordinatorUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationM3coordinatorUserConfigInput` via:
//
//          GetServiceIntegrationM3coordinatorUserConfigArgs{...}
type GetServiceIntegrationM3coordinatorUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationM3coordinatorUserConfigOutput() GetServiceIntegrationM3coordinatorUserConfigOutput
	ToGetServiceIntegrationM3coordinatorUserConfigOutputWithContext(context.Context) GetServiceIntegrationM3coordinatorUserConfigOutput
}

type GetServiceIntegrationM3coordinatorUserConfigArgs struct {
}

func (GetServiceIntegrationM3coordinatorUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationM3coordinatorUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationM3coordinatorUserConfigArgs) ToGetServiceIntegrationM3coordinatorUserConfigOutput() GetServiceIntegrationM3coordinatorUserConfigOutput {
	return i.ToGetServiceIntegrationM3coordinatorUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationM3coordinatorUserConfigArgs) ToGetServiceIntegrationM3coordinatorUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationM3coordinatorUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationM3coordinatorUserConfigOutput)
}

type GetServiceIntegrationM3coordinatorUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationM3coordinatorUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationM3coordinatorUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationM3coordinatorUserConfigOutput) ToGetServiceIntegrationM3coordinatorUserConfigOutput() GetServiceIntegrationM3coordinatorUserConfigOutput {
	return o
}

func (o GetServiceIntegrationM3coordinatorUserConfigOutput) ToGetServiceIntegrationM3coordinatorUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationM3coordinatorUserConfigOutput {
	return o
}

type GetServiceIntegrationMetricsUserConfig struct {
	Database      *string                                            `pulumi:"database"`
	RetentionDays *string                                            `pulumi:"retentionDays"`
	RoUsername    *string                                            `pulumi:"roUsername"`
	SourceMysql   *GetServiceIntegrationMetricsUserConfigSourceMysql `pulumi:"sourceMysql"`
	Username      *string                                            `pulumi:"username"`
}

// GetServiceIntegrationMetricsUserConfigInput is an input type that accepts GetServiceIntegrationMetricsUserConfigArgs and GetServiceIntegrationMetricsUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationMetricsUserConfigInput` via:
//
//          GetServiceIntegrationMetricsUserConfigArgs{...}
type GetServiceIntegrationMetricsUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationMetricsUserConfigOutput() GetServiceIntegrationMetricsUserConfigOutput
	ToGetServiceIntegrationMetricsUserConfigOutputWithContext(context.Context) GetServiceIntegrationMetricsUserConfigOutput
}

type GetServiceIntegrationMetricsUserConfigArgs struct {
	Database      pulumi.StringPtrInput                                     `pulumi:"database"`
	RetentionDays pulumi.StringPtrInput                                     `pulumi:"retentionDays"`
	RoUsername    pulumi.StringPtrInput                                     `pulumi:"roUsername"`
	SourceMysql   GetServiceIntegrationMetricsUserConfigSourceMysqlPtrInput `pulumi:"sourceMysql"`
	Username      pulumi.StringPtrInput                                     `pulumi:"username"`
}

func (GetServiceIntegrationMetricsUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationMetricsUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationMetricsUserConfigArgs) ToGetServiceIntegrationMetricsUserConfigOutput() GetServiceIntegrationMetricsUserConfigOutput {
	return i.ToGetServiceIntegrationMetricsUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationMetricsUserConfigArgs) ToGetServiceIntegrationMetricsUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationMetricsUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationMetricsUserConfigOutput)
}

type GetServiceIntegrationMetricsUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationMetricsUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationMetricsUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationMetricsUserConfigOutput) ToGetServiceIntegrationMetricsUserConfigOutput() GetServiceIntegrationMetricsUserConfigOutput {
	return o
}

func (o GetServiceIntegrationMetricsUserConfigOutput) ToGetServiceIntegrationMetricsUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationMetricsUserConfigOutput {
	return o
}

func (o GetServiceIntegrationMetricsUserConfigOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationMetricsUserConfig) *string { return v.Database }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigOutput) RetentionDays() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationMetricsUserConfig) *string { return v.RetentionDays }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigOutput) RoUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationMetricsUserConfig) *string { return v.RoUsername }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigOutput) SourceMysql() GetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationMetricsUserConfig) *GetServiceIntegrationMetricsUserConfigSourceMysql {
		return v.SourceMysql
	}).(GetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationMetricsUserConfig) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GetServiceIntegrationMetricsUserConfigSourceMysql struct {
	Telegraf *GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf `pulumi:"telegraf"`
}

// GetServiceIntegrationMetricsUserConfigSourceMysqlInput is an input type that accepts GetServiceIntegrationMetricsUserConfigSourceMysqlArgs and GetServiceIntegrationMetricsUserConfigSourceMysqlOutput values.
// You can construct a concrete instance of `GetServiceIntegrationMetricsUserConfigSourceMysqlInput` via:
//
//          GetServiceIntegrationMetricsUserConfigSourceMysqlArgs{...}
type GetServiceIntegrationMetricsUserConfigSourceMysqlInput interface {
	pulumi.Input

	ToGetServiceIntegrationMetricsUserConfigSourceMysqlOutput() GetServiceIntegrationMetricsUserConfigSourceMysqlOutput
	ToGetServiceIntegrationMetricsUserConfigSourceMysqlOutputWithContext(context.Context) GetServiceIntegrationMetricsUserConfigSourceMysqlOutput
}

type GetServiceIntegrationMetricsUserConfigSourceMysqlArgs struct {
	Telegraf GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrInput `pulumi:"telegraf"`
}

func (GetServiceIntegrationMetricsUserConfigSourceMysqlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationMetricsUserConfigSourceMysql)(nil)).Elem()
}

func (i GetServiceIntegrationMetricsUserConfigSourceMysqlArgs) ToGetServiceIntegrationMetricsUserConfigSourceMysqlOutput() GetServiceIntegrationMetricsUserConfigSourceMysqlOutput {
	return i.ToGetServiceIntegrationMetricsUserConfigSourceMysqlOutputWithContext(context.Background())
}

func (i GetServiceIntegrationMetricsUserConfigSourceMysqlArgs) ToGetServiceIntegrationMetricsUserConfigSourceMysqlOutputWithContext(ctx context.Context) GetServiceIntegrationMetricsUserConfigSourceMysqlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationMetricsUserConfigSourceMysqlOutput)
}

func (i GetServiceIntegrationMetricsUserConfigSourceMysqlArgs) ToGetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput() GetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput {
	return i.ToGetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutputWithContext(context.Background())
}

func (i GetServiceIntegrationMetricsUserConfigSourceMysqlArgs) ToGetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutputWithContext(ctx context.Context) GetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationMetricsUserConfigSourceMysqlOutput).ToGetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutputWithContext(ctx)
}

// GetServiceIntegrationMetricsUserConfigSourceMysqlPtrInput is an input type that accepts GetServiceIntegrationMetricsUserConfigSourceMysqlArgs, GetServiceIntegrationMetricsUserConfigSourceMysqlPtr and GetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput values.
// You can construct a concrete instance of `GetServiceIntegrationMetricsUserConfigSourceMysqlPtrInput` via:
//
//          GetServiceIntegrationMetricsUserConfigSourceMysqlArgs{...}
//
//  or:
//
//          nil
type GetServiceIntegrationMetricsUserConfigSourceMysqlPtrInput interface {
	pulumi.Input

	ToGetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput() GetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput
	ToGetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutputWithContext(context.Context) GetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput
}

type getServiceIntegrationMetricsUserConfigSourceMysqlPtrType GetServiceIntegrationMetricsUserConfigSourceMysqlArgs

func GetServiceIntegrationMetricsUserConfigSourceMysqlPtr(v *GetServiceIntegrationMetricsUserConfigSourceMysqlArgs) GetServiceIntegrationMetricsUserConfigSourceMysqlPtrInput {
	return (*getServiceIntegrationMetricsUserConfigSourceMysqlPtrType)(v)
}

func (*getServiceIntegrationMetricsUserConfigSourceMysqlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceIntegrationMetricsUserConfigSourceMysql)(nil)).Elem()
}

func (i *getServiceIntegrationMetricsUserConfigSourceMysqlPtrType) ToGetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput() GetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput {
	return i.ToGetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutputWithContext(context.Background())
}

func (i *getServiceIntegrationMetricsUserConfigSourceMysqlPtrType) ToGetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutputWithContext(ctx context.Context) GetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput)
}

type GetServiceIntegrationMetricsUserConfigSourceMysqlOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationMetricsUserConfigSourceMysqlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationMetricsUserConfigSourceMysql)(nil)).Elem()
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlOutput) ToGetServiceIntegrationMetricsUserConfigSourceMysqlOutput() GetServiceIntegrationMetricsUserConfigSourceMysqlOutput {
	return o
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlOutput) ToGetServiceIntegrationMetricsUserConfigSourceMysqlOutputWithContext(ctx context.Context) GetServiceIntegrationMetricsUserConfigSourceMysqlOutput {
	return o
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlOutput) ToGetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput() GetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput {
	return o.ToGetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutputWithContext(context.Background())
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlOutput) ToGetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutputWithContext(ctx context.Context) GetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationMetricsUserConfigSourceMysql) *GetServiceIntegrationMetricsUserConfigSourceMysql {
		return &v
	}).(GetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput)
}
func (o GetServiceIntegrationMetricsUserConfigSourceMysqlOutput) Telegraf() GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationMetricsUserConfigSourceMysql) *GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf {
		return v.Telegraf
	}).(GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput)
}

type GetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceIntegrationMetricsUserConfigSourceMysql)(nil)).Elem()
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput) ToGetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput() GetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput {
	return o
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput) ToGetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutputWithContext(ctx context.Context) GetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput {
	return o
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput) Elem() GetServiceIntegrationMetricsUserConfigSourceMysqlOutput {
	return o.ApplyT(func(v *GetServiceIntegrationMetricsUserConfigSourceMysql) GetServiceIntegrationMetricsUserConfigSourceMysql {
		return *v
	}).(GetServiceIntegrationMetricsUserConfigSourceMysqlOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput) Telegraf() GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationMetricsUserConfigSourceMysql) *GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf {
		if v == nil {
			return nil
		}
		return v.Telegraf
	}).(GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput)
}

type GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf struct {
	GatherEventWaits                    *string `pulumi:"gatherEventWaits"`
	GatherFileEventsStats               *string `pulumi:"gatherFileEventsStats"`
	GatherIndexIoWaits                  *string `pulumi:"gatherIndexIoWaits"`
	GatherInfoSchemaAutoInc             *string `pulumi:"gatherInfoSchemaAutoInc"`
	GatherInnodbMetrics                 *string `pulumi:"gatherInnodbMetrics"`
	GatherPerfEventsStatements          *string `pulumi:"gatherPerfEventsStatements"`
	GatherProcessList                   *string `pulumi:"gatherProcessList"`
	GatherSlaveStatus                   *string `pulumi:"gatherSlaveStatus"`
	GatherTableIoWaits                  *string `pulumi:"gatherTableIoWaits"`
	GatherTableLockWaits                *string `pulumi:"gatherTableLockWaits"`
	GatherTableSchema                   *string `pulumi:"gatherTableSchema"`
	PerfEventsStatementsDigestTextLimit *string `pulumi:"perfEventsStatementsDigestTextLimit"`
	PerfEventsStatementsLimit           *string `pulumi:"perfEventsStatementsLimit"`
	PerfEventsStatementsTimeLimit       *string `pulumi:"perfEventsStatementsTimeLimit"`
}

// GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafInput is an input type that accepts GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafArgs and GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput values.
// You can construct a concrete instance of `GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafInput` via:
//
//          GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafArgs{...}
type GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafInput interface {
	pulumi.Input

	ToGetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput() GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput
	ToGetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutputWithContext(context.Context) GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput
}

type GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafArgs struct {
	GatherEventWaits                    pulumi.StringPtrInput `pulumi:"gatherEventWaits"`
	GatherFileEventsStats               pulumi.StringPtrInput `pulumi:"gatherFileEventsStats"`
	GatherIndexIoWaits                  pulumi.StringPtrInput `pulumi:"gatherIndexIoWaits"`
	GatherInfoSchemaAutoInc             pulumi.StringPtrInput `pulumi:"gatherInfoSchemaAutoInc"`
	GatherInnodbMetrics                 pulumi.StringPtrInput `pulumi:"gatherInnodbMetrics"`
	GatherPerfEventsStatements          pulumi.StringPtrInput `pulumi:"gatherPerfEventsStatements"`
	GatherProcessList                   pulumi.StringPtrInput `pulumi:"gatherProcessList"`
	GatherSlaveStatus                   pulumi.StringPtrInput `pulumi:"gatherSlaveStatus"`
	GatherTableIoWaits                  pulumi.StringPtrInput `pulumi:"gatherTableIoWaits"`
	GatherTableLockWaits                pulumi.StringPtrInput `pulumi:"gatherTableLockWaits"`
	GatherTableSchema                   pulumi.StringPtrInput `pulumi:"gatherTableSchema"`
	PerfEventsStatementsDigestTextLimit pulumi.StringPtrInput `pulumi:"perfEventsStatementsDigestTextLimit"`
	PerfEventsStatementsLimit           pulumi.StringPtrInput `pulumi:"perfEventsStatementsLimit"`
	PerfEventsStatementsTimeLimit       pulumi.StringPtrInput `pulumi:"perfEventsStatementsTimeLimit"`
}

func (GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf)(nil)).Elem()
}

func (i GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafArgs) ToGetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput() GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput {
	return i.ToGetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutputWithContext(context.Background())
}

func (i GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafArgs) ToGetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutputWithContext(ctx context.Context) GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput)
}

func (i GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafArgs) ToGetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput() GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput {
	return i.ToGetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutputWithContext(context.Background())
}

func (i GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafArgs) ToGetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutputWithContext(ctx context.Context) GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput).ToGetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutputWithContext(ctx)
}

// GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrInput is an input type that accepts GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafArgs, GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtr and GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput values.
// You can construct a concrete instance of `GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrInput` via:
//
//          GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafArgs{...}
//
//  or:
//
//          nil
type GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrInput interface {
	pulumi.Input

	ToGetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput() GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput
	ToGetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutputWithContext(context.Context) GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput
}

type getServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrType GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafArgs

func GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtr(v *GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafArgs) GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrInput {
	return (*getServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrType)(v)
}

func (*getServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf)(nil)).Elem()
}

func (i *getServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrType) ToGetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput() GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput {
	return i.ToGetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutputWithContext(context.Background())
}

func (i *getServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrType) ToGetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutputWithContext(ctx context.Context) GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput)
}

type GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf)(nil)).Elem()
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) ToGetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput() GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput {
	return o
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) ToGetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutputWithContext(ctx context.Context) GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput {
	return o
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) ToGetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput() GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput {
	return o.ToGetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutputWithContext(context.Background())
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) ToGetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutputWithContext(ctx context.Context) GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf {
		return &v
	}).(GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput)
}
func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) GatherEventWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string { return v.GatherEventWaits }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) GatherFileEventsStats() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		return v.GatherFileEventsStats
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) GatherIndexIoWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string { return v.GatherIndexIoWaits }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) GatherInfoSchemaAutoInc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		return v.GatherInfoSchemaAutoInc
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) GatherInnodbMetrics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		return v.GatherInnodbMetrics
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) GatherPerfEventsStatements() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		return v.GatherPerfEventsStatements
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) GatherProcessList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string { return v.GatherProcessList }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) GatherSlaveStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string { return v.GatherSlaveStatus }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) GatherTableIoWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string { return v.GatherTableIoWaits }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) GatherTableLockWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		return v.GatherTableLockWaits
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) GatherTableSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string { return v.GatherTableSchema }).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) PerfEventsStatementsDigestTextLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		return v.PerfEventsStatementsDigestTextLimit
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) PerfEventsStatementsLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		return v.PerfEventsStatementsLimit
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput) PerfEventsStatementsTimeLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		return v.PerfEventsStatementsTimeLimit
	}).(pulumi.StringPtrOutput)
}

type GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf)(nil)).Elem()
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) ToGetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput() GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput {
	return o
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) ToGetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutputWithContext(ctx context.Context) GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput {
	return o
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) Elem() GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput {
	return o.ApplyT(func(v *GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf {
		return *v
	}).(GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) GatherEventWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherEventWaits
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) GatherFileEventsStats() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherFileEventsStats
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) GatherIndexIoWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherIndexIoWaits
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) GatherInfoSchemaAutoInc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherInfoSchemaAutoInc
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) GatherInnodbMetrics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherInnodbMetrics
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) GatherPerfEventsStatements() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherPerfEventsStatements
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) GatherProcessList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherProcessList
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) GatherSlaveStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherSlaveStatus
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) GatherTableIoWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherTableIoWaits
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) GatherTableLockWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherTableLockWaits
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) GatherTableSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherTableSchema
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) PerfEventsStatementsDigestTextLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.PerfEventsStatementsDigestTextLimit
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) PerfEventsStatementsLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.PerfEventsStatementsLimit
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput) PerfEventsStatementsTimeLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationMetricsUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.PerfEventsStatementsTimeLimit
	}).(pulumi.StringPtrOutput)
}

type GetServiceIntegrationMirrormakerUserConfig struct {
	MirrormakerWhitelist *string `pulumi:"mirrormakerWhitelist"`
}

// GetServiceIntegrationMirrormakerUserConfigInput is an input type that accepts GetServiceIntegrationMirrormakerUserConfigArgs and GetServiceIntegrationMirrormakerUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationMirrormakerUserConfigInput` via:
//
//          GetServiceIntegrationMirrormakerUserConfigArgs{...}
type GetServiceIntegrationMirrormakerUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationMirrormakerUserConfigOutput() GetServiceIntegrationMirrormakerUserConfigOutput
	ToGetServiceIntegrationMirrormakerUserConfigOutputWithContext(context.Context) GetServiceIntegrationMirrormakerUserConfigOutput
}

type GetServiceIntegrationMirrormakerUserConfigArgs struct {
	MirrormakerWhitelist pulumi.StringPtrInput `pulumi:"mirrormakerWhitelist"`
}

func (GetServiceIntegrationMirrormakerUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationMirrormakerUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationMirrormakerUserConfigArgs) ToGetServiceIntegrationMirrormakerUserConfigOutput() GetServiceIntegrationMirrormakerUserConfigOutput {
	return i.ToGetServiceIntegrationMirrormakerUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationMirrormakerUserConfigArgs) ToGetServiceIntegrationMirrormakerUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationMirrormakerUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationMirrormakerUserConfigOutput)
}

type GetServiceIntegrationMirrormakerUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationMirrormakerUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationMirrormakerUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationMirrormakerUserConfigOutput) ToGetServiceIntegrationMirrormakerUserConfigOutput() GetServiceIntegrationMirrormakerUserConfigOutput {
	return o
}

func (o GetServiceIntegrationMirrormakerUserConfigOutput) ToGetServiceIntegrationMirrormakerUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationMirrormakerUserConfigOutput {
	return o
}

func (o GetServiceIntegrationMirrormakerUserConfigOutput) MirrormakerWhitelist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationMirrormakerUserConfig) *string { return v.MirrormakerWhitelist }).(pulumi.StringPtrOutput)
}

type GetServiceIntegrationPrometheusUserConfig struct {
	SourceMysql *GetServiceIntegrationPrometheusUserConfigSourceMysql `pulumi:"sourceMysql"`
}

// GetServiceIntegrationPrometheusUserConfigInput is an input type that accepts GetServiceIntegrationPrometheusUserConfigArgs and GetServiceIntegrationPrometheusUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationPrometheusUserConfigInput` via:
//
//          GetServiceIntegrationPrometheusUserConfigArgs{...}
type GetServiceIntegrationPrometheusUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationPrometheusUserConfigOutput() GetServiceIntegrationPrometheusUserConfigOutput
	ToGetServiceIntegrationPrometheusUserConfigOutputWithContext(context.Context) GetServiceIntegrationPrometheusUserConfigOutput
}

type GetServiceIntegrationPrometheusUserConfigArgs struct {
	SourceMysql GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrInput `pulumi:"sourceMysql"`
}

func (GetServiceIntegrationPrometheusUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationPrometheusUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationPrometheusUserConfigArgs) ToGetServiceIntegrationPrometheusUserConfigOutput() GetServiceIntegrationPrometheusUserConfigOutput {
	return i.ToGetServiceIntegrationPrometheusUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationPrometheusUserConfigArgs) ToGetServiceIntegrationPrometheusUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationPrometheusUserConfigOutput)
}

type GetServiceIntegrationPrometheusUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationPrometheusUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationPrometheusUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationPrometheusUserConfigOutput) ToGetServiceIntegrationPrometheusUserConfigOutput() GetServiceIntegrationPrometheusUserConfigOutput {
	return o
}

func (o GetServiceIntegrationPrometheusUserConfigOutput) ToGetServiceIntegrationPrometheusUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigOutput {
	return o
}

func (o GetServiceIntegrationPrometheusUserConfigOutput) SourceMysql() GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfig) *GetServiceIntegrationPrometheusUserConfigSourceMysql {
		return v.SourceMysql
	}).(GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput)
}

type GetServiceIntegrationPrometheusUserConfigSourceMysql struct {
	Telegraf *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf `pulumi:"telegraf"`
}

// GetServiceIntegrationPrometheusUserConfigSourceMysqlInput is an input type that accepts GetServiceIntegrationPrometheusUserConfigSourceMysqlArgs and GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput values.
// You can construct a concrete instance of `GetServiceIntegrationPrometheusUserConfigSourceMysqlInput` via:
//
//          GetServiceIntegrationPrometheusUserConfigSourceMysqlArgs{...}
type GetServiceIntegrationPrometheusUserConfigSourceMysqlInput interface {
	pulumi.Input

	ToGetServiceIntegrationPrometheusUserConfigSourceMysqlOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput
	ToGetServiceIntegrationPrometheusUserConfigSourceMysqlOutputWithContext(context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput
}

type GetServiceIntegrationPrometheusUserConfigSourceMysqlArgs struct {
	Telegraf GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrInput `pulumi:"telegraf"`
}

func (GetServiceIntegrationPrometheusUserConfigSourceMysqlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationPrometheusUserConfigSourceMysql)(nil)).Elem()
}

func (i GetServiceIntegrationPrometheusUserConfigSourceMysqlArgs) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput {
	return i.ToGetServiceIntegrationPrometheusUserConfigSourceMysqlOutputWithContext(context.Background())
}

func (i GetServiceIntegrationPrometheusUserConfigSourceMysqlArgs) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput)
}

func (i GetServiceIntegrationPrometheusUserConfigSourceMysqlArgs) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return i.ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(context.Background())
}

func (i GetServiceIntegrationPrometheusUserConfigSourceMysqlArgs) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput).ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(ctx)
}

// GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrInput is an input type that accepts GetServiceIntegrationPrometheusUserConfigSourceMysqlArgs, GetServiceIntegrationPrometheusUserConfigSourceMysqlPtr and GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput values.
// You can construct a concrete instance of `GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrInput` via:
//
//          GetServiceIntegrationPrometheusUserConfigSourceMysqlArgs{...}
//
//  or:
//
//          nil
type GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrInput interface {
	pulumi.Input

	ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput
	ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput
}

type getServiceIntegrationPrometheusUserConfigSourceMysqlPtrType GetServiceIntegrationPrometheusUserConfigSourceMysqlArgs

func GetServiceIntegrationPrometheusUserConfigSourceMysqlPtr(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlArgs) GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrInput {
	return (*getServiceIntegrationPrometheusUserConfigSourceMysqlPtrType)(v)
}

func (*getServiceIntegrationPrometheusUserConfigSourceMysqlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceIntegrationPrometheusUserConfigSourceMysql)(nil)).Elem()
}

func (i *getServiceIntegrationPrometheusUserConfigSourceMysqlPtrType) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return i.ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(context.Background())
}

func (i *getServiceIntegrationPrometheusUserConfigSourceMysqlPtrType) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput)
}

type GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationPrometheusUserConfigSourceMysql)(nil)).Elem()
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput {
	return o
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput {
	return o
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return o.ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(context.Background())
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysql) *GetServiceIntegrationPrometheusUserConfigSourceMysql {
		return &v
	}).(GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput)
}
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput) Telegraf() GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysql) *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf {
		return v.Telegraf
	}).(GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput)
}

type GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceIntegrationPrometheusUserConfigSourceMysql)(nil)).Elem()
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return o
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput {
	return o
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput) Elem() GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysql) GetServiceIntegrationPrometheusUserConfigSourceMysql {
		return *v
	}).(GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput) Telegraf() GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysql) *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf {
		if v == nil {
			return nil
		}
		return v.Telegraf
	}).(GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput)
}

type GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf struct {
	GatherEventWaits                    *string `pulumi:"gatherEventWaits"`
	GatherFileEventsStats               *string `pulumi:"gatherFileEventsStats"`
	GatherIndexIoWaits                  *string `pulumi:"gatherIndexIoWaits"`
	GatherInfoSchemaAutoInc             *string `pulumi:"gatherInfoSchemaAutoInc"`
	GatherInnodbMetrics                 *string `pulumi:"gatherInnodbMetrics"`
	GatherPerfEventsStatements          *string `pulumi:"gatherPerfEventsStatements"`
	GatherProcessList                   *string `pulumi:"gatherProcessList"`
	GatherSlaveStatus                   *string `pulumi:"gatherSlaveStatus"`
	GatherTableIoWaits                  *string `pulumi:"gatherTableIoWaits"`
	GatherTableLockWaits                *string `pulumi:"gatherTableLockWaits"`
	GatherTableSchema                   *string `pulumi:"gatherTableSchema"`
	PerfEventsStatementsDigestTextLimit *string `pulumi:"perfEventsStatementsDigestTextLimit"`
	PerfEventsStatementsLimit           *string `pulumi:"perfEventsStatementsLimit"`
	PerfEventsStatementsTimeLimit       *string `pulumi:"perfEventsStatementsTimeLimit"`
}

// GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafInput is an input type that accepts GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs and GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput values.
// You can construct a concrete instance of `GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafInput` via:
//
//          GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs{...}
type GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafInput interface {
	pulumi.Input

	ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput
	ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutputWithContext(context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput
}

type GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs struct {
	GatherEventWaits                    pulumi.StringPtrInput `pulumi:"gatherEventWaits"`
	GatherFileEventsStats               pulumi.StringPtrInput `pulumi:"gatherFileEventsStats"`
	GatherIndexIoWaits                  pulumi.StringPtrInput `pulumi:"gatherIndexIoWaits"`
	GatherInfoSchemaAutoInc             pulumi.StringPtrInput `pulumi:"gatherInfoSchemaAutoInc"`
	GatherInnodbMetrics                 pulumi.StringPtrInput `pulumi:"gatherInnodbMetrics"`
	GatherPerfEventsStatements          pulumi.StringPtrInput `pulumi:"gatherPerfEventsStatements"`
	GatherProcessList                   pulumi.StringPtrInput `pulumi:"gatherProcessList"`
	GatherSlaveStatus                   pulumi.StringPtrInput `pulumi:"gatherSlaveStatus"`
	GatherTableIoWaits                  pulumi.StringPtrInput `pulumi:"gatherTableIoWaits"`
	GatherTableLockWaits                pulumi.StringPtrInput `pulumi:"gatherTableLockWaits"`
	GatherTableSchema                   pulumi.StringPtrInput `pulumi:"gatherTableSchema"`
	PerfEventsStatementsDigestTextLimit pulumi.StringPtrInput `pulumi:"perfEventsStatementsDigestTextLimit"`
	PerfEventsStatementsLimit           pulumi.StringPtrInput `pulumi:"perfEventsStatementsLimit"`
	PerfEventsStatementsTimeLimit       pulumi.StringPtrInput `pulumi:"perfEventsStatementsTimeLimit"`
}

func (GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf)(nil)).Elem()
}

func (i GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput {
	return i.ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutputWithContext(context.Background())
}

func (i GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput)
}

func (i GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return i.ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(context.Background())
}

func (i GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput).ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(ctx)
}

// GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrInput is an input type that accepts GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs, GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtr and GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput values.
// You can construct a concrete instance of `GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrInput` via:
//
//          GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs{...}
//
//  or:
//
//          nil
type GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrInput interface {
	pulumi.Input

	ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput
	ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput
}

type getServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrType GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs

func GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtr(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafArgs) GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrInput {
	return (*getServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrType)(v)
}

func (*getServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf)(nil)).Elem()
}

func (i *getServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrType) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return i.ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(context.Background())
}

func (i *getServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrType) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput)
}

type GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf)(nil)).Elem()
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput {
	return o
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput {
	return o
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return o.ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(context.Background())
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf {
		return &v
	}).(GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput)
}
func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherEventWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		return v.GatherEventWaits
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherFileEventsStats() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		return v.GatherFileEventsStats
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherIndexIoWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		return v.GatherIndexIoWaits
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherInfoSchemaAutoInc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		return v.GatherInfoSchemaAutoInc
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherInnodbMetrics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		return v.GatherInnodbMetrics
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherPerfEventsStatements() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		return v.GatherPerfEventsStatements
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherProcessList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		return v.GatherProcessList
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherSlaveStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		return v.GatherSlaveStatus
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherTableIoWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		return v.GatherTableIoWaits
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherTableLockWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		return v.GatherTableLockWaits
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) GatherTableSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		return v.GatherTableSchema
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) PerfEventsStatementsDigestTextLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		return v.PerfEventsStatementsDigestTextLimit
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) PerfEventsStatementsLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		return v.PerfEventsStatementsLimit
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput) PerfEventsStatementsTimeLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		return v.PerfEventsStatementsTimeLimit
	}).(pulumi.StringPtrOutput)
}

type GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf)(nil)).Elem()
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput() GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return o
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) ToGetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutputWithContext(ctx context.Context) GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput {
	return o
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) Elem() GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf {
		return *v
	}).(GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherEventWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherEventWaits
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherFileEventsStats() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherFileEventsStats
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherIndexIoWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherIndexIoWaits
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherInfoSchemaAutoInc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherInfoSchemaAutoInc
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherInnodbMetrics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherInnodbMetrics
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherPerfEventsStatements() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherPerfEventsStatements
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherProcessList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherProcessList
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherSlaveStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherSlaveStatus
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherTableIoWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherTableIoWaits
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherTableLockWaits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherTableLockWaits
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) GatherTableSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.GatherTableSchema
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) PerfEventsStatementsDigestTextLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.PerfEventsStatementsDigestTextLimit
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) PerfEventsStatementsLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.PerfEventsStatementsLimit
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput) PerfEventsStatementsTimeLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegraf) *string {
		if v == nil {
			return nil
		}
		return v.PerfEventsStatementsTimeLimit
	}).(pulumi.StringPtrOutput)
}

type GetServiceIntegrationReadReplicaUserConfig struct {
}

// GetServiceIntegrationReadReplicaUserConfigInput is an input type that accepts GetServiceIntegrationReadReplicaUserConfigArgs and GetServiceIntegrationReadReplicaUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationReadReplicaUserConfigInput` via:
//
//          GetServiceIntegrationReadReplicaUserConfigArgs{...}
type GetServiceIntegrationReadReplicaUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationReadReplicaUserConfigOutput() GetServiceIntegrationReadReplicaUserConfigOutput
	ToGetServiceIntegrationReadReplicaUserConfigOutputWithContext(context.Context) GetServiceIntegrationReadReplicaUserConfigOutput
}

type GetServiceIntegrationReadReplicaUserConfigArgs struct {
}

func (GetServiceIntegrationReadReplicaUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationReadReplicaUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationReadReplicaUserConfigArgs) ToGetServiceIntegrationReadReplicaUserConfigOutput() GetServiceIntegrationReadReplicaUserConfigOutput {
	return i.ToGetServiceIntegrationReadReplicaUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationReadReplicaUserConfigArgs) ToGetServiceIntegrationReadReplicaUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationReadReplicaUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationReadReplicaUserConfigOutput)
}

type GetServiceIntegrationReadReplicaUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationReadReplicaUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationReadReplicaUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationReadReplicaUserConfigOutput) ToGetServiceIntegrationReadReplicaUserConfigOutput() GetServiceIntegrationReadReplicaUserConfigOutput {
	return o
}

func (o GetServiceIntegrationReadReplicaUserConfigOutput) ToGetServiceIntegrationReadReplicaUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationReadReplicaUserConfigOutput {
	return o
}

type GetServiceIntegrationRsyslogUserConfig struct {
}

// GetServiceIntegrationRsyslogUserConfigInput is an input type that accepts GetServiceIntegrationRsyslogUserConfigArgs and GetServiceIntegrationRsyslogUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationRsyslogUserConfigInput` via:
//
//          GetServiceIntegrationRsyslogUserConfigArgs{...}
type GetServiceIntegrationRsyslogUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationRsyslogUserConfigOutput() GetServiceIntegrationRsyslogUserConfigOutput
	ToGetServiceIntegrationRsyslogUserConfigOutputWithContext(context.Context) GetServiceIntegrationRsyslogUserConfigOutput
}

type GetServiceIntegrationRsyslogUserConfigArgs struct {
}

func (GetServiceIntegrationRsyslogUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationRsyslogUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationRsyslogUserConfigArgs) ToGetServiceIntegrationRsyslogUserConfigOutput() GetServiceIntegrationRsyslogUserConfigOutput {
	return i.ToGetServiceIntegrationRsyslogUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationRsyslogUserConfigArgs) ToGetServiceIntegrationRsyslogUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationRsyslogUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationRsyslogUserConfigOutput)
}

type GetServiceIntegrationRsyslogUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationRsyslogUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationRsyslogUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationRsyslogUserConfigOutput) ToGetServiceIntegrationRsyslogUserConfigOutput() GetServiceIntegrationRsyslogUserConfigOutput {
	return o
}

func (o GetServiceIntegrationRsyslogUserConfigOutput) ToGetServiceIntegrationRsyslogUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationRsyslogUserConfigOutput {
	return o
}

type GetServiceIntegrationSchemaRegistryProxyUserConfig struct {
}

// GetServiceIntegrationSchemaRegistryProxyUserConfigInput is an input type that accepts GetServiceIntegrationSchemaRegistryProxyUserConfigArgs and GetServiceIntegrationSchemaRegistryProxyUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationSchemaRegistryProxyUserConfigInput` via:
//
//          GetServiceIntegrationSchemaRegistryProxyUserConfigArgs{...}
type GetServiceIntegrationSchemaRegistryProxyUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationSchemaRegistryProxyUserConfigOutput() GetServiceIntegrationSchemaRegistryProxyUserConfigOutput
	ToGetServiceIntegrationSchemaRegistryProxyUserConfigOutputWithContext(context.Context) GetServiceIntegrationSchemaRegistryProxyUserConfigOutput
}

type GetServiceIntegrationSchemaRegistryProxyUserConfigArgs struct {
}

func (GetServiceIntegrationSchemaRegistryProxyUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationSchemaRegistryProxyUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationSchemaRegistryProxyUserConfigArgs) ToGetServiceIntegrationSchemaRegistryProxyUserConfigOutput() GetServiceIntegrationSchemaRegistryProxyUserConfigOutput {
	return i.ToGetServiceIntegrationSchemaRegistryProxyUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationSchemaRegistryProxyUserConfigArgs) ToGetServiceIntegrationSchemaRegistryProxyUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationSchemaRegistryProxyUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationSchemaRegistryProxyUserConfigOutput)
}

type GetServiceIntegrationSchemaRegistryProxyUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationSchemaRegistryProxyUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationSchemaRegistryProxyUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationSchemaRegistryProxyUserConfigOutput) ToGetServiceIntegrationSchemaRegistryProxyUserConfigOutput() GetServiceIntegrationSchemaRegistryProxyUserConfigOutput {
	return o
}

func (o GetServiceIntegrationSchemaRegistryProxyUserConfigOutput) ToGetServiceIntegrationSchemaRegistryProxyUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationSchemaRegistryProxyUserConfigOutput {
	return o
}

type GetServiceIntegrationSignalfxUserConfig struct {
}

// GetServiceIntegrationSignalfxUserConfigInput is an input type that accepts GetServiceIntegrationSignalfxUserConfigArgs and GetServiceIntegrationSignalfxUserConfigOutput values.
// You can construct a concrete instance of `GetServiceIntegrationSignalfxUserConfigInput` via:
//
//          GetServiceIntegrationSignalfxUserConfigArgs{...}
type GetServiceIntegrationSignalfxUserConfigInput interface {
	pulumi.Input

	ToGetServiceIntegrationSignalfxUserConfigOutput() GetServiceIntegrationSignalfxUserConfigOutput
	ToGetServiceIntegrationSignalfxUserConfigOutputWithContext(context.Context) GetServiceIntegrationSignalfxUserConfigOutput
}

type GetServiceIntegrationSignalfxUserConfigArgs struct {
}

func (GetServiceIntegrationSignalfxUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationSignalfxUserConfig)(nil)).Elem()
}

func (i GetServiceIntegrationSignalfxUserConfigArgs) ToGetServiceIntegrationSignalfxUserConfigOutput() GetServiceIntegrationSignalfxUserConfigOutput {
	return i.ToGetServiceIntegrationSignalfxUserConfigOutputWithContext(context.Background())
}

func (i GetServiceIntegrationSignalfxUserConfigArgs) ToGetServiceIntegrationSignalfxUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationSignalfxUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIntegrationSignalfxUserConfigOutput)
}

type GetServiceIntegrationSignalfxUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceIntegrationSignalfxUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIntegrationSignalfxUserConfig)(nil)).Elem()
}

func (o GetServiceIntegrationSignalfxUserConfigOutput) ToGetServiceIntegrationSignalfxUserConfigOutput() GetServiceIntegrationSignalfxUserConfigOutput {
	return o
}

func (o GetServiceIntegrationSignalfxUserConfigOutput) ToGetServiceIntegrationSignalfxUserConfigOutputWithContext(ctx context.Context) GetServiceIntegrationSignalfxUserConfigOutput {
	return o
}

type GetServiceKafka struct {
	AccessCert        string `pulumi:"accessCert"`
	AccessKey         string `pulumi:"accessKey"`
	ConnectUri        string `pulumi:"connectUri"`
	RestUri           string `pulumi:"restUri"`
	SchemaRegistryUri string `pulumi:"schemaRegistryUri"`
}

// GetServiceKafkaInput is an input type that accepts GetServiceKafkaArgs and GetServiceKafkaOutput values.
// You can construct a concrete instance of `GetServiceKafkaInput` via:
//
//          GetServiceKafkaArgs{...}
type GetServiceKafkaInput interface {
	pulumi.Input

	ToGetServiceKafkaOutput() GetServiceKafkaOutput
	ToGetServiceKafkaOutputWithContext(context.Context) GetServiceKafkaOutput
}

type GetServiceKafkaArgs struct {
	AccessCert        pulumi.StringInput `pulumi:"accessCert"`
	AccessKey         pulumi.StringInput `pulumi:"accessKey"`
	ConnectUri        pulumi.StringInput `pulumi:"connectUri"`
	RestUri           pulumi.StringInput `pulumi:"restUri"`
	SchemaRegistryUri pulumi.StringInput `pulumi:"schemaRegistryUri"`
}

func (GetServiceKafkaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafka)(nil)).Elem()
}

func (i GetServiceKafkaArgs) ToGetServiceKafkaOutput() GetServiceKafkaOutput {
	return i.ToGetServiceKafkaOutputWithContext(context.Background())
}

func (i GetServiceKafkaArgs) ToGetServiceKafkaOutputWithContext(ctx context.Context) GetServiceKafkaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaOutput)
}

type GetServiceKafkaOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafka)(nil)).Elem()
}

func (o GetServiceKafkaOutput) ToGetServiceKafkaOutput() GetServiceKafkaOutput {
	return o
}

func (o GetServiceKafkaOutput) ToGetServiceKafkaOutputWithContext(ctx context.Context) GetServiceKafkaOutput {
	return o
}

func (o GetServiceKafkaOutput) AccessCert() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceKafka) string { return v.AccessCert }).(pulumi.StringOutput)
}

func (o GetServiceKafkaOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceKafka) string { return v.AccessKey }).(pulumi.StringOutput)
}

func (o GetServiceKafkaOutput) ConnectUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceKafka) string { return v.ConnectUri }).(pulumi.StringOutput)
}

func (o GetServiceKafkaOutput) RestUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceKafka) string { return v.RestUri }).(pulumi.StringOutput)
}

func (o GetServiceKafkaOutput) SchemaRegistryUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceKafka) string { return v.SchemaRegistryUri }).(pulumi.StringOutput)
}

type GetServiceKafkaConnect struct {
}

// GetServiceKafkaConnectInput is an input type that accepts GetServiceKafkaConnectArgs and GetServiceKafkaConnectOutput values.
// You can construct a concrete instance of `GetServiceKafkaConnectInput` via:
//
//          GetServiceKafkaConnectArgs{...}
type GetServiceKafkaConnectInput interface {
	pulumi.Input

	ToGetServiceKafkaConnectOutput() GetServiceKafkaConnectOutput
	ToGetServiceKafkaConnectOutputWithContext(context.Context) GetServiceKafkaConnectOutput
}

type GetServiceKafkaConnectArgs struct {
}

func (GetServiceKafkaConnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaConnect)(nil)).Elem()
}

func (i GetServiceKafkaConnectArgs) ToGetServiceKafkaConnectOutput() GetServiceKafkaConnectOutput {
	return i.ToGetServiceKafkaConnectOutputWithContext(context.Background())
}

func (i GetServiceKafkaConnectArgs) ToGetServiceKafkaConnectOutputWithContext(ctx context.Context) GetServiceKafkaConnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaConnectOutput)
}

type GetServiceKafkaConnectOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaConnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaConnect)(nil)).Elem()
}

func (o GetServiceKafkaConnectOutput) ToGetServiceKafkaConnectOutput() GetServiceKafkaConnectOutput {
	return o
}

func (o GetServiceKafkaConnectOutput) ToGetServiceKafkaConnectOutputWithContext(ctx context.Context) GetServiceKafkaConnectOutput {
	return o
}

type GetServiceKafkaConnectUserConfig struct {
	IpFilters         []string                                           `pulumi:"ipFilters"`
	KafkaConnect      *GetServiceKafkaConnectUserConfigKafkaConnect      `pulumi:"kafkaConnect"`
	PrivateAccess     *GetServiceKafkaConnectUserConfigPrivateAccess     `pulumi:"privateAccess"`
	PrivatelinkAccess *GetServiceKafkaConnectUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	PublicAccess      *GetServiceKafkaConnectUserConfigPublicAccess      `pulumi:"publicAccess"`
}

// GetServiceKafkaConnectUserConfigInput is an input type that accepts GetServiceKafkaConnectUserConfigArgs and GetServiceKafkaConnectUserConfigOutput values.
// You can construct a concrete instance of `GetServiceKafkaConnectUserConfigInput` via:
//
//          GetServiceKafkaConnectUserConfigArgs{...}
type GetServiceKafkaConnectUserConfigInput interface {
	pulumi.Input

	ToGetServiceKafkaConnectUserConfigOutput() GetServiceKafkaConnectUserConfigOutput
	ToGetServiceKafkaConnectUserConfigOutputWithContext(context.Context) GetServiceKafkaConnectUserConfigOutput
}

type GetServiceKafkaConnectUserConfigArgs struct {
	IpFilters         pulumi.StringArrayInput                                   `pulumi:"ipFilters"`
	KafkaConnect      GetServiceKafkaConnectUserConfigKafkaConnectPtrInput      `pulumi:"kafkaConnect"`
	PrivateAccess     GetServiceKafkaConnectUserConfigPrivateAccessPtrInput     `pulumi:"privateAccess"`
	PrivatelinkAccess GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	PublicAccess      GetServiceKafkaConnectUserConfigPublicAccessPtrInput      `pulumi:"publicAccess"`
}

func (GetServiceKafkaConnectUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaConnectUserConfig)(nil)).Elem()
}

func (i GetServiceKafkaConnectUserConfigArgs) ToGetServiceKafkaConnectUserConfigOutput() GetServiceKafkaConnectUserConfigOutput {
	return i.ToGetServiceKafkaConnectUserConfigOutputWithContext(context.Background())
}

func (i GetServiceKafkaConnectUserConfigArgs) ToGetServiceKafkaConnectUserConfigOutputWithContext(ctx context.Context) GetServiceKafkaConnectUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaConnectUserConfigOutput)
}

type GetServiceKafkaConnectUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaConnectUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaConnectUserConfig)(nil)).Elem()
}

func (o GetServiceKafkaConnectUserConfigOutput) ToGetServiceKafkaConnectUserConfigOutput() GetServiceKafkaConnectUserConfigOutput {
	return o
}

func (o GetServiceKafkaConnectUserConfigOutput) ToGetServiceKafkaConnectUserConfigOutputWithContext(ctx context.Context) GetServiceKafkaConnectUserConfigOutput {
	return o
}

func (o GetServiceKafkaConnectUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceKafkaConnectUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

func (o GetServiceKafkaConnectUserConfigOutput) KafkaConnect() GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaConnectUserConfig) *GetServiceKafkaConnectUserConfigKafkaConnect {
		return v.KafkaConnect
	}).(GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigOutput) PrivateAccess() GetServiceKafkaConnectUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaConnectUserConfig) *GetServiceKafkaConnectUserConfigPrivateAccess {
		return v.PrivateAccess
	}).(GetServiceKafkaConnectUserConfigPrivateAccessPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigOutput) PrivatelinkAccess() GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaConnectUserConfig) *GetServiceKafkaConnectUserConfigPrivatelinkAccess {
		return v.PrivatelinkAccess
	}).(GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigOutput) PublicAccess() GetServiceKafkaConnectUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaConnectUserConfig) *GetServiceKafkaConnectUserConfigPublicAccess {
		return v.PublicAccess
	}).(GetServiceKafkaConnectUserConfigPublicAccessPtrOutput)
}

type GetServiceKafkaConnectUserConfigKafkaConnect struct {
	ConnectorClientConfigOverridePolicy *string `pulumi:"connectorClientConfigOverridePolicy"`
	ConsumerAutoOffsetReset             *string `pulumi:"consumerAutoOffsetReset"`
	ConsumerFetchMaxBytes               *string `pulumi:"consumerFetchMaxBytes"`
	ConsumerIsolationLevel              *string `pulumi:"consumerIsolationLevel"`
	ConsumerMaxPartitionFetchBytes      *string `pulumi:"consumerMaxPartitionFetchBytes"`
	ConsumerMaxPollIntervalMs           *string `pulumi:"consumerMaxPollIntervalMs"`
	ConsumerMaxPollRecords              *string `pulumi:"consumerMaxPollRecords"`
	OffsetFlushIntervalMs               *string `pulumi:"offsetFlushIntervalMs"`
	OffsetFlushTimeoutMs                *string `pulumi:"offsetFlushTimeoutMs"`
	ProducerMaxRequestSize              *string `pulumi:"producerMaxRequestSize"`
	SessionTimeoutMs                    *string `pulumi:"sessionTimeoutMs"`
}

// GetServiceKafkaConnectUserConfigKafkaConnectInput is an input type that accepts GetServiceKafkaConnectUserConfigKafkaConnectArgs and GetServiceKafkaConnectUserConfigKafkaConnectOutput values.
// You can construct a concrete instance of `GetServiceKafkaConnectUserConfigKafkaConnectInput` via:
//
//          GetServiceKafkaConnectUserConfigKafkaConnectArgs{...}
type GetServiceKafkaConnectUserConfigKafkaConnectInput interface {
	pulumi.Input

	ToGetServiceKafkaConnectUserConfigKafkaConnectOutput() GetServiceKafkaConnectUserConfigKafkaConnectOutput
	ToGetServiceKafkaConnectUserConfigKafkaConnectOutputWithContext(context.Context) GetServiceKafkaConnectUserConfigKafkaConnectOutput
}

type GetServiceKafkaConnectUserConfigKafkaConnectArgs struct {
	ConnectorClientConfigOverridePolicy pulumi.StringPtrInput `pulumi:"connectorClientConfigOverridePolicy"`
	ConsumerAutoOffsetReset             pulumi.StringPtrInput `pulumi:"consumerAutoOffsetReset"`
	ConsumerFetchMaxBytes               pulumi.StringPtrInput `pulumi:"consumerFetchMaxBytes"`
	ConsumerIsolationLevel              pulumi.StringPtrInput `pulumi:"consumerIsolationLevel"`
	ConsumerMaxPartitionFetchBytes      pulumi.StringPtrInput `pulumi:"consumerMaxPartitionFetchBytes"`
	ConsumerMaxPollIntervalMs           pulumi.StringPtrInput `pulumi:"consumerMaxPollIntervalMs"`
	ConsumerMaxPollRecords              pulumi.StringPtrInput `pulumi:"consumerMaxPollRecords"`
	OffsetFlushIntervalMs               pulumi.StringPtrInput `pulumi:"offsetFlushIntervalMs"`
	OffsetFlushTimeoutMs                pulumi.StringPtrInput `pulumi:"offsetFlushTimeoutMs"`
	ProducerMaxRequestSize              pulumi.StringPtrInput `pulumi:"producerMaxRequestSize"`
	SessionTimeoutMs                    pulumi.StringPtrInput `pulumi:"sessionTimeoutMs"`
}

func (GetServiceKafkaConnectUserConfigKafkaConnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaConnectUserConfigKafkaConnect)(nil)).Elem()
}

func (i GetServiceKafkaConnectUserConfigKafkaConnectArgs) ToGetServiceKafkaConnectUserConfigKafkaConnectOutput() GetServiceKafkaConnectUserConfigKafkaConnectOutput {
	return i.ToGetServiceKafkaConnectUserConfigKafkaConnectOutputWithContext(context.Background())
}

func (i GetServiceKafkaConnectUserConfigKafkaConnectArgs) ToGetServiceKafkaConnectUserConfigKafkaConnectOutputWithContext(ctx context.Context) GetServiceKafkaConnectUserConfigKafkaConnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaConnectUserConfigKafkaConnectOutput)
}

func (i GetServiceKafkaConnectUserConfigKafkaConnectArgs) ToGetServiceKafkaConnectUserConfigKafkaConnectPtrOutput() GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput {
	return i.ToGetServiceKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(context.Background())
}

func (i GetServiceKafkaConnectUserConfigKafkaConnectArgs) ToGetServiceKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx context.Context) GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaConnectUserConfigKafkaConnectOutput).ToGetServiceKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx)
}

// GetServiceKafkaConnectUserConfigKafkaConnectPtrInput is an input type that accepts GetServiceKafkaConnectUserConfigKafkaConnectArgs, GetServiceKafkaConnectUserConfigKafkaConnectPtr and GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput values.
// You can construct a concrete instance of `GetServiceKafkaConnectUserConfigKafkaConnectPtrInput` via:
//
//          GetServiceKafkaConnectUserConfigKafkaConnectArgs{...}
//
//  or:
//
//          nil
type GetServiceKafkaConnectUserConfigKafkaConnectPtrInput interface {
	pulumi.Input

	ToGetServiceKafkaConnectUserConfigKafkaConnectPtrOutput() GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput
	ToGetServiceKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(context.Context) GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput
}

type getServiceKafkaConnectUserConfigKafkaConnectPtrType GetServiceKafkaConnectUserConfigKafkaConnectArgs

func GetServiceKafkaConnectUserConfigKafkaConnectPtr(v *GetServiceKafkaConnectUserConfigKafkaConnectArgs) GetServiceKafkaConnectUserConfigKafkaConnectPtrInput {
	return (*getServiceKafkaConnectUserConfigKafkaConnectPtrType)(v)
}

func (*getServiceKafkaConnectUserConfigKafkaConnectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceKafkaConnectUserConfigKafkaConnect)(nil)).Elem()
}

func (i *getServiceKafkaConnectUserConfigKafkaConnectPtrType) ToGetServiceKafkaConnectUserConfigKafkaConnectPtrOutput() GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput {
	return i.ToGetServiceKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(context.Background())
}

func (i *getServiceKafkaConnectUserConfigKafkaConnectPtrType) ToGetServiceKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx context.Context) GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput)
}

type GetServiceKafkaConnectUserConfigKafkaConnectOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaConnectUserConfigKafkaConnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaConnectUserConfigKafkaConnect)(nil)).Elem()
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectOutput) ToGetServiceKafkaConnectUserConfigKafkaConnectOutput() GetServiceKafkaConnectUserConfigKafkaConnectOutput {
	return o
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectOutput) ToGetServiceKafkaConnectUserConfigKafkaConnectOutputWithContext(ctx context.Context) GetServiceKafkaConnectUserConfigKafkaConnectOutput {
	return o
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectOutput) ToGetServiceKafkaConnectUserConfigKafkaConnectPtrOutput() GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o.ToGetServiceKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(context.Background())
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectOutput) ToGetServiceKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx context.Context) GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaConnectUserConfigKafkaConnect) *GetServiceKafkaConnectUserConfigKafkaConnect {
		return &v
	}).(GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput)
}
func (o GetServiceKafkaConnectUserConfigKafkaConnectOutput) ConnectorClientConfigOverridePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaConnectUserConfigKafkaConnect) *string {
		return v.ConnectorClientConfigOverridePolicy
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectOutput) ConsumerAutoOffsetReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaConnectUserConfigKafkaConnect) *string { return v.ConsumerAutoOffsetReset }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectOutput) ConsumerFetchMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaConnectUserConfigKafkaConnect) *string { return v.ConsumerFetchMaxBytes }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectOutput) ConsumerIsolationLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaConnectUserConfigKafkaConnect) *string { return v.ConsumerIsolationLevel }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectOutput) ConsumerMaxPartitionFetchBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaConnectUserConfigKafkaConnect) *string { return v.ConsumerMaxPartitionFetchBytes }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectOutput) ConsumerMaxPollIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaConnectUserConfigKafkaConnect) *string { return v.ConsumerMaxPollIntervalMs }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectOutput) ConsumerMaxPollRecords() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaConnectUserConfigKafkaConnect) *string { return v.ConsumerMaxPollRecords }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectOutput) OffsetFlushIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaConnectUserConfigKafkaConnect) *string { return v.OffsetFlushIntervalMs }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectOutput) OffsetFlushTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaConnectUserConfigKafkaConnect) *string { return v.OffsetFlushTimeoutMs }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectOutput) ProducerMaxRequestSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaConnectUserConfigKafkaConnect) *string { return v.ProducerMaxRequestSize }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectOutput) SessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaConnectUserConfigKafkaConnect) *string { return v.SessionTimeoutMs }).(pulumi.StringPtrOutput)
}

type GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceKafkaConnectUserConfigKafkaConnect)(nil)).Elem()
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput) ToGetServiceKafkaConnectUserConfigKafkaConnectPtrOutput() GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput) ToGetServiceKafkaConnectUserConfigKafkaConnectPtrOutputWithContext(ctx context.Context) GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput {
	return o
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput) Elem() GetServiceKafkaConnectUserConfigKafkaConnectOutput {
	return o.ApplyT(func(v *GetServiceKafkaConnectUserConfigKafkaConnect) GetServiceKafkaConnectUserConfigKafkaConnect {
		return *v
	}).(GetServiceKafkaConnectUserConfigKafkaConnectOutput)
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput) ConnectorClientConfigOverridePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorClientConfigOverridePolicy
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput) ConsumerAutoOffsetReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerAutoOffsetReset
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput) ConsumerFetchMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerFetchMaxBytes
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput) ConsumerIsolationLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerIsolationLevel
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput) ConsumerMaxPartitionFetchBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerMaxPartitionFetchBytes
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput) ConsumerMaxPollIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerMaxPollIntervalMs
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput) ConsumerMaxPollRecords() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerMaxPollRecords
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput) OffsetFlushIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.OffsetFlushIntervalMs
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput) OffsetFlushTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.OffsetFlushTimeoutMs
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput) ProducerMaxRequestSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.ProducerMaxRequestSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput) SessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaConnectUserConfigKafkaConnect) *string {
		if v == nil {
			return nil
		}
		return v.SessionTimeoutMs
	}).(pulumi.StringPtrOutput)
}

type GetServiceKafkaConnectUserConfigPrivateAccess struct {
	KafkaConnect *string `pulumi:"kafkaConnect"`
	Prometheus   *string `pulumi:"prometheus"`
}

// GetServiceKafkaConnectUserConfigPrivateAccessInput is an input type that accepts GetServiceKafkaConnectUserConfigPrivateAccessArgs and GetServiceKafkaConnectUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `GetServiceKafkaConnectUserConfigPrivateAccessInput` via:
//
//          GetServiceKafkaConnectUserConfigPrivateAccessArgs{...}
type GetServiceKafkaConnectUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToGetServiceKafkaConnectUserConfigPrivateAccessOutput() GetServiceKafkaConnectUserConfigPrivateAccessOutput
	ToGetServiceKafkaConnectUserConfigPrivateAccessOutputWithContext(context.Context) GetServiceKafkaConnectUserConfigPrivateAccessOutput
}

type GetServiceKafkaConnectUserConfigPrivateAccessArgs struct {
	KafkaConnect pulumi.StringPtrInput `pulumi:"kafkaConnect"`
	Prometheus   pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (GetServiceKafkaConnectUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaConnectUserConfigPrivateAccess)(nil)).Elem()
}

func (i GetServiceKafkaConnectUserConfigPrivateAccessArgs) ToGetServiceKafkaConnectUserConfigPrivateAccessOutput() GetServiceKafkaConnectUserConfigPrivateAccessOutput {
	return i.ToGetServiceKafkaConnectUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i GetServiceKafkaConnectUserConfigPrivateAccessArgs) ToGetServiceKafkaConnectUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetServiceKafkaConnectUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaConnectUserConfigPrivateAccessOutput)
}

func (i GetServiceKafkaConnectUserConfigPrivateAccessArgs) ToGetServiceKafkaConnectUserConfigPrivateAccessPtrOutput() GetServiceKafkaConnectUserConfigPrivateAccessPtrOutput {
	return i.ToGetServiceKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i GetServiceKafkaConnectUserConfigPrivateAccessArgs) ToGetServiceKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceKafkaConnectUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaConnectUserConfigPrivateAccessOutput).ToGetServiceKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// GetServiceKafkaConnectUserConfigPrivateAccessPtrInput is an input type that accepts GetServiceKafkaConnectUserConfigPrivateAccessArgs, GetServiceKafkaConnectUserConfigPrivateAccessPtr and GetServiceKafkaConnectUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `GetServiceKafkaConnectUserConfigPrivateAccessPtrInput` via:
//
//          GetServiceKafkaConnectUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type GetServiceKafkaConnectUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToGetServiceKafkaConnectUserConfigPrivateAccessPtrOutput() GetServiceKafkaConnectUserConfigPrivateAccessPtrOutput
	ToGetServiceKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(context.Context) GetServiceKafkaConnectUserConfigPrivateAccessPtrOutput
}

type getServiceKafkaConnectUserConfigPrivateAccessPtrType GetServiceKafkaConnectUserConfigPrivateAccessArgs

func GetServiceKafkaConnectUserConfigPrivateAccessPtr(v *GetServiceKafkaConnectUserConfigPrivateAccessArgs) GetServiceKafkaConnectUserConfigPrivateAccessPtrInput {
	return (*getServiceKafkaConnectUserConfigPrivateAccessPtrType)(v)
}

func (*getServiceKafkaConnectUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceKafkaConnectUserConfigPrivateAccess)(nil)).Elem()
}

func (i *getServiceKafkaConnectUserConfigPrivateAccessPtrType) ToGetServiceKafkaConnectUserConfigPrivateAccessPtrOutput() GetServiceKafkaConnectUserConfigPrivateAccessPtrOutput {
	return i.ToGetServiceKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *getServiceKafkaConnectUserConfigPrivateAccessPtrType) ToGetServiceKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceKafkaConnectUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaConnectUserConfigPrivateAccessPtrOutput)
}

type GetServiceKafkaConnectUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaConnectUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaConnectUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetServiceKafkaConnectUserConfigPrivateAccessOutput) ToGetServiceKafkaConnectUserConfigPrivateAccessOutput() GetServiceKafkaConnectUserConfigPrivateAccessOutput {
	return o
}

func (o GetServiceKafkaConnectUserConfigPrivateAccessOutput) ToGetServiceKafkaConnectUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetServiceKafkaConnectUserConfigPrivateAccessOutput {
	return o
}

func (o GetServiceKafkaConnectUserConfigPrivateAccessOutput) ToGetServiceKafkaConnectUserConfigPrivateAccessPtrOutput() GetServiceKafkaConnectUserConfigPrivateAccessPtrOutput {
	return o.ToGetServiceKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o GetServiceKafkaConnectUserConfigPrivateAccessOutput) ToGetServiceKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceKafkaConnectUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaConnectUserConfigPrivateAccess) *GetServiceKafkaConnectUserConfigPrivateAccess {
		return &v
	}).(GetServiceKafkaConnectUserConfigPrivateAccessPtrOutput)
}
func (o GetServiceKafkaConnectUserConfigPrivateAccessOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaConnectUserConfigPrivateAccess) *string { return v.KafkaConnect }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaConnectUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type GetServiceKafkaConnectUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaConnectUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceKafkaConnectUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetServiceKafkaConnectUserConfigPrivateAccessPtrOutput) ToGetServiceKafkaConnectUserConfigPrivateAccessPtrOutput() GetServiceKafkaConnectUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetServiceKafkaConnectUserConfigPrivateAccessPtrOutput) ToGetServiceKafkaConnectUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceKafkaConnectUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetServiceKafkaConnectUserConfigPrivateAccessPtrOutput) Elem() GetServiceKafkaConnectUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *GetServiceKafkaConnectUserConfigPrivateAccess) GetServiceKafkaConnectUserConfigPrivateAccess {
		return *v
	}).(GetServiceKafkaConnectUserConfigPrivateAccessOutput)
}

func (o GetServiceKafkaConnectUserConfigPrivateAccessPtrOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaConnectUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaConnect
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaConnectUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type GetServiceKafkaConnectUserConfigPrivatelinkAccess struct {
	KafkaConnect *string `pulumi:"kafkaConnect"`
}

// GetServiceKafkaConnectUserConfigPrivatelinkAccessInput is an input type that accepts GetServiceKafkaConnectUserConfigPrivatelinkAccessArgs and GetServiceKafkaConnectUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `GetServiceKafkaConnectUserConfigPrivatelinkAccessInput` via:
//
//          GetServiceKafkaConnectUserConfigPrivatelinkAccessArgs{...}
type GetServiceKafkaConnectUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToGetServiceKafkaConnectUserConfigPrivatelinkAccessOutput() GetServiceKafkaConnectUserConfigPrivatelinkAccessOutput
	ToGetServiceKafkaConnectUserConfigPrivatelinkAccessOutputWithContext(context.Context) GetServiceKafkaConnectUserConfigPrivatelinkAccessOutput
}

type GetServiceKafkaConnectUserConfigPrivatelinkAccessArgs struct {
	KafkaConnect pulumi.StringPtrInput `pulumi:"kafkaConnect"`
}

func (GetServiceKafkaConnectUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaConnectUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i GetServiceKafkaConnectUserConfigPrivatelinkAccessArgs) ToGetServiceKafkaConnectUserConfigPrivatelinkAccessOutput() GetServiceKafkaConnectUserConfigPrivatelinkAccessOutput {
	return i.ToGetServiceKafkaConnectUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i GetServiceKafkaConnectUserConfigPrivatelinkAccessArgs) ToGetServiceKafkaConnectUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetServiceKafkaConnectUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaConnectUserConfigPrivatelinkAccessOutput)
}

func (i GetServiceKafkaConnectUserConfigPrivatelinkAccessArgs) ToGetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput() GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i GetServiceKafkaConnectUserConfigPrivatelinkAccessArgs) ToGetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaConnectUserConfigPrivatelinkAccessOutput).ToGetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrInput is an input type that accepts GetServiceKafkaConnectUserConfigPrivatelinkAccessArgs, GetServiceKafkaConnectUserConfigPrivatelinkAccessPtr and GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrInput` via:
//
//          GetServiceKafkaConnectUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToGetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput() GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput
	ToGetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput
}

type getServiceKafkaConnectUserConfigPrivatelinkAccessPtrType GetServiceKafkaConnectUserConfigPrivatelinkAccessArgs

func GetServiceKafkaConnectUserConfigPrivatelinkAccessPtr(v *GetServiceKafkaConnectUserConfigPrivatelinkAccessArgs) GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrInput {
	return (*getServiceKafkaConnectUserConfigPrivatelinkAccessPtrType)(v)
}

func (*getServiceKafkaConnectUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceKafkaConnectUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *getServiceKafkaConnectUserConfigPrivatelinkAccessPtrType) ToGetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput() GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *getServiceKafkaConnectUserConfigPrivatelinkAccessPtrType) ToGetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput)
}

type GetServiceKafkaConnectUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaConnectUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaConnectUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetServiceKafkaConnectUserConfigPrivatelinkAccessOutput) ToGetServiceKafkaConnectUserConfigPrivatelinkAccessOutput() GetServiceKafkaConnectUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetServiceKafkaConnectUserConfigPrivatelinkAccessOutput) ToGetServiceKafkaConnectUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetServiceKafkaConnectUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetServiceKafkaConnectUserConfigPrivatelinkAccessOutput) ToGetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput() GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return o.ToGetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o GetServiceKafkaConnectUserConfigPrivatelinkAccessOutput) ToGetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaConnectUserConfigPrivatelinkAccess) *GetServiceKafkaConnectUserConfigPrivatelinkAccess {
		return &v
	}).(GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput)
}
func (o GetServiceKafkaConnectUserConfigPrivatelinkAccessOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaConnectUserConfigPrivatelinkAccess) *string { return v.KafkaConnect }).(pulumi.StringPtrOutput)
}

type GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceKafkaConnectUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput) ToGetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput() GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput) ToGetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput) Elem() GetServiceKafkaConnectUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *GetServiceKafkaConnectUserConfigPrivatelinkAccess) GetServiceKafkaConnectUserConfigPrivatelinkAccess {
		return *v
	}).(GetServiceKafkaConnectUserConfigPrivatelinkAccessOutput)
}

func (o GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaConnectUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaConnect
	}).(pulumi.StringPtrOutput)
}

type GetServiceKafkaConnectUserConfigPublicAccess struct {
	KafkaConnect *string `pulumi:"kafkaConnect"`
	Prometheus   *string `pulumi:"prometheus"`
}

// GetServiceKafkaConnectUserConfigPublicAccessInput is an input type that accepts GetServiceKafkaConnectUserConfigPublicAccessArgs and GetServiceKafkaConnectUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `GetServiceKafkaConnectUserConfigPublicAccessInput` via:
//
//          GetServiceKafkaConnectUserConfigPublicAccessArgs{...}
type GetServiceKafkaConnectUserConfigPublicAccessInput interface {
	pulumi.Input

	ToGetServiceKafkaConnectUserConfigPublicAccessOutput() GetServiceKafkaConnectUserConfigPublicAccessOutput
	ToGetServiceKafkaConnectUserConfigPublicAccessOutputWithContext(context.Context) GetServiceKafkaConnectUserConfigPublicAccessOutput
}

type GetServiceKafkaConnectUserConfigPublicAccessArgs struct {
	KafkaConnect pulumi.StringPtrInput `pulumi:"kafkaConnect"`
	Prometheus   pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (GetServiceKafkaConnectUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaConnectUserConfigPublicAccess)(nil)).Elem()
}

func (i GetServiceKafkaConnectUserConfigPublicAccessArgs) ToGetServiceKafkaConnectUserConfigPublicAccessOutput() GetServiceKafkaConnectUserConfigPublicAccessOutput {
	return i.ToGetServiceKafkaConnectUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i GetServiceKafkaConnectUserConfigPublicAccessArgs) ToGetServiceKafkaConnectUserConfigPublicAccessOutputWithContext(ctx context.Context) GetServiceKafkaConnectUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaConnectUserConfigPublicAccessOutput)
}

func (i GetServiceKafkaConnectUserConfigPublicAccessArgs) ToGetServiceKafkaConnectUserConfigPublicAccessPtrOutput() GetServiceKafkaConnectUserConfigPublicAccessPtrOutput {
	return i.ToGetServiceKafkaConnectUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i GetServiceKafkaConnectUserConfigPublicAccessArgs) ToGetServiceKafkaConnectUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceKafkaConnectUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaConnectUserConfigPublicAccessOutput).ToGetServiceKafkaConnectUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// GetServiceKafkaConnectUserConfigPublicAccessPtrInput is an input type that accepts GetServiceKafkaConnectUserConfigPublicAccessArgs, GetServiceKafkaConnectUserConfigPublicAccessPtr and GetServiceKafkaConnectUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `GetServiceKafkaConnectUserConfigPublicAccessPtrInput` via:
//
//          GetServiceKafkaConnectUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type GetServiceKafkaConnectUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToGetServiceKafkaConnectUserConfigPublicAccessPtrOutput() GetServiceKafkaConnectUserConfigPublicAccessPtrOutput
	ToGetServiceKafkaConnectUserConfigPublicAccessPtrOutputWithContext(context.Context) GetServiceKafkaConnectUserConfigPublicAccessPtrOutput
}

type getServiceKafkaConnectUserConfigPublicAccessPtrType GetServiceKafkaConnectUserConfigPublicAccessArgs

func GetServiceKafkaConnectUserConfigPublicAccessPtr(v *GetServiceKafkaConnectUserConfigPublicAccessArgs) GetServiceKafkaConnectUserConfigPublicAccessPtrInput {
	return (*getServiceKafkaConnectUserConfigPublicAccessPtrType)(v)
}

func (*getServiceKafkaConnectUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceKafkaConnectUserConfigPublicAccess)(nil)).Elem()
}

func (i *getServiceKafkaConnectUserConfigPublicAccessPtrType) ToGetServiceKafkaConnectUserConfigPublicAccessPtrOutput() GetServiceKafkaConnectUserConfigPublicAccessPtrOutput {
	return i.ToGetServiceKafkaConnectUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *getServiceKafkaConnectUserConfigPublicAccessPtrType) ToGetServiceKafkaConnectUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceKafkaConnectUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaConnectUserConfigPublicAccessPtrOutput)
}

type GetServiceKafkaConnectUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaConnectUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaConnectUserConfigPublicAccess)(nil)).Elem()
}

func (o GetServiceKafkaConnectUserConfigPublicAccessOutput) ToGetServiceKafkaConnectUserConfigPublicAccessOutput() GetServiceKafkaConnectUserConfigPublicAccessOutput {
	return o
}

func (o GetServiceKafkaConnectUserConfigPublicAccessOutput) ToGetServiceKafkaConnectUserConfigPublicAccessOutputWithContext(ctx context.Context) GetServiceKafkaConnectUserConfigPublicAccessOutput {
	return o
}

func (o GetServiceKafkaConnectUserConfigPublicAccessOutput) ToGetServiceKafkaConnectUserConfigPublicAccessPtrOutput() GetServiceKafkaConnectUserConfigPublicAccessPtrOutput {
	return o.ToGetServiceKafkaConnectUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o GetServiceKafkaConnectUserConfigPublicAccessOutput) ToGetServiceKafkaConnectUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceKafkaConnectUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaConnectUserConfigPublicAccess) *GetServiceKafkaConnectUserConfigPublicAccess {
		return &v
	}).(GetServiceKafkaConnectUserConfigPublicAccessPtrOutput)
}
func (o GetServiceKafkaConnectUserConfigPublicAccessOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaConnectUserConfigPublicAccess) *string { return v.KafkaConnect }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaConnectUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type GetServiceKafkaConnectUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaConnectUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceKafkaConnectUserConfigPublicAccess)(nil)).Elem()
}

func (o GetServiceKafkaConnectUserConfigPublicAccessPtrOutput) ToGetServiceKafkaConnectUserConfigPublicAccessPtrOutput() GetServiceKafkaConnectUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetServiceKafkaConnectUserConfigPublicAccessPtrOutput) ToGetServiceKafkaConnectUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceKafkaConnectUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetServiceKafkaConnectUserConfigPublicAccessPtrOutput) Elem() GetServiceKafkaConnectUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *GetServiceKafkaConnectUserConfigPublicAccess) GetServiceKafkaConnectUserConfigPublicAccess {
		return *v
	}).(GetServiceKafkaConnectUserConfigPublicAccessOutput)
}

func (o GetServiceKafkaConnectUserConfigPublicAccessPtrOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaConnectUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaConnect
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaConnectUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaConnectUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type GetServiceKafkaMirrormaker struct {
}

// GetServiceKafkaMirrormakerInput is an input type that accepts GetServiceKafkaMirrormakerArgs and GetServiceKafkaMirrormakerOutput values.
// You can construct a concrete instance of `GetServiceKafkaMirrormakerInput` via:
//
//          GetServiceKafkaMirrormakerArgs{...}
type GetServiceKafkaMirrormakerInput interface {
	pulumi.Input

	ToGetServiceKafkaMirrormakerOutput() GetServiceKafkaMirrormakerOutput
	ToGetServiceKafkaMirrormakerOutputWithContext(context.Context) GetServiceKafkaMirrormakerOutput
}

type GetServiceKafkaMirrormakerArgs struct {
}

func (GetServiceKafkaMirrormakerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaMirrormaker)(nil)).Elem()
}

func (i GetServiceKafkaMirrormakerArgs) ToGetServiceKafkaMirrormakerOutput() GetServiceKafkaMirrormakerOutput {
	return i.ToGetServiceKafkaMirrormakerOutputWithContext(context.Background())
}

func (i GetServiceKafkaMirrormakerArgs) ToGetServiceKafkaMirrormakerOutputWithContext(ctx context.Context) GetServiceKafkaMirrormakerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaMirrormakerOutput)
}

type GetServiceKafkaMirrormakerOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaMirrormakerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaMirrormaker)(nil)).Elem()
}

func (o GetServiceKafkaMirrormakerOutput) ToGetServiceKafkaMirrormakerOutput() GetServiceKafkaMirrormakerOutput {
	return o
}

func (o GetServiceKafkaMirrormakerOutput) ToGetServiceKafkaMirrormakerOutputWithContext(ctx context.Context) GetServiceKafkaMirrormakerOutput {
	return o
}

type GetServiceKafkaMirrormakerUserConfig struct {
	IpFilters        []string                                              `pulumi:"ipFilters"`
	KafkaMirrormaker *GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker `pulumi:"kafkaMirrormaker"`
}

// GetServiceKafkaMirrormakerUserConfigInput is an input type that accepts GetServiceKafkaMirrormakerUserConfigArgs and GetServiceKafkaMirrormakerUserConfigOutput values.
// You can construct a concrete instance of `GetServiceKafkaMirrormakerUserConfigInput` via:
//
//          GetServiceKafkaMirrormakerUserConfigArgs{...}
type GetServiceKafkaMirrormakerUserConfigInput interface {
	pulumi.Input

	ToGetServiceKafkaMirrormakerUserConfigOutput() GetServiceKafkaMirrormakerUserConfigOutput
	ToGetServiceKafkaMirrormakerUserConfigOutputWithContext(context.Context) GetServiceKafkaMirrormakerUserConfigOutput
}

type GetServiceKafkaMirrormakerUserConfigArgs struct {
	IpFilters        pulumi.StringArrayInput                                      `pulumi:"ipFilters"`
	KafkaMirrormaker GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrInput `pulumi:"kafkaMirrormaker"`
}

func (GetServiceKafkaMirrormakerUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaMirrormakerUserConfig)(nil)).Elem()
}

func (i GetServiceKafkaMirrormakerUserConfigArgs) ToGetServiceKafkaMirrormakerUserConfigOutput() GetServiceKafkaMirrormakerUserConfigOutput {
	return i.ToGetServiceKafkaMirrormakerUserConfigOutputWithContext(context.Background())
}

func (i GetServiceKafkaMirrormakerUserConfigArgs) ToGetServiceKafkaMirrormakerUserConfigOutputWithContext(ctx context.Context) GetServiceKafkaMirrormakerUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaMirrormakerUserConfigOutput)
}

type GetServiceKafkaMirrormakerUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaMirrormakerUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaMirrormakerUserConfig)(nil)).Elem()
}

func (o GetServiceKafkaMirrormakerUserConfigOutput) ToGetServiceKafkaMirrormakerUserConfigOutput() GetServiceKafkaMirrormakerUserConfigOutput {
	return o
}

func (o GetServiceKafkaMirrormakerUserConfigOutput) ToGetServiceKafkaMirrormakerUserConfigOutputWithContext(ctx context.Context) GetServiceKafkaMirrormakerUserConfigOutput {
	return o
}

func (o GetServiceKafkaMirrormakerUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceKafkaMirrormakerUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

func (o GetServiceKafkaMirrormakerUserConfigOutput) KafkaMirrormaker() GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaMirrormakerUserConfig) *GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker {
		return v.KafkaMirrormaker
	}).(GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput)
}

type GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker struct {
	EmitCheckpointsEnabled          *string `pulumi:"emitCheckpointsEnabled"`
	EmitCheckpointsIntervalSeconds  *string `pulumi:"emitCheckpointsIntervalSeconds"`
	RefreshGroupsEnabled            *string `pulumi:"refreshGroupsEnabled"`
	RefreshGroupsIntervalSeconds    *string `pulumi:"refreshGroupsIntervalSeconds"`
	RefreshTopicsEnabled            *string `pulumi:"refreshTopicsEnabled"`
	RefreshTopicsIntervalSeconds    *string `pulumi:"refreshTopicsIntervalSeconds"`
	SyncGroupOffsetsEnabled         *string `pulumi:"syncGroupOffsetsEnabled"`
	SyncGroupOffsetsIntervalSeconds *string `pulumi:"syncGroupOffsetsIntervalSeconds"`
}

// GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerInput is an input type that accepts GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerArgs and GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput values.
// You can construct a concrete instance of `GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerInput` via:
//
//          GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerArgs{...}
type GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerInput interface {
	pulumi.Input

	ToGetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput() GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput
	ToGetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutputWithContext(context.Context) GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput
}

type GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerArgs struct {
	EmitCheckpointsEnabled          pulumi.StringPtrInput `pulumi:"emitCheckpointsEnabled"`
	EmitCheckpointsIntervalSeconds  pulumi.StringPtrInput `pulumi:"emitCheckpointsIntervalSeconds"`
	RefreshGroupsEnabled            pulumi.StringPtrInput `pulumi:"refreshGroupsEnabled"`
	RefreshGroupsIntervalSeconds    pulumi.StringPtrInput `pulumi:"refreshGroupsIntervalSeconds"`
	RefreshTopicsEnabled            pulumi.StringPtrInput `pulumi:"refreshTopicsEnabled"`
	RefreshTopicsIntervalSeconds    pulumi.StringPtrInput `pulumi:"refreshTopicsIntervalSeconds"`
	SyncGroupOffsetsEnabled         pulumi.StringPtrInput `pulumi:"syncGroupOffsetsEnabled"`
	SyncGroupOffsetsIntervalSeconds pulumi.StringPtrInput `pulumi:"syncGroupOffsetsIntervalSeconds"`
}

func (GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker)(nil)).Elem()
}

func (i GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerArgs) ToGetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput() GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput {
	return i.ToGetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutputWithContext(context.Background())
}

func (i GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerArgs) ToGetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutputWithContext(ctx context.Context) GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput)
}

func (i GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerArgs) ToGetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput() GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return i.ToGetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(context.Background())
}

func (i GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerArgs) ToGetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(ctx context.Context) GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput).ToGetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(ctx)
}

// GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrInput is an input type that accepts GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerArgs, GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtr and GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput values.
// You can construct a concrete instance of `GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrInput` via:
//
//          GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerArgs{...}
//
//  or:
//
//          nil
type GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrInput interface {
	pulumi.Input

	ToGetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput() GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput
	ToGetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(context.Context) GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput
}

type getServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrType GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerArgs

func GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtr(v *GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerArgs) GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrInput {
	return (*getServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrType)(v)
}

func (*getServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker)(nil)).Elem()
}

func (i *getServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrType) ToGetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput() GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return i.ToGetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(context.Background())
}

func (i *getServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrType) ToGetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(ctx context.Context) GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput)
}

type GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker)(nil)).Elem()
}

func (o GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput) ToGetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput() GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput {
	return o
}

func (o GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput) ToGetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutputWithContext(ctx context.Context) GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput {
	return o
}

func (o GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput) ToGetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput() GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return o.ToGetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(context.Background())
}

func (o GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput) ToGetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(ctx context.Context) GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker {
		return &v
	}).(GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput)
}
func (o GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput) EmitCheckpointsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string { return v.EmitCheckpointsEnabled }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput) EmitCheckpointsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		return v.EmitCheckpointsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput) RefreshGroupsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string { return v.RefreshGroupsEnabled }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput) RefreshGroupsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		return v.RefreshGroupsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput) RefreshTopicsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string { return v.RefreshTopicsEnabled }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput) RefreshTopicsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		return v.RefreshTopicsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput) SyncGroupOffsetsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string { return v.SyncGroupOffsetsEnabled }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput) SyncGroupOffsetsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		return v.SyncGroupOffsetsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

type GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker)(nil)).Elem()
}

func (o GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) ToGetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput() GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return o
}

func (o GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) ToGetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutputWithContext(ctx context.Context) GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput {
	return o
}

func (o GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) Elem() GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput {
	return o.ApplyT(func(v *GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker) GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker {
		return *v
	}).(GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput)
}

func (o GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) EmitCheckpointsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.EmitCheckpointsEnabled
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) EmitCheckpointsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.EmitCheckpointsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) RefreshGroupsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.RefreshGroupsEnabled
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) RefreshGroupsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.RefreshGroupsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) RefreshTopicsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.RefreshTopicsEnabled
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) RefreshTopicsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.RefreshTopicsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) SyncGroupOffsetsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.SyncGroupOffsetsEnabled
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput) SyncGroupOffsetsIntervalSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaMirrormakerUserConfigKafkaMirrormaker) *string {
		if v == nil {
			return nil
		}
		return v.SyncGroupOffsetsIntervalSeconds
	}).(pulumi.StringPtrOutput)
}

type GetServiceKafkaUserConfig struct {
	CustomDomain               *string                                              `pulumi:"customDomain"`
	IpFilters                  []string                                             `pulumi:"ipFilters"`
	Kafka                      *GetServiceKafkaUserConfigKafka                      `pulumi:"kafka"`
	KafkaAuthenticationMethods *GetServiceKafkaUserConfigKafkaAuthenticationMethods `pulumi:"kafkaAuthenticationMethods"`
	KafkaConnect               *string                                              `pulumi:"kafkaConnect"`
	KafkaConnectConfig         *GetServiceKafkaUserConfigKafkaConnectConfig         `pulumi:"kafkaConnectConfig"`
	KafkaRest                  *string                                              `pulumi:"kafkaRest"`
	KafkaRestConfig            *GetServiceKafkaUserConfigKafkaRestConfig            `pulumi:"kafkaRestConfig"`
	KafkaVersion               *string                                              `pulumi:"kafkaVersion"`
	PrivateAccess              *GetServiceKafkaUserConfigPrivateAccess              `pulumi:"privateAccess"`
	PrivatelinkAccess          *GetServiceKafkaUserConfigPrivatelinkAccess          `pulumi:"privatelinkAccess"`
	PublicAccess               *GetServiceKafkaUserConfigPublicAccess               `pulumi:"publicAccess"`
	SchemaRegistry             *string                                              `pulumi:"schemaRegistry"`
	SchemaRegistryConfig       *GetServiceKafkaUserConfigSchemaRegistryConfig       `pulumi:"schemaRegistryConfig"`
}

// GetServiceKafkaUserConfigInput is an input type that accepts GetServiceKafkaUserConfigArgs and GetServiceKafkaUserConfigOutput values.
// You can construct a concrete instance of `GetServiceKafkaUserConfigInput` via:
//
//          GetServiceKafkaUserConfigArgs{...}
type GetServiceKafkaUserConfigInput interface {
	pulumi.Input

	ToGetServiceKafkaUserConfigOutput() GetServiceKafkaUserConfigOutput
	ToGetServiceKafkaUserConfigOutputWithContext(context.Context) GetServiceKafkaUserConfigOutput
}

type GetServiceKafkaUserConfigArgs struct {
	CustomDomain               pulumi.StringPtrInput                                       `pulumi:"customDomain"`
	IpFilters                  pulumi.StringArrayInput                                     `pulumi:"ipFilters"`
	Kafka                      GetServiceKafkaUserConfigKafkaPtrInput                      `pulumi:"kafka"`
	KafkaAuthenticationMethods GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrInput `pulumi:"kafkaAuthenticationMethods"`
	KafkaConnect               pulumi.StringPtrInput                                       `pulumi:"kafkaConnect"`
	KafkaConnectConfig         GetServiceKafkaUserConfigKafkaConnectConfigPtrInput         `pulumi:"kafkaConnectConfig"`
	KafkaRest                  pulumi.StringPtrInput                                       `pulumi:"kafkaRest"`
	KafkaRestConfig            GetServiceKafkaUserConfigKafkaRestConfigPtrInput            `pulumi:"kafkaRestConfig"`
	KafkaVersion               pulumi.StringPtrInput                                       `pulumi:"kafkaVersion"`
	PrivateAccess              GetServiceKafkaUserConfigPrivateAccessPtrInput              `pulumi:"privateAccess"`
	PrivatelinkAccess          GetServiceKafkaUserConfigPrivatelinkAccessPtrInput          `pulumi:"privatelinkAccess"`
	PublicAccess               GetServiceKafkaUserConfigPublicAccessPtrInput               `pulumi:"publicAccess"`
	SchemaRegistry             pulumi.StringPtrInput                                       `pulumi:"schemaRegistry"`
	SchemaRegistryConfig       GetServiceKafkaUserConfigSchemaRegistryConfigPtrInput       `pulumi:"schemaRegistryConfig"`
}

func (GetServiceKafkaUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaUserConfig)(nil)).Elem()
}

func (i GetServiceKafkaUserConfigArgs) ToGetServiceKafkaUserConfigOutput() GetServiceKafkaUserConfigOutput {
	return i.ToGetServiceKafkaUserConfigOutputWithContext(context.Background())
}

func (i GetServiceKafkaUserConfigArgs) ToGetServiceKafkaUserConfigOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaUserConfigOutput)
}

type GetServiceKafkaUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaUserConfig)(nil)).Elem()
}

func (o GetServiceKafkaUserConfigOutput) ToGetServiceKafkaUserConfigOutput() GetServiceKafkaUserConfigOutput {
	return o
}

func (o GetServiceKafkaUserConfigOutput) ToGetServiceKafkaUserConfigOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigOutput {
	return o
}

func (o GetServiceKafkaUserConfigOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfig) *string { return v.CustomDomain }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

func (o GetServiceKafkaUserConfigOutput) Kafka() GetServiceKafkaUserConfigKafkaPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfig) *GetServiceKafkaUserConfigKafka { return v.Kafka }).(GetServiceKafkaUserConfigKafkaPtrOutput)
}

func (o GetServiceKafkaUserConfigOutput) KafkaAuthenticationMethods() GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfig) *GetServiceKafkaUserConfigKafkaAuthenticationMethods {
		return v.KafkaAuthenticationMethods
	}).(GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput)
}

func (o GetServiceKafkaUserConfigOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfig) *string { return v.KafkaConnect }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigOutput) KafkaConnectConfig() GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfig) *GetServiceKafkaUserConfigKafkaConnectConfig {
		return v.KafkaConnectConfig
	}).(GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput)
}

func (o GetServiceKafkaUserConfigOutput) KafkaRest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfig) *string { return v.KafkaRest }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigOutput) KafkaRestConfig() GetServiceKafkaUserConfigKafkaRestConfigPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfig) *GetServiceKafkaUserConfigKafkaRestConfig { return v.KafkaRestConfig }).(GetServiceKafkaUserConfigKafkaRestConfigPtrOutput)
}

func (o GetServiceKafkaUserConfigOutput) KafkaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfig) *string { return v.KafkaVersion }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigOutput) PrivateAccess() GetServiceKafkaUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfig) *GetServiceKafkaUserConfigPrivateAccess { return v.PrivateAccess }).(GetServiceKafkaUserConfigPrivateAccessPtrOutput)
}

func (o GetServiceKafkaUserConfigOutput) PrivatelinkAccess() GetServiceKafkaUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfig) *GetServiceKafkaUserConfigPrivatelinkAccess {
		return v.PrivatelinkAccess
	}).(GetServiceKafkaUserConfigPrivatelinkAccessPtrOutput)
}

func (o GetServiceKafkaUserConfigOutput) PublicAccess() GetServiceKafkaUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfig) *GetServiceKafkaUserConfigPublicAccess { return v.PublicAccess }).(GetServiceKafkaUserConfigPublicAccessPtrOutput)
}

func (o GetServiceKafkaUserConfigOutput) SchemaRegistry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfig) *string { return v.SchemaRegistry }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigOutput) SchemaRegistryConfig() GetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfig) *GetServiceKafkaUserConfigSchemaRegistryConfig {
		return v.SchemaRegistryConfig
	}).(GetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput)
}

type GetServiceKafkaUserConfigKafka struct {
	AutoCreateTopicsEnable                               *string `pulumi:"autoCreateTopicsEnable"`
	CompressionType                                      *string `pulumi:"compressionType"`
	ConnectionsMaxIdleMs                                 *string `pulumi:"connectionsMaxIdleMs"`
	DefaultReplicationFactor                             *string `pulumi:"defaultReplicationFactor"`
	GroupInitialRebalanceDelayMs                         *string `pulumi:"groupInitialRebalanceDelayMs"`
	GroupMaxSessionTimeoutMs                             *string `pulumi:"groupMaxSessionTimeoutMs"`
	GroupMinSessionTimeoutMs                             *string `pulumi:"groupMinSessionTimeoutMs"`
	LogCleanerDeleteRetentionMs                          *string `pulumi:"logCleanerDeleteRetentionMs"`
	LogCleanerMaxCompactionLagMs                         *string `pulumi:"logCleanerMaxCompactionLagMs"`
	LogCleanerMinCleanableRatio                          *string `pulumi:"logCleanerMinCleanableRatio"`
	LogCleanerMinCompactionLagMs                         *string `pulumi:"logCleanerMinCompactionLagMs"`
	LogCleanupPolicy                                     *string `pulumi:"logCleanupPolicy"`
	LogFlushIntervalMessages                             *string `pulumi:"logFlushIntervalMessages"`
	LogFlushIntervalMs                                   *string `pulumi:"logFlushIntervalMs"`
	LogIndexIntervalBytes                                *string `pulumi:"logIndexIntervalBytes"`
	LogIndexSizeMaxBytes                                 *string `pulumi:"logIndexSizeMaxBytes"`
	LogMessageDownconversionEnable                       *string `pulumi:"logMessageDownconversionEnable"`
	LogMessageTimestampDifferenceMaxMs                   *string `pulumi:"logMessageTimestampDifferenceMaxMs"`
	LogMessageTimestampType                              *string `pulumi:"logMessageTimestampType"`
	LogPreallocate                                       *string `pulumi:"logPreallocate"`
	LogRetentionBytes                                    *string `pulumi:"logRetentionBytes"`
	LogRetentionHours                                    *string `pulumi:"logRetentionHours"`
	LogRetentionMs                                       *string `pulumi:"logRetentionMs"`
	LogRollJitterMs                                      *string `pulumi:"logRollJitterMs"`
	LogRollMs                                            *string `pulumi:"logRollMs"`
	LogSegmentBytes                                      *string `pulumi:"logSegmentBytes"`
	LogSegmentDeleteDelayMs                              *string `pulumi:"logSegmentDeleteDelayMs"`
	MaxConnectionsPerIp                                  *string `pulumi:"maxConnectionsPerIp"`
	MaxIncrementalFetchSessionCacheSlots                 *string `pulumi:"maxIncrementalFetchSessionCacheSlots"`
	MessageMaxBytes                                      *string `pulumi:"messageMaxBytes"`
	MinInsyncReplicas                                    *string `pulumi:"minInsyncReplicas"`
	NumPartitions                                        *string `pulumi:"numPartitions"`
	OffsetsRetentionMinutes                              *string `pulumi:"offsetsRetentionMinutes"`
	ProducerPurgatoryPurgeIntervalRequests               *string `pulumi:"producerPurgatoryPurgeIntervalRequests"`
	ReplicaFetchMaxBytes                                 *string `pulumi:"replicaFetchMaxBytes"`
	ReplicaFetchResponseMaxBytes                         *string `pulumi:"replicaFetchResponseMaxBytes"`
	SocketRequestMaxBytes                                *string `pulumi:"socketRequestMaxBytes"`
	TransactionRemoveExpiredTransactionCleanupIntervalMs *string `pulumi:"transactionRemoveExpiredTransactionCleanupIntervalMs"`
	TransactionStateLogSegmentBytes                      *string `pulumi:"transactionStateLogSegmentBytes"`
}

// GetServiceKafkaUserConfigKafkaInput is an input type that accepts GetServiceKafkaUserConfigKafkaArgs and GetServiceKafkaUserConfigKafkaOutput values.
// You can construct a concrete instance of `GetServiceKafkaUserConfigKafkaInput` via:
//
//          GetServiceKafkaUserConfigKafkaArgs{...}
type GetServiceKafkaUserConfigKafkaInput interface {
	pulumi.Input

	ToGetServiceKafkaUserConfigKafkaOutput() GetServiceKafkaUserConfigKafkaOutput
	ToGetServiceKafkaUserConfigKafkaOutputWithContext(context.Context) GetServiceKafkaUserConfigKafkaOutput
}

type GetServiceKafkaUserConfigKafkaArgs struct {
	AutoCreateTopicsEnable                               pulumi.StringPtrInput `pulumi:"autoCreateTopicsEnable"`
	CompressionType                                      pulumi.StringPtrInput `pulumi:"compressionType"`
	ConnectionsMaxIdleMs                                 pulumi.StringPtrInput `pulumi:"connectionsMaxIdleMs"`
	DefaultReplicationFactor                             pulumi.StringPtrInput `pulumi:"defaultReplicationFactor"`
	GroupInitialRebalanceDelayMs                         pulumi.StringPtrInput `pulumi:"groupInitialRebalanceDelayMs"`
	GroupMaxSessionTimeoutMs                             pulumi.StringPtrInput `pulumi:"groupMaxSessionTimeoutMs"`
	GroupMinSessionTimeoutMs                             pulumi.StringPtrInput `pulumi:"groupMinSessionTimeoutMs"`
	LogCleanerDeleteRetentionMs                          pulumi.StringPtrInput `pulumi:"logCleanerDeleteRetentionMs"`
	LogCleanerMaxCompactionLagMs                         pulumi.StringPtrInput `pulumi:"logCleanerMaxCompactionLagMs"`
	LogCleanerMinCleanableRatio                          pulumi.StringPtrInput `pulumi:"logCleanerMinCleanableRatio"`
	LogCleanerMinCompactionLagMs                         pulumi.StringPtrInput `pulumi:"logCleanerMinCompactionLagMs"`
	LogCleanupPolicy                                     pulumi.StringPtrInput `pulumi:"logCleanupPolicy"`
	LogFlushIntervalMessages                             pulumi.StringPtrInput `pulumi:"logFlushIntervalMessages"`
	LogFlushIntervalMs                                   pulumi.StringPtrInput `pulumi:"logFlushIntervalMs"`
	LogIndexIntervalBytes                                pulumi.StringPtrInput `pulumi:"logIndexIntervalBytes"`
	LogIndexSizeMaxBytes                                 pulumi.StringPtrInput `pulumi:"logIndexSizeMaxBytes"`
	LogMessageDownconversionEnable                       pulumi.StringPtrInput `pulumi:"logMessageDownconversionEnable"`
	LogMessageTimestampDifferenceMaxMs                   pulumi.StringPtrInput `pulumi:"logMessageTimestampDifferenceMaxMs"`
	LogMessageTimestampType                              pulumi.StringPtrInput `pulumi:"logMessageTimestampType"`
	LogPreallocate                                       pulumi.StringPtrInput `pulumi:"logPreallocate"`
	LogRetentionBytes                                    pulumi.StringPtrInput `pulumi:"logRetentionBytes"`
	LogRetentionHours                                    pulumi.StringPtrInput `pulumi:"logRetentionHours"`
	LogRetentionMs                                       pulumi.StringPtrInput `pulumi:"logRetentionMs"`
	LogRollJitterMs                                      pulumi.StringPtrInput `pulumi:"logRollJitterMs"`
	LogRollMs                                            pulumi.StringPtrInput `pulumi:"logRollMs"`
	LogSegmentBytes                                      pulumi.StringPtrInput `pulumi:"logSegmentBytes"`
	LogSegmentDeleteDelayMs                              pulumi.StringPtrInput `pulumi:"logSegmentDeleteDelayMs"`
	MaxConnectionsPerIp                                  pulumi.StringPtrInput `pulumi:"maxConnectionsPerIp"`
	MaxIncrementalFetchSessionCacheSlots                 pulumi.StringPtrInput `pulumi:"maxIncrementalFetchSessionCacheSlots"`
	MessageMaxBytes                                      pulumi.StringPtrInput `pulumi:"messageMaxBytes"`
	MinInsyncReplicas                                    pulumi.StringPtrInput `pulumi:"minInsyncReplicas"`
	NumPartitions                                        pulumi.StringPtrInput `pulumi:"numPartitions"`
	OffsetsRetentionMinutes                              pulumi.StringPtrInput `pulumi:"offsetsRetentionMinutes"`
	ProducerPurgatoryPurgeIntervalRequests               pulumi.StringPtrInput `pulumi:"producerPurgatoryPurgeIntervalRequests"`
	ReplicaFetchMaxBytes                                 pulumi.StringPtrInput `pulumi:"replicaFetchMaxBytes"`
	ReplicaFetchResponseMaxBytes                         pulumi.StringPtrInput `pulumi:"replicaFetchResponseMaxBytes"`
	SocketRequestMaxBytes                                pulumi.StringPtrInput `pulumi:"socketRequestMaxBytes"`
	TransactionRemoveExpiredTransactionCleanupIntervalMs pulumi.StringPtrInput `pulumi:"transactionRemoveExpiredTransactionCleanupIntervalMs"`
	TransactionStateLogSegmentBytes                      pulumi.StringPtrInput `pulumi:"transactionStateLogSegmentBytes"`
}

func (GetServiceKafkaUserConfigKafkaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaUserConfigKafka)(nil)).Elem()
}

func (i GetServiceKafkaUserConfigKafkaArgs) ToGetServiceKafkaUserConfigKafkaOutput() GetServiceKafkaUserConfigKafkaOutput {
	return i.ToGetServiceKafkaUserConfigKafkaOutputWithContext(context.Background())
}

func (i GetServiceKafkaUserConfigKafkaArgs) ToGetServiceKafkaUserConfigKafkaOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigKafkaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaUserConfigKafkaOutput)
}

func (i GetServiceKafkaUserConfigKafkaArgs) ToGetServiceKafkaUserConfigKafkaPtrOutput() GetServiceKafkaUserConfigKafkaPtrOutput {
	return i.ToGetServiceKafkaUserConfigKafkaPtrOutputWithContext(context.Background())
}

func (i GetServiceKafkaUserConfigKafkaArgs) ToGetServiceKafkaUserConfigKafkaPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigKafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaUserConfigKafkaOutput).ToGetServiceKafkaUserConfigKafkaPtrOutputWithContext(ctx)
}

// GetServiceKafkaUserConfigKafkaPtrInput is an input type that accepts GetServiceKafkaUserConfigKafkaArgs, GetServiceKafkaUserConfigKafkaPtr and GetServiceKafkaUserConfigKafkaPtrOutput values.
// You can construct a concrete instance of `GetServiceKafkaUserConfigKafkaPtrInput` via:
//
//          GetServiceKafkaUserConfigKafkaArgs{...}
//
//  or:
//
//          nil
type GetServiceKafkaUserConfigKafkaPtrInput interface {
	pulumi.Input

	ToGetServiceKafkaUserConfigKafkaPtrOutput() GetServiceKafkaUserConfigKafkaPtrOutput
	ToGetServiceKafkaUserConfigKafkaPtrOutputWithContext(context.Context) GetServiceKafkaUserConfigKafkaPtrOutput
}

type getServiceKafkaUserConfigKafkaPtrType GetServiceKafkaUserConfigKafkaArgs

func GetServiceKafkaUserConfigKafkaPtr(v *GetServiceKafkaUserConfigKafkaArgs) GetServiceKafkaUserConfigKafkaPtrInput {
	return (*getServiceKafkaUserConfigKafkaPtrType)(v)
}

func (*getServiceKafkaUserConfigKafkaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceKafkaUserConfigKafka)(nil)).Elem()
}

func (i *getServiceKafkaUserConfigKafkaPtrType) ToGetServiceKafkaUserConfigKafkaPtrOutput() GetServiceKafkaUserConfigKafkaPtrOutput {
	return i.ToGetServiceKafkaUserConfigKafkaPtrOutputWithContext(context.Background())
}

func (i *getServiceKafkaUserConfigKafkaPtrType) ToGetServiceKafkaUserConfigKafkaPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigKafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaUserConfigKafkaPtrOutput)
}

type GetServiceKafkaUserConfigKafkaOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaUserConfigKafkaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaUserConfigKafka)(nil)).Elem()
}

func (o GetServiceKafkaUserConfigKafkaOutput) ToGetServiceKafkaUserConfigKafkaOutput() GetServiceKafkaUserConfigKafkaOutput {
	return o
}

func (o GetServiceKafkaUserConfigKafkaOutput) ToGetServiceKafkaUserConfigKafkaOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigKafkaOutput {
	return o
}

func (o GetServiceKafkaUserConfigKafkaOutput) ToGetServiceKafkaUserConfigKafkaPtrOutput() GetServiceKafkaUserConfigKafkaPtrOutput {
	return o.ToGetServiceKafkaUserConfigKafkaPtrOutputWithContext(context.Background())
}

func (o GetServiceKafkaUserConfigKafkaOutput) ToGetServiceKafkaUserConfigKafkaPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigKafkaPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *GetServiceKafkaUserConfigKafka {
		return &v
	}).(GetServiceKafkaUserConfigKafkaPtrOutput)
}
func (o GetServiceKafkaUserConfigKafkaOutput) AutoCreateTopicsEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.AutoCreateTopicsEnable }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.CompressionType }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) ConnectionsMaxIdleMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.ConnectionsMaxIdleMs }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) DefaultReplicationFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.DefaultReplicationFactor }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) GroupInitialRebalanceDelayMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.GroupInitialRebalanceDelayMs }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) GroupMaxSessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.GroupMaxSessionTimeoutMs }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) GroupMinSessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.GroupMinSessionTimeoutMs }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) LogCleanerDeleteRetentionMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.LogCleanerDeleteRetentionMs }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) LogCleanerMaxCompactionLagMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.LogCleanerMaxCompactionLagMs }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) LogCleanerMinCleanableRatio() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.LogCleanerMinCleanableRatio }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) LogCleanerMinCompactionLagMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.LogCleanerMinCompactionLagMs }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) LogCleanupPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.LogCleanupPolicy }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) LogFlushIntervalMessages() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.LogFlushIntervalMessages }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) LogFlushIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.LogFlushIntervalMs }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) LogIndexIntervalBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.LogIndexIntervalBytes }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) LogIndexSizeMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.LogIndexSizeMaxBytes }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) LogMessageDownconversionEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.LogMessageDownconversionEnable }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) LogMessageTimestampDifferenceMaxMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.LogMessageTimestampDifferenceMaxMs }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) LogMessageTimestampType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.LogMessageTimestampType }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) LogPreallocate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.LogPreallocate }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) LogRetentionBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.LogRetentionBytes }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) LogRetentionHours() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.LogRetentionHours }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) LogRetentionMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.LogRetentionMs }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) LogRollJitterMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.LogRollJitterMs }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) LogRollMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.LogRollMs }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) LogSegmentBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.LogSegmentBytes }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) LogSegmentDeleteDelayMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.LogSegmentDeleteDelayMs }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) MaxConnectionsPerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.MaxConnectionsPerIp }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) MaxIncrementalFetchSessionCacheSlots() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.MaxIncrementalFetchSessionCacheSlots }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) MessageMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.MessageMaxBytes }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) MinInsyncReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.MinInsyncReplicas }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) NumPartitions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.NumPartitions }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) OffsetsRetentionMinutes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.OffsetsRetentionMinutes }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) ProducerPurgatoryPurgeIntervalRequests() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.ProducerPurgatoryPurgeIntervalRequests }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) ReplicaFetchMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.ReplicaFetchMaxBytes }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) ReplicaFetchResponseMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.ReplicaFetchResponseMaxBytes }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) SocketRequestMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.SocketRequestMaxBytes }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) TransactionRemoveExpiredTransactionCleanupIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string {
		return v.TransactionRemoveExpiredTransactionCleanupIntervalMs
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaOutput) TransactionStateLogSegmentBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafka) *string { return v.TransactionStateLogSegmentBytes }).(pulumi.StringPtrOutput)
}

type GetServiceKafkaUserConfigKafkaPtrOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaUserConfigKafkaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceKafkaUserConfigKafka)(nil)).Elem()
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) ToGetServiceKafkaUserConfigKafkaPtrOutput() GetServiceKafkaUserConfigKafkaPtrOutput {
	return o
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) ToGetServiceKafkaUserConfigKafkaPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigKafkaPtrOutput {
	return o
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) Elem() GetServiceKafkaUserConfigKafkaOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) GetServiceKafkaUserConfigKafka { return *v }).(GetServiceKafkaUserConfigKafkaOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) AutoCreateTopicsEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.AutoCreateTopicsEnable
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.CompressionType
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) ConnectionsMaxIdleMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionsMaxIdleMs
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) DefaultReplicationFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.DefaultReplicationFactor
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) GroupInitialRebalanceDelayMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.GroupInitialRebalanceDelayMs
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) GroupMaxSessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.GroupMaxSessionTimeoutMs
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) GroupMinSessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.GroupMinSessionTimeoutMs
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) LogCleanerDeleteRetentionMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogCleanerDeleteRetentionMs
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) LogCleanerMaxCompactionLagMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogCleanerMaxCompactionLagMs
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) LogCleanerMinCleanableRatio() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogCleanerMinCleanableRatio
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) LogCleanerMinCompactionLagMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogCleanerMinCompactionLagMs
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) LogCleanupPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogCleanupPolicy
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) LogFlushIntervalMessages() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogFlushIntervalMessages
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) LogFlushIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogFlushIntervalMs
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) LogIndexIntervalBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogIndexIntervalBytes
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) LogIndexSizeMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogIndexSizeMaxBytes
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) LogMessageDownconversionEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogMessageDownconversionEnable
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) LogMessageTimestampDifferenceMaxMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogMessageTimestampDifferenceMaxMs
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) LogMessageTimestampType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogMessageTimestampType
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) LogPreallocate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogPreallocate
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) LogRetentionBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogRetentionBytes
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) LogRetentionHours() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogRetentionHours
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) LogRetentionMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogRetentionMs
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) LogRollJitterMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogRollJitterMs
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) LogRollMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogRollMs
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) LogSegmentBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogSegmentBytes
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) LogSegmentDeleteDelayMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.LogSegmentDeleteDelayMs
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) MaxConnectionsPerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.MaxConnectionsPerIp
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) MaxIncrementalFetchSessionCacheSlots() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.MaxIncrementalFetchSessionCacheSlots
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) MessageMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.MessageMaxBytes
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) MinInsyncReplicas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.MinInsyncReplicas
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) NumPartitions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.NumPartitions
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) OffsetsRetentionMinutes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.OffsetsRetentionMinutes
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) ProducerPurgatoryPurgeIntervalRequests() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.ProducerPurgatoryPurgeIntervalRequests
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) ReplicaFetchMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.ReplicaFetchMaxBytes
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) ReplicaFetchResponseMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.ReplicaFetchResponseMaxBytes
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) SocketRequestMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.SocketRequestMaxBytes
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) TransactionRemoveExpiredTransactionCleanupIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.TransactionRemoveExpiredTransactionCleanupIntervalMs
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaPtrOutput) TransactionStateLogSegmentBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafka) *string {
		if v == nil {
			return nil
		}
		return v.TransactionStateLogSegmentBytes
	}).(pulumi.StringPtrOutput)
}

type GetServiceKafkaUserConfigKafkaAuthenticationMethods struct {
	Certificate *string `pulumi:"certificate"`
	Sasl        *string `pulumi:"sasl"`
}

// GetServiceKafkaUserConfigKafkaAuthenticationMethodsInput is an input type that accepts GetServiceKafkaUserConfigKafkaAuthenticationMethodsArgs and GetServiceKafkaUserConfigKafkaAuthenticationMethodsOutput values.
// You can construct a concrete instance of `GetServiceKafkaUserConfigKafkaAuthenticationMethodsInput` via:
//
//          GetServiceKafkaUserConfigKafkaAuthenticationMethodsArgs{...}
type GetServiceKafkaUserConfigKafkaAuthenticationMethodsInput interface {
	pulumi.Input

	ToGetServiceKafkaUserConfigKafkaAuthenticationMethodsOutput() GetServiceKafkaUserConfigKafkaAuthenticationMethodsOutput
	ToGetServiceKafkaUserConfigKafkaAuthenticationMethodsOutputWithContext(context.Context) GetServiceKafkaUserConfigKafkaAuthenticationMethodsOutput
}

type GetServiceKafkaUserConfigKafkaAuthenticationMethodsArgs struct {
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	Sasl        pulumi.StringPtrInput `pulumi:"sasl"`
}

func (GetServiceKafkaUserConfigKafkaAuthenticationMethodsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaUserConfigKafkaAuthenticationMethods)(nil)).Elem()
}

func (i GetServiceKafkaUserConfigKafkaAuthenticationMethodsArgs) ToGetServiceKafkaUserConfigKafkaAuthenticationMethodsOutput() GetServiceKafkaUserConfigKafkaAuthenticationMethodsOutput {
	return i.ToGetServiceKafkaUserConfigKafkaAuthenticationMethodsOutputWithContext(context.Background())
}

func (i GetServiceKafkaUserConfigKafkaAuthenticationMethodsArgs) ToGetServiceKafkaUserConfigKafkaAuthenticationMethodsOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigKafkaAuthenticationMethodsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaUserConfigKafkaAuthenticationMethodsOutput)
}

func (i GetServiceKafkaUserConfigKafkaAuthenticationMethodsArgs) ToGetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput() GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return i.ToGetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(context.Background())
}

func (i GetServiceKafkaUserConfigKafkaAuthenticationMethodsArgs) ToGetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaUserConfigKafkaAuthenticationMethodsOutput).ToGetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(ctx)
}

// GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrInput is an input type that accepts GetServiceKafkaUserConfigKafkaAuthenticationMethodsArgs, GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtr and GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput values.
// You can construct a concrete instance of `GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrInput` via:
//
//          GetServiceKafkaUserConfigKafkaAuthenticationMethodsArgs{...}
//
//  or:
//
//          nil
type GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrInput interface {
	pulumi.Input

	ToGetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput() GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput
	ToGetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(context.Context) GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput
}

type getServiceKafkaUserConfigKafkaAuthenticationMethodsPtrType GetServiceKafkaUserConfigKafkaAuthenticationMethodsArgs

func GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtr(v *GetServiceKafkaUserConfigKafkaAuthenticationMethodsArgs) GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrInput {
	return (*getServiceKafkaUserConfigKafkaAuthenticationMethodsPtrType)(v)
}

func (*getServiceKafkaUserConfigKafkaAuthenticationMethodsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceKafkaUserConfigKafkaAuthenticationMethods)(nil)).Elem()
}

func (i *getServiceKafkaUserConfigKafkaAuthenticationMethodsPtrType) ToGetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput() GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return i.ToGetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(context.Background())
}

func (i *getServiceKafkaUserConfigKafkaAuthenticationMethodsPtrType) ToGetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput)
}

type GetServiceKafkaUserConfigKafkaAuthenticationMethodsOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaUserConfigKafkaAuthenticationMethodsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaUserConfigKafkaAuthenticationMethods)(nil)).Elem()
}

func (o GetServiceKafkaUserConfigKafkaAuthenticationMethodsOutput) ToGetServiceKafkaUserConfigKafkaAuthenticationMethodsOutput() GetServiceKafkaUserConfigKafkaAuthenticationMethodsOutput {
	return o
}

func (o GetServiceKafkaUserConfigKafkaAuthenticationMethodsOutput) ToGetServiceKafkaUserConfigKafkaAuthenticationMethodsOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigKafkaAuthenticationMethodsOutput {
	return o
}

func (o GetServiceKafkaUserConfigKafkaAuthenticationMethodsOutput) ToGetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput() GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return o.ToGetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(context.Background())
}

func (o GetServiceKafkaUserConfigKafkaAuthenticationMethodsOutput) ToGetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafkaAuthenticationMethods) *GetServiceKafkaUserConfigKafkaAuthenticationMethods {
		return &v
	}).(GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput)
}
func (o GetServiceKafkaUserConfigKafkaAuthenticationMethodsOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafkaAuthenticationMethods) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaAuthenticationMethodsOutput) Sasl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafkaAuthenticationMethods) *string { return v.Sasl }).(pulumi.StringPtrOutput)
}

type GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceKafkaUserConfigKafkaAuthenticationMethods)(nil)).Elem()
}

func (o GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput) ToGetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput() GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return o
}

func (o GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput) ToGetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput {
	return o
}

func (o GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput) Elem() GetServiceKafkaUserConfigKafkaAuthenticationMethodsOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafkaAuthenticationMethods) GetServiceKafkaUserConfigKafkaAuthenticationMethods {
		return *v
	}).(GetServiceKafkaUserConfigKafkaAuthenticationMethodsOutput)
}

func (o GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafkaAuthenticationMethods) *string {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput) Sasl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafkaAuthenticationMethods) *string {
		if v == nil {
			return nil
		}
		return v.Sasl
	}).(pulumi.StringPtrOutput)
}

type GetServiceKafkaUserConfigKafkaConnectConfig struct {
	ConnectorClientConfigOverridePolicy *string `pulumi:"connectorClientConfigOverridePolicy"`
	ConsumerAutoOffsetReset             *string `pulumi:"consumerAutoOffsetReset"`
	ConsumerFetchMaxBytes               *string `pulumi:"consumerFetchMaxBytes"`
	ConsumerIsolationLevel              *string `pulumi:"consumerIsolationLevel"`
	ConsumerMaxPartitionFetchBytes      *string `pulumi:"consumerMaxPartitionFetchBytes"`
	ConsumerMaxPollIntervalMs           *string `pulumi:"consumerMaxPollIntervalMs"`
	ConsumerMaxPollRecords              *string `pulumi:"consumerMaxPollRecords"`
	OffsetFlushIntervalMs               *string `pulumi:"offsetFlushIntervalMs"`
	OffsetFlushTimeoutMs                *string `pulumi:"offsetFlushTimeoutMs"`
	ProducerMaxRequestSize              *string `pulumi:"producerMaxRequestSize"`
	SessionTimeoutMs                    *string `pulumi:"sessionTimeoutMs"`
}

// GetServiceKafkaUserConfigKafkaConnectConfigInput is an input type that accepts GetServiceKafkaUserConfigKafkaConnectConfigArgs and GetServiceKafkaUserConfigKafkaConnectConfigOutput values.
// You can construct a concrete instance of `GetServiceKafkaUserConfigKafkaConnectConfigInput` via:
//
//          GetServiceKafkaUserConfigKafkaConnectConfigArgs{...}
type GetServiceKafkaUserConfigKafkaConnectConfigInput interface {
	pulumi.Input

	ToGetServiceKafkaUserConfigKafkaConnectConfigOutput() GetServiceKafkaUserConfigKafkaConnectConfigOutput
	ToGetServiceKafkaUserConfigKafkaConnectConfigOutputWithContext(context.Context) GetServiceKafkaUserConfigKafkaConnectConfigOutput
}

type GetServiceKafkaUserConfigKafkaConnectConfigArgs struct {
	ConnectorClientConfigOverridePolicy pulumi.StringPtrInput `pulumi:"connectorClientConfigOverridePolicy"`
	ConsumerAutoOffsetReset             pulumi.StringPtrInput `pulumi:"consumerAutoOffsetReset"`
	ConsumerFetchMaxBytes               pulumi.StringPtrInput `pulumi:"consumerFetchMaxBytes"`
	ConsumerIsolationLevel              pulumi.StringPtrInput `pulumi:"consumerIsolationLevel"`
	ConsumerMaxPartitionFetchBytes      pulumi.StringPtrInput `pulumi:"consumerMaxPartitionFetchBytes"`
	ConsumerMaxPollIntervalMs           pulumi.StringPtrInput `pulumi:"consumerMaxPollIntervalMs"`
	ConsumerMaxPollRecords              pulumi.StringPtrInput `pulumi:"consumerMaxPollRecords"`
	OffsetFlushIntervalMs               pulumi.StringPtrInput `pulumi:"offsetFlushIntervalMs"`
	OffsetFlushTimeoutMs                pulumi.StringPtrInput `pulumi:"offsetFlushTimeoutMs"`
	ProducerMaxRequestSize              pulumi.StringPtrInput `pulumi:"producerMaxRequestSize"`
	SessionTimeoutMs                    pulumi.StringPtrInput `pulumi:"sessionTimeoutMs"`
}

func (GetServiceKafkaUserConfigKafkaConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaUserConfigKafkaConnectConfig)(nil)).Elem()
}

func (i GetServiceKafkaUserConfigKafkaConnectConfigArgs) ToGetServiceKafkaUserConfigKafkaConnectConfigOutput() GetServiceKafkaUserConfigKafkaConnectConfigOutput {
	return i.ToGetServiceKafkaUserConfigKafkaConnectConfigOutputWithContext(context.Background())
}

func (i GetServiceKafkaUserConfigKafkaConnectConfigArgs) ToGetServiceKafkaUserConfigKafkaConnectConfigOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigKafkaConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaUserConfigKafkaConnectConfigOutput)
}

func (i GetServiceKafkaUserConfigKafkaConnectConfigArgs) ToGetServiceKafkaUserConfigKafkaConnectConfigPtrOutput() GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput {
	return i.ToGetServiceKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(context.Background())
}

func (i GetServiceKafkaUserConfigKafkaConnectConfigArgs) ToGetServiceKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaUserConfigKafkaConnectConfigOutput).ToGetServiceKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(ctx)
}

// GetServiceKafkaUserConfigKafkaConnectConfigPtrInput is an input type that accepts GetServiceKafkaUserConfigKafkaConnectConfigArgs, GetServiceKafkaUserConfigKafkaConnectConfigPtr and GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput values.
// You can construct a concrete instance of `GetServiceKafkaUserConfigKafkaConnectConfigPtrInput` via:
//
//          GetServiceKafkaUserConfigKafkaConnectConfigArgs{...}
//
//  or:
//
//          nil
type GetServiceKafkaUserConfigKafkaConnectConfigPtrInput interface {
	pulumi.Input

	ToGetServiceKafkaUserConfigKafkaConnectConfigPtrOutput() GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput
	ToGetServiceKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(context.Context) GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput
}

type getServiceKafkaUserConfigKafkaConnectConfigPtrType GetServiceKafkaUserConfigKafkaConnectConfigArgs

func GetServiceKafkaUserConfigKafkaConnectConfigPtr(v *GetServiceKafkaUserConfigKafkaConnectConfigArgs) GetServiceKafkaUserConfigKafkaConnectConfigPtrInput {
	return (*getServiceKafkaUserConfigKafkaConnectConfigPtrType)(v)
}

func (*getServiceKafkaUserConfigKafkaConnectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceKafkaUserConfigKafkaConnectConfig)(nil)).Elem()
}

func (i *getServiceKafkaUserConfigKafkaConnectConfigPtrType) ToGetServiceKafkaUserConfigKafkaConnectConfigPtrOutput() GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput {
	return i.ToGetServiceKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(context.Background())
}

func (i *getServiceKafkaUserConfigKafkaConnectConfigPtrType) ToGetServiceKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput)
}

type GetServiceKafkaUserConfigKafkaConnectConfigOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaUserConfigKafkaConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaUserConfigKafkaConnectConfig)(nil)).Elem()
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigOutput) ToGetServiceKafkaUserConfigKafkaConnectConfigOutput() GetServiceKafkaUserConfigKafkaConnectConfigOutput {
	return o
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigOutput) ToGetServiceKafkaUserConfigKafkaConnectConfigOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigKafkaConnectConfigOutput {
	return o
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigOutput) ToGetServiceKafkaUserConfigKafkaConnectConfigPtrOutput() GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput {
	return o.ToGetServiceKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(context.Background())
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigOutput) ToGetServiceKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafkaConnectConfig) *GetServiceKafkaUserConfigKafkaConnectConfig {
		return &v
	}).(GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput)
}
func (o GetServiceKafkaUserConfigKafkaConnectConfigOutput) ConnectorClientConfigOverridePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafkaConnectConfig) *string {
		return v.ConnectorClientConfigOverridePolicy
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigOutput) ConsumerAutoOffsetReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafkaConnectConfig) *string { return v.ConsumerAutoOffsetReset }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigOutput) ConsumerFetchMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafkaConnectConfig) *string { return v.ConsumerFetchMaxBytes }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigOutput) ConsumerIsolationLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafkaConnectConfig) *string { return v.ConsumerIsolationLevel }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigOutput) ConsumerMaxPartitionFetchBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafkaConnectConfig) *string { return v.ConsumerMaxPartitionFetchBytes }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigOutput) ConsumerMaxPollIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafkaConnectConfig) *string { return v.ConsumerMaxPollIntervalMs }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigOutput) ConsumerMaxPollRecords() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafkaConnectConfig) *string { return v.ConsumerMaxPollRecords }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigOutput) OffsetFlushIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafkaConnectConfig) *string { return v.OffsetFlushIntervalMs }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigOutput) OffsetFlushTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafkaConnectConfig) *string { return v.OffsetFlushTimeoutMs }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigOutput) ProducerMaxRequestSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafkaConnectConfig) *string { return v.ProducerMaxRequestSize }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigOutput) SessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafkaConnectConfig) *string { return v.SessionTimeoutMs }).(pulumi.StringPtrOutput)
}

type GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceKafkaUserConfigKafkaConnectConfig)(nil)).Elem()
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput) ToGetServiceKafkaUserConfigKafkaConnectConfigPtrOutput() GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput {
	return o
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput) ToGetServiceKafkaUserConfigKafkaConnectConfigPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput {
	return o
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput) Elem() GetServiceKafkaUserConfigKafkaConnectConfigOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafkaConnectConfig) GetServiceKafkaUserConfigKafkaConnectConfig {
		return *v
	}).(GetServiceKafkaUserConfigKafkaConnectConfigOutput)
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput) ConnectorClientConfigOverridePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorClientConfigOverridePolicy
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput) ConsumerAutoOffsetReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerAutoOffsetReset
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput) ConsumerFetchMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerFetchMaxBytes
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput) ConsumerIsolationLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerIsolationLevel
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput) ConsumerMaxPartitionFetchBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerMaxPartitionFetchBytes
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput) ConsumerMaxPollIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerMaxPollIntervalMs
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput) ConsumerMaxPollRecords() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerMaxPollRecords
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput) OffsetFlushIntervalMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.OffsetFlushIntervalMs
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput) OffsetFlushTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.OffsetFlushTimeoutMs
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput) ProducerMaxRequestSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProducerMaxRequestSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput) SessionTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafkaConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.SessionTimeoutMs
	}).(pulumi.StringPtrOutput)
}

type GetServiceKafkaUserConfigKafkaRestConfig struct {
	ConsumerEnableAutoCommit  *string `pulumi:"consumerEnableAutoCommit"`
	ConsumerRequestMaxBytes   *string `pulumi:"consumerRequestMaxBytes"`
	ConsumerRequestTimeoutMs  *string `pulumi:"consumerRequestTimeoutMs"`
	ProducerAcks              *string `pulumi:"producerAcks"`
	ProducerLingerMs          *string `pulumi:"producerLingerMs"`
	SimpleconsumerPoolSizeMax *string `pulumi:"simpleconsumerPoolSizeMax"`
}

// GetServiceKafkaUserConfigKafkaRestConfigInput is an input type that accepts GetServiceKafkaUserConfigKafkaRestConfigArgs and GetServiceKafkaUserConfigKafkaRestConfigOutput values.
// You can construct a concrete instance of `GetServiceKafkaUserConfigKafkaRestConfigInput` via:
//
//          GetServiceKafkaUserConfigKafkaRestConfigArgs{...}
type GetServiceKafkaUserConfigKafkaRestConfigInput interface {
	pulumi.Input

	ToGetServiceKafkaUserConfigKafkaRestConfigOutput() GetServiceKafkaUserConfigKafkaRestConfigOutput
	ToGetServiceKafkaUserConfigKafkaRestConfigOutputWithContext(context.Context) GetServiceKafkaUserConfigKafkaRestConfigOutput
}

type GetServiceKafkaUserConfigKafkaRestConfigArgs struct {
	ConsumerEnableAutoCommit  pulumi.StringPtrInput `pulumi:"consumerEnableAutoCommit"`
	ConsumerRequestMaxBytes   pulumi.StringPtrInput `pulumi:"consumerRequestMaxBytes"`
	ConsumerRequestTimeoutMs  pulumi.StringPtrInput `pulumi:"consumerRequestTimeoutMs"`
	ProducerAcks              pulumi.StringPtrInput `pulumi:"producerAcks"`
	ProducerLingerMs          pulumi.StringPtrInput `pulumi:"producerLingerMs"`
	SimpleconsumerPoolSizeMax pulumi.StringPtrInput `pulumi:"simpleconsumerPoolSizeMax"`
}

func (GetServiceKafkaUserConfigKafkaRestConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaUserConfigKafkaRestConfig)(nil)).Elem()
}

func (i GetServiceKafkaUserConfigKafkaRestConfigArgs) ToGetServiceKafkaUserConfigKafkaRestConfigOutput() GetServiceKafkaUserConfigKafkaRestConfigOutput {
	return i.ToGetServiceKafkaUserConfigKafkaRestConfigOutputWithContext(context.Background())
}

func (i GetServiceKafkaUserConfigKafkaRestConfigArgs) ToGetServiceKafkaUserConfigKafkaRestConfigOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigKafkaRestConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaUserConfigKafkaRestConfigOutput)
}

func (i GetServiceKafkaUserConfigKafkaRestConfigArgs) ToGetServiceKafkaUserConfigKafkaRestConfigPtrOutput() GetServiceKafkaUserConfigKafkaRestConfigPtrOutput {
	return i.ToGetServiceKafkaUserConfigKafkaRestConfigPtrOutputWithContext(context.Background())
}

func (i GetServiceKafkaUserConfigKafkaRestConfigArgs) ToGetServiceKafkaUserConfigKafkaRestConfigPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigKafkaRestConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaUserConfigKafkaRestConfigOutput).ToGetServiceKafkaUserConfigKafkaRestConfigPtrOutputWithContext(ctx)
}

// GetServiceKafkaUserConfigKafkaRestConfigPtrInput is an input type that accepts GetServiceKafkaUserConfigKafkaRestConfigArgs, GetServiceKafkaUserConfigKafkaRestConfigPtr and GetServiceKafkaUserConfigKafkaRestConfigPtrOutput values.
// You can construct a concrete instance of `GetServiceKafkaUserConfigKafkaRestConfigPtrInput` via:
//
//          GetServiceKafkaUserConfigKafkaRestConfigArgs{...}
//
//  or:
//
//          nil
type GetServiceKafkaUserConfigKafkaRestConfigPtrInput interface {
	pulumi.Input

	ToGetServiceKafkaUserConfigKafkaRestConfigPtrOutput() GetServiceKafkaUserConfigKafkaRestConfigPtrOutput
	ToGetServiceKafkaUserConfigKafkaRestConfigPtrOutputWithContext(context.Context) GetServiceKafkaUserConfigKafkaRestConfigPtrOutput
}

type getServiceKafkaUserConfigKafkaRestConfigPtrType GetServiceKafkaUserConfigKafkaRestConfigArgs

func GetServiceKafkaUserConfigKafkaRestConfigPtr(v *GetServiceKafkaUserConfigKafkaRestConfigArgs) GetServiceKafkaUserConfigKafkaRestConfigPtrInput {
	return (*getServiceKafkaUserConfigKafkaRestConfigPtrType)(v)
}

func (*getServiceKafkaUserConfigKafkaRestConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceKafkaUserConfigKafkaRestConfig)(nil)).Elem()
}

func (i *getServiceKafkaUserConfigKafkaRestConfigPtrType) ToGetServiceKafkaUserConfigKafkaRestConfigPtrOutput() GetServiceKafkaUserConfigKafkaRestConfigPtrOutput {
	return i.ToGetServiceKafkaUserConfigKafkaRestConfigPtrOutputWithContext(context.Background())
}

func (i *getServiceKafkaUserConfigKafkaRestConfigPtrType) ToGetServiceKafkaUserConfigKafkaRestConfigPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigKafkaRestConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaUserConfigKafkaRestConfigPtrOutput)
}

type GetServiceKafkaUserConfigKafkaRestConfigOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaUserConfigKafkaRestConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaUserConfigKafkaRestConfig)(nil)).Elem()
}

func (o GetServiceKafkaUserConfigKafkaRestConfigOutput) ToGetServiceKafkaUserConfigKafkaRestConfigOutput() GetServiceKafkaUserConfigKafkaRestConfigOutput {
	return o
}

func (o GetServiceKafkaUserConfigKafkaRestConfigOutput) ToGetServiceKafkaUserConfigKafkaRestConfigOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigKafkaRestConfigOutput {
	return o
}

func (o GetServiceKafkaUserConfigKafkaRestConfigOutput) ToGetServiceKafkaUserConfigKafkaRestConfigPtrOutput() GetServiceKafkaUserConfigKafkaRestConfigPtrOutput {
	return o.ToGetServiceKafkaUserConfigKafkaRestConfigPtrOutputWithContext(context.Background())
}

func (o GetServiceKafkaUserConfigKafkaRestConfigOutput) ToGetServiceKafkaUserConfigKafkaRestConfigPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigKafkaRestConfigPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafkaRestConfig) *GetServiceKafkaUserConfigKafkaRestConfig {
		return &v
	}).(GetServiceKafkaUserConfigKafkaRestConfigPtrOutput)
}
func (o GetServiceKafkaUserConfigKafkaRestConfigOutput) ConsumerEnableAutoCommit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafkaRestConfig) *string { return v.ConsumerEnableAutoCommit }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaRestConfigOutput) ConsumerRequestMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafkaRestConfig) *string { return v.ConsumerRequestMaxBytes }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaRestConfigOutput) ConsumerRequestTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafkaRestConfig) *string { return v.ConsumerRequestTimeoutMs }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaRestConfigOutput) ProducerAcks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafkaRestConfig) *string { return v.ProducerAcks }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaRestConfigOutput) ProducerLingerMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafkaRestConfig) *string { return v.ProducerLingerMs }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaRestConfigOutput) SimpleconsumerPoolSizeMax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigKafkaRestConfig) *string { return v.SimpleconsumerPoolSizeMax }).(pulumi.StringPtrOutput)
}

type GetServiceKafkaUserConfigKafkaRestConfigPtrOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaUserConfigKafkaRestConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceKafkaUserConfigKafkaRestConfig)(nil)).Elem()
}

func (o GetServiceKafkaUserConfigKafkaRestConfigPtrOutput) ToGetServiceKafkaUserConfigKafkaRestConfigPtrOutput() GetServiceKafkaUserConfigKafkaRestConfigPtrOutput {
	return o
}

func (o GetServiceKafkaUserConfigKafkaRestConfigPtrOutput) ToGetServiceKafkaUserConfigKafkaRestConfigPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigKafkaRestConfigPtrOutput {
	return o
}

func (o GetServiceKafkaUserConfigKafkaRestConfigPtrOutput) Elem() GetServiceKafkaUserConfigKafkaRestConfigOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafkaRestConfig) GetServiceKafkaUserConfigKafkaRestConfig { return *v }).(GetServiceKafkaUserConfigKafkaRestConfigOutput)
}

func (o GetServiceKafkaUserConfigKafkaRestConfigPtrOutput) ConsumerEnableAutoCommit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafkaRestConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerEnableAutoCommit
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaRestConfigPtrOutput) ConsumerRequestMaxBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafkaRestConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerRequestMaxBytes
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaRestConfigPtrOutput) ConsumerRequestTimeoutMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafkaRestConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerRequestTimeoutMs
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaRestConfigPtrOutput) ProducerAcks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafkaRestConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProducerAcks
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaRestConfigPtrOutput) ProducerLingerMs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafkaRestConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProducerLingerMs
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigKafkaRestConfigPtrOutput) SimpleconsumerPoolSizeMax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigKafkaRestConfig) *string {
		if v == nil {
			return nil
		}
		return v.SimpleconsumerPoolSizeMax
	}).(pulumi.StringPtrOutput)
}

type GetServiceKafkaUserConfigPrivateAccess struct {
	Prometheus *string `pulumi:"prometheus"`
}

// GetServiceKafkaUserConfigPrivateAccessInput is an input type that accepts GetServiceKafkaUserConfigPrivateAccessArgs and GetServiceKafkaUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `GetServiceKafkaUserConfigPrivateAccessInput` via:
//
//          GetServiceKafkaUserConfigPrivateAccessArgs{...}
type GetServiceKafkaUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToGetServiceKafkaUserConfigPrivateAccessOutput() GetServiceKafkaUserConfigPrivateAccessOutput
	ToGetServiceKafkaUserConfigPrivateAccessOutputWithContext(context.Context) GetServiceKafkaUserConfigPrivateAccessOutput
}

type GetServiceKafkaUserConfigPrivateAccessArgs struct {
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (GetServiceKafkaUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaUserConfigPrivateAccess)(nil)).Elem()
}

func (i GetServiceKafkaUserConfigPrivateAccessArgs) ToGetServiceKafkaUserConfigPrivateAccessOutput() GetServiceKafkaUserConfigPrivateAccessOutput {
	return i.ToGetServiceKafkaUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i GetServiceKafkaUserConfigPrivateAccessArgs) ToGetServiceKafkaUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaUserConfigPrivateAccessOutput)
}

func (i GetServiceKafkaUserConfigPrivateAccessArgs) ToGetServiceKafkaUserConfigPrivateAccessPtrOutput() GetServiceKafkaUserConfigPrivateAccessPtrOutput {
	return i.ToGetServiceKafkaUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i GetServiceKafkaUserConfigPrivateAccessArgs) ToGetServiceKafkaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaUserConfigPrivateAccessOutput).ToGetServiceKafkaUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// GetServiceKafkaUserConfigPrivateAccessPtrInput is an input type that accepts GetServiceKafkaUserConfigPrivateAccessArgs, GetServiceKafkaUserConfigPrivateAccessPtr and GetServiceKafkaUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `GetServiceKafkaUserConfigPrivateAccessPtrInput` via:
//
//          GetServiceKafkaUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type GetServiceKafkaUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToGetServiceKafkaUserConfigPrivateAccessPtrOutput() GetServiceKafkaUserConfigPrivateAccessPtrOutput
	ToGetServiceKafkaUserConfigPrivateAccessPtrOutputWithContext(context.Context) GetServiceKafkaUserConfigPrivateAccessPtrOutput
}

type getServiceKafkaUserConfigPrivateAccessPtrType GetServiceKafkaUserConfigPrivateAccessArgs

func GetServiceKafkaUserConfigPrivateAccessPtr(v *GetServiceKafkaUserConfigPrivateAccessArgs) GetServiceKafkaUserConfigPrivateAccessPtrInput {
	return (*getServiceKafkaUserConfigPrivateAccessPtrType)(v)
}

func (*getServiceKafkaUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceKafkaUserConfigPrivateAccess)(nil)).Elem()
}

func (i *getServiceKafkaUserConfigPrivateAccessPtrType) ToGetServiceKafkaUserConfigPrivateAccessPtrOutput() GetServiceKafkaUserConfigPrivateAccessPtrOutput {
	return i.ToGetServiceKafkaUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *getServiceKafkaUserConfigPrivateAccessPtrType) ToGetServiceKafkaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaUserConfigPrivateAccessPtrOutput)
}

type GetServiceKafkaUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetServiceKafkaUserConfigPrivateAccessOutput) ToGetServiceKafkaUserConfigPrivateAccessOutput() GetServiceKafkaUserConfigPrivateAccessOutput {
	return o
}

func (o GetServiceKafkaUserConfigPrivateAccessOutput) ToGetServiceKafkaUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigPrivateAccessOutput {
	return o
}

func (o GetServiceKafkaUserConfigPrivateAccessOutput) ToGetServiceKafkaUserConfigPrivateAccessPtrOutput() GetServiceKafkaUserConfigPrivateAccessPtrOutput {
	return o.ToGetServiceKafkaUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o GetServiceKafkaUserConfigPrivateAccessOutput) ToGetServiceKafkaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigPrivateAccess) *GetServiceKafkaUserConfigPrivateAccess {
		return &v
	}).(GetServiceKafkaUserConfigPrivateAccessPtrOutput)
}
func (o GetServiceKafkaUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type GetServiceKafkaUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceKafkaUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetServiceKafkaUserConfigPrivateAccessPtrOutput) ToGetServiceKafkaUserConfigPrivateAccessPtrOutput() GetServiceKafkaUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetServiceKafkaUserConfigPrivateAccessPtrOutput) ToGetServiceKafkaUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetServiceKafkaUserConfigPrivateAccessPtrOutput) Elem() GetServiceKafkaUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigPrivateAccess) GetServiceKafkaUserConfigPrivateAccess { return *v }).(GetServiceKafkaUserConfigPrivateAccessOutput)
}

func (o GetServiceKafkaUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type GetServiceKafkaUserConfigPrivatelinkAccess struct {
	Kafka          *string `pulumi:"kafka"`
	KafkaConnect   *string `pulumi:"kafkaConnect"`
	KafkaRest      *string `pulumi:"kafkaRest"`
	SchemaRegistry *string `pulumi:"schemaRegistry"`
}

// GetServiceKafkaUserConfigPrivatelinkAccessInput is an input type that accepts GetServiceKafkaUserConfigPrivatelinkAccessArgs and GetServiceKafkaUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `GetServiceKafkaUserConfigPrivatelinkAccessInput` via:
//
//          GetServiceKafkaUserConfigPrivatelinkAccessArgs{...}
type GetServiceKafkaUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToGetServiceKafkaUserConfigPrivatelinkAccessOutput() GetServiceKafkaUserConfigPrivatelinkAccessOutput
	ToGetServiceKafkaUserConfigPrivatelinkAccessOutputWithContext(context.Context) GetServiceKafkaUserConfigPrivatelinkAccessOutput
}

type GetServiceKafkaUserConfigPrivatelinkAccessArgs struct {
	Kafka          pulumi.StringPtrInput `pulumi:"kafka"`
	KafkaConnect   pulumi.StringPtrInput `pulumi:"kafkaConnect"`
	KafkaRest      pulumi.StringPtrInput `pulumi:"kafkaRest"`
	SchemaRegistry pulumi.StringPtrInput `pulumi:"schemaRegistry"`
}

func (GetServiceKafkaUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i GetServiceKafkaUserConfigPrivatelinkAccessArgs) ToGetServiceKafkaUserConfigPrivatelinkAccessOutput() GetServiceKafkaUserConfigPrivatelinkAccessOutput {
	return i.ToGetServiceKafkaUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i GetServiceKafkaUserConfigPrivatelinkAccessArgs) ToGetServiceKafkaUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaUserConfigPrivatelinkAccessOutput)
}

func (i GetServiceKafkaUserConfigPrivatelinkAccessArgs) ToGetServiceKafkaUserConfigPrivatelinkAccessPtrOutput() GetServiceKafkaUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetServiceKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i GetServiceKafkaUserConfigPrivatelinkAccessArgs) ToGetServiceKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaUserConfigPrivatelinkAccessOutput).ToGetServiceKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// GetServiceKafkaUserConfigPrivatelinkAccessPtrInput is an input type that accepts GetServiceKafkaUserConfigPrivatelinkAccessArgs, GetServiceKafkaUserConfigPrivatelinkAccessPtr and GetServiceKafkaUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `GetServiceKafkaUserConfigPrivatelinkAccessPtrInput` via:
//
//          GetServiceKafkaUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type GetServiceKafkaUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToGetServiceKafkaUserConfigPrivatelinkAccessPtrOutput() GetServiceKafkaUserConfigPrivatelinkAccessPtrOutput
	ToGetServiceKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) GetServiceKafkaUserConfigPrivatelinkAccessPtrOutput
}

type getServiceKafkaUserConfigPrivatelinkAccessPtrType GetServiceKafkaUserConfigPrivatelinkAccessArgs

func GetServiceKafkaUserConfigPrivatelinkAccessPtr(v *GetServiceKafkaUserConfigPrivatelinkAccessArgs) GetServiceKafkaUserConfigPrivatelinkAccessPtrInput {
	return (*getServiceKafkaUserConfigPrivatelinkAccessPtrType)(v)
}

func (*getServiceKafkaUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceKafkaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *getServiceKafkaUserConfigPrivatelinkAccessPtrType) ToGetServiceKafkaUserConfigPrivatelinkAccessPtrOutput() GetServiceKafkaUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetServiceKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *getServiceKafkaUserConfigPrivatelinkAccessPtrType) ToGetServiceKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaUserConfigPrivatelinkAccessPtrOutput)
}

type GetServiceKafkaUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetServiceKafkaUserConfigPrivatelinkAccessOutput) ToGetServiceKafkaUserConfigPrivatelinkAccessOutput() GetServiceKafkaUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetServiceKafkaUserConfigPrivatelinkAccessOutput) ToGetServiceKafkaUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetServiceKafkaUserConfigPrivatelinkAccessOutput) ToGetServiceKafkaUserConfigPrivatelinkAccessPtrOutput() GetServiceKafkaUserConfigPrivatelinkAccessPtrOutput {
	return o.ToGetServiceKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o GetServiceKafkaUserConfigPrivatelinkAccessOutput) ToGetServiceKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigPrivatelinkAccess) *GetServiceKafkaUserConfigPrivatelinkAccess {
		return &v
	}).(GetServiceKafkaUserConfigPrivatelinkAccessPtrOutput)
}
func (o GetServiceKafkaUserConfigPrivatelinkAccessOutput) Kafka() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigPrivatelinkAccess) *string { return v.Kafka }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigPrivatelinkAccessOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigPrivatelinkAccess) *string { return v.KafkaConnect }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigPrivatelinkAccessOutput) KafkaRest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigPrivatelinkAccess) *string { return v.KafkaRest }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigPrivatelinkAccessOutput) SchemaRegistry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigPrivatelinkAccess) *string { return v.SchemaRegistry }).(pulumi.StringPtrOutput)
}

type GetServiceKafkaUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceKafkaUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetServiceKafkaUserConfigPrivatelinkAccessPtrOutput) ToGetServiceKafkaUserConfigPrivatelinkAccessPtrOutput() GetServiceKafkaUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetServiceKafkaUserConfigPrivatelinkAccessPtrOutput) ToGetServiceKafkaUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetServiceKafkaUserConfigPrivatelinkAccessPtrOutput) Elem() GetServiceKafkaUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigPrivatelinkAccess) GetServiceKafkaUserConfigPrivatelinkAccess {
		return *v
	}).(GetServiceKafkaUserConfigPrivatelinkAccessOutput)
}

func (o GetServiceKafkaUserConfigPrivatelinkAccessPtrOutput) Kafka() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Kafka
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigPrivatelinkAccessPtrOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaConnect
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigPrivatelinkAccessPtrOutput) KafkaRest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaRest
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigPrivatelinkAccessPtrOutput) SchemaRegistry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.SchemaRegistry
	}).(pulumi.StringPtrOutput)
}

type GetServiceKafkaUserConfigPublicAccess struct {
	Kafka          *string `pulumi:"kafka"`
	KafkaConnect   *string `pulumi:"kafkaConnect"`
	KafkaRest      *string `pulumi:"kafkaRest"`
	Prometheus     *string `pulumi:"prometheus"`
	SchemaRegistry *string `pulumi:"schemaRegistry"`
}

// GetServiceKafkaUserConfigPublicAccessInput is an input type that accepts GetServiceKafkaUserConfigPublicAccessArgs and GetServiceKafkaUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `GetServiceKafkaUserConfigPublicAccessInput` via:
//
//          GetServiceKafkaUserConfigPublicAccessArgs{...}
type GetServiceKafkaUserConfigPublicAccessInput interface {
	pulumi.Input

	ToGetServiceKafkaUserConfigPublicAccessOutput() GetServiceKafkaUserConfigPublicAccessOutput
	ToGetServiceKafkaUserConfigPublicAccessOutputWithContext(context.Context) GetServiceKafkaUserConfigPublicAccessOutput
}

type GetServiceKafkaUserConfigPublicAccessArgs struct {
	Kafka          pulumi.StringPtrInput `pulumi:"kafka"`
	KafkaConnect   pulumi.StringPtrInput `pulumi:"kafkaConnect"`
	KafkaRest      pulumi.StringPtrInput `pulumi:"kafkaRest"`
	Prometheus     pulumi.StringPtrInput `pulumi:"prometheus"`
	SchemaRegistry pulumi.StringPtrInput `pulumi:"schemaRegistry"`
}

func (GetServiceKafkaUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaUserConfigPublicAccess)(nil)).Elem()
}

func (i GetServiceKafkaUserConfigPublicAccessArgs) ToGetServiceKafkaUserConfigPublicAccessOutput() GetServiceKafkaUserConfigPublicAccessOutput {
	return i.ToGetServiceKafkaUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i GetServiceKafkaUserConfigPublicAccessArgs) ToGetServiceKafkaUserConfigPublicAccessOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaUserConfigPublicAccessOutput)
}

func (i GetServiceKafkaUserConfigPublicAccessArgs) ToGetServiceKafkaUserConfigPublicAccessPtrOutput() GetServiceKafkaUserConfigPublicAccessPtrOutput {
	return i.ToGetServiceKafkaUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i GetServiceKafkaUserConfigPublicAccessArgs) ToGetServiceKafkaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaUserConfigPublicAccessOutput).ToGetServiceKafkaUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// GetServiceKafkaUserConfigPublicAccessPtrInput is an input type that accepts GetServiceKafkaUserConfigPublicAccessArgs, GetServiceKafkaUserConfigPublicAccessPtr and GetServiceKafkaUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `GetServiceKafkaUserConfigPublicAccessPtrInput` via:
//
//          GetServiceKafkaUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type GetServiceKafkaUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToGetServiceKafkaUserConfigPublicAccessPtrOutput() GetServiceKafkaUserConfigPublicAccessPtrOutput
	ToGetServiceKafkaUserConfigPublicAccessPtrOutputWithContext(context.Context) GetServiceKafkaUserConfigPublicAccessPtrOutput
}

type getServiceKafkaUserConfigPublicAccessPtrType GetServiceKafkaUserConfigPublicAccessArgs

func GetServiceKafkaUserConfigPublicAccessPtr(v *GetServiceKafkaUserConfigPublicAccessArgs) GetServiceKafkaUserConfigPublicAccessPtrInput {
	return (*getServiceKafkaUserConfigPublicAccessPtrType)(v)
}

func (*getServiceKafkaUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceKafkaUserConfigPublicAccess)(nil)).Elem()
}

func (i *getServiceKafkaUserConfigPublicAccessPtrType) ToGetServiceKafkaUserConfigPublicAccessPtrOutput() GetServiceKafkaUserConfigPublicAccessPtrOutput {
	return i.ToGetServiceKafkaUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *getServiceKafkaUserConfigPublicAccessPtrType) ToGetServiceKafkaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaUserConfigPublicAccessPtrOutput)
}

type GetServiceKafkaUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaUserConfigPublicAccess)(nil)).Elem()
}

func (o GetServiceKafkaUserConfigPublicAccessOutput) ToGetServiceKafkaUserConfigPublicAccessOutput() GetServiceKafkaUserConfigPublicAccessOutput {
	return o
}

func (o GetServiceKafkaUserConfigPublicAccessOutput) ToGetServiceKafkaUserConfigPublicAccessOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigPublicAccessOutput {
	return o
}

func (o GetServiceKafkaUserConfigPublicAccessOutput) ToGetServiceKafkaUserConfigPublicAccessPtrOutput() GetServiceKafkaUserConfigPublicAccessPtrOutput {
	return o.ToGetServiceKafkaUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o GetServiceKafkaUserConfigPublicAccessOutput) ToGetServiceKafkaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigPublicAccess) *GetServiceKafkaUserConfigPublicAccess {
		return &v
	}).(GetServiceKafkaUserConfigPublicAccessPtrOutput)
}
func (o GetServiceKafkaUserConfigPublicAccessOutput) Kafka() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigPublicAccess) *string { return v.Kafka }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigPublicAccessOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigPublicAccess) *string { return v.KafkaConnect }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigPublicAccessOutput) KafkaRest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigPublicAccess) *string { return v.KafkaRest }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigPublicAccessOutput) SchemaRegistry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigPublicAccess) *string { return v.SchemaRegistry }).(pulumi.StringPtrOutput)
}

type GetServiceKafkaUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceKafkaUserConfigPublicAccess)(nil)).Elem()
}

func (o GetServiceKafkaUserConfigPublicAccessPtrOutput) ToGetServiceKafkaUserConfigPublicAccessPtrOutput() GetServiceKafkaUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetServiceKafkaUserConfigPublicAccessPtrOutput) ToGetServiceKafkaUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetServiceKafkaUserConfigPublicAccessPtrOutput) Elem() GetServiceKafkaUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigPublicAccess) GetServiceKafkaUserConfigPublicAccess { return *v }).(GetServiceKafkaUserConfigPublicAccessOutput)
}

func (o GetServiceKafkaUserConfigPublicAccessPtrOutput) Kafka() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Kafka
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigPublicAccessPtrOutput) KafkaConnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaConnect
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigPublicAccessPtrOutput) KafkaRest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.KafkaRest
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigPublicAccessPtrOutput) SchemaRegistry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.SchemaRegistry
	}).(pulumi.StringPtrOutput)
}

type GetServiceKafkaUserConfigSchemaRegistryConfig struct {
	LeaderEligibility *string `pulumi:"leaderEligibility"`
	TopicName         *string `pulumi:"topicName"`
}

// GetServiceKafkaUserConfigSchemaRegistryConfigInput is an input type that accepts GetServiceKafkaUserConfigSchemaRegistryConfigArgs and GetServiceKafkaUserConfigSchemaRegistryConfigOutput values.
// You can construct a concrete instance of `GetServiceKafkaUserConfigSchemaRegistryConfigInput` via:
//
//          GetServiceKafkaUserConfigSchemaRegistryConfigArgs{...}
type GetServiceKafkaUserConfigSchemaRegistryConfigInput interface {
	pulumi.Input

	ToGetServiceKafkaUserConfigSchemaRegistryConfigOutput() GetServiceKafkaUserConfigSchemaRegistryConfigOutput
	ToGetServiceKafkaUserConfigSchemaRegistryConfigOutputWithContext(context.Context) GetServiceKafkaUserConfigSchemaRegistryConfigOutput
}

type GetServiceKafkaUserConfigSchemaRegistryConfigArgs struct {
	LeaderEligibility pulumi.StringPtrInput `pulumi:"leaderEligibility"`
	TopicName         pulumi.StringPtrInput `pulumi:"topicName"`
}

func (GetServiceKafkaUserConfigSchemaRegistryConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaUserConfigSchemaRegistryConfig)(nil)).Elem()
}

func (i GetServiceKafkaUserConfigSchemaRegistryConfigArgs) ToGetServiceKafkaUserConfigSchemaRegistryConfigOutput() GetServiceKafkaUserConfigSchemaRegistryConfigOutput {
	return i.ToGetServiceKafkaUserConfigSchemaRegistryConfigOutputWithContext(context.Background())
}

func (i GetServiceKafkaUserConfigSchemaRegistryConfigArgs) ToGetServiceKafkaUserConfigSchemaRegistryConfigOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigSchemaRegistryConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaUserConfigSchemaRegistryConfigOutput)
}

func (i GetServiceKafkaUserConfigSchemaRegistryConfigArgs) ToGetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput() GetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return i.ToGetServiceKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(context.Background())
}

func (i GetServiceKafkaUserConfigSchemaRegistryConfigArgs) ToGetServiceKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaUserConfigSchemaRegistryConfigOutput).ToGetServiceKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(ctx)
}

// GetServiceKafkaUserConfigSchemaRegistryConfigPtrInput is an input type that accepts GetServiceKafkaUserConfigSchemaRegistryConfigArgs, GetServiceKafkaUserConfigSchemaRegistryConfigPtr and GetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput values.
// You can construct a concrete instance of `GetServiceKafkaUserConfigSchemaRegistryConfigPtrInput` via:
//
//          GetServiceKafkaUserConfigSchemaRegistryConfigArgs{...}
//
//  or:
//
//          nil
type GetServiceKafkaUserConfigSchemaRegistryConfigPtrInput interface {
	pulumi.Input

	ToGetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput() GetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput
	ToGetServiceKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(context.Context) GetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput
}

type getServiceKafkaUserConfigSchemaRegistryConfigPtrType GetServiceKafkaUserConfigSchemaRegistryConfigArgs

func GetServiceKafkaUserConfigSchemaRegistryConfigPtr(v *GetServiceKafkaUserConfigSchemaRegistryConfigArgs) GetServiceKafkaUserConfigSchemaRegistryConfigPtrInput {
	return (*getServiceKafkaUserConfigSchemaRegistryConfigPtrType)(v)
}

func (*getServiceKafkaUserConfigSchemaRegistryConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceKafkaUserConfigSchemaRegistryConfig)(nil)).Elem()
}

func (i *getServiceKafkaUserConfigSchemaRegistryConfigPtrType) ToGetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput() GetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return i.ToGetServiceKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(context.Background())
}

func (i *getServiceKafkaUserConfigSchemaRegistryConfigPtrType) ToGetServiceKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput)
}

type GetServiceKafkaUserConfigSchemaRegistryConfigOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaUserConfigSchemaRegistryConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceKafkaUserConfigSchemaRegistryConfig)(nil)).Elem()
}

func (o GetServiceKafkaUserConfigSchemaRegistryConfigOutput) ToGetServiceKafkaUserConfigSchemaRegistryConfigOutput() GetServiceKafkaUserConfigSchemaRegistryConfigOutput {
	return o
}

func (o GetServiceKafkaUserConfigSchemaRegistryConfigOutput) ToGetServiceKafkaUserConfigSchemaRegistryConfigOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigSchemaRegistryConfigOutput {
	return o
}

func (o GetServiceKafkaUserConfigSchemaRegistryConfigOutput) ToGetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput() GetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return o.ToGetServiceKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(context.Background())
}

func (o GetServiceKafkaUserConfigSchemaRegistryConfigOutput) ToGetServiceKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigSchemaRegistryConfig) *GetServiceKafkaUserConfigSchemaRegistryConfig {
		return &v
	}).(GetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput)
}
func (o GetServiceKafkaUserConfigSchemaRegistryConfigOutput) LeaderEligibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigSchemaRegistryConfig) *string { return v.LeaderEligibility }).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigSchemaRegistryConfigOutput) TopicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceKafkaUserConfigSchemaRegistryConfig) *string { return v.TopicName }).(pulumi.StringPtrOutput)
}

type GetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput struct{ *pulumi.OutputState }

func (GetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceKafkaUserConfigSchemaRegistryConfig)(nil)).Elem()
}

func (o GetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput) ToGetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput() GetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return o
}

func (o GetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput) ToGetServiceKafkaUserConfigSchemaRegistryConfigPtrOutputWithContext(ctx context.Context) GetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput {
	return o
}

func (o GetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput) Elem() GetServiceKafkaUserConfigSchemaRegistryConfigOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigSchemaRegistryConfig) GetServiceKafkaUserConfigSchemaRegistryConfig {
		return *v
	}).(GetServiceKafkaUserConfigSchemaRegistryConfigOutput)
}

func (o GetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput) LeaderEligibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigSchemaRegistryConfig) *string {
		if v == nil {
			return nil
		}
		return v.LeaderEligibility
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput) TopicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceKafkaUserConfigSchemaRegistryConfig) *string {
		if v == nil {
			return nil
		}
		return v.TopicName
	}).(pulumi.StringPtrOutput)
}

type GetServiceMysql struct {
}

// GetServiceMysqlInput is an input type that accepts GetServiceMysqlArgs and GetServiceMysqlOutput values.
// You can construct a concrete instance of `GetServiceMysqlInput` via:
//
//          GetServiceMysqlArgs{...}
type GetServiceMysqlInput interface {
	pulumi.Input

	ToGetServiceMysqlOutput() GetServiceMysqlOutput
	ToGetServiceMysqlOutputWithContext(context.Context) GetServiceMysqlOutput
}

type GetServiceMysqlArgs struct {
}

func (GetServiceMysqlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceMysql)(nil)).Elem()
}

func (i GetServiceMysqlArgs) ToGetServiceMysqlOutput() GetServiceMysqlOutput {
	return i.ToGetServiceMysqlOutputWithContext(context.Background())
}

func (i GetServiceMysqlArgs) ToGetServiceMysqlOutputWithContext(ctx context.Context) GetServiceMysqlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceMysqlOutput)
}

type GetServiceMysqlOutput struct{ *pulumi.OutputState }

func (GetServiceMysqlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceMysql)(nil)).Elem()
}

func (o GetServiceMysqlOutput) ToGetServiceMysqlOutput() GetServiceMysqlOutput {
	return o
}

func (o GetServiceMysqlOutput) ToGetServiceMysqlOutputWithContext(ctx context.Context) GetServiceMysqlOutput {
	return o
}

type GetServiceMysqlUserConfig struct {
	AdminPassword      *string                                     `pulumi:"adminPassword"`
	AdminUsername      *string                                     `pulumi:"adminUsername"`
	BackupHour         *string                                     `pulumi:"backupHour"`
	BackupMinute       *string                                     `pulumi:"backupMinute"`
	IpFilters          []string                                    `pulumi:"ipFilters"`
	Migration          *GetServiceMysqlUserConfigMigration         `pulumi:"migration"`
	Mysql              *GetServiceMysqlUserConfigMysql             `pulumi:"mysql"`
	MysqlVersion       *string                                     `pulumi:"mysqlVersion"`
	PrivateAccess      *GetServiceMysqlUserConfigPrivateAccess     `pulumi:"privateAccess"`
	PrivatelinkAccess  *GetServiceMysqlUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	ProjectToForkFrom  *string                                     `pulumi:"projectToForkFrom"`
	PublicAccess       *GetServiceMysqlUserConfigPublicAccess      `pulumi:"publicAccess"`
	RecoveryTargetTime *string                                     `pulumi:"recoveryTargetTime"`
	ServiceToForkFrom  *string                                     `pulumi:"serviceToForkFrom"`
}

// GetServiceMysqlUserConfigInput is an input type that accepts GetServiceMysqlUserConfigArgs and GetServiceMysqlUserConfigOutput values.
// You can construct a concrete instance of `GetServiceMysqlUserConfigInput` via:
//
//          GetServiceMysqlUserConfigArgs{...}
type GetServiceMysqlUserConfigInput interface {
	pulumi.Input

	ToGetServiceMysqlUserConfigOutput() GetServiceMysqlUserConfigOutput
	ToGetServiceMysqlUserConfigOutputWithContext(context.Context) GetServiceMysqlUserConfigOutput
}

type GetServiceMysqlUserConfigArgs struct {
	AdminPassword      pulumi.StringPtrInput                              `pulumi:"adminPassword"`
	AdminUsername      pulumi.StringPtrInput                              `pulumi:"adminUsername"`
	BackupHour         pulumi.StringPtrInput                              `pulumi:"backupHour"`
	BackupMinute       pulumi.StringPtrInput                              `pulumi:"backupMinute"`
	IpFilters          pulumi.StringArrayInput                            `pulumi:"ipFilters"`
	Migration          GetServiceMysqlUserConfigMigrationPtrInput         `pulumi:"migration"`
	Mysql              GetServiceMysqlUserConfigMysqlPtrInput             `pulumi:"mysql"`
	MysqlVersion       pulumi.StringPtrInput                              `pulumi:"mysqlVersion"`
	PrivateAccess      GetServiceMysqlUserConfigPrivateAccessPtrInput     `pulumi:"privateAccess"`
	PrivatelinkAccess  GetServiceMysqlUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	ProjectToForkFrom  pulumi.StringPtrInput                              `pulumi:"projectToForkFrom"`
	PublicAccess       GetServiceMysqlUserConfigPublicAccessPtrInput      `pulumi:"publicAccess"`
	RecoveryTargetTime pulumi.StringPtrInput                              `pulumi:"recoveryTargetTime"`
	ServiceToForkFrom  pulumi.StringPtrInput                              `pulumi:"serviceToForkFrom"`
}

func (GetServiceMysqlUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceMysqlUserConfig)(nil)).Elem()
}

func (i GetServiceMysqlUserConfigArgs) ToGetServiceMysqlUserConfigOutput() GetServiceMysqlUserConfigOutput {
	return i.ToGetServiceMysqlUserConfigOutputWithContext(context.Background())
}

func (i GetServiceMysqlUserConfigArgs) ToGetServiceMysqlUserConfigOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceMysqlUserConfigOutput)
}

type GetServiceMysqlUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceMysqlUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceMysqlUserConfig)(nil)).Elem()
}

func (o GetServiceMysqlUserConfigOutput) ToGetServiceMysqlUserConfigOutput() GetServiceMysqlUserConfigOutput {
	return o
}

func (o GetServiceMysqlUserConfigOutput) ToGetServiceMysqlUserConfigOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigOutput {
	return o
}

func (o GetServiceMysqlUserConfigOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfig) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfig) *string { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigOutput) BackupHour() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfig) *string { return v.BackupHour }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigOutput) BackupMinute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfig) *string { return v.BackupMinute }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

func (o GetServiceMysqlUserConfigOutput) Migration() GetServiceMysqlUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfig) *GetServiceMysqlUserConfigMigration { return v.Migration }).(GetServiceMysqlUserConfigMigrationPtrOutput)
}

func (o GetServiceMysqlUserConfigOutput) Mysql() GetServiceMysqlUserConfigMysqlPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfig) *GetServiceMysqlUserConfigMysql { return v.Mysql }).(GetServiceMysqlUserConfigMysqlPtrOutput)
}

func (o GetServiceMysqlUserConfigOutput) MysqlVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfig) *string { return v.MysqlVersion }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigOutput) PrivateAccess() GetServiceMysqlUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfig) *GetServiceMysqlUserConfigPrivateAccess { return v.PrivateAccess }).(GetServiceMysqlUserConfigPrivateAccessPtrOutput)
}

func (o GetServiceMysqlUserConfigOutput) PrivatelinkAccess() GetServiceMysqlUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfig) *GetServiceMysqlUserConfigPrivatelinkAccess {
		return v.PrivatelinkAccess
	}).(GetServiceMysqlUserConfigPrivatelinkAccessPtrOutput)
}

func (o GetServiceMysqlUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigOutput) PublicAccess() GetServiceMysqlUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfig) *GetServiceMysqlUserConfigPublicAccess { return v.PublicAccess }).(GetServiceMysqlUserConfigPublicAccessPtrOutput)
}

func (o GetServiceMysqlUserConfigOutput) RecoveryTargetTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfig) *string { return v.RecoveryTargetTime }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

type GetServiceMysqlUserConfigMigration struct {
	Dbname    *string `pulumi:"dbname"`
	Host      *string `pulumi:"host"`
	IgnoreDbs *string `pulumi:"ignoreDbs"`
	Password  *string `pulumi:"password"`
	Port      *string `pulumi:"port"`
	Ssl       *string `pulumi:"ssl"`
	Username  *string `pulumi:"username"`
}

// GetServiceMysqlUserConfigMigrationInput is an input type that accepts GetServiceMysqlUserConfigMigrationArgs and GetServiceMysqlUserConfigMigrationOutput values.
// You can construct a concrete instance of `GetServiceMysqlUserConfigMigrationInput` via:
//
//          GetServiceMysqlUserConfigMigrationArgs{...}
type GetServiceMysqlUserConfigMigrationInput interface {
	pulumi.Input

	ToGetServiceMysqlUserConfigMigrationOutput() GetServiceMysqlUserConfigMigrationOutput
	ToGetServiceMysqlUserConfigMigrationOutputWithContext(context.Context) GetServiceMysqlUserConfigMigrationOutput
}

type GetServiceMysqlUserConfigMigrationArgs struct {
	Dbname    pulumi.StringPtrInput `pulumi:"dbname"`
	Host      pulumi.StringPtrInput `pulumi:"host"`
	IgnoreDbs pulumi.StringPtrInput `pulumi:"ignoreDbs"`
	Password  pulumi.StringPtrInput `pulumi:"password"`
	Port      pulumi.StringPtrInput `pulumi:"port"`
	Ssl       pulumi.StringPtrInput `pulumi:"ssl"`
	Username  pulumi.StringPtrInput `pulumi:"username"`
}

func (GetServiceMysqlUserConfigMigrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceMysqlUserConfigMigration)(nil)).Elem()
}

func (i GetServiceMysqlUserConfigMigrationArgs) ToGetServiceMysqlUserConfigMigrationOutput() GetServiceMysqlUserConfigMigrationOutput {
	return i.ToGetServiceMysqlUserConfigMigrationOutputWithContext(context.Background())
}

func (i GetServiceMysqlUserConfigMigrationArgs) ToGetServiceMysqlUserConfigMigrationOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigMigrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceMysqlUserConfigMigrationOutput)
}

func (i GetServiceMysqlUserConfigMigrationArgs) ToGetServiceMysqlUserConfigMigrationPtrOutput() GetServiceMysqlUserConfigMigrationPtrOutput {
	return i.ToGetServiceMysqlUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (i GetServiceMysqlUserConfigMigrationArgs) ToGetServiceMysqlUserConfigMigrationPtrOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceMysqlUserConfigMigrationOutput).ToGetServiceMysqlUserConfigMigrationPtrOutputWithContext(ctx)
}

// GetServiceMysqlUserConfigMigrationPtrInput is an input type that accepts GetServiceMysqlUserConfigMigrationArgs, GetServiceMysqlUserConfigMigrationPtr and GetServiceMysqlUserConfigMigrationPtrOutput values.
// You can construct a concrete instance of `GetServiceMysqlUserConfigMigrationPtrInput` via:
//
//          GetServiceMysqlUserConfigMigrationArgs{...}
//
//  or:
//
//          nil
type GetServiceMysqlUserConfigMigrationPtrInput interface {
	pulumi.Input

	ToGetServiceMysqlUserConfigMigrationPtrOutput() GetServiceMysqlUserConfigMigrationPtrOutput
	ToGetServiceMysqlUserConfigMigrationPtrOutputWithContext(context.Context) GetServiceMysqlUserConfigMigrationPtrOutput
}

type getServiceMysqlUserConfigMigrationPtrType GetServiceMysqlUserConfigMigrationArgs

func GetServiceMysqlUserConfigMigrationPtr(v *GetServiceMysqlUserConfigMigrationArgs) GetServiceMysqlUserConfigMigrationPtrInput {
	return (*getServiceMysqlUserConfigMigrationPtrType)(v)
}

func (*getServiceMysqlUserConfigMigrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceMysqlUserConfigMigration)(nil)).Elem()
}

func (i *getServiceMysqlUserConfigMigrationPtrType) ToGetServiceMysqlUserConfigMigrationPtrOutput() GetServiceMysqlUserConfigMigrationPtrOutput {
	return i.ToGetServiceMysqlUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (i *getServiceMysqlUserConfigMigrationPtrType) ToGetServiceMysqlUserConfigMigrationPtrOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceMysqlUserConfigMigrationPtrOutput)
}

type GetServiceMysqlUserConfigMigrationOutput struct{ *pulumi.OutputState }

func (GetServiceMysqlUserConfigMigrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceMysqlUserConfigMigration)(nil)).Elem()
}

func (o GetServiceMysqlUserConfigMigrationOutput) ToGetServiceMysqlUserConfigMigrationOutput() GetServiceMysqlUserConfigMigrationOutput {
	return o
}

func (o GetServiceMysqlUserConfigMigrationOutput) ToGetServiceMysqlUserConfigMigrationOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigMigrationOutput {
	return o
}

func (o GetServiceMysqlUserConfigMigrationOutput) ToGetServiceMysqlUserConfigMigrationPtrOutput() GetServiceMysqlUserConfigMigrationPtrOutput {
	return o.ToGetServiceMysqlUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (o GetServiceMysqlUserConfigMigrationOutput) ToGetServiceMysqlUserConfigMigrationPtrOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMigration) *GetServiceMysqlUserConfigMigration {
		return &v
	}).(GetServiceMysqlUserConfigMigrationPtrOutput)
}
func (o GetServiceMysqlUserConfigMigrationOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMigration) *string { return v.Dbname }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMigrationOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMigration) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMigrationOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMigration) *string { return v.IgnoreDbs }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMigrationOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMigration) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMigrationOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMigration) *string { return v.Port }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMigrationOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMigration) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMigrationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMigration) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GetServiceMysqlUserConfigMigrationPtrOutput struct{ *pulumi.OutputState }

func (GetServiceMysqlUserConfigMigrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceMysqlUserConfigMigration)(nil)).Elem()
}

func (o GetServiceMysqlUserConfigMigrationPtrOutput) ToGetServiceMysqlUserConfigMigrationPtrOutput() GetServiceMysqlUserConfigMigrationPtrOutput {
	return o
}

func (o GetServiceMysqlUserConfigMigrationPtrOutput) ToGetServiceMysqlUserConfigMigrationPtrOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigMigrationPtrOutput {
	return o
}

func (o GetServiceMysqlUserConfigMigrationPtrOutput) Elem() GetServiceMysqlUserConfigMigrationOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMigration) GetServiceMysqlUserConfigMigration { return *v }).(GetServiceMysqlUserConfigMigrationOutput)
}

func (o GetServiceMysqlUserConfigMigrationPtrOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Dbname
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMigrationPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMigrationPtrOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.IgnoreDbs
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMigrationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMigrationPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMigrationPtrOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Ssl
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMigrationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type GetServiceMysqlUserConfigMysql struct {
	ConnectTimeout               *string `pulumi:"connectTimeout"`
	DefaultTimeZone              *string `pulumi:"defaultTimeZone"`
	GroupConcatMaxLen            *string `pulumi:"groupConcatMaxLen"`
	InformationSchemaStatsExpiry *string `pulumi:"informationSchemaStatsExpiry"`
	InnodbFtMinTokenSize         *string `pulumi:"innodbFtMinTokenSize"`
	InnodbFtServerStopwordTable  *string `pulumi:"innodbFtServerStopwordTable"`
	InnodbLockWaitTimeout        *string `pulumi:"innodbLockWaitTimeout"`
	InnodbLogBufferSize          *string `pulumi:"innodbLogBufferSize"`
	InnodbOnlineAlterLogMaxSize  *string `pulumi:"innodbOnlineAlterLogMaxSize"`
	InnodbPrintAllDeadlocks      *string `pulumi:"innodbPrintAllDeadlocks"`
	InnodbRollbackOnTimeout      *string `pulumi:"innodbRollbackOnTimeout"`
	InteractiveTimeout           *string `pulumi:"interactiveTimeout"`
	LongQueryTime                *string `pulumi:"longQueryTime"`
	MaxAllowedPacket             *string `pulumi:"maxAllowedPacket"`
	MaxHeapTableSize             *string `pulumi:"maxHeapTableSize"`
	NetReadTimeout               *string `pulumi:"netReadTimeout"`
	NetWriteTimeout              *string `pulumi:"netWriteTimeout"`
	SlowQueryLog                 *string `pulumi:"slowQueryLog"`
	SortBufferSize               *string `pulumi:"sortBufferSize"`
	SqlMode                      *string `pulumi:"sqlMode"`
	SqlRequirePrimaryKey         *string `pulumi:"sqlRequirePrimaryKey"`
	TmpTableSize                 *string `pulumi:"tmpTableSize"`
	WaitTimeout                  *string `pulumi:"waitTimeout"`
}

// GetServiceMysqlUserConfigMysqlInput is an input type that accepts GetServiceMysqlUserConfigMysqlArgs and GetServiceMysqlUserConfigMysqlOutput values.
// You can construct a concrete instance of `GetServiceMysqlUserConfigMysqlInput` via:
//
//          GetServiceMysqlUserConfigMysqlArgs{...}
type GetServiceMysqlUserConfigMysqlInput interface {
	pulumi.Input

	ToGetServiceMysqlUserConfigMysqlOutput() GetServiceMysqlUserConfigMysqlOutput
	ToGetServiceMysqlUserConfigMysqlOutputWithContext(context.Context) GetServiceMysqlUserConfigMysqlOutput
}

type GetServiceMysqlUserConfigMysqlArgs struct {
	ConnectTimeout               pulumi.StringPtrInput `pulumi:"connectTimeout"`
	DefaultTimeZone              pulumi.StringPtrInput `pulumi:"defaultTimeZone"`
	GroupConcatMaxLen            pulumi.StringPtrInput `pulumi:"groupConcatMaxLen"`
	InformationSchemaStatsExpiry pulumi.StringPtrInput `pulumi:"informationSchemaStatsExpiry"`
	InnodbFtMinTokenSize         pulumi.StringPtrInput `pulumi:"innodbFtMinTokenSize"`
	InnodbFtServerStopwordTable  pulumi.StringPtrInput `pulumi:"innodbFtServerStopwordTable"`
	InnodbLockWaitTimeout        pulumi.StringPtrInput `pulumi:"innodbLockWaitTimeout"`
	InnodbLogBufferSize          pulumi.StringPtrInput `pulumi:"innodbLogBufferSize"`
	InnodbOnlineAlterLogMaxSize  pulumi.StringPtrInput `pulumi:"innodbOnlineAlterLogMaxSize"`
	InnodbPrintAllDeadlocks      pulumi.StringPtrInput `pulumi:"innodbPrintAllDeadlocks"`
	InnodbRollbackOnTimeout      pulumi.StringPtrInput `pulumi:"innodbRollbackOnTimeout"`
	InteractiveTimeout           pulumi.StringPtrInput `pulumi:"interactiveTimeout"`
	LongQueryTime                pulumi.StringPtrInput `pulumi:"longQueryTime"`
	MaxAllowedPacket             pulumi.StringPtrInput `pulumi:"maxAllowedPacket"`
	MaxHeapTableSize             pulumi.StringPtrInput `pulumi:"maxHeapTableSize"`
	NetReadTimeout               pulumi.StringPtrInput `pulumi:"netReadTimeout"`
	NetWriteTimeout              pulumi.StringPtrInput `pulumi:"netWriteTimeout"`
	SlowQueryLog                 pulumi.StringPtrInput `pulumi:"slowQueryLog"`
	SortBufferSize               pulumi.StringPtrInput `pulumi:"sortBufferSize"`
	SqlMode                      pulumi.StringPtrInput `pulumi:"sqlMode"`
	SqlRequirePrimaryKey         pulumi.StringPtrInput `pulumi:"sqlRequirePrimaryKey"`
	TmpTableSize                 pulumi.StringPtrInput `pulumi:"tmpTableSize"`
	WaitTimeout                  pulumi.StringPtrInput `pulumi:"waitTimeout"`
}

func (GetServiceMysqlUserConfigMysqlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceMysqlUserConfigMysql)(nil)).Elem()
}

func (i GetServiceMysqlUserConfigMysqlArgs) ToGetServiceMysqlUserConfigMysqlOutput() GetServiceMysqlUserConfigMysqlOutput {
	return i.ToGetServiceMysqlUserConfigMysqlOutputWithContext(context.Background())
}

func (i GetServiceMysqlUserConfigMysqlArgs) ToGetServiceMysqlUserConfigMysqlOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigMysqlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceMysqlUserConfigMysqlOutput)
}

func (i GetServiceMysqlUserConfigMysqlArgs) ToGetServiceMysqlUserConfigMysqlPtrOutput() GetServiceMysqlUserConfigMysqlPtrOutput {
	return i.ToGetServiceMysqlUserConfigMysqlPtrOutputWithContext(context.Background())
}

func (i GetServiceMysqlUserConfigMysqlArgs) ToGetServiceMysqlUserConfigMysqlPtrOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceMysqlUserConfigMysqlOutput).ToGetServiceMysqlUserConfigMysqlPtrOutputWithContext(ctx)
}

// GetServiceMysqlUserConfigMysqlPtrInput is an input type that accepts GetServiceMysqlUserConfigMysqlArgs, GetServiceMysqlUserConfigMysqlPtr and GetServiceMysqlUserConfigMysqlPtrOutput values.
// You can construct a concrete instance of `GetServiceMysqlUserConfigMysqlPtrInput` via:
//
//          GetServiceMysqlUserConfigMysqlArgs{...}
//
//  or:
//
//          nil
type GetServiceMysqlUserConfigMysqlPtrInput interface {
	pulumi.Input

	ToGetServiceMysqlUserConfigMysqlPtrOutput() GetServiceMysqlUserConfigMysqlPtrOutput
	ToGetServiceMysqlUserConfigMysqlPtrOutputWithContext(context.Context) GetServiceMysqlUserConfigMysqlPtrOutput
}

type getServiceMysqlUserConfigMysqlPtrType GetServiceMysqlUserConfigMysqlArgs

func GetServiceMysqlUserConfigMysqlPtr(v *GetServiceMysqlUserConfigMysqlArgs) GetServiceMysqlUserConfigMysqlPtrInput {
	return (*getServiceMysqlUserConfigMysqlPtrType)(v)
}

func (*getServiceMysqlUserConfigMysqlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceMysqlUserConfigMysql)(nil)).Elem()
}

func (i *getServiceMysqlUserConfigMysqlPtrType) ToGetServiceMysqlUserConfigMysqlPtrOutput() GetServiceMysqlUserConfigMysqlPtrOutput {
	return i.ToGetServiceMysqlUserConfigMysqlPtrOutputWithContext(context.Background())
}

func (i *getServiceMysqlUserConfigMysqlPtrType) ToGetServiceMysqlUserConfigMysqlPtrOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceMysqlUserConfigMysqlPtrOutput)
}

type GetServiceMysqlUserConfigMysqlOutput struct{ *pulumi.OutputState }

func (GetServiceMysqlUserConfigMysqlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceMysqlUserConfigMysql)(nil)).Elem()
}

func (o GetServiceMysqlUserConfigMysqlOutput) ToGetServiceMysqlUserConfigMysqlOutput() GetServiceMysqlUserConfigMysqlOutput {
	return o
}

func (o GetServiceMysqlUserConfigMysqlOutput) ToGetServiceMysqlUserConfigMysqlOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigMysqlOutput {
	return o
}

func (o GetServiceMysqlUserConfigMysqlOutput) ToGetServiceMysqlUserConfigMysqlPtrOutput() GetServiceMysqlUserConfigMysqlPtrOutput {
	return o.ToGetServiceMysqlUserConfigMysqlPtrOutputWithContext(context.Background())
}

func (o GetServiceMysqlUserConfigMysqlOutput) ToGetServiceMysqlUserConfigMysqlPtrOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigMysqlPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMysql) *GetServiceMysqlUserConfigMysql {
		return &v
	}).(GetServiceMysqlUserConfigMysqlPtrOutput)
}
func (o GetServiceMysqlUserConfigMysqlOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMysql) *string { return v.ConnectTimeout }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlOutput) DefaultTimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMysql) *string { return v.DefaultTimeZone }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlOutput) GroupConcatMaxLen() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMysql) *string { return v.GroupConcatMaxLen }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlOutput) InformationSchemaStatsExpiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMysql) *string { return v.InformationSchemaStatsExpiry }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlOutput) InnodbFtMinTokenSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMysql) *string { return v.InnodbFtMinTokenSize }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlOutput) InnodbFtServerStopwordTable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMysql) *string { return v.InnodbFtServerStopwordTable }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlOutput) InnodbLockWaitTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMysql) *string { return v.InnodbLockWaitTimeout }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlOutput) InnodbLogBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMysql) *string { return v.InnodbLogBufferSize }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlOutput) InnodbOnlineAlterLogMaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMysql) *string { return v.InnodbOnlineAlterLogMaxSize }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlOutput) InnodbPrintAllDeadlocks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMysql) *string { return v.InnodbPrintAllDeadlocks }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlOutput) InnodbRollbackOnTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMysql) *string { return v.InnodbRollbackOnTimeout }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlOutput) InteractiveTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMysql) *string { return v.InteractiveTimeout }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlOutput) LongQueryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMysql) *string { return v.LongQueryTime }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlOutput) MaxAllowedPacket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMysql) *string { return v.MaxAllowedPacket }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlOutput) MaxHeapTableSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMysql) *string { return v.MaxHeapTableSize }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlOutput) NetReadTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMysql) *string { return v.NetReadTimeout }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlOutput) NetWriteTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMysql) *string { return v.NetWriteTimeout }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlOutput) SlowQueryLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMysql) *string { return v.SlowQueryLog }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlOutput) SortBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMysql) *string { return v.SortBufferSize }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlOutput) SqlMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMysql) *string { return v.SqlMode }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlOutput) SqlRequirePrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMysql) *string { return v.SqlRequirePrimaryKey }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlOutput) TmpTableSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMysql) *string { return v.TmpTableSize }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlOutput) WaitTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigMysql) *string { return v.WaitTimeout }).(pulumi.StringPtrOutput)
}

type GetServiceMysqlUserConfigMysqlPtrOutput struct{ *pulumi.OutputState }

func (GetServiceMysqlUserConfigMysqlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceMysqlUserConfigMysql)(nil)).Elem()
}

func (o GetServiceMysqlUserConfigMysqlPtrOutput) ToGetServiceMysqlUserConfigMysqlPtrOutput() GetServiceMysqlUserConfigMysqlPtrOutput {
	return o
}

func (o GetServiceMysqlUserConfigMysqlPtrOutput) ToGetServiceMysqlUserConfigMysqlPtrOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigMysqlPtrOutput {
	return o
}

func (o GetServiceMysqlUserConfigMysqlPtrOutput) Elem() GetServiceMysqlUserConfigMysqlOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMysql) GetServiceMysqlUserConfigMysql { return *v }).(GetServiceMysqlUserConfigMysqlOutput)
}

func (o GetServiceMysqlUserConfigMysqlPtrOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.ConnectTimeout
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlPtrOutput) DefaultTimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.DefaultTimeZone
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlPtrOutput) GroupConcatMaxLen() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.GroupConcatMaxLen
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlPtrOutput) InformationSchemaStatsExpiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InformationSchemaStatsExpiry
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlPtrOutput) InnodbFtMinTokenSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbFtMinTokenSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlPtrOutput) InnodbFtServerStopwordTable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbFtServerStopwordTable
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlPtrOutput) InnodbLockWaitTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbLockWaitTimeout
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlPtrOutput) InnodbLogBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbLogBufferSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlPtrOutput) InnodbOnlineAlterLogMaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbOnlineAlterLogMaxSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlPtrOutput) InnodbPrintAllDeadlocks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbPrintAllDeadlocks
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlPtrOutput) InnodbRollbackOnTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InnodbRollbackOnTimeout
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlPtrOutput) InteractiveTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.InteractiveTimeout
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlPtrOutput) LongQueryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.LongQueryTime
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlPtrOutput) MaxAllowedPacket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.MaxAllowedPacket
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlPtrOutput) MaxHeapTableSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.MaxHeapTableSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlPtrOutput) NetReadTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.NetReadTimeout
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlPtrOutput) NetWriteTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.NetWriteTimeout
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlPtrOutput) SlowQueryLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.SlowQueryLog
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlPtrOutput) SortBufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.SortBufferSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlPtrOutput) SqlMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.SqlMode
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlPtrOutput) SqlRequirePrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.SqlRequirePrimaryKey
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlPtrOutput) TmpTableSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.TmpTableSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigMysqlPtrOutput) WaitTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigMysql) *string {
		if v == nil {
			return nil
		}
		return v.WaitTimeout
	}).(pulumi.StringPtrOutput)
}

type GetServiceMysqlUserConfigPrivateAccess struct {
	Mysql      *string `pulumi:"mysql"`
	Prometheus *string `pulumi:"prometheus"`
}

// GetServiceMysqlUserConfigPrivateAccessInput is an input type that accepts GetServiceMysqlUserConfigPrivateAccessArgs and GetServiceMysqlUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `GetServiceMysqlUserConfigPrivateAccessInput` via:
//
//          GetServiceMysqlUserConfigPrivateAccessArgs{...}
type GetServiceMysqlUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToGetServiceMysqlUserConfigPrivateAccessOutput() GetServiceMysqlUserConfigPrivateAccessOutput
	ToGetServiceMysqlUserConfigPrivateAccessOutputWithContext(context.Context) GetServiceMysqlUserConfigPrivateAccessOutput
}

type GetServiceMysqlUserConfigPrivateAccessArgs struct {
	Mysql      pulumi.StringPtrInput `pulumi:"mysql"`
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (GetServiceMysqlUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceMysqlUserConfigPrivateAccess)(nil)).Elem()
}

func (i GetServiceMysqlUserConfigPrivateAccessArgs) ToGetServiceMysqlUserConfigPrivateAccessOutput() GetServiceMysqlUserConfigPrivateAccessOutput {
	return i.ToGetServiceMysqlUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i GetServiceMysqlUserConfigPrivateAccessArgs) ToGetServiceMysqlUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceMysqlUserConfigPrivateAccessOutput)
}

func (i GetServiceMysqlUserConfigPrivateAccessArgs) ToGetServiceMysqlUserConfigPrivateAccessPtrOutput() GetServiceMysqlUserConfigPrivateAccessPtrOutput {
	return i.ToGetServiceMysqlUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i GetServiceMysqlUserConfigPrivateAccessArgs) ToGetServiceMysqlUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceMysqlUserConfigPrivateAccessOutput).ToGetServiceMysqlUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// GetServiceMysqlUserConfigPrivateAccessPtrInput is an input type that accepts GetServiceMysqlUserConfigPrivateAccessArgs, GetServiceMysqlUserConfigPrivateAccessPtr and GetServiceMysqlUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `GetServiceMysqlUserConfigPrivateAccessPtrInput` via:
//
//          GetServiceMysqlUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type GetServiceMysqlUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToGetServiceMysqlUserConfigPrivateAccessPtrOutput() GetServiceMysqlUserConfigPrivateAccessPtrOutput
	ToGetServiceMysqlUserConfigPrivateAccessPtrOutputWithContext(context.Context) GetServiceMysqlUserConfigPrivateAccessPtrOutput
}

type getServiceMysqlUserConfigPrivateAccessPtrType GetServiceMysqlUserConfigPrivateAccessArgs

func GetServiceMysqlUserConfigPrivateAccessPtr(v *GetServiceMysqlUserConfigPrivateAccessArgs) GetServiceMysqlUserConfigPrivateAccessPtrInput {
	return (*getServiceMysqlUserConfigPrivateAccessPtrType)(v)
}

func (*getServiceMysqlUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceMysqlUserConfigPrivateAccess)(nil)).Elem()
}

func (i *getServiceMysqlUserConfigPrivateAccessPtrType) ToGetServiceMysqlUserConfigPrivateAccessPtrOutput() GetServiceMysqlUserConfigPrivateAccessPtrOutput {
	return i.ToGetServiceMysqlUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *getServiceMysqlUserConfigPrivateAccessPtrType) ToGetServiceMysqlUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceMysqlUserConfigPrivateAccessPtrOutput)
}

type GetServiceMysqlUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (GetServiceMysqlUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceMysqlUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetServiceMysqlUserConfigPrivateAccessOutput) ToGetServiceMysqlUserConfigPrivateAccessOutput() GetServiceMysqlUserConfigPrivateAccessOutput {
	return o
}

func (o GetServiceMysqlUserConfigPrivateAccessOutput) ToGetServiceMysqlUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigPrivateAccessOutput {
	return o
}

func (o GetServiceMysqlUserConfigPrivateAccessOutput) ToGetServiceMysqlUserConfigPrivateAccessPtrOutput() GetServiceMysqlUserConfigPrivateAccessPtrOutput {
	return o.ToGetServiceMysqlUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o GetServiceMysqlUserConfigPrivateAccessOutput) ToGetServiceMysqlUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigPrivateAccess) *GetServiceMysqlUserConfigPrivateAccess {
		return &v
	}).(GetServiceMysqlUserConfigPrivateAccessPtrOutput)
}
func (o GetServiceMysqlUserConfigPrivateAccessOutput) Mysql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigPrivateAccess) *string { return v.Mysql }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type GetServiceMysqlUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (GetServiceMysqlUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceMysqlUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetServiceMysqlUserConfigPrivateAccessPtrOutput) ToGetServiceMysqlUserConfigPrivateAccessPtrOutput() GetServiceMysqlUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetServiceMysqlUserConfigPrivateAccessPtrOutput) ToGetServiceMysqlUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetServiceMysqlUserConfigPrivateAccessPtrOutput) Elem() GetServiceMysqlUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigPrivateAccess) GetServiceMysqlUserConfigPrivateAccess { return *v }).(GetServiceMysqlUserConfigPrivateAccessOutput)
}

func (o GetServiceMysqlUserConfigPrivateAccessPtrOutput) Mysql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Mysql
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type GetServiceMysqlUserConfigPrivatelinkAccess struct {
	Mysql *string `pulumi:"mysql"`
}

// GetServiceMysqlUserConfigPrivatelinkAccessInput is an input type that accepts GetServiceMysqlUserConfigPrivatelinkAccessArgs and GetServiceMysqlUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `GetServiceMysqlUserConfigPrivatelinkAccessInput` via:
//
//          GetServiceMysqlUserConfigPrivatelinkAccessArgs{...}
type GetServiceMysqlUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToGetServiceMysqlUserConfigPrivatelinkAccessOutput() GetServiceMysqlUserConfigPrivatelinkAccessOutput
	ToGetServiceMysqlUserConfigPrivatelinkAccessOutputWithContext(context.Context) GetServiceMysqlUserConfigPrivatelinkAccessOutput
}

type GetServiceMysqlUserConfigPrivatelinkAccessArgs struct {
	Mysql pulumi.StringPtrInput `pulumi:"mysql"`
}

func (GetServiceMysqlUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceMysqlUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i GetServiceMysqlUserConfigPrivatelinkAccessArgs) ToGetServiceMysqlUserConfigPrivatelinkAccessOutput() GetServiceMysqlUserConfigPrivatelinkAccessOutput {
	return i.ToGetServiceMysqlUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i GetServiceMysqlUserConfigPrivatelinkAccessArgs) ToGetServiceMysqlUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceMysqlUserConfigPrivatelinkAccessOutput)
}

func (i GetServiceMysqlUserConfigPrivatelinkAccessArgs) ToGetServiceMysqlUserConfigPrivatelinkAccessPtrOutput() GetServiceMysqlUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetServiceMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i GetServiceMysqlUserConfigPrivatelinkAccessArgs) ToGetServiceMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceMysqlUserConfigPrivatelinkAccessOutput).ToGetServiceMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// GetServiceMysqlUserConfigPrivatelinkAccessPtrInput is an input type that accepts GetServiceMysqlUserConfigPrivatelinkAccessArgs, GetServiceMysqlUserConfigPrivatelinkAccessPtr and GetServiceMysqlUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `GetServiceMysqlUserConfigPrivatelinkAccessPtrInput` via:
//
//          GetServiceMysqlUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type GetServiceMysqlUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToGetServiceMysqlUserConfigPrivatelinkAccessPtrOutput() GetServiceMysqlUserConfigPrivatelinkAccessPtrOutput
	ToGetServiceMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) GetServiceMysqlUserConfigPrivatelinkAccessPtrOutput
}

type getServiceMysqlUserConfigPrivatelinkAccessPtrType GetServiceMysqlUserConfigPrivatelinkAccessArgs

func GetServiceMysqlUserConfigPrivatelinkAccessPtr(v *GetServiceMysqlUserConfigPrivatelinkAccessArgs) GetServiceMysqlUserConfigPrivatelinkAccessPtrInput {
	return (*getServiceMysqlUserConfigPrivatelinkAccessPtrType)(v)
}

func (*getServiceMysqlUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceMysqlUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *getServiceMysqlUserConfigPrivatelinkAccessPtrType) ToGetServiceMysqlUserConfigPrivatelinkAccessPtrOutput() GetServiceMysqlUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetServiceMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *getServiceMysqlUserConfigPrivatelinkAccessPtrType) ToGetServiceMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceMysqlUserConfigPrivatelinkAccessPtrOutput)
}

type GetServiceMysqlUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (GetServiceMysqlUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceMysqlUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetServiceMysqlUserConfigPrivatelinkAccessOutput) ToGetServiceMysqlUserConfigPrivatelinkAccessOutput() GetServiceMysqlUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetServiceMysqlUserConfigPrivatelinkAccessOutput) ToGetServiceMysqlUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetServiceMysqlUserConfigPrivatelinkAccessOutput) ToGetServiceMysqlUserConfigPrivatelinkAccessPtrOutput() GetServiceMysqlUserConfigPrivatelinkAccessPtrOutput {
	return o.ToGetServiceMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o GetServiceMysqlUserConfigPrivatelinkAccessOutput) ToGetServiceMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigPrivatelinkAccess) *GetServiceMysqlUserConfigPrivatelinkAccess {
		return &v
	}).(GetServiceMysqlUserConfigPrivatelinkAccessPtrOutput)
}
func (o GetServiceMysqlUserConfigPrivatelinkAccessOutput) Mysql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigPrivatelinkAccess) *string { return v.Mysql }).(pulumi.StringPtrOutput)
}

type GetServiceMysqlUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (GetServiceMysqlUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceMysqlUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetServiceMysqlUserConfigPrivatelinkAccessPtrOutput) ToGetServiceMysqlUserConfigPrivatelinkAccessPtrOutput() GetServiceMysqlUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetServiceMysqlUserConfigPrivatelinkAccessPtrOutput) ToGetServiceMysqlUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetServiceMysqlUserConfigPrivatelinkAccessPtrOutput) Elem() GetServiceMysqlUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigPrivatelinkAccess) GetServiceMysqlUserConfigPrivatelinkAccess {
		return *v
	}).(GetServiceMysqlUserConfigPrivatelinkAccessOutput)
}

func (o GetServiceMysqlUserConfigPrivatelinkAccessPtrOutput) Mysql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Mysql
	}).(pulumi.StringPtrOutput)
}

type GetServiceMysqlUserConfigPublicAccess struct {
	Mysql      *string `pulumi:"mysql"`
	Prometheus *string `pulumi:"prometheus"`
}

// GetServiceMysqlUserConfigPublicAccessInput is an input type that accepts GetServiceMysqlUserConfigPublicAccessArgs and GetServiceMysqlUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `GetServiceMysqlUserConfigPublicAccessInput` via:
//
//          GetServiceMysqlUserConfigPublicAccessArgs{...}
type GetServiceMysqlUserConfigPublicAccessInput interface {
	pulumi.Input

	ToGetServiceMysqlUserConfigPublicAccessOutput() GetServiceMysqlUserConfigPublicAccessOutput
	ToGetServiceMysqlUserConfigPublicAccessOutputWithContext(context.Context) GetServiceMysqlUserConfigPublicAccessOutput
}

type GetServiceMysqlUserConfigPublicAccessArgs struct {
	Mysql      pulumi.StringPtrInput `pulumi:"mysql"`
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (GetServiceMysqlUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceMysqlUserConfigPublicAccess)(nil)).Elem()
}

func (i GetServiceMysqlUserConfigPublicAccessArgs) ToGetServiceMysqlUserConfigPublicAccessOutput() GetServiceMysqlUserConfigPublicAccessOutput {
	return i.ToGetServiceMysqlUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i GetServiceMysqlUserConfigPublicAccessArgs) ToGetServiceMysqlUserConfigPublicAccessOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceMysqlUserConfigPublicAccessOutput)
}

func (i GetServiceMysqlUserConfigPublicAccessArgs) ToGetServiceMysqlUserConfigPublicAccessPtrOutput() GetServiceMysqlUserConfigPublicAccessPtrOutput {
	return i.ToGetServiceMysqlUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i GetServiceMysqlUserConfigPublicAccessArgs) ToGetServiceMysqlUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceMysqlUserConfigPublicAccessOutput).ToGetServiceMysqlUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// GetServiceMysqlUserConfigPublicAccessPtrInput is an input type that accepts GetServiceMysqlUserConfigPublicAccessArgs, GetServiceMysqlUserConfigPublicAccessPtr and GetServiceMysqlUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `GetServiceMysqlUserConfigPublicAccessPtrInput` via:
//
//          GetServiceMysqlUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type GetServiceMysqlUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToGetServiceMysqlUserConfigPublicAccessPtrOutput() GetServiceMysqlUserConfigPublicAccessPtrOutput
	ToGetServiceMysqlUserConfigPublicAccessPtrOutputWithContext(context.Context) GetServiceMysqlUserConfigPublicAccessPtrOutput
}

type getServiceMysqlUserConfigPublicAccessPtrType GetServiceMysqlUserConfigPublicAccessArgs

func GetServiceMysqlUserConfigPublicAccessPtr(v *GetServiceMysqlUserConfigPublicAccessArgs) GetServiceMysqlUserConfigPublicAccessPtrInput {
	return (*getServiceMysqlUserConfigPublicAccessPtrType)(v)
}

func (*getServiceMysqlUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceMysqlUserConfigPublicAccess)(nil)).Elem()
}

func (i *getServiceMysqlUserConfigPublicAccessPtrType) ToGetServiceMysqlUserConfigPublicAccessPtrOutput() GetServiceMysqlUserConfigPublicAccessPtrOutput {
	return i.ToGetServiceMysqlUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *getServiceMysqlUserConfigPublicAccessPtrType) ToGetServiceMysqlUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceMysqlUserConfigPublicAccessPtrOutput)
}

type GetServiceMysqlUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (GetServiceMysqlUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceMysqlUserConfigPublicAccess)(nil)).Elem()
}

func (o GetServiceMysqlUserConfigPublicAccessOutput) ToGetServiceMysqlUserConfigPublicAccessOutput() GetServiceMysqlUserConfigPublicAccessOutput {
	return o
}

func (o GetServiceMysqlUserConfigPublicAccessOutput) ToGetServiceMysqlUserConfigPublicAccessOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigPublicAccessOutput {
	return o
}

func (o GetServiceMysqlUserConfigPublicAccessOutput) ToGetServiceMysqlUserConfigPublicAccessPtrOutput() GetServiceMysqlUserConfigPublicAccessPtrOutput {
	return o.ToGetServiceMysqlUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o GetServiceMysqlUserConfigPublicAccessOutput) ToGetServiceMysqlUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigPublicAccess) *GetServiceMysqlUserConfigPublicAccess {
		return &v
	}).(GetServiceMysqlUserConfigPublicAccessPtrOutput)
}
func (o GetServiceMysqlUserConfigPublicAccessOutput) Mysql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigPublicAccess) *string { return v.Mysql }).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMysqlUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type GetServiceMysqlUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (GetServiceMysqlUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceMysqlUserConfigPublicAccess)(nil)).Elem()
}

func (o GetServiceMysqlUserConfigPublicAccessPtrOutput) ToGetServiceMysqlUserConfigPublicAccessPtrOutput() GetServiceMysqlUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetServiceMysqlUserConfigPublicAccessPtrOutput) ToGetServiceMysqlUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceMysqlUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetServiceMysqlUserConfigPublicAccessPtrOutput) Elem() GetServiceMysqlUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigPublicAccess) GetServiceMysqlUserConfigPublicAccess { return *v }).(GetServiceMysqlUserConfigPublicAccessOutput)
}

func (o GetServiceMysqlUserConfigPublicAccessPtrOutput) Mysql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Mysql
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceMysqlUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceMysqlUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type GetServicePg struct {
	Dbname     string `pulumi:"dbname"`
	Host       string `pulumi:"host"`
	Password   string `pulumi:"password"`
	Port       int    `pulumi:"port"`
	ReplicaUri string `pulumi:"replicaUri"`
	Sslmode    string `pulumi:"sslmode"`
	Uri        string `pulumi:"uri"`
	User       string `pulumi:"user"`
}

// GetServicePgInput is an input type that accepts GetServicePgArgs and GetServicePgOutput values.
// You can construct a concrete instance of `GetServicePgInput` via:
//
//          GetServicePgArgs{...}
type GetServicePgInput interface {
	pulumi.Input

	ToGetServicePgOutput() GetServicePgOutput
	ToGetServicePgOutputWithContext(context.Context) GetServicePgOutput
}

type GetServicePgArgs struct {
	Dbname     pulumi.StringInput `pulumi:"dbname"`
	Host       pulumi.StringInput `pulumi:"host"`
	Password   pulumi.StringInput `pulumi:"password"`
	Port       pulumi.IntInput    `pulumi:"port"`
	ReplicaUri pulumi.StringInput `pulumi:"replicaUri"`
	Sslmode    pulumi.StringInput `pulumi:"sslmode"`
	Uri        pulumi.StringInput `pulumi:"uri"`
	User       pulumi.StringInput `pulumi:"user"`
}

func (GetServicePgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePg)(nil)).Elem()
}

func (i GetServicePgArgs) ToGetServicePgOutput() GetServicePgOutput {
	return i.ToGetServicePgOutputWithContext(context.Background())
}

func (i GetServicePgArgs) ToGetServicePgOutputWithContext(ctx context.Context) GetServicePgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePgOutput)
}

type GetServicePgOutput struct{ *pulumi.OutputState }

func (GetServicePgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePg)(nil)).Elem()
}

func (o GetServicePgOutput) ToGetServicePgOutput() GetServicePgOutput {
	return o
}

func (o GetServicePgOutput) ToGetServicePgOutputWithContext(ctx context.Context) GetServicePgOutput {
	return o
}

func (o GetServicePgOutput) Dbname() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicePg) string { return v.Dbname }).(pulumi.StringOutput)
}

func (o GetServicePgOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicePg) string { return v.Host }).(pulumi.StringOutput)
}

func (o GetServicePgOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicePg) string { return v.Password }).(pulumi.StringOutput)
}

func (o GetServicePgOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetServicePg) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetServicePgOutput) ReplicaUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicePg) string { return v.ReplicaUri }).(pulumi.StringOutput)
}

func (o GetServicePgOutput) Sslmode() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicePg) string { return v.Sslmode }).(pulumi.StringOutput)
}

func (o GetServicePgOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicePg) string { return v.Uri }).(pulumi.StringOutput)
}

func (o GetServicePgOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicePg) string { return v.User }).(pulumi.StringOutput)
}

type GetServicePgUserConfig struct {
	AdminPassword           *string                                  `pulumi:"adminPassword"`
	AdminUsername           *string                                  `pulumi:"adminUsername"`
	BackupHour              *string                                  `pulumi:"backupHour"`
	BackupMinute            *string                                  `pulumi:"backupMinute"`
	IpFilters               []string                                 `pulumi:"ipFilters"`
	Migration               *GetServicePgUserConfigMigration         `pulumi:"migration"`
	Pg                      *GetServicePgUserConfigPg                `pulumi:"pg"`
	PgReadReplica           *string                                  `pulumi:"pgReadReplica"`
	PgServiceToForkFrom     *string                                  `pulumi:"pgServiceToForkFrom"`
	PgVersion               *string                                  `pulumi:"pgVersion"`
	Pgbouncer               *GetServicePgUserConfigPgbouncer         `pulumi:"pgbouncer"`
	Pglookout               *GetServicePgUserConfigPglookout         `pulumi:"pglookout"`
	PrivateAccess           *GetServicePgUserConfigPrivateAccess     `pulumi:"privateAccess"`
	PrivatelinkAccess       *GetServicePgUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	ProjectToForkFrom       *string                                  `pulumi:"projectToForkFrom"`
	PublicAccess            *GetServicePgUserConfigPublicAccess      `pulumi:"publicAccess"`
	RecoveryTargetTime      *string                                  `pulumi:"recoveryTargetTime"`
	ServiceToForkFrom       *string                                  `pulumi:"serviceToForkFrom"`
	SharedBuffersPercentage *string                                  `pulumi:"sharedBuffersPercentage"`
	SynchronousReplication  *string                                  `pulumi:"synchronousReplication"`
	Timescaledb             *GetServicePgUserConfigTimescaledb       `pulumi:"timescaledb"`
	Variant                 *string                                  `pulumi:"variant"`
	WorkMem                 *string                                  `pulumi:"workMem"`
}

// GetServicePgUserConfigInput is an input type that accepts GetServicePgUserConfigArgs and GetServicePgUserConfigOutput values.
// You can construct a concrete instance of `GetServicePgUserConfigInput` via:
//
//          GetServicePgUserConfigArgs{...}
type GetServicePgUserConfigInput interface {
	pulumi.Input

	ToGetServicePgUserConfigOutput() GetServicePgUserConfigOutput
	ToGetServicePgUserConfigOutputWithContext(context.Context) GetServicePgUserConfigOutput
}

type GetServicePgUserConfigArgs struct {
	AdminPassword           pulumi.StringPtrInput                           `pulumi:"adminPassword"`
	AdminUsername           pulumi.StringPtrInput                           `pulumi:"adminUsername"`
	BackupHour              pulumi.StringPtrInput                           `pulumi:"backupHour"`
	BackupMinute            pulumi.StringPtrInput                           `pulumi:"backupMinute"`
	IpFilters               pulumi.StringArrayInput                         `pulumi:"ipFilters"`
	Migration               GetServicePgUserConfigMigrationPtrInput         `pulumi:"migration"`
	Pg                      GetServicePgUserConfigPgPtrInput                `pulumi:"pg"`
	PgReadReplica           pulumi.StringPtrInput                           `pulumi:"pgReadReplica"`
	PgServiceToForkFrom     pulumi.StringPtrInput                           `pulumi:"pgServiceToForkFrom"`
	PgVersion               pulumi.StringPtrInput                           `pulumi:"pgVersion"`
	Pgbouncer               GetServicePgUserConfigPgbouncerPtrInput         `pulumi:"pgbouncer"`
	Pglookout               GetServicePgUserConfigPglookoutPtrInput         `pulumi:"pglookout"`
	PrivateAccess           GetServicePgUserConfigPrivateAccessPtrInput     `pulumi:"privateAccess"`
	PrivatelinkAccess       GetServicePgUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	ProjectToForkFrom       pulumi.StringPtrInput                           `pulumi:"projectToForkFrom"`
	PublicAccess            GetServicePgUserConfigPublicAccessPtrInput      `pulumi:"publicAccess"`
	RecoveryTargetTime      pulumi.StringPtrInput                           `pulumi:"recoveryTargetTime"`
	ServiceToForkFrom       pulumi.StringPtrInput                           `pulumi:"serviceToForkFrom"`
	SharedBuffersPercentage pulumi.StringPtrInput                           `pulumi:"sharedBuffersPercentage"`
	SynchronousReplication  pulumi.StringPtrInput                           `pulumi:"synchronousReplication"`
	Timescaledb             GetServicePgUserConfigTimescaledbPtrInput       `pulumi:"timescaledb"`
	Variant                 pulumi.StringPtrInput                           `pulumi:"variant"`
	WorkMem                 pulumi.StringPtrInput                           `pulumi:"workMem"`
}

func (GetServicePgUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePgUserConfig)(nil)).Elem()
}

func (i GetServicePgUserConfigArgs) ToGetServicePgUserConfigOutput() GetServicePgUserConfigOutput {
	return i.ToGetServicePgUserConfigOutputWithContext(context.Background())
}

func (i GetServicePgUserConfigArgs) ToGetServicePgUserConfigOutputWithContext(ctx context.Context) GetServicePgUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePgUserConfigOutput)
}

type GetServicePgUserConfigOutput struct{ *pulumi.OutputState }

func (GetServicePgUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePgUserConfig)(nil)).Elem()
}

func (o GetServicePgUserConfigOutput) ToGetServicePgUserConfigOutput() GetServicePgUserConfigOutput {
	return o
}

func (o GetServicePgUserConfigOutput) ToGetServicePgUserConfigOutputWithContext(ctx context.Context) GetServicePgUserConfigOutput {
	return o
}

func (o GetServicePgUserConfigOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfig) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfig) *string { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigOutput) BackupHour() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfig) *string { return v.BackupHour }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigOutput) BackupMinute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfig) *string { return v.BackupMinute }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServicePgUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

func (o GetServicePgUserConfigOutput) Migration() GetServicePgUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfig) *GetServicePgUserConfigMigration { return v.Migration }).(GetServicePgUserConfigMigrationPtrOutput)
}

func (o GetServicePgUserConfigOutput) Pg() GetServicePgUserConfigPgPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfig) *GetServicePgUserConfigPg { return v.Pg }).(GetServicePgUserConfigPgPtrOutput)
}

func (o GetServicePgUserConfigOutput) PgReadReplica() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfig) *string { return v.PgReadReplica }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigOutput) PgServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfig) *string { return v.PgServiceToForkFrom }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigOutput) PgVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfig) *string { return v.PgVersion }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigOutput) Pgbouncer() GetServicePgUserConfigPgbouncerPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfig) *GetServicePgUserConfigPgbouncer { return v.Pgbouncer }).(GetServicePgUserConfigPgbouncerPtrOutput)
}

func (o GetServicePgUserConfigOutput) Pglookout() GetServicePgUserConfigPglookoutPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfig) *GetServicePgUserConfigPglookout { return v.Pglookout }).(GetServicePgUserConfigPglookoutPtrOutput)
}

func (o GetServicePgUserConfigOutput) PrivateAccess() GetServicePgUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfig) *GetServicePgUserConfigPrivateAccess { return v.PrivateAccess }).(GetServicePgUserConfigPrivateAccessPtrOutput)
}

func (o GetServicePgUserConfigOutput) PrivatelinkAccess() GetServicePgUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfig) *GetServicePgUserConfigPrivatelinkAccess { return v.PrivatelinkAccess }).(GetServicePgUserConfigPrivatelinkAccessPtrOutput)
}

func (o GetServicePgUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigOutput) PublicAccess() GetServicePgUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfig) *GetServicePgUserConfigPublicAccess { return v.PublicAccess }).(GetServicePgUserConfigPublicAccessPtrOutput)
}

func (o GetServicePgUserConfigOutput) RecoveryTargetTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfig) *string { return v.RecoveryTargetTime }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigOutput) SharedBuffersPercentage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfig) *string { return v.SharedBuffersPercentage }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigOutput) SynchronousReplication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfig) *string { return v.SynchronousReplication }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigOutput) Timescaledb() GetServicePgUserConfigTimescaledbPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfig) *GetServicePgUserConfigTimescaledb { return v.Timescaledb }).(GetServicePgUserConfigTimescaledbPtrOutput)
}

func (o GetServicePgUserConfigOutput) Variant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfig) *string { return v.Variant }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigOutput) WorkMem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfig) *string { return v.WorkMem }).(pulumi.StringPtrOutput)
}

type GetServicePgUserConfigMigration struct {
	Dbname    *string `pulumi:"dbname"`
	Host      *string `pulumi:"host"`
	IgnoreDbs *string `pulumi:"ignoreDbs"`
	Password  *string `pulumi:"password"`
	Port      *string `pulumi:"port"`
	Ssl       *string `pulumi:"ssl"`
	Username  *string `pulumi:"username"`
}

// GetServicePgUserConfigMigrationInput is an input type that accepts GetServicePgUserConfigMigrationArgs and GetServicePgUserConfigMigrationOutput values.
// You can construct a concrete instance of `GetServicePgUserConfigMigrationInput` via:
//
//          GetServicePgUserConfigMigrationArgs{...}
type GetServicePgUserConfigMigrationInput interface {
	pulumi.Input

	ToGetServicePgUserConfigMigrationOutput() GetServicePgUserConfigMigrationOutput
	ToGetServicePgUserConfigMigrationOutputWithContext(context.Context) GetServicePgUserConfigMigrationOutput
}

type GetServicePgUserConfigMigrationArgs struct {
	Dbname    pulumi.StringPtrInput `pulumi:"dbname"`
	Host      pulumi.StringPtrInput `pulumi:"host"`
	IgnoreDbs pulumi.StringPtrInput `pulumi:"ignoreDbs"`
	Password  pulumi.StringPtrInput `pulumi:"password"`
	Port      pulumi.StringPtrInput `pulumi:"port"`
	Ssl       pulumi.StringPtrInput `pulumi:"ssl"`
	Username  pulumi.StringPtrInput `pulumi:"username"`
}

func (GetServicePgUserConfigMigrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePgUserConfigMigration)(nil)).Elem()
}

func (i GetServicePgUserConfigMigrationArgs) ToGetServicePgUserConfigMigrationOutput() GetServicePgUserConfigMigrationOutput {
	return i.ToGetServicePgUserConfigMigrationOutputWithContext(context.Background())
}

func (i GetServicePgUserConfigMigrationArgs) ToGetServicePgUserConfigMigrationOutputWithContext(ctx context.Context) GetServicePgUserConfigMigrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePgUserConfigMigrationOutput)
}

func (i GetServicePgUserConfigMigrationArgs) ToGetServicePgUserConfigMigrationPtrOutput() GetServicePgUserConfigMigrationPtrOutput {
	return i.ToGetServicePgUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (i GetServicePgUserConfigMigrationArgs) ToGetServicePgUserConfigMigrationPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePgUserConfigMigrationOutput).ToGetServicePgUserConfigMigrationPtrOutputWithContext(ctx)
}

// GetServicePgUserConfigMigrationPtrInput is an input type that accepts GetServicePgUserConfigMigrationArgs, GetServicePgUserConfigMigrationPtr and GetServicePgUserConfigMigrationPtrOutput values.
// You can construct a concrete instance of `GetServicePgUserConfigMigrationPtrInput` via:
//
//          GetServicePgUserConfigMigrationArgs{...}
//
//  or:
//
//          nil
type GetServicePgUserConfigMigrationPtrInput interface {
	pulumi.Input

	ToGetServicePgUserConfigMigrationPtrOutput() GetServicePgUserConfigMigrationPtrOutput
	ToGetServicePgUserConfigMigrationPtrOutputWithContext(context.Context) GetServicePgUserConfigMigrationPtrOutput
}

type getServicePgUserConfigMigrationPtrType GetServicePgUserConfigMigrationArgs

func GetServicePgUserConfigMigrationPtr(v *GetServicePgUserConfigMigrationArgs) GetServicePgUserConfigMigrationPtrInput {
	return (*getServicePgUserConfigMigrationPtrType)(v)
}

func (*getServicePgUserConfigMigrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServicePgUserConfigMigration)(nil)).Elem()
}

func (i *getServicePgUserConfigMigrationPtrType) ToGetServicePgUserConfigMigrationPtrOutput() GetServicePgUserConfigMigrationPtrOutput {
	return i.ToGetServicePgUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (i *getServicePgUserConfigMigrationPtrType) ToGetServicePgUserConfigMigrationPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePgUserConfigMigrationPtrOutput)
}

type GetServicePgUserConfigMigrationOutput struct{ *pulumi.OutputState }

func (GetServicePgUserConfigMigrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePgUserConfigMigration)(nil)).Elem()
}

func (o GetServicePgUserConfigMigrationOutput) ToGetServicePgUserConfigMigrationOutput() GetServicePgUserConfigMigrationOutput {
	return o
}

func (o GetServicePgUserConfigMigrationOutput) ToGetServicePgUserConfigMigrationOutputWithContext(ctx context.Context) GetServicePgUserConfigMigrationOutput {
	return o
}

func (o GetServicePgUserConfigMigrationOutput) ToGetServicePgUserConfigMigrationPtrOutput() GetServicePgUserConfigMigrationPtrOutput {
	return o.ToGetServicePgUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (o GetServicePgUserConfigMigrationOutput) ToGetServicePgUserConfigMigrationPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigMigration) *GetServicePgUserConfigMigration {
		return &v
	}).(GetServicePgUserConfigMigrationPtrOutput)
}
func (o GetServicePgUserConfigMigrationOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigMigration) *string { return v.Dbname }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigMigrationOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigMigration) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigMigrationOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigMigration) *string { return v.IgnoreDbs }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigMigrationOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigMigration) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigMigrationOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigMigration) *string { return v.Port }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigMigrationOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigMigration) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigMigrationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigMigration) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GetServicePgUserConfigMigrationPtrOutput struct{ *pulumi.OutputState }

func (GetServicePgUserConfigMigrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServicePgUserConfigMigration)(nil)).Elem()
}

func (o GetServicePgUserConfigMigrationPtrOutput) ToGetServicePgUserConfigMigrationPtrOutput() GetServicePgUserConfigMigrationPtrOutput {
	return o
}

func (o GetServicePgUserConfigMigrationPtrOutput) ToGetServicePgUserConfigMigrationPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigMigrationPtrOutput {
	return o
}

func (o GetServicePgUserConfigMigrationPtrOutput) Elem() GetServicePgUserConfigMigrationOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigMigration) GetServicePgUserConfigMigration { return *v }).(GetServicePgUserConfigMigrationOutput)
}

func (o GetServicePgUserConfigMigrationPtrOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Dbname
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigMigrationPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigMigrationPtrOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.IgnoreDbs
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigMigrationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigMigrationPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigMigrationPtrOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Ssl
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigMigrationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type GetServicePgUserConfigPg struct {
	AutovacuumAnalyzeScaleFactor    *string `pulumi:"autovacuumAnalyzeScaleFactor"`
	AutovacuumAnalyzeThreshold      *string `pulumi:"autovacuumAnalyzeThreshold"`
	AutovacuumFreezeMaxAge          *string `pulumi:"autovacuumFreezeMaxAge"`
	AutovacuumMaxWorkers            *string `pulumi:"autovacuumMaxWorkers"`
	AutovacuumNaptime               *string `pulumi:"autovacuumNaptime"`
	AutovacuumVacuumCostDelay       *string `pulumi:"autovacuumVacuumCostDelay"`
	AutovacuumVacuumCostLimit       *string `pulumi:"autovacuumVacuumCostLimit"`
	AutovacuumVacuumScaleFactor     *string `pulumi:"autovacuumVacuumScaleFactor"`
	AutovacuumVacuumThreshold       *string `pulumi:"autovacuumVacuumThreshold"`
	DeadlockTimeout                 *string `pulumi:"deadlockTimeout"`
	IdleInTransactionSessionTimeout *string `pulumi:"idleInTransactionSessionTimeout"`
	Jit                             *string `pulumi:"jit"`
	LogAutovacuumMinDuration        *string `pulumi:"logAutovacuumMinDuration"`
	LogErrorVerbosity               *string `pulumi:"logErrorVerbosity"`
	LogLinePrefix                   *string `pulumi:"logLinePrefix"`
	LogMinDurationStatement         *string `pulumi:"logMinDurationStatement"`
	MaxFilesPerProcess              *string `pulumi:"maxFilesPerProcess"`
	MaxLocksPerTransaction          *string `pulumi:"maxLocksPerTransaction"`
	MaxLogicalReplicationWorkers    *string `pulumi:"maxLogicalReplicationWorkers"`
	MaxParallelWorkers              *string `pulumi:"maxParallelWorkers"`
	MaxParallelWorkersPerGather     *string `pulumi:"maxParallelWorkersPerGather"`
	MaxPredLocksPerTransaction      *string `pulumi:"maxPredLocksPerTransaction"`
	MaxPreparedTransactions         *string `pulumi:"maxPreparedTransactions"`
	MaxReplicationSlots             *string `pulumi:"maxReplicationSlots"`
	MaxStackDepth                   *string `pulumi:"maxStackDepth"`
	MaxStandbyArchiveDelay          *string `pulumi:"maxStandbyArchiveDelay"`
	MaxStandbyStreamingDelay        *string `pulumi:"maxStandbyStreamingDelay"`
	MaxWalSenders                   *string `pulumi:"maxWalSenders"`
	MaxWorkerProcesses              *string `pulumi:"maxWorkerProcesses"`
	PgPartmanBgwInterval            *string `pulumi:"pgPartmanBgwInterval"`
	PgPartmanBgwRole                *string `pulumi:"pgPartmanBgwRole"`
	PgStatStatementsTrack           *string `pulumi:"pgStatStatementsTrack"`
	TempFileLimit                   *string `pulumi:"tempFileLimit"`
	Timezone                        *string `pulumi:"timezone"`
	TrackActivityQuerySize          *string `pulumi:"trackActivityQuerySize"`
	TrackCommitTimestamp            *string `pulumi:"trackCommitTimestamp"`
	TrackFunctions                  *string `pulumi:"trackFunctions"`
	WalSenderTimeout                *string `pulumi:"walSenderTimeout"`
	WalWriterDelay                  *string `pulumi:"walWriterDelay"`
}

// GetServicePgUserConfigPgInput is an input type that accepts GetServicePgUserConfigPgArgs and GetServicePgUserConfigPgOutput values.
// You can construct a concrete instance of `GetServicePgUserConfigPgInput` via:
//
//          GetServicePgUserConfigPgArgs{...}
type GetServicePgUserConfigPgInput interface {
	pulumi.Input

	ToGetServicePgUserConfigPgOutput() GetServicePgUserConfigPgOutput
	ToGetServicePgUserConfigPgOutputWithContext(context.Context) GetServicePgUserConfigPgOutput
}

type GetServicePgUserConfigPgArgs struct {
	AutovacuumAnalyzeScaleFactor    pulumi.StringPtrInput `pulumi:"autovacuumAnalyzeScaleFactor"`
	AutovacuumAnalyzeThreshold      pulumi.StringPtrInput `pulumi:"autovacuumAnalyzeThreshold"`
	AutovacuumFreezeMaxAge          pulumi.StringPtrInput `pulumi:"autovacuumFreezeMaxAge"`
	AutovacuumMaxWorkers            pulumi.StringPtrInput `pulumi:"autovacuumMaxWorkers"`
	AutovacuumNaptime               pulumi.StringPtrInput `pulumi:"autovacuumNaptime"`
	AutovacuumVacuumCostDelay       pulumi.StringPtrInput `pulumi:"autovacuumVacuumCostDelay"`
	AutovacuumVacuumCostLimit       pulumi.StringPtrInput `pulumi:"autovacuumVacuumCostLimit"`
	AutovacuumVacuumScaleFactor     pulumi.StringPtrInput `pulumi:"autovacuumVacuumScaleFactor"`
	AutovacuumVacuumThreshold       pulumi.StringPtrInput `pulumi:"autovacuumVacuumThreshold"`
	DeadlockTimeout                 pulumi.StringPtrInput `pulumi:"deadlockTimeout"`
	IdleInTransactionSessionTimeout pulumi.StringPtrInput `pulumi:"idleInTransactionSessionTimeout"`
	Jit                             pulumi.StringPtrInput `pulumi:"jit"`
	LogAutovacuumMinDuration        pulumi.StringPtrInput `pulumi:"logAutovacuumMinDuration"`
	LogErrorVerbosity               pulumi.StringPtrInput `pulumi:"logErrorVerbosity"`
	LogLinePrefix                   pulumi.StringPtrInput `pulumi:"logLinePrefix"`
	LogMinDurationStatement         pulumi.StringPtrInput `pulumi:"logMinDurationStatement"`
	MaxFilesPerProcess              pulumi.StringPtrInput `pulumi:"maxFilesPerProcess"`
	MaxLocksPerTransaction          pulumi.StringPtrInput `pulumi:"maxLocksPerTransaction"`
	MaxLogicalReplicationWorkers    pulumi.StringPtrInput `pulumi:"maxLogicalReplicationWorkers"`
	MaxParallelWorkers              pulumi.StringPtrInput `pulumi:"maxParallelWorkers"`
	MaxParallelWorkersPerGather     pulumi.StringPtrInput `pulumi:"maxParallelWorkersPerGather"`
	MaxPredLocksPerTransaction      pulumi.StringPtrInput `pulumi:"maxPredLocksPerTransaction"`
	MaxPreparedTransactions         pulumi.StringPtrInput `pulumi:"maxPreparedTransactions"`
	MaxReplicationSlots             pulumi.StringPtrInput `pulumi:"maxReplicationSlots"`
	MaxStackDepth                   pulumi.StringPtrInput `pulumi:"maxStackDepth"`
	MaxStandbyArchiveDelay          pulumi.StringPtrInput `pulumi:"maxStandbyArchiveDelay"`
	MaxStandbyStreamingDelay        pulumi.StringPtrInput `pulumi:"maxStandbyStreamingDelay"`
	MaxWalSenders                   pulumi.StringPtrInput `pulumi:"maxWalSenders"`
	MaxWorkerProcesses              pulumi.StringPtrInput `pulumi:"maxWorkerProcesses"`
	PgPartmanBgwInterval            pulumi.StringPtrInput `pulumi:"pgPartmanBgwInterval"`
	PgPartmanBgwRole                pulumi.StringPtrInput `pulumi:"pgPartmanBgwRole"`
	PgStatStatementsTrack           pulumi.StringPtrInput `pulumi:"pgStatStatementsTrack"`
	TempFileLimit                   pulumi.StringPtrInput `pulumi:"tempFileLimit"`
	Timezone                        pulumi.StringPtrInput `pulumi:"timezone"`
	TrackActivityQuerySize          pulumi.StringPtrInput `pulumi:"trackActivityQuerySize"`
	TrackCommitTimestamp            pulumi.StringPtrInput `pulumi:"trackCommitTimestamp"`
	TrackFunctions                  pulumi.StringPtrInput `pulumi:"trackFunctions"`
	WalSenderTimeout                pulumi.StringPtrInput `pulumi:"walSenderTimeout"`
	WalWriterDelay                  pulumi.StringPtrInput `pulumi:"walWriterDelay"`
}

func (GetServicePgUserConfigPgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePgUserConfigPg)(nil)).Elem()
}

func (i GetServicePgUserConfigPgArgs) ToGetServicePgUserConfigPgOutput() GetServicePgUserConfigPgOutput {
	return i.ToGetServicePgUserConfigPgOutputWithContext(context.Background())
}

func (i GetServicePgUserConfigPgArgs) ToGetServicePgUserConfigPgOutputWithContext(ctx context.Context) GetServicePgUserConfigPgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePgUserConfigPgOutput)
}

func (i GetServicePgUserConfigPgArgs) ToGetServicePgUserConfigPgPtrOutput() GetServicePgUserConfigPgPtrOutput {
	return i.ToGetServicePgUserConfigPgPtrOutputWithContext(context.Background())
}

func (i GetServicePgUserConfigPgArgs) ToGetServicePgUserConfigPgPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigPgPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePgUserConfigPgOutput).ToGetServicePgUserConfigPgPtrOutputWithContext(ctx)
}

// GetServicePgUserConfigPgPtrInput is an input type that accepts GetServicePgUserConfigPgArgs, GetServicePgUserConfigPgPtr and GetServicePgUserConfigPgPtrOutput values.
// You can construct a concrete instance of `GetServicePgUserConfigPgPtrInput` via:
//
//          GetServicePgUserConfigPgArgs{...}
//
//  or:
//
//          nil
type GetServicePgUserConfigPgPtrInput interface {
	pulumi.Input

	ToGetServicePgUserConfigPgPtrOutput() GetServicePgUserConfigPgPtrOutput
	ToGetServicePgUserConfigPgPtrOutputWithContext(context.Context) GetServicePgUserConfigPgPtrOutput
}

type getServicePgUserConfigPgPtrType GetServicePgUserConfigPgArgs

func GetServicePgUserConfigPgPtr(v *GetServicePgUserConfigPgArgs) GetServicePgUserConfigPgPtrInput {
	return (*getServicePgUserConfigPgPtrType)(v)
}

func (*getServicePgUserConfigPgPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServicePgUserConfigPg)(nil)).Elem()
}

func (i *getServicePgUserConfigPgPtrType) ToGetServicePgUserConfigPgPtrOutput() GetServicePgUserConfigPgPtrOutput {
	return i.ToGetServicePgUserConfigPgPtrOutputWithContext(context.Background())
}

func (i *getServicePgUserConfigPgPtrType) ToGetServicePgUserConfigPgPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigPgPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePgUserConfigPgPtrOutput)
}

type GetServicePgUserConfigPgOutput struct{ *pulumi.OutputState }

func (GetServicePgUserConfigPgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePgUserConfigPg)(nil)).Elem()
}

func (o GetServicePgUserConfigPgOutput) ToGetServicePgUserConfigPgOutput() GetServicePgUserConfigPgOutput {
	return o
}

func (o GetServicePgUserConfigPgOutput) ToGetServicePgUserConfigPgOutputWithContext(ctx context.Context) GetServicePgUserConfigPgOutput {
	return o
}

func (o GetServicePgUserConfigPgOutput) ToGetServicePgUserConfigPgPtrOutput() GetServicePgUserConfigPgPtrOutput {
	return o.ToGetServicePgUserConfigPgPtrOutputWithContext(context.Background())
}

func (o GetServicePgUserConfigPgOutput) ToGetServicePgUserConfigPgPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigPgPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *GetServicePgUserConfigPg {
		return &v
	}).(GetServicePgUserConfigPgPtrOutput)
}
func (o GetServicePgUserConfigPgOutput) AutovacuumAnalyzeScaleFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.AutovacuumAnalyzeScaleFactor }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) AutovacuumAnalyzeThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.AutovacuumAnalyzeThreshold }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) AutovacuumFreezeMaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.AutovacuumFreezeMaxAge }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) AutovacuumMaxWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.AutovacuumMaxWorkers }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) AutovacuumNaptime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.AutovacuumNaptime }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) AutovacuumVacuumCostDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.AutovacuumVacuumCostDelay }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) AutovacuumVacuumCostLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.AutovacuumVacuumCostLimit }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) AutovacuumVacuumScaleFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.AutovacuumVacuumScaleFactor }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) AutovacuumVacuumThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.AutovacuumVacuumThreshold }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) DeadlockTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.DeadlockTimeout }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) IdleInTransactionSessionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.IdleInTransactionSessionTimeout }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) Jit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.Jit }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) LogAutovacuumMinDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.LogAutovacuumMinDuration }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) LogErrorVerbosity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.LogErrorVerbosity }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) LogLinePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.LogLinePrefix }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) LogMinDurationStatement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.LogMinDurationStatement }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) MaxFilesPerProcess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.MaxFilesPerProcess }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) MaxLocksPerTransaction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.MaxLocksPerTransaction }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) MaxLogicalReplicationWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.MaxLogicalReplicationWorkers }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) MaxParallelWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.MaxParallelWorkers }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) MaxParallelWorkersPerGather() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.MaxParallelWorkersPerGather }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) MaxPredLocksPerTransaction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.MaxPredLocksPerTransaction }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) MaxPreparedTransactions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.MaxPreparedTransactions }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) MaxReplicationSlots() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.MaxReplicationSlots }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) MaxStackDepth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.MaxStackDepth }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) MaxStandbyArchiveDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.MaxStandbyArchiveDelay }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) MaxStandbyStreamingDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.MaxStandbyStreamingDelay }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) MaxWalSenders() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.MaxWalSenders }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) MaxWorkerProcesses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.MaxWorkerProcesses }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) PgPartmanBgwInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.PgPartmanBgwInterval }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) PgPartmanBgwRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.PgPartmanBgwRole }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) PgStatStatementsTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.PgStatStatementsTrack }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) TempFileLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.TempFileLimit }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) TrackActivityQuerySize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.TrackActivityQuerySize }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) TrackCommitTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.TrackCommitTimestamp }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) TrackFunctions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.TrackFunctions }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) WalSenderTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.WalSenderTimeout }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgOutput) WalWriterDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPg) *string { return v.WalWriterDelay }).(pulumi.StringPtrOutput)
}

type GetServicePgUserConfigPgPtrOutput struct{ *pulumi.OutputState }

func (GetServicePgUserConfigPgPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServicePgUserConfigPg)(nil)).Elem()
}

func (o GetServicePgUserConfigPgPtrOutput) ToGetServicePgUserConfigPgPtrOutput() GetServicePgUserConfigPgPtrOutput {
	return o
}

func (o GetServicePgUserConfigPgPtrOutput) ToGetServicePgUserConfigPgPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigPgPtrOutput {
	return o
}

func (o GetServicePgUserConfigPgPtrOutput) Elem() GetServicePgUserConfigPgOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) GetServicePgUserConfigPg { return *v }).(GetServicePgUserConfigPgOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) AutovacuumAnalyzeScaleFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumAnalyzeScaleFactor
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) AutovacuumAnalyzeThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumAnalyzeThreshold
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) AutovacuumFreezeMaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumFreezeMaxAge
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) AutovacuumMaxWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumMaxWorkers
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) AutovacuumNaptime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumNaptime
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) AutovacuumVacuumCostDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumVacuumCostDelay
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) AutovacuumVacuumCostLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumVacuumCostLimit
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) AutovacuumVacuumScaleFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumVacuumScaleFactor
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) AutovacuumVacuumThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.AutovacuumVacuumThreshold
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) DeadlockTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.DeadlockTimeout
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) IdleInTransactionSessionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.IdleInTransactionSessionTimeout
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) Jit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.Jit
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) LogAutovacuumMinDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.LogAutovacuumMinDuration
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) LogErrorVerbosity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.LogErrorVerbosity
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) LogLinePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.LogLinePrefix
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) LogMinDurationStatement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.LogMinDurationStatement
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) MaxFilesPerProcess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxFilesPerProcess
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) MaxLocksPerTransaction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxLocksPerTransaction
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) MaxLogicalReplicationWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxLogicalReplicationWorkers
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) MaxParallelWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxParallelWorkers
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) MaxParallelWorkersPerGather() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxParallelWorkersPerGather
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) MaxPredLocksPerTransaction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxPredLocksPerTransaction
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) MaxPreparedTransactions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxPreparedTransactions
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) MaxReplicationSlots() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxReplicationSlots
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) MaxStackDepth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxStackDepth
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) MaxStandbyArchiveDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxStandbyArchiveDelay
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) MaxStandbyStreamingDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxStandbyStreamingDelay
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) MaxWalSenders() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxWalSenders
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) MaxWorkerProcesses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.MaxWorkerProcesses
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) PgPartmanBgwInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.PgPartmanBgwInterval
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) PgPartmanBgwRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.PgPartmanBgwRole
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) PgStatStatementsTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.PgStatStatementsTrack
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) TempFileLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.TempFileLimit
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.Timezone
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) TrackActivityQuerySize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.TrackActivityQuerySize
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) TrackCommitTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.TrackCommitTimestamp
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) TrackFunctions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.TrackFunctions
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) WalSenderTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.WalSenderTimeout
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgPtrOutput) WalWriterDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPg) *string {
		if v == nil {
			return nil
		}
		return v.WalWriterDelay
	}).(pulumi.StringPtrOutput)
}

type GetServicePgUserConfigPgbouncer struct {
	AutodbIdleTimeout       *string  `pulumi:"autodbIdleTimeout"`
	AutodbMaxDbConnections  *string  `pulumi:"autodbMaxDbConnections"`
	AutodbPoolMode          *string  `pulumi:"autodbPoolMode"`
	AutodbPoolSize          *string  `pulumi:"autodbPoolSize"`
	IgnoreStartupParameters []string `pulumi:"ignoreStartupParameters"`
	MinPoolSize             *string  `pulumi:"minPoolSize"`
	ServerIdleTimeout       *string  `pulumi:"serverIdleTimeout"`
	ServerLifetime          *string  `pulumi:"serverLifetime"`
	ServerResetQueryAlways  *string  `pulumi:"serverResetQueryAlways"`
}

// GetServicePgUserConfigPgbouncerInput is an input type that accepts GetServicePgUserConfigPgbouncerArgs and GetServicePgUserConfigPgbouncerOutput values.
// You can construct a concrete instance of `GetServicePgUserConfigPgbouncerInput` via:
//
//          GetServicePgUserConfigPgbouncerArgs{...}
type GetServicePgUserConfigPgbouncerInput interface {
	pulumi.Input

	ToGetServicePgUserConfigPgbouncerOutput() GetServicePgUserConfigPgbouncerOutput
	ToGetServicePgUserConfigPgbouncerOutputWithContext(context.Context) GetServicePgUserConfigPgbouncerOutput
}

type GetServicePgUserConfigPgbouncerArgs struct {
	AutodbIdleTimeout       pulumi.StringPtrInput   `pulumi:"autodbIdleTimeout"`
	AutodbMaxDbConnections  pulumi.StringPtrInput   `pulumi:"autodbMaxDbConnections"`
	AutodbPoolMode          pulumi.StringPtrInput   `pulumi:"autodbPoolMode"`
	AutodbPoolSize          pulumi.StringPtrInput   `pulumi:"autodbPoolSize"`
	IgnoreStartupParameters pulumi.StringArrayInput `pulumi:"ignoreStartupParameters"`
	MinPoolSize             pulumi.StringPtrInput   `pulumi:"minPoolSize"`
	ServerIdleTimeout       pulumi.StringPtrInput   `pulumi:"serverIdleTimeout"`
	ServerLifetime          pulumi.StringPtrInput   `pulumi:"serverLifetime"`
	ServerResetQueryAlways  pulumi.StringPtrInput   `pulumi:"serverResetQueryAlways"`
}

func (GetServicePgUserConfigPgbouncerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePgUserConfigPgbouncer)(nil)).Elem()
}

func (i GetServicePgUserConfigPgbouncerArgs) ToGetServicePgUserConfigPgbouncerOutput() GetServicePgUserConfigPgbouncerOutput {
	return i.ToGetServicePgUserConfigPgbouncerOutputWithContext(context.Background())
}

func (i GetServicePgUserConfigPgbouncerArgs) ToGetServicePgUserConfigPgbouncerOutputWithContext(ctx context.Context) GetServicePgUserConfigPgbouncerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePgUserConfigPgbouncerOutput)
}

func (i GetServicePgUserConfigPgbouncerArgs) ToGetServicePgUserConfigPgbouncerPtrOutput() GetServicePgUserConfigPgbouncerPtrOutput {
	return i.ToGetServicePgUserConfigPgbouncerPtrOutputWithContext(context.Background())
}

func (i GetServicePgUserConfigPgbouncerArgs) ToGetServicePgUserConfigPgbouncerPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigPgbouncerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePgUserConfigPgbouncerOutput).ToGetServicePgUserConfigPgbouncerPtrOutputWithContext(ctx)
}

// GetServicePgUserConfigPgbouncerPtrInput is an input type that accepts GetServicePgUserConfigPgbouncerArgs, GetServicePgUserConfigPgbouncerPtr and GetServicePgUserConfigPgbouncerPtrOutput values.
// You can construct a concrete instance of `GetServicePgUserConfigPgbouncerPtrInput` via:
//
//          GetServicePgUserConfigPgbouncerArgs{...}
//
//  or:
//
//          nil
type GetServicePgUserConfigPgbouncerPtrInput interface {
	pulumi.Input

	ToGetServicePgUserConfigPgbouncerPtrOutput() GetServicePgUserConfigPgbouncerPtrOutput
	ToGetServicePgUserConfigPgbouncerPtrOutputWithContext(context.Context) GetServicePgUserConfigPgbouncerPtrOutput
}

type getServicePgUserConfigPgbouncerPtrType GetServicePgUserConfigPgbouncerArgs

func GetServicePgUserConfigPgbouncerPtr(v *GetServicePgUserConfigPgbouncerArgs) GetServicePgUserConfigPgbouncerPtrInput {
	return (*getServicePgUserConfigPgbouncerPtrType)(v)
}

func (*getServicePgUserConfigPgbouncerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServicePgUserConfigPgbouncer)(nil)).Elem()
}

func (i *getServicePgUserConfigPgbouncerPtrType) ToGetServicePgUserConfigPgbouncerPtrOutput() GetServicePgUserConfigPgbouncerPtrOutput {
	return i.ToGetServicePgUserConfigPgbouncerPtrOutputWithContext(context.Background())
}

func (i *getServicePgUserConfigPgbouncerPtrType) ToGetServicePgUserConfigPgbouncerPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigPgbouncerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePgUserConfigPgbouncerPtrOutput)
}

type GetServicePgUserConfigPgbouncerOutput struct{ *pulumi.OutputState }

func (GetServicePgUserConfigPgbouncerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePgUserConfigPgbouncer)(nil)).Elem()
}

func (o GetServicePgUserConfigPgbouncerOutput) ToGetServicePgUserConfigPgbouncerOutput() GetServicePgUserConfigPgbouncerOutput {
	return o
}

func (o GetServicePgUserConfigPgbouncerOutput) ToGetServicePgUserConfigPgbouncerOutputWithContext(ctx context.Context) GetServicePgUserConfigPgbouncerOutput {
	return o
}

func (o GetServicePgUserConfigPgbouncerOutput) ToGetServicePgUserConfigPgbouncerPtrOutput() GetServicePgUserConfigPgbouncerPtrOutput {
	return o.ToGetServicePgUserConfigPgbouncerPtrOutputWithContext(context.Background())
}

func (o GetServicePgUserConfigPgbouncerOutput) ToGetServicePgUserConfigPgbouncerPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigPgbouncerPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPgbouncer) *GetServicePgUserConfigPgbouncer {
		return &v
	}).(GetServicePgUserConfigPgbouncerPtrOutput)
}
func (o GetServicePgUserConfigPgbouncerOutput) AutodbIdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPgbouncer) *string { return v.AutodbIdleTimeout }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgbouncerOutput) AutodbMaxDbConnections() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPgbouncer) *string { return v.AutodbMaxDbConnections }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgbouncerOutput) AutodbPoolMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPgbouncer) *string { return v.AutodbPoolMode }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgbouncerOutput) AutodbPoolSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPgbouncer) *string { return v.AutodbPoolSize }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgbouncerOutput) IgnoreStartupParameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPgbouncer) []string { return v.IgnoreStartupParameters }).(pulumi.StringArrayOutput)
}

func (o GetServicePgUserConfigPgbouncerOutput) MinPoolSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPgbouncer) *string { return v.MinPoolSize }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgbouncerOutput) ServerIdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPgbouncer) *string { return v.ServerIdleTimeout }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgbouncerOutput) ServerLifetime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPgbouncer) *string { return v.ServerLifetime }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgbouncerOutput) ServerResetQueryAlways() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPgbouncer) *string { return v.ServerResetQueryAlways }).(pulumi.StringPtrOutput)
}

type GetServicePgUserConfigPgbouncerPtrOutput struct{ *pulumi.OutputState }

func (GetServicePgUserConfigPgbouncerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServicePgUserConfigPgbouncer)(nil)).Elem()
}

func (o GetServicePgUserConfigPgbouncerPtrOutput) ToGetServicePgUserConfigPgbouncerPtrOutput() GetServicePgUserConfigPgbouncerPtrOutput {
	return o
}

func (o GetServicePgUserConfigPgbouncerPtrOutput) ToGetServicePgUserConfigPgbouncerPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigPgbouncerPtrOutput {
	return o
}

func (o GetServicePgUserConfigPgbouncerPtrOutput) Elem() GetServicePgUserConfigPgbouncerOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPgbouncer) GetServicePgUserConfigPgbouncer { return *v }).(GetServicePgUserConfigPgbouncerOutput)
}

func (o GetServicePgUserConfigPgbouncerPtrOutput) AutodbIdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.AutodbIdleTimeout
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgbouncerPtrOutput) AutodbMaxDbConnections() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.AutodbMaxDbConnections
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgbouncerPtrOutput) AutodbPoolMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.AutodbPoolMode
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgbouncerPtrOutput) AutodbPoolSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.AutodbPoolSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgbouncerPtrOutput) IgnoreStartupParameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPgbouncer) []string {
		if v == nil {
			return nil
		}
		return v.IgnoreStartupParameters
	}).(pulumi.StringArrayOutput)
}

func (o GetServicePgUserConfigPgbouncerPtrOutput) MinPoolSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.MinPoolSize
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgbouncerPtrOutput) ServerIdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.ServerIdleTimeout
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgbouncerPtrOutput) ServerLifetime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.ServerLifetime
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPgbouncerPtrOutput) ServerResetQueryAlways() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.ServerResetQueryAlways
	}).(pulumi.StringPtrOutput)
}

type GetServicePgUserConfigPglookout struct {
	MaxFailoverReplicationTimeLag *string `pulumi:"maxFailoverReplicationTimeLag"`
}

// GetServicePgUserConfigPglookoutInput is an input type that accepts GetServicePgUserConfigPglookoutArgs and GetServicePgUserConfigPglookoutOutput values.
// You can construct a concrete instance of `GetServicePgUserConfigPglookoutInput` via:
//
//          GetServicePgUserConfigPglookoutArgs{...}
type GetServicePgUserConfigPglookoutInput interface {
	pulumi.Input

	ToGetServicePgUserConfigPglookoutOutput() GetServicePgUserConfigPglookoutOutput
	ToGetServicePgUserConfigPglookoutOutputWithContext(context.Context) GetServicePgUserConfigPglookoutOutput
}

type GetServicePgUserConfigPglookoutArgs struct {
	MaxFailoverReplicationTimeLag pulumi.StringPtrInput `pulumi:"maxFailoverReplicationTimeLag"`
}

func (GetServicePgUserConfigPglookoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePgUserConfigPglookout)(nil)).Elem()
}

func (i GetServicePgUserConfigPglookoutArgs) ToGetServicePgUserConfigPglookoutOutput() GetServicePgUserConfigPglookoutOutput {
	return i.ToGetServicePgUserConfigPglookoutOutputWithContext(context.Background())
}

func (i GetServicePgUserConfigPglookoutArgs) ToGetServicePgUserConfigPglookoutOutputWithContext(ctx context.Context) GetServicePgUserConfigPglookoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePgUserConfigPglookoutOutput)
}

func (i GetServicePgUserConfigPglookoutArgs) ToGetServicePgUserConfigPglookoutPtrOutput() GetServicePgUserConfigPglookoutPtrOutput {
	return i.ToGetServicePgUserConfigPglookoutPtrOutputWithContext(context.Background())
}

func (i GetServicePgUserConfigPglookoutArgs) ToGetServicePgUserConfigPglookoutPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigPglookoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePgUserConfigPglookoutOutput).ToGetServicePgUserConfigPglookoutPtrOutputWithContext(ctx)
}

// GetServicePgUserConfigPglookoutPtrInput is an input type that accepts GetServicePgUserConfigPglookoutArgs, GetServicePgUserConfigPglookoutPtr and GetServicePgUserConfigPglookoutPtrOutput values.
// You can construct a concrete instance of `GetServicePgUserConfigPglookoutPtrInput` via:
//
//          GetServicePgUserConfigPglookoutArgs{...}
//
//  or:
//
//          nil
type GetServicePgUserConfigPglookoutPtrInput interface {
	pulumi.Input

	ToGetServicePgUserConfigPglookoutPtrOutput() GetServicePgUserConfigPglookoutPtrOutput
	ToGetServicePgUserConfigPglookoutPtrOutputWithContext(context.Context) GetServicePgUserConfigPglookoutPtrOutput
}

type getServicePgUserConfigPglookoutPtrType GetServicePgUserConfigPglookoutArgs

func GetServicePgUserConfigPglookoutPtr(v *GetServicePgUserConfigPglookoutArgs) GetServicePgUserConfigPglookoutPtrInput {
	return (*getServicePgUserConfigPglookoutPtrType)(v)
}

func (*getServicePgUserConfigPglookoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServicePgUserConfigPglookout)(nil)).Elem()
}

func (i *getServicePgUserConfigPglookoutPtrType) ToGetServicePgUserConfigPglookoutPtrOutput() GetServicePgUserConfigPglookoutPtrOutput {
	return i.ToGetServicePgUserConfigPglookoutPtrOutputWithContext(context.Background())
}

func (i *getServicePgUserConfigPglookoutPtrType) ToGetServicePgUserConfigPglookoutPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigPglookoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePgUserConfigPglookoutPtrOutput)
}

type GetServicePgUserConfigPglookoutOutput struct{ *pulumi.OutputState }

func (GetServicePgUserConfigPglookoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePgUserConfigPglookout)(nil)).Elem()
}

func (o GetServicePgUserConfigPglookoutOutput) ToGetServicePgUserConfigPglookoutOutput() GetServicePgUserConfigPglookoutOutput {
	return o
}

func (o GetServicePgUserConfigPglookoutOutput) ToGetServicePgUserConfigPglookoutOutputWithContext(ctx context.Context) GetServicePgUserConfigPglookoutOutput {
	return o
}

func (o GetServicePgUserConfigPglookoutOutput) ToGetServicePgUserConfigPglookoutPtrOutput() GetServicePgUserConfigPglookoutPtrOutput {
	return o.ToGetServicePgUserConfigPglookoutPtrOutputWithContext(context.Background())
}

func (o GetServicePgUserConfigPglookoutOutput) ToGetServicePgUserConfigPglookoutPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigPglookoutPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPglookout) *GetServicePgUserConfigPglookout {
		return &v
	}).(GetServicePgUserConfigPglookoutPtrOutput)
}
func (o GetServicePgUserConfigPglookoutOutput) MaxFailoverReplicationTimeLag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPglookout) *string { return v.MaxFailoverReplicationTimeLag }).(pulumi.StringPtrOutput)
}

type GetServicePgUserConfigPglookoutPtrOutput struct{ *pulumi.OutputState }

func (GetServicePgUserConfigPglookoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServicePgUserConfigPglookout)(nil)).Elem()
}

func (o GetServicePgUserConfigPglookoutPtrOutput) ToGetServicePgUserConfigPglookoutPtrOutput() GetServicePgUserConfigPglookoutPtrOutput {
	return o
}

func (o GetServicePgUserConfigPglookoutPtrOutput) ToGetServicePgUserConfigPglookoutPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigPglookoutPtrOutput {
	return o
}

func (o GetServicePgUserConfigPglookoutPtrOutput) Elem() GetServicePgUserConfigPglookoutOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPglookout) GetServicePgUserConfigPglookout { return *v }).(GetServicePgUserConfigPglookoutOutput)
}

func (o GetServicePgUserConfigPglookoutPtrOutput) MaxFailoverReplicationTimeLag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPglookout) *string {
		if v == nil {
			return nil
		}
		return v.MaxFailoverReplicationTimeLag
	}).(pulumi.StringPtrOutput)
}

type GetServicePgUserConfigPrivateAccess struct {
	Pg         *string `pulumi:"pg"`
	Pgbouncer  *string `pulumi:"pgbouncer"`
	Prometheus *string `pulumi:"prometheus"`
}

// GetServicePgUserConfigPrivateAccessInput is an input type that accepts GetServicePgUserConfigPrivateAccessArgs and GetServicePgUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `GetServicePgUserConfigPrivateAccessInput` via:
//
//          GetServicePgUserConfigPrivateAccessArgs{...}
type GetServicePgUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToGetServicePgUserConfigPrivateAccessOutput() GetServicePgUserConfigPrivateAccessOutput
	ToGetServicePgUserConfigPrivateAccessOutputWithContext(context.Context) GetServicePgUserConfigPrivateAccessOutput
}

type GetServicePgUserConfigPrivateAccessArgs struct {
	Pg         pulumi.StringPtrInput `pulumi:"pg"`
	Pgbouncer  pulumi.StringPtrInput `pulumi:"pgbouncer"`
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (GetServicePgUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePgUserConfigPrivateAccess)(nil)).Elem()
}

func (i GetServicePgUserConfigPrivateAccessArgs) ToGetServicePgUserConfigPrivateAccessOutput() GetServicePgUserConfigPrivateAccessOutput {
	return i.ToGetServicePgUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i GetServicePgUserConfigPrivateAccessArgs) ToGetServicePgUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetServicePgUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePgUserConfigPrivateAccessOutput)
}

func (i GetServicePgUserConfigPrivateAccessArgs) ToGetServicePgUserConfigPrivateAccessPtrOutput() GetServicePgUserConfigPrivateAccessPtrOutput {
	return i.ToGetServicePgUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i GetServicePgUserConfigPrivateAccessArgs) ToGetServicePgUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePgUserConfigPrivateAccessOutput).ToGetServicePgUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// GetServicePgUserConfigPrivateAccessPtrInput is an input type that accepts GetServicePgUserConfigPrivateAccessArgs, GetServicePgUserConfigPrivateAccessPtr and GetServicePgUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `GetServicePgUserConfigPrivateAccessPtrInput` via:
//
//          GetServicePgUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type GetServicePgUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToGetServicePgUserConfigPrivateAccessPtrOutput() GetServicePgUserConfigPrivateAccessPtrOutput
	ToGetServicePgUserConfigPrivateAccessPtrOutputWithContext(context.Context) GetServicePgUserConfigPrivateAccessPtrOutput
}

type getServicePgUserConfigPrivateAccessPtrType GetServicePgUserConfigPrivateAccessArgs

func GetServicePgUserConfigPrivateAccessPtr(v *GetServicePgUserConfigPrivateAccessArgs) GetServicePgUserConfigPrivateAccessPtrInput {
	return (*getServicePgUserConfigPrivateAccessPtrType)(v)
}

func (*getServicePgUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServicePgUserConfigPrivateAccess)(nil)).Elem()
}

func (i *getServicePgUserConfigPrivateAccessPtrType) ToGetServicePgUserConfigPrivateAccessPtrOutput() GetServicePgUserConfigPrivateAccessPtrOutput {
	return i.ToGetServicePgUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *getServicePgUserConfigPrivateAccessPtrType) ToGetServicePgUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePgUserConfigPrivateAccessPtrOutput)
}

type GetServicePgUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (GetServicePgUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePgUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetServicePgUserConfigPrivateAccessOutput) ToGetServicePgUserConfigPrivateAccessOutput() GetServicePgUserConfigPrivateAccessOutput {
	return o
}

func (o GetServicePgUserConfigPrivateAccessOutput) ToGetServicePgUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetServicePgUserConfigPrivateAccessOutput {
	return o
}

func (o GetServicePgUserConfigPrivateAccessOutput) ToGetServicePgUserConfigPrivateAccessPtrOutput() GetServicePgUserConfigPrivateAccessPtrOutput {
	return o.ToGetServicePgUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o GetServicePgUserConfigPrivateAccessOutput) ToGetServicePgUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPrivateAccess) *GetServicePgUserConfigPrivateAccess {
		return &v
	}).(GetServicePgUserConfigPrivateAccessPtrOutput)
}
func (o GetServicePgUserConfigPrivateAccessOutput) Pg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPrivateAccess) *string { return v.Pg }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPrivateAccessOutput) Pgbouncer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPrivateAccess) *string { return v.Pgbouncer }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type GetServicePgUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (GetServicePgUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServicePgUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetServicePgUserConfigPrivateAccessPtrOutput) ToGetServicePgUserConfigPrivateAccessPtrOutput() GetServicePgUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetServicePgUserConfigPrivateAccessPtrOutput) ToGetServicePgUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetServicePgUserConfigPrivateAccessPtrOutput) Elem() GetServicePgUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPrivateAccess) GetServicePgUserConfigPrivateAccess { return *v }).(GetServicePgUserConfigPrivateAccessOutput)
}

func (o GetServicePgUserConfigPrivateAccessPtrOutput) Pg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Pg
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPrivateAccessPtrOutput) Pgbouncer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Pgbouncer
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type GetServicePgUserConfigPrivatelinkAccess struct {
	Pg        *string `pulumi:"pg"`
	Pgbouncer *string `pulumi:"pgbouncer"`
}

// GetServicePgUserConfigPrivatelinkAccessInput is an input type that accepts GetServicePgUserConfigPrivatelinkAccessArgs and GetServicePgUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `GetServicePgUserConfigPrivatelinkAccessInput` via:
//
//          GetServicePgUserConfigPrivatelinkAccessArgs{...}
type GetServicePgUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToGetServicePgUserConfigPrivatelinkAccessOutput() GetServicePgUserConfigPrivatelinkAccessOutput
	ToGetServicePgUserConfigPrivatelinkAccessOutputWithContext(context.Context) GetServicePgUserConfigPrivatelinkAccessOutput
}

type GetServicePgUserConfigPrivatelinkAccessArgs struct {
	Pg        pulumi.StringPtrInput `pulumi:"pg"`
	Pgbouncer pulumi.StringPtrInput `pulumi:"pgbouncer"`
}

func (GetServicePgUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePgUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i GetServicePgUserConfigPrivatelinkAccessArgs) ToGetServicePgUserConfigPrivatelinkAccessOutput() GetServicePgUserConfigPrivatelinkAccessOutput {
	return i.ToGetServicePgUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i GetServicePgUserConfigPrivatelinkAccessArgs) ToGetServicePgUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetServicePgUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePgUserConfigPrivatelinkAccessOutput)
}

func (i GetServicePgUserConfigPrivatelinkAccessArgs) ToGetServicePgUserConfigPrivatelinkAccessPtrOutput() GetServicePgUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetServicePgUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i GetServicePgUserConfigPrivatelinkAccessArgs) ToGetServicePgUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePgUserConfigPrivatelinkAccessOutput).ToGetServicePgUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// GetServicePgUserConfigPrivatelinkAccessPtrInput is an input type that accepts GetServicePgUserConfigPrivatelinkAccessArgs, GetServicePgUserConfigPrivatelinkAccessPtr and GetServicePgUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `GetServicePgUserConfigPrivatelinkAccessPtrInput` via:
//
//          GetServicePgUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type GetServicePgUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToGetServicePgUserConfigPrivatelinkAccessPtrOutput() GetServicePgUserConfigPrivatelinkAccessPtrOutput
	ToGetServicePgUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) GetServicePgUserConfigPrivatelinkAccessPtrOutput
}

type getServicePgUserConfigPrivatelinkAccessPtrType GetServicePgUserConfigPrivatelinkAccessArgs

func GetServicePgUserConfigPrivatelinkAccessPtr(v *GetServicePgUserConfigPrivatelinkAccessArgs) GetServicePgUserConfigPrivatelinkAccessPtrInput {
	return (*getServicePgUserConfigPrivatelinkAccessPtrType)(v)
}

func (*getServicePgUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServicePgUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *getServicePgUserConfigPrivatelinkAccessPtrType) ToGetServicePgUserConfigPrivatelinkAccessPtrOutput() GetServicePgUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetServicePgUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *getServicePgUserConfigPrivatelinkAccessPtrType) ToGetServicePgUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePgUserConfigPrivatelinkAccessPtrOutput)
}

type GetServicePgUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (GetServicePgUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePgUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetServicePgUserConfigPrivatelinkAccessOutput) ToGetServicePgUserConfigPrivatelinkAccessOutput() GetServicePgUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetServicePgUserConfigPrivatelinkAccessOutput) ToGetServicePgUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetServicePgUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetServicePgUserConfigPrivatelinkAccessOutput) ToGetServicePgUserConfigPrivatelinkAccessPtrOutput() GetServicePgUserConfigPrivatelinkAccessPtrOutput {
	return o.ToGetServicePgUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o GetServicePgUserConfigPrivatelinkAccessOutput) ToGetServicePgUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPrivatelinkAccess) *GetServicePgUserConfigPrivatelinkAccess {
		return &v
	}).(GetServicePgUserConfigPrivatelinkAccessPtrOutput)
}
func (o GetServicePgUserConfigPrivatelinkAccessOutput) Pg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPrivatelinkAccess) *string { return v.Pg }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPrivatelinkAccessOutput) Pgbouncer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPrivatelinkAccess) *string { return v.Pgbouncer }).(pulumi.StringPtrOutput)
}

type GetServicePgUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (GetServicePgUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServicePgUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetServicePgUserConfigPrivatelinkAccessPtrOutput) ToGetServicePgUserConfigPrivatelinkAccessPtrOutput() GetServicePgUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetServicePgUserConfigPrivatelinkAccessPtrOutput) ToGetServicePgUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetServicePgUserConfigPrivatelinkAccessPtrOutput) Elem() GetServicePgUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPrivatelinkAccess) GetServicePgUserConfigPrivatelinkAccess { return *v }).(GetServicePgUserConfigPrivatelinkAccessOutput)
}

func (o GetServicePgUserConfigPrivatelinkAccessPtrOutput) Pg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Pg
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPrivatelinkAccessPtrOutput) Pgbouncer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Pgbouncer
	}).(pulumi.StringPtrOutput)
}

type GetServicePgUserConfigPublicAccess struct {
	Pg         *string `pulumi:"pg"`
	Pgbouncer  *string `pulumi:"pgbouncer"`
	Prometheus *string `pulumi:"prometheus"`
}

// GetServicePgUserConfigPublicAccessInput is an input type that accepts GetServicePgUserConfigPublicAccessArgs and GetServicePgUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `GetServicePgUserConfigPublicAccessInput` via:
//
//          GetServicePgUserConfigPublicAccessArgs{...}
type GetServicePgUserConfigPublicAccessInput interface {
	pulumi.Input

	ToGetServicePgUserConfigPublicAccessOutput() GetServicePgUserConfigPublicAccessOutput
	ToGetServicePgUserConfigPublicAccessOutputWithContext(context.Context) GetServicePgUserConfigPublicAccessOutput
}

type GetServicePgUserConfigPublicAccessArgs struct {
	Pg         pulumi.StringPtrInput `pulumi:"pg"`
	Pgbouncer  pulumi.StringPtrInput `pulumi:"pgbouncer"`
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
}

func (GetServicePgUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePgUserConfigPublicAccess)(nil)).Elem()
}

func (i GetServicePgUserConfigPublicAccessArgs) ToGetServicePgUserConfigPublicAccessOutput() GetServicePgUserConfigPublicAccessOutput {
	return i.ToGetServicePgUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i GetServicePgUserConfigPublicAccessArgs) ToGetServicePgUserConfigPublicAccessOutputWithContext(ctx context.Context) GetServicePgUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePgUserConfigPublicAccessOutput)
}

func (i GetServicePgUserConfigPublicAccessArgs) ToGetServicePgUserConfigPublicAccessPtrOutput() GetServicePgUserConfigPublicAccessPtrOutput {
	return i.ToGetServicePgUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i GetServicePgUserConfigPublicAccessArgs) ToGetServicePgUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePgUserConfigPublicAccessOutput).ToGetServicePgUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// GetServicePgUserConfigPublicAccessPtrInput is an input type that accepts GetServicePgUserConfigPublicAccessArgs, GetServicePgUserConfigPublicAccessPtr and GetServicePgUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `GetServicePgUserConfigPublicAccessPtrInput` via:
//
//          GetServicePgUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type GetServicePgUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToGetServicePgUserConfigPublicAccessPtrOutput() GetServicePgUserConfigPublicAccessPtrOutput
	ToGetServicePgUserConfigPublicAccessPtrOutputWithContext(context.Context) GetServicePgUserConfigPublicAccessPtrOutput
}

type getServicePgUserConfigPublicAccessPtrType GetServicePgUserConfigPublicAccessArgs

func GetServicePgUserConfigPublicAccessPtr(v *GetServicePgUserConfigPublicAccessArgs) GetServicePgUserConfigPublicAccessPtrInput {
	return (*getServicePgUserConfigPublicAccessPtrType)(v)
}

func (*getServicePgUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServicePgUserConfigPublicAccess)(nil)).Elem()
}

func (i *getServicePgUserConfigPublicAccessPtrType) ToGetServicePgUserConfigPublicAccessPtrOutput() GetServicePgUserConfigPublicAccessPtrOutput {
	return i.ToGetServicePgUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *getServicePgUserConfigPublicAccessPtrType) ToGetServicePgUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePgUserConfigPublicAccessPtrOutput)
}

type GetServicePgUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (GetServicePgUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePgUserConfigPublicAccess)(nil)).Elem()
}

func (o GetServicePgUserConfigPublicAccessOutput) ToGetServicePgUserConfigPublicAccessOutput() GetServicePgUserConfigPublicAccessOutput {
	return o
}

func (o GetServicePgUserConfigPublicAccessOutput) ToGetServicePgUserConfigPublicAccessOutputWithContext(ctx context.Context) GetServicePgUserConfigPublicAccessOutput {
	return o
}

func (o GetServicePgUserConfigPublicAccessOutput) ToGetServicePgUserConfigPublicAccessPtrOutput() GetServicePgUserConfigPublicAccessPtrOutput {
	return o.ToGetServicePgUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o GetServicePgUserConfigPublicAccessOutput) ToGetServicePgUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPublicAccess) *GetServicePgUserConfigPublicAccess {
		return &v
	}).(GetServicePgUserConfigPublicAccessPtrOutput)
}
func (o GetServicePgUserConfigPublicAccessOutput) Pg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPublicAccess) *string { return v.Pg }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPublicAccessOutput) Pgbouncer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPublicAccess) *string { return v.Pgbouncer }).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

type GetServicePgUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (GetServicePgUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServicePgUserConfigPublicAccess)(nil)).Elem()
}

func (o GetServicePgUserConfigPublicAccessPtrOutput) ToGetServicePgUserConfigPublicAccessPtrOutput() GetServicePgUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetServicePgUserConfigPublicAccessPtrOutput) ToGetServicePgUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetServicePgUserConfigPublicAccessPtrOutput) Elem() GetServicePgUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPublicAccess) GetServicePgUserConfigPublicAccess { return *v }).(GetServicePgUserConfigPublicAccessOutput)
}

func (o GetServicePgUserConfigPublicAccessPtrOutput) Pg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Pg
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPublicAccessPtrOutput) Pgbouncer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Pgbouncer
	}).(pulumi.StringPtrOutput)
}

func (o GetServicePgUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

type GetServicePgUserConfigTimescaledb struct {
	MaxBackgroundWorkers *string `pulumi:"maxBackgroundWorkers"`
}

// GetServicePgUserConfigTimescaledbInput is an input type that accepts GetServicePgUserConfigTimescaledbArgs and GetServicePgUserConfigTimescaledbOutput values.
// You can construct a concrete instance of `GetServicePgUserConfigTimescaledbInput` via:
//
//          GetServicePgUserConfigTimescaledbArgs{...}
type GetServicePgUserConfigTimescaledbInput interface {
	pulumi.Input

	ToGetServicePgUserConfigTimescaledbOutput() GetServicePgUserConfigTimescaledbOutput
	ToGetServicePgUserConfigTimescaledbOutputWithContext(context.Context) GetServicePgUserConfigTimescaledbOutput
}

type GetServicePgUserConfigTimescaledbArgs struct {
	MaxBackgroundWorkers pulumi.StringPtrInput `pulumi:"maxBackgroundWorkers"`
}

func (GetServicePgUserConfigTimescaledbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePgUserConfigTimescaledb)(nil)).Elem()
}

func (i GetServicePgUserConfigTimescaledbArgs) ToGetServicePgUserConfigTimescaledbOutput() GetServicePgUserConfigTimescaledbOutput {
	return i.ToGetServicePgUserConfigTimescaledbOutputWithContext(context.Background())
}

func (i GetServicePgUserConfigTimescaledbArgs) ToGetServicePgUserConfigTimescaledbOutputWithContext(ctx context.Context) GetServicePgUserConfigTimescaledbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePgUserConfigTimescaledbOutput)
}

func (i GetServicePgUserConfigTimescaledbArgs) ToGetServicePgUserConfigTimescaledbPtrOutput() GetServicePgUserConfigTimescaledbPtrOutput {
	return i.ToGetServicePgUserConfigTimescaledbPtrOutputWithContext(context.Background())
}

func (i GetServicePgUserConfigTimescaledbArgs) ToGetServicePgUserConfigTimescaledbPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigTimescaledbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePgUserConfigTimescaledbOutput).ToGetServicePgUserConfigTimescaledbPtrOutputWithContext(ctx)
}

// GetServicePgUserConfigTimescaledbPtrInput is an input type that accepts GetServicePgUserConfigTimescaledbArgs, GetServicePgUserConfigTimescaledbPtr and GetServicePgUserConfigTimescaledbPtrOutput values.
// You can construct a concrete instance of `GetServicePgUserConfigTimescaledbPtrInput` via:
//
//          GetServicePgUserConfigTimescaledbArgs{...}
//
//  or:
//
//          nil
type GetServicePgUserConfigTimescaledbPtrInput interface {
	pulumi.Input

	ToGetServicePgUserConfigTimescaledbPtrOutput() GetServicePgUserConfigTimescaledbPtrOutput
	ToGetServicePgUserConfigTimescaledbPtrOutputWithContext(context.Context) GetServicePgUserConfigTimescaledbPtrOutput
}

type getServicePgUserConfigTimescaledbPtrType GetServicePgUserConfigTimescaledbArgs

func GetServicePgUserConfigTimescaledbPtr(v *GetServicePgUserConfigTimescaledbArgs) GetServicePgUserConfigTimescaledbPtrInput {
	return (*getServicePgUserConfigTimescaledbPtrType)(v)
}

func (*getServicePgUserConfigTimescaledbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServicePgUserConfigTimescaledb)(nil)).Elem()
}

func (i *getServicePgUserConfigTimescaledbPtrType) ToGetServicePgUserConfigTimescaledbPtrOutput() GetServicePgUserConfigTimescaledbPtrOutput {
	return i.ToGetServicePgUserConfigTimescaledbPtrOutputWithContext(context.Background())
}

func (i *getServicePgUserConfigTimescaledbPtrType) ToGetServicePgUserConfigTimescaledbPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigTimescaledbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicePgUserConfigTimescaledbPtrOutput)
}

type GetServicePgUserConfigTimescaledbOutput struct{ *pulumi.OutputState }

func (GetServicePgUserConfigTimescaledbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicePgUserConfigTimescaledb)(nil)).Elem()
}

func (o GetServicePgUserConfigTimescaledbOutput) ToGetServicePgUserConfigTimescaledbOutput() GetServicePgUserConfigTimescaledbOutput {
	return o
}

func (o GetServicePgUserConfigTimescaledbOutput) ToGetServicePgUserConfigTimescaledbOutputWithContext(ctx context.Context) GetServicePgUserConfigTimescaledbOutput {
	return o
}

func (o GetServicePgUserConfigTimescaledbOutput) ToGetServicePgUserConfigTimescaledbPtrOutput() GetServicePgUserConfigTimescaledbPtrOutput {
	return o.ToGetServicePgUserConfigTimescaledbPtrOutputWithContext(context.Background())
}

func (o GetServicePgUserConfigTimescaledbOutput) ToGetServicePgUserConfigTimescaledbPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigTimescaledbPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigTimescaledb) *GetServicePgUserConfigTimescaledb {
		return &v
	}).(GetServicePgUserConfigTimescaledbPtrOutput)
}
func (o GetServicePgUserConfigTimescaledbOutput) MaxBackgroundWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicePgUserConfigTimescaledb) *string { return v.MaxBackgroundWorkers }).(pulumi.StringPtrOutput)
}

type GetServicePgUserConfigTimescaledbPtrOutput struct{ *pulumi.OutputState }

func (GetServicePgUserConfigTimescaledbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServicePgUserConfigTimescaledb)(nil)).Elem()
}

func (o GetServicePgUserConfigTimescaledbPtrOutput) ToGetServicePgUserConfigTimescaledbPtrOutput() GetServicePgUserConfigTimescaledbPtrOutput {
	return o
}

func (o GetServicePgUserConfigTimescaledbPtrOutput) ToGetServicePgUserConfigTimescaledbPtrOutputWithContext(ctx context.Context) GetServicePgUserConfigTimescaledbPtrOutput {
	return o
}

func (o GetServicePgUserConfigTimescaledbPtrOutput) Elem() GetServicePgUserConfigTimescaledbOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigTimescaledb) GetServicePgUserConfigTimescaledb { return *v }).(GetServicePgUserConfigTimescaledbOutput)
}

func (o GetServicePgUserConfigTimescaledbPtrOutput) MaxBackgroundWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServicePgUserConfigTimescaledb) *string {
		if v == nil {
			return nil
		}
		return v.MaxBackgroundWorkers
	}).(pulumi.StringPtrOutput)
}

type GetServiceRedis struct {
}

// GetServiceRedisInput is an input type that accepts GetServiceRedisArgs and GetServiceRedisOutput values.
// You can construct a concrete instance of `GetServiceRedisInput` via:
//
//          GetServiceRedisArgs{...}
type GetServiceRedisInput interface {
	pulumi.Input

	ToGetServiceRedisOutput() GetServiceRedisOutput
	ToGetServiceRedisOutputWithContext(context.Context) GetServiceRedisOutput
}

type GetServiceRedisArgs struct {
}

func (GetServiceRedisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceRedis)(nil)).Elem()
}

func (i GetServiceRedisArgs) ToGetServiceRedisOutput() GetServiceRedisOutput {
	return i.ToGetServiceRedisOutputWithContext(context.Background())
}

func (i GetServiceRedisArgs) ToGetServiceRedisOutputWithContext(ctx context.Context) GetServiceRedisOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceRedisOutput)
}

type GetServiceRedisOutput struct{ *pulumi.OutputState }

func (GetServiceRedisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceRedis)(nil)).Elem()
}

func (o GetServiceRedisOutput) ToGetServiceRedisOutput() GetServiceRedisOutput {
	return o
}

func (o GetServiceRedisOutput) ToGetServiceRedisOutputWithContext(ctx context.Context) GetServiceRedisOutput {
	return o
}

type GetServiceRedisUserConfig struct {
	IpFilters                 []string                                    `pulumi:"ipFilters"`
	Migration                 *GetServiceRedisUserConfigMigration         `pulumi:"migration"`
	PrivateAccess             *GetServiceRedisUserConfigPrivateAccess     `pulumi:"privateAccess"`
	PrivatelinkAccess         *GetServiceRedisUserConfigPrivatelinkAccess `pulumi:"privatelinkAccess"`
	ProjectToForkFrom         *string                                     `pulumi:"projectToForkFrom"`
	PublicAccess              *GetServiceRedisUserConfigPublicAccess      `pulumi:"publicAccess"`
	RecoveryBasebackupName    *string                                     `pulumi:"recoveryBasebackupName"`
	RedisIoThreads            *string                                     `pulumi:"redisIoThreads"`
	RedisLfuDecayTime         *string                                     `pulumi:"redisLfuDecayTime"`
	RedisLfuLogFactor         *string                                     `pulumi:"redisLfuLogFactor"`
	RedisMaxmemoryPolicy      *string                                     `pulumi:"redisMaxmemoryPolicy"`
	RedisNotifyKeyspaceEvents *string                                     `pulumi:"redisNotifyKeyspaceEvents"`
	RedisSsl                  *string                                     `pulumi:"redisSsl"`
	RedisTimeout              *string                                     `pulumi:"redisTimeout"`
	ServiceToForkFrom         *string                                     `pulumi:"serviceToForkFrom"`
}

// GetServiceRedisUserConfigInput is an input type that accepts GetServiceRedisUserConfigArgs and GetServiceRedisUserConfigOutput values.
// You can construct a concrete instance of `GetServiceRedisUserConfigInput` via:
//
//          GetServiceRedisUserConfigArgs{...}
type GetServiceRedisUserConfigInput interface {
	pulumi.Input

	ToGetServiceRedisUserConfigOutput() GetServiceRedisUserConfigOutput
	ToGetServiceRedisUserConfigOutputWithContext(context.Context) GetServiceRedisUserConfigOutput
}

type GetServiceRedisUserConfigArgs struct {
	IpFilters                 pulumi.StringArrayInput                            `pulumi:"ipFilters"`
	Migration                 GetServiceRedisUserConfigMigrationPtrInput         `pulumi:"migration"`
	PrivateAccess             GetServiceRedisUserConfigPrivateAccessPtrInput     `pulumi:"privateAccess"`
	PrivatelinkAccess         GetServiceRedisUserConfigPrivatelinkAccessPtrInput `pulumi:"privatelinkAccess"`
	ProjectToForkFrom         pulumi.StringPtrInput                              `pulumi:"projectToForkFrom"`
	PublicAccess              GetServiceRedisUserConfigPublicAccessPtrInput      `pulumi:"publicAccess"`
	RecoveryBasebackupName    pulumi.StringPtrInput                              `pulumi:"recoveryBasebackupName"`
	RedisIoThreads            pulumi.StringPtrInput                              `pulumi:"redisIoThreads"`
	RedisLfuDecayTime         pulumi.StringPtrInput                              `pulumi:"redisLfuDecayTime"`
	RedisLfuLogFactor         pulumi.StringPtrInput                              `pulumi:"redisLfuLogFactor"`
	RedisMaxmemoryPolicy      pulumi.StringPtrInput                              `pulumi:"redisMaxmemoryPolicy"`
	RedisNotifyKeyspaceEvents pulumi.StringPtrInput                              `pulumi:"redisNotifyKeyspaceEvents"`
	RedisSsl                  pulumi.StringPtrInput                              `pulumi:"redisSsl"`
	RedisTimeout              pulumi.StringPtrInput                              `pulumi:"redisTimeout"`
	ServiceToForkFrom         pulumi.StringPtrInput                              `pulumi:"serviceToForkFrom"`
}

func (GetServiceRedisUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceRedisUserConfig)(nil)).Elem()
}

func (i GetServiceRedisUserConfigArgs) ToGetServiceRedisUserConfigOutput() GetServiceRedisUserConfigOutput {
	return i.ToGetServiceRedisUserConfigOutputWithContext(context.Background())
}

func (i GetServiceRedisUserConfigArgs) ToGetServiceRedisUserConfigOutputWithContext(ctx context.Context) GetServiceRedisUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceRedisUserConfigOutput)
}

type GetServiceRedisUserConfigOutput struct{ *pulumi.OutputState }

func (GetServiceRedisUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceRedisUserConfig)(nil)).Elem()
}

func (o GetServiceRedisUserConfigOutput) ToGetServiceRedisUserConfigOutput() GetServiceRedisUserConfigOutput {
	return o
}

func (o GetServiceRedisUserConfigOutput) ToGetServiceRedisUserConfigOutputWithContext(ctx context.Context) GetServiceRedisUserConfigOutput {
	return o
}

func (o GetServiceRedisUserConfigOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfig) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

func (o GetServiceRedisUserConfigOutput) Migration() GetServiceRedisUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfig) *GetServiceRedisUserConfigMigration { return v.Migration }).(GetServiceRedisUserConfigMigrationPtrOutput)
}

func (o GetServiceRedisUserConfigOutput) PrivateAccess() GetServiceRedisUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfig) *GetServiceRedisUserConfigPrivateAccess { return v.PrivateAccess }).(GetServiceRedisUserConfigPrivateAccessPtrOutput)
}

func (o GetServiceRedisUserConfigOutput) PrivatelinkAccess() GetServiceRedisUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfig) *GetServiceRedisUserConfigPrivatelinkAccess {
		return v.PrivatelinkAccess
	}).(GetServiceRedisUserConfigPrivatelinkAccessPtrOutput)
}

func (o GetServiceRedisUserConfigOutput) ProjectToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfig) *string { return v.ProjectToForkFrom }).(pulumi.StringPtrOutput)
}

func (o GetServiceRedisUserConfigOutput) PublicAccess() GetServiceRedisUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfig) *GetServiceRedisUserConfigPublicAccess { return v.PublicAccess }).(GetServiceRedisUserConfigPublicAccessPtrOutput)
}

func (o GetServiceRedisUserConfigOutput) RecoveryBasebackupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfig) *string { return v.RecoveryBasebackupName }).(pulumi.StringPtrOutput)
}

func (o GetServiceRedisUserConfigOutput) RedisIoThreads() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfig) *string { return v.RedisIoThreads }).(pulumi.StringPtrOutput)
}

func (o GetServiceRedisUserConfigOutput) RedisLfuDecayTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfig) *string { return v.RedisLfuDecayTime }).(pulumi.StringPtrOutput)
}

func (o GetServiceRedisUserConfigOutput) RedisLfuLogFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfig) *string { return v.RedisLfuLogFactor }).(pulumi.StringPtrOutput)
}

func (o GetServiceRedisUserConfigOutput) RedisMaxmemoryPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfig) *string { return v.RedisMaxmemoryPolicy }).(pulumi.StringPtrOutput)
}

func (o GetServiceRedisUserConfigOutput) RedisNotifyKeyspaceEvents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfig) *string { return v.RedisNotifyKeyspaceEvents }).(pulumi.StringPtrOutput)
}

func (o GetServiceRedisUserConfigOutput) RedisSsl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfig) *string { return v.RedisSsl }).(pulumi.StringPtrOutput)
}

func (o GetServiceRedisUserConfigOutput) RedisTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfig) *string { return v.RedisTimeout }).(pulumi.StringPtrOutput)
}

func (o GetServiceRedisUserConfigOutput) ServiceToForkFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfig) *string { return v.ServiceToForkFrom }).(pulumi.StringPtrOutput)
}

type GetServiceRedisUserConfigMigration struct {
	Dbname    *string `pulumi:"dbname"`
	Host      *string `pulumi:"host"`
	IgnoreDbs *string `pulumi:"ignoreDbs"`
	Password  *string `pulumi:"password"`
	Port      *string `pulumi:"port"`
	Ssl       *string `pulumi:"ssl"`
	Username  *string `pulumi:"username"`
}

// GetServiceRedisUserConfigMigrationInput is an input type that accepts GetServiceRedisUserConfigMigrationArgs and GetServiceRedisUserConfigMigrationOutput values.
// You can construct a concrete instance of `GetServiceRedisUserConfigMigrationInput` via:
//
//          GetServiceRedisUserConfigMigrationArgs{...}
type GetServiceRedisUserConfigMigrationInput interface {
	pulumi.Input

	ToGetServiceRedisUserConfigMigrationOutput() GetServiceRedisUserConfigMigrationOutput
	ToGetServiceRedisUserConfigMigrationOutputWithContext(context.Context) GetServiceRedisUserConfigMigrationOutput
}

type GetServiceRedisUserConfigMigrationArgs struct {
	Dbname    pulumi.StringPtrInput `pulumi:"dbname"`
	Host      pulumi.StringPtrInput `pulumi:"host"`
	IgnoreDbs pulumi.StringPtrInput `pulumi:"ignoreDbs"`
	Password  pulumi.StringPtrInput `pulumi:"password"`
	Port      pulumi.StringPtrInput `pulumi:"port"`
	Ssl       pulumi.StringPtrInput `pulumi:"ssl"`
	Username  pulumi.StringPtrInput `pulumi:"username"`
}

func (GetServiceRedisUserConfigMigrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceRedisUserConfigMigration)(nil)).Elem()
}

func (i GetServiceRedisUserConfigMigrationArgs) ToGetServiceRedisUserConfigMigrationOutput() GetServiceRedisUserConfigMigrationOutput {
	return i.ToGetServiceRedisUserConfigMigrationOutputWithContext(context.Background())
}

func (i GetServiceRedisUserConfigMigrationArgs) ToGetServiceRedisUserConfigMigrationOutputWithContext(ctx context.Context) GetServiceRedisUserConfigMigrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceRedisUserConfigMigrationOutput)
}

func (i GetServiceRedisUserConfigMigrationArgs) ToGetServiceRedisUserConfigMigrationPtrOutput() GetServiceRedisUserConfigMigrationPtrOutput {
	return i.ToGetServiceRedisUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (i GetServiceRedisUserConfigMigrationArgs) ToGetServiceRedisUserConfigMigrationPtrOutputWithContext(ctx context.Context) GetServiceRedisUserConfigMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceRedisUserConfigMigrationOutput).ToGetServiceRedisUserConfigMigrationPtrOutputWithContext(ctx)
}

// GetServiceRedisUserConfigMigrationPtrInput is an input type that accepts GetServiceRedisUserConfigMigrationArgs, GetServiceRedisUserConfigMigrationPtr and GetServiceRedisUserConfigMigrationPtrOutput values.
// You can construct a concrete instance of `GetServiceRedisUserConfigMigrationPtrInput` via:
//
//          GetServiceRedisUserConfigMigrationArgs{...}
//
//  or:
//
//          nil
type GetServiceRedisUserConfigMigrationPtrInput interface {
	pulumi.Input

	ToGetServiceRedisUserConfigMigrationPtrOutput() GetServiceRedisUserConfigMigrationPtrOutput
	ToGetServiceRedisUserConfigMigrationPtrOutputWithContext(context.Context) GetServiceRedisUserConfigMigrationPtrOutput
}

type getServiceRedisUserConfigMigrationPtrType GetServiceRedisUserConfigMigrationArgs

func GetServiceRedisUserConfigMigrationPtr(v *GetServiceRedisUserConfigMigrationArgs) GetServiceRedisUserConfigMigrationPtrInput {
	return (*getServiceRedisUserConfigMigrationPtrType)(v)
}

func (*getServiceRedisUserConfigMigrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceRedisUserConfigMigration)(nil)).Elem()
}

func (i *getServiceRedisUserConfigMigrationPtrType) ToGetServiceRedisUserConfigMigrationPtrOutput() GetServiceRedisUserConfigMigrationPtrOutput {
	return i.ToGetServiceRedisUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (i *getServiceRedisUserConfigMigrationPtrType) ToGetServiceRedisUserConfigMigrationPtrOutputWithContext(ctx context.Context) GetServiceRedisUserConfigMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceRedisUserConfigMigrationPtrOutput)
}

type GetServiceRedisUserConfigMigrationOutput struct{ *pulumi.OutputState }

func (GetServiceRedisUserConfigMigrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceRedisUserConfigMigration)(nil)).Elem()
}

func (o GetServiceRedisUserConfigMigrationOutput) ToGetServiceRedisUserConfigMigrationOutput() GetServiceRedisUserConfigMigrationOutput {
	return o
}

func (o GetServiceRedisUserConfigMigrationOutput) ToGetServiceRedisUserConfigMigrationOutputWithContext(ctx context.Context) GetServiceRedisUserConfigMigrationOutput {
	return o
}

func (o GetServiceRedisUserConfigMigrationOutput) ToGetServiceRedisUserConfigMigrationPtrOutput() GetServiceRedisUserConfigMigrationPtrOutput {
	return o.ToGetServiceRedisUserConfigMigrationPtrOutputWithContext(context.Background())
}

func (o GetServiceRedisUserConfigMigrationOutput) ToGetServiceRedisUserConfigMigrationPtrOutputWithContext(ctx context.Context) GetServiceRedisUserConfigMigrationPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfigMigration) *GetServiceRedisUserConfigMigration {
		return &v
	}).(GetServiceRedisUserConfigMigrationPtrOutput)
}
func (o GetServiceRedisUserConfigMigrationOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfigMigration) *string { return v.Dbname }).(pulumi.StringPtrOutput)
}

func (o GetServiceRedisUserConfigMigrationOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfigMigration) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o GetServiceRedisUserConfigMigrationOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfigMigration) *string { return v.IgnoreDbs }).(pulumi.StringPtrOutput)
}

func (o GetServiceRedisUserConfigMigrationOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfigMigration) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o GetServiceRedisUserConfigMigrationOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfigMigration) *string { return v.Port }).(pulumi.StringPtrOutput)
}

func (o GetServiceRedisUserConfigMigrationOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfigMigration) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

func (o GetServiceRedisUserConfigMigrationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfigMigration) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GetServiceRedisUserConfigMigrationPtrOutput struct{ *pulumi.OutputState }

func (GetServiceRedisUserConfigMigrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceRedisUserConfigMigration)(nil)).Elem()
}

func (o GetServiceRedisUserConfigMigrationPtrOutput) ToGetServiceRedisUserConfigMigrationPtrOutput() GetServiceRedisUserConfigMigrationPtrOutput {
	return o
}

func (o GetServiceRedisUserConfigMigrationPtrOutput) ToGetServiceRedisUserConfigMigrationPtrOutputWithContext(ctx context.Context) GetServiceRedisUserConfigMigrationPtrOutput {
	return o
}

func (o GetServiceRedisUserConfigMigrationPtrOutput) Elem() GetServiceRedisUserConfigMigrationOutput {
	return o.ApplyT(func(v *GetServiceRedisUserConfigMigration) GetServiceRedisUserConfigMigration { return *v }).(GetServiceRedisUserConfigMigrationOutput)
}

func (o GetServiceRedisUserConfigMigrationPtrOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Dbname
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceRedisUserConfigMigrationPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceRedisUserConfigMigrationPtrOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.IgnoreDbs
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceRedisUserConfigMigrationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceRedisUserConfigMigrationPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceRedisUserConfigMigrationPtrOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Ssl
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceRedisUserConfigMigrationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceRedisUserConfigMigration) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type GetServiceRedisUserConfigPrivateAccess struct {
	Prometheus *string `pulumi:"prometheus"`
	Redis      *string `pulumi:"redis"`
}

// GetServiceRedisUserConfigPrivateAccessInput is an input type that accepts GetServiceRedisUserConfigPrivateAccessArgs and GetServiceRedisUserConfigPrivateAccessOutput values.
// You can construct a concrete instance of `GetServiceRedisUserConfigPrivateAccessInput` via:
//
//          GetServiceRedisUserConfigPrivateAccessArgs{...}
type GetServiceRedisUserConfigPrivateAccessInput interface {
	pulumi.Input

	ToGetServiceRedisUserConfigPrivateAccessOutput() GetServiceRedisUserConfigPrivateAccessOutput
	ToGetServiceRedisUserConfigPrivateAccessOutputWithContext(context.Context) GetServiceRedisUserConfigPrivateAccessOutput
}

type GetServiceRedisUserConfigPrivateAccessArgs struct {
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
	Redis      pulumi.StringPtrInput `pulumi:"redis"`
}

func (GetServiceRedisUserConfigPrivateAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceRedisUserConfigPrivateAccess)(nil)).Elem()
}

func (i GetServiceRedisUserConfigPrivateAccessArgs) ToGetServiceRedisUserConfigPrivateAccessOutput() GetServiceRedisUserConfigPrivateAccessOutput {
	return i.ToGetServiceRedisUserConfigPrivateAccessOutputWithContext(context.Background())
}

func (i GetServiceRedisUserConfigPrivateAccessArgs) ToGetServiceRedisUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetServiceRedisUserConfigPrivateAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceRedisUserConfigPrivateAccessOutput)
}

func (i GetServiceRedisUserConfigPrivateAccessArgs) ToGetServiceRedisUserConfigPrivateAccessPtrOutput() GetServiceRedisUserConfigPrivateAccessPtrOutput {
	return i.ToGetServiceRedisUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i GetServiceRedisUserConfigPrivateAccessArgs) ToGetServiceRedisUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceRedisUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceRedisUserConfigPrivateAccessOutput).ToGetServiceRedisUserConfigPrivateAccessPtrOutputWithContext(ctx)
}

// GetServiceRedisUserConfigPrivateAccessPtrInput is an input type that accepts GetServiceRedisUserConfigPrivateAccessArgs, GetServiceRedisUserConfigPrivateAccessPtr and GetServiceRedisUserConfigPrivateAccessPtrOutput values.
// You can construct a concrete instance of `GetServiceRedisUserConfigPrivateAccessPtrInput` via:
//
//          GetServiceRedisUserConfigPrivateAccessArgs{...}
//
//  or:
//
//          nil
type GetServiceRedisUserConfigPrivateAccessPtrInput interface {
	pulumi.Input

	ToGetServiceRedisUserConfigPrivateAccessPtrOutput() GetServiceRedisUserConfigPrivateAccessPtrOutput
	ToGetServiceRedisUserConfigPrivateAccessPtrOutputWithContext(context.Context) GetServiceRedisUserConfigPrivateAccessPtrOutput
}

type getServiceRedisUserConfigPrivateAccessPtrType GetServiceRedisUserConfigPrivateAccessArgs

func GetServiceRedisUserConfigPrivateAccessPtr(v *GetServiceRedisUserConfigPrivateAccessArgs) GetServiceRedisUserConfigPrivateAccessPtrInput {
	return (*getServiceRedisUserConfigPrivateAccessPtrType)(v)
}

func (*getServiceRedisUserConfigPrivateAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceRedisUserConfigPrivateAccess)(nil)).Elem()
}

func (i *getServiceRedisUserConfigPrivateAccessPtrType) ToGetServiceRedisUserConfigPrivateAccessPtrOutput() GetServiceRedisUserConfigPrivateAccessPtrOutput {
	return i.ToGetServiceRedisUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (i *getServiceRedisUserConfigPrivateAccessPtrType) ToGetServiceRedisUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceRedisUserConfigPrivateAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceRedisUserConfigPrivateAccessPtrOutput)
}

type GetServiceRedisUserConfigPrivateAccessOutput struct{ *pulumi.OutputState }

func (GetServiceRedisUserConfigPrivateAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceRedisUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetServiceRedisUserConfigPrivateAccessOutput) ToGetServiceRedisUserConfigPrivateAccessOutput() GetServiceRedisUserConfigPrivateAccessOutput {
	return o
}

func (o GetServiceRedisUserConfigPrivateAccessOutput) ToGetServiceRedisUserConfigPrivateAccessOutputWithContext(ctx context.Context) GetServiceRedisUserConfigPrivateAccessOutput {
	return o
}

func (o GetServiceRedisUserConfigPrivateAccessOutput) ToGetServiceRedisUserConfigPrivateAccessPtrOutput() GetServiceRedisUserConfigPrivateAccessPtrOutput {
	return o.ToGetServiceRedisUserConfigPrivateAccessPtrOutputWithContext(context.Background())
}

func (o GetServiceRedisUserConfigPrivateAccessOutput) ToGetServiceRedisUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceRedisUserConfigPrivateAccessPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfigPrivateAccess) *GetServiceRedisUserConfigPrivateAccess {
		return &v
	}).(GetServiceRedisUserConfigPrivateAccessPtrOutput)
}
func (o GetServiceRedisUserConfigPrivateAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfigPrivateAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

func (o GetServiceRedisUserConfigPrivateAccessOutput) Redis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfigPrivateAccess) *string { return v.Redis }).(pulumi.StringPtrOutput)
}

type GetServiceRedisUserConfigPrivateAccessPtrOutput struct{ *pulumi.OutputState }

func (GetServiceRedisUserConfigPrivateAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceRedisUserConfigPrivateAccess)(nil)).Elem()
}

func (o GetServiceRedisUserConfigPrivateAccessPtrOutput) ToGetServiceRedisUserConfigPrivateAccessPtrOutput() GetServiceRedisUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetServiceRedisUserConfigPrivateAccessPtrOutput) ToGetServiceRedisUserConfigPrivateAccessPtrOutputWithContext(ctx context.Context) GetServiceRedisUserConfigPrivateAccessPtrOutput {
	return o
}

func (o GetServiceRedisUserConfigPrivateAccessPtrOutput) Elem() GetServiceRedisUserConfigPrivateAccessOutput {
	return o.ApplyT(func(v *GetServiceRedisUserConfigPrivateAccess) GetServiceRedisUserConfigPrivateAccess { return *v }).(GetServiceRedisUserConfigPrivateAccessOutput)
}

func (o GetServiceRedisUserConfigPrivateAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceRedisUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceRedisUserConfigPrivateAccessPtrOutput) Redis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceRedisUserConfigPrivateAccess) *string {
		if v == nil {
			return nil
		}
		return v.Redis
	}).(pulumi.StringPtrOutput)
}

type GetServiceRedisUserConfigPrivatelinkAccess struct {
	Redis *string `pulumi:"redis"`
}

// GetServiceRedisUserConfigPrivatelinkAccessInput is an input type that accepts GetServiceRedisUserConfigPrivatelinkAccessArgs and GetServiceRedisUserConfigPrivatelinkAccessOutput values.
// You can construct a concrete instance of `GetServiceRedisUserConfigPrivatelinkAccessInput` via:
//
//          GetServiceRedisUserConfigPrivatelinkAccessArgs{...}
type GetServiceRedisUserConfigPrivatelinkAccessInput interface {
	pulumi.Input

	ToGetServiceRedisUserConfigPrivatelinkAccessOutput() GetServiceRedisUserConfigPrivatelinkAccessOutput
	ToGetServiceRedisUserConfigPrivatelinkAccessOutputWithContext(context.Context) GetServiceRedisUserConfigPrivatelinkAccessOutput
}

type GetServiceRedisUserConfigPrivatelinkAccessArgs struct {
	Redis pulumi.StringPtrInput `pulumi:"redis"`
}

func (GetServiceRedisUserConfigPrivatelinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceRedisUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i GetServiceRedisUserConfigPrivatelinkAccessArgs) ToGetServiceRedisUserConfigPrivatelinkAccessOutput() GetServiceRedisUserConfigPrivatelinkAccessOutput {
	return i.ToGetServiceRedisUserConfigPrivatelinkAccessOutputWithContext(context.Background())
}

func (i GetServiceRedisUserConfigPrivatelinkAccessArgs) ToGetServiceRedisUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetServiceRedisUserConfigPrivatelinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceRedisUserConfigPrivatelinkAccessOutput)
}

func (i GetServiceRedisUserConfigPrivatelinkAccessArgs) ToGetServiceRedisUserConfigPrivatelinkAccessPtrOutput() GetServiceRedisUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetServiceRedisUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i GetServiceRedisUserConfigPrivatelinkAccessArgs) ToGetServiceRedisUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceRedisUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceRedisUserConfigPrivatelinkAccessOutput).ToGetServiceRedisUserConfigPrivatelinkAccessPtrOutputWithContext(ctx)
}

// GetServiceRedisUserConfigPrivatelinkAccessPtrInput is an input type that accepts GetServiceRedisUserConfigPrivatelinkAccessArgs, GetServiceRedisUserConfigPrivatelinkAccessPtr and GetServiceRedisUserConfigPrivatelinkAccessPtrOutput values.
// You can construct a concrete instance of `GetServiceRedisUserConfigPrivatelinkAccessPtrInput` via:
//
//          GetServiceRedisUserConfigPrivatelinkAccessArgs{...}
//
//  or:
//
//          nil
type GetServiceRedisUserConfigPrivatelinkAccessPtrInput interface {
	pulumi.Input

	ToGetServiceRedisUserConfigPrivatelinkAccessPtrOutput() GetServiceRedisUserConfigPrivatelinkAccessPtrOutput
	ToGetServiceRedisUserConfigPrivatelinkAccessPtrOutputWithContext(context.Context) GetServiceRedisUserConfigPrivatelinkAccessPtrOutput
}

type getServiceRedisUserConfigPrivatelinkAccessPtrType GetServiceRedisUserConfigPrivatelinkAccessArgs

func GetServiceRedisUserConfigPrivatelinkAccessPtr(v *GetServiceRedisUserConfigPrivatelinkAccessArgs) GetServiceRedisUserConfigPrivatelinkAccessPtrInput {
	return (*getServiceRedisUserConfigPrivatelinkAccessPtrType)(v)
}

func (*getServiceRedisUserConfigPrivatelinkAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceRedisUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (i *getServiceRedisUserConfigPrivatelinkAccessPtrType) ToGetServiceRedisUserConfigPrivatelinkAccessPtrOutput() GetServiceRedisUserConfigPrivatelinkAccessPtrOutput {
	return i.ToGetServiceRedisUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (i *getServiceRedisUserConfigPrivatelinkAccessPtrType) ToGetServiceRedisUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceRedisUserConfigPrivatelinkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceRedisUserConfigPrivatelinkAccessPtrOutput)
}

type GetServiceRedisUserConfigPrivatelinkAccessOutput struct{ *pulumi.OutputState }

func (GetServiceRedisUserConfigPrivatelinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceRedisUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetServiceRedisUserConfigPrivatelinkAccessOutput) ToGetServiceRedisUserConfigPrivatelinkAccessOutput() GetServiceRedisUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetServiceRedisUserConfigPrivatelinkAccessOutput) ToGetServiceRedisUserConfigPrivatelinkAccessOutputWithContext(ctx context.Context) GetServiceRedisUserConfigPrivatelinkAccessOutput {
	return o
}

func (o GetServiceRedisUserConfigPrivatelinkAccessOutput) ToGetServiceRedisUserConfigPrivatelinkAccessPtrOutput() GetServiceRedisUserConfigPrivatelinkAccessPtrOutput {
	return o.ToGetServiceRedisUserConfigPrivatelinkAccessPtrOutputWithContext(context.Background())
}

func (o GetServiceRedisUserConfigPrivatelinkAccessOutput) ToGetServiceRedisUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceRedisUserConfigPrivatelinkAccessPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfigPrivatelinkAccess) *GetServiceRedisUserConfigPrivatelinkAccess {
		return &v
	}).(GetServiceRedisUserConfigPrivatelinkAccessPtrOutput)
}
func (o GetServiceRedisUserConfigPrivatelinkAccessOutput) Redis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfigPrivatelinkAccess) *string { return v.Redis }).(pulumi.StringPtrOutput)
}

type GetServiceRedisUserConfigPrivatelinkAccessPtrOutput struct{ *pulumi.OutputState }

func (GetServiceRedisUserConfigPrivatelinkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceRedisUserConfigPrivatelinkAccess)(nil)).Elem()
}

func (o GetServiceRedisUserConfigPrivatelinkAccessPtrOutput) ToGetServiceRedisUserConfigPrivatelinkAccessPtrOutput() GetServiceRedisUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetServiceRedisUserConfigPrivatelinkAccessPtrOutput) ToGetServiceRedisUserConfigPrivatelinkAccessPtrOutputWithContext(ctx context.Context) GetServiceRedisUserConfigPrivatelinkAccessPtrOutput {
	return o
}

func (o GetServiceRedisUserConfigPrivatelinkAccessPtrOutput) Elem() GetServiceRedisUserConfigPrivatelinkAccessOutput {
	return o.ApplyT(func(v *GetServiceRedisUserConfigPrivatelinkAccess) GetServiceRedisUserConfigPrivatelinkAccess {
		return *v
	}).(GetServiceRedisUserConfigPrivatelinkAccessOutput)
}

func (o GetServiceRedisUserConfigPrivatelinkAccessPtrOutput) Redis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceRedisUserConfigPrivatelinkAccess) *string {
		if v == nil {
			return nil
		}
		return v.Redis
	}).(pulumi.StringPtrOutput)
}

type GetServiceRedisUserConfigPublicAccess struct {
	Prometheus *string `pulumi:"prometheus"`
	Redis      *string `pulumi:"redis"`
}

// GetServiceRedisUserConfigPublicAccessInput is an input type that accepts GetServiceRedisUserConfigPublicAccessArgs and GetServiceRedisUserConfigPublicAccessOutput values.
// You can construct a concrete instance of `GetServiceRedisUserConfigPublicAccessInput` via:
//
//          GetServiceRedisUserConfigPublicAccessArgs{...}
type GetServiceRedisUserConfigPublicAccessInput interface {
	pulumi.Input

	ToGetServiceRedisUserConfigPublicAccessOutput() GetServiceRedisUserConfigPublicAccessOutput
	ToGetServiceRedisUserConfigPublicAccessOutputWithContext(context.Context) GetServiceRedisUserConfigPublicAccessOutput
}

type GetServiceRedisUserConfigPublicAccessArgs struct {
	Prometheus pulumi.StringPtrInput `pulumi:"prometheus"`
	Redis      pulumi.StringPtrInput `pulumi:"redis"`
}

func (GetServiceRedisUserConfigPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceRedisUserConfigPublicAccess)(nil)).Elem()
}

func (i GetServiceRedisUserConfigPublicAccessArgs) ToGetServiceRedisUserConfigPublicAccessOutput() GetServiceRedisUserConfigPublicAccessOutput {
	return i.ToGetServiceRedisUserConfigPublicAccessOutputWithContext(context.Background())
}

func (i GetServiceRedisUserConfigPublicAccessArgs) ToGetServiceRedisUserConfigPublicAccessOutputWithContext(ctx context.Context) GetServiceRedisUserConfigPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceRedisUserConfigPublicAccessOutput)
}

func (i GetServiceRedisUserConfigPublicAccessArgs) ToGetServiceRedisUserConfigPublicAccessPtrOutput() GetServiceRedisUserConfigPublicAccessPtrOutput {
	return i.ToGetServiceRedisUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i GetServiceRedisUserConfigPublicAccessArgs) ToGetServiceRedisUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceRedisUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceRedisUserConfigPublicAccessOutput).ToGetServiceRedisUserConfigPublicAccessPtrOutputWithContext(ctx)
}

// GetServiceRedisUserConfigPublicAccessPtrInput is an input type that accepts GetServiceRedisUserConfigPublicAccessArgs, GetServiceRedisUserConfigPublicAccessPtr and GetServiceRedisUserConfigPublicAccessPtrOutput values.
// You can construct a concrete instance of `GetServiceRedisUserConfigPublicAccessPtrInput` via:
//
//          GetServiceRedisUserConfigPublicAccessArgs{...}
//
//  or:
//
//          nil
type GetServiceRedisUserConfigPublicAccessPtrInput interface {
	pulumi.Input

	ToGetServiceRedisUserConfigPublicAccessPtrOutput() GetServiceRedisUserConfigPublicAccessPtrOutput
	ToGetServiceRedisUserConfigPublicAccessPtrOutputWithContext(context.Context) GetServiceRedisUserConfigPublicAccessPtrOutput
}

type getServiceRedisUserConfigPublicAccessPtrType GetServiceRedisUserConfigPublicAccessArgs

func GetServiceRedisUserConfigPublicAccessPtr(v *GetServiceRedisUserConfigPublicAccessArgs) GetServiceRedisUserConfigPublicAccessPtrInput {
	return (*getServiceRedisUserConfigPublicAccessPtrType)(v)
}

func (*getServiceRedisUserConfigPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceRedisUserConfigPublicAccess)(nil)).Elem()
}

func (i *getServiceRedisUserConfigPublicAccessPtrType) ToGetServiceRedisUserConfigPublicAccessPtrOutput() GetServiceRedisUserConfigPublicAccessPtrOutput {
	return i.ToGetServiceRedisUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (i *getServiceRedisUserConfigPublicAccessPtrType) ToGetServiceRedisUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceRedisUserConfigPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceRedisUserConfigPublicAccessPtrOutput)
}

type GetServiceRedisUserConfigPublicAccessOutput struct{ *pulumi.OutputState }

func (GetServiceRedisUserConfigPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceRedisUserConfigPublicAccess)(nil)).Elem()
}

func (o GetServiceRedisUserConfigPublicAccessOutput) ToGetServiceRedisUserConfigPublicAccessOutput() GetServiceRedisUserConfigPublicAccessOutput {
	return o
}

func (o GetServiceRedisUserConfigPublicAccessOutput) ToGetServiceRedisUserConfigPublicAccessOutputWithContext(ctx context.Context) GetServiceRedisUserConfigPublicAccessOutput {
	return o
}

func (o GetServiceRedisUserConfigPublicAccessOutput) ToGetServiceRedisUserConfigPublicAccessPtrOutput() GetServiceRedisUserConfigPublicAccessPtrOutput {
	return o.ToGetServiceRedisUserConfigPublicAccessPtrOutputWithContext(context.Background())
}

func (o GetServiceRedisUserConfigPublicAccessOutput) ToGetServiceRedisUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceRedisUserConfigPublicAccessPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfigPublicAccess) *GetServiceRedisUserConfigPublicAccess {
		return &v
	}).(GetServiceRedisUserConfigPublicAccessPtrOutput)
}
func (o GetServiceRedisUserConfigPublicAccessOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfigPublicAccess) *string { return v.Prometheus }).(pulumi.StringPtrOutput)
}

func (o GetServiceRedisUserConfigPublicAccessOutput) Redis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRedisUserConfigPublicAccess) *string { return v.Redis }).(pulumi.StringPtrOutput)
}

type GetServiceRedisUserConfigPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (GetServiceRedisUserConfigPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceRedisUserConfigPublicAccess)(nil)).Elem()
}

func (o GetServiceRedisUserConfigPublicAccessPtrOutput) ToGetServiceRedisUserConfigPublicAccessPtrOutput() GetServiceRedisUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetServiceRedisUserConfigPublicAccessPtrOutput) ToGetServiceRedisUserConfigPublicAccessPtrOutputWithContext(ctx context.Context) GetServiceRedisUserConfigPublicAccessPtrOutput {
	return o
}

func (o GetServiceRedisUserConfigPublicAccessPtrOutput) Elem() GetServiceRedisUserConfigPublicAccessOutput {
	return o.ApplyT(func(v *GetServiceRedisUserConfigPublicAccess) GetServiceRedisUserConfigPublicAccess { return *v }).(GetServiceRedisUserConfigPublicAccessOutput)
}

func (o GetServiceRedisUserConfigPublicAccessPtrOutput) Prometheus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceRedisUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(pulumi.StringPtrOutput)
}

func (o GetServiceRedisUserConfigPublicAccessPtrOutput) Redis() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceRedisUserConfigPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Redis
	}).(pulumi.StringPtrOutput)
}

type GetServiceServiceIntegration struct {
	IntegrationType   string `pulumi:"integrationType"`
	SourceServiceName string `pulumi:"sourceServiceName"`
}

// GetServiceServiceIntegrationInput is an input type that accepts GetServiceServiceIntegrationArgs and GetServiceServiceIntegrationOutput values.
// You can construct a concrete instance of `GetServiceServiceIntegrationInput` via:
//
//          GetServiceServiceIntegrationArgs{...}
type GetServiceServiceIntegrationInput interface {
	pulumi.Input

	ToGetServiceServiceIntegrationOutput() GetServiceServiceIntegrationOutput
	ToGetServiceServiceIntegrationOutputWithContext(context.Context) GetServiceServiceIntegrationOutput
}

type GetServiceServiceIntegrationArgs struct {
	IntegrationType   pulumi.StringInput `pulumi:"integrationType"`
	SourceServiceName pulumi.StringInput `pulumi:"sourceServiceName"`
}

func (GetServiceServiceIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceServiceIntegration)(nil)).Elem()
}

func (i GetServiceServiceIntegrationArgs) ToGetServiceServiceIntegrationOutput() GetServiceServiceIntegrationOutput {
	return i.ToGetServiceServiceIntegrationOutputWithContext(context.Background())
}

func (i GetServiceServiceIntegrationArgs) ToGetServiceServiceIntegrationOutputWithContext(ctx context.Context) GetServiceServiceIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceServiceIntegrationOutput)
}

// GetServiceServiceIntegrationArrayInput is an input type that accepts GetServiceServiceIntegrationArray and GetServiceServiceIntegrationArrayOutput values.
// You can construct a concrete instance of `GetServiceServiceIntegrationArrayInput` via:
//
//          GetServiceServiceIntegrationArray{ GetServiceServiceIntegrationArgs{...} }
type GetServiceServiceIntegrationArrayInput interface {
	pulumi.Input

	ToGetServiceServiceIntegrationArrayOutput() GetServiceServiceIntegrationArrayOutput
	ToGetServiceServiceIntegrationArrayOutputWithContext(context.Context) GetServiceServiceIntegrationArrayOutput
}

type GetServiceServiceIntegrationArray []GetServiceServiceIntegrationInput

func (GetServiceServiceIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceServiceIntegration)(nil)).Elem()
}

func (i GetServiceServiceIntegrationArray) ToGetServiceServiceIntegrationArrayOutput() GetServiceServiceIntegrationArrayOutput {
	return i.ToGetServiceServiceIntegrationArrayOutputWithContext(context.Background())
}

func (i GetServiceServiceIntegrationArray) ToGetServiceServiceIntegrationArrayOutputWithContext(ctx context.Context) GetServiceServiceIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceServiceIntegrationArrayOutput)
}

type GetServiceServiceIntegrationOutput struct{ *pulumi.OutputState }

func (GetServiceServiceIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceServiceIntegration)(nil)).Elem()
}

func (o GetServiceServiceIntegrationOutput) ToGetServiceServiceIntegrationOutput() GetServiceServiceIntegrationOutput {
	return o
}

func (o GetServiceServiceIntegrationOutput) ToGetServiceServiceIntegrationOutputWithContext(ctx context.Context) GetServiceServiceIntegrationOutput {
	return o
}

func (o GetServiceServiceIntegrationOutput) IntegrationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceServiceIntegration) string { return v.IntegrationType }).(pulumi.StringOutput)
}

func (o GetServiceServiceIntegrationOutput) SourceServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceServiceIntegration) string { return v.SourceServiceName }).(pulumi.StringOutput)
}

type GetServiceServiceIntegrationArrayOutput struct{ *pulumi.OutputState }

func (GetServiceServiceIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceServiceIntegration)(nil)).Elem()
}

func (o GetServiceServiceIntegrationArrayOutput) ToGetServiceServiceIntegrationArrayOutput() GetServiceServiceIntegrationArrayOutput {
	return o
}

func (o GetServiceServiceIntegrationArrayOutput) ToGetServiceServiceIntegrationArrayOutputWithContext(ctx context.Context) GetServiceServiceIntegrationArrayOutput {
	return o
}

func (o GetServiceServiceIntegrationArrayOutput) Index(i pulumi.IntInput) GetServiceServiceIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceServiceIntegration {
		return vs[0].([]GetServiceServiceIntegration)[vs[1].(int)]
	}).(GetServiceServiceIntegrationOutput)
}

func init() {
	pulumi.RegisterOutputType(CassandraCassandraOutput{})
	pulumi.RegisterOutputType(CassandraCassandraPtrOutput{})
	pulumi.RegisterOutputType(CassandraCassandraUserConfigOutput{})
	pulumi.RegisterOutputType(CassandraCassandraUserConfigPtrOutput{})
	pulumi.RegisterOutputType(CassandraCassandraUserConfigCassandraOutput{})
	pulumi.RegisterOutputType(CassandraCassandraUserConfigCassandraPtrOutput{})
	pulumi.RegisterOutputType(CassandraCassandraUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(CassandraCassandraUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(CassandraCassandraUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(CassandraCassandraUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(CassandraComponentOutput{})
	pulumi.RegisterOutputType(CassandraComponentArrayOutput{})
	pulumi.RegisterOutputType(CassandraServiceIntegrationOutput{})
	pulumi.RegisterOutputType(CassandraServiceIntegrationArrayOutput{})
	pulumi.RegisterOutputType(ElasticSearchAclAclOutput{})
	pulumi.RegisterOutputType(ElasticSearchAclAclArrayOutput{})
	pulumi.RegisterOutputType(ElasticSearchAclAclRuleOutput{})
	pulumi.RegisterOutputType(ElasticSearchAclAclRuleArrayOutput{})
	pulumi.RegisterOutputType(ElasticSearchComponentOutput{})
	pulumi.RegisterOutputType(ElasticSearchComponentArrayOutput{})
	pulumi.RegisterOutputType(ElasticSearchElasticsearchOutput{})
	pulumi.RegisterOutputType(ElasticSearchElasticsearchPtrOutput{})
	pulumi.RegisterOutputType(ElasticSearchElasticsearchUserConfigOutput{})
	pulumi.RegisterOutputType(ElasticSearchElasticsearchUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ElasticSearchElasticsearchUserConfigElasticsearchOutput{})
	pulumi.RegisterOutputType(ElasticSearchElasticsearchUserConfigElasticsearchPtrOutput{})
	pulumi.RegisterOutputType(ElasticSearchElasticsearchUserConfigIndexPatternOutput{})
	pulumi.RegisterOutputType(ElasticSearchElasticsearchUserConfigIndexPatternArrayOutput{})
	pulumi.RegisterOutputType(ElasticSearchElasticsearchUserConfigIndexTemplateOutput{})
	pulumi.RegisterOutputType(ElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput{})
	pulumi.RegisterOutputType(ElasticSearchElasticsearchUserConfigKibanaOutput{})
	pulumi.RegisterOutputType(ElasticSearchElasticsearchUserConfigKibanaPtrOutput{})
	pulumi.RegisterOutputType(ElasticSearchElasticsearchUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(ElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(ElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(ElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(ElasticSearchElasticsearchUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(ElasticSearchElasticsearchUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(ElasticSearchServiceIntegrationOutput{})
	pulumi.RegisterOutputType(ElasticSearchServiceIntegrationArrayOutput{})
	pulumi.RegisterOutputType(GrafanaComponentOutput{})
	pulumi.RegisterOutputType(GrafanaComponentArrayOutput{})
	pulumi.RegisterOutputType(GrafanaGrafanaOutput{})
	pulumi.RegisterOutputType(GrafanaGrafanaPtrOutput{})
	pulumi.RegisterOutputType(GrafanaGrafanaUserConfigOutput{})
	pulumi.RegisterOutputType(GrafanaGrafanaUserConfigPtrOutput{})
	pulumi.RegisterOutputType(GrafanaGrafanaUserConfigAuthGenericOauthOutput{})
	pulumi.RegisterOutputType(GrafanaGrafanaUserConfigAuthGenericOauthPtrOutput{})
	pulumi.RegisterOutputType(GrafanaGrafanaUserConfigAuthGithubOutput{})
	pulumi.RegisterOutputType(GrafanaGrafanaUserConfigAuthGithubPtrOutput{})
	pulumi.RegisterOutputType(GrafanaGrafanaUserConfigAuthGitlabOutput{})
	pulumi.RegisterOutputType(GrafanaGrafanaUserConfigAuthGitlabPtrOutput{})
	pulumi.RegisterOutputType(GrafanaGrafanaUserConfigAuthGoogleOutput{})
	pulumi.RegisterOutputType(GrafanaGrafanaUserConfigAuthGooglePtrOutput{})
	pulumi.RegisterOutputType(GrafanaGrafanaUserConfigExternalImageStorageOutput{})
	pulumi.RegisterOutputType(GrafanaGrafanaUserConfigExternalImageStoragePtrOutput{})
	pulumi.RegisterOutputType(GrafanaGrafanaUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(GrafanaGrafanaUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(GrafanaGrafanaUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(GrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(GrafanaGrafanaUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(GrafanaGrafanaUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(GrafanaGrafanaUserConfigSmtpServerOutput{})
	pulumi.RegisterOutputType(GrafanaGrafanaUserConfigSmtpServerPtrOutput{})
	pulumi.RegisterOutputType(GrafanaServiceIntegrationOutput{})
	pulumi.RegisterOutputType(GrafanaServiceIntegrationArrayOutput{})
	pulumi.RegisterOutputType(InfluxDbComponentOutput{})
	pulumi.RegisterOutputType(InfluxDbComponentArrayOutput{})
	pulumi.RegisterOutputType(InfluxDbInfluxdbOutput{})
	pulumi.RegisterOutputType(InfluxDbInfluxdbPtrOutput{})
	pulumi.RegisterOutputType(InfluxDbInfluxdbUserConfigOutput{})
	pulumi.RegisterOutputType(InfluxDbInfluxdbUserConfigPtrOutput{})
	pulumi.RegisterOutputType(InfluxDbInfluxdbUserConfigInfluxdbOutput{})
	pulumi.RegisterOutputType(InfluxDbInfluxdbUserConfigInfluxdbPtrOutput{})
	pulumi.RegisterOutputType(InfluxDbInfluxdbUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(InfluxDbInfluxdbUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(InfluxDbInfluxdbUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(InfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(InfluxDbInfluxdbUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(InfluxDbInfluxdbUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(InfluxDbServiceIntegrationOutput{})
	pulumi.RegisterOutputType(InfluxDbServiceIntegrationArrayOutput{})
	pulumi.RegisterOutputType(KafkaComponentOutput{})
	pulumi.RegisterOutputType(KafkaComponentArrayOutput{})
	pulumi.RegisterOutputType(KafkaConnectComponentOutput{})
	pulumi.RegisterOutputType(KafkaConnectComponentArrayOutput{})
	pulumi.RegisterOutputType(KafkaConnectKafkaConnectOutput{})
	pulumi.RegisterOutputType(KafkaConnectKafkaConnectPtrOutput{})
	pulumi.RegisterOutputType(KafkaConnectKafkaConnectUserConfigOutput{})
	pulumi.RegisterOutputType(KafkaConnectKafkaConnectUserConfigPtrOutput{})
	pulumi.RegisterOutputType(KafkaConnectKafkaConnectUserConfigKafkaConnectOutput{})
	pulumi.RegisterOutputType(KafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput{})
	pulumi.RegisterOutputType(KafkaConnectKafkaConnectUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(KafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(KafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(KafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(KafkaConnectKafkaConnectUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(KafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(KafkaConnectServiceIntegrationOutput{})
	pulumi.RegisterOutputType(KafkaConnectServiceIntegrationArrayOutput{})
	pulumi.RegisterOutputType(KafkaConnectorTaskOutput{})
	pulumi.RegisterOutputType(KafkaConnectorTaskArrayOutput{})
	pulumi.RegisterOutputType(KafkaKafkaOutput{})
	pulumi.RegisterOutputType(KafkaKafkaPtrOutput{})
	pulumi.RegisterOutputType(KafkaKafkaUserConfigOutput{})
	pulumi.RegisterOutputType(KafkaKafkaUserConfigPtrOutput{})
	pulumi.RegisterOutputType(KafkaKafkaUserConfigKafkaOutput{})
	pulumi.RegisterOutputType(KafkaKafkaUserConfigKafkaPtrOutput{})
	pulumi.RegisterOutputType(KafkaKafkaUserConfigKafkaAuthenticationMethodsOutput{})
	pulumi.RegisterOutputType(KafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput{})
	pulumi.RegisterOutputType(KafkaKafkaUserConfigKafkaConnectConfigOutput{})
	pulumi.RegisterOutputType(KafkaKafkaUserConfigKafkaConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(KafkaKafkaUserConfigKafkaRestConfigOutput{})
	pulumi.RegisterOutputType(KafkaKafkaUserConfigKafkaRestConfigPtrOutput{})
	pulumi.RegisterOutputType(KafkaKafkaUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(KafkaKafkaUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(KafkaKafkaUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(KafkaKafkaUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(KafkaKafkaUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(KafkaKafkaUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(KafkaKafkaUserConfigSchemaRegistryConfigOutput{})
	pulumi.RegisterOutputType(KafkaKafkaUserConfigSchemaRegistryConfigPtrOutput{})
	pulumi.RegisterOutputType(KafkaMirrorMakerComponentOutput{})
	pulumi.RegisterOutputType(KafkaMirrorMakerComponentArrayOutput{})
	pulumi.RegisterOutputType(KafkaMirrorMakerKafkaMirrormakerOutput{})
	pulumi.RegisterOutputType(KafkaMirrorMakerKafkaMirrormakerPtrOutput{})
	pulumi.RegisterOutputType(KafkaMirrorMakerKafkaMirrormakerUserConfigOutput{})
	pulumi.RegisterOutputType(KafkaMirrorMakerKafkaMirrormakerUserConfigPtrOutput{})
	pulumi.RegisterOutputType(KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput{})
	pulumi.RegisterOutputType(KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput{})
	pulumi.RegisterOutputType(KafkaMirrorMakerServiceIntegrationOutput{})
	pulumi.RegisterOutputType(KafkaMirrorMakerServiceIntegrationArrayOutput{})
	pulumi.RegisterOutputType(KafkaServiceIntegrationOutput{})
	pulumi.RegisterOutputType(KafkaServiceIntegrationArrayOutput{})
	pulumi.RegisterOutputType(KafkaTopicConfigOutput{})
	pulumi.RegisterOutputType(KafkaTopicConfigPtrOutput{})
	pulumi.RegisterOutputType(KafkaTopicTagOutput{})
	pulumi.RegisterOutputType(KafkaTopicTagArrayOutput{})
	pulumi.RegisterOutputType(M3AggregatorComponentOutput{})
	pulumi.RegisterOutputType(M3AggregatorComponentArrayOutput{})
	pulumi.RegisterOutputType(M3AggregatorM3aggregatorOutput{})
	pulumi.RegisterOutputType(M3AggregatorM3aggregatorPtrOutput{})
	pulumi.RegisterOutputType(M3AggregatorM3aggregatorUserConfigOutput{})
	pulumi.RegisterOutputType(M3AggregatorM3aggregatorUserConfigPtrOutput{})
	pulumi.RegisterOutputType(M3AggregatorServiceIntegrationOutput{})
	pulumi.RegisterOutputType(M3AggregatorServiceIntegrationArrayOutput{})
	pulumi.RegisterOutputType(M3DbComponentOutput{})
	pulumi.RegisterOutputType(M3DbComponentArrayOutput{})
	pulumi.RegisterOutputType(M3DbM3dbOutput{})
	pulumi.RegisterOutputType(M3DbM3dbPtrOutput{})
	pulumi.RegisterOutputType(M3DbM3dbUserConfigOutput{})
	pulumi.RegisterOutputType(M3DbM3dbUserConfigPtrOutput{})
	pulumi.RegisterOutputType(M3DbM3dbUserConfigLimitsOutput{})
	pulumi.RegisterOutputType(M3DbM3dbUserConfigLimitsPtrOutput{})
	pulumi.RegisterOutputType(M3DbM3dbUserConfigNamespaceOutput{})
	pulumi.RegisterOutputType(M3DbM3dbUserConfigNamespaceArrayOutput{})
	pulumi.RegisterOutputType(M3DbM3dbUserConfigNamespaceOptionsOutput{})
	pulumi.RegisterOutputType(M3DbM3dbUserConfigNamespaceOptionsPtrOutput{})
	pulumi.RegisterOutputType(M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput{})
	pulumi.RegisterOutputType(M3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput{})
	pulumi.RegisterOutputType(M3DbM3dbUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(M3DbM3dbUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(M3DbM3dbUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(M3DbM3dbUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(M3DbM3dbUserConfigRulesOutput{})
	pulumi.RegisterOutputType(M3DbM3dbUserConfigRulesPtrOutput{})
	pulumi.RegisterOutputType(M3DbM3dbUserConfigRulesMappingOutput{})
	pulumi.RegisterOutputType(M3DbM3dbUserConfigRulesMappingArrayOutput{})
	pulumi.RegisterOutputType(M3DbM3dbUserConfigRulesMappingTagOutput{})
	pulumi.RegisterOutputType(M3DbM3dbUserConfigRulesMappingTagArrayOutput{})
	pulumi.RegisterOutputType(M3DbServiceIntegrationOutput{})
	pulumi.RegisterOutputType(M3DbServiceIntegrationArrayOutput{})
	pulumi.RegisterOutputType(MySqlComponentOutput{})
	pulumi.RegisterOutputType(MySqlComponentArrayOutput{})
	pulumi.RegisterOutputType(MySqlMysqlOutput{})
	pulumi.RegisterOutputType(MySqlMysqlPtrOutput{})
	pulumi.RegisterOutputType(MySqlMysqlUserConfigOutput{})
	pulumi.RegisterOutputType(MySqlMysqlUserConfigPtrOutput{})
	pulumi.RegisterOutputType(MySqlMysqlUserConfigMigrationOutput{})
	pulumi.RegisterOutputType(MySqlMysqlUserConfigMigrationPtrOutput{})
	pulumi.RegisterOutputType(MySqlMysqlUserConfigMysqlOutput{})
	pulumi.RegisterOutputType(MySqlMysqlUserConfigMysqlPtrOutput{})
	pulumi.RegisterOutputType(MySqlMysqlUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(MySqlMysqlUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(MySqlMysqlUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(MySqlMysqlUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(MySqlMysqlUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(MySqlMysqlUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(MySqlServiceIntegrationOutput{})
	pulumi.RegisterOutputType(MySqlServiceIntegrationArrayOutput{})
	pulumi.RegisterOutputType(PgComponentOutput{})
	pulumi.RegisterOutputType(PgComponentArrayOutput{})
	pulumi.RegisterOutputType(PgPgOutput{})
	pulumi.RegisterOutputType(PgPgPtrOutput{})
	pulumi.RegisterOutputType(PgPgUserConfigOutput{})
	pulumi.RegisterOutputType(PgPgUserConfigPtrOutput{})
	pulumi.RegisterOutputType(PgPgUserConfigMigrationOutput{})
	pulumi.RegisterOutputType(PgPgUserConfigMigrationPtrOutput{})
	pulumi.RegisterOutputType(PgPgUserConfigPgOutput{})
	pulumi.RegisterOutputType(PgPgUserConfigPgPtrOutput{})
	pulumi.RegisterOutputType(PgPgUserConfigPgbouncerOutput{})
	pulumi.RegisterOutputType(PgPgUserConfigPgbouncerPtrOutput{})
	pulumi.RegisterOutputType(PgPgUserConfigPglookoutOutput{})
	pulumi.RegisterOutputType(PgPgUserConfigPglookoutPtrOutput{})
	pulumi.RegisterOutputType(PgPgUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(PgPgUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(PgPgUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(PgPgUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(PgPgUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(PgPgUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(PgPgUserConfigTimescaledbOutput{})
	pulumi.RegisterOutputType(PgPgUserConfigTimescaledbPtrOutput{})
	pulumi.RegisterOutputType(PgServiceIntegrationOutput{})
	pulumi.RegisterOutputType(PgServiceIntegrationArrayOutput{})
	pulumi.RegisterOutputType(RedisComponentOutput{})
	pulumi.RegisterOutputType(RedisComponentArrayOutput{})
	pulumi.RegisterOutputType(RedisRedisOutput{})
	pulumi.RegisterOutputType(RedisRedisPtrOutput{})
	pulumi.RegisterOutputType(RedisRedisUserConfigOutput{})
	pulumi.RegisterOutputType(RedisRedisUserConfigPtrOutput{})
	pulumi.RegisterOutputType(RedisRedisUserConfigMigrationOutput{})
	pulumi.RegisterOutputType(RedisRedisUserConfigMigrationPtrOutput{})
	pulumi.RegisterOutputType(RedisRedisUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(RedisRedisUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(RedisRedisUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(RedisRedisUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(RedisRedisUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(RedisRedisUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(RedisServiceIntegrationOutput{})
	pulumi.RegisterOutputType(RedisServiceIntegrationArrayOutput{})
	pulumi.RegisterOutputType(ServiceCassandraOutput{})
	pulumi.RegisterOutputType(ServiceCassandraPtrOutput{})
	pulumi.RegisterOutputType(ServiceCassandraUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceCassandraUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceCassandraUserConfigCassandraOutput{})
	pulumi.RegisterOutputType(ServiceCassandraUserConfigCassandraPtrOutput{})
	pulumi.RegisterOutputType(ServiceCassandraUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(ServiceCassandraUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(ServiceCassandraUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(ServiceCassandraUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(ServiceComponentOutput{})
	pulumi.RegisterOutputType(ServiceComponentArrayOutput{})
	pulumi.RegisterOutputType(ServiceElasticsearchOutput{})
	pulumi.RegisterOutputType(ServiceElasticsearchPtrOutput{})
	pulumi.RegisterOutputType(ServiceElasticsearchUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceElasticsearchUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceElasticsearchUserConfigElasticsearchOutput{})
	pulumi.RegisterOutputType(ServiceElasticsearchUserConfigElasticsearchPtrOutput{})
	pulumi.RegisterOutputType(ServiceElasticsearchUserConfigIndexPatternOutput{})
	pulumi.RegisterOutputType(ServiceElasticsearchUserConfigIndexPatternArrayOutput{})
	pulumi.RegisterOutputType(ServiceElasticsearchUserConfigIndexTemplateOutput{})
	pulumi.RegisterOutputType(ServiceElasticsearchUserConfigIndexTemplatePtrOutput{})
	pulumi.RegisterOutputType(ServiceElasticsearchUserConfigKibanaOutput{})
	pulumi.RegisterOutputType(ServiceElasticsearchUserConfigKibanaPtrOutput{})
	pulumi.RegisterOutputType(ServiceElasticsearchUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(ServiceElasticsearchUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(ServiceElasticsearchUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(ServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(ServiceElasticsearchUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(ServiceElasticsearchUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(ServiceGrafanaOutput{})
	pulumi.RegisterOutputType(ServiceGrafanaPtrOutput{})
	pulumi.RegisterOutputType(ServiceGrafanaUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceGrafanaUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceGrafanaUserConfigAuthGenericOauthOutput{})
	pulumi.RegisterOutputType(ServiceGrafanaUserConfigAuthGenericOauthPtrOutput{})
	pulumi.RegisterOutputType(ServiceGrafanaUserConfigAuthGithubOutput{})
	pulumi.RegisterOutputType(ServiceGrafanaUserConfigAuthGithubPtrOutput{})
	pulumi.RegisterOutputType(ServiceGrafanaUserConfigAuthGitlabOutput{})
	pulumi.RegisterOutputType(ServiceGrafanaUserConfigAuthGitlabPtrOutput{})
	pulumi.RegisterOutputType(ServiceGrafanaUserConfigAuthGoogleOutput{})
	pulumi.RegisterOutputType(ServiceGrafanaUserConfigAuthGooglePtrOutput{})
	pulumi.RegisterOutputType(ServiceGrafanaUserConfigExternalImageStorageOutput{})
	pulumi.RegisterOutputType(ServiceGrafanaUserConfigExternalImageStoragePtrOutput{})
	pulumi.RegisterOutputType(ServiceGrafanaUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(ServiceGrafanaUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(ServiceGrafanaUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(ServiceGrafanaUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(ServiceGrafanaUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(ServiceGrafanaUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(ServiceGrafanaUserConfigSmtpServerOutput{})
	pulumi.RegisterOutputType(ServiceGrafanaUserConfigSmtpServerPtrOutput{})
	pulumi.RegisterOutputType(ServiceInfluxdbOutput{})
	pulumi.RegisterOutputType(ServiceInfluxdbPtrOutput{})
	pulumi.RegisterOutputType(ServiceInfluxdbUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceInfluxdbUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceInfluxdbUserConfigInfluxdbOutput{})
	pulumi.RegisterOutputType(ServiceInfluxdbUserConfigInfluxdbPtrOutput{})
	pulumi.RegisterOutputType(ServiceInfluxdbUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(ServiceInfluxdbUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(ServiceInfluxdbUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(ServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(ServiceInfluxdbUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(ServiceInfluxdbUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationDashboardUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationDashboardUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationDatadogUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationDatadogUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationDatadogUserConfigDatadogTagOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationDatadogUserConfigDatadogTagArrayOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointDatadogUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointDatadogUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointExternalKafkaUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointExternalKafkaUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointExternalSchemaRegistryUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointJolokiaUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointJolokiaUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointPrometheusUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointPrometheusUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointRsyslogUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointRsyslogUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointSignalfxUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationEndpointSignalfxUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationExternalAwsCloudwatchLogsUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationExternalAwsCloudwatchMetricsUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationExternalElasticsearchLogsUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationExternalElasticsearchLogsUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationExternalGoogleCloudLoggingUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationKafkaConnectUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationKafkaConnectUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationKafkaLogsUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationKafkaLogsUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationKafkaMirrormakerUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationKafkaMirrormakerUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationLogsUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationLogsUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationM3aggregatorUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationM3aggregatorUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationM3coordinatorUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationM3coordinatorUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationMetricsUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationMetricsUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationMetricsUserConfigSourceMysqlOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationMirrormakerUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationMirrormakerUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationPrometheusUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationPrometheusUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationPrometheusUserConfigSourceMysqlOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationReadReplicaUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationReadReplicaUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationRsyslogUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationRsyslogUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationSchemaRegistryProxyUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationSchemaRegistryProxyUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationSignalfxUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationSignalfxUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceKafkaOutput{})
	pulumi.RegisterOutputType(ServiceKafkaPtrOutput{})
	pulumi.RegisterOutputType(ServiceKafkaConnectOutput{})
	pulumi.RegisterOutputType(ServiceKafkaConnectPtrOutput{})
	pulumi.RegisterOutputType(ServiceKafkaConnectUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceKafkaConnectUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceKafkaConnectUserConfigKafkaConnectOutput{})
	pulumi.RegisterOutputType(ServiceKafkaConnectUserConfigKafkaConnectPtrOutput{})
	pulumi.RegisterOutputType(ServiceKafkaConnectUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(ServiceKafkaConnectUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(ServiceKafkaConnectUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(ServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(ServiceKafkaConnectUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(ServiceKafkaConnectUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(ServiceKafkaMirrormakerOutput{})
	pulumi.RegisterOutputType(ServiceKafkaMirrormakerPtrOutput{})
	pulumi.RegisterOutputType(ServiceKafkaMirrormakerUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceKafkaMirrormakerUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput{})
	pulumi.RegisterOutputType(ServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput{})
	pulumi.RegisterOutputType(ServiceKafkaUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceKafkaUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceKafkaUserConfigKafkaOutput{})
	pulumi.RegisterOutputType(ServiceKafkaUserConfigKafkaPtrOutput{})
	pulumi.RegisterOutputType(ServiceKafkaUserConfigKafkaAuthenticationMethodsOutput{})
	pulumi.RegisterOutputType(ServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput{})
	pulumi.RegisterOutputType(ServiceKafkaUserConfigKafkaConnectConfigOutput{})
	pulumi.RegisterOutputType(ServiceKafkaUserConfigKafkaConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceKafkaUserConfigKafkaRestConfigOutput{})
	pulumi.RegisterOutputType(ServiceKafkaUserConfigKafkaRestConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceKafkaUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(ServiceKafkaUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(ServiceKafkaUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(ServiceKafkaUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(ServiceKafkaUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(ServiceKafkaUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(ServiceKafkaUserConfigSchemaRegistryConfigOutput{})
	pulumi.RegisterOutputType(ServiceKafkaUserConfigSchemaRegistryConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceMysqlOutput{})
	pulumi.RegisterOutputType(ServiceMysqlPtrOutput{})
	pulumi.RegisterOutputType(ServiceMysqlUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceMysqlUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceMysqlUserConfigMigrationOutput{})
	pulumi.RegisterOutputType(ServiceMysqlUserConfigMigrationPtrOutput{})
	pulumi.RegisterOutputType(ServiceMysqlUserConfigMysqlOutput{})
	pulumi.RegisterOutputType(ServiceMysqlUserConfigMysqlPtrOutput{})
	pulumi.RegisterOutputType(ServiceMysqlUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(ServiceMysqlUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(ServiceMysqlUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(ServiceMysqlUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(ServiceMysqlUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(ServiceMysqlUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(ServicePgOutput{})
	pulumi.RegisterOutputType(ServicePgPtrOutput{})
	pulumi.RegisterOutputType(ServicePgUserConfigOutput{})
	pulumi.RegisterOutputType(ServicePgUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServicePgUserConfigMigrationOutput{})
	pulumi.RegisterOutputType(ServicePgUserConfigMigrationPtrOutput{})
	pulumi.RegisterOutputType(ServicePgUserConfigPgOutput{})
	pulumi.RegisterOutputType(ServicePgUserConfigPgPtrOutput{})
	pulumi.RegisterOutputType(ServicePgUserConfigPgbouncerOutput{})
	pulumi.RegisterOutputType(ServicePgUserConfigPgbouncerPtrOutput{})
	pulumi.RegisterOutputType(ServicePgUserConfigPglookoutOutput{})
	pulumi.RegisterOutputType(ServicePgUserConfigPglookoutPtrOutput{})
	pulumi.RegisterOutputType(ServicePgUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(ServicePgUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(ServicePgUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(ServicePgUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(ServicePgUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(ServicePgUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(ServicePgUserConfigTimescaledbOutput{})
	pulumi.RegisterOutputType(ServicePgUserConfigTimescaledbPtrOutput{})
	pulumi.RegisterOutputType(ServiceRedisOutput{})
	pulumi.RegisterOutputType(ServiceRedisPtrOutput{})
	pulumi.RegisterOutputType(ServiceRedisUserConfigOutput{})
	pulumi.RegisterOutputType(ServiceRedisUserConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceRedisUserConfigMigrationOutput{})
	pulumi.RegisterOutputType(ServiceRedisUserConfigMigrationPtrOutput{})
	pulumi.RegisterOutputType(ServiceRedisUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(ServiceRedisUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(ServiceRedisUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(ServiceRedisUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(ServiceRedisUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(ServiceRedisUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(ServiceServiceIntegrationOutput{})
	pulumi.RegisterOutputType(ServiceServiceIntegrationArrayOutput{})
	pulumi.RegisterOutputType(GetCassandaCassandraOutput{})
	pulumi.RegisterOutputType(GetCassandaCassandraUserConfigOutput{})
	pulumi.RegisterOutputType(GetCassandaCassandraUserConfigCassandraOutput{})
	pulumi.RegisterOutputType(GetCassandaCassandraUserConfigCassandraPtrOutput{})
	pulumi.RegisterOutputType(GetCassandaCassandraUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(GetCassandaCassandraUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(GetCassandaCassandraUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(GetCassandaCassandraUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(GetCassandaComponentOutput{})
	pulumi.RegisterOutputType(GetCassandaComponentArrayOutput{})
	pulumi.RegisterOutputType(GetCassandaServiceIntegrationOutput{})
	pulumi.RegisterOutputType(GetCassandaServiceIntegrationArrayOutput{})
	pulumi.RegisterOutputType(GetElasticSearchAclAclOutput{})
	pulumi.RegisterOutputType(GetElasticSearchAclAclArrayOutput{})
	pulumi.RegisterOutputType(GetElasticSearchAclAclRuleOutput{})
	pulumi.RegisterOutputType(GetElasticSearchAclAclRuleArrayOutput{})
	pulumi.RegisterOutputType(GetElasticSearchComponentOutput{})
	pulumi.RegisterOutputType(GetElasticSearchComponentArrayOutput{})
	pulumi.RegisterOutputType(GetElasticSearchElasticsearchOutput{})
	pulumi.RegisterOutputType(GetElasticSearchElasticsearchUserConfigOutput{})
	pulumi.RegisterOutputType(GetElasticSearchElasticsearchUserConfigElasticsearchOutput{})
	pulumi.RegisterOutputType(GetElasticSearchElasticsearchUserConfigElasticsearchPtrOutput{})
	pulumi.RegisterOutputType(GetElasticSearchElasticsearchUserConfigIndexPatternOutput{})
	pulumi.RegisterOutputType(GetElasticSearchElasticsearchUserConfigIndexPatternArrayOutput{})
	pulumi.RegisterOutputType(GetElasticSearchElasticsearchUserConfigIndexTemplateOutput{})
	pulumi.RegisterOutputType(GetElasticSearchElasticsearchUserConfigIndexTemplatePtrOutput{})
	pulumi.RegisterOutputType(GetElasticSearchElasticsearchUserConfigKibanaOutput{})
	pulumi.RegisterOutputType(GetElasticSearchElasticsearchUserConfigKibanaPtrOutput{})
	pulumi.RegisterOutputType(GetElasticSearchElasticsearchUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(GetElasticSearchElasticsearchUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(GetElasticSearchElasticsearchUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(GetElasticSearchElasticsearchUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(GetElasticSearchElasticsearchUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(GetElasticSearchElasticsearchUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(GetElasticSearchServiceIntegrationOutput{})
	pulumi.RegisterOutputType(GetElasticSearchServiceIntegrationArrayOutput{})
	pulumi.RegisterOutputType(GetGrafanaComponentOutput{})
	pulumi.RegisterOutputType(GetGrafanaComponentArrayOutput{})
	pulumi.RegisterOutputType(GetGrafanaGrafanaOutput{})
	pulumi.RegisterOutputType(GetGrafanaGrafanaUserConfigOutput{})
	pulumi.RegisterOutputType(GetGrafanaGrafanaUserConfigAuthGenericOauthOutput{})
	pulumi.RegisterOutputType(GetGrafanaGrafanaUserConfigAuthGenericOauthPtrOutput{})
	pulumi.RegisterOutputType(GetGrafanaGrafanaUserConfigAuthGithubOutput{})
	pulumi.RegisterOutputType(GetGrafanaGrafanaUserConfigAuthGithubPtrOutput{})
	pulumi.RegisterOutputType(GetGrafanaGrafanaUserConfigAuthGitlabOutput{})
	pulumi.RegisterOutputType(GetGrafanaGrafanaUserConfigAuthGitlabPtrOutput{})
	pulumi.RegisterOutputType(GetGrafanaGrafanaUserConfigAuthGoogleOutput{})
	pulumi.RegisterOutputType(GetGrafanaGrafanaUserConfigAuthGooglePtrOutput{})
	pulumi.RegisterOutputType(GetGrafanaGrafanaUserConfigExternalImageStorageOutput{})
	pulumi.RegisterOutputType(GetGrafanaGrafanaUserConfigExternalImageStoragePtrOutput{})
	pulumi.RegisterOutputType(GetGrafanaGrafanaUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(GetGrafanaGrafanaUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(GetGrafanaGrafanaUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(GetGrafanaGrafanaUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(GetGrafanaGrafanaUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(GetGrafanaGrafanaUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(GetGrafanaGrafanaUserConfigSmtpServerOutput{})
	pulumi.RegisterOutputType(GetGrafanaGrafanaUserConfigSmtpServerPtrOutput{})
	pulumi.RegisterOutputType(GetGrafanaServiceIntegrationOutput{})
	pulumi.RegisterOutputType(GetGrafanaServiceIntegrationArrayOutput{})
	pulumi.RegisterOutputType(GetInfluxDbComponentOutput{})
	pulumi.RegisterOutputType(GetInfluxDbComponentArrayOutput{})
	pulumi.RegisterOutputType(GetInfluxDbInfluxdbOutput{})
	pulumi.RegisterOutputType(GetInfluxDbInfluxdbUserConfigOutput{})
	pulumi.RegisterOutputType(GetInfluxDbInfluxdbUserConfigInfluxdbOutput{})
	pulumi.RegisterOutputType(GetInfluxDbInfluxdbUserConfigInfluxdbPtrOutput{})
	pulumi.RegisterOutputType(GetInfluxDbInfluxdbUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(GetInfluxDbInfluxdbUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(GetInfluxDbInfluxdbUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(GetInfluxDbInfluxdbUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(GetInfluxDbInfluxdbUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(GetInfluxDbInfluxdbUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(GetInfluxDbServiceIntegrationOutput{})
	pulumi.RegisterOutputType(GetInfluxDbServiceIntegrationArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaComponentOutput{})
	pulumi.RegisterOutputType(GetKafkaComponentArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaConnectComponentOutput{})
	pulumi.RegisterOutputType(GetKafkaConnectComponentArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaConnectKafkaConnectOutput{})
	pulumi.RegisterOutputType(GetKafkaConnectKafkaConnectUserConfigOutput{})
	pulumi.RegisterOutputType(GetKafkaConnectKafkaConnectUserConfigKafkaConnectOutput{})
	pulumi.RegisterOutputType(GetKafkaConnectKafkaConnectUserConfigKafkaConnectPtrOutput{})
	pulumi.RegisterOutputType(GetKafkaConnectKafkaConnectUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(GetKafkaConnectKafkaConnectUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(GetKafkaConnectKafkaConnectUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(GetKafkaConnectKafkaConnectUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(GetKafkaConnectServiceIntegrationOutput{})
	pulumi.RegisterOutputType(GetKafkaConnectServiceIntegrationArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaConnectorTaskOutput{})
	pulumi.RegisterOutputType(GetKafkaConnectorTaskArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaKafkaOutput{})
	pulumi.RegisterOutputType(GetKafkaKafkaUserConfigOutput{})
	pulumi.RegisterOutputType(GetKafkaKafkaUserConfigKafkaOutput{})
	pulumi.RegisterOutputType(GetKafkaKafkaUserConfigKafkaPtrOutput{})
	pulumi.RegisterOutputType(GetKafkaKafkaUserConfigKafkaAuthenticationMethodsOutput{})
	pulumi.RegisterOutputType(GetKafkaKafkaUserConfigKafkaAuthenticationMethodsPtrOutput{})
	pulumi.RegisterOutputType(GetKafkaKafkaUserConfigKafkaConnectConfigOutput{})
	pulumi.RegisterOutputType(GetKafkaKafkaUserConfigKafkaConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(GetKafkaKafkaUserConfigKafkaRestConfigOutput{})
	pulumi.RegisterOutputType(GetKafkaKafkaUserConfigKafkaRestConfigPtrOutput{})
	pulumi.RegisterOutputType(GetKafkaKafkaUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(GetKafkaKafkaUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(GetKafkaKafkaUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(GetKafkaKafkaUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(GetKafkaKafkaUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(GetKafkaKafkaUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(GetKafkaKafkaUserConfigSchemaRegistryConfigOutput{})
	pulumi.RegisterOutputType(GetKafkaKafkaUserConfigSchemaRegistryConfigPtrOutput{})
	pulumi.RegisterOutputType(GetKafkaMirrorMakerComponentOutput{})
	pulumi.RegisterOutputType(GetKafkaMirrorMakerComponentArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaMirrorMakerKafkaMirrormakerOutput{})
	pulumi.RegisterOutputType(GetKafkaMirrorMakerKafkaMirrormakerUserConfigOutput{})
	pulumi.RegisterOutputType(GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerOutput{})
	pulumi.RegisterOutputType(GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput{})
	pulumi.RegisterOutputType(GetKafkaMirrorMakerServiceIntegrationOutput{})
	pulumi.RegisterOutputType(GetKafkaMirrorMakerServiceIntegrationArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaServiceIntegrationOutput{})
	pulumi.RegisterOutputType(GetKafkaServiceIntegrationArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaTopicConfigOutput{})
	pulumi.RegisterOutputType(GetKafkaTopicTagOutput{})
	pulumi.RegisterOutputType(GetKafkaTopicTagArrayOutput{})
	pulumi.RegisterOutputType(GetM3AggregatorComponentOutput{})
	pulumi.RegisterOutputType(GetM3AggregatorComponentArrayOutput{})
	pulumi.RegisterOutputType(GetM3AggregatorM3aggregatorOutput{})
	pulumi.RegisterOutputType(GetM3AggregatorM3aggregatorUserConfigOutput{})
	pulumi.RegisterOutputType(GetM3AggregatorServiceIntegrationOutput{})
	pulumi.RegisterOutputType(GetM3AggregatorServiceIntegrationArrayOutput{})
	pulumi.RegisterOutputType(GetM3DbComponentOutput{})
	pulumi.RegisterOutputType(GetM3DbComponentArrayOutput{})
	pulumi.RegisterOutputType(GetM3DbM3dbOutput{})
	pulumi.RegisterOutputType(GetM3DbM3dbUserConfigOutput{})
	pulumi.RegisterOutputType(GetM3DbM3dbUserConfigLimitsOutput{})
	pulumi.RegisterOutputType(GetM3DbM3dbUserConfigLimitsPtrOutput{})
	pulumi.RegisterOutputType(GetM3DbM3dbUserConfigNamespaceOutput{})
	pulumi.RegisterOutputType(GetM3DbM3dbUserConfigNamespaceArrayOutput{})
	pulumi.RegisterOutputType(GetM3DbM3dbUserConfigNamespaceOptionsOutput{})
	pulumi.RegisterOutputType(GetM3DbM3dbUserConfigNamespaceOptionsPtrOutput{})
	pulumi.RegisterOutputType(GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsOutput{})
	pulumi.RegisterOutputType(GetM3DbM3dbUserConfigNamespaceOptionsRetentionOptionsPtrOutput{})
	pulumi.RegisterOutputType(GetM3DbM3dbUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(GetM3DbM3dbUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(GetM3DbM3dbUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(GetM3DbM3dbUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(GetM3DbM3dbUserConfigRulesOutput{})
	pulumi.RegisterOutputType(GetM3DbM3dbUserConfigRulesPtrOutput{})
	pulumi.RegisterOutputType(GetM3DbM3dbUserConfigRulesMappingOutput{})
	pulumi.RegisterOutputType(GetM3DbM3dbUserConfigRulesMappingArrayOutput{})
	pulumi.RegisterOutputType(GetM3DbM3dbUserConfigRulesMappingTagOutput{})
	pulumi.RegisterOutputType(GetM3DbM3dbUserConfigRulesMappingTagArrayOutput{})
	pulumi.RegisterOutputType(GetM3DbServiceIntegrationOutput{})
	pulumi.RegisterOutputType(GetM3DbServiceIntegrationArrayOutput{})
	pulumi.RegisterOutputType(GetMySqlComponentOutput{})
	pulumi.RegisterOutputType(GetMySqlComponentArrayOutput{})
	pulumi.RegisterOutputType(GetMySqlMysqlOutput{})
	pulumi.RegisterOutputType(GetMySqlMysqlUserConfigOutput{})
	pulumi.RegisterOutputType(GetMySqlMysqlUserConfigMigrationOutput{})
	pulumi.RegisterOutputType(GetMySqlMysqlUserConfigMigrationPtrOutput{})
	pulumi.RegisterOutputType(GetMySqlMysqlUserConfigMysqlOutput{})
	pulumi.RegisterOutputType(GetMySqlMysqlUserConfigMysqlPtrOutput{})
	pulumi.RegisterOutputType(GetMySqlMysqlUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(GetMySqlMysqlUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(GetMySqlMysqlUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(GetMySqlMysqlUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(GetMySqlMysqlUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(GetMySqlMysqlUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(GetMySqlServiceIntegrationOutput{})
	pulumi.RegisterOutputType(GetMySqlServiceIntegrationArrayOutput{})
	pulumi.RegisterOutputType(GetPgComponentOutput{})
	pulumi.RegisterOutputType(GetPgComponentArrayOutput{})
	pulumi.RegisterOutputType(GetPgPgOutput{})
	pulumi.RegisterOutputType(GetPgPgUserConfigOutput{})
	pulumi.RegisterOutputType(GetPgPgUserConfigMigrationOutput{})
	pulumi.RegisterOutputType(GetPgPgUserConfigMigrationPtrOutput{})
	pulumi.RegisterOutputType(GetPgPgUserConfigPgOutput{})
	pulumi.RegisterOutputType(GetPgPgUserConfigPgPtrOutput{})
	pulumi.RegisterOutputType(GetPgPgUserConfigPgbouncerOutput{})
	pulumi.RegisterOutputType(GetPgPgUserConfigPgbouncerPtrOutput{})
	pulumi.RegisterOutputType(GetPgPgUserConfigPglookoutOutput{})
	pulumi.RegisterOutputType(GetPgPgUserConfigPglookoutPtrOutput{})
	pulumi.RegisterOutputType(GetPgPgUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(GetPgPgUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(GetPgPgUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(GetPgPgUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(GetPgPgUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(GetPgPgUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(GetPgPgUserConfigTimescaledbOutput{})
	pulumi.RegisterOutputType(GetPgPgUserConfigTimescaledbPtrOutput{})
	pulumi.RegisterOutputType(GetPgServiceIntegrationOutput{})
	pulumi.RegisterOutputType(GetPgServiceIntegrationArrayOutput{})
	pulumi.RegisterOutputType(GetRedisComponentOutput{})
	pulumi.RegisterOutputType(GetRedisComponentArrayOutput{})
	pulumi.RegisterOutputType(GetRedisRedisOutput{})
	pulumi.RegisterOutputType(GetRedisRedisUserConfigOutput{})
	pulumi.RegisterOutputType(GetRedisRedisUserConfigMigrationOutput{})
	pulumi.RegisterOutputType(GetRedisRedisUserConfigMigrationPtrOutput{})
	pulumi.RegisterOutputType(GetRedisRedisUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(GetRedisRedisUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(GetRedisRedisUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(GetRedisRedisUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(GetRedisRedisUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(GetRedisRedisUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(GetRedisServiceIntegrationOutput{})
	pulumi.RegisterOutputType(GetRedisServiceIntegrationArrayOutput{})
	pulumi.RegisterOutputType(GetServiceCassandraOutput{})
	pulumi.RegisterOutputType(GetServiceCassandraUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceCassandraUserConfigCassandraOutput{})
	pulumi.RegisterOutputType(GetServiceCassandraUserConfigCassandraPtrOutput{})
	pulumi.RegisterOutputType(GetServiceCassandraUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(GetServiceCassandraUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(GetServiceCassandraUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(GetServiceCassandraUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(GetServiceComponentTypeOutput{})
	pulumi.RegisterOutputType(GetServiceComponentTypeArrayOutput{})
	pulumi.RegisterOutputType(GetServiceElasticsearchOutput{})
	pulumi.RegisterOutputType(GetServiceElasticsearchUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceElasticsearchUserConfigElasticsearchOutput{})
	pulumi.RegisterOutputType(GetServiceElasticsearchUserConfigElasticsearchPtrOutput{})
	pulumi.RegisterOutputType(GetServiceElasticsearchUserConfigIndexPatternOutput{})
	pulumi.RegisterOutputType(GetServiceElasticsearchUserConfigIndexPatternArrayOutput{})
	pulumi.RegisterOutputType(GetServiceElasticsearchUserConfigIndexTemplateOutput{})
	pulumi.RegisterOutputType(GetServiceElasticsearchUserConfigIndexTemplatePtrOutput{})
	pulumi.RegisterOutputType(GetServiceElasticsearchUserConfigKibanaOutput{})
	pulumi.RegisterOutputType(GetServiceElasticsearchUserConfigKibanaPtrOutput{})
	pulumi.RegisterOutputType(GetServiceElasticsearchUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(GetServiceElasticsearchUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(GetServiceElasticsearchUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(GetServiceElasticsearchUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(GetServiceElasticsearchUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(GetServiceElasticsearchUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(GetServiceGrafanaOutput{})
	pulumi.RegisterOutputType(GetServiceGrafanaUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceGrafanaUserConfigAuthGenericOauthOutput{})
	pulumi.RegisterOutputType(GetServiceGrafanaUserConfigAuthGenericOauthPtrOutput{})
	pulumi.RegisterOutputType(GetServiceGrafanaUserConfigAuthGithubOutput{})
	pulumi.RegisterOutputType(GetServiceGrafanaUserConfigAuthGithubPtrOutput{})
	pulumi.RegisterOutputType(GetServiceGrafanaUserConfigAuthGitlabOutput{})
	pulumi.RegisterOutputType(GetServiceGrafanaUserConfigAuthGitlabPtrOutput{})
	pulumi.RegisterOutputType(GetServiceGrafanaUserConfigAuthGoogleOutput{})
	pulumi.RegisterOutputType(GetServiceGrafanaUserConfigAuthGooglePtrOutput{})
	pulumi.RegisterOutputType(GetServiceGrafanaUserConfigExternalImageStorageOutput{})
	pulumi.RegisterOutputType(GetServiceGrafanaUserConfigExternalImageStoragePtrOutput{})
	pulumi.RegisterOutputType(GetServiceGrafanaUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(GetServiceGrafanaUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(GetServiceGrafanaUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(GetServiceGrafanaUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(GetServiceGrafanaUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(GetServiceGrafanaUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(GetServiceGrafanaUserConfigSmtpServerOutput{})
	pulumi.RegisterOutputType(GetServiceGrafanaUserConfigSmtpServerPtrOutput{})
	pulumi.RegisterOutputType(GetServiceInfluxdbOutput{})
	pulumi.RegisterOutputType(GetServiceInfluxdbUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceInfluxdbUserConfigInfluxdbOutput{})
	pulumi.RegisterOutputType(GetServiceInfluxdbUserConfigInfluxdbPtrOutput{})
	pulumi.RegisterOutputType(GetServiceInfluxdbUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(GetServiceInfluxdbUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(GetServiceInfluxdbUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(GetServiceInfluxdbUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(GetServiceInfluxdbUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(GetServiceInfluxdbUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationDashboardUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationDatadogUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationDatadogUserConfigDatadogTagOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationDatadogUserConfigDatadogTagArrayOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationEndpointDatadogUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationEndpointDatadogUserConfigDatadogTagOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationEndpointDatadogUserConfigDatadogTagArrayOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationEndpointExternalKafkaUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationEndpointJolokiaUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationEndpointPrometheusUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationEndpointRsyslogUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationEndpointSignalfxUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationExternalElasticsearchLogsUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationExternalGoogleCloudLoggingUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationKafkaConnectUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationKafkaConnectUserConfigKafkaConnectOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationKafkaConnectUserConfigKafkaConnectPtrOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationKafkaLogsUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationKafkaMirrormakerUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationLogsUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationM3aggregatorUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationM3coordinatorUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationMetricsUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationMetricsUserConfigSourceMysqlOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationMetricsUserConfigSourceMysqlPtrOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationMetricsUserConfigSourceMysqlTelegrafPtrOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationMirrormakerUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationPrometheusUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationPrometheusUserConfigSourceMysqlOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationPrometheusUserConfigSourceMysqlPtrOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationPrometheusUserConfigSourceMysqlTelegrafPtrOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationReadReplicaUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationRsyslogUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationSchemaRegistryProxyUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceIntegrationSignalfxUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaConnectOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaConnectUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaConnectUserConfigKafkaConnectOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaConnectUserConfigKafkaConnectPtrOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaConnectUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaConnectUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaConnectUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaConnectUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaConnectUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaConnectUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaMirrormakerOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaMirrormakerUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaMirrormakerUserConfigKafkaMirrormakerPtrOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaUserConfigKafkaOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaUserConfigKafkaPtrOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaUserConfigKafkaAuthenticationMethodsOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaUserConfigKafkaAuthenticationMethodsPtrOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaUserConfigKafkaConnectConfigOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaUserConfigKafkaConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaUserConfigKafkaRestConfigOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaUserConfigKafkaRestConfigPtrOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaUserConfigSchemaRegistryConfigOutput{})
	pulumi.RegisterOutputType(GetServiceKafkaUserConfigSchemaRegistryConfigPtrOutput{})
	pulumi.RegisterOutputType(GetServiceMysqlOutput{})
	pulumi.RegisterOutputType(GetServiceMysqlUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceMysqlUserConfigMigrationOutput{})
	pulumi.RegisterOutputType(GetServiceMysqlUserConfigMigrationPtrOutput{})
	pulumi.RegisterOutputType(GetServiceMysqlUserConfigMysqlOutput{})
	pulumi.RegisterOutputType(GetServiceMysqlUserConfigMysqlPtrOutput{})
	pulumi.RegisterOutputType(GetServiceMysqlUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(GetServiceMysqlUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(GetServiceMysqlUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(GetServiceMysqlUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(GetServiceMysqlUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(GetServiceMysqlUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(GetServicePgOutput{})
	pulumi.RegisterOutputType(GetServicePgUserConfigOutput{})
	pulumi.RegisterOutputType(GetServicePgUserConfigMigrationOutput{})
	pulumi.RegisterOutputType(GetServicePgUserConfigMigrationPtrOutput{})
	pulumi.RegisterOutputType(GetServicePgUserConfigPgOutput{})
	pulumi.RegisterOutputType(GetServicePgUserConfigPgPtrOutput{})
	pulumi.RegisterOutputType(GetServicePgUserConfigPgbouncerOutput{})
	pulumi.RegisterOutputType(GetServicePgUserConfigPgbouncerPtrOutput{})
	pulumi.RegisterOutputType(GetServicePgUserConfigPglookoutOutput{})
	pulumi.RegisterOutputType(GetServicePgUserConfigPglookoutPtrOutput{})
	pulumi.RegisterOutputType(GetServicePgUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(GetServicePgUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(GetServicePgUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(GetServicePgUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(GetServicePgUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(GetServicePgUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(GetServicePgUserConfigTimescaledbOutput{})
	pulumi.RegisterOutputType(GetServicePgUserConfigTimescaledbPtrOutput{})
	pulumi.RegisterOutputType(GetServiceRedisOutput{})
	pulumi.RegisterOutputType(GetServiceRedisUserConfigOutput{})
	pulumi.RegisterOutputType(GetServiceRedisUserConfigMigrationOutput{})
	pulumi.RegisterOutputType(GetServiceRedisUserConfigMigrationPtrOutput{})
	pulumi.RegisterOutputType(GetServiceRedisUserConfigPrivateAccessOutput{})
	pulumi.RegisterOutputType(GetServiceRedisUserConfigPrivateAccessPtrOutput{})
	pulumi.RegisterOutputType(GetServiceRedisUserConfigPrivatelinkAccessOutput{})
	pulumi.RegisterOutputType(GetServiceRedisUserConfigPrivatelinkAccessPtrOutput{})
	pulumi.RegisterOutputType(GetServiceRedisUserConfigPublicAccessOutput{})
	pulumi.RegisterOutputType(GetServiceRedisUserConfigPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(GetServiceServiceIntegrationOutput{})
	pulumi.RegisterOutputType(GetServiceServiceIntegrationArrayOutput{})
}
