// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets information about a ClickHouse user.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aiven.LookupClickhouseUser(ctx, &aiven.LookupClickhouseUserArgs{
//				Project:     exampleProject.Project,
//				ServiceName: exampleClickhouse.ServiceName,
//				Username:    "analyst",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupClickhouseUser(ctx *pulumi.Context, args *LookupClickhouseUserArgs, opts ...pulumi.InvokeOption) (*LookupClickhouseUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupClickhouseUserResult
	err := ctx.Invoke("aiven:index/getClickhouseUser:getClickhouseUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getClickhouseUser.
type LookupClickhouseUserArgs struct {
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// The name of the ClickHouse user. Changing this property forces recreation of the resource.
	Username string `pulumi:"username"`
}

// A collection of values returned by getClickhouseUser.
type LookupClickhouseUserResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The password of the ClickHouse user.
	Password string `pulumi:"password"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// Indicates if a ClickHouse user is required.
	Required bool `pulumi:"required"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// The name of the ClickHouse user. Changing this property forces recreation of the resource.
	Username string `pulumi:"username"`
	// UUID of the ClickHouse user.
	Uuid string `pulumi:"uuid"`
}

func LookupClickhouseUserOutput(ctx *pulumi.Context, args LookupClickhouseUserOutputArgs, opts ...pulumi.InvokeOption) LookupClickhouseUserResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupClickhouseUserResultOutput, error) {
			args := v.(LookupClickhouseUserArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aiven:index/getClickhouseUser:getClickhouseUser", args, LookupClickhouseUserResultOutput{}, options).(LookupClickhouseUserResultOutput), nil
		}).(LookupClickhouseUserResultOutput)
}

// A collection of arguments for invoking getClickhouseUser.
type LookupClickhouseUserOutputArgs struct {
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringInput `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// The name of the ClickHouse user. Changing this property forces recreation of the resource.
	Username pulumi.StringInput `pulumi:"username"`
}

func (LookupClickhouseUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClickhouseUserArgs)(nil)).Elem()
}

// A collection of values returned by getClickhouseUser.
type LookupClickhouseUserResultOutput struct{ *pulumi.OutputState }

func (LookupClickhouseUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClickhouseUserResult)(nil)).Elem()
}

func (o LookupClickhouseUserResultOutput) ToLookupClickhouseUserResultOutput() LookupClickhouseUserResultOutput {
	return o
}

func (o LookupClickhouseUserResultOutput) ToLookupClickhouseUserResultOutputWithContext(ctx context.Context) LookupClickhouseUserResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupClickhouseUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseUserResult) string { return v.Id }).(pulumi.StringOutput)
}

// The password of the ClickHouse user.
func (o LookupClickhouseUserResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseUserResult) string { return v.Password }).(pulumi.StringOutput)
}

// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o LookupClickhouseUserResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseUserResult) string { return v.Project }).(pulumi.StringOutput)
}

// Indicates if a ClickHouse user is required.
func (o LookupClickhouseUserResultOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupClickhouseUserResult) bool { return v.Required }).(pulumi.BoolOutput)
}

// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o LookupClickhouseUserResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseUserResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// The name of the ClickHouse user. Changing this property forces recreation of the resource.
func (o LookupClickhouseUserResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseUserResult) string { return v.Username }).(pulumi.StringOutput)
}

// UUID of the ClickHouse user.
func (o LookupClickhouseUserResultOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseUserResult) string { return v.Uuid }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClickhouseUserResultOutput{})
}
