// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Clickhouse User data source provides information about the existing Aiven Clickhouse User.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.LookupClickhouseUser(ctx, &GetClickhouseUserArgs{
// 			Project:     aiven_project.Myproject.Project,
// 			ServiceName: aiven_clickhouse.Myservice.Service_name,
// 			Username:    "<USERNAME>",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupClickhouseUser(ctx *pulumi.Context, args *LookupClickhouseUserArgs, opts ...pulumi.InvokeOption) (*LookupClickhouseUserResult, error) {
	var rv LookupClickhouseUserResult
	err := ctx.Invoke("aiven:index/getClickhouseUser:getClickhouseUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getClickhouseUser.
type LookupClickhouseUserArgs struct {
	Project     string `pulumi:"project"`
	ServiceName string `pulumi:"serviceName"`
	Username    string `pulumi:"username"`
}

// A collection of values returned by getClickhouseUser.
type LookupClickhouseUserResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id          string `pulumi:"id"`
	Password    string `pulumi:"password"`
	Project     string `pulumi:"project"`
	Required    bool   `pulumi:"required"`
	ServiceName string `pulumi:"serviceName"`
	Username    string `pulumi:"username"`
	Uuid        string `pulumi:"uuid"`
}

func LookupClickhouseUserOutput(ctx *pulumi.Context, args LookupClickhouseUserOutputArgs, opts ...pulumi.InvokeOption) LookupClickhouseUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupClickhouseUserResult, error) {
			args := v.(LookupClickhouseUserArgs)
			r, err := LookupClickhouseUser(ctx, &args, opts...)
			var s LookupClickhouseUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupClickhouseUserResultOutput)
}

// A collection of arguments for invoking getClickhouseUser.
type LookupClickhouseUserOutputArgs struct {
	Project     pulumi.StringInput `pulumi:"project"`
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	Username    pulumi.StringInput `pulumi:"username"`
}

func (LookupClickhouseUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClickhouseUserArgs)(nil)).Elem()
}

// A collection of values returned by getClickhouseUser.
type LookupClickhouseUserResultOutput struct{ *pulumi.OutputState }

func (LookupClickhouseUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClickhouseUserResult)(nil)).Elem()
}

func (o LookupClickhouseUserResultOutput) ToLookupClickhouseUserResultOutput() LookupClickhouseUserResultOutput {
	return o
}

func (o LookupClickhouseUserResultOutput) ToLookupClickhouseUserResultOutputWithContext(ctx context.Context) LookupClickhouseUserResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupClickhouseUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseUserResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupClickhouseUserResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseUserResult) string { return v.Password }).(pulumi.StringOutput)
}

func (o LookupClickhouseUserResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseUserResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupClickhouseUserResultOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupClickhouseUserResult) bool { return v.Required }).(pulumi.BoolOutput)
}

func (o LookupClickhouseUserResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseUserResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o LookupClickhouseUserResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseUserResult) string { return v.Username }).(pulumi.StringOutput)
}

func (o LookupClickhouseUserResultOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClickhouseUserResult) string { return v.Uuid }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClickhouseUserResultOutput{})
}
