// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates and manages an AWS VPC peering connection with an Aiven VPC.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleVpc, err := aiven.NewProjectVpc(ctx, "example_vpc", &aiven.ProjectVpcArgs{
//				Project:     pulumi.Any(exampleProject.Project),
//				CloudName:   pulumi.String("aws-us-east-2"),
//				NetworkCidr: pulumi.String("192.168.1.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = aiven.NewAwsVpcPeeringConnection(ctx, "aws_to_aiven_peering", &aiven.AwsVpcPeeringConnectionArgs{
//				VpcId:        exampleVpc.ID(),
//				AwsAccountId: pulumi.Any(awsId),
//				AwsVpcId:     pulumi.String("vpc-1a2b3c4d5e6f7g8h9"),
//				AwsVpcRegion: pulumi.String("aws-us-east-2"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// ```sh
// $ pulumi import aiven:index/awsVpcPeeringConnection:AwsVpcPeeringConnection aws_to_aiven_peering PROJECT/VPC_ID/AWS_ACCOUNT_ID/AWS_VPC_ID/AWS_VPC_REGION
// ```
type AwsVpcPeeringConnection struct {
	pulumi.CustomResourceState

	// AWS account ID. Changing this property forces recreation of the resource.
	AwsAccountId pulumi.StringOutput `pulumi:"awsAccountId"`
	// AWS VPC ID. Changing this property forces recreation of the resource.
	AwsVpcId pulumi.StringOutput `pulumi:"awsVpcId"`
	// The ID of the AWS VPC peering connection.
	AwsVpcPeeringConnectionId pulumi.StringOutput `pulumi:"awsVpcPeeringConnectionId"`
	// The AWS region of the peered VPC, if different from the Aiven VPC region. Changing this property forces recreation of the resource.
	AwsVpcRegion pulumi.StringOutput `pulumi:"awsVpcRegion"`
	// The state of the peering connection.
	State pulumi.StringOutput `pulumi:"state"`
	// State-specific help or error information.
	StateInfo pulumi.MapOutput `pulumi:"stateInfo"`
	// The ID of the Aiven VPC. Changing this property forces recreation of the resource.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewAwsVpcPeeringConnection registers a new resource with the given unique name, arguments, and options.
func NewAwsVpcPeeringConnection(ctx *pulumi.Context,
	name string, args *AwsVpcPeeringConnectionArgs, opts ...pulumi.ResourceOption) (*AwsVpcPeeringConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AwsAccountId == nil {
		return nil, errors.New("invalid value for required argument 'AwsAccountId'")
	}
	if args.AwsVpcId == nil {
		return nil, errors.New("invalid value for required argument 'AwsVpcId'")
	}
	if args.AwsVpcRegion == nil {
		return nil, errors.New("invalid value for required argument 'AwsVpcRegion'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsVpcPeeringConnection
	err := ctx.RegisterResource("aiven:index/awsVpcPeeringConnection:AwsVpcPeeringConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsVpcPeeringConnection gets an existing AwsVpcPeeringConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsVpcPeeringConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsVpcPeeringConnectionState, opts ...pulumi.ResourceOption) (*AwsVpcPeeringConnection, error) {
	var resource AwsVpcPeeringConnection
	err := ctx.ReadResource("aiven:index/awsVpcPeeringConnection:AwsVpcPeeringConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsVpcPeeringConnection resources.
type awsVpcPeeringConnectionState struct {
	// AWS account ID. Changing this property forces recreation of the resource.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// AWS VPC ID. Changing this property forces recreation of the resource.
	AwsVpcId *string `pulumi:"awsVpcId"`
	// The ID of the AWS VPC peering connection.
	AwsVpcPeeringConnectionId *string `pulumi:"awsVpcPeeringConnectionId"`
	// The AWS region of the peered VPC, if different from the Aiven VPC region. Changing this property forces recreation of the resource.
	AwsVpcRegion *string `pulumi:"awsVpcRegion"`
	// The state of the peering connection.
	State *string `pulumi:"state"`
	// State-specific help or error information.
	StateInfo map[string]interface{} `pulumi:"stateInfo"`
	// The ID of the Aiven VPC. Changing this property forces recreation of the resource.
	VpcId *string `pulumi:"vpcId"`
}

type AwsVpcPeeringConnectionState struct {
	// AWS account ID. Changing this property forces recreation of the resource.
	AwsAccountId pulumi.StringPtrInput
	// AWS VPC ID. Changing this property forces recreation of the resource.
	AwsVpcId pulumi.StringPtrInput
	// The ID of the AWS VPC peering connection.
	AwsVpcPeeringConnectionId pulumi.StringPtrInput
	// The AWS region of the peered VPC, if different from the Aiven VPC region. Changing this property forces recreation of the resource.
	AwsVpcRegion pulumi.StringPtrInput
	// The state of the peering connection.
	State pulumi.StringPtrInput
	// State-specific help or error information.
	StateInfo pulumi.MapInput
	// The ID of the Aiven VPC. Changing this property forces recreation of the resource.
	VpcId pulumi.StringPtrInput
}

func (AwsVpcPeeringConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsVpcPeeringConnectionState)(nil)).Elem()
}

type awsVpcPeeringConnectionArgs struct {
	// AWS account ID. Changing this property forces recreation of the resource.
	AwsAccountId string `pulumi:"awsAccountId"`
	// AWS VPC ID. Changing this property forces recreation of the resource.
	AwsVpcId string `pulumi:"awsVpcId"`
	// The AWS region of the peered VPC, if different from the Aiven VPC region. Changing this property forces recreation of the resource.
	AwsVpcRegion string `pulumi:"awsVpcRegion"`
	// The ID of the Aiven VPC. Changing this property forces recreation of the resource.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a AwsVpcPeeringConnection resource.
type AwsVpcPeeringConnectionArgs struct {
	// AWS account ID. Changing this property forces recreation of the resource.
	AwsAccountId pulumi.StringInput
	// AWS VPC ID. Changing this property forces recreation of the resource.
	AwsVpcId pulumi.StringInput
	// The AWS region of the peered VPC, if different from the Aiven VPC region. Changing this property forces recreation of the resource.
	AwsVpcRegion pulumi.StringInput
	// The ID of the Aiven VPC. Changing this property forces recreation of the resource.
	VpcId pulumi.StringInput
}

func (AwsVpcPeeringConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsVpcPeeringConnectionArgs)(nil)).Elem()
}

type AwsVpcPeeringConnectionInput interface {
	pulumi.Input

	ToAwsVpcPeeringConnectionOutput() AwsVpcPeeringConnectionOutput
	ToAwsVpcPeeringConnectionOutputWithContext(ctx context.Context) AwsVpcPeeringConnectionOutput
}

func (*AwsVpcPeeringConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsVpcPeeringConnection)(nil)).Elem()
}

func (i *AwsVpcPeeringConnection) ToAwsVpcPeeringConnectionOutput() AwsVpcPeeringConnectionOutput {
	return i.ToAwsVpcPeeringConnectionOutputWithContext(context.Background())
}

func (i *AwsVpcPeeringConnection) ToAwsVpcPeeringConnectionOutputWithContext(ctx context.Context) AwsVpcPeeringConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsVpcPeeringConnectionOutput)
}

// AwsVpcPeeringConnectionArrayInput is an input type that accepts AwsVpcPeeringConnectionArray and AwsVpcPeeringConnectionArrayOutput values.
// You can construct a concrete instance of `AwsVpcPeeringConnectionArrayInput` via:
//
//	AwsVpcPeeringConnectionArray{ AwsVpcPeeringConnectionArgs{...} }
type AwsVpcPeeringConnectionArrayInput interface {
	pulumi.Input

	ToAwsVpcPeeringConnectionArrayOutput() AwsVpcPeeringConnectionArrayOutput
	ToAwsVpcPeeringConnectionArrayOutputWithContext(context.Context) AwsVpcPeeringConnectionArrayOutput
}

type AwsVpcPeeringConnectionArray []AwsVpcPeeringConnectionInput

func (AwsVpcPeeringConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsVpcPeeringConnection)(nil)).Elem()
}

func (i AwsVpcPeeringConnectionArray) ToAwsVpcPeeringConnectionArrayOutput() AwsVpcPeeringConnectionArrayOutput {
	return i.ToAwsVpcPeeringConnectionArrayOutputWithContext(context.Background())
}

func (i AwsVpcPeeringConnectionArray) ToAwsVpcPeeringConnectionArrayOutputWithContext(ctx context.Context) AwsVpcPeeringConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsVpcPeeringConnectionArrayOutput)
}

// AwsVpcPeeringConnectionMapInput is an input type that accepts AwsVpcPeeringConnectionMap and AwsVpcPeeringConnectionMapOutput values.
// You can construct a concrete instance of `AwsVpcPeeringConnectionMapInput` via:
//
//	AwsVpcPeeringConnectionMap{ "key": AwsVpcPeeringConnectionArgs{...} }
type AwsVpcPeeringConnectionMapInput interface {
	pulumi.Input

	ToAwsVpcPeeringConnectionMapOutput() AwsVpcPeeringConnectionMapOutput
	ToAwsVpcPeeringConnectionMapOutputWithContext(context.Context) AwsVpcPeeringConnectionMapOutput
}

type AwsVpcPeeringConnectionMap map[string]AwsVpcPeeringConnectionInput

func (AwsVpcPeeringConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsVpcPeeringConnection)(nil)).Elem()
}

func (i AwsVpcPeeringConnectionMap) ToAwsVpcPeeringConnectionMapOutput() AwsVpcPeeringConnectionMapOutput {
	return i.ToAwsVpcPeeringConnectionMapOutputWithContext(context.Background())
}

func (i AwsVpcPeeringConnectionMap) ToAwsVpcPeeringConnectionMapOutputWithContext(ctx context.Context) AwsVpcPeeringConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsVpcPeeringConnectionMapOutput)
}

type AwsVpcPeeringConnectionOutput struct{ *pulumi.OutputState }

func (AwsVpcPeeringConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsVpcPeeringConnection)(nil)).Elem()
}

func (o AwsVpcPeeringConnectionOutput) ToAwsVpcPeeringConnectionOutput() AwsVpcPeeringConnectionOutput {
	return o
}

func (o AwsVpcPeeringConnectionOutput) ToAwsVpcPeeringConnectionOutputWithContext(ctx context.Context) AwsVpcPeeringConnectionOutput {
	return o
}

// AWS account ID. Changing this property forces recreation of the resource.
func (o AwsVpcPeeringConnectionOutput) AwsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsVpcPeeringConnection) pulumi.StringOutput { return v.AwsAccountId }).(pulumi.StringOutput)
}

// AWS VPC ID. Changing this property forces recreation of the resource.
func (o AwsVpcPeeringConnectionOutput) AwsVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsVpcPeeringConnection) pulumi.StringOutput { return v.AwsVpcId }).(pulumi.StringOutput)
}

// The ID of the AWS VPC peering connection.
func (o AwsVpcPeeringConnectionOutput) AwsVpcPeeringConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsVpcPeeringConnection) pulumi.StringOutput { return v.AwsVpcPeeringConnectionId }).(pulumi.StringOutput)
}

// The AWS region of the peered VPC, if different from the Aiven VPC region. Changing this property forces recreation of the resource.
func (o AwsVpcPeeringConnectionOutput) AwsVpcRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsVpcPeeringConnection) pulumi.StringOutput { return v.AwsVpcRegion }).(pulumi.StringOutput)
}

// The state of the peering connection.
func (o AwsVpcPeeringConnectionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsVpcPeeringConnection) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// State-specific help or error information.
func (o AwsVpcPeeringConnectionOutput) StateInfo() pulumi.MapOutput {
	return o.ApplyT(func(v *AwsVpcPeeringConnection) pulumi.MapOutput { return v.StateInfo }).(pulumi.MapOutput)
}

// The ID of the Aiven VPC. Changing this property forces recreation of the resource.
func (o AwsVpcPeeringConnectionOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsVpcPeeringConnection) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type AwsVpcPeeringConnectionArrayOutput struct{ *pulumi.OutputState }

func (AwsVpcPeeringConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsVpcPeeringConnection)(nil)).Elem()
}

func (o AwsVpcPeeringConnectionArrayOutput) ToAwsVpcPeeringConnectionArrayOutput() AwsVpcPeeringConnectionArrayOutput {
	return o
}

func (o AwsVpcPeeringConnectionArrayOutput) ToAwsVpcPeeringConnectionArrayOutputWithContext(ctx context.Context) AwsVpcPeeringConnectionArrayOutput {
	return o
}

func (o AwsVpcPeeringConnectionArrayOutput) Index(i pulumi.IntInput) AwsVpcPeeringConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsVpcPeeringConnection {
		return vs[0].([]*AwsVpcPeeringConnection)[vs[1].(int)]
	}).(AwsVpcPeeringConnectionOutput)
}

type AwsVpcPeeringConnectionMapOutput struct{ *pulumi.OutputState }

func (AwsVpcPeeringConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsVpcPeeringConnection)(nil)).Elem()
}

func (o AwsVpcPeeringConnectionMapOutput) ToAwsVpcPeeringConnectionMapOutput() AwsVpcPeeringConnectionMapOutput {
	return o
}

func (o AwsVpcPeeringConnectionMapOutput) ToAwsVpcPeeringConnectionMapOutputWithContext(ctx context.Context) AwsVpcPeeringConnectionMapOutput {
	return o
}

func (o AwsVpcPeeringConnectionMapOutput) MapIndex(k pulumi.StringInput) AwsVpcPeeringConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsVpcPeeringConnection {
		return vs[0].(map[string]*AwsVpcPeeringConnection)[vs[1].(string)]
	}).(AwsVpcPeeringConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsVpcPeeringConnectionInput)(nil)).Elem(), &AwsVpcPeeringConnection{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsVpcPeeringConnectionArrayInput)(nil)).Elem(), AwsVpcPeeringConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsVpcPeeringConnectionMapInput)(nil)).Elem(), AwsVpcPeeringConnectionMap{})
	pulumi.RegisterOutputType(AwsVpcPeeringConnectionOutput{})
	pulumi.RegisterOutputType(AwsVpcPeeringConnectionArrayOutput{})
	pulumi.RegisterOutputType(AwsVpcPeeringConnectionMapOutput{})
}
