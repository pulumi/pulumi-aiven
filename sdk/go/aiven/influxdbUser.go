// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The InfluxDB User resource allows the creation and management of Aiven InfluxDB Users.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.NewInfluxdbUser(ctx, "foo", &aiven.InfluxdbUserArgs{
// 			ServiceName: pulumi.Any(aiven_influxdb.Bar.Service_name),
// 			Project:     pulumi.String("my-project"),
// 			Username:    pulumi.String("user-1"),
// 			Password:    pulumi.String(fmt.Sprintf("Test$1234")),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type InfluxdbUser struct {
	pulumi.CustomResourceState

	// Access certificate for the user if applicable for the service in question
	AccessCert pulumi.StringOutput `pulumi:"accessCert"`
	// Access certificate key for the user if applicable for the service in question
	AccessKey pulumi.StringOutput `pulumi:"accessKey"`
	// The password of the InfluxDB User.
	Password pulumi.StringOutput `pulumi:"password"`
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
	// reference. This property cannot be changed, doing so forces recreation of the resource.
	Project pulumi.StringOutput `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this
	// variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Type of the user account. Tells whether the user is the primary account or a regular account.
	Type pulumi.StringOutput `pulumi:"type"`
	// The actual name of the InfluxDB User. To set up proper dependencies please refer to this variable as a reference. This
	// property cannot be changed, doing so forces recreation of the resource.
	Username pulumi.StringOutput `pulumi:"username"`
}

// NewInfluxdbUser registers a new resource with the given unique name, arguments, and options.
func NewInfluxdbUser(ctx *pulumi.Context,
	name string, args *InfluxdbUserArgs, opts ...pulumi.ResourceOption) (*InfluxdbUser, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	var resource InfluxdbUser
	err := ctx.RegisterResource("aiven:index/influxdbUser:InfluxdbUser", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInfluxdbUser gets an existing InfluxdbUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInfluxdbUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InfluxdbUserState, opts ...pulumi.ResourceOption) (*InfluxdbUser, error) {
	var resource InfluxdbUser
	err := ctx.ReadResource("aiven:index/influxdbUser:InfluxdbUser", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InfluxdbUser resources.
type influxdbUserState struct {
	// Access certificate for the user if applicable for the service in question
	AccessCert *string `pulumi:"accessCert"`
	// Access certificate key for the user if applicable for the service in question
	AccessKey *string `pulumi:"accessKey"`
	// The password of the InfluxDB User.
	Password *string `pulumi:"password"`
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
	// reference. This property cannot be changed, doing so forces recreation of the resource.
	Project *string `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this
	// variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName *string `pulumi:"serviceName"`
	// Type of the user account. Tells whether the user is the primary account or a regular account.
	Type *string `pulumi:"type"`
	// The actual name of the InfluxDB User. To set up proper dependencies please refer to this variable as a reference. This
	// property cannot be changed, doing so forces recreation of the resource.
	Username *string `pulumi:"username"`
}

type InfluxdbUserState struct {
	// Access certificate for the user if applicable for the service in question
	AccessCert pulumi.StringPtrInput
	// Access certificate key for the user if applicable for the service in question
	AccessKey pulumi.StringPtrInput
	// The password of the InfluxDB User.
	Password pulumi.StringPtrInput
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
	// reference. This property cannot be changed, doing so forces recreation of the resource.
	Project pulumi.StringPtrInput
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this
	// variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName pulumi.StringPtrInput
	// Type of the user account. Tells whether the user is the primary account or a regular account.
	Type pulumi.StringPtrInput
	// The actual name of the InfluxDB User. To set up proper dependencies please refer to this variable as a reference. This
	// property cannot be changed, doing so forces recreation of the resource.
	Username pulumi.StringPtrInput
}

func (InfluxdbUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*influxdbUserState)(nil)).Elem()
}

type influxdbUserArgs struct {
	// The password of the InfluxDB User.
	Password *string `pulumi:"password"`
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
	// reference. This property cannot be changed, doing so forces recreation of the resource.
	Project string `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this
	// variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// The actual name of the InfluxDB User. To set up proper dependencies please refer to this variable as a reference. This
	// property cannot be changed, doing so forces recreation of the resource.
	Username string `pulumi:"username"`
}

// The set of arguments for constructing a InfluxdbUser resource.
type InfluxdbUserArgs struct {
	// The password of the InfluxDB User.
	Password pulumi.StringPtrInput
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
	// reference. This property cannot be changed, doing so forces recreation of the resource.
	Project pulumi.StringInput
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this
	// variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName pulumi.StringInput
	// The actual name of the InfluxDB User. To set up proper dependencies please refer to this variable as a reference. This
	// property cannot be changed, doing so forces recreation of the resource.
	Username pulumi.StringInput
}

func (InfluxdbUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*influxdbUserArgs)(nil)).Elem()
}

type InfluxdbUserInput interface {
	pulumi.Input

	ToInfluxdbUserOutput() InfluxdbUserOutput
	ToInfluxdbUserOutputWithContext(ctx context.Context) InfluxdbUserOutput
}

func (*InfluxdbUser) ElementType() reflect.Type {
	return reflect.TypeOf((**InfluxdbUser)(nil)).Elem()
}

func (i *InfluxdbUser) ToInfluxdbUserOutput() InfluxdbUserOutput {
	return i.ToInfluxdbUserOutputWithContext(context.Background())
}

func (i *InfluxdbUser) ToInfluxdbUserOutputWithContext(ctx context.Context) InfluxdbUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxdbUserOutput)
}

// InfluxdbUserArrayInput is an input type that accepts InfluxdbUserArray and InfluxdbUserArrayOutput values.
// You can construct a concrete instance of `InfluxdbUserArrayInput` via:
//
//          InfluxdbUserArray{ InfluxdbUserArgs{...} }
type InfluxdbUserArrayInput interface {
	pulumi.Input

	ToInfluxdbUserArrayOutput() InfluxdbUserArrayOutput
	ToInfluxdbUserArrayOutputWithContext(context.Context) InfluxdbUserArrayOutput
}

type InfluxdbUserArray []InfluxdbUserInput

func (InfluxdbUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InfluxdbUser)(nil)).Elem()
}

func (i InfluxdbUserArray) ToInfluxdbUserArrayOutput() InfluxdbUserArrayOutput {
	return i.ToInfluxdbUserArrayOutputWithContext(context.Background())
}

func (i InfluxdbUserArray) ToInfluxdbUserArrayOutputWithContext(ctx context.Context) InfluxdbUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxdbUserArrayOutput)
}

// InfluxdbUserMapInput is an input type that accepts InfluxdbUserMap and InfluxdbUserMapOutput values.
// You can construct a concrete instance of `InfluxdbUserMapInput` via:
//
//          InfluxdbUserMap{ "key": InfluxdbUserArgs{...} }
type InfluxdbUserMapInput interface {
	pulumi.Input

	ToInfluxdbUserMapOutput() InfluxdbUserMapOutput
	ToInfluxdbUserMapOutputWithContext(context.Context) InfluxdbUserMapOutput
}

type InfluxdbUserMap map[string]InfluxdbUserInput

func (InfluxdbUserMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InfluxdbUser)(nil)).Elem()
}

func (i InfluxdbUserMap) ToInfluxdbUserMapOutput() InfluxdbUserMapOutput {
	return i.ToInfluxdbUserMapOutputWithContext(context.Background())
}

func (i InfluxdbUserMap) ToInfluxdbUserMapOutputWithContext(ctx context.Context) InfluxdbUserMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxdbUserMapOutput)
}

type InfluxdbUserOutput struct{ *pulumi.OutputState }

func (InfluxdbUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfluxdbUser)(nil)).Elem()
}

func (o InfluxdbUserOutput) ToInfluxdbUserOutput() InfluxdbUserOutput {
	return o
}

func (o InfluxdbUserOutput) ToInfluxdbUserOutputWithContext(ctx context.Context) InfluxdbUserOutput {
	return o
}

// Access certificate for the user if applicable for the service in question
func (o InfluxdbUserOutput) AccessCert() pulumi.StringOutput {
	return o.ApplyT(func(v *InfluxdbUser) pulumi.StringOutput { return v.AccessCert }).(pulumi.StringOutput)
}

// Access certificate key for the user if applicable for the service in question
func (o InfluxdbUserOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v *InfluxdbUser) pulumi.StringOutput { return v.AccessKey }).(pulumi.StringOutput)
}

// The password of the InfluxDB User.
func (o InfluxdbUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *InfluxdbUser) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
// reference. This property cannot be changed, doing so forces recreation of the resource.
func (o InfluxdbUserOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *InfluxdbUser) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this
// variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
func (o InfluxdbUserOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *InfluxdbUser) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// Type of the user account. Tells whether the user is the primary account or a regular account.
func (o InfluxdbUserOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *InfluxdbUser) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The actual name of the InfluxDB User. To set up proper dependencies please refer to this variable as a reference. This
// property cannot be changed, doing so forces recreation of the resource.
func (o InfluxdbUserOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *InfluxdbUser) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

type InfluxdbUserArrayOutput struct{ *pulumi.OutputState }

func (InfluxdbUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InfluxdbUser)(nil)).Elem()
}

func (o InfluxdbUserArrayOutput) ToInfluxdbUserArrayOutput() InfluxdbUserArrayOutput {
	return o
}

func (o InfluxdbUserArrayOutput) ToInfluxdbUserArrayOutputWithContext(ctx context.Context) InfluxdbUserArrayOutput {
	return o
}

func (o InfluxdbUserArrayOutput) Index(i pulumi.IntInput) InfluxdbUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InfluxdbUser {
		return vs[0].([]*InfluxdbUser)[vs[1].(int)]
	}).(InfluxdbUserOutput)
}

type InfluxdbUserMapOutput struct{ *pulumi.OutputState }

func (InfluxdbUserMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InfluxdbUser)(nil)).Elem()
}

func (o InfluxdbUserMapOutput) ToInfluxdbUserMapOutput() InfluxdbUserMapOutput {
	return o
}

func (o InfluxdbUserMapOutput) ToInfluxdbUserMapOutputWithContext(ctx context.Context) InfluxdbUserMapOutput {
	return o
}

func (o InfluxdbUserMapOutput) MapIndex(k pulumi.StringInput) InfluxdbUserOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InfluxdbUser {
		return vs[0].(map[string]*InfluxdbUser)[vs[1].(string)]
	}).(InfluxdbUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InfluxdbUserInput)(nil)).Elem(), &InfluxdbUser{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfluxdbUserArrayInput)(nil)).Elem(), InfluxdbUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfluxdbUserMapInput)(nil)).Elem(), InfluxdbUserMap{})
	pulumi.RegisterOutputType(InfluxdbUserOutput{})
	pulumi.RegisterOutputType(InfluxdbUserArrayOutput{})
	pulumi.RegisterOutputType(InfluxdbUserMapOutput{})
}
