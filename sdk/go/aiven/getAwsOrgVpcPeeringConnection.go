// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets information about an AWS VPC peering connection.
//
// **This resource is in the beta stage and may change without notice.** Set
// the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
func LookupAwsOrgVpcPeeringConnection(ctx *pulumi.Context, args *LookupAwsOrgVpcPeeringConnectionArgs, opts ...pulumi.InvokeOption) (*LookupAwsOrgVpcPeeringConnectionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAwsOrgVpcPeeringConnectionResult
	err := ctx.Invoke("aiven:index/getAwsOrgVpcPeeringConnection:getAwsOrgVpcPeeringConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAwsOrgVpcPeeringConnection.
type LookupAwsOrgVpcPeeringConnectionArgs struct {
	// AWS account ID. Changing this property forces recreation of the resource.
	AwsAccountId string `pulumi:"awsAccountId"`
	// AWS VPC ID. Changing this property forces recreation of the resource.
	AwsVpcId string `pulumi:"awsVpcId"`
	// The AWS region of the peered VPC. For example, `eu-central-1`.
	AwsVpcRegion string `pulumi:"awsVpcRegion"`
	// Identifier of the organization.
	OrganizationId string `pulumi:"organizationId"`
	// Identifier of the organization VPC.
	OrganizationVpcId string `pulumi:"organizationVpcId"`
}

// A collection of values returned by getAwsOrgVpcPeeringConnection.
type LookupAwsOrgVpcPeeringConnectionResult struct {
	// AWS account ID. Changing this property forces recreation of the resource.
	AwsAccountId string `pulumi:"awsAccountId"`
	// AWS VPC ID. Changing this property forces recreation of the resource.
	AwsVpcId string `pulumi:"awsVpcId"`
	// The ID of the AWS VPC peering connection.
	AwsVpcPeeringConnectionId string `pulumi:"awsVpcPeeringConnectionId"`
	// The AWS region of the peered VPC. For example, `eu-central-1`.
	AwsVpcRegion string `pulumi:"awsVpcRegion"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Identifier of the organization.
	OrganizationId string `pulumi:"organizationId"`
	// Identifier of the organization VPC.
	OrganizationVpcId string `pulumi:"organizationVpcId"`
	// The ID of the peering connection.
	PeeringConnectionId string `pulumi:"peeringConnectionId"`
	// State of the peering connection. The possible values are `ACTIVE`, `APPROVED`, `APPROVED_PEER_REQUESTED`, `DELETED`, `DELETED_BY_PEER`, `DELETING`, `ERROR`, `INVALID_SPECIFICATION`, `PENDING_PEER` and `REJECTED_BY_PEER`.
	State string `pulumi:"state"`
}

func LookupAwsOrgVpcPeeringConnectionOutput(ctx *pulumi.Context, args LookupAwsOrgVpcPeeringConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupAwsOrgVpcPeeringConnectionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAwsOrgVpcPeeringConnectionResultOutput, error) {
			args := v.(LookupAwsOrgVpcPeeringConnectionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aiven:index/getAwsOrgVpcPeeringConnection:getAwsOrgVpcPeeringConnection", args, LookupAwsOrgVpcPeeringConnectionResultOutput{}, options).(LookupAwsOrgVpcPeeringConnectionResultOutput), nil
		}).(LookupAwsOrgVpcPeeringConnectionResultOutput)
}

// A collection of arguments for invoking getAwsOrgVpcPeeringConnection.
type LookupAwsOrgVpcPeeringConnectionOutputArgs struct {
	// AWS account ID. Changing this property forces recreation of the resource.
	AwsAccountId pulumi.StringInput `pulumi:"awsAccountId"`
	// AWS VPC ID. Changing this property forces recreation of the resource.
	AwsVpcId pulumi.StringInput `pulumi:"awsVpcId"`
	// The AWS region of the peered VPC. For example, `eu-central-1`.
	AwsVpcRegion pulumi.StringInput `pulumi:"awsVpcRegion"`
	// Identifier of the organization.
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	// Identifier of the organization VPC.
	OrganizationVpcId pulumi.StringInput `pulumi:"organizationVpcId"`
}

func (LookupAwsOrgVpcPeeringConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAwsOrgVpcPeeringConnectionArgs)(nil)).Elem()
}

// A collection of values returned by getAwsOrgVpcPeeringConnection.
type LookupAwsOrgVpcPeeringConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupAwsOrgVpcPeeringConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAwsOrgVpcPeeringConnectionResult)(nil)).Elem()
}

func (o LookupAwsOrgVpcPeeringConnectionResultOutput) ToLookupAwsOrgVpcPeeringConnectionResultOutput() LookupAwsOrgVpcPeeringConnectionResultOutput {
	return o
}

func (o LookupAwsOrgVpcPeeringConnectionResultOutput) ToLookupAwsOrgVpcPeeringConnectionResultOutputWithContext(ctx context.Context) LookupAwsOrgVpcPeeringConnectionResultOutput {
	return o
}

// AWS account ID. Changing this property forces recreation of the resource.
func (o LookupAwsOrgVpcPeeringConnectionResultOutput) AwsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsOrgVpcPeeringConnectionResult) string { return v.AwsAccountId }).(pulumi.StringOutput)
}

// AWS VPC ID. Changing this property forces recreation of the resource.
func (o LookupAwsOrgVpcPeeringConnectionResultOutput) AwsVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsOrgVpcPeeringConnectionResult) string { return v.AwsVpcId }).(pulumi.StringOutput)
}

// The ID of the AWS VPC peering connection.
func (o LookupAwsOrgVpcPeeringConnectionResultOutput) AwsVpcPeeringConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsOrgVpcPeeringConnectionResult) string { return v.AwsVpcPeeringConnectionId }).(pulumi.StringOutput)
}

// The AWS region of the peered VPC. For example, `eu-central-1`.
func (o LookupAwsOrgVpcPeeringConnectionResultOutput) AwsVpcRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsOrgVpcPeeringConnectionResult) string { return v.AwsVpcRegion }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAwsOrgVpcPeeringConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsOrgVpcPeeringConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

// Identifier of the organization.
func (o LookupAwsOrgVpcPeeringConnectionResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsOrgVpcPeeringConnectionResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// Identifier of the organization VPC.
func (o LookupAwsOrgVpcPeeringConnectionResultOutput) OrganizationVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsOrgVpcPeeringConnectionResult) string { return v.OrganizationVpcId }).(pulumi.StringOutput)
}

// The ID of the peering connection.
func (o LookupAwsOrgVpcPeeringConnectionResultOutput) PeeringConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsOrgVpcPeeringConnectionResult) string { return v.PeeringConnectionId }).(pulumi.StringOutput)
}

// State of the peering connection. The possible values are `ACTIVE`, `APPROVED`, `APPROVED_PEER_REQUESTED`, `DELETED`, `DELETED_BY_PEER`, `DELETING`, `ERROR`, `INVALID_SPECIFICATION`, `PENDING_PEER` and `REJECTED_BY_PEER`.
func (o LookupAwsOrgVpcPeeringConnectionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsOrgVpcPeeringConnectionResult) string { return v.State }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAwsOrgVpcPeeringConnectionResultOutput{})
}
