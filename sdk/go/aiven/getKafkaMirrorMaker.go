// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Kafka MirrorMaker data source provides information about the existing Aiven Kafka MirrorMaker 2 service.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.LookupKafkaMirrorMaker(ctx, &GetKafkaMirrorMakerArgs{
// 			Project:     data.Aiven_project.Pr1.Project,
// 			ServiceName: "my-mm1",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupKafkaMirrorMaker(ctx *pulumi.Context, args *LookupKafkaMirrorMakerArgs, opts ...pulumi.InvokeOption) (*LookupKafkaMirrorMakerResult, error) {
	var rv LookupKafkaMirrorMakerResult
	err := ctx.Invoke("aiven:index/getKafkaMirrorMaker:getKafkaMirrorMaker", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKafkaMirrorMaker.
type LookupKafkaMirrorMakerArgs struct {
	Project     string `pulumi:"project"`
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getKafkaMirrorMaker.
type LookupKafkaMirrorMakerResult struct {
	CloudName        string                         `pulumi:"cloudName"`
	Components       []GetKafkaMirrorMakerComponent `pulumi:"components"`
	DiskSpace        string                         `pulumi:"diskSpace"`
	DiskSpaceCap     string                         `pulumi:"diskSpaceCap"`
	DiskSpaceDefault string                         `pulumi:"diskSpaceDefault"`
	DiskSpaceStep    string                         `pulumi:"diskSpaceStep"`
	DiskSpaceUsed    string                         `pulumi:"diskSpaceUsed"`
	// The provider-assigned unique ID for this managed resource.
	Id                          string                                          `pulumi:"id"`
	KafkaMirrormakerUserConfigs []GetKafkaMirrorMakerKafkaMirrormakerUserConfig `pulumi:"kafkaMirrormakerUserConfigs"`
	KafkaMirrormakers           []GetKafkaMirrorMakerKafkaMirrormaker           `pulumi:"kafkaMirrormakers"`
	MaintenanceWindowDow        string                                          `pulumi:"maintenanceWindowDow"`
	MaintenanceWindowTime       string                                          `pulumi:"maintenanceWindowTime"`
	Plan                        string                                          `pulumi:"plan"`
	Project                     string                                          `pulumi:"project"`
	ProjectVpcId                string                                          `pulumi:"projectVpcId"`
	ServiceHost                 string                                          `pulumi:"serviceHost"`
	ServiceIntegrations         []GetKafkaMirrorMakerServiceIntegration         `pulumi:"serviceIntegrations"`
	ServiceName                 string                                          `pulumi:"serviceName"`
	ServicePassword             string                                          `pulumi:"servicePassword"`
	ServicePort                 int                                             `pulumi:"servicePort"`
	ServiceType                 string                                          `pulumi:"serviceType"`
	ServiceUri                  string                                          `pulumi:"serviceUri"`
	ServiceUsername             string                                          `pulumi:"serviceUsername"`
	State                       string                                          `pulumi:"state"`
	StaticIps                   []string                                        `pulumi:"staticIps"`
	Tags                        []GetKafkaMirrorMakerTag                        `pulumi:"tags"`
	TerminationProtection       bool                                            `pulumi:"terminationProtection"`
}

func LookupKafkaMirrorMakerOutput(ctx *pulumi.Context, args LookupKafkaMirrorMakerOutputArgs, opts ...pulumi.InvokeOption) LookupKafkaMirrorMakerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupKafkaMirrorMakerResult, error) {
			args := v.(LookupKafkaMirrorMakerArgs)
			r, err := LookupKafkaMirrorMaker(ctx, &args, opts...)
			var s LookupKafkaMirrorMakerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupKafkaMirrorMakerResultOutput)
}

// A collection of arguments for invoking getKafkaMirrorMaker.
type LookupKafkaMirrorMakerOutputArgs struct {
	Project     pulumi.StringInput `pulumi:"project"`
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupKafkaMirrorMakerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKafkaMirrorMakerArgs)(nil)).Elem()
}

// A collection of values returned by getKafkaMirrorMaker.
type LookupKafkaMirrorMakerResultOutput struct{ *pulumi.OutputState }

func (LookupKafkaMirrorMakerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKafkaMirrorMakerResult)(nil)).Elem()
}

func (o LookupKafkaMirrorMakerResultOutput) ToLookupKafkaMirrorMakerResultOutput() LookupKafkaMirrorMakerResultOutput {
	return o
}

func (o LookupKafkaMirrorMakerResultOutput) ToLookupKafkaMirrorMakerResultOutputWithContext(ctx context.Context) LookupKafkaMirrorMakerResultOutput {
	return o
}

func (o LookupKafkaMirrorMakerResultOutput) CloudName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) string { return v.CloudName }).(pulumi.StringOutput)
}

func (o LookupKafkaMirrorMakerResultOutput) Components() GetKafkaMirrorMakerComponentArrayOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) []GetKafkaMirrorMakerComponent { return v.Components }).(GetKafkaMirrorMakerComponentArrayOutput)
}

func (o LookupKafkaMirrorMakerResultOutput) DiskSpace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) string { return v.DiskSpace }).(pulumi.StringOutput)
}

func (o LookupKafkaMirrorMakerResultOutput) DiskSpaceCap() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) string { return v.DiskSpaceCap }).(pulumi.StringOutput)
}

func (o LookupKafkaMirrorMakerResultOutput) DiskSpaceDefault() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) string { return v.DiskSpaceDefault }).(pulumi.StringOutput)
}

func (o LookupKafkaMirrorMakerResultOutput) DiskSpaceStep() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) string { return v.DiskSpaceStep }).(pulumi.StringOutput)
}

func (o LookupKafkaMirrorMakerResultOutput) DiskSpaceUsed() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) string { return v.DiskSpaceUsed }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupKafkaMirrorMakerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupKafkaMirrorMakerResultOutput) KafkaMirrormakerUserConfigs() GetKafkaMirrorMakerKafkaMirrormakerUserConfigArrayOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) []GetKafkaMirrorMakerKafkaMirrormakerUserConfig {
		return v.KafkaMirrormakerUserConfigs
	}).(GetKafkaMirrorMakerKafkaMirrormakerUserConfigArrayOutput)
}

func (o LookupKafkaMirrorMakerResultOutput) KafkaMirrormakers() GetKafkaMirrorMakerKafkaMirrormakerArrayOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) []GetKafkaMirrorMakerKafkaMirrormaker { return v.KafkaMirrormakers }).(GetKafkaMirrorMakerKafkaMirrormakerArrayOutput)
}

func (o LookupKafkaMirrorMakerResultOutput) MaintenanceWindowDow() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) string { return v.MaintenanceWindowDow }).(pulumi.StringOutput)
}

func (o LookupKafkaMirrorMakerResultOutput) MaintenanceWindowTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) string { return v.MaintenanceWindowTime }).(pulumi.StringOutput)
}

func (o LookupKafkaMirrorMakerResultOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) string { return v.Plan }).(pulumi.StringOutput)
}

func (o LookupKafkaMirrorMakerResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupKafkaMirrorMakerResultOutput) ProjectVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) string { return v.ProjectVpcId }).(pulumi.StringOutput)
}

func (o LookupKafkaMirrorMakerResultOutput) ServiceHost() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) string { return v.ServiceHost }).(pulumi.StringOutput)
}

func (o LookupKafkaMirrorMakerResultOutput) ServiceIntegrations() GetKafkaMirrorMakerServiceIntegrationArrayOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) []GetKafkaMirrorMakerServiceIntegration {
		return v.ServiceIntegrations
	}).(GetKafkaMirrorMakerServiceIntegrationArrayOutput)
}

func (o LookupKafkaMirrorMakerResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o LookupKafkaMirrorMakerResultOutput) ServicePassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) string { return v.ServicePassword }).(pulumi.StringOutput)
}

func (o LookupKafkaMirrorMakerResultOutput) ServicePort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) int { return v.ServicePort }).(pulumi.IntOutput)
}

func (o LookupKafkaMirrorMakerResultOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) string { return v.ServiceType }).(pulumi.StringOutput)
}

func (o LookupKafkaMirrorMakerResultOutput) ServiceUri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) string { return v.ServiceUri }).(pulumi.StringOutput)
}

func (o LookupKafkaMirrorMakerResultOutput) ServiceUsername() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) string { return v.ServiceUsername }).(pulumi.StringOutput)
}

func (o LookupKafkaMirrorMakerResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupKafkaMirrorMakerResultOutput) StaticIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) []string { return v.StaticIps }).(pulumi.StringArrayOutput)
}

func (o LookupKafkaMirrorMakerResultOutput) Tags() GetKafkaMirrorMakerTagArrayOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) []GetKafkaMirrorMakerTag { return v.Tags }).(GetKafkaMirrorMakerTagArrayOutput)
}

func (o LookupKafkaMirrorMakerResultOutput) TerminationProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupKafkaMirrorMakerResult) bool { return v.TerminationProtection }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKafkaMirrorMakerResultOutput{})
}
