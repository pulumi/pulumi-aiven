// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

func LookupKafkaMirrorMaker(ctx *pulumi.Context, args *LookupKafkaMirrorMakerArgs, opts ...pulumi.InvokeOption) (*LookupKafkaMirrorMakerResult, error) {
	var rv LookupKafkaMirrorMakerResult
	err := ctx.Invoke("aiven:index/getKafkaMirrorMaker:getKafkaMirrorMaker", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKafkaMirrorMaker.
type LookupKafkaMirrorMakerArgs struct {
	CloudName                  *string                                        `pulumi:"cloudName"`
	Components                 []GetKafkaMirrorMakerComponent                 `pulumi:"components"`
	KafkaMirrormaker           *GetKafkaMirrorMakerKafkaMirrormaker           `pulumi:"kafkaMirrormaker"`
	KafkaMirrormakerUserConfig *GetKafkaMirrorMakerKafkaMirrormakerUserConfig `pulumi:"kafkaMirrormakerUserConfig"`
	MaintenanceWindowDow       *string                                        `pulumi:"maintenanceWindowDow"`
	MaintenanceWindowTime      *string                                        `pulumi:"maintenanceWindowTime"`
	Plan                       *string                                        `pulumi:"plan"`
	Project                    string                                         `pulumi:"project"`
	ProjectVpcId               *string                                        `pulumi:"projectVpcId"`
	ServiceHost                *string                                        `pulumi:"serviceHost"`
	ServiceIntegrations        []GetKafkaMirrorMakerServiceIntegration        `pulumi:"serviceIntegrations"`
	ServiceName                string                                         `pulumi:"serviceName"`
	ServicePassword            *string                                        `pulumi:"servicePassword"`
	ServicePort                *int                                           `pulumi:"servicePort"`
	ServiceType                *string                                        `pulumi:"serviceType"`
	ServiceUri                 *string                                        `pulumi:"serviceUri"`
	ServiceUsername            *string                                        `pulumi:"serviceUsername"`
	State                      *string                                        `pulumi:"state"`
	TerminationProtection      *bool                                          `pulumi:"terminationProtection"`
}

// A collection of values returned by getKafkaMirrorMaker.
type LookupKafkaMirrorMakerResult struct {
	CloudName  *string                        `pulumi:"cloudName"`
	Components []GetKafkaMirrorMakerComponent `pulumi:"components"`
	// The provider-assigned unique ID for this managed resource.
	Id                         string                                         `pulumi:"id"`
	KafkaMirrormaker           GetKafkaMirrorMakerKafkaMirrormaker            `pulumi:"kafkaMirrormaker"`
	KafkaMirrormakerUserConfig *GetKafkaMirrorMakerKafkaMirrormakerUserConfig `pulumi:"kafkaMirrormakerUserConfig"`
	MaintenanceWindowDow       *string                                        `pulumi:"maintenanceWindowDow"`
	MaintenanceWindowTime      *string                                        `pulumi:"maintenanceWindowTime"`
	Plan                       *string                                        `pulumi:"plan"`
	Project                    string                                         `pulumi:"project"`
	ProjectVpcId               *string                                        `pulumi:"projectVpcId"`
	ServiceHost                string                                         `pulumi:"serviceHost"`
	ServiceIntegrations        []GetKafkaMirrorMakerServiceIntegration        `pulumi:"serviceIntegrations"`
	ServiceName                string                                         `pulumi:"serviceName"`
	ServicePassword            string                                         `pulumi:"servicePassword"`
	ServicePort                int                                            `pulumi:"servicePort"`
	ServiceType                string                                         `pulumi:"serviceType"`
	ServiceUri                 string                                         `pulumi:"serviceUri"`
	ServiceUsername            string                                         `pulumi:"serviceUsername"`
	State                      string                                         `pulumi:"state"`
	TerminationProtection      *bool                                          `pulumi:"terminationProtection"`
}
