// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupM3Db(ctx *pulumi.Context, args *LookupM3DbArgs, opts ...pulumi.InvokeOption) (*LookupM3DbResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupM3DbResult
	err := ctx.Invoke("aiven:index/getM3Db:getM3Db", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getM3Db.
type LookupM3DbArgs struct {
	Project     string `pulumi:"project"`
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getM3Db.
type LookupM3DbResult struct {
	AdditionalDiskSpace string             `pulumi:"additionalDiskSpace"`
	CloudName           string             `pulumi:"cloudName"`
	Components          []GetM3DbComponent `pulumi:"components"`
	DiskSpace           string             `pulumi:"diskSpace"`
	DiskSpaceCap        string             `pulumi:"diskSpaceCap"`
	DiskSpaceDefault    string             `pulumi:"diskSpaceDefault"`
	DiskSpaceStep       string             `pulumi:"diskSpaceStep"`
	DiskSpaceUsed       string             `pulumi:"diskSpaceUsed"`
	// The provider-assigned unique ID for this managed resource.
	Id                    string                      `pulumi:"id"`
	M3dbUserConfigs       []GetM3DbM3dbUserConfig     `pulumi:"m3dbUserConfigs"`
	M3dbs                 []GetM3DbM3db               `pulumi:"m3dbs"`
	MaintenanceWindowDow  string                      `pulumi:"maintenanceWindowDow"`
	MaintenanceWindowTime string                      `pulumi:"maintenanceWindowTime"`
	Plan                  string                      `pulumi:"plan"`
	Project               string                      `pulumi:"project"`
	ProjectVpcId          string                      `pulumi:"projectVpcId"`
	ServiceHost           string                      `pulumi:"serviceHost"`
	ServiceIntegrations   []GetM3DbServiceIntegration `pulumi:"serviceIntegrations"`
	ServiceName           string                      `pulumi:"serviceName"`
	ServicePassword       string                      `pulumi:"servicePassword"`
	ServicePort           int                         `pulumi:"servicePort"`
	ServiceType           string                      `pulumi:"serviceType"`
	ServiceUri            string                      `pulumi:"serviceUri"`
	ServiceUsername       string                      `pulumi:"serviceUsername"`
	State                 string                      `pulumi:"state"`
	StaticIps             []string                    `pulumi:"staticIps"`
	Tags                  []GetM3DbTag                `pulumi:"tags"`
	TechEmails            []GetM3DbTechEmail          `pulumi:"techEmails"`
	TerminationProtection bool                        `pulumi:"terminationProtection"`
}

func LookupM3DbOutput(ctx *pulumi.Context, args LookupM3DbOutputArgs, opts ...pulumi.InvokeOption) LookupM3DbResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupM3DbResultOutput, error) {
			args := v.(LookupM3DbArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aiven:index/getM3Db:getM3Db", args, LookupM3DbResultOutput{}, options).(LookupM3DbResultOutput), nil
		}).(LookupM3DbResultOutput)
}

// A collection of arguments for invoking getM3Db.
type LookupM3DbOutputArgs struct {
	Project     pulumi.StringInput `pulumi:"project"`
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupM3DbOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupM3DbArgs)(nil)).Elem()
}

// A collection of values returned by getM3Db.
type LookupM3DbResultOutput struct{ *pulumi.OutputState }

func (LookupM3DbResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupM3DbResult)(nil)).Elem()
}

func (o LookupM3DbResultOutput) ToLookupM3DbResultOutput() LookupM3DbResultOutput {
	return o
}

func (o LookupM3DbResultOutput) ToLookupM3DbResultOutputWithContext(ctx context.Context) LookupM3DbResultOutput {
	return o
}

func (o LookupM3DbResultOutput) AdditionalDiskSpace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupM3DbResult) string { return v.AdditionalDiskSpace }).(pulumi.StringOutput)
}

func (o LookupM3DbResultOutput) CloudName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupM3DbResult) string { return v.CloudName }).(pulumi.StringOutput)
}

func (o LookupM3DbResultOutput) Components() GetM3DbComponentArrayOutput {
	return o.ApplyT(func(v LookupM3DbResult) []GetM3DbComponent { return v.Components }).(GetM3DbComponentArrayOutput)
}

func (o LookupM3DbResultOutput) DiskSpace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupM3DbResult) string { return v.DiskSpace }).(pulumi.StringOutput)
}

func (o LookupM3DbResultOutput) DiskSpaceCap() pulumi.StringOutput {
	return o.ApplyT(func(v LookupM3DbResult) string { return v.DiskSpaceCap }).(pulumi.StringOutput)
}

func (o LookupM3DbResultOutput) DiskSpaceDefault() pulumi.StringOutput {
	return o.ApplyT(func(v LookupM3DbResult) string { return v.DiskSpaceDefault }).(pulumi.StringOutput)
}

func (o LookupM3DbResultOutput) DiskSpaceStep() pulumi.StringOutput {
	return o.ApplyT(func(v LookupM3DbResult) string { return v.DiskSpaceStep }).(pulumi.StringOutput)
}

func (o LookupM3DbResultOutput) DiskSpaceUsed() pulumi.StringOutput {
	return o.ApplyT(func(v LookupM3DbResult) string { return v.DiskSpaceUsed }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupM3DbResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupM3DbResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupM3DbResultOutput) M3dbUserConfigs() GetM3DbM3dbUserConfigArrayOutput {
	return o.ApplyT(func(v LookupM3DbResult) []GetM3DbM3dbUserConfig { return v.M3dbUserConfigs }).(GetM3DbM3dbUserConfigArrayOutput)
}

func (o LookupM3DbResultOutput) M3dbs() GetM3DbM3dbArrayOutput {
	return o.ApplyT(func(v LookupM3DbResult) []GetM3DbM3db { return v.M3dbs }).(GetM3DbM3dbArrayOutput)
}

func (o LookupM3DbResultOutput) MaintenanceWindowDow() pulumi.StringOutput {
	return o.ApplyT(func(v LookupM3DbResult) string { return v.MaintenanceWindowDow }).(pulumi.StringOutput)
}

func (o LookupM3DbResultOutput) MaintenanceWindowTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupM3DbResult) string { return v.MaintenanceWindowTime }).(pulumi.StringOutput)
}

func (o LookupM3DbResultOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v LookupM3DbResult) string { return v.Plan }).(pulumi.StringOutput)
}

func (o LookupM3DbResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupM3DbResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupM3DbResultOutput) ProjectVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupM3DbResult) string { return v.ProjectVpcId }).(pulumi.StringOutput)
}

func (o LookupM3DbResultOutput) ServiceHost() pulumi.StringOutput {
	return o.ApplyT(func(v LookupM3DbResult) string { return v.ServiceHost }).(pulumi.StringOutput)
}

func (o LookupM3DbResultOutput) ServiceIntegrations() GetM3DbServiceIntegrationArrayOutput {
	return o.ApplyT(func(v LookupM3DbResult) []GetM3DbServiceIntegration { return v.ServiceIntegrations }).(GetM3DbServiceIntegrationArrayOutput)
}

func (o LookupM3DbResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupM3DbResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o LookupM3DbResultOutput) ServicePassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupM3DbResult) string { return v.ServicePassword }).(pulumi.StringOutput)
}

func (o LookupM3DbResultOutput) ServicePort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupM3DbResult) int { return v.ServicePort }).(pulumi.IntOutput)
}

func (o LookupM3DbResultOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupM3DbResult) string { return v.ServiceType }).(pulumi.StringOutput)
}

func (o LookupM3DbResultOutput) ServiceUri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupM3DbResult) string { return v.ServiceUri }).(pulumi.StringOutput)
}

func (o LookupM3DbResultOutput) ServiceUsername() pulumi.StringOutput {
	return o.ApplyT(func(v LookupM3DbResult) string { return v.ServiceUsername }).(pulumi.StringOutput)
}

func (o LookupM3DbResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupM3DbResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupM3DbResultOutput) StaticIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupM3DbResult) []string { return v.StaticIps }).(pulumi.StringArrayOutput)
}

func (o LookupM3DbResultOutput) Tags() GetM3DbTagArrayOutput {
	return o.ApplyT(func(v LookupM3DbResult) []GetM3DbTag { return v.Tags }).(GetM3DbTagArrayOutput)
}

func (o LookupM3DbResultOutput) TechEmails() GetM3DbTechEmailArrayOutput {
	return o.ApplyT(func(v LookupM3DbResult) []GetM3DbTechEmail { return v.TechEmails }).(GetM3DbTechEmailArrayOutput)
}

func (o LookupM3DbResultOutput) TerminationProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupM3DbResult) bool { return v.TerminationProtection }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupM3DbResultOutput{})
}
