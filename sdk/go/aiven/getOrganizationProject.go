// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets information about an Aiven project.
//
// **This resource is in the beta stage and may change without notice.** Set
// the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aiven.LookupOrganizationProject(ctx, &aiven.LookupOrganizationProjectArgs{
//				ProjectId:      foo.ProjectId,
//				OrganizationId: foo.OrganizationId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupOrganizationProject(ctx *pulumi.Context, args *LookupOrganizationProjectArgs, opts ...pulumi.InvokeOption) (*LookupOrganizationProjectResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupOrganizationProjectResult
	err := ctx.Invoke("aiven:index/getOrganizationProject:getOrganizationProject", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrganizationProject.
type LookupOrganizationProjectArgs struct {
	// ID of an organization.
	OrganizationId string `pulumi:"organizationId"`
	// The name of the project. Names must be globally unique among all Aiven customers. Names must begin with a letter (a-z), and consist of letters, numbers, and dashes. It's recommended to use a random string or your organization name as a prefix or suffix. Changing this property forces recreation of the resource.
	ProjectId string `pulumi:"projectId"`
	// Tags are key-value pairs that allow you to categorize projects.
	Tags     []GetOrganizationProjectTag     `pulumi:"tags"`
	Timeouts *GetOrganizationProjectTimeouts `pulumi:"timeouts"`
}

// A collection of values returned by getOrganizationProject.
type LookupOrganizationProjectResult struct {
	// Valid port number (1-65535) to use as a base for service port allocation.
	BasePort int `pulumi:"basePort"`
	// Billing group ID to assign to the project. It's required when moving projects between organizations.
	BillingGroupId string `pulumi:"billingGroupId"`
	// PEM encoded certificate.
	CaCert string `pulumi:"caCert"`
	// Resource ID, a composite of `organizationId` and `projectId` IDs.
	Id string `pulumi:"id"`
	// ID of an organization.
	OrganizationId string `pulumi:"organizationId"`
	// Link a project to an [organization or organizational unit](https://aiven.io/docs/platform/concepts/orgs-units-projects) by using its ID. To set up proper dependencies please refer to this variable as a reference.
	ParentId string `pulumi:"parentId"`
	// The name of the project. Names must be globally unique among all Aiven customers. Names must begin with a letter (a-z), and consist of letters, numbers, and dashes. It's recommended to use a random string or your organization name as a prefix or suffix. Changing this property forces recreation of the resource.
	ProjectId string `pulumi:"projectId"`
	// Tags are key-value pairs that allow you to categorize projects.
	Tags []GetOrganizationProjectTag `pulumi:"tags"`
	// The email addresses for [project contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive important alerts and updates about this project and its services. You can also set email contacts at the service level. It's good practice to keep these up-to-date to be aware of any potential issues with your project.
	TechnicalEmails []string                        `pulumi:"technicalEmails"`
	Timeouts        *GetOrganizationProjectTimeouts `pulumi:"timeouts"`
}

func LookupOrganizationProjectOutput(ctx *pulumi.Context, args LookupOrganizationProjectOutputArgs, opts ...pulumi.InvokeOption) LookupOrganizationProjectResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupOrganizationProjectResultOutput, error) {
			args := v.(LookupOrganizationProjectArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aiven:index/getOrganizationProject:getOrganizationProject", args, LookupOrganizationProjectResultOutput{}, options).(LookupOrganizationProjectResultOutput), nil
		}).(LookupOrganizationProjectResultOutput)
}

// A collection of arguments for invoking getOrganizationProject.
type LookupOrganizationProjectOutputArgs struct {
	// ID of an organization.
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	// The name of the project. Names must be globally unique among all Aiven customers. Names must begin with a letter (a-z), and consist of letters, numbers, and dashes. It's recommended to use a random string or your organization name as a prefix or suffix. Changing this property forces recreation of the resource.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Tags are key-value pairs that allow you to categorize projects.
	Tags     GetOrganizationProjectTagArrayInput    `pulumi:"tags"`
	Timeouts GetOrganizationProjectTimeoutsPtrInput `pulumi:"timeouts"`
}

func (LookupOrganizationProjectOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrganizationProjectArgs)(nil)).Elem()
}

// A collection of values returned by getOrganizationProject.
type LookupOrganizationProjectResultOutput struct{ *pulumi.OutputState }

func (LookupOrganizationProjectResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrganizationProjectResult)(nil)).Elem()
}

func (o LookupOrganizationProjectResultOutput) ToLookupOrganizationProjectResultOutput() LookupOrganizationProjectResultOutput {
	return o
}

func (o LookupOrganizationProjectResultOutput) ToLookupOrganizationProjectResultOutputWithContext(ctx context.Context) LookupOrganizationProjectResultOutput {
	return o
}

// Valid port number (1-65535) to use as a base for service port allocation.
func (o LookupOrganizationProjectResultOutput) BasePort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupOrganizationProjectResult) int { return v.BasePort }).(pulumi.IntOutput)
}

// Billing group ID to assign to the project. It's required when moving projects between organizations.
func (o LookupOrganizationProjectResultOutput) BillingGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationProjectResult) string { return v.BillingGroupId }).(pulumi.StringOutput)
}

// PEM encoded certificate.
func (o LookupOrganizationProjectResultOutput) CaCert() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationProjectResult) string { return v.CaCert }).(pulumi.StringOutput)
}

// Resource ID, a composite of `organizationId` and `projectId` IDs.
func (o LookupOrganizationProjectResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationProjectResult) string { return v.Id }).(pulumi.StringOutput)
}

// ID of an organization.
func (o LookupOrganizationProjectResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationProjectResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// Link a project to an [organization or organizational unit](https://aiven.io/docs/platform/concepts/orgs-units-projects) by using its ID. To set up proper dependencies please refer to this variable as a reference.
func (o LookupOrganizationProjectResultOutput) ParentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationProjectResult) string { return v.ParentId }).(pulumi.StringOutput)
}

// The name of the project. Names must be globally unique among all Aiven customers. Names must begin with a letter (a-z), and consist of letters, numbers, and dashes. It's recommended to use a random string or your organization name as a prefix or suffix. Changing this property forces recreation of the resource.
func (o LookupOrganizationProjectResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationProjectResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Tags are key-value pairs that allow you to categorize projects.
func (o LookupOrganizationProjectResultOutput) Tags() GetOrganizationProjectTagArrayOutput {
	return o.ApplyT(func(v LookupOrganizationProjectResult) []GetOrganizationProjectTag { return v.Tags }).(GetOrganizationProjectTagArrayOutput)
}

// The email addresses for [project contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive important alerts and updates about this project and its services. You can also set email contacts at the service level. It's good practice to keep these up-to-date to be aware of any potential issues with your project.
func (o LookupOrganizationProjectResultOutput) TechnicalEmails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupOrganizationProjectResult) []string { return v.TechnicalEmails }).(pulumi.StringArrayOutput)
}

func (o LookupOrganizationProjectResultOutput) Timeouts() GetOrganizationProjectTimeoutsPtrOutput {
	return o.ApplyT(func(v LookupOrganizationProjectResult) *GetOrganizationProjectTimeouts { return v.Timeouts }).(GetOrganizationProjectTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOrganizationProjectResultOutput{})
}
