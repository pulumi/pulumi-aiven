// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets information about an Aiven for MySQLÂ® service user.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aiven.LookupMysqlUser(ctx, &aiven.LookupMysqlUserArgs{
//				ServiceName: exampleMysql.ServiceName,
//				Project:     exampleProject.Project,
//				Username:    "example-mysql-user",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupMysqlUser(ctx *pulumi.Context, args *LookupMysqlUserArgs, opts ...pulumi.InvokeOption) (*LookupMysqlUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMysqlUserResult
	err := ctx.Invoke("aiven:index/getMysqlUser:getMysqlUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMysqlUser.
type LookupMysqlUserArgs struct {
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// The name of the MySQL service user. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Username string `pulumi:"username"`
}

// A collection of values returned by getMysqlUser.
type LookupMysqlUserResult struct {
	// Access certificate for the user.
	AccessCert string `pulumi:"accessCert"`
	// Access certificate key for the user.
	AccessKey string `pulumi:"accessKey"`
	// Authentication details. The possible values are `cachingSha2Password`, `mysqlNativePassword` and `null`.
	Authentication string `pulumi:"authentication"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The password of the MySQL service user.
	Password string `pulumi:"password"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// User account type, such as primary or regular account.
	Type string `pulumi:"type"`
	// The name of the MySQL service user. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Username string `pulumi:"username"`
}

func LookupMysqlUserOutput(ctx *pulumi.Context, args LookupMysqlUserOutputArgs, opts ...pulumi.InvokeOption) LookupMysqlUserResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMysqlUserResultOutput, error) {
			args := v.(LookupMysqlUserArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aiven:index/getMysqlUser:getMysqlUser", args, LookupMysqlUserResultOutput{}, options).(LookupMysqlUserResultOutput), nil
		}).(LookupMysqlUserResultOutput)
}

// A collection of arguments for invoking getMysqlUser.
type LookupMysqlUserOutputArgs struct {
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringInput `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// The name of the MySQL service user. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Username pulumi.StringInput `pulumi:"username"`
}

func (LookupMysqlUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMysqlUserArgs)(nil)).Elem()
}

// A collection of values returned by getMysqlUser.
type LookupMysqlUserResultOutput struct{ *pulumi.OutputState }

func (LookupMysqlUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMysqlUserResult)(nil)).Elem()
}

func (o LookupMysqlUserResultOutput) ToLookupMysqlUserResultOutput() LookupMysqlUserResultOutput {
	return o
}

func (o LookupMysqlUserResultOutput) ToLookupMysqlUserResultOutputWithContext(ctx context.Context) LookupMysqlUserResultOutput {
	return o
}

// Access certificate for the user.
func (o LookupMysqlUserResultOutput) AccessCert() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlUserResult) string { return v.AccessCert }).(pulumi.StringOutput)
}

// Access certificate key for the user.
func (o LookupMysqlUserResultOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlUserResult) string { return v.AccessKey }).(pulumi.StringOutput)
}

// Authentication details. The possible values are `cachingSha2Password`, `mysqlNativePassword` and `null`.
func (o LookupMysqlUserResultOutput) Authentication() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlUserResult) string { return v.Authentication }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMysqlUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlUserResult) string { return v.Id }).(pulumi.StringOutput)
}

// The password of the MySQL service user.
func (o LookupMysqlUserResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlUserResult) string { return v.Password }).(pulumi.StringOutput)
}

// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o LookupMysqlUserResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlUserResult) string { return v.Project }).(pulumi.StringOutput)
}

// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o LookupMysqlUserResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlUserResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// User account type, such as primary or regular account.
func (o LookupMysqlUserResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlUserResult) string { return v.Type }).(pulumi.StringOutput)
}

// The name of the MySQL service user. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o LookupMysqlUserResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMysqlUserResult) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMysqlUserResultOutput{})
}
