// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Service resource allows the creation and management of Aiven Services.
type Service struct {
	pulumi.CustomResourceState

	// Cassandra user configurable settings
	CassandraUserConfig ServiceCassandraUserConfigPtrOutput `pulumi:"cassandraUserConfig"`
	// Cassandra specific server provided values
	Cassandras ServiceCassandraArrayOutput `pulumi:"cassandras"`
	// Clickhouse user configurable settings
	ClickhouseUserConfig ServiceClickhouseUserConfigPtrOutput `pulumi:"clickhouseUserConfig"`
	// Clickhouse specific server provided values
	Clickhouses ServiceClickhouseArrayOutput `pulumi:"clickhouses"`
	// Cloud the service runs in
	CloudName pulumi.StringPtrOutput `pulumi:"cloudName"`
	// Service component information objects
	Components ServiceComponentArrayOutput `pulumi:"components"`
	// The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.
	DiskSpace pulumi.StringPtrOutput `pulumi:"diskSpace"`
	// The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
	DiskSpaceCap pulumi.StringOutput `pulumi:"diskSpaceCap"`
	// The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `diskSpace`
	DiskSpaceDefault pulumi.StringOutput `pulumi:"diskSpaceDefault"`
	// The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `diskSpace` needs to increment from `diskSpaceDefault` by increments of this size.
	DiskSpaceStep pulumi.StringOutput `pulumi:"diskSpaceStep"`
	// Disk space that service is currently using
	DiskSpaceUsed pulumi.StringOutput `pulumi:"diskSpaceUsed"`
	// Elasticsearch user configurable settings
	ElasticsearchUserConfig ServiceElasticsearchUserConfigPtrOutput `pulumi:"elasticsearchUserConfig"`
	// Elasticsearch specific server provided values
	Elasticsearches ServiceElasticsearchArrayOutput `pulumi:"elasticsearches"`
	// Flink user configurable settings
	FlinkUserConfig ServiceFlinkUserConfigPtrOutput `pulumi:"flinkUserConfig"`
	// Flink specific server provided values
	Flinks ServiceFlinkArrayOutput `pulumi:"flinks"`
	// Grafana user configurable settings
	GrafanaUserConfig ServiceGrafanaUserConfigPtrOutput `pulumi:"grafanaUserConfig"`
	// Grafana specific server provided values
	Grafanas ServiceGrafanaArrayOutput `pulumi:"grafanas"`
	// Influxdb user configurable settings
	InfluxdbUserConfig ServiceInfluxdbUserConfigPtrOutput `pulumi:"influxdbUserConfig"`
	// InfluxDB specific server provided values
	Influxdbs ServiceInfluxdbArrayOutput `pulumi:"influxdbs"`
	// Kafka*connect user configurable settings
	KafkaConnectUserConfig ServiceKafkaConnectUserConfigPtrOutput `pulumi:"kafkaConnectUserConfig"`
	// Kafka Connect specific server provided values
	KafkaConnects ServiceKafkaConnectArrayOutput `pulumi:"kafkaConnects"`
	// Kafka*mirrormaker user configurable settings
	KafkaMirrormakerUserConfig ServiceKafkaMirrormakerUserConfigPtrOutput `pulumi:"kafkaMirrormakerUserConfig"`
	// Kafka MirrorMaker 2 specific server provided values
	KafkaMirrormakers ServiceKafkaMirrormakerArrayOutput `pulumi:"kafkaMirrormakers"`
	// Kafka user configurable settings
	KafkaUserConfig ServiceKafkaUserConfigPtrOutput `pulumi:"kafkaUserConfig"`
	// Kafka specific server provided values
	Kafkas ServiceKafkaArrayOutput `pulumi:"kafkas"`
	// Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
	MaintenanceWindowDow pulumi.StringPtrOutput `pulumi:"maintenanceWindowDow"`
	// Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
	MaintenanceWindowTime pulumi.StringPtrOutput `pulumi:"maintenanceWindowTime"`
	// Mysql user configurable settings
	MysqlUserConfig ServiceMysqlUserConfigPtrOutput `pulumi:"mysqlUserConfig"`
	// MySQL specific server provided values
	Mysqls ServiceMysqlArrayOutput `pulumi:"mysqls"`
	// Opensearch user configurable settings
	OpensearchUserConfig ServiceOpensearchUserConfigPtrOutput `pulumi:"opensearchUserConfig"`
	// Opensearch specific server provided values
	Opensearches ServiceOpensearchArrayOutput `pulumi:"opensearches"`
	// Pg user configurable settings
	PgUserConfig ServicePgUserConfigPtrOutput `pulumi:"pgUserConfig"`
	// PostgreSQL specific server provided values
	Pgs ServicePgArrayOutput `pulumi:"pgs"`
	// Subscription plan
	Plan pulumi.StringPtrOutput `pulumi:"plan"`
	// Target project
	Project pulumi.StringOutput `pulumi:"project"`
	// Identifier of the VPC the service should be in, if any
	ProjectVpcId pulumi.StringPtrOutput `pulumi:"projectVpcId"`
	// Redis specific server provided values
	Redis ServiceRediArrayOutput `pulumi:"redis"`
	// Redis user configurable settings
	RedisUserConfig ServiceRedisUserConfigPtrOutput `pulumi:"redisUserConfig"`
	// Service hostname
	ServiceHost pulumi.StringOutput `pulumi:"serviceHost"`
	// Service integrations to specify when creating a service. Not applied after initial service creation
	ServiceIntegrations ServiceServiceIntegrationArrayOutput `pulumi:"serviceIntegrations"`
	// Service name
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Password used for connecting to the service, if applicable
	ServicePassword pulumi.StringOutput `pulumi:"servicePassword"`
	// Service port
	ServicePort pulumi.IntOutput `pulumi:"servicePort"`
	// Service type code
	ServiceType pulumi.StringOutput `pulumi:"serviceType"`
	// URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
	ServiceUri pulumi.StringOutput `pulumi:"serviceUri"`
	// Username used for connecting to the service, if applicable
	ServiceUsername pulumi.StringOutput `pulumi:"serviceUsername"`
	// Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` and `RUNNING`.
	State pulumi.StringOutput `pulumi:"state"`
	// Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
	StaticIps pulumi.StringArrayOutput `pulumi:"staticIps"`
	// Prevent service from being deleted. It is recommended to have this enabled for all services.
	TerminationProtection pulumi.BoolPtrOutput `pulumi:"terminationProtection"`
}

// NewService registers a new resource with the given unique name, arguments, and options.
func NewService(ctx *pulumi.Context,
	name string, args *ServiceArgs, opts ...pulumi.ResourceOption) (*Service, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.ServiceType == nil {
		return nil, errors.New("invalid value for required argument 'ServiceType'")
	}
	var resource Service
	err := ctx.RegisterResource("aiven:index/service:Service", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetService gets an existing Service resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceState, opts ...pulumi.ResourceOption) (*Service, error) {
	var resource Service
	err := ctx.ReadResource("aiven:index/service:Service", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Service resources.
type serviceState struct {
	// Cassandra user configurable settings
	CassandraUserConfig *ServiceCassandraUserConfig `pulumi:"cassandraUserConfig"`
	// Cassandra specific server provided values
	Cassandras []ServiceCassandra `pulumi:"cassandras"`
	// Clickhouse user configurable settings
	ClickhouseUserConfig *ServiceClickhouseUserConfig `pulumi:"clickhouseUserConfig"`
	// Clickhouse specific server provided values
	Clickhouses []ServiceClickhouse `pulumi:"clickhouses"`
	// Cloud the service runs in
	CloudName *string `pulumi:"cloudName"`
	// Service component information objects
	Components []ServiceComponent `pulumi:"components"`
	// The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.
	DiskSpace *string `pulumi:"diskSpace"`
	// The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
	DiskSpaceCap *string `pulumi:"diskSpaceCap"`
	// The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `diskSpace`
	DiskSpaceDefault *string `pulumi:"diskSpaceDefault"`
	// The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `diskSpace` needs to increment from `diskSpaceDefault` by increments of this size.
	DiskSpaceStep *string `pulumi:"diskSpaceStep"`
	// Disk space that service is currently using
	DiskSpaceUsed *string `pulumi:"diskSpaceUsed"`
	// Elasticsearch user configurable settings
	ElasticsearchUserConfig *ServiceElasticsearchUserConfig `pulumi:"elasticsearchUserConfig"`
	// Elasticsearch specific server provided values
	Elasticsearches []ServiceElasticsearch `pulumi:"elasticsearches"`
	// Flink user configurable settings
	FlinkUserConfig *ServiceFlinkUserConfig `pulumi:"flinkUserConfig"`
	// Flink specific server provided values
	Flinks []ServiceFlink `pulumi:"flinks"`
	// Grafana user configurable settings
	GrafanaUserConfig *ServiceGrafanaUserConfig `pulumi:"grafanaUserConfig"`
	// Grafana specific server provided values
	Grafanas []ServiceGrafana `pulumi:"grafanas"`
	// Influxdb user configurable settings
	InfluxdbUserConfig *ServiceInfluxdbUserConfig `pulumi:"influxdbUserConfig"`
	// InfluxDB specific server provided values
	Influxdbs []ServiceInfluxdb `pulumi:"influxdbs"`
	// Kafka*connect user configurable settings
	KafkaConnectUserConfig *ServiceKafkaConnectUserConfig `pulumi:"kafkaConnectUserConfig"`
	// Kafka Connect specific server provided values
	KafkaConnects []ServiceKafkaConnect `pulumi:"kafkaConnects"`
	// Kafka*mirrormaker user configurable settings
	KafkaMirrormakerUserConfig *ServiceKafkaMirrormakerUserConfig `pulumi:"kafkaMirrormakerUserConfig"`
	// Kafka MirrorMaker 2 specific server provided values
	KafkaMirrormakers []ServiceKafkaMirrormaker `pulumi:"kafkaMirrormakers"`
	// Kafka user configurable settings
	KafkaUserConfig *ServiceKafkaUserConfig `pulumi:"kafkaUserConfig"`
	// Kafka specific server provided values
	Kafkas []ServiceKafka `pulumi:"kafkas"`
	// Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
	MaintenanceWindowDow *string `pulumi:"maintenanceWindowDow"`
	// Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
	MaintenanceWindowTime *string `pulumi:"maintenanceWindowTime"`
	// Mysql user configurable settings
	MysqlUserConfig *ServiceMysqlUserConfig `pulumi:"mysqlUserConfig"`
	// MySQL specific server provided values
	Mysqls []ServiceMysql `pulumi:"mysqls"`
	// Opensearch user configurable settings
	OpensearchUserConfig *ServiceOpensearchUserConfig `pulumi:"opensearchUserConfig"`
	// Opensearch specific server provided values
	Opensearches []ServiceOpensearch `pulumi:"opensearches"`
	// Pg user configurable settings
	PgUserConfig *ServicePgUserConfig `pulumi:"pgUserConfig"`
	// PostgreSQL specific server provided values
	Pgs []ServicePg `pulumi:"pgs"`
	// Subscription plan
	Plan *string `pulumi:"plan"`
	// Target project
	Project *string `pulumi:"project"`
	// Identifier of the VPC the service should be in, if any
	ProjectVpcId *string `pulumi:"projectVpcId"`
	// Redis specific server provided values
	Redis []ServiceRedi `pulumi:"redis"`
	// Redis user configurable settings
	RedisUserConfig *ServiceRedisUserConfig `pulumi:"redisUserConfig"`
	// Service hostname
	ServiceHost *string `pulumi:"serviceHost"`
	// Service integrations to specify when creating a service. Not applied after initial service creation
	ServiceIntegrations []ServiceServiceIntegration `pulumi:"serviceIntegrations"`
	// Service name
	ServiceName *string `pulumi:"serviceName"`
	// Password used for connecting to the service, if applicable
	ServicePassword *string `pulumi:"servicePassword"`
	// Service port
	ServicePort *int `pulumi:"servicePort"`
	// Service type code
	ServiceType *string `pulumi:"serviceType"`
	// URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
	ServiceUri *string `pulumi:"serviceUri"`
	// Username used for connecting to the service, if applicable
	ServiceUsername *string `pulumi:"serviceUsername"`
	// Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` and `RUNNING`.
	State *string `pulumi:"state"`
	// Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
	StaticIps []string `pulumi:"staticIps"`
	// Prevent service from being deleted. It is recommended to have this enabled for all services.
	TerminationProtection *bool `pulumi:"terminationProtection"`
}

type ServiceState struct {
	// Cassandra user configurable settings
	CassandraUserConfig ServiceCassandraUserConfigPtrInput
	// Cassandra specific server provided values
	Cassandras ServiceCassandraArrayInput
	// Clickhouse user configurable settings
	ClickhouseUserConfig ServiceClickhouseUserConfigPtrInput
	// Clickhouse specific server provided values
	Clickhouses ServiceClickhouseArrayInput
	// Cloud the service runs in
	CloudName pulumi.StringPtrInput
	// Service component information objects
	Components ServiceComponentArrayInput
	// The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.
	DiskSpace pulumi.StringPtrInput
	// The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
	DiskSpaceCap pulumi.StringPtrInput
	// The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `diskSpace`
	DiskSpaceDefault pulumi.StringPtrInput
	// The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `diskSpace` needs to increment from `diskSpaceDefault` by increments of this size.
	DiskSpaceStep pulumi.StringPtrInput
	// Disk space that service is currently using
	DiskSpaceUsed pulumi.StringPtrInput
	// Elasticsearch user configurable settings
	ElasticsearchUserConfig ServiceElasticsearchUserConfigPtrInput
	// Elasticsearch specific server provided values
	Elasticsearches ServiceElasticsearchArrayInput
	// Flink user configurable settings
	FlinkUserConfig ServiceFlinkUserConfigPtrInput
	// Flink specific server provided values
	Flinks ServiceFlinkArrayInput
	// Grafana user configurable settings
	GrafanaUserConfig ServiceGrafanaUserConfigPtrInput
	// Grafana specific server provided values
	Grafanas ServiceGrafanaArrayInput
	// Influxdb user configurable settings
	InfluxdbUserConfig ServiceInfluxdbUserConfigPtrInput
	// InfluxDB specific server provided values
	Influxdbs ServiceInfluxdbArrayInput
	// Kafka*connect user configurable settings
	KafkaConnectUserConfig ServiceKafkaConnectUserConfigPtrInput
	// Kafka Connect specific server provided values
	KafkaConnects ServiceKafkaConnectArrayInput
	// Kafka*mirrormaker user configurable settings
	KafkaMirrormakerUserConfig ServiceKafkaMirrormakerUserConfigPtrInput
	// Kafka MirrorMaker 2 specific server provided values
	KafkaMirrormakers ServiceKafkaMirrormakerArrayInput
	// Kafka user configurable settings
	KafkaUserConfig ServiceKafkaUserConfigPtrInput
	// Kafka specific server provided values
	Kafkas ServiceKafkaArrayInput
	// Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
	MaintenanceWindowDow pulumi.StringPtrInput
	// Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
	MaintenanceWindowTime pulumi.StringPtrInput
	// Mysql user configurable settings
	MysqlUserConfig ServiceMysqlUserConfigPtrInput
	// MySQL specific server provided values
	Mysqls ServiceMysqlArrayInput
	// Opensearch user configurable settings
	OpensearchUserConfig ServiceOpensearchUserConfigPtrInput
	// Opensearch specific server provided values
	Opensearches ServiceOpensearchArrayInput
	// Pg user configurable settings
	PgUserConfig ServicePgUserConfigPtrInput
	// PostgreSQL specific server provided values
	Pgs ServicePgArrayInput
	// Subscription plan
	Plan pulumi.StringPtrInput
	// Target project
	Project pulumi.StringPtrInput
	// Identifier of the VPC the service should be in, if any
	ProjectVpcId pulumi.StringPtrInput
	// Redis specific server provided values
	Redis ServiceRediArrayInput
	// Redis user configurable settings
	RedisUserConfig ServiceRedisUserConfigPtrInput
	// Service hostname
	ServiceHost pulumi.StringPtrInput
	// Service integrations to specify when creating a service. Not applied after initial service creation
	ServiceIntegrations ServiceServiceIntegrationArrayInput
	// Service name
	ServiceName pulumi.StringPtrInput
	// Password used for connecting to the service, if applicable
	ServicePassword pulumi.StringPtrInput
	// Service port
	ServicePort pulumi.IntPtrInput
	// Service type code
	ServiceType pulumi.StringPtrInput
	// URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
	ServiceUri pulumi.StringPtrInput
	// Username used for connecting to the service, if applicable
	ServiceUsername pulumi.StringPtrInput
	// Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` and `RUNNING`.
	State pulumi.StringPtrInput
	// Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
	StaticIps pulumi.StringArrayInput
	// Prevent service from being deleted. It is recommended to have this enabled for all services.
	TerminationProtection pulumi.BoolPtrInput
}

func (ServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceState)(nil)).Elem()
}

type serviceArgs struct {
	// Cassandra user configurable settings
	CassandraUserConfig *ServiceCassandraUserConfig `pulumi:"cassandraUserConfig"`
	// Clickhouse user configurable settings
	ClickhouseUserConfig *ServiceClickhouseUserConfig `pulumi:"clickhouseUserConfig"`
	// Cloud the service runs in
	CloudName *string `pulumi:"cloudName"`
	// The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.
	DiskSpace *string `pulumi:"diskSpace"`
	// Elasticsearch user configurable settings
	ElasticsearchUserConfig *ServiceElasticsearchUserConfig `pulumi:"elasticsearchUserConfig"`
	// Flink user configurable settings
	FlinkUserConfig *ServiceFlinkUserConfig `pulumi:"flinkUserConfig"`
	// Flink specific server provided values
	Flinks []ServiceFlink `pulumi:"flinks"`
	// Grafana user configurable settings
	GrafanaUserConfig *ServiceGrafanaUserConfig `pulumi:"grafanaUserConfig"`
	// Influxdb user configurable settings
	InfluxdbUserConfig *ServiceInfluxdbUserConfig `pulumi:"influxdbUserConfig"`
	// Kafka*connect user configurable settings
	KafkaConnectUserConfig *ServiceKafkaConnectUserConfig `pulumi:"kafkaConnectUserConfig"`
	// Kafka*mirrormaker user configurable settings
	KafkaMirrormakerUserConfig *ServiceKafkaMirrormakerUserConfig `pulumi:"kafkaMirrormakerUserConfig"`
	// Kafka user configurable settings
	KafkaUserConfig *ServiceKafkaUserConfig `pulumi:"kafkaUserConfig"`
	// Kafka specific server provided values
	Kafkas []ServiceKafka `pulumi:"kafkas"`
	// Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
	MaintenanceWindowDow *string `pulumi:"maintenanceWindowDow"`
	// Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
	MaintenanceWindowTime *string `pulumi:"maintenanceWindowTime"`
	// Mysql user configurable settings
	MysqlUserConfig *ServiceMysqlUserConfig `pulumi:"mysqlUserConfig"`
	// Opensearch user configurable settings
	OpensearchUserConfig *ServiceOpensearchUserConfig `pulumi:"opensearchUserConfig"`
	// Pg user configurable settings
	PgUserConfig *ServicePgUserConfig `pulumi:"pgUserConfig"`
	// Subscription plan
	Plan *string `pulumi:"plan"`
	// Target project
	Project string `pulumi:"project"`
	// Identifier of the VPC the service should be in, if any
	ProjectVpcId *string `pulumi:"projectVpcId"`
	// Redis user configurable settings
	RedisUserConfig *ServiceRedisUserConfig `pulumi:"redisUserConfig"`
	// Service integrations to specify when creating a service. Not applied after initial service creation
	ServiceIntegrations []ServiceServiceIntegration `pulumi:"serviceIntegrations"`
	// Service name
	ServiceName string `pulumi:"serviceName"`
	// Service type code
	ServiceType string `pulumi:"serviceType"`
	// Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
	StaticIps []string `pulumi:"staticIps"`
	// Prevent service from being deleted. It is recommended to have this enabled for all services.
	TerminationProtection *bool `pulumi:"terminationProtection"`
}

// The set of arguments for constructing a Service resource.
type ServiceArgs struct {
	// Cassandra user configurable settings
	CassandraUserConfig ServiceCassandraUserConfigPtrInput
	// Clickhouse user configurable settings
	ClickhouseUserConfig ServiceClickhouseUserConfigPtrInput
	// Cloud the service runs in
	CloudName pulumi.StringPtrInput
	// The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service rebalancing.
	DiskSpace pulumi.StringPtrInput
	// Elasticsearch user configurable settings
	ElasticsearchUserConfig ServiceElasticsearchUserConfigPtrInput
	// Flink user configurable settings
	FlinkUserConfig ServiceFlinkUserConfigPtrInput
	// Flink specific server provided values
	Flinks ServiceFlinkArrayInput
	// Grafana user configurable settings
	GrafanaUserConfig ServiceGrafanaUserConfigPtrInput
	// Influxdb user configurable settings
	InfluxdbUserConfig ServiceInfluxdbUserConfigPtrInput
	// Kafka*connect user configurable settings
	KafkaConnectUserConfig ServiceKafkaConnectUserConfigPtrInput
	// Kafka*mirrormaker user configurable settings
	KafkaMirrormakerUserConfig ServiceKafkaMirrormakerUserConfigPtrInput
	// Kafka user configurable settings
	KafkaUserConfig ServiceKafkaUserConfigPtrInput
	// Kafka specific server provided values
	Kafkas ServiceKafkaArrayInput
	// Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
	MaintenanceWindowDow pulumi.StringPtrInput
	// Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
	MaintenanceWindowTime pulumi.StringPtrInput
	// Mysql user configurable settings
	MysqlUserConfig ServiceMysqlUserConfigPtrInput
	// Opensearch user configurable settings
	OpensearchUserConfig ServiceOpensearchUserConfigPtrInput
	// Pg user configurable settings
	PgUserConfig ServicePgUserConfigPtrInput
	// Subscription plan
	Plan pulumi.StringPtrInput
	// Target project
	Project pulumi.StringInput
	// Identifier of the VPC the service should be in, if any
	ProjectVpcId pulumi.StringPtrInput
	// Redis user configurable settings
	RedisUserConfig ServiceRedisUserConfigPtrInput
	// Service integrations to specify when creating a service. Not applied after initial service creation
	ServiceIntegrations ServiceServiceIntegrationArrayInput
	// Service name
	ServiceName pulumi.StringInput
	// Service type code
	ServiceType pulumi.StringInput
	// Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
	StaticIps pulumi.StringArrayInput
	// Prevent service from being deleted. It is recommended to have this enabled for all services.
	TerminationProtection pulumi.BoolPtrInput
}

func (ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceArgs)(nil)).Elem()
}

type ServiceInput interface {
	pulumi.Input

	ToServiceOutput() ServiceOutput
	ToServiceOutputWithContext(ctx context.Context) ServiceOutput
}

func (*Service) ElementType() reflect.Type {
	return reflect.TypeOf((**Service)(nil)).Elem()
}

func (i *Service) ToServiceOutput() ServiceOutput {
	return i.ToServiceOutputWithContext(context.Background())
}

func (i *Service) ToServiceOutputWithContext(ctx context.Context) ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceOutput)
}

// ServiceArrayInput is an input type that accepts ServiceArray and ServiceArrayOutput values.
// You can construct a concrete instance of `ServiceArrayInput` via:
//
//          ServiceArray{ ServiceArgs{...} }
type ServiceArrayInput interface {
	pulumi.Input

	ToServiceArrayOutput() ServiceArrayOutput
	ToServiceArrayOutputWithContext(context.Context) ServiceArrayOutput
}

type ServiceArray []ServiceInput

func (ServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Service)(nil)).Elem()
}

func (i ServiceArray) ToServiceArrayOutput() ServiceArrayOutput {
	return i.ToServiceArrayOutputWithContext(context.Background())
}

func (i ServiceArray) ToServiceArrayOutputWithContext(ctx context.Context) ServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceArrayOutput)
}

// ServiceMapInput is an input type that accepts ServiceMap and ServiceMapOutput values.
// You can construct a concrete instance of `ServiceMapInput` via:
//
//          ServiceMap{ "key": ServiceArgs{...} }
type ServiceMapInput interface {
	pulumi.Input

	ToServiceMapOutput() ServiceMapOutput
	ToServiceMapOutputWithContext(context.Context) ServiceMapOutput
}

type ServiceMap map[string]ServiceInput

func (ServiceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Service)(nil)).Elem()
}

func (i ServiceMap) ToServiceMapOutput() ServiceMapOutput {
	return i.ToServiceMapOutputWithContext(context.Background())
}

func (i ServiceMap) ToServiceMapOutputWithContext(ctx context.Context) ServiceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMapOutput)
}

type ServiceOutput struct{ *pulumi.OutputState }

func (ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Service)(nil)).Elem()
}

func (o ServiceOutput) ToServiceOutput() ServiceOutput {
	return o
}

func (o ServiceOutput) ToServiceOutputWithContext(ctx context.Context) ServiceOutput {
	return o
}

type ServiceArrayOutput struct{ *pulumi.OutputState }

func (ServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Service)(nil)).Elem()
}

func (o ServiceArrayOutput) ToServiceArrayOutput() ServiceArrayOutput {
	return o
}

func (o ServiceArrayOutput) ToServiceArrayOutputWithContext(ctx context.Context) ServiceArrayOutput {
	return o
}

func (o ServiceArrayOutput) Index(i pulumi.IntInput) ServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Service {
		return vs[0].([]*Service)[vs[1].(int)]
	}).(ServiceOutput)
}

type ServiceMapOutput struct{ *pulumi.OutputState }

func (ServiceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Service)(nil)).Elem()
}

func (o ServiceMapOutput) ToServiceMapOutput() ServiceMapOutput {
	return o
}

func (o ServiceMapOutput) ToServiceMapOutputWithContext(ctx context.Context) ServiceMapOutput {
	return o
}

func (o ServiceMapOutput) MapIndex(k pulumi.StringInput) ServiceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Service {
		return vs[0].(map[string]*Service)[vs[1].(string)]
	}).(ServiceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceInput)(nil)).Elem(), &Service{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceArrayInput)(nil)).Elem(), ServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceMapInput)(nil)).Elem(), ServiceMap{})
	pulumi.RegisterOutputType(ServiceOutput{})
	pulumi.RegisterOutputType(ServiceArrayOutput{})
	pulumi.RegisterOutputType(ServiceMapOutput{})
}
