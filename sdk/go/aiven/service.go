// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Service struct {
	pulumi.CustomResourceState

	// Cassandra specific server provided values
	Cassandra ServiceCassandraOutput `pulumi:"cassandra"`
	// Cassandra specific user configurable settings
	CassandraUserConfig ServiceCassandraUserConfigPtrOutput `pulumi:"cassandraUserConfig"`
	// Cloud the service runs in
	CloudName pulumi.StringPtrOutput `pulumi:"cloudName"`
	// Service component information objects
	Components ServiceComponentArrayOutput `pulumi:"components"`
	// Elasticsearch specific server provided values
	Elasticsearch ServiceElasticsearchOutput `pulumi:"elasticsearch"`
	// Elasticsearch specific user configurable settings
	ElasticsearchUserConfig ServiceElasticsearchUserConfigPtrOutput `pulumi:"elasticsearchUserConfig"`
	// Grafana specific server provided values
	Grafana ServiceGrafanaOutput `pulumi:"grafana"`
	// Grafana specific user configurable settings
	GrafanaUserConfig ServiceGrafanaUserConfigPtrOutput `pulumi:"grafanaUserConfig"`
	// InfluxDB specific server provided values
	Influxdb ServiceInfluxdbOutput `pulumi:"influxdb"`
	// InfluxDB specific user configurable settings
	InfluxdbUserConfig ServiceInfluxdbUserConfigPtrOutput `pulumi:"influxdbUserConfig"`
	// Kafka specific server provided values
	Kafka ServiceKafkaOutput `pulumi:"kafka"`
	// Kafka Connect specific server provided values
	KafkaConnect ServiceKafkaConnectOutput `pulumi:"kafkaConnect"`
	// Kafka Connect specific user configurable settings
	KafkaConnectUserConfig ServiceKafkaConnectUserConfigPtrOutput `pulumi:"kafkaConnectUserConfig"`
	// Kafka MirrorMaker 2 specific server provided values
	KafkaMirrormaker ServiceKafkaMirrormakerOutput `pulumi:"kafkaMirrormaker"`
	// Kafka MirrorMaker 2 specific user configurable settings
	KafkaMirrormakerUserConfig ServiceKafkaMirrormakerUserConfigPtrOutput `pulumi:"kafkaMirrormakerUserConfig"`
	// Kafka specific user configurable settings
	KafkaUserConfig ServiceKafkaUserConfigPtrOutput `pulumi:"kafkaUserConfig"`
	// Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
	MaintenanceWindowDow pulumi.StringPtrOutput `pulumi:"maintenanceWindowDow"`
	// Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
	MaintenanceWindowTime pulumi.StringPtrOutput `pulumi:"maintenanceWindowTime"`
	// MySQL specific server provided values
	Mysql ServiceMysqlOutput `pulumi:"mysql"`
	// MySQL specific user configurable settings
	MysqlUserConfig ServiceMysqlUserConfigPtrOutput `pulumi:"mysqlUserConfig"`
	// PostgreSQL specific server provided values
	Pg ServicePgOutput `pulumi:"pg"`
	// PostgreSQL specific user configurable settings
	PgUserConfig ServicePgUserConfigPtrOutput `pulumi:"pgUserConfig"`
	// Subscription plan
	Plan pulumi.StringPtrOutput `pulumi:"plan"`
	// Target project
	Project pulumi.StringOutput `pulumi:"project"`
	// Identifier of the VPC the service should be in, if any
	ProjectVpcId pulumi.StringPtrOutput `pulumi:"projectVpcId"`
	// Redis specific server provided values
	Redis ServiceRedisOutput `pulumi:"redis"`
	// Redis specific user configurable settings
	RedisUserConfig ServiceRedisUserConfigPtrOutput `pulumi:"redisUserConfig"`
	// Service hostname
	ServiceHost pulumi.StringOutput `pulumi:"serviceHost"`
	// Service integrations to specify when creating a service. Not applied after initial service creation
	ServiceIntegrations ServiceServiceIntegrationArrayOutput `pulumi:"serviceIntegrations"`
	// Service name
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Password used for connecting to the service, if applicable
	ServicePassword pulumi.StringOutput `pulumi:"servicePassword"`
	// Service port
	ServicePort pulumi.IntOutput `pulumi:"servicePort"`
	// Service type code
	ServiceType pulumi.StringOutput `pulumi:"serviceType"`
	// URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
	ServiceUri pulumi.StringOutput `pulumi:"serviceUri"`
	// Username used for connecting to the service, if applicable
	ServiceUsername pulumi.StringOutput `pulumi:"serviceUsername"`
	// Service state
	State pulumi.StringOutput `pulumi:"state"`
	// Prevent service from being deleted. It is recommended to have this enabled for all services.
	TerminationProtection pulumi.BoolPtrOutput `pulumi:"terminationProtection"`
}

// NewService registers a new resource with the given unique name, arguments, and options.
func NewService(ctx *pulumi.Context,
	name string, args *ServiceArgs, opts ...pulumi.ResourceOption) (*Service, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.ServiceType == nil {
		return nil, errors.New("invalid value for required argument 'ServiceType'")
	}
	var resource Service
	err := ctx.RegisterResource("aiven:index/service:Service", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetService gets an existing Service resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceState, opts ...pulumi.ResourceOption) (*Service, error) {
	var resource Service
	err := ctx.ReadResource("aiven:index/service:Service", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Service resources.
type serviceState struct {
	// Cassandra specific server provided values
	Cassandra *ServiceCassandra `pulumi:"cassandra"`
	// Cassandra specific user configurable settings
	CassandraUserConfig *ServiceCassandraUserConfig `pulumi:"cassandraUserConfig"`
	// Cloud the service runs in
	CloudName *string `pulumi:"cloudName"`
	// Service component information objects
	Components []ServiceComponent `pulumi:"components"`
	// Elasticsearch specific server provided values
	Elasticsearch *ServiceElasticsearch `pulumi:"elasticsearch"`
	// Elasticsearch specific user configurable settings
	ElasticsearchUserConfig *ServiceElasticsearchUserConfig `pulumi:"elasticsearchUserConfig"`
	// Grafana specific server provided values
	Grafana *ServiceGrafana `pulumi:"grafana"`
	// Grafana specific user configurable settings
	GrafanaUserConfig *ServiceGrafanaUserConfig `pulumi:"grafanaUserConfig"`
	// InfluxDB specific server provided values
	Influxdb *ServiceInfluxdb `pulumi:"influxdb"`
	// InfluxDB specific user configurable settings
	InfluxdbUserConfig *ServiceInfluxdbUserConfig `pulumi:"influxdbUserConfig"`
	// Kafka specific server provided values
	Kafka *ServiceKafka `pulumi:"kafka"`
	// Kafka Connect specific server provided values
	KafkaConnect *ServiceKafkaConnect `pulumi:"kafkaConnect"`
	// Kafka Connect specific user configurable settings
	KafkaConnectUserConfig *ServiceKafkaConnectUserConfig `pulumi:"kafkaConnectUserConfig"`
	// Kafka MirrorMaker 2 specific server provided values
	KafkaMirrormaker *ServiceKafkaMirrormaker `pulumi:"kafkaMirrormaker"`
	// Kafka MirrorMaker 2 specific user configurable settings
	KafkaMirrormakerUserConfig *ServiceKafkaMirrormakerUserConfig `pulumi:"kafkaMirrormakerUserConfig"`
	// Kafka specific user configurable settings
	KafkaUserConfig *ServiceKafkaUserConfig `pulumi:"kafkaUserConfig"`
	// Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
	MaintenanceWindowDow *string `pulumi:"maintenanceWindowDow"`
	// Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
	MaintenanceWindowTime *string `pulumi:"maintenanceWindowTime"`
	// MySQL specific server provided values
	Mysql *ServiceMysql `pulumi:"mysql"`
	// MySQL specific user configurable settings
	MysqlUserConfig *ServiceMysqlUserConfig `pulumi:"mysqlUserConfig"`
	// PostgreSQL specific server provided values
	Pg *ServicePg `pulumi:"pg"`
	// PostgreSQL specific user configurable settings
	PgUserConfig *ServicePgUserConfig `pulumi:"pgUserConfig"`
	// Subscription plan
	Plan *string `pulumi:"plan"`
	// Target project
	Project *string `pulumi:"project"`
	// Identifier of the VPC the service should be in, if any
	ProjectVpcId *string `pulumi:"projectVpcId"`
	// Redis specific server provided values
	Redis *ServiceRedis `pulumi:"redis"`
	// Redis specific user configurable settings
	RedisUserConfig *ServiceRedisUserConfig `pulumi:"redisUserConfig"`
	// Service hostname
	ServiceHost *string `pulumi:"serviceHost"`
	// Service integrations to specify when creating a service. Not applied after initial service creation
	ServiceIntegrations []ServiceServiceIntegration `pulumi:"serviceIntegrations"`
	// Service name
	ServiceName *string `pulumi:"serviceName"`
	// Password used for connecting to the service, if applicable
	ServicePassword *string `pulumi:"servicePassword"`
	// Service port
	ServicePort *int `pulumi:"servicePort"`
	// Service type code
	ServiceType *string `pulumi:"serviceType"`
	// URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
	ServiceUri *string `pulumi:"serviceUri"`
	// Username used for connecting to the service, if applicable
	ServiceUsername *string `pulumi:"serviceUsername"`
	// Service state
	State *string `pulumi:"state"`
	// Prevent service from being deleted. It is recommended to have this enabled for all services.
	TerminationProtection *bool `pulumi:"terminationProtection"`
}

type ServiceState struct {
	// Cassandra specific server provided values
	Cassandra ServiceCassandraPtrInput
	// Cassandra specific user configurable settings
	CassandraUserConfig ServiceCassandraUserConfigPtrInput
	// Cloud the service runs in
	CloudName pulumi.StringPtrInput
	// Service component information objects
	Components ServiceComponentArrayInput
	// Elasticsearch specific server provided values
	Elasticsearch ServiceElasticsearchPtrInput
	// Elasticsearch specific user configurable settings
	ElasticsearchUserConfig ServiceElasticsearchUserConfigPtrInput
	// Grafana specific server provided values
	Grafana ServiceGrafanaPtrInput
	// Grafana specific user configurable settings
	GrafanaUserConfig ServiceGrafanaUserConfigPtrInput
	// InfluxDB specific server provided values
	Influxdb ServiceInfluxdbPtrInput
	// InfluxDB specific user configurable settings
	InfluxdbUserConfig ServiceInfluxdbUserConfigPtrInput
	// Kafka specific server provided values
	Kafka ServiceKafkaPtrInput
	// Kafka Connect specific server provided values
	KafkaConnect ServiceKafkaConnectPtrInput
	// Kafka Connect specific user configurable settings
	KafkaConnectUserConfig ServiceKafkaConnectUserConfigPtrInput
	// Kafka MirrorMaker 2 specific server provided values
	KafkaMirrormaker ServiceKafkaMirrormakerPtrInput
	// Kafka MirrorMaker 2 specific user configurable settings
	KafkaMirrormakerUserConfig ServiceKafkaMirrormakerUserConfigPtrInput
	// Kafka specific user configurable settings
	KafkaUserConfig ServiceKafkaUserConfigPtrInput
	// Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
	MaintenanceWindowDow pulumi.StringPtrInput
	// Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
	MaintenanceWindowTime pulumi.StringPtrInput
	// MySQL specific server provided values
	Mysql ServiceMysqlPtrInput
	// MySQL specific user configurable settings
	MysqlUserConfig ServiceMysqlUserConfigPtrInput
	// PostgreSQL specific server provided values
	Pg ServicePgPtrInput
	// PostgreSQL specific user configurable settings
	PgUserConfig ServicePgUserConfigPtrInput
	// Subscription plan
	Plan pulumi.StringPtrInput
	// Target project
	Project pulumi.StringPtrInput
	// Identifier of the VPC the service should be in, if any
	ProjectVpcId pulumi.StringPtrInput
	// Redis specific server provided values
	Redis ServiceRedisPtrInput
	// Redis specific user configurable settings
	RedisUserConfig ServiceRedisUserConfigPtrInput
	// Service hostname
	ServiceHost pulumi.StringPtrInput
	// Service integrations to specify when creating a service. Not applied after initial service creation
	ServiceIntegrations ServiceServiceIntegrationArrayInput
	// Service name
	ServiceName pulumi.StringPtrInput
	// Password used for connecting to the service, if applicable
	ServicePassword pulumi.StringPtrInput
	// Service port
	ServicePort pulumi.IntPtrInput
	// Service type code
	ServiceType pulumi.StringPtrInput
	// URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
	ServiceUri pulumi.StringPtrInput
	// Username used for connecting to the service, if applicable
	ServiceUsername pulumi.StringPtrInput
	// Service state
	State pulumi.StringPtrInput
	// Prevent service from being deleted. It is recommended to have this enabled for all services.
	TerminationProtection pulumi.BoolPtrInput
}

func (ServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceState)(nil)).Elem()
}

type serviceArgs struct {
	// Cassandra specific server provided values
	Cassandra *ServiceCassandra `pulumi:"cassandra"`
	// Cassandra specific user configurable settings
	CassandraUserConfig *ServiceCassandraUserConfig `pulumi:"cassandraUserConfig"`
	// Cloud the service runs in
	CloudName *string `pulumi:"cloudName"`
	// Elasticsearch specific server provided values
	Elasticsearch *ServiceElasticsearch `pulumi:"elasticsearch"`
	// Elasticsearch specific user configurable settings
	ElasticsearchUserConfig *ServiceElasticsearchUserConfig `pulumi:"elasticsearchUserConfig"`
	// Grafana specific server provided values
	Grafana *ServiceGrafana `pulumi:"grafana"`
	// Grafana specific user configurable settings
	GrafanaUserConfig *ServiceGrafanaUserConfig `pulumi:"grafanaUserConfig"`
	// InfluxDB specific server provided values
	Influxdb *ServiceInfluxdb `pulumi:"influxdb"`
	// InfluxDB specific user configurable settings
	InfluxdbUserConfig *ServiceInfluxdbUserConfig `pulumi:"influxdbUserConfig"`
	// Kafka specific server provided values
	Kafka *ServiceKafka `pulumi:"kafka"`
	// Kafka Connect specific server provided values
	KafkaConnect *ServiceKafkaConnect `pulumi:"kafkaConnect"`
	// Kafka Connect specific user configurable settings
	KafkaConnectUserConfig *ServiceKafkaConnectUserConfig `pulumi:"kafkaConnectUserConfig"`
	// Kafka MirrorMaker 2 specific server provided values
	KafkaMirrormaker *ServiceKafkaMirrormaker `pulumi:"kafkaMirrormaker"`
	// Kafka MirrorMaker 2 specific user configurable settings
	KafkaMirrormakerUserConfig *ServiceKafkaMirrormakerUserConfig `pulumi:"kafkaMirrormakerUserConfig"`
	// Kafka specific user configurable settings
	KafkaUserConfig *ServiceKafkaUserConfig `pulumi:"kafkaUserConfig"`
	// Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
	MaintenanceWindowDow *string `pulumi:"maintenanceWindowDow"`
	// Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
	MaintenanceWindowTime *string `pulumi:"maintenanceWindowTime"`
	// MySQL specific server provided values
	Mysql *ServiceMysql `pulumi:"mysql"`
	// MySQL specific user configurable settings
	MysqlUserConfig *ServiceMysqlUserConfig `pulumi:"mysqlUserConfig"`
	// PostgreSQL specific server provided values
	Pg *ServicePg `pulumi:"pg"`
	// PostgreSQL specific user configurable settings
	PgUserConfig *ServicePgUserConfig `pulumi:"pgUserConfig"`
	// Subscription plan
	Plan *string `pulumi:"plan"`
	// Target project
	Project string `pulumi:"project"`
	// Identifier of the VPC the service should be in, if any
	ProjectVpcId *string `pulumi:"projectVpcId"`
	// Redis specific server provided values
	Redis *ServiceRedis `pulumi:"redis"`
	// Redis specific user configurable settings
	RedisUserConfig *ServiceRedisUserConfig `pulumi:"redisUserConfig"`
	// Service integrations to specify when creating a service. Not applied after initial service creation
	ServiceIntegrations []ServiceServiceIntegration `pulumi:"serviceIntegrations"`
	// Service name
	ServiceName string `pulumi:"serviceName"`
	// Service type code
	ServiceType string `pulumi:"serviceType"`
	// Prevent service from being deleted. It is recommended to have this enabled for all services.
	TerminationProtection *bool `pulumi:"terminationProtection"`
}

// The set of arguments for constructing a Service resource.
type ServiceArgs struct {
	// Cassandra specific server provided values
	Cassandra ServiceCassandraPtrInput
	// Cassandra specific user configurable settings
	CassandraUserConfig ServiceCassandraUserConfigPtrInput
	// Cloud the service runs in
	CloudName pulumi.StringPtrInput
	// Elasticsearch specific server provided values
	Elasticsearch ServiceElasticsearchPtrInput
	// Elasticsearch specific user configurable settings
	ElasticsearchUserConfig ServiceElasticsearchUserConfigPtrInput
	// Grafana specific server provided values
	Grafana ServiceGrafanaPtrInput
	// Grafana specific user configurable settings
	GrafanaUserConfig ServiceGrafanaUserConfigPtrInput
	// InfluxDB specific server provided values
	Influxdb ServiceInfluxdbPtrInput
	// InfluxDB specific user configurable settings
	InfluxdbUserConfig ServiceInfluxdbUserConfigPtrInput
	// Kafka specific server provided values
	Kafka ServiceKafkaPtrInput
	// Kafka Connect specific server provided values
	KafkaConnect ServiceKafkaConnectPtrInput
	// Kafka Connect specific user configurable settings
	KafkaConnectUserConfig ServiceKafkaConnectUserConfigPtrInput
	// Kafka MirrorMaker 2 specific server provided values
	KafkaMirrormaker ServiceKafkaMirrormakerPtrInput
	// Kafka MirrorMaker 2 specific user configurable settings
	KafkaMirrormakerUserConfig ServiceKafkaMirrormakerUserConfigPtrInput
	// Kafka specific user configurable settings
	KafkaUserConfig ServiceKafkaUserConfigPtrInput
	// Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
	MaintenanceWindowDow pulumi.StringPtrInput
	// Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
	MaintenanceWindowTime pulumi.StringPtrInput
	// MySQL specific server provided values
	Mysql ServiceMysqlPtrInput
	// MySQL specific user configurable settings
	MysqlUserConfig ServiceMysqlUserConfigPtrInput
	// PostgreSQL specific server provided values
	Pg ServicePgPtrInput
	// PostgreSQL specific user configurable settings
	PgUserConfig ServicePgUserConfigPtrInput
	// Subscription plan
	Plan pulumi.StringPtrInput
	// Target project
	Project pulumi.StringInput
	// Identifier of the VPC the service should be in, if any
	ProjectVpcId pulumi.StringPtrInput
	// Redis specific server provided values
	Redis ServiceRedisPtrInput
	// Redis specific user configurable settings
	RedisUserConfig ServiceRedisUserConfigPtrInput
	// Service integrations to specify when creating a service. Not applied after initial service creation
	ServiceIntegrations ServiceServiceIntegrationArrayInput
	// Service name
	ServiceName pulumi.StringInput
	// Service type code
	ServiceType pulumi.StringInput
	// Prevent service from being deleted. It is recommended to have this enabled for all services.
	TerminationProtection pulumi.BoolPtrInput
}

func (ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceArgs)(nil)).Elem()
}

type ServiceInput interface {
	pulumi.Input

	ToServiceOutput() ServiceOutput
	ToServiceOutputWithContext(ctx context.Context) ServiceOutput
}

func (Service) ElementType() reflect.Type {
	return reflect.TypeOf((*Service)(nil)).Elem()
}

func (i Service) ToServiceOutput() ServiceOutput {
	return i.ToServiceOutputWithContext(context.Background())
}

func (i Service) ToServiceOutputWithContext(ctx context.Context) ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceOutput)
}

type ServiceOutput struct {
	*pulumi.OutputState
}

func (ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceOutput)(nil)).Elem()
}

func (o ServiceOutput) ToServiceOutput() ServiceOutput {
	return o
}

func (o ServiceOutput) ToServiceOutputWithContext(ctx context.Context) ServiceOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ServiceOutput{})
}
