// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Elasticsearch ACL Rule data source provides information about an existing Aiven Elasticsearch ACL Rule.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.LookupElasticSearchAclRule(ctx, &GetElasticSearchAclRuleArgs{
// 			Project:     aiven_elasticsearch_acl_config.Es_acls_config.Project,
// 			ServiceName: aiven_elasticsearch_acl_config.Es_acls_config.Service_name,
// 			Username:    "<USERNAME>",
// 			Index:       "<INDEX>",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupElasticSearchAclRule(ctx *pulumi.Context, args *LookupElasticSearchAclRuleArgs, opts ...pulumi.InvokeOption) (*LookupElasticSearchAclRuleResult, error) {
	var rv LookupElasticSearchAclRuleResult
	err := ctx.Invoke("aiven:index/getElasticSearchAclRule:getElasticSearchAclRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getElasticSearchAclRule.
type LookupElasticSearchAclRuleArgs struct {
	// The index pattern for the ACL entry. Maximum Length: `249`. This property cannot be changed, doing so forces recreation of the resource.
	Index string `pulumi:"index"`
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project string `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// The username for the ACL entry. Maximum Length: `40`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Username string `pulumi:"username"`
}

// A collection of values returned by getElasticSearchAclRule.
type LookupElasticSearchAclRuleResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The index pattern for the ACL entry. Maximum Length: `249`. This property cannot be changed, doing so forces recreation of the resource.
	Index string `pulumi:"index"`
	// The permission for the ACL entry. The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.
	Permission string `pulumi:"permission"`
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project string `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// The username for the ACL entry. Maximum Length: `40`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Username string `pulumi:"username"`
}

func LookupElasticSearchAclRuleOutput(ctx *pulumi.Context, args LookupElasticSearchAclRuleOutputArgs, opts ...pulumi.InvokeOption) LookupElasticSearchAclRuleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupElasticSearchAclRuleResult, error) {
			args := v.(LookupElasticSearchAclRuleArgs)
			r, err := LookupElasticSearchAclRule(ctx, &args, opts...)
			return *r, err
		}).(LookupElasticSearchAclRuleResultOutput)
}

// A collection of arguments for invoking getElasticSearchAclRule.
type LookupElasticSearchAclRuleOutputArgs struct {
	// The index pattern for the ACL entry. Maximum Length: `249`. This property cannot be changed, doing so forces recreation of the resource.
	Index pulumi.StringInput `pulumi:"index"`
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project pulumi.StringInput `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// The username for the ACL entry. Maximum Length: `40`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Username pulumi.StringInput `pulumi:"username"`
}

func (LookupElasticSearchAclRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupElasticSearchAclRuleArgs)(nil)).Elem()
}

// A collection of values returned by getElasticSearchAclRule.
type LookupElasticSearchAclRuleResultOutput struct{ *pulumi.OutputState }

func (LookupElasticSearchAclRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupElasticSearchAclRuleResult)(nil)).Elem()
}

func (o LookupElasticSearchAclRuleResultOutput) ToLookupElasticSearchAclRuleResultOutput() LookupElasticSearchAclRuleResultOutput {
	return o
}

func (o LookupElasticSearchAclRuleResultOutput) ToLookupElasticSearchAclRuleResultOutputWithContext(ctx context.Context) LookupElasticSearchAclRuleResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupElasticSearchAclRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupElasticSearchAclRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

// The index pattern for the ACL entry. Maximum Length: `249`. This property cannot be changed, doing so forces recreation of the resource.
func (o LookupElasticSearchAclRuleResultOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v LookupElasticSearchAclRuleResult) string { return v.Index }).(pulumi.StringOutput)
}

// The permission for the ACL entry. The possible values are `deny`, `admin`, `read`, `readwrite` and `write`.
func (o LookupElasticSearchAclRuleResultOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func(v LookupElasticSearchAclRuleResult) string { return v.Permission }).(pulumi.StringOutput)
}

// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
func (o LookupElasticSearchAclRuleResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupElasticSearchAclRuleResult) string { return v.Project }).(pulumi.StringOutput)
}

// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
func (o LookupElasticSearchAclRuleResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupElasticSearchAclRuleResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// The username for the ACL entry. Maximum Length: `40`. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
func (o LookupElasticSearchAclRuleResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupElasticSearchAclRuleResult) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupElasticSearchAclRuleResultOutput{})
}
