// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Project data source provides information about the existing Aiven Project.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.LookupProject(ctx, &GetProjectArgs{
// 			Project: "<PROJECT_NAME>",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupProject(ctx *pulumi.Context, args *LookupProjectArgs, opts ...pulumi.InvokeOption) (*LookupProjectResult, error) {
	var rv LookupProjectResult
	err := ctx.Invoke("aiven:index/getProject:getProject", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProject.
type LookupProjectArgs struct {
	Project string `pulumi:"project"`
}

// A collection of values returned by getProject.
type LookupProjectResult struct {
	AccountId                   string `pulumi:"accountId"`
	AddAccountOwnersAdminAccess bool   `pulumi:"addAccountOwnersAdminAccess"`
	AvailableCredits            string `pulumi:"availableCredits"`
	BillingGroup                string `pulumi:"billingGroup"`
	CaCert                      string `pulumi:"caCert"`
	CopyFromProject             string `pulumi:"copyFromProject"`
	DefaultCloud                string `pulumi:"defaultCloud"`
	EstimatedBalance            string `pulumi:"estimatedBalance"`
	// The provider-assigned unique ID for this managed resource.
	Id                           string          `pulumi:"id"`
	PaymentMethod                string          `pulumi:"paymentMethod"`
	Project                      string          `pulumi:"project"`
	Tags                         []GetProjectTag `pulumi:"tags"`
	TechnicalEmails              []string        `pulumi:"technicalEmails"`
	UseSourceProjectBillingGroup bool            `pulumi:"useSourceProjectBillingGroup"`
}

func LookupProjectOutput(ctx *pulumi.Context, args LookupProjectOutputArgs, opts ...pulumi.InvokeOption) LookupProjectResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProjectResult, error) {
			args := v.(LookupProjectArgs)
			r, err := LookupProject(ctx, &args, opts...)
			var s LookupProjectResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupProjectResultOutput)
}

// A collection of arguments for invoking getProject.
type LookupProjectOutputArgs struct {
	Project pulumi.StringInput `pulumi:"project"`
}

func (LookupProjectOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectArgs)(nil)).Elem()
}

// A collection of values returned by getProject.
type LookupProjectResultOutput struct{ *pulumi.OutputState }

func (LookupProjectResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectResult)(nil)).Elem()
}

func (o LookupProjectResultOutput) ToLookupProjectResultOutput() LookupProjectResultOutput {
	return o
}

func (o LookupProjectResultOutput) ToLookupProjectResultOutputWithContext(ctx context.Context) LookupProjectResultOutput {
	return o
}

func (o LookupProjectResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.AccountId }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) AddAccountOwnersAdminAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProjectResult) bool { return v.AddAccountOwnersAdminAccess }).(pulumi.BoolOutput)
}

func (o LookupProjectResultOutput) AvailableCredits() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.AvailableCredits }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) BillingGroup() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.BillingGroup }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) CaCert() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.CaCert }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) CopyFromProject() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.CopyFromProject }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) DefaultCloud() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.DefaultCloud }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) EstimatedBalance() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.EstimatedBalance }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupProjectResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) PaymentMethod() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.PaymentMethod }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) Tags() GetProjectTagArrayOutput {
	return o.ApplyT(func(v LookupProjectResult) []GetProjectTag { return v.Tags }).(GetProjectTagArrayOutput)
}

func (o LookupProjectResultOutput) TechnicalEmails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupProjectResult) []string { return v.TechnicalEmails }).(pulumi.StringArrayOutput)
}

func (o LookupProjectResultOutput) UseSourceProjectBillingGroup() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProjectResult) bool { return v.UseSourceProjectBillingGroup }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProjectResultOutput{})
}
