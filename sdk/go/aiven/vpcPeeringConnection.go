// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VpcPeeringConnection struct {
	pulumi.CustomResourceState

	// Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet This property cannot be changed, doing so forces recreation of the resource.
	PeerAzureAppId pulumi.StringPtrOutput `pulumi:"peerAzureAppId"`
	// Azure tenant id in UUID4 form. This property cannot be changed, doing so forces recreation of the resource.
	PeerAzureTenantId pulumi.StringPtrOutput `pulumi:"peerAzureTenantId"`
	// AWS account ID or GCP project ID of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
	PeerCloudAccount pulumi.StringOutput `pulumi:"peerCloudAccount"`
	// AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces recreation of the resource.
	PeerRegion pulumi.StringPtrOutput `pulumi:"peerRegion"`
	// Azure resource group name of the peered VPC This property cannot be changed, doing so forces recreation of the resource.
	PeerResourceGroup pulumi.StringPtrOutput `pulumi:"peerResourceGroup"`
	// AWS VPC ID or GCP VPC network name of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
	PeerVpc pulumi.StringOutput `pulumi:"peerVpc"`
	// Cloud provider identifier for the peering connection if available
	PeeringConnectionId pulumi.StringOutput `pulumi:"peeringConnectionId"`
	// State of the peering connection
	State pulumi.StringOutput `pulumi:"state"`
	// State-specific help or error information
	StateInfo pulumi.MapOutput `pulumi:"stateInfo"`
	// The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewVpcPeeringConnection registers a new resource with the given unique name, arguments, and options.
func NewVpcPeeringConnection(ctx *pulumi.Context,
	name string, args *VpcPeeringConnectionArgs, opts ...pulumi.ResourceOption) (*VpcPeeringConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PeerCloudAccount == nil {
		return nil, errors.New("invalid value for required argument 'PeerCloudAccount'")
	}
	if args.PeerVpc == nil {
		return nil, errors.New("invalid value for required argument 'PeerVpc'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	var resource VpcPeeringConnection
	err := ctx.RegisterResource("aiven:index/vpcPeeringConnection:VpcPeeringConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcPeeringConnection gets an existing VpcPeeringConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcPeeringConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcPeeringConnectionState, opts ...pulumi.ResourceOption) (*VpcPeeringConnection, error) {
	var resource VpcPeeringConnection
	err := ctx.ReadResource("aiven:index/vpcPeeringConnection:VpcPeeringConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcPeeringConnection resources.
type vpcPeeringConnectionState struct {
	// Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet This property cannot be changed, doing so forces recreation of the resource.
	PeerAzureAppId *string `pulumi:"peerAzureAppId"`
	// Azure tenant id in UUID4 form. This property cannot be changed, doing so forces recreation of the resource.
	PeerAzureTenantId *string `pulumi:"peerAzureTenantId"`
	// AWS account ID or GCP project ID of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
	PeerCloudAccount *string `pulumi:"peerCloudAccount"`
	// AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces recreation of the resource.
	PeerRegion *string `pulumi:"peerRegion"`
	// Azure resource group name of the peered VPC This property cannot be changed, doing so forces recreation of the resource.
	PeerResourceGroup *string `pulumi:"peerResourceGroup"`
	// AWS VPC ID or GCP VPC network name of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
	PeerVpc *string `pulumi:"peerVpc"`
	// Cloud provider identifier for the peering connection if available
	PeeringConnectionId *string `pulumi:"peeringConnectionId"`
	// State of the peering connection
	State *string `pulumi:"state"`
	// State-specific help or error information
	StateInfo map[string]interface{} `pulumi:"stateInfo"`
	// The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
	VpcId *string `pulumi:"vpcId"`
}

type VpcPeeringConnectionState struct {
	// Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet This property cannot be changed, doing so forces recreation of the resource.
	PeerAzureAppId pulumi.StringPtrInput
	// Azure tenant id in UUID4 form. This property cannot be changed, doing so forces recreation of the resource.
	PeerAzureTenantId pulumi.StringPtrInput
	// AWS account ID or GCP project ID of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
	PeerCloudAccount pulumi.StringPtrInput
	// AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces recreation of the resource.
	PeerRegion pulumi.StringPtrInput
	// Azure resource group name of the peered VPC This property cannot be changed, doing so forces recreation of the resource.
	PeerResourceGroup pulumi.StringPtrInput
	// AWS VPC ID or GCP VPC network name of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
	PeerVpc pulumi.StringPtrInput
	// Cloud provider identifier for the peering connection if available
	PeeringConnectionId pulumi.StringPtrInput
	// State of the peering connection
	State pulumi.StringPtrInput
	// State-specific help or error information
	StateInfo pulumi.MapInput
	// The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
	VpcId pulumi.StringPtrInput
}

func (VpcPeeringConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcPeeringConnectionState)(nil)).Elem()
}

type vpcPeeringConnectionArgs struct {
	// Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet This property cannot be changed, doing so forces recreation of the resource.
	PeerAzureAppId *string `pulumi:"peerAzureAppId"`
	// Azure tenant id in UUID4 form. This property cannot be changed, doing so forces recreation of the resource.
	PeerAzureTenantId *string `pulumi:"peerAzureTenantId"`
	// AWS account ID or GCP project ID of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
	PeerCloudAccount string `pulumi:"peerCloudAccount"`
	// AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces recreation of the resource.
	PeerRegion *string `pulumi:"peerRegion"`
	// Azure resource group name of the peered VPC This property cannot be changed, doing so forces recreation of the resource.
	PeerResourceGroup *string `pulumi:"peerResourceGroup"`
	// AWS VPC ID or GCP VPC network name of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
	PeerVpc string `pulumi:"peerVpc"`
	// The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a VpcPeeringConnection resource.
type VpcPeeringConnectionArgs struct {
	// Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet This property cannot be changed, doing so forces recreation of the resource.
	PeerAzureAppId pulumi.StringPtrInput
	// Azure tenant id in UUID4 form. This property cannot be changed, doing so forces recreation of the resource.
	PeerAzureTenantId pulumi.StringPtrInput
	// AWS account ID or GCP project ID of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
	PeerCloudAccount pulumi.StringInput
	// AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces recreation of the resource.
	PeerRegion pulumi.StringPtrInput
	// Azure resource group name of the peered VPC This property cannot be changed, doing so forces recreation of the resource.
	PeerResourceGroup pulumi.StringPtrInput
	// AWS VPC ID or GCP VPC network name of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
	PeerVpc pulumi.StringInput
	// The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
	VpcId pulumi.StringInput
}

func (VpcPeeringConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcPeeringConnectionArgs)(nil)).Elem()
}

type VpcPeeringConnectionInput interface {
	pulumi.Input

	ToVpcPeeringConnectionOutput() VpcPeeringConnectionOutput
	ToVpcPeeringConnectionOutputWithContext(ctx context.Context) VpcPeeringConnectionOutput
}

func (*VpcPeeringConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnection)(nil)).Elem()
}

func (i *VpcPeeringConnection) ToVpcPeeringConnectionOutput() VpcPeeringConnectionOutput {
	return i.ToVpcPeeringConnectionOutputWithContext(context.Background())
}

func (i *VpcPeeringConnection) ToVpcPeeringConnectionOutputWithContext(ctx context.Context) VpcPeeringConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionOutput)
}

// VpcPeeringConnectionArrayInput is an input type that accepts VpcPeeringConnectionArray and VpcPeeringConnectionArrayOutput values.
// You can construct a concrete instance of `VpcPeeringConnectionArrayInput` via:
//
//          VpcPeeringConnectionArray{ VpcPeeringConnectionArgs{...} }
type VpcPeeringConnectionArrayInput interface {
	pulumi.Input

	ToVpcPeeringConnectionArrayOutput() VpcPeeringConnectionArrayOutput
	ToVpcPeeringConnectionArrayOutputWithContext(context.Context) VpcPeeringConnectionArrayOutput
}

type VpcPeeringConnectionArray []VpcPeeringConnectionInput

func (VpcPeeringConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcPeeringConnection)(nil)).Elem()
}

func (i VpcPeeringConnectionArray) ToVpcPeeringConnectionArrayOutput() VpcPeeringConnectionArrayOutput {
	return i.ToVpcPeeringConnectionArrayOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionArray) ToVpcPeeringConnectionArrayOutputWithContext(ctx context.Context) VpcPeeringConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionArrayOutput)
}

// VpcPeeringConnectionMapInput is an input type that accepts VpcPeeringConnectionMap and VpcPeeringConnectionMapOutput values.
// You can construct a concrete instance of `VpcPeeringConnectionMapInput` via:
//
//          VpcPeeringConnectionMap{ "key": VpcPeeringConnectionArgs{...} }
type VpcPeeringConnectionMapInput interface {
	pulumi.Input

	ToVpcPeeringConnectionMapOutput() VpcPeeringConnectionMapOutput
	ToVpcPeeringConnectionMapOutputWithContext(context.Context) VpcPeeringConnectionMapOutput
}

type VpcPeeringConnectionMap map[string]VpcPeeringConnectionInput

func (VpcPeeringConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcPeeringConnection)(nil)).Elem()
}

func (i VpcPeeringConnectionMap) ToVpcPeeringConnectionMapOutput() VpcPeeringConnectionMapOutput {
	return i.ToVpcPeeringConnectionMapOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionMap) ToVpcPeeringConnectionMapOutputWithContext(ctx context.Context) VpcPeeringConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionMapOutput)
}

type VpcPeeringConnectionOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnection)(nil)).Elem()
}

func (o VpcPeeringConnectionOutput) ToVpcPeeringConnectionOutput() VpcPeeringConnectionOutput {
	return o
}

func (o VpcPeeringConnectionOutput) ToVpcPeeringConnectionOutputWithContext(ctx context.Context) VpcPeeringConnectionOutput {
	return o
}

type VpcPeeringConnectionArrayOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcPeeringConnection)(nil)).Elem()
}

func (o VpcPeeringConnectionArrayOutput) ToVpcPeeringConnectionArrayOutput() VpcPeeringConnectionArrayOutput {
	return o
}

func (o VpcPeeringConnectionArrayOutput) ToVpcPeeringConnectionArrayOutputWithContext(ctx context.Context) VpcPeeringConnectionArrayOutput {
	return o
}

func (o VpcPeeringConnectionArrayOutput) Index(i pulumi.IntInput) VpcPeeringConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpcPeeringConnection {
		return vs[0].([]*VpcPeeringConnection)[vs[1].(int)]
	}).(VpcPeeringConnectionOutput)
}

type VpcPeeringConnectionMapOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcPeeringConnection)(nil)).Elem()
}

func (o VpcPeeringConnectionMapOutput) ToVpcPeeringConnectionMapOutput() VpcPeeringConnectionMapOutput {
	return o
}

func (o VpcPeeringConnectionMapOutput) ToVpcPeeringConnectionMapOutputWithContext(ctx context.Context) VpcPeeringConnectionMapOutput {
	return o
}

func (o VpcPeeringConnectionMapOutput) MapIndex(k pulumi.StringInput) VpcPeeringConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpcPeeringConnection {
		return vs[0].(map[string]*VpcPeeringConnection)[vs[1].(string)]
	}).(VpcPeeringConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcPeeringConnectionInput)(nil)).Elem(), &VpcPeeringConnection{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcPeeringConnectionArrayInput)(nil)).Elem(), VpcPeeringConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcPeeringConnectionMapInput)(nil)).Elem(), VpcPeeringConnectionMap{})
	pulumi.RegisterOutputType(VpcPeeringConnectionOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionArrayOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionMapOutput{})
}
