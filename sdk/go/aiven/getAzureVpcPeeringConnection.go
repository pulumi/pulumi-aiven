// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Azure VPC Peering Connection data source provides information about the existing Aiven VPC Peering Connection.
func LookupAzureVpcPeeringConnection(ctx *pulumi.Context, args *LookupAzureVpcPeeringConnectionArgs, opts ...pulumi.InvokeOption) (*LookupAzureVpcPeeringConnectionResult, error) {
	var rv LookupAzureVpcPeeringConnectionResult
	err := ctx.Invoke("aiven:index/getAzureVpcPeeringConnection:getAzureVpcPeeringConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAzureVpcPeeringConnection.
type LookupAzureVpcPeeringConnectionArgs struct {
	AzureSubscriptionId string `pulumi:"azureSubscriptionId"`
	PeerAzureAppId      string `pulumi:"peerAzureAppId"`
	PeerAzureTenantId   string `pulumi:"peerAzureTenantId"`
	PeerResourceGroup   string `pulumi:"peerResourceGroup"`
	VnetName            string `pulumi:"vnetName"`
	VpcId               string `pulumi:"vpcId"`
}

// A collection of values returned by getAzureVpcPeeringConnection.
type LookupAzureVpcPeeringConnectionResult struct {
	AzureSubscriptionId string `pulumi:"azureSubscriptionId"`
	// The provider-assigned unique ID for this managed resource.
	Id                  string                 `pulumi:"id"`
	PeerAzureAppId      string                 `pulumi:"peerAzureAppId"`
	PeerAzureTenantId   string                 `pulumi:"peerAzureTenantId"`
	PeerResourceGroup   string                 `pulumi:"peerResourceGroup"`
	PeeringConnectionId string                 `pulumi:"peeringConnectionId"`
	State               string                 `pulumi:"state"`
	StateInfo           map[string]interface{} `pulumi:"stateInfo"`
	VnetName            string                 `pulumi:"vnetName"`
	VpcId               string                 `pulumi:"vpcId"`
}

func LookupAzureVpcPeeringConnectionOutput(ctx *pulumi.Context, args LookupAzureVpcPeeringConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupAzureVpcPeeringConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAzureVpcPeeringConnectionResult, error) {
			args := v.(LookupAzureVpcPeeringConnectionArgs)
			r, err := LookupAzureVpcPeeringConnection(ctx, &args, opts...)
			var s LookupAzureVpcPeeringConnectionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAzureVpcPeeringConnectionResultOutput)
}

// A collection of arguments for invoking getAzureVpcPeeringConnection.
type LookupAzureVpcPeeringConnectionOutputArgs struct {
	AzureSubscriptionId pulumi.StringInput `pulumi:"azureSubscriptionId"`
	PeerAzureAppId      pulumi.StringInput `pulumi:"peerAzureAppId"`
	PeerAzureTenantId   pulumi.StringInput `pulumi:"peerAzureTenantId"`
	PeerResourceGroup   pulumi.StringInput `pulumi:"peerResourceGroup"`
	VnetName            pulumi.StringInput `pulumi:"vnetName"`
	VpcId               pulumi.StringInput `pulumi:"vpcId"`
}

func (LookupAzureVpcPeeringConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAzureVpcPeeringConnectionArgs)(nil)).Elem()
}

// A collection of values returned by getAzureVpcPeeringConnection.
type LookupAzureVpcPeeringConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupAzureVpcPeeringConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAzureVpcPeeringConnectionResult)(nil)).Elem()
}

func (o LookupAzureVpcPeeringConnectionResultOutput) ToLookupAzureVpcPeeringConnectionResultOutput() LookupAzureVpcPeeringConnectionResultOutput {
	return o
}

func (o LookupAzureVpcPeeringConnectionResultOutput) ToLookupAzureVpcPeeringConnectionResultOutputWithContext(ctx context.Context) LookupAzureVpcPeeringConnectionResultOutput {
	return o
}

func (o LookupAzureVpcPeeringConnectionResultOutput) AzureSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureVpcPeeringConnectionResult) string { return v.AzureSubscriptionId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAzureVpcPeeringConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureVpcPeeringConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAzureVpcPeeringConnectionResultOutput) PeerAzureAppId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureVpcPeeringConnectionResult) string { return v.PeerAzureAppId }).(pulumi.StringOutput)
}

func (o LookupAzureVpcPeeringConnectionResultOutput) PeerAzureTenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureVpcPeeringConnectionResult) string { return v.PeerAzureTenantId }).(pulumi.StringOutput)
}

func (o LookupAzureVpcPeeringConnectionResultOutput) PeerResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureVpcPeeringConnectionResult) string { return v.PeerResourceGroup }).(pulumi.StringOutput)
}

func (o LookupAzureVpcPeeringConnectionResultOutput) PeeringConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureVpcPeeringConnectionResult) string { return v.PeeringConnectionId }).(pulumi.StringOutput)
}

func (o LookupAzureVpcPeeringConnectionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureVpcPeeringConnectionResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupAzureVpcPeeringConnectionResultOutput) StateInfo() pulumi.MapOutput {
	return o.ApplyT(func(v LookupAzureVpcPeeringConnectionResult) map[string]interface{} { return v.StateInfo }).(pulumi.MapOutput)
}

func (o LookupAzureVpcPeeringConnectionResultOutput) VnetName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureVpcPeeringConnectionResult) string { return v.VnetName }).(pulumi.StringOutput)
}

func (o LookupAzureVpcPeeringConnectionResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureVpcPeeringConnectionResult) string { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAzureVpcPeeringConnectionResultOutput{})
}
