// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets information about about an Azure VPC peering connection.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aiven.LookupAzureVpcPeeringConnection(ctx, &aiven.LookupAzureVpcPeeringConnectionArgs{
//				VpcId:               exampleVpc.Id,
//				AzureSubscriptionId: "00000000-0000-0000-0000-000000000000",
//				PeerResourceGroup:   "example-resource-group",
//				VnetName:            "example-vnet",
//				PeerAzureAppId:      "00000000-0000-0000-0000-000000000000",
//				PeerAzureTenantId:   "00000000-0000-0000-0000-000000000000",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func LookupAzureVpcPeeringConnection(ctx *pulumi.Context, args *LookupAzureVpcPeeringConnectionArgs, opts ...pulumi.InvokeOption) (*LookupAzureVpcPeeringConnectionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAzureVpcPeeringConnectionResult
	err := ctx.Invoke("aiven:index/getAzureVpcPeeringConnection:getAzureVpcPeeringConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAzureVpcPeeringConnection.
type LookupAzureVpcPeeringConnectionArgs struct {
	// The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.
	AzureSubscriptionId string `pulumi:"azureSubscriptionId"`
	// The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.
	PeerAzureAppId string `pulumi:"peerAzureAppId"`
	// The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.
	PeerAzureTenantId string `pulumi:"peerAzureTenantId"`
	// The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.
	PeerResourceGroup string `pulumi:"peerResourceGroup"`
	// The name of the Azure VNet. Changing this property forces recreation of the resource.
	VnetName string `pulumi:"vnetName"`
	// The ID of the Aiven VPC. Changing this property forces recreation of the resource.
	VpcId string `pulumi:"vpcId"`
}

// A collection of values returned by getAzureVpcPeeringConnection.
type LookupAzureVpcPeeringConnectionResult struct {
	// The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.
	AzureSubscriptionId string `pulumi:"azureSubscriptionId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.
	PeerAzureAppId string `pulumi:"peerAzureAppId"`
	// The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.
	PeerAzureTenantId string `pulumi:"peerAzureTenantId"`
	// The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.
	PeerResourceGroup string `pulumi:"peerResourceGroup"`
	// The ID of the cloud provider for the peering connection.
	PeeringConnectionId string `pulumi:"peeringConnectionId"`
	// State of the peering connection
	State string `pulumi:"state"`
	// State-specific help or error information.
	StateInfo map[string]interface{} `pulumi:"stateInfo"`
	// The name of the Azure VNet. Changing this property forces recreation of the resource.
	VnetName string `pulumi:"vnetName"`
	// The ID of the Aiven VPC. Changing this property forces recreation of the resource.
	VpcId string `pulumi:"vpcId"`
}

func LookupAzureVpcPeeringConnectionOutput(ctx *pulumi.Context, args LookupAzureVpcPeeringConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupAzureVpcPeeringConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAzureVpcPeeringConnectionResult, error) {
			args := v.(LookupAzureVpcPeeringConnectionArgs)
			r, err := LookupAzureVpcPeeringConnection(ctx, &args, opts...)
			var s LookupAzureVpcPeeringConnectionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAzureVpcPeeringConnectionResultOutput)
}

// A collection of arguments for invoking getAzureVpcPeeringConnection.
type LookupAzureVpcPeeringConnectionOutputArgs struct {
	// The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.
	AzureSubscriptionId pulumi.StringInput `pulumi:"azureSubscriptionId"`
	// The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.
	PeerAzureAppId pulumi.StringInput `pulumi:"peerAzureAppId"`
	// The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.
	PeerAzureTenantId pulumi.StringInput `pulumi:"peerAzureTenantId"`
	// The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.
	PeerResourceGroup pulumi.StringInput `pulumi:"peerResourceGroup"`
	// The name of the Azure VNet. Changing this property forces recreation of the resource.
	VnetName pulumi.StringInput `pulumi:"vnetName"`
	// The ID of the Aiven VPC. Changing this property forces recreation of the resource.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (LookupAzureVpcPeeringConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAzureVpcPeeringConnectionArgs)(nil)).Elem()
}

// A collection of values returned by getAzureVpcPeeringConnection.
type LookupAzureVpcPeeringConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupAzureVpcPeeringConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAzureVpcPeeringConnectionResult)(nil)).Elem()
}

func (o LookupAzureVpcPeeringConnectionResultOutput) ToLookupAzureVpcPeeringConnectionResultOutput() LookupAzureVpcPeeringConnectionResultOutput {
	return o
}

func (o LookupAzureVpcPeeringConnectionResultOutput) ToLookupAzureVpcPeeringConnectionResultOutputWithContext(ctx context.Context) LookupAzureVpcPeeringConnectionResultOutput {
	return o
}

// The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.
func (o LookupAzureVpcPeeringConnectionResultOutput) AzureSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureVpcPeeringConnectionResult) string { return v.AzureSubscriptionId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAzureVpcPeeringConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureVpcPeeringConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.
func (o LookupAzureVpcPeeringConnectionResultOutput) PeerAzureAppId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureVpcPeeringConnectionResult) string { return v.PeerAzureAppId }).(pulumi.StringOutput)
}

// The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.
func (o LookupAzureVpcPeeringConnectionResultOutput) PeerAzureTenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureVpcPeeringConnectionResult) string { return v.PeerAzureTenantId }).(pulumi.StringOutput)
}

// The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.
func (o LookupAzureVpcPeeringConnectionResultOutput) PeerResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureVpcPeeringConnectionResult) string { return v.PeerResourceGroup }).(pulumi.StringOutput)
}

// The ID of the cloud provider for the peering connection.
func (o LookupAzureVpcPeeringConnectionResultOutput) PeeringConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureVpcPeeringConnectionResult) string { return v.PeeringConnectionId }).(pulumi.StringOutput)
}

// State of the peering connection
func (o LookupAzureVpcPeeringConnectionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureVpcPeeringConnectionResult) string { return v.State }).(pulumi.StringOutput)
}

// State-specific help or error information.
func (o LookupAzureVpcPeeringConnectionResultOutput) StateInfo() pulumi.MapOutput {
	return o.ApplyT(func(v LookupAzureVpcPeeringConnectionResult) map[string]interface{} { return v.StateInfo }).(pulumi.MapOutput)
}

// The name of the Azure VNet. Changing this property forces recreation of the resource.
func (o LookupAzureVpcPeeringConnectionResultOutput) VnetName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureVpcPeeringConnectionResult) string { return v.VnetName }).(pulumi.StringOutput)
}

// The ID of the Aiven VPC. Changing this property forces recreation of the resource.
func (o LookupAzureVpcPeeringConnectionResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureVpcPeeringConnectionResult) string { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAzureVpcPeeringConnectionResultOutput{})
}
