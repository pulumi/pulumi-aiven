// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates and manages an [Aiven for Apache FlinkÂ® jar application](https://aiven.io/docs/products/flink/howto/create-jar-application).
//
// **This resource is in the beta stage and may change without notice.** Set
// the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := aiven.NewFlink(ctx, "example", &aiven.FlinkArgs{
//				Project:               pulumi.Any(exampleAivenProject.Project),
//				ServiceName:           pulumi.String("example-flink-service"),
//				CloudName:             pulumi.String("google-europe-west1"),
//				Plan:                  pulumi.String("business-4"),
//				MaintenanceWindowDow:  pulumi.String("monday"),
//				MaintenanceWindowTime: pulumi.String("04:00:00"),
//				FlinkUserConfig: &aiven.FlinkFlinkUserConfigArgs{
//					CustomCode: pulumi.Bool(true),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = aiven.NewFlinkJarApplication(ctx, "example", &aiven.FlinkJarApplicationArgs{
//				Project:     example.Project,
//				ServiceName: example.ServiceName,
//				Name:        pulumi.String("example-app-jar"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import aiven:index/flinkJarApplication:FlinkJarApplication example PROJECT/SERVICE_NAME/APPLICATION_ID
// ```
type FlinkJarApplication struct {
	pulumi.CustomResourceState

	// Application ID.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// JarApplicationVersions.
	ApplicationVersions FlinkJarApplicationApplicationVersionArrayOutput `pulumi:"applicationVersions"`
	// The creation timestamp of this entity in ISO 8601 format, always in UTC.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The creator of this entity.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// Flink JarApplicationDeployment.
	CurrentDeployments FlinkJarApplicationCurrentDeploymentArrayOutput `pulumi:"currentDeployments"`
	// Application name. Maximum length: `128`.
	Name pulumi.StringOutput `pulumi:"name"`
	// Project name. Changing this property forces recreation of the resource.
	Project pulumi.StringOutput `pulumi:"project"`
	// Service name. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// The update timestamp of this entity in ISO 8601 format, always in UTC.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// The latest updater of this entity.
	UpdatedBy pulumi.StringOutput `pulumi:"updatedBy"`
}

// NewFlinkJarApplication registers a new resource with the given unique name, arguments, and options.
func NewFlinkJarApplication(ctx *pulumi.Context,
	name string, args *FlinkJarApplicationArgs, opts ...pulumi.ResourceOption) (*FlinkJarApplication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FlinkJarApplication
	err := ctx.RegisterResource("aiven:index/flinkJarApplication:FlinkJarApplication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFlinkJarApplication gets an existing FlinkJarApplication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFlinkJarApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FlinkJarApplicationState, opts ...pulumi.ResourceOption) (*FlinkJarApplication, error) {
	var resource FlinkJarApplication
	err := ctx.ReadResource("aiven:index/flinkJarApplication:FlinkJarApplication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FlinkJarApplication resources.
type flinkJarApplicationState struct {
	// Application ID.
	ApplicationId *string `pulumi:"applicationId"`
	// JarApplicationVersions.
	ApplicationVersions []FlinkJarApplicationApplicationVersion `pulumi:"applicationVersions"`
	// The creation timestamp of this entity in ISO 8601 format, always in UTC.
	CreatedAt *string `pulumi:"createdAt"`
	// The creator of this entity.
	CreatedBy *string `pulumi:"createdBy"`
	// Flink JarApplicationDeployment.
	CurrentDeployments []FlinkJarApplicationCurrentDeployment `pulumi:"currentDeployments"`
	// Application name. Maximum length: `128`.
	Name *string `pulumi:"name"`
	// Project name. Changing this property forces recreation of the resource.
	Project *string `pulumi:"project"`
	// Service name. Changing this property forces recreation of the resource.
	ServiceName *string `pulumi:"serviceName"`
	// The update timestamp of this entity in ISO 8601 format, always in UTC.
	UpdatedAt *string `pulumi:"updatedAt"`
	// The latest updater of this entity.
	UpdatedBy *string `pulumi:"updatedBy"`
}

type FlinkJarApplicationState struct {
	// Application ID.
	ApplicationId pulumi.StringPtrInput
	// JarApplicationVersions.
	ApplicationVersions FlinkJarApplicationApplicationVersionArrayInput
	// The creation timestamp of this entity in ISO 8601 format, always in UTC.
	CreatedAt pulumi.StringPtrInput
	// The creator of this entity.
	CreatedBy pulumi.StringPtrInput
	// Flink JarApplicationDeployment.
	CurrentDeployments FlinkJarApplicationCurrentDeploymentArrayInput
	// Application name. Maximum length: `128`.
	Name pulumi.StringPtrInput
	// Project name. Changing this property forces recreation of the resource.
	Project pulumi.StringPtrInput
	// Service name. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringPtrInput
	// The update timestamp of this entity in ISO 8601 format, always in UTC.
	UpdatedAt pulumi.StringPtrInput
	// The latest updater of this entity.
	UpdatedBy pulumi.StringPtrInput
}

func (FlinkJarApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*flinkJarApplicationState)(nil)).Elem()
}

type flinkJarApplicationArgs struct {
	// Application name. Maximum length: `128`.
	Name *string `pulumi:"name"`
	// Project name. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// Service name. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
}

// The set of arguments for constructing a FlinkJarApplication resource.
type FlinkJarApplicationArgs struct {
	// Application name. Maximum length: `128`.
	Name pulumi.StringPtrInput
	// Project name. Changing this property forces recreation of the resource.
	Project pulumi.StringInput
	// Service name. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringInput
}

func (FlinkJarApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*flinkJarApplicationArgs)(nil)).Elem()
}

type FlinkJarApplicationInput interface {
	pulumi.Input

	ToFlinkJarApplicationOutput() FlinkJarApplicationOutput
	ToFlinkJarApplicationOutputWithContext(ctx context.Context) FlinkJarApplicationOutput
}

func (*FlinkJarApplication) ElementType() reflect.Type {
	return reflect.TypeOf((**FlinkJarApplication)(nil)).Elem()
}

func (i *FlinkJarApplication) ToFlinkJarApplicationOutput() FlinkJarApplicationOutput {
	return i.ToFlinkJarApplicationOutputWithContext(context.Background())
}

func (i *FlinkJarApplication) ToFlinkJarApplicationOutputWithContext(ctx context.Context) FlinkJarApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkJarApplicationOutput)
}

// FlinkJarApplicationArrayInput is an input type that accepts FlinkJarApplicationArray and FlinkJarApplicationArrayOutput values.
// You can construct a concrete instance of `FlinkJarApplicationArrayInput` via:
//
//	FlinkJarApplicationArray{ FlinkJarApplicationArgs{...} }
type FlinkJarApplicationArrayInput interface {
	pulumi.Input

	ToFlinkJarApplicationArrayOutput() FlinkJarApplicationArrayOutput
	ToFlinkJarApplicationArrayOutputWithContext(context.Context) FlinkJarApplicationArrayOutput
}

type FlinkJarApplicationArray []FlinkJarApplicationInput

func (FlinkJarApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FlinkJarApplication)(nil)).Elem()
}

func (i FlinkJarApplicationArray) ToFlinkJarApplicationArrayOutput() FlinkJarApplicationArrayOutput {
	return i.ToFlinkJarApplicationArrayOutputWithContext(context.Background())
}

func (i FlinkJarApplicationArray) ToFlinkJarApplicationArrayOutputWithContext(ctx context.Context) FlinkJarApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkJarApplicationArrayOutput)
}

// FlinkJarApplicationMapInput is an input type that accepts FlinkJarApplicationMap and FlinkJarApplicationMapOutput values.
// You can construct a concrete instance of `FlinkJarApplicationMapInput` via:
//
//	FlinkJarApplicationMap{ "key": FlinkJarApplicationArgs{...} }
type FlinkJarApplicationMapInput interface {
	pulumi.Input

	ToFlinkJarApplicationMapOutput() FlinkJarApplicationMapOutput
	ToFlinkJarApplicationMapOutputWithContext(context.Context) FlinkJarApplicationMapOutput
}

type FlinkJarApplicationMap map[string]FlinkJarApplicationInput

func (FlinkJarApplicationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FlinkJarApplication)(nil)).Elem()
}

func (i FlinkJarApplicationMap) ToFlinkJarApplicationMapOutput() FlinkJarApplicationMapOutput {
	return i.ToFlinkJarApplicationMapOutputWithContext(context.Background())
}

func (i FlinkJarApplicationMap) ToFlinkJarApplicationMapOutputWithContext(ctx context.Context) FlinkJarApplicationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkJarApplicationMapOutput)
}

type FlinkJarApplicationOutput struct{ *pulumi.OutputState }

func (FlinkJarApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlinkJarApplication)(nil)).Elem()
}

func (o FlinkJarApplicationOutput) ToFlinkJarApplicationOutput() FlinkJarApplicationOutput {
	return o
}

func (o FlinkJarApplicationOutput) ToFlinkJarApplicationOutputWithContext(ctx context.Context) FlinkJarApplicationOutput {
	return o
}

// Application ID.
func (o FlinkJarApplicationOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkJarApplication) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// JarApplicationVersions.
func (o FlinkJarApplicationOutput) ApplicationVersions() FlinkJarApplicationApplicationVersionArrayOutput {
	return o.ApplyT(func(v *FlinkJarApplication) FlinkJarApplicationApplicationVersionArrayOutput {
		return v.ApplicationVersions
	}).(FlinkJarApplicationApplicationVersionArrayOutput)
}

// The creation timestamp of this entity in ISO 8601 format, always in UTC.
func (o FlinkJarApplicationOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkJarApplication) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The creator of this entity.
func (o FlinkJarApplicationOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkJarApplication) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// Flink JarApplicationDeployment.
func (o FlinkJarApplicationOutput) CurrentDeployments() FlinkJarApplicationCurrentDeploymentArrayOutput {
	return o.ApplyT(func(v *FlinkJarApplication) FlinkJarApplicationCurrentDeploymentArrayOutput {
		return v.CurrentDeployments
	}).(FlinkJarApplicationCurrentDeploymentArrayOutput)
}

// Application name. Maximum length: `128`.
func (o FlinkJarApplicationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkJarApplication) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Project name. Changing this property forces recreation of the resource.
func (o FlinkJarApplicationOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkJarApplication) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Service name. Changing this property forces recreation of the resource.
func (o FlinkJarApplicationOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkJarApplication) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// The update timestamp of this entity in ISO 8601 format, always in UTC.
func (o FlinkJarApplicationOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkJarApplication) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The latest updater of this entity.
func (o FlinkJarApplicationOutput) UpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkJarApplication) pulumi.StringOutput { return v.UpdatedBy }).(pulumi.StringOutput)
}

type FlinkJarApplicationArrayOutput struct{ *pulumi.OutputState }

func (FlinkJarApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FlinkJarApplication)(nil)).Elem()
}

func (o FlinkJarApplicationArrayOutput) ToFlinkJarApplicationArrayOutput() FlinkJarApplicationArrayOutput {
	return o
}

func (o FlinkJarApplicationArrayOutput) ToFlinkJarApplicationArrayOutputWithContext(ctx context.Context) FlinkJarApplicationArrayOutput {
	return o
}

func (o FlinkJarApplicationArrayOutput) Index(i pulumi.IntInput) FlinkJarApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FlinkJarApplication {
		return vs[0].([]*FlinkJarApplication)[vs[1].(int)]
	}).(FlinkJarApplicationOutput)
}

type FlinkJarApplicationMapOutput struct{ *pulumi.OutputState }

func (FlinkJarApplicationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FlinkJarApplication)(nil)).Elem()
}

func (o FlinkJarApplicationMapOutput) ToFlinkJarApplicationMapOutput() FlinkJarApplicationMapOutput {
	return o
}

func (o FlinkJarApplicationMapOutput) ToFlinkJarApplicationMapOutputWithContext(ctx context.Context) FlinkJarApplicationMapOutput {
	return o
}

func (o FlinkJarApplicationMapOutput) MapIndex(k pulumi.StringInput) FlinkJarApplicationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FlinkJarApplication {
		return vs[0].(map[string]*FlinkJarApplication)[vs[1].(string)]
	}).(FlinkJarApplicationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkJarApplicationInput)(nil)).Elem(), &FlinkJarApplication{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkJarApplicationArrayInput)(nil)).Elem(), FlinkJarApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkJarApplicationMapInput)(nil)).Elem(), FlinkJarApplicationMap{})
	pulumi.RegisterOutputType(FlinkJarApplicationOutput{})
	pulumi.RegisterOutputType(FlinkJarApplicationArrayOutput{})
	pulumi.RegisterOutputType(FlinkJarApplicationMapOutput{})
}
