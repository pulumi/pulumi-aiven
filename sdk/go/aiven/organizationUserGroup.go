// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates and manages a user group in an organization.
type OrganizationUserGroup struct {
	pulumi.CustomResourceState

	// Time of creation.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The description of the user group. This property cannot be changed, doing so forces recreation of the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The ID of the user group.
	GroupId pulumi.StringOutput `pulumi:"groupId"`
	// The name of the user group. This property cannot be changed, doing so forces recreation of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the organization. This property cannot be changed, doing so forces recreation of the resource.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// Time of last update.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewOrganizationUserGroup registers a new resource with the given unique name, arguments, and options.
func NewOrganizationUserGroup(ctx *pulumi.Context,
	name string, args *OrganizationUserGroupArgs, opts ...pulumi.ResourceOption) (*OrganizationUserGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrganizationUserGroup
	err := ctx.RegisterResource("aiven:index/organizationUserGroup:OrganizationUserGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationUserGroup gets an existing OrganizationUserGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationUserGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationUserGroupState, opts ...pulumi.ResourceOption) (*OrganizationUserGroup, error) {
	var resource OrganizationUserGroup
	err := ctx.ReadResource("aiven:index/organizationUserGroup:OrganizationUserGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationUserGroup resources.
type organizationUserGroupState struct {
	// Time of creation.
	CreateTime *string `pulumi:"createTime"`
	// The description of the user group. This property cannot be changed, doing so forces recreation of the resource.
	Description *string `pulumi:"description"`
	// The ID of the user group.
	GroupId *string `pulumi:"groupId"`
	// The name of the user group. This property cannot be changed, doing so forces recreation of the resource.
	Name *string `pulumi:"name"`
	// The ID of the organization. This property cannot be changed, doing so forces recreation of the resource.
	OrganizationId *string `pulumi:"organizationId"`
	// Time of last update.
	UpdateTime *string `pulumi:"updateTime"`
}

type OrganizationUserGroupState struct {
	// Time of creation.
	CreateTime pulumi.StringPtrInput
	// The description of the user group. This property cannot be changed, doing so forces recreation of the resource.
	Description pulumi.StringPtrInput
	// The ID of the user group.
	GroupId pulumi.StringPtrInput
	// The name of the user group. This property cannot be changed, doing so forces recreation of the resource.
	Name pulumi.StringPtrInput
	// The ID of the organization. This property cannot be changed, doing so forces recreation of the resource.
	OrganizationId pulumi.StringPtrInput
	// Time of last update.
	UpdateTime pulumi.StringPtrInput
}

func (OrganizationUserGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationUserGroupState)(nil)).Elem()
}

type organizationUserGroupArgs struct {
	// The description of the user group. This property cannot be changed, doing so forces recreation of the resource.
	Description *string `pulumi:"description"`
	// The name of the user group. This property cannot be changed, doing so forces recreation of the resource.
	Name *string `pulumi:"name"`
	// The ID of the organization. This property cannot be changed, doing so forces recreation of the resource.
	OrganizationId string `pulumi:"organizationId"`
}

// The set of arguments for constructing a OrganizationUserGroup resource.
type OrganizationUserGroupArgs struct {
	// The description of the user group. This property cannot be changed, doing so forces recreation of the resource.
	Description pulumi.StringPtrInput
	// The name of the user group. This property cannot be changed, doing so forces recreation of the resource.
	Name pulumi.StringPtrInput
	// The ID of the organization. This property cannot be changed, doing so forces recreation of the resource.
	OrganizationId pulumi.StringInput
}

func (OrganizationUserGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationUserGroupArgs)(nil)).Elem()
}

type OrganizationUserGroupInput interface {
	pulumi.Input

	ToOrganizationUserGroupOutput() OrganizationUserGroupOutput
	ToOrganizationUserGroupOutputWithContext(ctx context.Context) OrganizationUserGroupOutput
}

func (*OrganizationUserGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationUserGroup)(nil)).Elem()
}

func (i *OrganizationUserGroup) ToOrganizationUserGroupOutput() OrganizationUserGroupOutput {
	return i.ToOrganizationUserGroupOutputWithContext(context.Background())
}

func (i *OrganizationUserGroup) ToOrganizationUserGroupOutputWithContext(ctx context.Context) OrganizationUserGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationUserGroupOutput)
}

// OrganizationUserGroupArrayInput is an input type that accepts OrganizationUserGroupArray and OrganizationUserGroupArrayOutput values.
// You can construct a concrete instance of `OrganizationUserGroupArrayInput` via:
//
//	OrganizationUserGroupArray{ OrganizationUserGroupArgs{...} }
type OrganizationUserGroupArrayInput interface {
	pulumi.Input

	ToOrganizationUserGroupArrayOutput() OrganizationUserGroupArrayOutput
	ToOrganizationUserGroupArrayOutputWithContext(context.Context) OrganizationUserGroupArrayOutput
}

type OrganizationUserGroupArray []OrganizationUserGroupInput

func (OrganizationUserGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationUserGroup)(nil)).Elem()
}

func (i OrganizationUserGroupArray) ToOrganizationUserGroupArrayOutput() OrganizationUserGroupArrayOutput {
	return i.ToOrganizationUserGroupArrayOutputWithContext(context.Background())
}

func (i OrganizationUserGroupArray) ToOrganizationUserGroupArrayOutputWithContext(ctx context.Context) OrganizationUserGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationUserGroupArrayOutput)
}

// OrganizationUserGroupMapInput is an input type that accepts OrganizationUserGroupMap and OrganizationUserGroupMapOutput values.
// You can construct a concrete instance of `OrganizationUserGroupMapInput` via:
//
//	OrganizationUserGroupMap{ "key": OrganizationUserGroupArgs{...} }
type OrganizationUserGroupMapInput interface {
	pulumi.Input

	ToOrganizationUserGroupMapOutput() OrganizationUserGroupMapOutput
	ToOrganizationUserGroupMapOutputWithContext(context.Context) OrganizationUserGroupMapOutput
}

type OrganizationUserGroupMap map[string]OrganizationUserGroupInput

func (OrganizationUserGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationUserGroup)(nil)).Elem()
}

func (i OrganizationUserGroupMap) ToOrganizationUserGroupMapOutput() OrganizationUserGroupMapOutput {
	return i.ToOrganizationUserGroupMapOutputWithContext(context.Background())
}

func (i OrganizationUserGroupMap) ToOrganizationUserGroupMapOutputWithContext(ctx context.Context) OrganizationUserGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationUserGroupMapOutput)
}

type OrganizationUserGroupOutput struct{ *pulumi.OutputState }

func (OrganizationUserGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationUserGroup)(nil)).Elem()
}

func (o OrganizationUserGroupOutput) ToOrganizationUserGroupOutput() OrganizationUserGroupOutput {
	return o
}

func (o OrganizationUserGroupOutput) ToOrganizationUserGroupOutputWithContext(ctx context.Context) OrganizationUserGroupOutput {
	return o
}

// Time of creation.
func (o OrganizationUserGroupOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationUserGroup) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the user group. This property cannot be changed, doing so forces recreation of the resource.
func (o OrganizationUserGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationUserGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The ID of the user group.
func (o OrganizationUserGroupOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationUserGroup) pulumi.StringOutput { return v.GroupId }).(pulumi.StringOutput)
}

// The name of the user group. This property cannot be changed, doing so forces recreation of the resource.
func (o OrganizationUserGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationUserGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the organization. This property cannot be changed, doing so forces recreation of the resource.
func (o OrganizationUserGroupOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationUserGroup) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// Time of last update.
func (o OrganizationUserGroupOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationUserGroup) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type OrganizationUserGroupArrayOutput struct{ *pulumi.OutputState }

func (OrganizationUserGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationUserGroup)(nil)).Elem()
}

func (o OrganizationUserGroupArrayOutput) ToOrganizationUserGroupArrayOutput() OrganizationUserGroupArrayOutput {
	return o
}

func (o OrganizationUserGroupArrayOutput) ToOrganizationUserGroupArrayOutputWithContext(ctx context.Context) OrganizationUserGroupArrayOutput {
	return o
}

func (o OrganizationUserGroupArrayOutput) Index(i pulumi.IntInput) OrganizationUserGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OrganizationUserGroup {
		return vs[0].([]*OrganizationUserGroup)[vs[1].(int)]
	}).(OrganizationUserGroupOutput)
}

type OrganizationUserGroupMapOutput struct{ *pulumi.OutputState }

func (OrganizationUserGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationUserGroup)(nil)).Elem()
}

func (o OrganizationUserGroupMapOutput) ToOrganizationUserGroupMapOutput() OrganizationUserGroupMapOutput {
	return o
}

func (o OrganizationUserGroupMapOutput) ToOrganizationUserGroupMapOutputWithContext(ctx context.Context) OrganizationUserGroupMapOutput {
	return o
}

func (o OrganizationUserGroupMapOutput) MapIndex(k pulumi.StringInput) OrganizationUserGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OrganizationUserGroup {
		return vs[0].(map[string]*OrganizationUserGroup)[vs[1].(string)]
	}).(OrganizationUserGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationUserGroupInput)(nil)).Elem(), &OrganizationUserGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationUserGroupArrayInput)(nil)).Elem(), OrganizationUserGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationUserGroupMapInput)(nil)).Elem(), OrganizationUserGroupMap{})
	pulumi.RegisterOutputType(OrganizationUserGroupOutput{})
	pulumi.RegisterOutputType(OrganizationUserGroupArrayOutput{})
	pulumi.RegisterOutputType(OrganizationUserGroupMapOutput{})
}
