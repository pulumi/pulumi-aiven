// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates and manages an Aiven for AlloyDB Omni service user.
//
// **This resource is in the beta stage and may change without notice.** Set
// the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
type AlloydbomniUser struct {
	pulumi.CustomResourceState

	// The access certificate for the servie user.
	AccessCert pulumi.StringOutput `pulumi:"accessCert"`
	// The access certificate key for the service user.
	AccessKey pulumi.StringOutput `pulumi:"accessKey"`
	// The password of the service user.
	Password pulumi.StringOutput `pulumi:"password"`
	// Allows replication. For the default avnadmin user this attribute is required and is always `true`.
	PgAllowReplication pulumi.BoolPtrOutput `pulumi:"pgAllowReplication"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringOutput `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// The service user account type, either primary or regular.
	Type pulumi.StringOutput `pulumi:"type"`
	// The name of the service user for this service. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Username pulumi.StringOutput `pulumi:"username"`
}

// NewAlloydbomniUser registers a new resource with the given unique name, arguments, and options.
func NewAlloydbomniUser(ctx *pulumi.Context,
	name string, args *AlloydbomniUserArgs, opts ...pulumi.ResourceOption) (*AlloydbomniUser, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"accessCert",
		"accessKey",
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AlloydbomniUser
	err := ctx.RegisterResource("aiven:index/alloydbomniUser:AlloydbomniUser", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlloydbomniUser gets an existing AlloydbomniUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlloydbomniUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlloydbomniUserState, opts ...pulumi.ResourceOption) (*AlloydbomniUser, error) {
	var resource AlloydbomniUser
	err := ctx.ReadResource("aiven:index/alloydbomniUser:AlloydbomniUser", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlloydbomniUser resources.
type alloydbomniUserState struct {
	// The access certificate for the servie user.
	AccessCert *string `pulumi:"accessCert"`
	// The access certificate key for the service user.
	AccessKey *string `pulumi:"accessKey"`
	// The password of the service user.
	Password *string `pulumi:"password"`
	// Allows replication. For the default avnadmin user this attribute is required and is always `true`.
	PgAllowReplication *bool `pulumi:"pgAllowReplication"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project *string `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName *string `pulumi:"serviceName"`
	// The service user account type, either primary or regular.
	Type *string `pulumi:"type"`
	// The name of the service user for this service. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Username *string `pulumi:"username"`
}

type AlloydbomniUserState struct {
	// The access certificate for the servie user.
	AccessCert pulumi.StringPtrInput
	// The access certificate key for the service user.
	AccessKey pulumi.StringPtrInput
	// The password of the service user.
	Password pulumi.StringPtrInput
	// Allows replication. For the default avnadmin user this attribute is required and is always `true`.
	PgAllowReplication pulumi.BoolPtrInput
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringPtrInput
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringPtrInput
	// The service user account type, either primary or regular.
	Type pulumi.StringPtrInput
	// The name of the service user for this service. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Username pulumi.StringPtrInput
}

func (AlloydbomniUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*alloydbomniUserState)(nil)).Elem()
}

type alloydbomniUserArgs struct {
	// The password of the service user.
	Password *string `pulumi:"password"`
	// Allows replication. For the default avnadmin user this attribute is required and is always `true`.
	PgAllowReplication *bool `pulumi:"pgAllowReplication"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// The name of the service user for this service. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Username string `pulumi:"username"`
}

// The set of arguments for constructing a AlloydbomniUser resource.
type AlloydbomniUserArgs struct {
	// The password of the service user.
	Password pulumi.StringPtrInput
	// Allows replication. For the default avnadmin user this attribute is required and is always `true`.
	PgAllowReplication pulumi.BoolPtrInput
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringInput
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringInput
	// The name of the service user for this service. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Username pulumi.StringInput
}

func (AlloydbomniUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alloydbomniUserArgs)(nil)).Elem()
}

type AlloydbomniUserInput interface {
	pulumi.Input

	ToAlloydbomniUserOutput() AlloydbomniUserOutput
	ToAlloydbomniUserOutputWithContext(ctx context.Context) AlloydbomniUserOutput
}

func (*AlloydbomniUser) ElementType() reflect.Type {
	return reflect.TypeOf((**AlloydbomniUser)(nil)).Elem()
}

func (i *AlloydbomniUser) ToAlloydbomniUserOutput() AlloydbomniUserOutput {
	return i.ToAlloydbomniUserOutputWithContext(context.Background())
}

func (i *AlloydbomniUser) ToAlloydbomniUserOutputWithContext(ctx context.Context) AlloydbomniUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlloydbomniUserOutput)
}

// AlloydbomniUserArrayInput is an input type that accepts AlloydbomniUserArray and AlloydbomniUserArrayOutput values.
// You can construct a concrete instance of `AlloydbomniUserArrayInput` via:
//
//	AlloydbomniUserArray{ AlloydbomniUserArgs{...} }
type AlloydbomniUserArrayInput interface {
	pulumi.Input

	ToAlloydbomniUserArrayOutput() AlloydbomniUserArrayOutput
	ToAlloydbomniUserArrayOutputWithContext(context.Context) AlloydbomniUserArrayOutput
}

type AlloydbomniUserArray []AlloydbomniUserInput

func (AlloydbomniUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlloydbomniUser)(nil)).Elem()
}

func (i AlloydbomniUserArray) ToAlloydbomniUserArrayOutput() AlloydbomniUserArrayOutput {
	return i.ToAlloydbomniUserArrayOutputWithContext(context.Background())
}

func (i AlloydbomniUserArray) ToAlloydbomniUserArrayOutputWithContext(ctx context.Context) AlloydbomniUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlloydbomniUserArrayOutput)
}

// AlloydbomniUserMapInput is an input type that accepts AlloydbomniUserMap and AlloydbomniUserMapOutput values.
// You can construct a concrete instance of `AlloydbomniUserMapInput` via:
//
//	AlloydbomniUserMap{ "key": AlloydbomniUserArgs{...} }
type AlloydbomniUserMapInput interface {
	pulumi.Input

	ToAlloydbomniUserMapOutput() AlloydbomniUserMapOutput
	ToAlloydbomniUserMapOutputWithContext(context.Context) AlloydbomniUserMapOutput
}

type AlloydbomniUserMap map[string]AlloydbomniUserInput

func (AlloydbomniUserMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlloydbomniUser)(nil)).Elem()
}

func (i AlloydbomniUserMap) ToAlloydbomniUserMapOutput() AlloydbomniUserMapOutput {
	return i.ToAlloydbomniUserMapOutputWithContext(context.Background())
}

func (i AlloydbomniUserMap) ToAlloydbomniUserMapOutputWithContext(ctx context.Context) AlloydbomniUserMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlloydbomniUserMapOutput)
}

type AlloydbomniUserOutput struct{ *pulumi.OutputState }

func (AlloydbomniUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlloydbomniUser)(nil)).Elem()
}

func (o AlloydbomniUserOutput) ToAlloydbomniUserOutput() AlloydbomniUserOutput {
	return o
}

func (o AlloydbomniUserOutput) ToAlloydbomniUserOutputWithContext(ctx context.Context) AlloydbomniUserOutput {
	return o
}

// The access certificate for the servie user.
func (o AlloydbomniUserOutput) AccessCert() pulumi.StringOutput {
	return o.ApplyT(func(v *AlloydbomniUser) pulumi.StringOutput { return v.AccessCert }).(pulumi.StringOutput)
}

// The access certificate key for the service user.
func (o AlloydbomniUserOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v *AlloydbomniUser) pulumi.StringOutput { return v.AccessKey }).(pulumi.StringOutput)
}

// The password of the service user.
func (o AlloydbomniUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *AlloydbomniUser) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// Allows replication. For the default avnadmin user this attribute is required and is always `true`.
func (o AlloydbomniUserOutput) PgAllowReplication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AlloydbomniUser) pulumi.BoolPtrOutput { return v.PgAllowReplication }).(pulumi.BoolPtrOutput)
}

// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o AlloydbomniUserOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AlloydbomniUser) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o AlloydbomniUserOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *AlloydbomniUser) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// The service user account type, either primary or regular.
func (o AlloydbomniUserOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AlloydbomniUser) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The name of the service user for this service. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o AlloydbomniUserOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *AlloydbomniUser) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

type AlloydbomniUserArrayOutput struct{ *pulumi.OutputState }

func (AlloydbomniUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlloydbomniUser)(nil)).Elem()
}

func (o AlloydbomniUserArrayOutput) ToAlloydbomniUserArrayOutput() AlloydbomniUserArrayOutput {
	return o
}

func (o AlloydbomniUserArrayOutput) ToAlloydbomniUserArrayOutputWithContext(ctx context.Context) AlloydbomniUserArrayOutput {
	return o
}

func (o AlloydbomniUserArrayOutput) Index(i pulumi.IntInput) AlloydbomniUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AlloydbomniUser {
		return vs[0].([]*AlloydbomniUser)[vs[1].(int)]
	}).(AlloydbomniUserOutput)
}

type AlloydbomniUserMapOutput struct{ *pulumi.OutputState }

func (AlloydbomniUserMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlloydbomniUser)(nil)).Elem()
}

func (o AlloydbomniUserMapOutput) ToAlloydbomniUserMapOutput() AlloydbomniUserMapOutput {
	return o
}

func (o AlloydbomniUserMapOutput) ToAlloydbomniUserMapOutputWithContext(ctx context.Context) AlloydbomniUserMapOutput {
	return o
}

func (o AlloydbomniUserMapOutput) MapIndex(k pulumi.StringInput) AlloydbomniUserOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AlloydbomniUser {
		return vs[0].(map[string]*AlloydbomniUser)[vs[1].(string)]
	}).(AlloydbomniUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlloydbomniUserInput)(nil)).Elem(), &AlloydbomniUser{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlloydbomniUserArrayInput)(nil)).Elem(), AlloydbomniUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlloydbomniUserMapInput)(nil)).Elem(), AlloydbomniUserMap{})
	pulumi.RegisterOutputType(AlloydbomniUserOutput{})
	pulumi.RegisterOutputType(AlloydbomniUserArrayOutput{})
	pulumi.RegisterOutputType(AlloydbomniUserMapOutput{})
}
