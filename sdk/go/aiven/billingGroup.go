// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Billing Group Resource
//
// The Billing Group resource allows the creation and management of Aiven Billing Groups and association with the Projects.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		bybg1, err := aiven.NewBillingGroup(ctx, "bybg1", &aiven.BillingGroupArgs{
// 			BillingCurrency: pulumi.String("USD"),
// 			VatId:           pulumi.String("123ABC"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = aiven.NewProject(ctx, "pr1", &aiven.ProjectArgs{
// 			Project:      pulumi.String("pr1"),
// 			BillingGroup: bybg1.ID(),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type BillingGroup struct {
	pulumi.CustomResourceState

	// Account id
	AccountId pulumi.StringPtrOutput `pulumi:"accountId"`
	// Address lines
	AddressLines pulumi.StringArrayOutput `pulumi:"addressLines"`
	// Billing currency
	BillingCurrency pulumi.StringPtrOutput `pulumi:"billingCurrency"`
	// Billing contact emails
	BillingEmails pulumi.StringArrayOutput `pulumi:"billingEmails"`
	// Billing extra text
	BillingExtraText pulumi.StringPtrOutput `pulumi:"billingExtraText"`
	// Credit card id
	CardId pulumi.StringPtrOutput `pulumi:"cardId"`
	// City
	City pulumi.StringPtrOutput `pulumi:"city"`
	// Company name
	Company pulumi.StringPtrOutput `pulumi:"company"`
	// Country code
	CountryCode pulumi.StringPtrOutput `pulumi:"countryCode"`
	// Billing Group name
	Name pulumi.StringOutput `pulumi:"name"`
	// State
	State pulumi.StringPtrOutput `pulumi:"state"`
	// VAT id
	VatId pulumi.StringPtrOutput `pulumi:"vatId"`
	// Zip Code
	ZipCode pulumi.StringPtrOutput `pulumi:"zipCode"`
}

// NewBillingGroup registers a new resource with the given unique name, arguments, and options.
func NewBillingGroup(ctx *pulumi.Context,
	name string, args *BillingGroupArgs, opts ...pulumi.ResourceOption) (*BillingGroup, error) {
	if args == nil {
		args = &BillingGroupArgs{}
	}

	var resource BillingGroup
	err := ctx.RegisterResource("aiven:index/billingGroup:BillingGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBillingGroup gets an existing BillingGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBillingGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BillingGroupState, opts ...pulumi.ResourceOption) (*BillingGroup, error) {
	var resource BillingGroup
	err := ctx.ReadResource("aiven:index/billingGroup:BillingGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BillingGroup resources.
type billingGroupState struct {
	// Account id
	AccountId *string `pulumi:"accountId"`
	// Address lines
	AddressLines []string `pulumi:"addressLines"`
	// Billing currency
	BillingCurrency *string `pulumi:"billingCurrency"`
	// Billing contact emails
	BillingEmails []string `pulumi:"billingEmails"`
	// Billing extra text
	BillingExtraText *string `pulumi:"billingExtraText"`
	// Credit card id
	CardId *string `pulumi:"cardId"`
	// City
	City *string `pulumi:"city"`
	// Company name
	Company *string `pulumi:"company"`
	// Country code
	CountryCode *string `pulumi:"countryCode"`
	// Billing Group name
	Name *string `pulumi:"name"`
	// State
	State *string `pulumi:"state"`
	// VAT id
	VatId *string `pulumi:"vatId"`
	// Zip Code
	ZipCode *string `pulumi:"zipCode"`
}

type BillingGroupState struct {
	// Account id
	AccountId pulumi.StringPtrInput
	// Address lines
	AddressLines pulumi.StringArrayInput
	// Billing currency
	BillingCurrency pulumi.StringPtrInput
	// Billing contact emails
	BillingEmails pulumi.StringArrayInput
	// Billing extra text
	BillingExtraText pulumi.StringPtrInput
	// Credit card id
	CardId pulumi.StringPtrInput
	// City
	City pulumi.StringPtrInput
	// Company name
	Company pulumi.StringPtrInput
	// Country code
	CountryCode pulumi.StringPtrInput
	// Billing Group name
	Name pulumi.StringPtrInput
	// State
	State pulumi.StringPtrInput
	// VAT id
	VatId pulumi.StringPtrInput
	// Zip Code
	ZipCode pulumi.StringPtrInput
}

func (BillingGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*billingGroupState)(nil)).Elem()
}

type billingGroupArgs struct {
	// Account id
	AccountId *string `pulumi:"accountId"`
	// Address lines
	AddressLines []string `pulumi:"addressLines"`
	// Billing currency
	BillingCurrency *string `pulumi:"billingCurrency"`
	// Billing contact emails
	BillingEmails []string `pulumi:"billingEmails"`
	// Billing extra text
	BillingExtraText *string `pulumi:"billingExtraText"`
	// Credit card id
	CardId *string `pulumi:"cardId"`
	// City
	City *string `pulumi:"city"`
	// Company name
	Company *string `pulumi:"company"`
	// Country code
	CountryCode *string `pulumi:"countryCode"`
	// Billing Group name
	Name *string `pulumi:"name"`
	// State
	State *string `pulumi:"state"`
	// VAT id
	VatId *string `pulumi:"vatId"`
	// Zip Code
	ZipCode *string `pulumi:"zipCode"`
}

// The set of arguments for constructing a BillingGroup resource.
type BillingGroupArgs struct {
	// Account id
	AccountId pulumi.StringPtrInput
	// Address lines
	AddressLines pulumi.StringArrayInput
	// Billing currency
	BillingCurrency pulumi.StringPtrInput
	// Billing contact emails
	BillingEmails pulumi.StringArrayInput
	// Billing extra text
	BillingExtraText pulumi.StringPtrInput
	// Credit card id
	CardId pulumi.StringPtrInput
	// City
	City pulumi.StringPtrInput
	// Company name
	Company pulumi.StringPtrInput
	// Country code
	CountryCode pulumi.StringPtrInput
	// Billing Group name
	Name pulumi.StringPtrInput
	// State
	State pulumi.StringPtrInput
	// VAT id
	VatId pulumi.StringPtrInput
	// Zip Code
	ZipCode pulumi.StringPtrInput
}

func (BillingGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*billingGroupArgs)(nil)).Elem()
}

type BillingGroupInput interface {
	pulumi.Input

	ToBillingGroupOutput() BillingGroupOutput
	ToBillingGroupOutputWithContext(ctx context.Context) BillingGroupOutput
}

func (*BillingGroup) ElementType() reflect.Type {
	return reflect.TypeOf((*BillingGroup)(nil))
}

func (i *BillingGroup) ToBillingGroupOutput() BillingGroupOutput {
	return i.ToBillingGroupOutputWithContext(context.Background())
}

func (i *BillingGroup) ToBillingGroupOutputWithContext(ctx context.Context) BillingGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BillingGroupOutput)
}

func (i *BillingGroup) ToBillingGroupPtrOutput() BillingGroupPtrOutput {
	return i.ToBillingGroupPtrOutputWithContext(context.Background())
}

func (i *BillingGroup) ToBillingGroupPtrOutputWithContext(ctx context.Context) BillingGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BillingGroupPtrOutput)
}

type BillingGroupPtrInput interface {
	pulumi.Input

	ToBillingGroupPtrOutput() BillingGroupPtrOutput
	ToBillingGroupPtrOutputWithContext(ctx context.Context) BillingGroupPtrOutput
}

type billingGroupPtrType BillingGroupArgs

func (*billingGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BillingGroup)(nil))
}

func (i *billingGroupPtrType) ToBillingGroupPtrOutput() BillingGroupPtrOutput {
	return i.ToBillingGroupPtrOutputWithContext(context.Background())
}

func (i *billingGroupPtrType) ToBillingGroupPtrOutputWithContext(ctx context.Context) BillingGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BillingGroupPtrOutput)
}

// BillingGroupArrayInput is an input type that accepts BillingGroupArray and BillingGroupArrayOutput values.
// You can construct a concrete instance of `BillingGroupArrayInput` via:
//
//          BillingGroupArray{ BillingGroupArgs{...} }
type BillingGroupArrayInput interface {
	pulumi.Input

	ToBillingGroupArrayOutput() BillingGroupArrayOutput
	ToBillingGroupArrayOutputWithContext(context.Context) BillingGroupArrayOutput
}

type BillingGroupArray []BillingGroupInput

func (BillingGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BillingGroup)(nil)).Elem()
}

func (i BillingGroupArray) ToBillingGroupArrayOutput() BillingGroupArrayOutput {
	return i.ToBillingGroupArrayOutputWithContext(context.Background())
}

func (i BillingGroupArray) ToBillingGroupArrayOutputWithContext(ctx context.Context) BillingGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BillingGroupArrayOutput)
}

// BillingGroupMapInput is an input type that accepts BillingGroupMap and BillingGroupMapOutput values.
// You can construct a concrete instance of `BillingGroupMapInput` via:
//
//          BillingGroupMap{ "key": BillingGroupArgs{...} }
type BillingGroupMapInput interface {
	pulumi.Input

	ToBillingGroupMapOutput() BillingGroupMapOutput
	ToBillingGroupMapOutputWithContext(context.Context) BillingGroupMapOutput
}

type BillingGroupMap map[string]BillingGroupInput

func (BillingGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BillingGroup)(nil)).Elem()
}

func (i BillingGroupMap) ToBillingGroupMapOutput() BillingGroupMapOutput {
	return i.ToBillingGroupMapOutputWithContext(context.Background())
}

func (i BillingGroupMap) ToBillingGroupMapOutputWithContext(ctx context.Context) BillingGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BillingGroupMapOutput)
}

type BillingGroupOutput struct{ *pulumi.OutputState }

func (BillingGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BillingGroup)(nil))
}

func (o BillingGroupOutput) ToBillingGroupOutput() BillingGroupOutput {
	return o
}

func (o BillingGroupOutput) ToBillingGroupOutputWithContext(ctx context.Context) BillingGroupOutput {
	return o
}

func (o BillingGroupOutput) ToBillingGroupPtrOutput() BillingGroupPtrOutput {
	return o.ToBillingGroupPtrOutputWithContext(context.Background())
}

func (o BillingGroupOutput) ToBillingGroupPtrOutputWithContext(ctx context.Context) BillingGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BillingGroup) *BillingGroup {
		return &v
	}).(BillingGroupPtrOutput)
}

type BillingGroupPtrOutput struct{ *pulumi.OutputState }

func (BillingGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BillingGroup)(nil))
}

func (o BillingGroupPtrOutput) ToBillingGroupPtrOutput() BillingGroupPtrOutput {
	return o
}

func (o BillingGroupPtrOutput) ToBillingGroupPtrOutputWithContext(ctx context.Context) BillingGroupPtrOutput {
	return o
}

func (o BillingGroupPtrOutput) Elem() BillingGroupOutput {
	return o.ApplyT(func(v *BillingGroup) BillingGroup {
		if v != nil {
			return *v
		}
		var ret BillingGroup
		return ret
	}).(BillingGroupOutput)
}

type BillingGroupArrayOutput struct{ *pulumi.OutputState }

func (BillingGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BillingGroup)(nil))
}

func (o BillingGroupArrayOutput) ToBillingGroupArrayOutput() BillingGroupArrayOutput {
	return o
}

func (o BillingGroupArrayOutput) ToBillingGroupArrayOutputWithContext(ctx context.Context) BillingGroupArrayOutput {
	return o
}

func (o BillingGroupArrayOutput) Index(i pulumi.IntInput) BillingGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BillingGroup {
		return vs[0].([]BillingGroup)[vs[1].(int)]
	}).(BillingGroupOutput)
}

type BillingGroupMapOutput struct{ *pulumi.OutputState }

func (BillingGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BillingGroup)(nil))
}

func (o BillingGroupMapOutput) ToBillingGroupMapOutput() BillingGroupMapOutput {
	return o
}

func (o BillingGroupMapOutput) ToBillingGroupMapOutputWithContext(ctx context.Context) BillingGroupMapOutput {
	return o
}

func (o BillingGroupMapOutput) MapIndex(k pulumi.StringInput) BillingGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BillingGroup {
		return vs[0].(map[string]BillingGroup)[vs[1].(string)]
	}).(BillingGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BillingGroupInput)(nil)).Elem(), &BillingGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*BillingGroupPtrInput)(nil)).Elem(), &BillingGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*BillingGroupArrayInput)(nil)).Elem(), BillingGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BillingGroupMapInput)(nil)).Elem(), BillingGroupMap{})
	pulumi.RegisterOutputType(BillingGroupOutput{})
	pulumi.RegisterOutputType(BillingGroupPtrOutput{})
	pulumi.RegisterOutputType(BillingGroupArrayOutput{})
	pulumi.RegisterOutputType(BillingGroupMapOutput{})
}
