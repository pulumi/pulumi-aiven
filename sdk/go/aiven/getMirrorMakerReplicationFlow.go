// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The MirrorMaker 2 Replication Flow data source provides information about the existing MirrorMaker 2 Replication Flow on Aiven Cloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aiven.LookupMirrorMakerReplicationFlow(ctx, &aiven.LookupMirrorMakerReplicationFlowArgs{
//				Project:       kafka_mm_project1.Project,
//				ServiceName:   mm.ServiceName,
//				SourceCluster: source.ServiceName,
//				TargetCluster: target.ServiceName,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupMirrorMakerReplicationFlow(ctx *pulumi.Context, args *LookupMirrorMakerReplicationFlowArgs, opts ...pulumi.InvokeOption) (*LookupMirrorMakerReplicationFlowResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMirrorMakerReplicationFlowResult
	err := ctx.Invoke("aiven:index/getMirrorMakerReplicationFlow:getMirrorMakerReplicationFlow", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMirrorMakerReplicationFlow.
type LookupMirrorMakerReplicationFlowArgs struct {
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// Source cluster alias. Maximum length: `128`.
	SourceCluster string `pulumi:"sourceCluster"`
	// Target cluster alias. Maximum length: `128`.
	TargetCluster string `pulumi:"targetCluster"`
}

// A collection of values returned by getMirrorMakerReplicationFlow.
type LookupMirrorMakerReplicationFlowResult struct {
	// List of topic configuration properties and/or regular expressions to not replicate. The properties that are not replicated by default are: `follower.replication.throttled.replicas`, `leader.replication.throttled.replicas`, `message.timestamp.difference.max.ms`, `message.timestamp.type`, `unclean.leader.election.enable`, and `min.insync.replicas`. Setting this overrides the defaults. For example, to enable replication for 'min.insync.replicas' and 'unclean.leader.election.enable' set this to: ["follower\\.replication\\.throttled\\.replicas", "leader\\.replication\\.throttled\\.replicas", "message\\.timestamp\\.difference\\.max\\.ms",  "message\\.timestamp\\.type"]
	ConfigPropertiesExcludes []string `pulumi:"configPropertiesExcludes"`
	// Whether to emit heartbeats to the direction opposite to the flow, i.e. to the source cluster. The default value is `false`.
	EmitBackwardHeartbeatsEnabled bool `pulumi:"emitBackwardHeartbeatsEnabled"`
	// Whether to emit heartbeats to the target cluster. The default value is `false`.
	EmitHeartbeatsEnabled bool `pulumi:"emitHeartbeatsEnabled"`
	// Enable of disable replication flows for a service.
	Enable bool `pulumi:"enable"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Offset syncs topic location. The possible values are `source` and `target`.
	OffsetSyncsTopicLocation string `pulumi:"offsetSyncsTopicLocation"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// Replication factor, `>= 1`.
	ReplicationFactor int `pulumi:"replicationFactor"`
	// Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.
	ReplicationPolicyClass string `pulumi:"replicationPolicyClass"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// Source cluster alias. Maximum length: `128`.
	SourceCluster string `pulumi:"sourceCluster"`
	// Sync consumer group offsets. The default value is `false`.
	SyncGroupOffsetsEnabled bool `pulumi:"syncGroupOffsetsEnabled"`
	// Frequency of consumer group offset sync. The default value is `1`.
	SyncGroupOffsetsIntervalSeconds int `pulumi:"syncGroupOffsetsIntervalSeconds"`
	// Target cluster alias. Maximum length: `128`.
	TargetCluster string `pulumi:"targetCluster"`
	// List of topics and/or regular expressions to replicate
	Topics []string `pulumi:"topics"`
	// List of topics and/or regular expressions to not replicate.
	TopicsBlacklists []string `pulumi:"topicsBlacklists"`
}

func LookupMirrorMakerReplicationFlowOutput(ctx *pulumi.Context, args LookupMirrorMakerReplicationFlowOutputArgs, opts ...pulumi.InvokeOption) LookupMirrorMakerReplicationFlowResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMirrorMakerReplicationFlowResultOutput, error) {
			args := v.(LookupMirrorMakerReplicationFlowArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupMirrorMakerReplicationFlowResult
			secret, err := ctx.InvokePackageRaw("aiven:index/getMirrorMakerReplicationFlow:getMirrorMakerReplicationFlow", args, &rv, "", opts...)
			if err != nil {
				return LookupMirrorMakerReplicationFlowResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupMirrorMakerReplicationFlowResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupMirrorMakerReplicationFlowResultOutput), nil
			}
			return output, nil
		}).(LookupMirrorMakerReplicationFlowResultOutput)
}

// A collection of arguments for invoking getMirrorMakerReplicationFlow.
type LookupMirrorMakerReplicationFlowOutputArgs struct {
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringInput `pulumi:"project"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// Source cluster alias. Maximum length: `128`.
	SourceCluster pulumi.StringInput `pulumi:"sourceCluster"`
	// Target cluster alias. Maximum length: `128`.
	TargetCluster pulumi.StringInput `pulumi:"targetCluster"`
}

func (LookupMirrorMakerReplicationFlowOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMirrorMakerReplicationFlowArgs)(nil)).Elem()
}

// A collection of values returned by getMirrorMakerReplicationFlow.
type LookupMirrorMakerReplicationFlowResultOutput struct{ *pulumi.OutputState }

func (LookupMirrorMakerReplicationFlowResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMirrorMakerReplicationFlowResult)(nil)).Elem()
}

func (o LookupMirrorMakerReplicationFlowResultOutput) ToLookupMirrorMakerReplicationFlowResultOutput() LookupMirrorMakerReplicationFlowResultOutput {
	return o
}

func (o LookupMirrorMakerReplicationFlowResultOutput) ToLookupMirrorMakerReplicationFlowResultOutputWithContext(ctx context.Context) LookupMirrorMakerReplicationFlowResultOutput {
	return o
}

// List of topic configuration properties and/or regular expressions to not replicate. The properties that are not replicated by default are: `follower.replication.throttled.replicas`, `leader.replication.throttled.replicas`, `message.timestamp.difference.max.ms`, `message.timestamp.type`, `unclean.leader.election.enable`, and `min.insync.replicas`. Setting this overrides the defaults. For example, to enable replication for 'min.insync.replicas' and 'unclean.leader.election.enable' set this to: ["follower\\.replication\\.throttled\\.replicas", "leader\\.replication\\.throttled\\.replicas", "message\\.timestamp\\.difference\\.max\\.ms",  "message\\.timestamp\\.type"]
func (o LookupMirrorMakerReplicationFlowResultOutput) ConfigPropertiesExcludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMirrorMakerReplicationFlowResult) []string { return v.ConfigPropertiesExcludes }).(pulumi.StringArrayOutput)
}

// Whether to emit heartbeats to the direction opposite to the flow, i.e. to the source cluster. The default value is `false`.
func (o LookupMirrorMakerReplicationFlowResultOutput) EmitBackwardHeartbeatsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMirrorMakerReplicationFlowResult) bool { return v.EmitBackwardHeartbeatsEnabled }).(pulumi.BoolOutput)
}

// Whether to emit heartbeats to the target cluster. The default value is `false`.
func (o LookupMirrorMakerReplicationFlowResultOutput) EmitHeartbeatsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMirrorMakerReplicationFlowResult) bool { return v.EmitHeartbeatsEnabled }).(pulumi.BoolOutput)
}

// Enable of disable replication flows for a service.
func (o LookupMirrorMakerReplicationFlowResultOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMirrorMakerReplicationFlowResult) bool { return v.Enable }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMirrorMakerReplicationFlowResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMirrorMakerReplicationFlowResult) string { return v.Id }).(pulumi.StringOutput)
}

// Offset syncs topic location. The possible values are `source` and `target`.
func (o LookupMirrorMakerReplicationFlowResultOutput) OffsetSyncsTopicLocation() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMirrorMakerReplicationFlowResult) string { return v.OffsetSyncsTopicLocation }).(pulumi.StringOutput)
}

// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o LookupMirrorMakerReplicationFlowResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMirrorMakerReplicationFlowResult) string { return v.Project }).(pulumi.StringOutput)
}

// Replication factor, `>= 1`.
func (o LookupMirrorMakerReplicationFlowResultOutput) ReplicationFactor() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMirrorMakerReplicationFlowResult) int { return v.ReplicationFactor }).(pulumi.IntOutput)
}

// Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.
func (o LookupMirrorMakerReplicationFlowResultOutput) ReplicationPolicyClass() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMirrorMakerReplicationFlowResult) string { return v.ReplicationPolicyClass }).(pulumi.StringOutput)
}

// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o LookupMirrorMakerReplicationFlowResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMirrorMakerReplicationFlowResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// Source cluster alias. Maximum length: `128`.
func (o LookupMirrorMakerReplicationFlowResultOutput) SourceCluster() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMirrorMakerReplicationFlowResult) string { return v.SourceCluster }).(pulumi.StringOutput)
}

// Sync consumer group offsets. The default value is `false`.
func (o LookupMirrorMakerReplicationFlowResultOutput) SyncGroupOffsetsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMirrorMakerReplicationFlowResult) bool { return v.SyncGroupOffsetsEnabled }).(pulumi.BoolOutput)
}

// Frequency of consumer group offset sync. The default value is `1`.
func (o LookupMirrorMakerReplicationFlowResultOutput) SyncGroupOffsetsIntervalSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMirrorMakerReplicationFlowResult) int { return v.SyncGroupOffsetsIntervalSeconds }).(pulumi.IntOutput)
}

// Target cluster alias. Maximum length: `128`.
func (o LookupMirrorMakerReplicationFlowResultOutput) TargetCluster() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMirrorMakerReplicationFlowResult) string { return v.TargetCluster }).(pulumi.StringOutput)
}

// List of topics and/or regular expressions to replicate
func (o LookupMirrorMakerReplicationFlowResultOutput) Topics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMirrorMakerReplicationFlowResult) []string { return v.Topics }).(pulumi.StringArrayOutput)
}

// List of topics and/or regular expressions to not replicate.
func (o LookupMirrorMakerReplicationFlowResultOutput) TopicsBlacklists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMirrorMakerReplicationFlowResult) []string { return v.TopicsBlacklists }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMirrorMakerReplicationFlowResultOutput{})
}
