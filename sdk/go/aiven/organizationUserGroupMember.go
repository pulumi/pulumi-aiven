// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Adds and manages users in a user group. You can add organization users and application users to groups.
// Organization users must be [managed in the Aiven Console](https://aiven.io/docs/platform/howto/manage-org-users). Application users can be created and managed using the `OrganizationApplicationUser` resource.
//
// Groups are granted roles and permissions using the `OrganizationPermission` resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := aiven.NewOrganizationUserGroup(ctx, "example", &aiven.OrganizationUserGroupArgs{
//				Description:    pulumi.String("Example group of users."),
//				OrganizationId: pulumi.Any(main.Id),
//				Name:           pulumi.String("Example group"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = aiven.NewOrganizationUserGroupMember(ctx, "project_admin", &aiven.OrganizationUserGroupMemberArgs{
//				GroupId:        example.GroupId,
//				OrganizationId: pulumi.Any(main.Id),
//				UserId:         pulumi.String("u123a456b7890c"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import aiven:index/organizationUserGroupMember:OrganizationUserGroupMember project_admin ORGANIZATION_ID/USER_GROUP_ID/USER_ID
// ```
type OrganizationUserGroupMember struct {
	pulumi.CustomResourceState

	// The ID of the user group.
	GroupId pulumi.StringOutput `pulumi:"groupId"`
	// Last activity time of the user group member.
	LastActivityTime pulumi.StringOutput `pulumi:"lastActivityTime"`
	// The ID of the organization.
	OrganizationId pulumi.StringOutput                          `pulumi:"organizationId"`
	Timeouts       OrganizationUserGroupMemberTimeoutsPtrOutput `pulumi:"timeouts"`
	// The ID of the organization user or application user.
	UserId pulumi.StringOutput `pulumi:"userId"`
}

// NewOrganizationUserGroupMember registers a new resource with the given unique name, arguments, and options.
func NewOrganizationUserGroupMember(ctx *pulumi.Context,
	name string, args *OrganizationUserGroupMemberArgs, opts ...pulumi.ResourceOption) (*OrganizationUserGroupMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GroupId == nil {
		return nil, errors.New("invalid value for required argument 'GroupId'")
	}
	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	if args.UserId == nil {
		return nil, errors.New("invalid value for required argument 'UserId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrganizationUserGroupMember
	err := ctx.RegisterResource("aiven:index/organizationUserGroupMember:OrganizationUserGroupMember", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationUserGroupMember gets an existing OrganizationUserGroupMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationUserGroupMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationUserGroupMemberState, opts ...pulumi.ResourceOption) (*OrganizationUserGroupMember, error) {
	var resource OrganizationUserGroupMember
	err := ctx.ReadResource("aiven:index/organizationUserGroupMember:OrganizationUserGroupMember", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationUserGroupMember resources.
type organizationUserGroupMemberState struct {
	// The ID of the user group.
	GroupId *string `pulumi:"groupId"`
	// Last activity time of the user group member.
	LastActivityTime *string `pulumi:"lastActivityTime"`
	// The ID of the organization.
	OrganizationId *string                              `pulumi:"organizationId"`
	Timeouts       *OrganizationUserGroupMemberTimeouts `pulumi:"timeouts"`
	// The ID of the organization user or application user.
	UserId *string `pulumi:"userId"`
}

type OrganizationUserGroupMemberState struct {
	// The ID of the user group.
	GroupId pulumi.StringPtrInput
	// Last activity time of the user group member.
	LastActivityTime pulumi.StringPtrInput
	// The ID of the organization.
	OrganizationId pulumi.StringPtrInput
	Timeouts       OrganizationUserGroupMemberTimeoutsPtrInput
	// The ID of the organization user or application user.
	UserId pulumi.StringPtrInput
}

func (OrganizationUserGroupMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationUserGroupMemberState)(nil)).Elem()
}

type organizationUserGroupMemberArgs struct {
	// The ID of the user group.
	GroupId string `pulumi:"groupId"`
	// The ID of the organization.
	OrganizationId string                               `pulumi:"organizationId"`
	Timeouts       *OrganizationUserGroupMemberTimeouts `pulumi:"timeouts"`
	// The ID of the organization user or application user.
	UserId string `pulumi:"userId"`
}

// The set of arguments for constructing a OrganizationUserGroupMember resource.
type OrganizationUserGroupMemberArgs struct {
	// The ID of the user group.
	GroupId pulumi.StringInput
	// The ID of the organization.
	OrganizationId pulumi.StringInput
	Timeouts       OrganizationUserGroupMemberTimeoutsPtrInput
	// The ID of the organization user or application user.
	UserId pulumi.StringInput
}

func (OrganizationUserGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationUserGroupMemberArgs)(nil)).Elem()
}

type OrganizationUserGroupMemberInput interface {
	pulumi.Input

	ToOrganizationUserGroupMemberOutput() OrganizationUserGroupMemberOutput
	ToOrganizationUserGroupMemberOutputWithContext(ctx context.Context) OrganizationUserGroupMemberOutput
}

func (*OrganizationUserGroupMember) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationUserGroupMember)(nil)).Elem()
}

func (i *OrganizationUserGroupMember) ToOrganizationUserGroupMemberOutput() OrganizationUserGroupMemberOutput {
	return i.ToOrganizationUserGroupMemberOutputWithContext(context.Background())
}

func (i *OrganizationUserGroupMember) ToOrganizationUserGroupMemberOutputWithContext(ctx context.Context) OrganizationUserGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationUserGroupMemberOutput)
}

// OrganizationUserGroupMemberArrayInput is an input type that accepts OrganizationUserGroupMemberArray and OrganizationUserGroupMemberArrayOutput values.
// You can construct a concrete instance of `OrganizationUserGroupMemberArrayInput` via:
//
//	OrganizationUserGroupMemberArray{ OrganizationUserGroupMemberArgs{...} }
type OrganizationUserGroupMemberArrayInput interface {
	pulumi.Input

	ToOrganizationUserGroupMemberArrayOutput() OrganizationUserGroupMemberArrayOutput
	ToOrganizationUserGroupMemberArrayOutputWithContext(context.Context) OrganizationUserGroupMemberArrayOutput
}

type OrganizationUserGroupMemberArray []OrganizationUserGroupMemberInput

func (OrganizationUserGroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationUserGroupMember)(nil)).Elem()
}

func (i OrganizationUserGroupMemberArray) ToOrganizationUserGroupMemberArrayOutput() OrganizationUserGroupMemberArrayOutput {
	return i.ToOrganizationUserGroupMemberArrayOutputWithContext(context.Background())
}

func (i OrganizationUserGroupMemberArray) ToOrganizationUserGroupMemberArrayOutputWithContext(ctx context.Context) OrganizationUserGroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationUserGroupMemberArrayOutput)
}

// OrganizationUserGroupMemberMapInput is an input type that accepts OrganizationUserGroupMemberMap and OrganizationUserGroupMemberMapOutput values.
// You can construct a concrete instance of `OrganizationUserGroupMemberMapInput` via:
//
//	OrganizationUserGroupMemberMap{ "key": OrganizationUserGroupMemberArgs{...} }
type OrganizationUserGroupMemberMapInput interface {
	pulumi.Input

	ToOrganizationUserGroupMemberMapOutput() OrganizationUserGroupMemberMapOutput
	ToOrganizationUserGroupMemberMapOutputWithContext(context.Context) OrganizationUserGroupMemberMapOutput
}

type OrganizationUserGroupMemberMap map[string]OrganizationUserGroupMemberInput

func (OrganizationUserGroupMemberMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationUserGroupMember)(nil)).Elem()
}

func (i OrganizationUserGroupMemberMap) ToOrganizationUserGroupMemberMapOutput() OrganizationUserGroupMemberMapOutput {
	return i.ToOrganizationUserGroupMemberMapOutputWithContext(context.Background())
}

func (i OrganizationUserGroupMemberMap) ToOrganizationUserGroupMemberMapOutputWithContext(ctx context.Context) OrganizationUserGroupMemberMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationUserGroupMemberMapOutput)
}

type OrganizationUserGroupMemberOutput struct{ *pulumi.OutputState }

func (OrganizationUserGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationUserGroupMember)(nil)).Elem()
}

func (o OrganizationUserGroupMemberOutput) ToOrganizationUserGroupMemberOutput() OrganizationUserGroupMemberOutput {
	return o
}

func (o OrganizationUserGroupMemberOutput) ToOrganizationUserGroupMemberOutputWithContext(ctx context.Context) OrganizationUserGroupMemberOutput {
	return o
}

// The ID of the user group.
func (o OrganizationUserGroupMemberOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationUserGroupMember) pulumi.StringOutput { return v.GroupId }).(pulumi.StringOutput)
}

// Last activity time of the user group member.
func (o OrganizationUserGroupMemberOutput) LastActivityTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationUserGroupMember) pulumi.StringOutput { return v.LastActivityTime }).(pulumi.StringOutput)
}

// The ID of the organization.
func (o OrganizationUserGroupMemberOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationUserGroupMember) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

func (o OrganizationUserGroupMemberOutput) Timeouts() OrganizationUserGroupMemberTimeoutsPtrOutput {
	return o.ApplyT(func(v *OrganizationUserGroupMember) OrganizationUserGroupMemberTimeoutsPtrOutput { return v.Timeouts }).(OrganizationUserGroupMemberTimeoutsPtrOutput)
}

// The ID of the organization user or application user.
func (o OrganizationUserGroupMemberOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationUserGroupMember) pulumi.StringOutput { return v.UserId }).(pulumi.StringOutput)
}

type OrganizationUserGroupMemberArrayOutput struct{ *pulumi.OutputState }

func (OrganizationUserGroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationUserGroupMember)(nil)).Elem()
}

func (o OrganizationUserGroupMemberArrayOutput) ToOrganizationUserGroupMemberArrayOutput() OrganizationUserGroupMemberArrayOutput {
	return o
}

func (o OrganizationUserGroupMemberArrayOutput) ToOrganizationUserGroupMemberArrayOutputWithContext(ctx context.Context) OrganizationUserGroupMemberArrayOutput {
	return o
}

func (o OrganizationUserGroupMemberArrayOutput) Index(i pulumi.IntInput) OrganizationUserGroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OrganizationUserGroupMember {
		return vs[0].([]*OrganizationUserGroupMember)[vs[1].(int)]
	}).(OrganizationUserGroupMemberOutput)
}

type OrganizationUserGroupMemberMapOutput struct{ *pulumi.OutputState }

func (OrganizationUserGroupMemberMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationUserGroupMember)(nil)).Elem()
}

func (o OrganizationUserGroupMemberMapOutput) ToOrganizationUserGroupMemberMapOutput() OrganizationUserGroupMemberMapOutput {
	return o
}

func (o OrganizationUserGroupMemberMapOutput) ToOrganizationUserGroupMemberMapOutputWithContext(ctx context.Context) OrganizationUserGroupMemberMapOutput {
	return o
}

func (o OrganizationUserGroupMemberMapOutput) MapIndex(k pulumi.StringInput) OrganizationUserGroupMemberOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OrganizationUserGroupMember {
		return vs[0].(map[string]*OrganizationUserGroupMember)[vs[1].(string)]
	}).(OrganizationUserGroupMemberOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationUserGroupMemberInput)(nil)).Elem(), &OrganizationUserGroupMember{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationUserGroupMemberArrayInput)(nil)).Elem(), OrganizationUserGroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationUserGroupMemberMapInput)(nil)).Elem(), OrganizationUserGroupMemberMap{})
	pulumi.RegisterOutputType(OrganizationUserGroupMemberOutput{})
	pulumi.RegisterOutputType(OrganizationUserGroupMemberArrayOutput{})
	pulumi.RegisterOutputType(OrganizationUserGroupMemberMapOutput{})
}
