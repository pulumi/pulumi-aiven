// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v2/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.NewAccountTeam(ctx, "accountTeam1", &aiven.AccountTeamArgs{
// 			AccountId: pulumi.Any(aiven_account.Team.Account_id),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type AccountTeam struct {
	pulumi.CustomResourceState

	// Account id
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Time of creation
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Account team name
	Name pulumi.StringOutput `pulumi:"name"`
	// Account team id
	TeamId pulumi.StringOutput `pulumi:"teamId"`
	// Time of last update
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewAccountTeam registers a new resource with the given unique name, arguments, and options.
func NewAccountTeam(ctx *pulumi.Context,
	name string, args *AccountTeamArgs, opts ...pulumi.ResourceOption) (*AccountTeam, error) {
	if args == nil || args.AccountId == nil {
		return nil, errors.New("missing required argument 'AccountId'")
	}
	if args == nil {
		args = &AccountTeamArgs{}
	}
	var resource AccountTeam
	err := ctx.RegisterResource("aiven:index/accountTeam:AccountTeam", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountTeam gets an existing AccountTeam resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountTeam(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountTeamState, opts ...pulumi.ResourceOption) (*AccountTeam, error) {
	var resource AccountTeam
	err := ctx.ReadResource("aiven:index/accountTeam:AccountTeam", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountTeam resources.
type accountTeamState struct {
	// Account id
	AccountId *string `pulumi:"accountId"`
	// Time of creation
	CreateTime *string `pulumi:"createTime"`
	// Account team name
	Name *string `pulumi:"name"`
	// Account team id
	TeamId *string `pulumi:"teamId"`
	// Time of last update
	UpdateTime *string `pulumi:"updateTime"`
}

type AccountTeamState struct {
	// Account id
	AccountId pulumi.StringPtrInput
	// Time of creation
	CreateTime pulumi.StringPtrInput
	// Account team name
	Name pulumi.StringPtrInput
	// Account team id
	TeamId pulumi.StringPtrInput
	// Time of last update
	UpdateTime pulumi.StringPtrInput
}

func (AccountTeamState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountTeamState)(nil)).Elem()
}

type accountTeamArgs struct {
	// Account id
	AccountId string `pulumi:"accountId"`
	// Time of creation
	CreateTime *string `pulumi:"createTime"`
	// Account team name
	Name *string `pulumi:"name"`
	// Time of last update
	UpdateTime *string `pulumi:"updateTime"`
}

// The set of arguments for constructing a AccountTeam resource.
type AccountTeamArgs struct {
	// Account id
	AccountId pulumi.StringInput
	// Time of creation
	CreateTime pulumi.StringPtrInput
	// Account team name
	Name pulumi.StringPtrInput
	// Time of last update
	UpdateTime pulumi.StringPtrInput
}

func (AccountTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountTeamArgs)(nil)).Elem()
}
