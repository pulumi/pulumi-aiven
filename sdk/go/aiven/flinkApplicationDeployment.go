// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Flink Application Deployment resource allows the creation and management of Aiven Flink Application Deployments.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aiven.NewFlinkApplicationDeployment(ctx, "deployment", &aiven.FlinkApplicationDeploymentArgs{
//				Project:       pulumi.Any(foo.Project),
//				ServiceName:   pulumi.Any(fooAivenFlink.ServiceName),
//				ApplicationId: pulumi.Any(fooApp.ApplicationId),
//				VersionId:     pulumi.Any(fooAppVersion.ApplicationVersionId),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import aiven:index/flinkApplicationDeployment:FlinkApplicationDeployment foo_deploy PROJECT/SERVICE/APPLICATION_ID/APPLICATION_VERSION_ID/DEPLOYMENT_ID
// ```
type FlinkApplicationDeployment struct {
	pulumi.CustomResourceState

	// Application ID
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// Application deployment creation time
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Application deployment creator
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// Flink Job parallelism
	Parallelism pulumi.IntPtrOutput `pulumi:"parallelism"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringOutput `pulumi:"project"`
	// Specifies whether a Flink Job is restarted in case it fails
	RestartEnabled pulumi.BoolPtrOutput `pulumi:"restartEnabled"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Job savepoint
	StartingSavepoint pulumi.StringPtrOutput `pulumi:"startingSavepoint"`
	// ApplicationVersion ID
	VersionId pulumi.StringOutput `pulumi:"versionId"`
}

// NewFlinkApplicationDeployment registers a new resource with the given unique name, arguments, and options.
func NewFlinkApplicationDeployment(ctx *pulumi.Context,
	name string, args *FlinkApplicationDeploymentArgs, opts ...pulumi.ResourceOption) (*FlinkApplicationDeployment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.VersionId == nil {
		return nil, errors.New("invalid value for required argument 'VersionId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FlinkApplicationDeployment
	err := ctx.RegisterResource("aiven:index/flinkApplicationDeployment:FlinkApplicationDeployment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFlinkApplicationDeployment gets an existing FlinkApplicationDeployment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFlinkApplicationDeployment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FlinkApplicationDeploymentState, opts ...pulumi.ResourceOption) (*FlinkApplicationDeployment, error) {
	var resource FlinkApplicationDeployment
	err := ctx.ReadResource("aiven:index/flinkApplicationDeployment:FlinkApplicationDeployment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FlinkApplicationDeployment resources.
type flinkApplicationDeploymentState struct {
	// Application ID
	ApplicationId *string `pulumi:"applicationId"`
	// Application deployment creation time
	CreatedAt *string `pulumi:"createdAt"`
	// Application deployment creator
	CreatedBy *string `pulumi:"createdBy"`
	// Flink Job parallelism
	Parallelism *int `pulumi:"parallelism"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project *string `pulumi:"project"`
	// Specifies whether a Flink Job is restarted in case it fails
	RestartEnabled *bool `pulumi:"restartEnabled"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName *string `pulumi:"serviceName"`
	// Job savepoint
	StartingSavepoint *string `pulumi:"startingSavepoint"`
	// ApplicationVersion ID
	VersionId *string `pulumi:"versionId"`
}

type FlinkApplicationDeploymentState struct {
	// Application ID
	ApplicationId pulumi.StringPtrInput
	// Application deployment creation time
	CreatedAt pulumi.StringPtrInput
	// Application deployment creator
	CreatedBy pulumi.StringPtrInput
	// Flink Job parallelism
	Parallelism pulumi.IntPtrInput
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringPtrInput
	// Specifies whether a Flink Job is restarted in case it fails
	RestartEnabled pulumi.BoolPtrInput
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringPtrInput
	// Job savepoint
	StartingSavepoint pulumi.StringPtrInput
	// ApplicationVersion ID
	VersionId pulumi.StringPtrInput
}

func (FlinkApplicationDeploymentState) ElementType() reflect.Type {
	return reflect.TypeOf((*flinkApplicationDeploymentState)(nil)).Elem()
}

type flinkApplicationDeploymentArgs struct {
	// Application ID
	ApplicationId string `pulumi:"applicationId"`
	// Flink Job parallelism
	Parallelism *int `pulumi:"parallelism"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// Specifies whether a Flink Job is restarted in case it fails
	RestartEnabled *bool `pulumi:"restartEnabled"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// Job savepoint
	StartingSavepoint *string `pulumi:"startingSavepoint"`
	// ApplicationVersion ID
	VersionId string `pulumi:"versionId"`
}

// The set of arguments for constructing a FlinkApplicationDeployment resource.
type FlinkApplicationDeploymentArgs struct {
	// Application ID
	ApplicationId pulumi.StringInput
	// Flink Job parallelism
	Parallelism pulumi.IntPtrInput
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringInput
	// Specifies whether a Flink Job is restarted in case it fails
	RestartEnabled pulumi.BoolPtrInput
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringInput
	// Job savepoint
	StartingSavepoint pulumi.StringPtrInput
	// ApplicationVersion ID
	VersionId pulumi.StringInput
}

func (FlinkApplicationDeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*flinkApplicationDeploymentArgs)(nil)).Elem()
}

type FlinkApplicationDeploymentInput interface {
	pulumi.Input

	ToFlinkApplicationDeploymentOutput() FlinkApplicationDeploymentOutput
	ToFlinkApplicationDeploymentOutputWithContext(ctx context.Context) FlinkApplicationDeploymentOutput
}

func (*FlinkApplicationDeployment) ElementType() reflect.Type {
	return reflect.TypeOf((**FlinkApplicationDeployment)(nil)).Elem()
}

func (i *FlinkApplicationDeployment) ToFlinkApplicationDeploymentOutput() FlinkApplicationDeploymentOutput {
	return i.ToFlinkApplicationDeploymentOutputWithContext(context.Background())
}

func (i *FlinkApplicationDeployment) ToFlinkApplicationDeploymentOutputWithContext(ctx context.Context) FlinkApplicationDeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkApplicationDeploymentOutput)
}

// FlinkApplicationDeploymentArrayInput is an input type that accepts FlinkApplicationDeploymentArray and FlinkApplicationDeploymentArrayOutput values.
// You can construct a concrete instance of `FlinkApplicationDeploymentArrayInput` via:
//
//	FlinkApplicationDeploymentArray{ FlinkApplicationDeploymentArgs{...} }
type FlinkApplicationDeploymentArrayInput interface {
	pulumi.Input

	ToFlinkApplicationDeploymentArrayOutput() FlinkApplicationDeploymentArrayOutput
	ToFlinkApplicationDeploymentArrayOutputWithContext(context.Context) FlinkApplicationDeploymentArrayOutput
}

type FlinkApplicationDeploymentArray []FlinkApplicationDeploymentInput

func (FlinkApplicationDeploymentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FlinkApplicationDeployment)(nil)).Elem()
}

func (i FlinkApplicationDeploymentArray) ToFlinkApplicationDeploymentArrayOutput() FlinkApplicationDeploymentArrayOutput {
	return i.ToFlinkApplicationDeploymentArrayOutputWithContext(context.Background())
}

func (i FlinkApplicationDeploymentArray) ToFlinkApplicationDeploymentArrayOutputWithContext(ctx context.Context) FlinkApplicationDeploymentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkApplicationDeploymentArrayOutput)
}

// FlinkApplicationDeploymentMapInput is an input type that accepts FlinkApplicationDeploymentMap and FlinkApplicationDeploymentMapOutput values.
// You can construct a concrete instance of `FlinkApplicationDeploymentMapInput` via:
//
//	FlinkApplicationDeploymentMap{ "key": FlinkApplicationDeploymentArgs{...} }
type FlinkApplicationDeploymentMapInput interface {
	pulumi.Input

	ToFlinkApplicationDeploymentMapOutput() FlinkApplicationDeploymentMapOutput
	ToFlinkApplicationDeploymentMapOutputWithContext(context.Context) FlinkApplicationDeploymentMapOutput
}

type FlinkApplicationDeploymentMap map[string]FlinkApplicationDeploymentInput

func (FlinkApplicationDeploymentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FlinkApplicationDeployment)(nil)).Elem()
}

func (i FlinkApplicationDeploymentMap) ToFlinkApplicationDeploymentMapOutput() FlinkApplicationDeploymentMapOutput {
	return i.ToFlinkApplicationDeploymentMapOutputWithContext(context.Background())
}

func (i FlinkApplicationDeploymentMap) ToFlinkApplicationDeploymentMapOutputWithContext(ctx context.Context) FlinkApplicationDeploymentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkApplicationDeploymentMapOutput)
}

type FlinkApplicationDeploymentOutput struct{ *pulumi.OutputState }

func (FlinkApplicationDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlinkApplicationDeployment)(nil)).Elem()
}

func (o FlinkApplicationDeploymentOutput) ToFlinkApplicationDeploymentOutput() FlinkApplicationDeploymentOutput {
	return o
}

func (o FlinkApplicationDeploymentOutput) ToFlinkApplicationDeploymentOutputWithContext(ctx context.Context) FlinkApplicationDeploymentOutput {
	return o
}

// Application ID
func (o FlinkApplicationDeploymentOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkApplicationDeployment) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// Application deployment creation time
func (o FlinkApplicationDeploymentOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkApplicationDeployment) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Application deployment creator
func (o FlinkApplicationDeploymentOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkApplicationDeployment) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// Flink Job parallelism
func (o FlinkApplicationDeploymentOutput) Parallelism() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FlinkApplicationDeployment) pulumi.IntPtrOutput { return v.Parallelism }).(pulumi.IntPtrOutput)
}

// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o FlinkApplicationDeploymentOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkApplicationDeployment) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Specifies whether a Flink Job is restarted in case it fails
func (o FlinkApplicationDeploymentOutput) RestartEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlinkApplicationDeployment) pulumi.BoolPtrOutput { return v.RestartEnabled }).(pulumi.BoolPtrOutput)
}

// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o FlinkApplicationDeploymentOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkApplicationDeployment) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// Job savepoint
func (o FlinkApplicationDeploymentOutput) StartingSavepoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlinkApplicationDeployment) pulumi.StringPtrOutput { return v.StartingSavepoint }).(pulumi.StringPtrOutput)
}

// ApplicationVersion ID
func (o FlinkApplicationDeploymentOutput) VersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkApplicationDeployment) pulumi.StringOutput { return v.VersionId }).(pulumi.StringOutput)
}

type FlinkApplicationDeploymentArrayOutput struct{ *pulumi.OutputState }

func (FlinkApplicationDeploymentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FlinkApplicationDeployment)(nil)).Elem()
}

func (o FlinkApplicationDeploymentArrayOutput) ToFlinkApplicationDeploymentArrayOutput() FlinkApplicationDeploymentArrayOutput {
	return o
}

func (o FlinkApplicationDeploymentArrayOutput) ToFlinkApplicationDeploymentArrayOutputWithContext(ctx context.Context) FlinkApplicationDeploymentArrayOutput {
	return o
}

func (o FlinkApplicationDeploymentArrayOutput) Index(i pulumi.IntInput) FlinkApplicationDeploymentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FlinkApplicationDeployment {
		return vs[0].([]*FlinkApplicationDeployment)[vs[1].(int)]
	}).(FlinkApplicationDeploymentOutput)
}

type FlinkApplicationDeploymentMapOutput struct{ *pulumi.OutputState }

func (FlinkApplicationDeploymentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FlinkApplicationDeployment)(nil)).Elem()
}

func (o FlinkApplicationDeploymentMapOutput) ToFlinkApplicationDeploymentMapOutput() FlinkApplicationDeploymentMapOutput {
	return o
}

func (o FlinkApplicationDeploymentMapOutput) ToFlinkApplicationDeploymentMapOutputWithContext(ctx context.Context) FlinkApplicationDeploymentMapOutput {
	return o
}

func (o FlinkApplicationDeploymentMapOutput) MapIndex(k pulumi.StringInput) FlinkApplicationDeploymentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FlinkApplicationDeployment {
		return vs[0].(map[string]*FlinkApplicationDeployment)[vs[1].(string)]
	}).(FlinkApplicationDeploymentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkApplicationDeploymentInput)(nil)).Elem(), &FlinkApplicationDeployment{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkApplicationDeploymentArrayInput)(nil)).Elem(), FlinkApplicationDeploymentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkApplicationDeploymentMapInput)(nil)).Elem(), FlinkApplicationDeploymentMap{})
	pulumi.RegisterOutputType(FlinkApplicationDeploymentOutput{})
	pulumi.RegisterOutputType(FlinkApplicationDeploymentArrayOutput{})
	pulumi.RegisterOutputType(FlinkApplicationDeploymentMapOutput{})
}
