// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Flink Job resource allows the creation and management of Aiven Jobs.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aiven.NewFlinkJob(ctx, "job", &aiven.FlinkJobArgs{
//				Project:     pulumi.Any(aiven_flink.Flink.Project),
//				ServiceName: pulumi.Any(aiven_flink.Flink.Service_name),
//				JobName:     pulumi.String("<JOB_NAME>"),
//				TableIds: pulumi.StringArray{
//					pulumi.Any(aiven_flink_table.Source.Table_id),
//					pulumi.Any(aiven_flink_table.Sink.Table_id),
//				},
//				Statement: pulumi.String(fmt.Sprintf("        INSERT INTO %v                                            \n        SELECT * FROM %v                                        \n        WHERE `cpu` > 50                                                                            \n", aiven_flink_table.Sink.Table_name, aiven_flink_table.Source.Table_name)),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type FlinkJob struct {
	pulumi.CustomResourceState

	// The Job ID of the flink job in the flink service.
	JobId pulumi.StringOutput `pulumi:"jobId"`
	// Specifies the name of the service that this job is submitted to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	JobName pulumi.StringOutput `pulumi:"jobName"`
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project pulumi.StringOutput `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// The current state of the flink job in the flink service
	State pulumi.StringOutput `pulumi:"state"`
	// The SQL statement to define the job. This property cannot be changed, doing so forces recreation of the resource.
	Statement pulumi.StringOutput `pulumi:"statement"`
	// A list of table ids that are required in the job runtime. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	TableIds pulumi.StringArrayOutput `pulumi:"tableIds"`
}

// NewFlinkJob registers a new resource with the given unique name, arguments, and options.
func NewFlinkJob(ctx *pulumi.Context,
	name string, args *FlinkJobArgs, opts ...pulumi.ResourceOption) (*FlinkJob, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.JobName == nil {
		return nil, errors.New("invalid value for required argument 'JobName'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.Statement == nil {
		return nil, errors.New("invalid value for required argument 'Statement'")
	}
	if args.TableIds == nil {
		return nil, errors.New("invalid value for required argument 'TableIds'")
	}
	var resource FlinkJob
	err := ctx.RegisterResource("aiven:index/flinkJob:FlinkJob", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFlinkJob gets an existing FlinkJob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFlinkJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FlinkJobState, opts ...pulumi.ResourceOption) (*FlinkJob, error) {
	var resource FlinkJob
	err := ctx.ReadResource("aiven:index/flinkJob:FlinkJob", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FlinkJob resources.
type flinkJobState struct {
	// The Job ID of the flink job in the flink service.
	JobId *string `pulumi:"jobId"`
	// Specifies the name of the service that this job is submitted to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	JobName *string `pulumi:"jobName"`
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project *string `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName *string `pulumi:"serviceName"`
	// The current state of the flink job in the flink service
	State *string `pulumi:"state"`
	// The SQL statement to define the job. This property cannot be changed, doing so forces recreation of the resource.
	Statement *string `pulumi:"statement"`
	// A list of table ids that are required in the job runtime. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	TableIds []string `pulumi:"tableIds"`
}

type FlinkJobState struct {
	// The Job ID of the flink job in the flink service.
	JobId pulumi.StringPtrInput
	// Specifies the name of the service that this job is submitted to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	JobName pulumi.StringPtrInput
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project pulumi.StringPtrInput
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName pulumi.StringPtrInput
	// The current state of the flink job in the flink service
	State pulumi.StringPtrInput
	// The SQL statement to define the job. This property cannot be changed, doing so forces recreation of the resource.
	Statement pulumi.StringPtrInput
	// A list of table ids that are required in the job runtime. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	TableIds pulumi.StringArrayInput
}

func (FlinkJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*flinkJobState)(nil)).Elem()
}

type flinkJobArgs struct {
	// Specifies the name of the service that this job is submitted to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	JobName string `pulumi:"jobName"`
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project string `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// The SQL statement to define the job. This property cannot be changed, doing so forces recreation of the resource.
	Statement string `pulumi:"statement"`
	// A list of table ids that are required in the job runtime. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	TableIds []string `pulumi:"tableIds"`
}

// The set of arguments for constructing a FlinkJob resource.
type FlinkJobArgs struct {
	// Specifies the name of the service that this job is submitted to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	JobName pulumi.StringInput
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project pulumi.StringInput
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName pulumi.StringInput
	// The SQL statement to define the job. This property cannot be changed, doing so forces recreation of the resource.
	Statement pulumi.StringInput
	// A list of table ids that are required in the job runtime. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	TableIds pulumi.StringArrayInput
}

func (FlinkJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*flinkJobArgs)(nil)).Elem()
}

type FlinkJobInput interface {
	pulumi.Input

	ToFlinkJobOutput() FlinkJobOutput
	ToFlinkJobOutputWithContext(ctx context.Context) FlinkJobOutput
}

func (*FlinkJob) ElementType() reflect.Type {
	return reflect.TypeOf((**FlinkJob)(nil)).Elem()
}

func (i *FlinkJob) ToFlinkJobOutput() FlinkJobOutput {
	return i.ToFlinkJobOutputWithContext(context.Background())
}

func (i *FlinkJob) ToFlinkJobOutputWithContext(ctx context.Context) FlinkJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkJobOutput)
}

// FlinkJobArrayInput is an input type that accepts FlinkJobArray and FlinkJobArrayOutput values.
// You can construct a concrete instance of `FlinkJobArrayInput` via:
//
//	FlinkJobArray{ FlinkJobArgs{...} }
type FlinkJobArrayInput interface {
	pulumi.Input

	ToFlinkJobArrayOutput() FlinkJobArrayOutput
	ToFlinkJobArrayOutputWithContext(context.Context) FlinkJobArrayOutput
}

type FlinkJobArray []FlinkJobInput

func (FlinkJobArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FlinkJob)(nil)).Elem()
}

func (i FlinkJobArray) ToFlinkJobArrayOutput() FlinkJobArrayOutput {
	return i.ToFlinkJobArrayOutputWithContext(context.Background())
}

func (i FlinkJobArray) ToFlinkJobArrayOutputWithContext(ctx context.Context) FlinkJobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkJobArrayOutput)
}

// FlinkJobMapInput is an input type that accepts FlinkJobMap and FlinkJobMapOutput values.
// You can construct a concrete instance of `FlinkJobMapInput` via:
//
//	FlinkJobMap{ "key": FlinkJobArgs{...} }
type FlinkJobMapInput interface {
	pulumi.Input

	ToFlinkJobMapOutput() FlinkJobMapOutput
	ToFlinkJobMapOutputWithContext(context.Context) FlinkJobMapOutput
}

type FlinkJobMap map[string]FlinkJobInput

func (FlinkJobMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FlinkJob)(nil)).Elem()
}

func (i FlinkJobMap) ToFlinkJobMapOutput() FlinkJobMapOutput {
	return i.ToFlinkJobMapOutputWithContext(context.Background())
}

func (i FlinkJobMap) ToFlinkJobMapOutputWithContext(ctx context.Context) FlinkJobMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkJobMapOutput)
}

type FlinkJobOutput struct{ *pulumi.OutputState }

func (FlinkJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlinkJob)(nil)).Elem()
}

func (o FlinkJobOutput) ToFlinkJobOutput() FlinkJobOutput {
	return o
}

func (o FlinkJobOutput) ToFlinkJobOutputWithContext(ctx context.Context) FlinkJobOutput {
	return o
}

// The Job ID of the flink job in the flink service.
func (o FlinkJobOutput) JobId() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkJob) pulumi.StringOutput { return v.JobId }).(pulumi.StringOutput)
}

// Specifies the name of the service that this job is submitted to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
func (o FlinkJobOutput) JobName() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkJob) pulumi.StringOutput { return v.JobName }).(pulumi.StringOutput)
}

// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
func (o FlinkJobOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkJob) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
func (o FlinkJobOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkJob) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// The current state of the flink job in the flink service
func (o FlinkJobOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkJob) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The SQL statement to define the job. This property cannot be changed, doing so forces recreation of the resource.
func (o FlinkJobOutput) Statement() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkJob) pulumi.StringOutput { return v.Statement }).(pulumi.StringOutput)
}

// A list of table ids that are required in the job runtime. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
func (o FlinkJobOutput) TableIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FlinkJob) pulumi.StringArrayOutput { return v.TableIds }).(pulumi.StringArrayOutput)
}

type FlinkJobArrayOutput struct{ *pulumi.OutputState }

func (FlinkJobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FlinkJob)(nil)).Elem()
}

func (o FlinkJobArrayOutput) ToFlinkJobArrayOutput() FlinkJobArrayOutput {
	return o
}

func (o FlinkJobArrayOutput) ToFlinkJobArrayOutputWithContext(ctx context.Context) FlinkJobArrayOutput {
	return o
}

func (o FlinkJobArrayOutput) Index(i pulumi.IntInput) FlinkJobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FlinkJob {
		return vs[0].([]*FlinkJob)[vs[1].(int)]
	}).(FlinkJobOutput)
}

type FlinkJobMapOutput struct{ *pulumi.OutputState }

func (FlinkJobMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FlinkJob)(nil)).Elem()
}

func (o FlinkJobMapOutput) ToFlinkJobMapOutput() FlinkJobMapOutput {
	return o
}

func (o FlinkJobMapOutput) ToFlinkJobMapOutputWithContext(ctx context.Context) FlinkJobMapOutput {
	return o
}

func (o FlinkJobMapOutput) MapIndex(k pulumi.StringInput) FlinkJobOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FlinkJob {
		return vs[0].(map[string]*FlinkJob)[vs[1].(string)]
	}).(FlinkJobOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkJobInput)(nil)).Elem(), &FlinkJob{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkJobArrayInput)(nil)).Elem(), FlinkJobArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkJobMapInput)(nil)).Elem(), FlinkJobMap{})
	pulumi.RegisterOutputType(FlinkJobOutput{})
	pulumi.RegisterOutputType(FlinkJobArrayOutput{})
	pulumi.RegisterOutputType(FlinkJobMapOutput{})
}
