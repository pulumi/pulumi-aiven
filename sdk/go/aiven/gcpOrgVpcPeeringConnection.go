// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates and manages a Google Cloud VPC peering connection.
//
// **This resource is in the beta stage and may change without notice.** Set
// the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleVpc, err := aiven.NewOrganizationVpc(ctx, "example_vpc", &aiven.OrganizationVpcArgs{
//				OrganizationId: pulumi.Any(exampleAivenOrganization.Id),
//				CloudName:      pulumi.String("google-europe-west10"),
//				NetworkCidr:    pulumi.String("10.0.0.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = aiven.NewGcpOrgVpcPeeringConnection(ctx, "example", &aiven.GcpOrgVpcPeeringConnectionArgs{
//				OrganizationId:    exampleVpc.OrganizationId,
//				OrganizationVpcId: exampleVpc.OrganizationVpcId,
//				GcpProjectId:      pulumi.String("my-gcp-project-123"),
//				PeerVpc:           pulumi.String("my-vpc-network"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import aiven:index/gcpOrgVpcPeeringConnection:GcpOrgVpcPeeringConnection example ORGANIZATION_ID/ORGANIZATION_VPC_ID/GCP_PROJECT_ID/VPC_NAME
// ```
type GcpOrgVpcPeeringConnection struct {
	pulumi.CustomResourceState

	// Google Cloud project ID. Changing this property forces recreation of the resource.
	GcpProjectId pulumi.StringOutput `pulumi:"gcpProjectId"`
	// Identifier of the organization.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// Identifier of the organization VPC.
	OrganizationVpcId pulumi.StringOutput `pulumi:"organizationVpcId"`
	// Google Cloud VPC network name. Changing this property forces recreation of the resource.
	PeerVpc pulumi.StringOutput `pulumi:"peerVpc"`
	// Computed Google Cloud network peering link.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// State of the peering connection.
	State pulumi.StringOutput `pulumi:"state"`
}

// NewGcpOrgVpcPeeringConnection registers a new resource with the given unique name, arguments, and options.
func NewGcpOrgVpcPeeringConnection(ctx *pulumi.Context,
	name string, args *GcpOrgVpcPeeringConnectionArgs, opts ...pulumi.ResourceOption) (*GcpOrgVpcPeeringConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GcpProjectId == nil {
		return nil, errors.New("invalid value for required argument 'GcpProjectId'")
	}
	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	if args.OrganizationVpcId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationVpcId'")
	}
	if args.PeerVpc == nil {
		return nil, errors.New("invalid value for required argument 'PeerVpc'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GcpOrgVpcPeeringConnection
	err := ctx.RegisterResource("aiven:index/gcpOrgVpcPeeringConnection:GcpOrgVpcPeeringConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGcpOrgVpcPeeringConnection gets an existing GcpOrgVpcPeeringConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGcpOrgVpcPeeringConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GcpOrgVpcPeeringConnectionState, opts ...pulumi.ResourceOption) (*GcpOrgVpcPeeringConnection, error) {
	var resource GcpOrgVpcPeeringConnection
	err := ctx.ReadResource("aiven:index/gcpOrgVpcPeeringConnection:GcpOrgVpcPeeringConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GcpOrgVpcPeeringConnection resources.
type gcpOrgVpcPeeringConnectionState struct {
	// Google Cloud project ID. Changing this property forces recreation of the resource.
	GcpProjectId *string `pulumi:"gcpProjectId"`
	// Identifier of the organization.
	OrganizationId *string `pulumi:"organizationId"`
	// Identifier of the organization VPC.
	OrganizationVpcId *string `pulumi:"organizationVpcId"`
	// Google Cloud VPC network name. Changing this property forces recreation of the resource.
	PeerVpc *string `pulumi:"peerVpc"`
	// Computed Google Cloud network peering link.
	SelfLink *string `pulumi:"selfLink"`
	// State of the peering connection.
	State *string `pulumi:"state"`
}

type GcpOrgVpcPeeringConnectionState struct {
	// Google Cloud project ID. Changing this property forces recreation of the resource.
	GcpProjectId pulumi.StringPtrInput
	// Identifier of the organization.
	OrganizationId pulumi.StringPtrInput
	// Identifier of the organization VPC.
	OrganizationVpcId pulumi.StringPtrInput
	// Google Cloud VPC network name. Changing this property forces recreation of the resource.
	PeerVpc pulumi.StringPtrInput
	// Computed Google Cloud network peering link.
	SelfLink pulumi.StringPtrInput
	// State of the peering connection.
	State pulumi.StringPtrInput
}

func (GcpOrgVpcPeeringConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*gcpOrgVpcPeeringConnectionState)(nil)).Elem()
}

type gcpOrgVpcPeeringConnectionArgs struct {
	// Google Cloud project ID. Changing this property forces recreation of the resource.
	GcpProjectId string `pulumi:"gcpProjectId"`
	// Identifier of the organization.
	OrganizationId string `pulumi:"organizationId"`
	// Identifier of the organization VPC.
	OrganizationVpcId string `pulumi:"organizationVpcId"`
	// Google Cloud VPC network name. Changing this property forces recreation of the resource.
	PeerVpc string `pulumi:"peerVpc"`
}

// The set of arguments for constructing a GcpOrgVpcPeeringConnection resource.
type GcpOrgVpcPeeringConnectionArgs struct {
	// Google Cloud project ID. Changing this property forces recreation of the resource.
	GcpProjectId pulumi.StringInput
	// Identifier of the organization.
	OrganizationId pulumi.StringInput
	// Identifier of the organization VPC.
	OrganizationVpcId pulumi.StringInput
	// Google Cloud VPC network name. Changing this property forces recreation of the resource.
	PeerVpc pulumi.StringInput
}

func (GcpOrgVpcPeeringConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gcpOrgVpcPeeringConnectionArgs)(nil)).Elem()
}

type GcpOrgVpcPeeringConnectionInput interface {
	pulumi.Input

	ToGcpOrgVpcPeeringConnectionOutput() GcpOrgVpcPeeringConnectionOutput
	ToGcpOrgVpcPeeringConnectionOutputWithContext(ctx context.Context) GcpOrgVpcPeeringConnectionOutput
}

func (*GcpOrgVpcPeeringConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpOrgVpcPeeringConnection)(nil)).Elem()
}

func (i *GcpOrgVpcPeeringConnection) ToGcpOrgVpcPeeringConnectionOutput() GcpOrgVpcPeeringConnectionOutput {
	return i.ToGcpOrgVpcPeeringConnectionOutputWithContext(context.Background())
}

func (i *GcpOrgVpcPeeringConnection) ToGcpOrgVpcPeeringConnectionOutputWithContext(ctx context.Context) GcpOrgVpcPeeringConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpOrgVpcPeeringConnectionOutput)
}

// GcpOrgVpcPeeringConnectionArrayInput is an input type that accepts GcpOrgVpcPeeringConnectionArray and GcpOrgVpcPeeringConnectionArrayOutput values.
// You can construct a concrete instance of `GcpOrgVpcPeeringConnectionArrayInput` via:
//
//	GcpOrgVpcPeeringConnectionArray{ GcpOrgVpcPeeringConnectionArgs{...} }
type GcpOrgVpcPeeringConnectionArrayInput interface {
	pulumi.Input

	ToGcpOrgVpcPeeringConnectionArrayOutput() GcpOrgVpcPeeringConnectionArrayOutput
	ToGcpOrgVpcPeeringConnectionArrayOutputWithContext(context.Context) GcpOrgVpcPeeringConnectionArrayOutput
}

type GcpOrgVpcPeeringConnectionArray []GcpOrgVpcPeeringConnectionInput

func (GcpOrgVpcPeeringConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GcpOrgVpcPeeringConnection)(nil)).Elem()
}

func (i GcpOrgVpcPeeringConnectionArray) ToGcpOrgVpcPeeringConnectionArrayOutput() GcpOrgVpcPeeringConnectionArrayOutput {
	return i.ToGcpOrgVpcPeeringConnectionArrayOutputWithContext(context.Background())
}

func (i GcpOrgVpcPeeringConnectionArray) ToGcpOrgVpcPeeringConnectionArrayOutputWithContext(ctx context.Context) GcpOrgVpcPeeringConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpOrgVpcPeeringConnectionArrayOutput)
}

// GcpOrgVpcPeeringConnectionMapInput is an input type that accepts GcpOrgVpcPeeringConnectionMap and GcpOrgVpcPeeringConnectionMapOutput values.
// You can construct a concrete instance of `GcpOrgVpcPeeringConnectionMapInput` via:
//
//	GcpOrgVpcPeeringConnectionMap{ "key": GcpOrgVpcPeeringConnectionArgs{...} }
type GcpOrgVpcPeeringConnectionMapInput interface {
	pulumi.Input

	ToGcpOrgVpcPeeringConnectionMapOutput() GcpOrgVpcPeeringConnectionMapOutput
	ToGcpOrgVpcPeeringConnectionMapOutputWithContext(context.Context) GcpOrgVpcPeeringConnectionMapOutput
}

type GcpOrgVpcPeeringConnectionMap map[string]GcpOrgVpcPeeringConnectionInput

func (GcpOrgVpcPeeringConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GcpOrgVpcPeeringConnection)(nil)).Elem()
}

func (i GcpOrgVpcPeeringConnectionMap) ToGcpOrgVpcPeeringConnectionMapOutput() GcpOrgVpcPeeringConnectionMapOutput {
	return i.ToGcpOrgVpcPeeringConnectionMapOutputWithContext(context.Background())
}

func (i GcpOrgVpcPeeringConnectionMap) ToGcpOrgVpcPeeringConnectionMapOutputWithContext(ctx context.Context) GcpOrgVpcPeeringConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpOrgVpcPeeringConnectionMapOutput)
}

type GcpOrgVpcPeeringConnectionOutput struct{ *pulumi.OutputState }

func (GcpOrgVpcPeeringConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpOrgVpcPeeringConnection)(nil)).Elem()
}

func (o GcpOrgVpcPeeringConnectionOutput) ToGcpOrgVpcPeeringConnectionOutput() GcpOrgVpcPeeringConnectionOutput {
	return o
}

func (o GcpOrgVpcPeeringConnectionOutput) ToGcpOrgVpcPeeringConnectionOutputWithContext(ctx context.Context) GcpOrgVpcPeeringConnectionOutput {
	return o
}

// Google Cloud project ID. Changing this property forces recreation of the resource.
func (o GcpOrgVpcPeeringConnectionOutput) GcpProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpOrgVpcPeeringConnection) pulumi.StringOutput { return v.GcpProjectId }).(pulumi.StringOutput)
}

// Identifier of the organization.
func (o GcpOrgVpcPeeringConnectionOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpOrgVpcPeeringConnection) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// Identifier of the organization VPC.
func (o GcpOrgVpcPeeringConnectionOutput) OrganizationVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpOrgVpcPeeringConnection) pulumi.StringOutput { return v.OrganizationVpcId }).(pulumi.StringOutput)
}

// Google Cloud VPC network name. Changing this property forces recreation of the resource.
func (o GcpOrgVpcPeeringConnectionOutput) PeerVpc() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpOrgVpcPeeringConnection) pulumi.StringOutput { return v.PeerVpc }).(pulumi.StringOutput)
}

// Computed Google Cloud network peering link.
func (o GcpOrgVpcPeeringConnectionOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpOrgVpcPeeringConnection) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// State of the peering connection.
func (o GcpOrgVpcPeeringConnectionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpOrgVpcPeeringConnection) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

type GcpOrgVpcPeeringConnectionArrayOutput struct{ *pulumi.OutputState }

func (GcpOrgVpcPeeringConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GcpOrgVpcPeeringConnection)(nil)).Elem()
}

func (o GcpOrgVpcPeeringConnectionArrayOutput) ToGcpOrgVpcPeeringConnectionArrayOutput() GcpOrgVpcPeeringConnectionArrayOutput {
	return o
}

func (o GcpOrgVpcPeeringConnectionArrayOutput) ToGcpOrgVpcPeeringConnectionArrayOutputWithContext(ctx context.Context) GcpOrgVpcPeeringConnectionArrayOutput {
	return o
}

func (o GcpOrgVpcPeeringConnectionArrayOutput) Index(i pulumi.IntInput) GcpOrgVpcPeeringConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GcpOrgVpcPeeringConnection {
		return vs[0].([]*GcpOrgVpcPeeringConnection)[vs[1].(int)]
	}).(GcpOrgVpcPeeringConnectionOutput)
}

type GcpOrgVpcPeeringConnectionMapOutput struct{ *pulumi.OutputState }

func (GcpOrgVpcPeeringConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GcpOrgVpcPeeringConnection)(nil)).Elem()
}

func (o GcpOrgVpcPeeringConnectionMapOutput) ToGcpOrgVpcPeeringConnectionMapOutput() GcpOrgVpcPeeringConnectionMapOutput {
	return o
}

func (o GcpOrgVpcPeeringConnectionMapOutput) ToGcpOrgVpcPeeringConnectionMapOutputWithContext(ctx context.Context) GcpOrgVpcPeeringConnectionMapOutput {
	return o
}

func (o GcpOrgVpcPeeringConnectionMapOutput) MapIndex(k pulumi.StringInput) GcpOrgVpcPeeringConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GcpOrgVpcPeeringConnection {
		return vs[0].(map[string]*GcpOrgVpcPeeringConnection)[vs[1].(string)]
	}).(GcpOrgVpcPeeringConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GcpOrgVpcPeeringConnectionInput)(nil)).Elem(), &GcpOrgVpcPeeringConnection{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpOrgVpcPeeringConnectionArrayInput)(nil)).Elem(), GcpOrgVpcPeeringConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpOrgVpcPeeringConnectionMapInput)(nil)).Elem(), GcpOrgVpcPeeringConnectionMap{})
	pulumi.RegisterOutputType(GcpOrgVpcPeeringConnectionOutput{})
	pulumi.RegisterOutputType(GcpOrgVpcPeeringConnectionArrayOutput{})
	pulumi.RegisterOutputType(GcpOrgVpcPeeringConnectionMapOutput{})
}
