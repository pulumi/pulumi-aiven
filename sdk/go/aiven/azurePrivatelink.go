// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The Azure Privatelink resource allows the creation and management of Aiven Azure Privatelink for a services.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aiven.NewAzurePrivatelink(ctx, "foo", &aiven.AzurePrivatelinkArgs{
//				Project:     pulumi.Any(data.Aiven_project.Foo.Project),
//				ServiceName: pulumi.Any(aiven_kafka.Bar.Service_name),
//				UserSubscriptionIds: pulumi.StringArray{
//					pulumi.String("xxxxxx-xxxx-xxxx-xxxx-xxxxxxxx"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import aiven:index/azurePrivatelink:AzurePrivatelink foo project/service_name
//
// ```
type AzurePrivatelink struct {
	pulumi.CustomResourceState

	// Azure Privatelink service alias
	AzureServiceAlias pulumi.StringOutput `pulumi:"azureServiceAlias"`
	// Azure Privatelink service ID
	AzureServiceId pulumi.StringOutput `pulumi:"azureServiceId"`
	// Printable result of the Azure Privatelink request
	Message pulumi.StringOutput `pulumi:"message"`
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project pulumi.StringOutput `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Privatelink resource state
	State pulumi.StringOutput `pulumi:"state"`
	// A List of allowed Subscription IDs. Maximum length: `16`.
	UserSubscriptionIds pulumi.StringArrayOutput `pulumi:"userSubscriptionIds"`
}

// NewAzurePrivatelink registers a new resource with the given unique name, arguments, and options.
func NewAzurePrivatelink(ctx *pulumi.Context,
	name string, args *AzurePrivatelinkArgs, opts ...pulumi.ResourceOption) (*AzurePrivatelink, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.UserSubscriptionIds == nil {
		return nil, errors.New("invalid value for required argument 'UserSubscriptionIds'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AzurePrivatelink
	err := ctx.RegisterResource("aiven:index/azurePrivatelink:AzurePrivatelink", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAzurePrivatelink gets an existing AzurePrivatelink resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAzurePrivatelink(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AzurePrivatelinkState, opts ...pulumi.ResourceOption) (*AzurePrivatelink, error) {
	var resource AzurePrivatelink
	err := ctx.ReadResource("aiven:index/azurePrivatelink:AzurePrivatelink", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AzurePrivatelink resources.
type azurePrivatelinkState struct {
	// Azure Privatelink service alias
	AzureServiceAlias *string `pulumi:"azureServiceAlias"`
	// Azure Privatelink service ID
	AzureServiceId *string `pulumi:"azureServiceId"`
	// Printable result of the Azure Privatelink request
	Message *string `pulumi:"message"`
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project *string `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName *string `pulumi:"serviceName"`
	// Privatelink resource state
	State *string `pulumi:"state"`
	// A List of allowed Subscription IDs. Maximum length: `16`.
	UserSubscriptionIds []string `pulumi:"userSubscriptionIds"`
}

type AzurePrivatelinkState struct {
	// Azure Privatelink service alias
	AzureServiceAlias pulumi.StringPtrInput
	// Azure Privatelink service ID
	AzureServiceId pulumi.StringPtrInput
	// Printable result of the Azure Privatelink request
	Message pulumi.StringPtrInput
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project pulumi.StringPtrInput
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName pulumi.StringPtrInput
	// Privatelink resource state
	State pulumi.StringPtrInput
	// A List of allowed Subscription IDs. Maximum length: `16`.
	UserSubscriptionIds pulumi.StringArrayInput
}

func (AzurePrivatelinkState) ElementType() reflect.Type {
	return reflect.TypeOf((*azurePrivatelinkState)(nil)).Elem()
}

type azurePrivatelinkArgs struct {
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project string `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// A List of allowed Subscription IDs. Maximum length: `16`.
	UserSubscriptionIds []string `pulumi:"userSubscriptionIds"`
}

// The set of arguments for constructing a AzurePrivatelink resource.
type AzurePrivatelinkArgs struct {
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project pulumi.StringInput
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName pulumi.StringInput
	// A List of allowed Subscription IDs. Maximum length: `16`.
	UserSubscriptionIds pulumi.StringArrayInput
}

func (AzurePrivatelinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*azurePrivatelinkArgs)(nil)).Elem()
}

type AzurePrivatelinkInput interface {
	pulumi.Input

	ToAzurePrivatelinkOutput() AzurePrivatelinkOutput
	ToAzurePrivatelinkOutputWithContext(ctx context.Context) AzurePrivatelinkOutput
}

func (*AzurePrivatelink) ElementType() reflect.Type {
	return reflect.TypeOf((**AzurePrivatelink)(nil)).Elem()
}

func (i *AzurePrivatelink) ToAzurePrivatelinkOutput() AzurePrivatelinkOutput {
	return i.ToAzurePrivatelinkOutputWithContext(context.Background())
}

func (i *AzurePrivatelink) ToAzurePrivatelinkOutputWithContext(ctx context.Context) AzurePrivatelinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzurePrivatelinkOutput)
}

func (i *AzurePrivatelink) ToOutput(ctx context.Context) pulumix.Output[*AzurePrivatelink] {
	return pulumix.Output[*AzurePrivatelink]{
		OutputState: i.ToAzurePrivatelinkOutputWithContext(ctx).OutputState,
	}
}

// AzurePrivatelinkArrayInput is an input type that accepts AzurePrivatelinkArray and AzurePrivatelinkArrayOutput values.
// You can construct a concrete instance of `AzurePrivatelinkArrayInput` via:
//
//	AzurePrivatelinkArray{ AzurePrivatelinkArgs{...} }
type AzurePrivatelinkArrayInput interface {
	pulumi.Input

	ToAzurePrivatelinkArrayOutput() AzurePrivatelinkArrayOutput
	ToAzurePrivatelinkArrayOutputWithContext(context.Context) AzurePrivatelinkArrayOutput
}

type AzurePrivatelinkArray []AzurePrivatelinkInput

func (AzurePrivatelinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzurePrivatelink)(nil)).Elem()
}

func (i AzurePrivatelinkArray) ToAzurePrivatelinkArrayOutput() AzurePrivatelinkArrayOutput {
	return i.ToAzurePrivatelinkArrayOutputWithContext(context.Background())
}

func (i AzurePrivatelinkArray) ToAzurePrivatelinkArrayOutputWithContext(ctx context.Context) AzurePrivatelinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzurePrivatelinkArrayOutput)
}

func (i AzurePrivatelinkArray) ToOutput(ctx context.Context) pulumix.Output[[]*AzurePrivatelink] {
	return pulumix.Output[[]*AzurePrivatelink]{
		OutputState: i.ToAzurePrivatelinkArrayOutputWithContext(ctx).OutputState,
	}
}

// AzurePrivatelinkMapInput is an input type that accepts AzurePrivatelinkMap and AzurePrivatelinkMapOutput values.
// You can construct a concrete instance of `AzurePrivatelinkMapInput` via:
//
//	AzurePrivatelinkMap{ "key": AzurePrivatelinkArgs{...} }
type AzurePrivatelinkMapInput interface {
	pulumi.Input

	ToAzurePrivatelinkMapOutput() AzurePrivatelinkMapOutput
	ToAzurePrivatelinkMapOutputWithContext(context.Context) AzurePrivatelinkMapOutput
}

type AzurePrivatelinkMap map[string]AzurePrivatelinkInput

func (AzurePrivatelinkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzurePrivatelink)(nil)).Elem()
}

func (i AzurePrivatelinkMap) ToAzurePrivatelinkMapOutput() AzurePrivatelinkMapOutput {
	return i.ToAzurePrivatelinkMapOutputWithContext(context.Background())
}

func (i AzurePrivatelinkMap) ToAzurePrivatelinkMapOutputWithContext(ctx context.Context) AzurePrivatelinkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzurePrivatelinkMapOutput)
}

func (i AzurePrivatelinkMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*AzurePrivatelink] {
	return pulumix.Output[map[string]*AzurePrivatelink]{
		OutputState: i.ToAzurePrivatelinkMapOutputWithContext(ctx).OutputState,
	}
}

type AzurePrivatelinkOutput struct{ *pulumi.OutputState }

func (AzurePrivatelinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzurePrivatelink)(nil)).Elem()
}

func (o AzurePrivatelinkOutput) ToAzurePrivatelinkOutput() AzurePrivatelinkOutput {
	return o
}

func (o AzurePrivatelinkOutput) ToAzurePrivatelinkOutputWithContext(ctx context.Context) AzurePrivatelinkOutput {
	return o
}

func (o AzurePrivatelinkOutput) ToOutput(ctx context.Context) pulumix.Output[*AzurePrivatelink] {
	return pulumix.Output[*AzurePrivatelink]{
		OutputState: o.OutputState,
	}
}

// Azure Privatelink service alias
func (o AzurePrivatelinkOutput) AzureServiceAlias() pulumi.StringOutput {
	return o.ApplyT(func(v *AzurePrivatelink) pulumi.StringOutput { return v.AzureServiceAlias }).(pulumi.StringOutput)
}

// Azure Privatelink service ID
func (o AzurePrivatelinkOutput) AzureServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzurePrivatelink) pulumi.StringOutput { return v.AzureServiceId }).(pulumi.StringOutput)
}

// Printable result of the Azure Privatelink request
func (o AzurePrivatelinkOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v *AzurePrivatelink) pulumi.StringOutput { return v.Message }).(pulumi.StringOutput)
}

// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
func (o AzurePrivatelinkOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AzurePrivatelink) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
func (o AzurePrivatelinkOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *AzurePrivatelink) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// Privatelink resource state
func (o AzurePrivatelinkOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *AzurePrivatelink) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// A List of allowed Subscription IDs. Maximum length: `16`.
func (o AzurePrivatelinkOutput) UserSubscriptionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzurePrivatelink) pulumi.StringArrayOutput { return v.UserSubscriptionIds }).(pulumi.StringArrayOutput)
}

type AzurePrivatelinkArrayOutput struct{ *pulumi.OutputState }

func (AzurePrivatelinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzurePrivatelink)(nil)).Elem()
}

func (o AzurePrivatelinkArrayOutput) ToAzurePrivatelinkArrayOutput() AzurePrivatelinkArrayOutput {
	return o
}

func (o AzurePrivatelinkArrayOutput) ToAzurePrivatelinkArrayOutputWithContext(ctx context.Context) AzurePrivatelinkArrayOutput {
	return o
}

func (o AzurePrivatelinkArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*AzurePrivatelink] {
	return pulumix.Output[[]*AzurePrivatelink]{
		OutputState: o.OutputState,
	}
}

func (o AzurePrivatelinkArrayOutput) Index(i pulumi.IntInput) AzurePrivatelinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AzurePrivatelink {
		return vs[0].([]*AzurePrivatelink)[vs[1].(int)]
	}).(AzurePrivatelinkOutput)
}

type AzurePrivatelinkMapOutput struct{ *pulumi.OutputState }

func (AzurePrivatelinkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzurePrivatelink)(nil)).Elem()
}

func (o AzurePrivatelinkMapOutput) ToAzurePrivatelinkMapOutput() AzurePrivatelinkMapOutput {
	return o
}

func (o AzurePrivatelinkMapOutput) ToAzurePrivatelinkMapOutputWithContext(ctx context.Context) AzurePrivatelinkMapOutput {
	return o
}

func (o AzurePrivatelinkMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*AzurePrivatelink] {
	return pulumix.Output[map[string]*AzurePrivatelink]{
		OutputState: o.OutputState,
	}
}

func (o AzurePrivatelinkMapOutput) MapIndex(k pulumi.StringInput) AzurePrivatelinkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AzurePrivatelink {
		return vs[0].(map[string]*AzurePrivatelink)[vs[1].(string)]
	}).(AzurePrivatelinkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AzurePrivatelinkInput)(nil)).Elem(), &AzurePrivatelink{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzurePrivatelinkArrayInput)(nil)).Elem(), AzurePrivatelinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzurePrivatelinkMapInput)(nil)).Elem(), AzurePrivatelinkMap{})
	pulumi.RegisterOutputType(AzurePrivatelinkOutput{})
	pulumi.RegisterOutputType(AzurePrivatelinkArrayOutput{})
	pulumi.RegisterOutputType(AzurePrivatelinkMapOutput{})
}
