// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Opensearch ACL Rule data source provides information about an existing Aiven Opensearch ACL Rule.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v5/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aiven.LookupOpenSearchAclRule(ctx, &GetOpenSearchAclRuleArgs{
// 			Project:     aiven_opensearch_acl_config.Os_acls_config.Project,
// 			ServiceName: aiven_opensearch_acl_config.Os_acls_config.Service_name,
// 			Username:    "<USERNAME>",
// 			Index:       "<INDEX>",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupOpenSearchAclRule(ctx *pulumi.Context, args *LookupOpenSearchAclRuleArgs, opts ...pulumi.InvokeOption) (*LookupOpenSearchAclRuleResult, error) {
	var rv LookupOpenSearchAclRuleResult
	err := ctx.Invoke("aiven:index/getOpenSearchAclRule:getOpenSearchAclRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOpenSearchAclRule.
type LookupOpenSearchAclRuleArgs struct {
	Index       string `pulumi:"index"`
	Permission  string `pulumi:"permission"`
	Project     string `pulumi:"project"`
	ServiceName string `pulumi:"serviceName"`
	Username    string `pulumi:"username"`
}

// A collection of values returned by getOpenSearchAclRule.
type LookupOpenSearchAclRuleResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id          string `pulumi:"id"`
	Index       string `pulumi:"index"`
	Permission  string `pulumi:"permission"`
	Project     string `pulumi:"project"`
	ServiceName string `pulumi:"serviceName"`
	Username    string `pulumi:"username"`
}

func LookupOpenSearchAclRuleOutput(ctx *pulumi.Context, args LookupOpenSearchAclRuleOutputArgs, opts ...pulumi.InvokeOption) LookupOpenSearchAclRuleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupOpenSearchAclRuleResult, error) {
			args := v.(LookupOpenSearchAclRuleArgs)
			r, err := LookupOpenSearchAclRule(ctx, &args, opts...)
			var s LookupOpenSearchAclRuleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupOpenSearchAclRuleResultOutput)
}

// A collection of arguments for invoking getOpenSearchAclRule.
type LookupOpenSearchAclRuleOutputArgs struct {
	Index       pulumi.StringInput `pulumi:"index"`
	Permission  pulumi.StringInput `pulumi:"permission"`
	Project     pulumi.StringInput `pulumi:"project"`
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	Username    pulumi.StringInput `pulumi:"username"`
}

func (LookupOpenSearchAclRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOpenSearchAclRuleArgs)(nil)).Elem()
}

// A collection of values returned by getOpenSearchAclRule.
type LookupOpenSearchAclRuleResultOutput struct{ *pulumi.OutputState }

func (LookupOpenSearchAclRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOpenSearchAclRuleResult)(nil)).Elem()
}

func (o LookupOpenSearchAclRuleResultOutput) ToLookupOpenSearchAclRuleResultOutput() LookupOpenSearchAclRuleResultOutput {
	return o
}

func (o LookupOpenSearchAclRuleResultOutput) ToLookupOpenSearchAclRuleResultOutputWithContext(ctx context.Context) LookupOpenSearchAclRuleResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupOpenSearchAclRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchAclRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupOpenSearchAclRuleResultOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchAclRuleResult) string { return v.Index }).(pulumi.StringOutput)
}

func (o LookupOpenSearchAclRuleResultOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchAclRuleResult) string { return v.Permission }).(pulumi.StringOutput)
}

func (o LookupOpenSearchAclRuleResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchAclRuleResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupOpenSearchAclRuleResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchAclRuleResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o LookupOpenSearchAclRuleResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchAclRuleResult) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOpenSearchAclRuleResultOutput{})
}
