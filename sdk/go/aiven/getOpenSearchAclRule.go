// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets information about an Aiven for OpenSearchÂ® ACL rule.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aiven.LookupOpenSearchAclRule(ctx, &aiven.LookupOpenSearchAclRuleArgs{
//				Project:     exampleProject.Project,
//				ServiceName: exampleOpensearch.ServiceName,
//				Username:    "documentation-user-1",
//				Index:       "index5",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupOpenSearchAclRule(ctx *pulumi.Context, args *LookupOpenSearchAclRuleArgs, opts ...pulumi.InvokeOption) (*LookupOpenSearchAclRuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupOpenSearchAclRuleResult
	err := ctx.Invoke("aiven:index/getOpenSearchAclRule:getOpenSearchAclRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOpenSearchAclRule.
type LookupOpenSearchAclRuleArgs struct {
	// The index pattern for this ACL rule. Maximum length: `249`. Changing this property forces recreation of the resource.
	Index string `pulumi:"index"`
	// The permissions for this ACL rule. The possible values are `admin`, `deny`, `read`, `readwrite` and `write`.
	Permission string `pulumi:"permission"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// The username for the OpenSearch user this ACL rule applies to. Maximum length: `40`. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Username string `pulumi:"username"`
}

// A collection of values returned by getOpenSearchAclRule.
type LookupOpenSearchAclRuleResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The index pattern for this ACL rule. Maximum length: `249`. Changing this property forces recreation of the resource.
	Index string `pulumi:"index"`
	// The permissions for this ACL rule. The possible values are `admin`, `deny`, `read`, `readwrite` and `write`.
	Permission string `pulumi:"permission"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// The username for the OpenSearch user this ACL rule applies to. Maximum length: `40`. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Username string `pulumi:"username"`
}

func LookupOpenSearchAclRuleOutput(ctx *pulumi.Context, args LookupOpenSearchAclRuleOutputArgs, opts ...pulumi.InvokeOption) LookupOpenSearchAclRuleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupOpenSearchAclRuleResultOutput, error) {
			args := v.(LookupOpenSearchAclRuleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aiven:index/getOpenSearchAclRule:getOpenSearchAclRule", args, LookupOpenSearchAclRuleResultOutput{}, options).(LookupOpenSearchAclRuleResultOutput), nil
		}).(LookupOpenSearchAclRuleResultOutput)
}

// A collection of arguments for invoking getOpenSearchAclRule.
type LookupOpenSearchAclRuleOutputArgs struct {
	// The index pattern for this ACL rule. Maximum length: `249`. Changing this property forces recreation of the resource.
	Index pulumi.StringInput `pulumi:"index"`
	// The permissions for this ACL rule. The possible values are `admin`, `deny`, `read`, `readwrite` and `write`.
	Permission pulumi.StringInput `pulumi:"permission"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringInput `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// The username for the OpenSearch user this ACL rule applies to. Maximum length: `40`. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Username pulumi.StringInput `pulumi:"username"`
}

func (LookupOpenSearchAclRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOpenSearchAclRuleArgs)(nil)).Elem()
}

// A collection of values returned by getOpenSearchAclRule.
type LookupOpenSearchAclRuleResultOutput struct{ *pulumi.OutputState }

func (LookupOpenSearchAclRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOpenSearchAclRuleResult)(nil)).Elem()
}

func (o LookupOpenSearchAclRuleResultOutput) ToLookupOpenSearchAclRuleResultOutput() LookupOpenSearchAclRuleResultOutput {
	return o
}

func (o LookupOpenSearchAclRuleResultOutput) ToLookupOpenSearchAclRuleResultOutputWithContext(ctx context.Context) LookupOpenSearchAclRuleResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupOpenSearchAclRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchAclRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

// The index pattern for this ACL rule. Maximum length: `249`. Changing this property forces recreation of the resource.
func (o LookupOpenSearchAclRuleResultOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchAclRuleResult) string { return v.Index }).(pulumi.StringOutput)
}

// The permissions for this ACL rule. The possible values are `admin`, `deny`, `read`, `readwrite` and `write`.
func (o LookupOpenSearchAclRuleResultOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchAclRuleResult) string { return v.Permission }).(pulumi.StringOutput)
}

// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o LookupOpenSearchAclRuleResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchAclRuleResult) string { return v.Project }).(pulumi.StringOutput)
}

// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o LookupOpenSearchAclRuleResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchAclRuleResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// The username for the OpenSearch user this ACL rule applies to. Maximum length: `40`. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o LookupOpenSearchAclRuleResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenSearchAclRuleResult) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOpenSearchAclRuleResultOutput{})
}
