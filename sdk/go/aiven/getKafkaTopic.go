// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Kafka Topic Data Source
//
// The Kafka Topic data source provides information about the existing Aiven Kafka Topic.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aiven/sdk/v4/go/aiven"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := 3
// 		opt1 := 1
// 		_, err := aiven.LookupKafkaTopic(ctx, &aiven.LookupKafkaTopicArgs{
// 			Project:     aiven_project.Myproject.Project,
// 			ServiceName: aiven_service.Myservice.Service_name,
// 			TopicName:   "<TOPIC_NAME>",
// 			Partitions:  &opt0,
// 			Replication: &opt1,
// 			Config: aiven.GetKafkaTopicConfig{
// 				FlushMs:                     "10",
// 				UncleanLeaderElectionEnable: "true",
// 				CleanupPolicy:               "compact",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupKafkaTopic(ctx *pulumi.Context, args *LookupKafkaTopicArgs, opts ...pulumi.InvokeOption) (*LookupKafkaTopicResult, error) {
	var rv LookupKafkaTopicResult
	err := ctx.Invoke("aiven:index/getKafkaTopic:getKafkaTopic", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKafkaTopic.
type LookupKafkaTopicArgs struct {
	// cleanup.policy value, can be `create`, `delete` or `compact,delete`
	CleanupPolicy *string `pulumi:"cleanupPolicy"`
	// Kafka topic configuration
	Config *GetKafkaTopicConfig `pulumi:"config"`
	// Minimum required nodes in-sync replicas (ISR) to produce to a partition.
	MinimumInSyncReplicas *int `pulumi:"minimumInSyncReplicas"`
	// Number of partitions to create in the topic.
	Partitions *int `pulumi:"partitions"`
	// and `serviceName` - (Required) define the project and service the topic belongs to.
	// They should be defined using reference as shown above to set up dependencies correctly.
	// These properties cannot be changed once the service is created. Doing so will result in
	// the topic being deleted and new one created instead.
	Project string `pulumi:"project"`
	// Replication factor for the topic.
	Replication *int `pulumi:"replication"`
	// retention.bytes value
	RetentionBytes *int `pulumi:"retentionBytes"`
	// Retention period in hours, if -1 it is infinite.
	RetentionHours        *int               `pulumi:"retentionHours"`
	ServiceName           string             `pulumi:"serviceName"`
	Tags                  []GetKafkaTopicTag `pulumi:"tags"`
	TerminationProtection *bool              `pulumi:"terminationProtection"`
	// is the actual name of the topic account. This propery cannot be changed
	// once the service is created. Doing so will result in the topic being deleted and new one
	// created instead.
	TopicName string `pulumi:"topicName"`
}

// A collection of values returned by getKafkaTopic.
type LookupKafkaTopicResult struct {
	// cleanup.policy value, can be `create`, `delete` or `compact,delete`
	CleanupPolicy *string `pulumi:"cleanupPolicy"`
	// Kafka topic configuration
	Config *GetKafkaTopicConfig `pulumi:"config"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Minimum required nodes in-sync replicas (ISR) to produce to a partition.
	MinimumInSyncReplicas *int `pulumi:"minimumInSyncReplicas"`
	// Number of partitions to create in the topic.
	Partitions *int   `pulumi:"partitions"`
	Project    string `pulumi:"project"`
	// Replication factor for the topic.
	Replication *int `pulumi:"replication"`
	// retention.bytes value
	RetentionBytes *int `pulumi:"retentionBytes"`
	// Retention period in hours, if -1 it is infinite.
	RetentionHours        *int               `pulumi:"retentionHours"`
	ServiceName           string             `pulumi:"serviceName"`
	Tags                  []GetKafkaTopicTag `pulumi:"tags"`
	TerminationProtection *bool              `pulumi:"terminationProtection"`
	TopicName             string             `pulumi:"topicName"`
}
