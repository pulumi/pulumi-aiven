// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Approves a Google Private Service Connect connection to an Aiven service with an associated endpoint IP.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aiven.NewGcpPrivatelinkConnectionApproval(ctx, "approve", &aiven.GcpPrivatelinkConnectionApprovalArgs{
//				Project:       pulumi.Any(exampleProject.Project),
//				ServiceName:   pulumi.Any(exampleKafka.ServiceName),
//				UserIpAddress: pulumi.String("10.0.0.100"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import aiven:index/gcpPrivatelinkConnectionApproval:GcpPrivatelinkConnectionApproval main PROJECT/SERVICE_NAME
// ```
type GcpPrivatelinkConnectionApproval struct {
	pulumi.CustomResourceState

	// Aiven internal ID for the private link connection.
	PrivatelinkConnectionId pulumi.StringOutput `pulumi:"privatelinkConnectionId"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringOutput `pulumi:"project"`
	// The Google Private Service Connect connection ID.
	PscConnectionId pulumi.StringOutput `pulumi:"pscConnectionId"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// The state of the connection.
	State pulumi.StringOutput `pulumi:"state"`
	// The Private Service Connect connection user IP address.
	UserIpAddress pulumi.StringOutput `pulumi:"userIpAddress"`
}

// NewGcpPrivatelinkConnectionApproval registers a new resource with the given unique name, arguments, and options.
func NewGcpPrivatelinkConnectionApproval(ctx *pulumi.Context,
	name string, args *GcpPrivatelinkConnectionApprovalArgs, opts ...pulumi.ResourceOption) (*GcpPrivatelinkConnectionApproval, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.UserIpAddress == nil {
		return nil, errors.New("invalid value for required argument 'UserIpAddress'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GcpPrivatelinkConnectionApproval
	err := ctx.RegisterResource("aiven:index/gcpPrivatelinkConnectionApproval:GcpPrivatelinkConnectionApproval", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGcpPrivatelinkConnectionApproval gets an existing GcpPrivatelinkConnectionApproval resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGcpPrivatelinkConnectionApproval(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GcpPrivatelinkConnectionApprovalState, opts ...pulumi.ResourceOption) (*GcpPrivatelinkConnectionApproval, error) {
	var resource GcpPrivatelinkConnectionApproval
	err := ctx.ReadResource("aiven:index/gcpPrivatelinkConnectionApproval:GcpPrivatelinkConnectionApproval", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GcpPrivatelinkConnectionApproval resources.
type gcpPrivatelinkConnectionApprovalState struct {
	// Aiven internal ID for the private link connection.
	PrivatelinkConnectionId *string `pulumi:"privatelinkConnectionId"`
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project *string `pulumi:"project"`
	// The Google Private Service Connect connection ID.
	PscConnectionId *string `pulumi:"pscConnectionId"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName *string `pulumi:"serviceName"`
	// The state of the connection.
	State *string `pulumi:"state"`
	// The Private Service Connect connection user IP address.
	UserIpAddress *string `pulumi:"userIpAddress"`
}

type GcpPrivatelinkConnectionApprovalState struct {
	// Aiven internal ID for the private link connection.
	PrivatelinkConnectionId pulumi.StringPtrInput
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringPtrInput
	// The Google Private Service Connect connection ID.
	PscConnectionId pulumi.StringPtrInput
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringPtrInput
	// The state of the connection.
	State pulumi.StringPtrInput
	// The Private Service Connect connection user IP address.
	UserIpAddress pulumi.StringPtrInput
}

func (GcpPrivatelinkConnectionApprovalState) ElementType() reflect.Type {
	return reflect.TypeOf((*gcpPrivatelinkConnectionApprovalState)(nil)).Elem()
}

type gcpPrivatelinkConnectionApprovalArgs struct {
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project string `pulumi:"project"`
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// The Private Service Connect connection user IP address.
	UserIpAddress string `pulumi:"userIpAddress"`
}

// The set of arguments for constructing a GcpPrivatelinkConnectionApproval resource.
type GcpPrivatelinkConnectionApprovalArgs struct {
	// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	Project pulumi.StringInput
	// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
	ServiceName pulumi.StringInput
	// The Private Service Connect connection user IP address.
	UserIpAddress pulumi.StringInput
}

func (GcpPrivatelinkConnectionApprovalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gcpPrivatelinkConnectionApprovalArgs)(nil)).Elem()
}

type GcpPrivatelinkConnectionApprovalInput interface {
	pulumi.Input

	ToGcpPrivatelinkConnectionApprovalOutput() GcpPrivatelinkConnectionApprovalOutput
	ToGcpPrivatelinkConnectionApprovalOutputWithContext(ctx context.Context) GcpPrivatelinkConnectionApprovalOutput
}

func (*GcpPrivatelinkConnectionApproval) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpPrivatelinkConnectionApproval)(nil)).Elem()
}

func (i *GcpPrivatelinkConnectionApproval) ToGcpPrivatelinkConnectionApprovalOutput() GcpPrivatelinkConnectionApprovalOutput {
	return i.ToGcpPrivatelinkConnectionApprovalOutputWithContext(context.Background())
}

func (i *GcpPrivatelinkConnectionApproval) ToGcpPrivatelinkConnectionApprovalOutputWithContext(ctx context.Context) GcpPrivatelinkConnectionApprovalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpPrivatelinkConnectionApprovalOutput)
}

// GcpPrivatelinkConnectionApprovalArrayInput is an input type that accepts GcpPrivatelinkConnectionApprovalArray and GcpPrivatelinkConnectionApprovalArrayOutput values.
// You can construct a concrete instance of `GcpPrivatelinkConnectionApprovalArrayInput` via:
//
//	GcpPrivatelinkConnectionApprovalArray{ GcpPrivatelinkConnectionApprovalArgs{...} }
type GcpPrivatelinkConnectionApprovalArrayInput interface {
	pulumi.Input

	ToGcpPrivatelinkConnectionApprovalArrayOutput() GcpPrivatelinkConnectionApprovalArrayOutput
	ToGcpPrivatelinkConnectionApprovalArrayOutputWithContext(context.Context) GcpPrivatelinkConnectionApprovalArrayOutput
}

type GcpPrivatelinkConnectionApprovalArray []GcpPrivatelinkConnectionApprovalInput

func (GcpPrivatelinkConnectionApprovalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GcpPrivatelinkConnectionApproval)(nil)).Elem()
}

func (i GcpPrivatelinkConnectionApprovalArray) ToGcpPrivatelinkConnectionApprovalArrayOutput() GcpPrivatelinkConnectionApprovalArrayOutput {
	return i.ToGcpPrivatelinkConnectionApprovalArrayOutputWithContext(context.Background())
}

func (i GcpPrivatelinkConnectionApprovalArray) ToGcpPrivatelinkConnectionApprovalArrayOutputWithContext(ctx context.Context) GcpPrivatelinkConnectionApprovalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpPrivatelinkConnectionApprovalArrayOutput)
}

// GcpPrivatelinkConnectionApprovalMapInput is an input type that accepts GcpPrivatelinkConnectionApprovalMap and GcpPrivatelinkConnectionApprovalMapOutput values.
// You can construct a concrete instance of `GcpPrivatelinkConnectionApprovalMapInput` via:
//
//	GcpPrivatelinkConnectionApprovalMap{ "key": GcpPrivatelinkConnectionApprovalArgs{...} }
type GcpPrivatelinkConnectionApprovalMapInput interface {
	pulumi.Input

	ToGcpPrivatelinkConnectionApprovalMapOutput() GcpPrivatelinkConnectionApprovalMapOutput
	ToGcpPrivatelinkConnectionApprovalMapOutputWithContext(context.Context) GcpPrivatelinkConnectionApprovalMapOutput
}

type GcpPrivatelinkConnectionApprovalMap map[string]GcpPrivatelinkConnectionApprovalInput

func (GcpPrivatelinkConnectionApprovalMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GcpPrivatelinkConnectionApproval)(nil)).Elem()
}

func (i GcpPrivatelinkConnectionApprovalMap) ToGcpPrivatelinkConnectionApprovalMapOutput() GcpPrivatelinkConnectionApprovalMapOutput {
	return i.ToGcpPrivatelinkConnectionApprovalMapOutputWithContext(context.Background())
}

func (i GcpPrivatelinkConnectionApprovalMap) ToGcpPrivatelinkConnectionApprovalMapOutputWithContext(ctx context.Context) GcpPrivatelinkConnectionApprovalMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpPrivatelinkConnectionApprovalMapOutput)
}

type GcpPrivatelinkConnectionApprovalOutput struct{ *pulumi.OutputState }

func (GcpPrivatelinkConnectionApprovalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpPrivatelinkConnectionApproval)(nil)).Elem()
}

func (o GcpPrivatelinkConnectionApprovalOutput) ToGcpPrivatelinkConnectionApprovalOutput() GcpPrivatelinkConnectionApprovalOutput {
	return o
}

func (o GcpPrivatelinkConnectionApprovalOutput) ToGcpPrivatelinkConnectionApprovalOutputWithContext(ctx context.Context) GcpPrivatelinkConnectionApprovalOutput {
	return o
}

// Aiven internal ID for the private link connection.
func (o GcpPrivatelinkConnectionApprovalOutput) PrivatelinkConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpPrivatelinkConnectionApproval) pulumi.StringOutput { return v.PrivatelinkConnectionId }).(pulumi.StringOutput)
}

// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o GcpPrivatelinkConnectionApprovalOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpPrivatelinkConnectionApproval) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The Google Private Service Connect connection ID.
func (o GcpPrivatelinkConnectionApprovalOutput) PscConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpPrivatelinkConnectionApproval) pulumi.StringOutput { return v.PscConnectionId }).(pulumi.StringOutput)
}

// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
func (o GcpPrivatelinkConnectionApprovalOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpPrivatelinkConnectionApproval) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// The state of the connection.
func (o GcpPrivatelinkConnectionApprovalOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpPrivatelinkConnectionApproval) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The Private Service Connect connection user IP address.
func (o GcpPrivatelinkConnectionApprovalOutput) UserIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpPrivatelinkConnectionApproval) pulumi.StringOutput { return v.UserIpAddress }).(pulumi.StringOutput)
}

type GcpPrivatelinkConnectionApprovalArrayOutput struct{ *pulumi.OutputState }

func (GcpPrivatelinkConnectionApprovalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GcpPrivatelinkConnectionApproval)(nil)).Elem()
}

func (o GcpPrivatelinkConnectionApprovalArrayOutput) ToGcpPrivatelinkConnectionApprovalArrayOutput() GcpPrivatelinkConnectionApprovalArrayOutput {
	return o
}

func (o GcpPrivatelinkConnectionApprovalArrayOutput) ToGcpPrivatelinkConnectionApprovalArrayOutputWithContext(ctx context.Context) GcpPrivatelinkConnectionApprovalArrayOutput {
	return o
}

func (o GcpPrivatelinkConnectionApprovalArrayOutput) Index(i pulumi.IntInput) GcpPrivatelinkConnectionApprovalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GcpPrivatelinkConnectionApproval {
		return vs[0].([]*GcpPrivatelinkConnectionApproval)[vs[1].(int)]
	}).(GcpPrivatelinkConnectionApprovalOutput)
}

type GcpPrivatelinkConnectionApprovalMapOutput struct{ *pulumi.OutputState }

func (GcpPrivatelinkConnectionApprovalMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GcpPrivatelinkConnectionApproval)(nil)).Elem()
}

func (o GcpPrivatelinkConnectionApprovalMapOutput) ToGcpPrivatelinkConnectionApprovalMapOutput() GcpPrivatelinkConnectionApprovalMapOutput {
	return o
}

func (o GcpPrivatelinkConnectionApprovalMapOutput) ToGcpPrivatelinkConnectionApprovalMapOutputWithContext(ctx context.Context) GcpPrivatelinkConnectionApprovalMapOutput {
	return o
}

func (o GcpPrivatelinkConnectionApprovalMapOutput) MapIndex(k pulumi.StringInput) GcpPrivatelinkConnectionApprovalOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GcpPrivatelinkConnectionApproval {
		return vs[0].(map[string]*GcpPrivatelinkConnectionApproval)[vs[1].(string)]
	}).(GcpPrivatelinkConnectionApprovalOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GcpPrivatelinkConnectionApprovalInput)(nil)).Elem(), &GcpPrivatelinkConnectionApproval{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpPrivatelinkConnectionApprovalArrayInput)(nil)).Elem(), GcpPrivatelinkConnectionApprovalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpPrivatelinkConnectionApprovalMapInput)(nil)).Elem(), GcpPrivatelinkConnectionApprovalMap{})
	pulumi.RegisterOutputType(GcpPrivatelinkConnectionApprovalOutput{})
	pulumi.RegisterOutputType(GcpPrivatelinkConnectionApprovalArrayOutput{})
	pulumi.RegisterOutputType(GcpPrivatelinkConnectionApprovalMapOutput{})
}
