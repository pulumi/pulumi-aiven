// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Account Team Member data source provides information about the existing Aiven Account Team Member.
//
// !> **Teams have been deprecated and are being migrated to groups**
// **On 30 September 2024** the Account Owners team will transition to super admin. Super admin have full access to the organization.
// The Account Owners and super admin are synced, so the removal of the Account Owners team will have no impact on existing permissions.
// **From 4 November 2024** you won't be able to create new teams or update existing ones. Existing teams will be migrated to groups after
// this date. **On 2 December 2024** all teams will be deleted and the teams feature will be completely removed. View the
// migration guide for more information on the changes and migrating to groups.
//
// > **Important**
// You can't delete the Account Owners team. **Deleting all other teams in your organization will disable the teams feature.**
// You won't be able to create new teams or access your Account Owners team.
func LookupAccountTeamMember(ctx *pulumi.Context, args *LookupAccountTeamMemberArgs, opts ...pulumi.InvokeOption) (*LookupAccountTeamMemberResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAccountTeamMemberResult
	err := ctx.Invoke("aiven:index/getAccountTeamMember:getAccountTeamMember", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAccountTeamMember.
type LookupAccountTeamMemberArgs struct {
	// The unique account id. Changing this property forces recreation of the resource.
	AccountId string `pulumi:"accountId"`
	// An account team id. Changing this property forces recreation of the resource.
	TeamId string `pulumi:"teamId"`
	// Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. Should be lowercase. Changing this property forces recreation of the resource.
	UserEmail string `pulumi:"userEmail"`
}

// A collection of values returned by getAccountTeamMember.
type LookupAccountTeamMemberResult struct {
	// is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an account team.
	Accepted bool `pulumi:"accepted"`
	// The unique account id. Changing this property forces recreation of the resource.
	AccountId string `pulumi:"accountId"`
	// Time of creation
	CreateTime string `pulumi:"createTime"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The email address that invited this user.
	InvitedByUserEmail string `pulumi:"invitedByUserEmail"`
	// An account team id. Changing this property forces recreation of the resource.
	TeamId string `pulumi:"teamId"`
	// Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. Should be lowercase. Changing this property forces recreation of the resource.
	UserEmail string `pulumi:"userEmail"`
}

func LookupAccountTeamMemberOutput(ctx *pulumi.Context, args LookupAccountTeamMemberOutputArgs, opts ...pulumi.InvokeOption) LookupAccountTeamMemberResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAccountTeamMemberResultOutput, error) {
			args := v.(LookupAccountTeamMemberArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aiven:index/getAccountTeamMember:getAccountTeamMember", args, LookupAccountTeamMemberResultOutput{}, options).(LookupAccountTeamMemberResultOutput), nil
		}).(LookupAccountTeamMemberResultOutput)
}

// A collection of arguments for invoking getAccountTeamMember.
type LookupAccountTeamMemberOutputArgs struct {
	// The unique account id. Changing this property forces recreation of the resource.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// An account team id. Changing this property forces recreation of the resource.
	TeamId pulumi.StringInput `pulumi:"teamId"`
	// Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. Should be lowercase. Changing this property forces recreation of the resource.
	UserEmail pulumi.StringInput `pulumi:"userEmail"`
}

func (LookupAccountTeamMemberOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountTeamMemberArgs)(nil)).Elem()
}

// A collection of values returned by getAccountTeamMember.
type LookupAccountTeamMemberResultOutput struct{ *pulumi.OutputState }

func (LookupAccountTeamMemberResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountTeamMemberResult)(nil)).Elem()
}

func (o LookupAccountTeamMemberResultOutput) ToLookupAccountTeamMemberResultOutput() LookupAccountTeamMemberResultOutput {
	return o
}

func (o LookupAccountTeamMemberResultOutput) ToLookupAccountTeamMemberResultOutputWithContext(ctx context.Context) LookupAccountTeamMemberResultOutput {
	return o
}

// is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an account team.
func (o LookupAccountTeamMemberResultOutput) Accepted() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAccountTeamMemberResult) bool { return v.Accepted }).(pulumi.BoolOutput)
}

// The unique account id. Changing this property forces recreation of the resource.
func (o LookupAccountTeamMemberResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountTeamMemberResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Time of creation
func (o LookupAccountTeamMemberResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountTeamMemberResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAccountTeamMemberResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountTeamMemberResult) string { return v.Id }).(pulumi.StringOutput)
}

// The email address that invited this user.
func (o LookupAccountTeamMemberResultOutput) InvitedByUserEmail() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountTeamMemberResult) string { return v.InvitedByUserEmail }).(pulumi.StringOutput)
}

// An account team id. Changing this property forces recreation of the resource.
func (o LookupAccountTeamMemberResultOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountTeamMemberResult) string { return v.TeamId }).(pulumi.StringOutput)
}

// Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. Should be lowercase. Changing this property forces recreation of the resource.
func (o LookupAccountTeamMemberResultOutput) UserEmail() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountTeamMemberResult) string { return v.UserEmail }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAccountTeamMemberResultOutput{})
}
