// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Account Team Member Data Source
//
// The Account Team Member data source provides information about the existing Aiven Account Team Member.
func LookupAccountTeamMember(ctx *pulumi.Context, args *LookupAccountTeamMemberArgs, opts ...pulumi.InvokeOption) (*LookupAccountTeamMemberResult, error) {
	var rv LookupAccountTeamMemberResult
	err := ctx.Invoke("aiven:index/getAccountTeamMember:getAccountTeamMember", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAccountTeamMember.
type LookupAccountTeamMemberArgs struct {
	// is a boolean flag that determines whether an invitation was accepted or not by the user.
	// `false` value means that the invitation was sent to the user but not yet accepted.
	// `true` means that the user accepted the invitation and is now a member of an account team.
	Accepted *bool `pulumi:"accepted"`
	// is a unique account id.
	AccountId string `pulumi:"accountId"`
	// time of creation.
	CreateTime *string `pulumi:"createTime"`
	// team invited by user email.
	InvitedByUserEmail *string `pulumi:"invitedByUserEmail"`
	// is an account team id.
	TeamId string `pulumi:"teamId"`
	// is a user email address that first will be invited, and after accepting an invitation,
	// he or she becomes a member of a team.
	UserEmail string `pulumi:"userEmail"`
}

// A collection of values returned by getAccountTeamMember.
type LookupAccountTeamMemberResult struct {
	// is a boolean flag that determines whether an invitation was accepted or not by the user.
	// `false` value means that the invitation was sent to the user but not yet accepted.
	// `true` means that the user accepted the invitation and is now a member of an account team.
	Accepted  bool   `pulumi:"accepted"`
	AccountId string `pulumi:"accountId"`
	// time of creation.
	CreateTime string `pulumi:"createTime"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// team invited by user email.
	InvitedByUserEmail string `pulumi:"invitedByUserEmail"`
	TeamId             string `pulumi:"teamId"`
	UserEmail          string `pulumi:"userEmail"`
}

func LookupAccountTeamMemberOutput(ctx *pulumi.Context, args LookupAccountTeamMemberOutputArgs, opts ...pulumi.InvokeOption) LookupAccountTeamMemberResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAccountTeamMemberResult, error) {
			args := v.(LookupAccountTeamMemberArgs)
			r, err := LookupAccountTeamMember(ctx, &args, opts...)
			return *r, err
		}).(LookupAccountTeamMemberResultOutput)
}

// A collection of arguments for invoking getAccountTeamMember.
type LookupAccountTeamMemberOutputArgs struct {
	// is a boolean flag that determines whether an invitation was accepted or not by the user.
	// `false` value means that the invitation was sent to the user but not yet accepted.
	// `true` means that the user accepted the invitation and is now a member of an account team.
	Accepted pulumi.BoolPtrInput `pulumi:"accepted"`
	// is a unique account id.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// time of creation.
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// team invited by user email.
	InvitedByUserEmail pulumi.StringPtrInput `pulumi:"invitedByUserEmail"`
	// is an account team id.
	TeamId pulumi.StringInput `pulumi:"teamId"`
	// is a user email address that first will be invited, and after accepting an invitation,
	// he or she becomes a member of a team.
	UserEmail pulumi.StringInput `pulumi:"userEmail"`
}

func (LookupAccountTeamMemberOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountTeamMemberArgs)(nil)).Elem()
}

// A collection of values returned by getAccountTeamMember.
type LookupAccountTeamMemberResultOutput struct{ *pulumi.OutputState }

func (LookupAccountTeamMemberResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountTeamMemberResult)(nil)).Elem()
}

func (o LookupAccountTeamMemberResultOutput) ToLookupAccountTeamMemberResultOutput() LookupAccountTeamMemberResultOutput {
	return o
}

func (o LookupAccountTeamMemberResultOutput) ToLookupAccountTeamMemberResultOutputWithContext(ctx context.Context) LookupAccountTeamMemberResultOutput {
	return o
}

// is a boolean flag that determines whether an invitation was accepted or not by the user.
// `false` value means that the invitation was sent to the user but not yet accepted.
// `true` means that the user accepted the invitation and is now a member of an account team.
func (o LookupAccountTeamMemberResultOutput) Accepted() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAccountTeamMemberResult) bool { return v.Accepted }).(pulumi.BoolOutput)
}

func (o LookupAccountTeamMemberResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountTeamMemberResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// time of creation.
func (o LookupAccountTeamMemberResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountTeamMemberResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAccountTeamMemberResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountTeamMemberResult) string { return v.Id }).(pulumi.StringOutput)
}

// team invited by user email.
func (o LookupAccountTeamMemberResultOutput) InvitedByUserEmail() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountTeamMemberResult) string { return v.InvitedByUserEmail }).(pulumi.StringOutput)
}

func (o LookupAccountTeamMemberResultOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountTeamMemberResult) string { return v.TeamId }).(pulumi.StringOutput)
}

func (o LookupAccountTeamMemberResultOutput) UserEmail() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountTeamMemberResult) string { return v.UserEmail }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAccountTeamMemberResultOutput{})
}
