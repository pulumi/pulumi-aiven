// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates and manages an Azure VPC peering connection with an Aiven VPC.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleVpc, err := aiven.NewProjectVpc(ctx, "example_vpc", &aiven.ProjectVpcArgs{
//				Project:     pulumi.Any(exampleProject.Project),
//				CloudName:   pulumi.String("google-europe-west1"),
//				NetworkCidr: pulumi.String("192.168.1.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = aiven.NewAzureVpcPeeringConnection(ctx, "azure_to_aiven_peering", &aiven.AzureVpcPeeringConnectionArgs{
//				VpcId:               exampleVpc.ID(),
//				AzureSubscriptionId: pulumi.String("00000000-0000-0000-0000-000000000000"),
//				PeerResourceGroup:   pulumi.String("example-resource-group"),
//				VnetName:            pulumi.String("example-vnet"),
//				PeerAzureAppId:      pulumi.String("00000000-0000-0000-0000-000000000000"),
//				PeerAzureTenantId:   pulumi.String("00000000-0000-0000-0000-000000000000"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import aiven:index/azureVpcPeeringConnection:AzureVpcPeeringConnection azure_to_aiven_peering PROJECT/VPC_ID/AZURE_SUBSCRIPTION_ID/VNET_NAME
// ```
type AzureVpcPeeringConnection struct {
	pulumi.CustomResourceState

	// The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.
	AzureSubscriptionId pulumi.StringOutput `pulumi:"azureSubscriptionId"`
	// The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.
	PeerAzureAppId pulumi.StringOutput `pulumi:"peerAzureAppId"`
	// The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.
	PeerAzureTenantId pulumi.StringOutput `pulumi:"peerAzureTenantId"`
	// The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.
	PeerResourceGroup pulumi.StringOutput `pulumi:"peerResourceGroup"`
	// The ID of the cloud provider for the peering connection.
	PeeringConnectionId pulumi.StringOutput `pulumi:"peeringConnectionId"`
	// State of the peering connection
	State pulumi.StringOutput `pulumi:"state"`
	// State-specific help or error information.
	StateInfo pulumi.StringMapOutput `pulumi:"stateInfo"`
	// The name of the Azure VNet. Changing this property forces recreation of the resource.
	VnetName pulumi.StringOutput `pulumi:"vnetName"`
	// The ID of the Aiven VPC. Changing this property forces recreation of the resource.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewAzureVpcPeeringConnection registers a new resource with the given unique name, arguments, and options.
func NewAzureVpcPeeringConnection(ctx *pulumi.Context,
	name string, args *AzureVpcPeeringConnectionArgs, opts ...pulumi.ResourceOption) (*AzureVpcPeeringConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AzureSubscriptionId == nil {
		return nil, errors.New("invalid value for required argument 'AzureSubscriptionId'")
	}
	if args.PeerAzureAppId == nil {
		return nil, errors.New("invalid value for required argument 'PeerAzureAppId'")
	}
	if args.PeerAzureTenantId == nil {
		return nil, errors.New("invalid value for required argument 'PeerAzureTenantId'")
	}
	if args.PeerResourceGroup == nil {
		return nil, errors.New("invalid value for required argument 'PeerResourceGroup'")
	}
	if args.VnetName == nil {
		return nil, errors.New("invalid value for required argument 'VnetName'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AzureVpcPeeringConnection
	err := ctx.RegisterResource("aiven:index/azureVpcPeeringConnection:AzureVpcPeeringConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAzureVpcPeeringConnection gets an existing AzureVpcPeeringConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAzureVpcPeeringConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AzureVpcPeeringConnectionState, opts ...pulumi.ResourceOption) (*AzureVpcPeeringConnection, error) {
	var resource AzureVpcPeeringConnection
	err := ctx.ReadResource("aiven:index/azureVpcPeeringConnection:AzureVpcPeeringConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AzureVpcPeeringConnection resources.
type azureVpcPeeringConnectionState struct {
	// The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.
	AzureSubscriptionId *string `pulumi:"azureSubscriptionId"`
	// The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.
	PeerAzureAppId *string `pulumi:"peerAzureAppId"`
	// The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.
	PeerAzureTenantId *string `pulumi:"peerAzureTenantId"`
	// The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.
	PeerResourceGroup *string `pulumi:"peerResourceGroup"`
	// The ID of the cloud provider for the peering connection.
	PeeringConnectionId *string `pulumi:"peeringConnectionId"`
	// State of the peering connection
	State *string `pulumi:"state"`
	// State-specific help or error information.
	StateInfo map[string]string `pulumi:"stateInfo"`
	// The name of the Azure VNet. Changing this property forces recreation of the resource.
	VnetName *string `pulumi:"vnetName"`
	// The ID of the Aiven VPC. Changing this property forces recreation of the resource.
	VpcId *string `pulumi:"vpcId"`
}

type AzureVpcPeeringConnectionState struct {
	// The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.
	AzureSubscriptionId pulumi.StringPtrInput
	// The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.
	PeerAzureAppId pulumi.StringPtrInput
	// The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.
	PeerAzureTenantId pulumi.StringPtrInput
	// The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.
	PeerResourceGroup pulumi.StringPtrInput
	// The ID of the cloud provider for the peering connection.
	PeeringConnectionId pulumi.StringPtrInput
	// State of the peering connection
	State pulumi.StringPtrInput
	// State-specific help or error information.
	StateInfo pulumi.StringMapInput
	// The name of the Azure VNet. Changing this property forces recreation of the resource.
	VnetName pulumi.StringPtrInput
	// The ID of the Aiven VPC. Changing this property forces recreation of the resource.
	VpcId pulumi.StringPtrInput
}

func (AzureVpcPeeringConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*azureVpcPeeringConnectionState)(nil)).Elem()
}

type azureVpcPeeringConnectionArgs struct {
	// The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.
	AzureSubscriptionId string `pulumi:"azureSubscriptionId"`
	// The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.
	PeerAzureAppId string `pulumi:"peerAzureAppId"`
	// The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.
	PeerAzureTenantId string `pulumi:"peerAzureTenantId"`
	// The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.
	PeerResourceGroup string `pulumi:"peerResourceGroup"`
	// The name of the Azure VNet. Changing this property forces recreation of the resource.
	VnetName string `pulumi:"vnetName"`
	// The ID of the Aiven VPC. Changing this property forces recreation of the resource.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a AzureVpcPeeringConnection resource.
type AzureVpcPeeringConnectionArgs struct {
	// The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.
	AzureSubscriptionId pulumi.StringInput
	// The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.
	PeerAzureAppId pulumi.StringInput
	// The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.
	PeerAzureTenantId pulumi.StringInput
	// The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.
	PeerResourceGroup pulumi.StringInput
	// The name of the Azure VNet. Changing this property forces recreation of the resource.
	VnetName pulumi.StringInput
	// The ID of the Aiven VPC. Changing this property forces recreation of the resource.
	VpcId pulumi.StringInput
}

func (AzureVpcPeeringConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*azureVpcPeeringConnectionArgs)(nil)).Elem()
}

type AzureVpcPeeringConnectionInput interface {
	pulumi.Input

	ToAzureVpcPeeringConnectionOutput() AzureVpcPeeringConnectionOutput
	ToAzureVpcPeeringConnectionOutputWithContext(ctx context.Context) AzureVpcPeeringConnectionOutput
}

func (*AzureVpcPeeringConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVpcPeeringConnection)(nil)).Elem()
}

func (i *AzureVpcPeeringConnection) ToAzureVpcPeeringConnectionOutput() AzureVpcPeeringConnectionOutput {
	return i.ToAzureVpcPeeringConnectionOutputWithContext(context.Background())
}

func (i *AzureVpcPeeringConnection) ToAzureVpcPeeringConnectionOutputWithContext(ctx context.Context) AzureVpcPeeringConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVpcPeeringConnectionOutput)
}

// AzureVpcPeeringConnectionArrayInput is an input type that accepts AzureVpcPeeringConnectionArray and AzureVpcPeeringConnectionArrayOutput values.
// You can construct a concrete instance of `AzureVpcPeeringConnectionArrayInput` via:
//
//	AzureVpcPeeringConnectionArray{ AzureVpcPeeringConnectionArgs{...} }
type AzureVpcPeeringConnectionArrayInput interface {
	pulumi.Input

	ToAzureVpcPeeringConnectionArrayOutput() AzureVpcPeeringConnectionArrayOutput
	ToAzureVpcPeeringConnectionArrayOutputWithContext(context.Context) AzureVpcPeeringConnectionArrayOutput
}

type AzureVpcPeeringConnectionArray []AzureVpcPeeringConnectionInput

func (AzureVpcPeeringConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureVpcPeeringConnection)(nil)).Elem()
}

func (i AzureVpcPeeringConnectionArray) ToAzureVpcPeeringConnectionArrayOutput() AzureVpcPeeringConnectionArrayOutput {
	return i.ToAzureVpcPeeringConnectionArrayOutputWithContext(context.Background())
}

func (i AzureVpcPeeringConnectionArray) ToAzureVpcPeeringConnectionArrayOutputWithContext(ctx context.Context) AzureVpcPeeringConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVpcPeeringConnectionArrayOutput)
}

// AzureVpcPeeringConnectionMapInput is an input type that accepts AzureVpcPeeringConnectionMap and AzureVpcPeeringConnectionMapOutput values.
// You can construct a concrete instance of `AzureVpcPeeringConnectionMapInput` via:
//
//	AzureVpcPeeringConnectionMap{ "key": AzureVpcPeeringConnectionArgs{...} }
type AzureVpcPeeringConnectionMapInput interface {
	pulumi.Input

	ToAzureVpcPeeringConnectionMapOutput() AzureVpcPeeringConnectionMapOutput
	ToAzureVpcPeeringConnectionMapOutputWithContext(context.Context) AzureVpcPeeringConnectionMapOutput
}

type AzureVpcPeeringConnectionMap map[string]AzureVpcPeeringConnectionInput

func (AzureVpcPeeringConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureVpcPeeringConnection)(nil)).Elem()
}

func (i AzureVpcPeeringConnectionMap) ToAzureVpcPeeringConnectionMapOutput() AzureVpcPeeringConnectionMapOutput {
	return i.ToAzureVpcPeeringConnectionMapOutputWithContext(context.Background())
}

func (i AzureVpcPeeringConnectionMap) ToAzureVpcPeeringConnectionMapOutputWithContext(ctx context.Context) AzureVpcPeeringConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVpcPeeringConnectionMapOutput)
}

type AzureVpcPeeringConnectionOutput struct{ *pulumi.OutputState }

func (AzureVpcPeeringConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVpcPeeringConnection)(nil)).Elem()
}

func (o AzureVpcPeeringConnectionOutput) ToAzureVpcPeeringConnectionOutput() AzureVpcPeeringConnectionOutput {
	return o
}

func (o AzureVpcPeeringConnectionOutput) ToAzureVpcPeeringConnectionOutputWithContext(ctx context.Context) AzureVpcPeeringConnectionOutput {
	return o
}

// The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.
func (o AzureVpcPeeringConnectionOutput) AzureSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureVpcPeeringConnection) pulumi.StringOutput { return v.AzureSubscriptionId }).(pulumi.StringOutput)
}

// The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.
func (o AzureVpcPeeringConnectionOutput) PeerAzureAppId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureVpcPeeringConnection) pulumi.StringOutput { return v.PeerAzureAppId }).(pulumi.StringOutput)
}

// The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.
func (o AzureVpcPeeringConnectionOutput) PeerAzureTenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureVpcPeeringConnection) pulumi.StringOutput { return v.PeerAzureTenantId }).(pulumi.StringOutput)
}

// The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.
func (o AzureVpcPeeringConnectionOutput) PeerResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureVpcPeeringConnection) pulumi.StringOutput { return v.PeerResourceGroup }).(pulumi.StringOutput)
}

// The ID of the cloud provider for the peering connection.
func (o AzureVpcPeeringConnectionOutput) PeeringConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureVpcPeeringConnection) pulumi.StringOutput { return v.PeeringConnectionId }).(pulumi.StringOutput)
}

// State of the peering connection
func (o AzureVpcPeeringConnectionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureVpcPeeringConnection) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// State-specific help or error information.
func (o AzureVpcPeeringConnectionOutput) StateInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AzureVpcPeeringConnection) pulumi.StringMapOutput { return v.StateInfo }).(pulumi.StringMapOutput)
}

// The name of the Azure VNet. Changing this property forces recreation of the resource.
func (o AzureVpcPeeringConnectionOutput) VnetName() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureVpcPeeringConnection) pulumi.StringOutput { return v.VnetName }).(pulumi.StringOutput)
}

// The ID of the Aiven VPC. Changing this property forces recreation of the resource.
func (o AzureVpcPeeringConnectionOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureVpcPeeringConnection) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type AzureVpcPeeringConnectionArrayOutput struct{ *pulumi.OutputState }

func (AzureVpcPeeringConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureVpcPeeringConnection)(nil)).Elem()
}

func (o AzureVpcPeeringConnectionArrayOutput) ToAzureVpcPeeringConnectionArrayOutput() AzureVpcPeeringConnectionArrayOutput {
	return o
}

func (o AzureVpcPeeringConnectionArrayOutput) ToAzureVpcPeeringConnectionArrayOutputWithContext(ctx context.Context) AzureVpcPeeringConnectionArrayOutput {
	return o
}

func (o AzureVpcPeeringConnectionArrayOutput) Index(i pulumi.IntInput) AzureVpcPeeringConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AzureVpcPeeringConnection {
		return vs[0].([]*AzureVpcPeeringConnection)[vs[1].(int)]
	}).(AzureVpcPeeringConnectionOutput)
}

type AzureVpcPeeringConnectionMapOutput struct{ *pulumi.OutputState }

func (AzureVpcPeeringConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureVpcPeeringConnection)(nil)).Elem()
}

func (o AzureVpcPeeringConnectionMapOutput) ToAzureVpcPeeringConnectionMapOutput() AzureVpcPeeringConnectionMapOutput {
	return o
}

func (o AzureVpcPeeringConnectionMapOutput) ToAzureVpcPeeringConnectionMapOutputWithContext(ctx context.Context) AzureVpcPeeringConnectionMapOutput {
	return o
}

func (o AzureVpcPeeringConnectionMapOutput) MapIndex(k pulumi.StringInput) AzureVpcPeeringConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AzureVpcPeeringConnection {
		return vs[0].(map[string]*AzureVpcPeeringConnection)[vs[1].(string)]
	}).(AzureVpcPeeringConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AzureVpcPeeringConnectionInput)(nil)).Elem(), &AzureVpcPeeringConnection{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureVpcPeeringConnectionArrayInput)(nil)).Elem(), AzureVpcPeeringConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureVpcPeeringConnectionMapInput)(nil)).Elem(), AzureVpcPeeringConnectionMap{})
	pulumi.RegisterOutputType(AzureVpcPeeringConnectionOutput{})
	pulumi.RegisterOutputType(AzureVpcPeeringConnectionArrayOutput{})
	pulumi.RegisterOutputType(AzureVpcPeeringConnectionMapOutput{})
}
