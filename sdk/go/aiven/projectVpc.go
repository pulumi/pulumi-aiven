// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ProjectVpc struct {
	pulumi.CustomResourceState

	// Custom Terraform Client timeouts
	//
	// Deprecated: use timeouts instead
	ClientTimeout ProjectVpcClientTimeoutPtrOutput `pulumi:"clientTimeout"`
	// Cloud the VPC is in
	CloudName pulumi.StringOutput `pulumi:"cloudName"`
	// Network address range used by the VPC like 192.168.0.0/24
	NetworkCidr pulumi.StringOutput `pulumi:"networkCidr"`
	// The project the VPC belongs to
	Project pulumi.StringOutput `pulumi:"project"`
	// State of the VPC (APPROVED, ACTIVE, DELETING, DELETED)
	State pulumi.StringOutput `pulumi:"state"`
}

// NewProjectVpc registers a new resource with the given unique name, arguments, and options.
func NewProjectVpc(ctx *pulumi.Context,
	name string, args *ProjectVpcArgs, opts ...pulumi.ResourceOption) (*ProjectVpc, error) {
	if args == nil || args.CloudName == nil {
		return nil, errors.New("missing required argument 'CloudName'")
	}
	if args == nil || args.NetworkCidr == nil {
		return nil, errors.New("missing required argument 'NetworkCidr'")
	}
	if args == nil || args.Project == nil {
		return nil, errors.New("missing required argument 'Project'")
	}
	if args == nil {
		args = &ProjectVpcArgs{}
	}
	var resource ProjectVpc
	err := ctx.RegisterResource("aiven:index/projectVpc:ProjectVpc", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProjectVpc gets an existing ProjectVpc resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProjectVpc(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProjectVpcState, opts ...pulumi.ResourceOption) (*ProjectVpc, error) {
	var resource ProjectVpc
	err := ctx.ReadResource("aiven:index/projectVpc:ProjectVpc", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProjectVpc resources.
type projectVpcState struct {
	// Custom Terraform Client timeouts
	//
	// Deprecated: use timeouts instead
	ClientTimeout *ProjectVpcClientTimeout `pulumi:"clientTimeout"`
	// Cloud the VPC is in
	CloudName *string `pulumi:"cloudName"`
	// Network address range used by the VPC like 192.168.0.0/24
	NetworkCidr *string `pulumi:"networkCidr"`
	// The project the VPC belongs to
	Project *string `pulumi:"project"`
	// State of the VPC (APPROVED, ACTIVE, DELETING, DELETED)
	State *string `pulumi:"state"`
}

type ProjectVpcState struct {
	// Custom Terraform Client timeouts
	//
	// Deprecated: use timeouts instead
	ClientTimeout ProjectVpcClientTimeoutPtrInput
	// Cloud the VPC is in
	CloudName pulumi.StringPtrInput
	// Network address range used by the VPC like 192.168.0.0/24
	NetworkCidr pulumi.StringPtrInput
	// The project the VPC belongs to
	Project pulumi.StringPtrInput
	// State of the VPC (APPROVED, ACTIVE, DELETING, DELETED)
	State pulumi.StringPtrInput
}

func (ProjectVpcState) ElementType() reflect.Type {
	return reflect.TypeOf((*projectVpcState)(nil)).Elem()
}

type projectVpcArgs struct {
	// Custom Terraform Client timeouts
	//
	// Deprecated: use timeouts instead
	ClientTimeout *ProjectVpcClientTimeout `pulumi:"clientTimeout"`
	// Cloud the VPC is in
	CloudName string `pulumi:"cloudName"`
	// Network address range used by the VPC like 192.168.0.0/24
	NetworkCidr string `pulumi:"networkCidr"`
	// The project the VPC belongs to
	Project string `pulumi:"project"`
}

// The set of arguments for constructing a ProjectVpc resource.
type ProjectVpcArgs struct {
	// Custom Terraform Client timeouts
	//
	// Deprecated: use timeouts instead
	ClientTimeout ProjectVpcClientTimeoutPtrInput
	// Cloud the VPC is in
	CloudName pulumi.StringInput
	// Network address range used by the VPC like 192.168.0.0/24
	NetworkCidr pulumi.StringInput
	// The project the VPC belongs to
	Project pulumi.StringInput
}

func (ProjectVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*projectVpcArgs)(nil)).Elem()
}
