// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The M3DB User data source provides information about the existing Aiven M3DB User.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aiven.LookupM3dbUser(ctx, &aiven.LookupM3dbUserArgs{
//				Project:     "my-project",
//				ServiceName: "my-service",
//				Username:    "user1",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupM3dbUser(ctx *pulumi.Context, args *LookupM3dbUserArgs, opts ...pulumi.InvokeOption) (*LookupM3dbUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupM3dbUserResult
	err := ctx.Invoke("aiven:index/getM3dbUser:getM3dbUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getM3dbUser.
type LookupM3dbUserArgs struct {
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project string `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// The actual name of the M3DB User. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Username string `pulumi:"username"`
}

// A collection of values returned by getM3dbUser.
type LookupM3dbUserResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The password of the M3DB User.
	Password string `pulumi:"password"`
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project string `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName string `pulumi:"serviceName"`
	// Type of the user account. Tells whether the user is the primary account or a regular account.
	Type string `pulumi:"type"`
	// The actual name of the M3DB User. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Username string `pulumi:"username"`
}

func LookupM3dbUserOutput(ctx *pulumi.Context, args LookupM3dbUserOutputArgs, opts ...pulumi.InvokeOption) LookupM3dbUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupM3dbUserResult, error) {
			args := v.(LookupM3dbUserArgs)
			r, err := LookupM3dbUser(ctx, &args, opts...)
			var s LookupM3dbUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupM3dbUserResultOutput)
}

// A collection of arguments for invoking getM3dbUser.
type LookupM3dbUserOutputArgs struct {
	// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Project pulumi.StringInput `pulumi:"project"`
	// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// The actual name of the M3DB User. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
	Username pulumi.StringInput `pulumi:"username"`
}

func (LookupM3dbUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupM3dbUserArgs)(nil)).Elem()
}

// A collection of values returned by getM3dbUser.
type LookupM3dbUserResultOutput struct{ *pulumi.OutputState }

func (LookupM3dbUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupM3dbUserResult)(nil)).Elem()
}

func (o LookupM3dbUserResultOutput) ToLookupM3dbUserResultOutput() LookupM3dbUserResultOutput {
	return o
}

func (o LookupM3dbUserResultOutput) ToLookupM3dbUserResultOutputWithContext(ctx context.Context) LookupM3dbUserResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupM3dbUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupM3dbUserResult) string { return v.Id }).(pulumi.StringOutput)
}

// The password of the M3DB User.
func (o LookupM3dbUserResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupM3dbUserResult) string { return v.Password }).(pulumi.StringOutput)
}

// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
func (o LookupM3dbUserResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupM3dbUserResult) string { return v.Project }).(pulumi.StringOutput)
}

// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
func (o LookupM3dbUserResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupM3dbUserResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// Type of the user account. Tells whether the user is the primary account or a regular account.
func (o LookupM3dbUserResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupM3dbUserResult) string { return v.Type }).(pulumi.StringOutput)
}

// The actual name of the M3DB User. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
func (o LookupM3dbUserResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupM3dbUserResult) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupM3dbUserResultOutput{})
}
