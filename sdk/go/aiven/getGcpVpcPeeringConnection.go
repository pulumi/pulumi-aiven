// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiven

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The GCP VPC Peering Connection data source provides information about the existing Aiven VPC Peering Connection.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aiven/sdk/v6/go/aiven"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aiven.LookupGcpVpcPeeringConnection(ctx, &aiven.LookupGcpVpcPeeringConnectionArgs{
//				VpcId:        vpc.Id,
//				GcpProjectId: "example-project",
//				PeerVpc:      "example-network",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupGcpVpcPeeringConnection(ctx *pulumi.Context, args *LookupGcpVpcPeeringConnectionArgs, opts ...pulumi.InvokeOption) (*LookupGcpVpcPeeringConnectionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGcpVpcPeeringConnectionResult
	err := ctx.Invoke("aiven:index/getGcpVpcPeeringConnection:getGcpVpcPeeringConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGcpVpcPeeringConnection.
type LookupGcpVpcPeeringConnectionArgs struct {
	// Google Cloud project ID. Changing this property forces recreation of the resource.
	GcpProjectId string `pulumi:"gcpProjectId"`
	// Google Cloud VPC network name. Changing this property forces recreation of the resource.
	PeerVpc string `pulumi:"peerVpc"`
	// The VPC the peering connection belongs to. Changing this property forces recreation of the resource.
	VpcId string `pulumi:"vpcId"`
}

// A collection of values returned by getGcpVpcPeeringConnection.
type LookupGcpVpcPeeringConnectionResult struct {
	// Google Cloud project ID. Changing this property forces recreation of the resource.
	GcpProjectId string `pulumi:"gcpProjectId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Google Cloud VPC network name. Changing this property forces recreation of the resource.
	PeerVpc string `pulumi:"peerVpc"`
	// Computed Google Cloud network peering link.
	SelfLink string `pulumi:"selfLink"`
	// State of the peering connection.
	State string `pulumi:"state"`
	// State-specific help or error information.
	StateInfo map[string]string `pulumi:"stateInfo"`
	// The VPC the peering connection belongs to. Changing this property forces recreation of the resource.
	VpcId string `pulumi:"vpcId"`
}

func LookupGcpVpcPeeringConnectionOutput(ctx *pulumi.Context, args LookupGcpVpcPeeringConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupGcpVpcPeeringConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGcpVpcPeeringConnectionResultOutput, error) {
			args := v.(LookupGcpVpcPeeringConnectionArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupGcpVpcPeeringConnectionResult
			secret, err := ctx.InvokePackageRaw("aiven:index/getGcpVpcPeeringConnection:getGcpVpcPeeringConnection", args, &rv, "", opts...)
			if err != nil {
				return LookupGcpVpcPeeringConnectionResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupGcpVpcPeeringConnectionResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupGcpVpcPeeringConnectionResultOutput), nil
			}
			return output, nil
		}).(LookupGcpVpcPeeringConnectionResultOutput)
}

// A collection of arguments for invoking getGcpVpcPeeringConnection.
type LookupGcpVpcPeeringConnectionOutputArgs struct {
	// Google Cloud project ID. Changing this property forces recreation of the resource.
	GcpProjectId pulumi.StringInput `pulumi:"gcpProjectId"`
	// Google Cloud VPC network name. Changing this property forces recreation of the resource.
	PeerVpc pulumi.StringInput `pulumi:"peerVpc"`
	// The VPC the peering connection belongs to. Changing this property forces recreation of the resource.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (LookupGcpVpcPeeringConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGcpVpcPeeringConnectionArgs)(nil)).Elem()
}

// A collection of values returned by getGcpVpcPeeringConnection.
type LookupGcpVpcPeeringConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupGcpVpcPeeringConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGcpVpcPeeringConnectionResult)(nil)).Elem()
}

func (o LookupGcpVpcPeeringConnectionResultOutput) ToLookupGcpVpcPeeringConnectionResultOutput() LookupGcpVpcPeeringConnectionResultOutput {
	return o
}

func (o LookupGcpVpcPeeringConnectionResultOutput) ToLookupGcpVpcPeeringConnectionResultOutputWithContext(ctx context.Context) LookupGcpVpcPeeringConnectionResultOutput {
	return o
}

// Google Cloud project ID. Changing this property forces recreation of the resource.
func (o LookupGcpVpcPeeringConnectionResultOutput) GcpProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGcpVpcPeeringConnectionResult) string { return v.GcpProjectId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupGcpVpcPeeringConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGcpVpcPeeringConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

// Google Cloud VPC network name. Changing this property forces recreation of the resource.
func (o LookupGcpVpcPeeringConnectionResultOutput) PeerVpc() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGcpVpcPeeringConnectionResult) string { return v.PeerVpc }).(pulumi.StringOutput)
}

// Computed Google Cloud network peering link.
func (o LookupGcpVpcPeeringConnectionResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGcpVpcPeeringConnectionResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

// State of the peering connection.
func (o LookupGcpVpcPeeringConnectionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGcpVpcPeeringConnectionResult) string { return v.State }).(pulumi.StringOutput)
}

// State-specific help or error information.
func (o LookupGcpVpcPeeringConnectionResultOutput) StateInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupGcpVpcPeeringConnectionResult) map[string]string { return v.StateInfo }).(pulumi.StringMapOutput)
}

// The VPC the peering connection belongs to. Changing this property forces recreation of the resource.
func (o LookupGcpVpcPeeringConnectionResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGcpVpcPeeringConnectionResult) string { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGcpVpcPeeringConnectionResultOutput{})
}
