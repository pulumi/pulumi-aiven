// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GrafanaGrafanaUserConfigExternalImageStorageArgs extends com.pulumi.resources.ResourceArgs {

    public static final GrafanaGrafanaUserConfigExternalImageStorageArgs Empty = new GrafanaGrafanaUserConfigExternalImageStorageArgs();

    @Import(name="accessKey", required=true)
    private Output<String> accessKey;

    public Output<String> accessKey() {
        return this.accessKey;
    }

    @Import(name="bucketUrl", required=true)
    private Output<String> bucketUrl;

    public Output<String> bucketUrl() {
        return this.bucketUrl;
    }

    @Import(name="provider", required=true)
    private Output<String> provider;

    public Output<String> provider() {
        return this.provider;
    }

    @Import(name="secretKey", required=true)
    private Output<String> secretKey;

    public Output<String> secretKey() {
        return this.secretKey;
    }

    private GrafanaGrafanaUserConfigExternalImageStorageArgs() {}

    private GrafanaGrafanaUserConfigExternalImageStorageArgs(GrafanaGrafanaUserConfigExternalImageStorageArgs $) {
        this.accessKey = $.accessKey;
        this.bucketUrl = $.bucketUrl;
        this.provider = $.provider;
        this.secretKey = $.secretKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GrafanaGrafanaUserConfigExternalImageStorageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GrafanaGrafanaUserConfigExternalImageStorageArgs $;

        public Builder() {
            $ = new GrafanaGrafanaUserConfigExternalImageStorageArgs();
        }

        public Builder(GrafanaGrafanaUserConfigExternalImageStorageArgs defaults) {
            $ = new GrafanaGrafanaUserConfigExternalImageStorageArgs(Objects.requireNonNull(defaults));
        }

        public Builder accessKey(Output<String> accessKey) {
            $.accessKey = accessKey;
            return this;
        }

        public Builder accessKey(String accessKey) {
            return accessKey(Output.of(accessKey));
        }

        public Builder bucketUrl(Output<String> bucketUrl) {
            $.bucketUrl = bucketUrl;
            return this;
        }

        public Builder bucketUrl(String bucketUrl) {
            return bucketUrl(Output.of(bucketUrl));
        }

        public Builder provider(Output<String> provider) {
            $.provider = provider;
            return this;
        }

        public Builder provider(String provider) {
            return provider(Output.of(provider));
        }

        public Builder secretKey(Output<String> secretKey) {
            $.secretKey = secretKey;
            return this;
        }

        public Builder secretKey(String secretKey) {
            return secretKey(Output.of(secretKey));
        }

        public GrafanaGrafanaUserConfigExternalImageStorageArgs build() {
            $.accessKey = Objects.requireNonNull($.accessKey, "expected parameter 'accessKey' to be non-null");
            $.bucketUrl = Objects.requireNonNull($.bucketUrl, "expected parameter 'bucketUrl' to be non-null");
            $.provider = Objects.requireNonNull($.provider, "expected parameter 'provider' to be non-null");
            $.secretKey = Objects.requireNonNull($.secretKey, "expected parameter 'secretKey' to be non-null");
            return $;
        }
    }

}
