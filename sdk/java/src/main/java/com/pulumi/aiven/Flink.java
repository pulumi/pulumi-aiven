// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.aiven.FlinkArgs;
import com.pulumi.aiven.Utilities;
import com.pulumi.aiven.inputs.FlinkState;
import com.pulumi.aiven.outputs.FlinkComponent;
import com.pulumi.aiven.outputs.FlinkFlink;
import com.pulumi.aiven.outputs.FlinkFlinkUserConfig;
import com.pulumi.aiven.outputs.FlinkServiceIntegration;
import com.pulumi.aiven.outputs.FlinkTag;
import com.pulumi.aiven.outputs.FlinkTechEmail;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Creates and manages an [Aiven for Apache FlinkÂ® service](https://aiven.io/docs/products/flink/concepts/flink-features).
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aiven.Flink;
 * import com.pulumi.aiven.FlinkArgs;
 * import com.pulumi.aiven.inputs.FlinkFlinkUserConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleFlink = new Flink("exampleFlink", FlinkArgs.builder()
 *             .project(exampleProject.project())
 *             .cloudName("google-europe-west1")
 *             .plan("business-4")
 *             .serviceName("example-flink-service")
 *             .maintenanceWindowDow("monday")
 *             .maintenanceWindowTime("10:00:00")
 *             .flinkUserConfig(FlinkFlinkUserConfigArgs.builder()
 *                 .flinkVersion("1.19")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import aiven:index/flink:Flink example_flink PROJECT/SERVICE_NAME
 * ```
 * 
 */
@ResourceType(type="aiven:index/flink:Flink")
public class Flink extends com.pulumi.resources.CustomResource {
    /**
     * Add [disk storage](https://aiven.io/docs/platform/howto/add-storage-space) in increments of 30  GiB to scale your service. The maximum value depends on the service type and cloud provider. Removing additional storage causes the service nodes to go through a rolling restart, and there might be a short downtime for services without an autoscaler integration or high availability capabilities. The field can be safely removed when autoscaler is enabled without causing any changes.
     * 
     */
    @Export(name="additionalDiskSpace", refs={String.class}, tree="[0]")
    private Output<String> additionalDiskSpace;

    /**
     * @return Add [disk storage](https://aiven.io/docs/platform/howto/add-storage-space) in increments of 30  GiB to scale your service. The maximum value depends on the service type and cloud provider. Removing additional storage causes the service nodes to go through a rolling restart, and there might be a short downtime for services without an autoscaler integration or high availability capabilities. The field can be safely removed when autoscaler is enabled without causing any changes.
     * 
     */
    public Output<String> additionalDiskSpace() {
        return this.additionalDiskSpace;
    }
    /**
     * The cloud provider and region the service is hosted in. The format is `provider-region`, for example: `google-europe-west1`. The [available cloud regions](https://aiven.io/docs/platform/reference/list_of_clouds) can differ per project and service. Changing this value [migrates the service to another cloud provider or region](https://aiven.io/docs/platform/howto/migrate-services-cloud-region). The migration runs in the background and includes a DNS update to redirect traffic to the new region. Most services experience no downtime, but some databases may have a brief interruption during DNS propagation.
     * 
     */
    @Export(name="cloudName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> cloudName;

    /**
     * @return The cloud provider and region the service is hosted in. The format is `provider-region`, for example: `google-europe-west1`. The [available cloud regions](https://aiven.io/docs/platform/reference/list_of_clouds) can differ per project and service. Changing this value [migrates the service to another cloud provider or region](https://aiven.io/docs/platform/howto/migrate-services-cloud-region). The migration runs in the background and includes a DNS update to redirect traffic to the new region. Most services experience no downtime, but some databases may have a brief interruption during DNS propagation.
     * 
     */
    public Output<Optional<String>> cloudName() {
        return Codegen.optional(this.cloudName);
    }
    /**
     * Service component information objects
     * 
     */
    @Export(name="components", refs={List.class,FlinkComponent.class}, tree="[0,1]")
    private Output<List<FlinkComponent>> components;

    /**
     * @return Service component information objects
     * 
     */
    public Output<List<FlinkComponent>> components() {
        return this.components;
    }
    /**
     * Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
     * 
     * @deprecated
     * This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan.
     * 
     */
    @Deprecated /* This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan. */
    @Export(name="diskSpace", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> diskSpace;

    /**
     * @return Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
     * 
     */
    public Output<Optional<String>> diskSpace() {
        return Codegen.optional(this.diskSpace);
    }
    /**
     * The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
     * 
     */
    @Export(name="diskSpaceCap", refs={String.class}, tree="[0]")
    private Output<String> diskSpaceCap;

    /**
     * @return The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
     * 
     */
    public Output<String> diskSpaceCap() {
        return this.diskSpaceCap;
    }
    /**
     * The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`
     * 
     */
    @Export(name="diskSpaceDefault", refs={String.class}, tree="[0]")
    private Output<String> diskSpaceDefault;

    /**
     * @return The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`
     * 
     */
    public Output<String> diskSpaceDefault() {
        return this.diskSpaceDefault;
    }
    /**
     * The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.
     * 
     */
    @Export(name="diskSpaceStep", refs={String.class}, tree="[0]")
    private Output<String> diskSpaceStep;

    /**
     * @return The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.
     * 
     */
    public Output<String> diskSpaceStep() {
        return this.diskSpaceStep;
    }
    /**
     * Disk space that service is currently using
     * 
     * @deprecated
     * This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan.
     * 
     */
    @Deprecated /* This will be removed in v5.0.0. Please use `additional_disk_space` to specify the space to be added to the default `disk_space` defined by the plan. */
    @Export(name="diskSpaceUsed", refs={String.class}, tree="[0]")
    private Output<String> diskSpaceUsed;

    /**
     * @return Disk space that service is currently using
     * 
     */
    public Output<String> diskSpaceUsed() {
        return this.diskSpaceUsed;
    }
    /**
     * Values provided by the Flink server.
     * 
     */
    @Export(name="flink", refs={FlinkFlink.class}, tree="[0]")
    private Output<FlinkFlink> flink;

    /**
     * @return Values provided by the Flink server.
     * 
     */
    public Output<FlinkFlink> flink() {
        return this.flink;
    }
    /**
     * Flink user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    @Export(name="flinkUserConfig", refs={FlinkFlinkUserConfig.class}, tree="[0]")
    private Output</* @Nullable */ FlinkFlinkUserConfig> flinkUserConfig;

    /**
     * @return Flink user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public Output<Optional<FlinkFlinkUserConfig>> flinkUserConfig() {
        return Codegen.optional(this.flinkUserConfig);
    }
    /**
     * Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
     * 
     */
    @Export(name="maintenanceWindowDow", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> maintenanceWindowDow;

    /**
     * @return Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
     * 
     */
    public Output<Optional<String>> maintenanceWindowDow() {
        return Codegen.optional(this.maintenanceWindowDow);
    }
    /**
     * Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
     * 
     */
    @Export(name="maintenanceWindowTime", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> maintenanceWindowTime;

    /**
     * @return Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
     * 
     */
    public Output<Optional<String>> maintenanceWindowTime() {
        return Codegen.optional(this.maintenanceWindowTime);
    }
    /**
     * Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seen from the [Aiven pricing page](https://aiven.io/pricing).
     * 
     */
    @Export(name="plan", refs={String.class}, tree="[0]")
    private Output<String> plan;

    /**
     * @return Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seen from the [Aiven pricing page](https://aiven.io/pricing).
     * 
     */
    public Output<String> plan() {
        return this.plan;
    }
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.
     * 
     */
    @Export(name="projectVpcId", refs={String.class}, tree="[0]")
    private Output<String> projectVpcId;

    /**
     * @return Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.
     * 
     */
    public Output<String> projectVpcId() {
        return this.projectVpcId;
    }
    /**
     * The hostname of the service.
     * 
     */
    @Export(name="serviceHost", refs={String.class}, tree="[0]")
    private Output<String> serviceHost;

    /**
     * @return The hostname of the service.
     * 
     */
    public Output<String> serviceHost() {
        return this.serviceHost;
    }
    /**
     * Service integrations to specify when creating a service. Not applied after initial service creation
     * 
     */
    @Export(name="serviceIntegrations", refs={List.class,FlinkServiceIntegration.class}, tree="[0,1]")
    private Output<List<FlinkServiceIntegration>> serviceIntegrations;

    /**
     * @return Service integrations to specify when creating a service. Not applied after initial service creation
     * 
     */
    public Output<List<FlinkServiceIntegration>> serviceIntegrations() {
        return this.serviceIntegrations;
    }
    /**
     * Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.
     * 
     */
    @Export(name="serviceName", refs={String.class}, tree="[0]")
    private Output<String> serviceName;

    /**
     * @return Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }
    /**
     * Password used for connecting to the service, if applicable
     * 
     */
    @Export(name="servicePassword", refs={String.class}, tree="[0]")
    private Output<String> servicePassword;

    /**
     * @return Password used for connecting to the service, if applicable
     * 
     */
    public Output<String> servicePassword() {
        return this.servicePassword;
    }
    /**
     * The port of the service
     * 
     */
    @Export(name="servicePort", refs={Integer.class}, tree="[0]")
    private Output<Integer> servicePort;

    /**
     * @return The port of the service
     * 
     */
    public Output<Integer> servicePort() {
        return this.servicePort;
    }
    /**
     * Aiven internal service type code
     * 
     */
    @Export(name="serviceType", refs={String.class}, tree="[0]")
    private Output<String> serviceType;

    /**
     * @return Aiven internal service type code
     * 
     */
    public Output<String> serviceType() {
        return this.serviceType;
    }
    /**
     * URI for connecting to the service. Service specific info is under &#34;kafka&#34;, &#34;pg&#34;, etc.
     * 
     */
    @Export(name="serviceUri", refs={String.class}, tree="[0]")
    private Output<String> serviceUri;

    /**
     * @return URI for connecting to the service. Service specific info is under &#34;kafka&#34;, &#34;pg&#34;, etc.
     * 
     */
    public Output<String> serviceUri() {
        return this.serviceUri;
    }
    /**
     * Username used for connecting to the service, if applicable
     * 
     */
    @Export(name="serviceUsername", refs={String.class}, tree="[0]")
    private Output<String> serviceUsername;

    /**
     * @return Username used for connecting to the service, if applicable
     * 
     */
    public Output<String> serviceUsername() {
        return this.serviceUsername;
    }
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    public Output<String> state() {
        return this.state;
    }
    /**
     * Static IPs that are going to be associated with this service. Please assign a value using the &#39;toset&#39; function. Once a static ip resource is in the &#39;assigned&#39; state it cannot be unbound from the node again
     * 
     */
    @Export(name="staticIps", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> staticIps;

    /**
     * @return Static IPs that are going to be associated with this service. Please assign a value using the &#39;toset&#39; function. Once a static ip resource is in the &#39;assigned&#39; state it cannot be unbound from the node again
     * 
     */
    public Output<Optional<List<String>>> staticIps() {
        return Codegen.optional(this.staticIps);
    }
    /**
     * Tags are key-value pairs that allow you to categorize services.
     * 
     */
    @Export(name="tags", refs={List.class,FlinkTag.class}, tree="[0,1]")
    private Output</* @Nullable */ List<FlinkTag>> tags;

    /**
     * @return Tags are key-value pairs that allow you to categorize services.
     * 
     */
    public Output<Optional<List<FlinkTag>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The email addresses for [service contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive important alerts and updates about this service. You can also set email contacts at the project level.
     * 
     */
    @Export(name="techEmails", refs={List.class,FlinkTechEmail.class}, tree="[0,1]")
    private Output</* @Nullable */ List<FlinkTechEmail>> techEmails;

    /**
     * @return The email addresses for [service contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive important alerts and updates about this service. You can also set email contacts at the project level.
     * 
     */
    public Output<Optional<List<FlinkTechEmail>>> techEmails() {
        return Codegen.optional(this.techEmails);
    }
    /**
     * Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.
     * 
     */
    @Export(name="terminationProtection", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> terminationProtection;

    /**
     * @return Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.
     * 
     */
    public Output<Optional<Boolean>> terminationProtection() {
        return Codegen.optional(this.terminationProtection);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Flink(java.lang.String name) {
        this(name, FlinkArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Flink(java.lang.String name, FlinkArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Flink(java.lang.String name, FlinkArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aiven:index/flink:Flink", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Flink(java.lang.String name, Output<java.lang.String> id, @Nullable FlinkState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aiven:index/flink:Flink", name, state, makeResourceOptions(options, id), false);
    }

    private static FlinkArgs makeArgs(FlinkArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? FlinkArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "flink",
                "servicePassword",
                "serviceUri"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Flink get(java.lang.String name, Output<java.lang.String> id, @Nullable FlinkState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Flink(name, id, state, options);
    }
}
