// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MySqlMysqlUserConfigMigration {
    private @Nullable String dbname;
    private String host;
    private @Nullable String ignoreDbs;
    private @Nullable String method;
    private @Nullable String password;
    private Integer port;
    private @Nullable Boolean ssl;
    private @Nullable String username;

    private MySqlMysqlUserConfigMigration() {}
    public Optional<String> dbname() {
        return Optional.ofNullable(this.dbname);
    }
    public String host() {
        return this.host;
    }
    public Optional<String> ignoreDbs() {
        return Optional.ofNullable(this.ignoreDbs);
    }
    public Optional<String> method() {
        return Optional.ofNullable(this.method);
    }
    public Optional<String> password() {
        return Optional.ofNullable(this.password);
    }
    public Integer port() {
        return this.port;
    }
    public Optional<Boolean> ssl() {
        return Optional.ofNullable(this.ssl);
    }
    public Optional<String> username() {
        return Optional.ofNullable(this.username);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MySqlMysqlUserConfigMigration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String dbname;
        private String host;
        private @Nullable String ignoreDbs;
        private @Nullable String method;
        private @Nullable String password;
        private Integer port;
        private @Nullable Boolean ssl;
        private @Nullable String username;
        public Builder() {}
        public Builder(MySqlMysqlUserConfigMigration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dbname = defaults.dbname;
    	      this.host = defaults.host;
    	      this.ignoreDbs = defaults.ignoreDbs;
    	      this.method = defaults.method;
    	      this.password = defaults.password;
    	      this.port = defaults.port;
    	      this.ssl = defaults.ssl;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder dbname(@Nullable String dbname) {
            this.dbname = dbname;
            return this;
        }
        @CustomType.Setter
        public Builder host(String host) {
            this.host = Objects.requireNonNull(host);
            return this;
        }
        @CustomType.Setter
        public Builder ignoreDbs(@Nullable String ignoreDbs) {
            this.ignoreDbs = ignoreDbs;
            return this;
        }
        @CustomType.Setter
        public Builder method(@Nullable String method) {
            this.method = method;
            return this;
        }
        @CustomType.Setter
        public Builder password(@Nullable String password) {
            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }
        @CustomType.Setter
        public Builder ssl(@Nullable Boolean ssl) {
            this.ssl = ssl;
            return this;
        }
        @CustomType.Setter
        public Builder username(@Nullable String username) {
            this.username = username;
            return this;
        }
        public MySqlMysqlUserConfigMigration build() {
            final var _resultValue = new MySqlMysqlUserConfigMigration();
            _resultValue.dbname = dbname;
            _resultValue.host = host;
            _resultValue.ignoreDbs = ignoreDbs;
            _resultValue.method = method;
            _resultValue.password = password;
            _resultValue.port = port;
            _resultValue.ssl = ssl;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}
