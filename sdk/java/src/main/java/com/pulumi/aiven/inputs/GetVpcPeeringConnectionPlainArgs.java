// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetVpcPeeringConnectionPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetVpcPeeringConnectionPlainArgs Empty = new GetVpcPeeringConnectionPlainArgs();

    /**
     * AWS account ID or GCP project ID of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="peerCloudAccount", required=true)
    private String peerCloudAccount;

    /**
     * @return AWS account ID or GCP project ID of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public String peerCloudAccount() {
        return this.peerCloudAccount;
    }

    /**
     * AWS VPC ID or GCP VPC network name of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="peerVpc", required=true)
    private String peerVpc;

    /**
     * @return AWS VPC ID or GCP VPC network name of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public String peerVpc() {
        return this.peerVpc;
    }

    /**
     * The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="vpcId", required=true)
    private String vpcId;

    /**
     * @return The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }

    private GetVpcPeeringConnectionPlainArgs() {}

    private GetVpcPeeringConnectionPlainArgs(GetVpcPeeringConnectionPlainArgs $) {
        this.peerCloudAccount = $.peerCloudAccount;
        this.peerVpc = $.peerVpc;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetVpcPeeringConnectionPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetVpcPeeringConnectionPlainArgs $;

        public Builder() {
            $ = new GetVpcPeeringConnectionPlainArgs();
        }

        public Builder(GetVpcPeeringConnectionPlainArgs defaults) {
            $ = new GetVpcPeeringConnectionPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param peerCloudAccount AWS account ID or GCP project ID of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder peerCloudAccount(String peerCloudAccount) {
            $.peerCloudAccount = peerCloudAccount;
            return this;
        }

        /**
         * @param peerVpc AWS VPC ID or GCP VPC network name of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder peerVpc(String peerVpc) {
            $.peerVpc = peerVpc;
            return this;
        }

        /**
         * @param vpcId The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        public GetVpcPeeringConnectionPlainArgs build() {
            $.peerCloudAccount = Objects.requireNonNull($.peerCloudAccount, "expected parameter 'peerCloudAccount' to be non-null");
            $.peerVpc = Objects.requireNonNull($.peerVpc, "expected parameter 'peerVpc' to be non-null");
            $.vpcId = Objects.requireNonNull($.vpcId, "expected parameter 'vpcId' to be non-null");
            return $;
        }
    }

}
