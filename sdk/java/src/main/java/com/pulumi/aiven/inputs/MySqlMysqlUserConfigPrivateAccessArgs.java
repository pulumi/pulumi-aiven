// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MySqlMysqlUserConfigPrivateAccessArgs extends com.pulumi.resources.ResourceArgs {

    public static final MySqlMysqlUserConfigPrivateAccessArgs Empty = new MySqlMysqlUserConfigPrivateAccessArgs();

    @Import(name="mysql")
    private @Nullable Output<String> mysql;

    public Optional<Output<String>> mysql() {
        return Optional.ofNullable(this.mysql);
    }

    @Import(name="mysqlx")
    private @Nullable Output<String> mysqlx;

    public Optional<Output<String>> mysqlx() {
        return Optional.ofNullable(this.mysqlx);
    }

    @Import(name="prometheus")
    private @Nullable Output<String> prometheus;

    public Optional<Output<String>> prometheus() {
        return Optional.ofNullable(this.prometheus);
    }

    private MySqlMysqlUserConfigPrivateAccessArgs() {}

    private MySqlMysqlUserConfigPrivateAccessArgs(MySqlMysqlUserConfigPrivateAccessArgs $) {
        this.mysql = $.mysql;
        this.mysqlx = $.mysqlx;
        this.prometheus = $.prometheus;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MySqlMysqlUserConfigPrivateAccessArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MySqlMysqlUserConfigPrivateAccessArgs $;

        public Builder() {
            $ = new MySqlMysqlUserConfigPrivateAccessArgs();
        }

        public Builder(MySqlMysqlUserConfigPrivateAccessArgs defaults) {
            $ = new MySqlMysqlUserConfigPrivateAccessArgs(Objects.requireNonNull(defaults));
        }

        public Builder mysql(@Nullable Output<String> mysql) {
            $.mysql = mysql;
            return this;
        }

        public Builder mysql(String mysql) {
            return mysql(Output.of(mysql));
        }

        public Builder mysqlx(@Nullable Output<String> mysqlx) {
            $.mysqlx = mysqlx;
            return this;
        }

        public Builder mysqlx(String mysqlx) {
            return mysqlx(Output.of(mysqlx));
        }

        public Builder prometheus(@Nullable Output<String> prometheus) {
            $.prometheus = prometheus;
            return this;
        }

        public Builder prometheus(String prometheus) {
            return prometheus(Output.of(prometheus));
        }

        public MySqlMysqlUserConfigPrivateAccessArgs build() {
            return $;
        }
    }

}
