// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAzureVpcPeeringConnectionResult {
    /**
     * @return The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.
     * 
     */
    private String azureSubscriptionId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.
     * 
     */
    private String peerAzureAppId;
    /**
     * @return The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.
     * 
     */
    private String peerAzureTenantId;
    /**
     * @return The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.
     * 
     */
    private String peerResourceGroup;
    /**
     * @return The ID of the cloud provider for the peering connection.
     * 
     */
    private String peeringConnectionId;
    /**
     * @return State of the peering connection
     * 
     */
    private String state;
    /**
     * @return State-specific help or error information.
     * 
     */
    private Map<String,String> stateInfo;
    /**
     * @return The name of the Azure VNet. Changing this property forces recreation of the resource.
     * 
     */
    private String vnetName;
    /**
     * @return The ID of the Aiven VPC. Changing this property forces recreation of the resource.
     * 
     */
    private String vpcId;

    private GetAzureVpcPeeringConnectionResult() {}
    /**
     * @return The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.
     * 
     */
    public String azureSubscriptionId() {
        return this.azureSubscriptionId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.
     * 
     */
    public String peerAzureAppId() {
        return this.peerAzureAppId;
    }
    /**
     * @return The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.
     * 
     */
    public String peerAzureTenantId() {
        return this.peerAzureTenantId;
    }
    /**
     * @return The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.
     * 
     */
    public String peerResourceGroup() {
        return this.peerResourceGroup;
    }
    /**
     * @return The ID of the cloud provider for the peering connection.
     * 
     */
    public String peeringConnectionId() {
        return this.peeringConnectionId;
    }
    /**
     * @return State of the peering connection
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return State-specific help or error information.
     * 
     */
    public Map<String,String> stateInfo() {
        return this.stateInfo;
    }
    /**
     * @return The name of the Azure VNet. Changing this property forces recreation of the resource.
     * 
     */
    public String vnetName() {
        return this.vnetName;
    }
    /**
     * @return The ID of the Aiven VPC. Changing this property forces recreation of the resource.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAzureVpcPeeringConnectionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String azureSubscriptionId;
        private String id;
        private String peerAzureAppId;
        private String peerAzureTenantId;
        private String peerResourceGroup;
        private String peeringConnectionId;
        private String state;
        private Map<String,String> stateInfo;
        private String vnetName;
        private String vpcId;
        public Builder() {}
        public Builder(GetAzureVpcPeeringConnectionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.azureSubscriptionId = defaults.azureSubscriptionId;
    	      this.id = defaults.id;
    	      this.peerAzureAppId = defaults.peerAzureAppId;
    	      this.peerAzureTenantId = defaults.peerAzureTenantId;
    	      this.peerResourceGroup = defaults.peerResourceGroup;
    	      this.peeringConnectionId = defaults.peeringConnectionId;
    	      this.state = defaults.state;
    	      this.stateInfo = defaults.stateInfo;
    	      this.vnetName = defaults.vnetName;
    	      this.vpcId = defaults.vpcId;
        }

        @CustomType.Setter
        public Builder azureSubscriptionId(String azureSubscriptionId) {
            if (azureSubscriptionId == null) {
              throw new MissingRequiredPropertyException("GetAzureVpcPeeringConnectionResult", "azureSubscriptionId");
            }
            this.azureSubscriptionId = azureSubscriptionId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAzureVpcPeeringConnectionResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder peerAzureAppId(String peerAzureAppId) {
            if (peerAzureAppId == null) {
              throw new MissingRequiredPropertyException("GetAzureVpcPeeringConnectionResult", "peerAzureAppId");
            }
            this.peerAzureAppId = peerAzureAppId;
            return this;
        }
        @CustomType.Setter
        public Builder peerAzureTenantId(String peerAzureTenantId) {
            if (peerAzureTenantId == null) {
              throw new MissingRequiredPropertyException("GetAzureVpcPeeringConnectionResult", "peerAzureTenantId");
            }
            this.peerAzureTenantId = peerAzureTenantId;
            return this;
        }
        @CustomType.Setter
        public Builder peerResourceGroup(String peerResourceGroup) {
            if (peerResourceGroup == null) {
              throw new MissingRequiredPropertyException("GetAzureVpcPeeringConnectionResult", "peerResourceGroup");
            }
            this.peerResourceGroup = peerResourceGroup;
            return this;
        }
        @CustomType.Setter
        public Builder peeringConnectionId(String peeringConnectionId) {
            if (peeringConnectionId == null) {
              throw new MissingRequiredPropertyException("GetAzureVpcPeeringConnectionResult", "peeringConnectionId");
            }
            this.peeringConnectionId = peeringConnectionId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetAzureVpcPeeringConnectionResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder stateInfo(Map<String,String> stateInfo) {
            if (stateInfo == null) {
              throw new MissingRequiredPropertyException("GetAzureVpcPeeringConnectionResult", "stateInfo");
            }
            this.stateInfo = stateInfo;
            return this;
        }
        @CustomType.Setter
        public Builder vnetName(String vnetName) {
            if (vnetName == null) {
              throw new MissingRequiredPropertyException("GetAzureVpcPeeringConnectionResult", "vnetName");
            }
            this.vnetName = vnetName;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(String vpcId) {
            if (vpcId == null) {
              throw new MissingRequiredPropertyException("GetAzureVpcPeeringConnectionResult", "vpcId");
            }
            this.vpcId = vpcId;
            return this;
        }
        public GetAzureVpcPeeringConnectionResult build() {
            final var _resultValue = new GetAzureVpcPeeringConnectionResult();
            _resultValue.azureSubscriptionId = azureSubscriptionId;
            _resultValue.id = id;
            _resultValue.peerAzureAppId = peerAzureAppId;
            _resultValue.peerAzureTenantId = peerAzureTenantId;
            _resultValue.peerResourceGroup = peerResourceGroup;
            _resultValue.peeringConnectionId = peeringConnectionId;
            _resultValue.state = state;
            _resultValue.stateInfo = stateInfo;
            _resultValue.vnetName = vnetName;
            _resultValue.vpcId = vpcId;
            return _resultValue;
        }
    }
}
