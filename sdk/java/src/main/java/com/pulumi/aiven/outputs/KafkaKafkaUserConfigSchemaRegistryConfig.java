// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class KafkaKafkaUserConfigSchemaRegistryConfig {
    private @Nullable String leaderEligibility;
    private @Nullable String topicName;

    private KafkaKafkaUserConfigSchemaRegistryConfig() {}
    public Optional<String> leaderEligibility() {
        return Optional.ofNullable(this.leaderEligibility);
    }
    public Optional<String> topicName() {
        return Optional.ofNullable(this.topicName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KafkaKafkaUserConfigSchemaRegistryConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String leaderEligibility;
        private @Nullable String topicName;
        public Builder() {}
        public Builder(KafkaKafkaUserConfigSchemaRegistryConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.leaderEligibility = defaults.leaderEligibility;
    	      this.topicName = defaults.topicName;
        }

        @CustomType.Setter
        public Builder leaderEligibility(@Nullable String leaderEligibility) {
            this.leaderEligibility = leaderEligibility;
            return this;
        }
        @CustomType.Setter
        public Builder topicName(@Nullable String topicName) {
            this.topicName = topicName;
            return this;
        }
        public KafkaKafkaUserConfigSchemaRegistryConfig build() {
            final var o = new KafkaKafkaUserConfigSchemaRegistryConfig();
            o.leaderEligibility = leaderEligibility;
            o.topicName = topicName;
            return o;
        }
    }
}
