// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.aiven.outputs.OpenSearchOpensearchUserConfigOpensearchAuthFailureListeners;
import com.pulumi.aiven.outputs.OpenSearchOpensearchUserConfigOpensearchSearchBackpressure;
import com.pulumi.aiven.outputs.OpenSearchOpensearchUserConfigOpensearchSearchInsightsTopQueries;
import com.pulumi.aiven.outputs.OpenSearchOpensearchUserConfigOpensearchShardIndexingPressure;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OpenSearchOpensearchUserConfigOpensearch {
    /**
     * @return Explicitly allow or block automatic creation of indices. Defaults to true.
     * 
     */
    private @Nullable Boolean actionAutoCreateIndexEnabled;
    /**
     * @return Require explicit index names when deleting.
     * 
     */
    private @Nullable Boolean actionDestructiveRequiresName;
    /**
     * @return Opensearch Security Plugin Settings
     * 
     */
    private @Nullable OpenSearchOpensearchUserConfigOpensearchAuthFailureListeners authFailureListeners;
    /**
     * @return Controls the number of shards allowed in the cluster per data node. Example: `1000`.
     * 
     */
    private @Nullable Integer clusterMaxShardsPerNode;
    /**
     * @return How many concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen on a node. Defaults to node cpu count * 2.
     * 
     */
    private @Nullable Integer clusterRoutingAllocationNodeConcurrentRecoveries;
    /**
     * @return Sender name placeholder to be used in Opensearch Dashboards and Opensearch keystore. Example: `alert-sender`.
     * 
     */
    private @Nullable String emailSenderName;
    /**
     * @return Sender password for Opensearch alerts to authenticate with SMTP server. Example: `very-secure-mail-password`.
     * 
     */
    private @Nullable String emailSenderPassword;
    /**
     * @return Sender username for Opensearch alerts. Example: `jane{@literal @}example.com`.
     * 
     */
    private @Nullable String emailSenderUsername;
    /**
     * @return Enable/Disable security audit.
     * 
     */
    private @Nullable Boolean enableSecurityAudit;
    /**
     * @return Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes.
     * 
     */
    private @Nullable Integer httpMaxContentLength;
    /**
     * @return The max size of allowed headers, in bytes. Example: `8192`.
     * 
     */
    private @Nullable Integer httpMaxHeaderSize;
    /**
     * @return The max length of an HTTP URL, in bytes. Example: `4096`.
     * 
     */
    private @Nullable Integer httpMaxInitialLineLength;
    /**
     * @return Relative amount. Maximum amount of heap memory used for field data cache. This is an expert setting; decreasing the value too much will increase overhead of loading field data; too much memory used for field data cache will decrease amount of heap available for other operations.
     * 
     */
    private @Nullable Integer indicesFielddataCacheSize;
    /**
     * @return Percentage value. Default is 10%. Total amount of heap used for indexing buffer, before writing segments to disk. This is an expert setting. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance.
     * 
     */
    private @Nullable Integer indicesMemoryIndexBufferSize;
    /**
     * @return Absolute value. Default is unbound. Doesn&#39;t work without indices.memory.index*buffer*size. Maximum amount of heap used for query cache, an absolute indices.memory.index*buffer*size maximum hard limit.
     * 
     */
    private @Nullable Integer indicesMemoryMaxIndexBufferSize;
    /**
     * @return Absolute value. Default is 48mb. Doesn&#39;t work without indices.memory.index*buffer*size. Minimum amount of heap used for query cache, an absolute indices.memory.index*buffer*size minimal hard limit.
     * 
     */
    private @Nullable Integer indicesMemoryMinIndexBufferSize;
    /**
     * @return Percentage value. Default is 10%. Maximum amount of heap used for query cache. This is an expert setting. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other OpenSearch functionality.
     * 
     */
    private @Nullable Integer indicesQueriesCacheSize;
    /**
     * @return Maximum number of clauses Lucene BooleanQuery can have. The default value (1024) is relatively high, and increasing it may cause performance issues. Investigate other approaches first before increasing this value.
     * 
     */
    private @Nullable Integer indicesQueryBoolMaxClauseCount;
    /**
     * @return Limits total inbound and outbound recovery traffic for each node. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Defaults to 40mb.
     * 
     */
    private @Nullable Integer indicesRecoveryMaxBytesPerSec;
    /**
     * @return Number of file chunks sent in parallel for each recovery. Defaults to 2.
     * 
     */
    private @Nullable Integer indicesRecoveryMaxConcurrentFileChunks;
    /**
     * @return Specifies whether ISM is enabled or not.
     * 
     */
    private @Nullable Boolean ismEnabled;
    /**
     * @return Specifies whether audit history is enabled or not. The logs from ISM are automatically indexed to a logs document.
     * 
     */
    private @Nullable Boolean ismHistoryEnabled;
    /**
     * @return The maximum age before rolling over the audit history index in hours. Example: `24`.
     * 
     */
    private @Nullable Integer ismHistoryMaxAge;
    /**
     * @return The maximum number of documents before rolling over the audit history index. Example: `2500000`.
     * 
     */
    private @Nullable Integer ismHistoryMaxDocs;
    /**
     * @return The time between rollover checks for the audit history index in hours. Example: `8`.
     * 
     */
    private @Nullable Integer ismHistoryRolloverCheckPeriod;
    /**
     * @return How long audit history indices are kept in days. Example: `30`.
     * 
     */
    private @Nullable Integer ismHistoryRolloverRetentionPeriod;
    /**
     * @return Enable or disable KNN memory circuit breaker. Defaults to true.
     * 
     */
    private @Nullable Boolean knnMemoryCircuitBreakerEnabled;
    /**
     * @return Maximum amount of memory that can be used for KNN index. Defaults to 50% of the JVM heap size.
     * 
     */
    private @Nullable Integer knnMemoryCircuitBreakerLimit;
    /**
     * @return Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default is false.
     * 
     */
    private @Nullable Boolean overrideMainResponseVersion;
    /**
     * @return Enable or disable filtering of alerting by backend roles. Requires Security plugin. Defaults to false.
     * 
     */
    private @Nullable Boolean pluginsAlertingFilterByBackendRoles;
    /**
     * @return Whitelisted addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.
     * 
     */
    private @Nullable List<String> reindexRemoteWhitelists;
    /**
     * @return Script compilation circuit breaker limits the number of inline script compilations within a period of time. Default is use-context. Example: `75/5m`.
     * 
     */
    private @Nullable String scriptMaxCompilationsRate;
    /**
     * @return Search Backpressure Settings
     * 
     */
    private @Nullable OpenSearchOpensearchUserConfigOpensearchSearchBackpressure searchBackpressure;
    private @Nullable OpenSearchOpensearchUserConfigOpensearchSearchInsightsTopQueries searchInsightsTopQueries;
    /**
     * @return Maximum number of aggregation buckets allowed in a single response. OpenSearch default value is used when this is not defined. Example: `10000`.
     * 
     */
    private @Nullable Integer searchMaxBuckets;
    /**
     * @return Shard indexing back pressure settings
     * 
     */
    private @Nullable OpenSearchOpensearchUserConfigOpensearchShardIndexingPressure shardIndexingPressure;
    /**
     * @return Size for the thread pool queue. See documentation for exact details.
     * 
     */
    private @Nullable Integer threadPoolAnalyzeQueueSize;
    /**
     * @return Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    private @Nullable Integer threadPoolAnalyzeSize;
    /**
     * @return Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    private @Nullable Integer threadPoolForceMergeSize;
    /**
     * @return Size for the thread pool queue. See documentation for exact details.
     * 
     */
    private @Nullable Integer threadPoolGetQueueSize;
    /**
     * @return Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    private @Nullable Integer threadPoolGetSize;
    /**
     * @return Size for the thread pool queue. See documentation for exact details.
     * 
     */
    private @Nullable Integer threadPoolSearchQueueSize;
    /**
     * @return Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    private @Nullable Integer threadPoolSearchSize;
    /**
     * @return Size for the thread pool queue. See documentation for exact details.
     * 
     */
    private @Nullable Integer threadPoolSearchThrottledQueueSize;
    /**
     * @return Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    private @Nullable Integer threadPoolSearchThrottledSize;
    /**
     * @return Size for the thread pool queue. See documentation for exact details.
     * 
     */
    private @Nullable Integer threadPoolWriteQueueSize;
    /**
     * @return Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    private @Nullable Integer threadPoolWriteSize;

    private OpenSearchOpensearchUserConfigOpensearch() {}
    /**
     * @return Explicitly allow or block automatic creation of indices. Defaults to true.
     * 
     */
    public Optional<Boolean> actionAutoCreateIndexEnabled() {
        return Optional.ofNullable(this.actionAutoCreateIndexEnabled);
    }
    /**
     * @return Require explicit index names when deleting.
     * 
     */
    public Optional<Boolean> actionDestructiveRequiresName() {
        return Optional.ofNullable(this.actionDestructiveRequiresName);
    }
    /**
     * @return Opensearch Security Plugin Settings
     * 
     */
    public Optional<OpenSearchOpensearchUserConfigOpensearchAuthFailureListeners> authFailureListeners() {
        return Optional.ofNullable(this.authFailureListeners);
    }
    /**
     * @return Controls the number of shards allowed in the cluster per data node. Example: `1000`.
     * 
     */
    public Optional<Integer> clusterMaxShardsPerNode() {
        return Optional.ofNullable(this.clusterMaxShardsPerNode);
    }
    /**
     * @return How many concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen on a node. Defaults to node cpu count * 2.
     * 
     */
    public Optional<Integer> clusterRoutingAllocationNodeConcurrentRecoveries() {
        return Optional.ofNullable(this.clusterRoutingAllocationNodeConcurrentRecoveries);
    }
    /**
     * @return Sender name placeholder to be used in Opensearch Dashboards and Opensearch keystore. Example: `alert-sender`.
     * 
     */
    public Optional<String> emailSenderName() {
        return Optional.ofNullable(this.emailSenderName);
    }
    /**
     * @return Sender password for Opensearch alerts to authenticate with SMTP server. Example: `very-secure-mail-password`.
     * 
     */
    public Optional<String> emailSenderPassword() {
        return Optional.ofNullable(this.emailSenderPassword);
    }
    /**
     * @return Sender username for Opensearch alerts. Example: `jane{@literal @}example.com`.
     * 
     */
    public Optional<String> emailSenderUsername() {
        return Optional.ofNullable(this.emailSenderUsername);
    }
    /**
     * @return Enable/Disable security audit.
     * 
     */
    public Optional<Boolean> enableSecurityAudit() {
        return Optional.ofNullable(this.enableSecurityAudit);
    }
    /**
     * @return Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes.
     * 
     */
    public Optional<Integer> httpMaxContentLength() {
        return Optional.ofNullable(this.httpMaxContentLength);
    }
    /**
     * @return The max size of allowed headers, in bytes. Example: `8192`.
     * 
     */
    public Optional<Integer> httpMaxHeaderSize() {
        return Optional.ofNullable(this.httpMaxHeaderSize);
    }
    /**
     * @return The max length of an HTTP URL, in bytes. Example: `4096`.
     * 
     */
    public Optional<Integer> httpMaxInitialLineLength() {
        return Optional.ofNullable(this.httpMaxInitialLineLength);
    }
    /**
     * @return Relative amount. Maximum amount of heap memory used for field data cache. This is an expert setting; decreasing the value too much will increase overhead of loading field data; too much memory used for field data cache will decrease amount of heap available for other operations.
     * 
     */
    public Optional<Integer> indicesFielddataCacheSize() {
        return Optional.ofNullable(this.indicesFielddataCacheSize);
    }
    /**
     * @return Percentage value. Default is 10%. Total amount of heap used for indexing buffer, before writing segments to disk. This is an expert setting. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance.
     * 
     */
    public Optional<Integer> indicesMemoryIndexBufferSize() {
        return Optional.ofNullable(this.indicesMemoryIndexBufferSize);
    }
    /**
     * @return Absolute value. Default is unbound. Doesn&#39;t work without indices.memory.index*buffer*size. Maximum amount of heap used for query cache, an absolute indices.memory.index*buffer*size maximum hard limit.
     * 
     */
    public Optional<Integer> indicesMemoryMaxIndexBufferSize() {
        return Optional.ofNullable(this.indicesMemoryMaxIndexBufferSize);
    }
    /**
     * @return Absolute value. Default is 48mb. Doesn&#39;t work without indices.memory.index*buffer*size. Minimum amount of heap used for query cache, an absolute indices.memory.index*buffer*size minimal hard limit.
     * 
     */
    public Optional<Integer> indicesMemoryMinIndexBufferSize() {
        return Optional.ofNullable(this.indicesMemoryMinIndexBufferSize);
    }
    /**
     * @return Percentage value. Default is 10%. Maximum amount of heap used for query cache. This is an expert setting. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other OpenSearch functionality.
     * 
     */
    public Optional<Integer> indicesQueriesCacheSize() {
        return Optional.ofNullable(this.indicesQueriesCacheSize);
    }
    /**
     * @return Maximum number of clauses Lucene BooleanQuery can have. The default value (1024) is relatively high, and increasing it may cause performance issues. Investigate other approaches first before increasing this value.
     * 
     */
    public Optional<Integer> indicesQueryBoolMaxClauseCount() {
        return Optional.ofNullable(this.indicesQueryBoolMaxClauseCount);
    }
    /**
     * @return Limits total inbound and outbound recovery traffic for each node. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Defaults to 40mb.
     * 
     */
    public Optional<Integer> indicesRecoveryMaxBytesPerSec() {
        return Optional.ofNullable(this.indicesRecoveryMaxBytesPerSec);
    }
    /**
     * @return Number of file chunks sent in parallel for each recovery. Defaults to 2.
     * 
     */
    public Optional<Integer> indicesRecoveryMaxConcurrentFileChunks() {
        return Optional.ofNullable(this.indicesRecoveryMaxConcurrentFileChunks);
    }
    /**
     * @return Specifies whether ISM is enabled or not.
     * 
     */
    public Optional<Boolean> ismEnabled() {
        return Optional.ofNullable(this.ismEnabled);
    }
    /**
     * @return Specifies whether audit history is enabled or not. The logs from ISM are automatically indexed to a logs document.
     * 
     */
    public Optional<Boolean> ismHistoryEnabled() {
        return Optional.ofNullable(this.ismHistoryEnabled);
    }
    /**
     * @return The maximum age before rolling over the audit history index in hours. Example: `24`.
     * 
     */
    public Optional<Integer> ismHistoryMaxAge() {
        return Optional.ofNullable(this.ismHistoryMaxAge);
    }
    /**
     * @return The maximum number of documents before rolling over the audit history index. Example: `2500000`.
     * 
     */
    public Optional<Integer> ismHistoryMaxDocs() {
        return Optional.ofNullable(this.ismHistoryMaxDocs);
    }
    /**
     * @return The time between rollover checks for the audit history index in hours. Example: `8`.
     * 
     */
    public Optional<Integer> ismHistoryRolloverCheckPeriod() {
        return Optional.ofNullable(this.ismHistoryRolloverCheckPeriod);
    }
    /**
     * @return How long audit history indices are kept in days. Example: `30`.
     * 
     */
    public Optional<Integer> ismHistoryRolloverRetentionPeriod() {
        return Optional.ofNullable(this.ismHistoryRolloverRetentionPeriod);
    }
    /**
     * @return Enable or disable KNN memory circuit breaker. Defaults to true.
     * 
     */
    public Optional<Boolean> knnMemoryCircuitBreakerEnabled() {
        return Optional.ofNullable(this.knnMemoryCircuitBreakerEnabled);
    }
    /**
     * @return Maximum amount of memory that can be used for KNN index. Defaults to 50% of the JVM heap size.
     * 
     */
    public Optional<Integer> knnMemoryCircuitBreakerLimit() {
        return Optional.ofNullable(this.knnMemoryCircuitBreakerLimit);
    }
    /**
     * @return Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default is false.
     * 
     */
    public Optional<Boolean> overrideMainResponseVersion() {
        return Optional.ofNullable(this.overrideMainResponseVersion);
    }
    /**
     * @return Enable or disable filtering of alerting by backend roles. Requires Security plugin. Defaults to false.
     * 
     */
    public Optional<Boolean> pluginsAlertingFilterByBackendRoles() {
        return Optional.ofNullable(this.pluginsAlertingFilterByBackendRoles);
    }
    /**
     * @return Whitelisted addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.
     * 
     */
    public List<String> reindexRemoteWhitelists() {
        return this.reindexRemoteWhitelists == null ? List.of() : this.reindexRemoteWhitelists;
    }
    /**
     * @return Script compilation circuit breaker limits the number of inline script compilations within a period of time. Default is use-context. Example: `75/5m`.
     * 
     */
    public Optional<String> scriptMaxCompilationsRate() {
        return Optional.ofNullable(this.scriptMaxCompilationsRate);
    }
    /**
     * @return Search Backpressure Settings
     * 
     */
    public Optional<OpenSearchOpensearchUserConfigOpensearchSearchBackpressure> searchBackpressure() {
        return Optional.ofNullable(this.searchBackpressure);
    }
    public Optional<OpenSearchOpensearchUserConfigOpensearchSearchInsightsTopQueries> searchInsightsTopQueries() {
        return Optional.ofNullable(this.searchInsightsTopQueries);
    }
    /**
     * @return Maximum number of aggregation buckets allowed in a single response. OpenSearch default value is used when this is not defined. Example: `10000`.
     * 
     */
    public Optional<Integer> searchMaxBuckets() {
        return Optional.ofNullable(this.searchMaxBuckets);
    }
    /**
     * @return Shard indexing back pressure settings
     * 
     */
    public Optional<OpenSearchOpensearchUserConfigOpensearchShardIndexingPressure> shardIndexingPressure() {
        return Optional.ofNullable(this.shardIndexingPressure);
    }
    /**
     * @return Size for the thread pool queue. See documentation for exact details.
     * 
     */
    public Optional<Integer> threadPoolAnalyzeQueueSize() {
        return Optional.ofNullable(this.threadPoolAnalyzeQueueSize);
    }
    /**
     * @return Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    public Optional<Integer> threadPoolAnalyzeSize() {
        return Optional.ofNullable(this.threadPoolAnalyzeSize);
    }
    /**
     * @return Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    public Optional<Integer> threadPoolForceMergeSize() {
        return Optional.ofNullable(this.threadPoolForceMergeSize);
    }
    /**
     * @return Size for the thread pool queue. See documentation for exact details.
     * 
     */
    public Optional<Integer> threadPoolGetQueueSize() {
        return Optional.ofNullable(this.threadPoolGetQueueSize);
    }
    /**
     * @return Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    public Optional<Integer> threadPoolGetSize() {
        return Optional.ofNullable(this.threadPoolGetSize);
    }
    /**
     * @return Size for the thread pool queue. See documentation for exact details.
     * 
     */
    public Optional<Integer> threadPoolSearchQueueSize() {
        return Optional.ofNullable(this.threadPoolSearchQueueSize);
    }
    /**
     * @return Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    public Optional<Integer> threadPoolSearchSize() {
        return Optional.ofNullable(this.threadPoolSearchSize);
    }
    /**
     * @return Size for the thread pool queue. See documentation for exact details.
     * 
     */
    public Optional<Integer> threadPoolSearchThrottledQueueSize() {
        return Optional.ofNullable(this.threadPoolSearchThrottledQueueSize);
    }
    /**
     * @return Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    public Optional<Integer> threadPoolSearchThrottledSize() {
        return Optional.ofNullable(this.threadPoolSearchThrottledSize);
    }
    /**
     * @return Size for the thread pool queue. See documentation for exact details.
     * 
     */
    public Optional<Integer> threadPoolWriteQueueSize() {
        return Optional.ofNullable(this.threadPoolWriteQueueSize);
    }
    /**
     * @return Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    public Optional<Integer> threadPoolWriteSize() {
        return Optional.ofNullable(this.threadPoolWriteSize);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OpenSearchOpensearchUserConfigOpensearch defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean actionAutoCreateIndexEnabled;
        private @Nullable Boolean actionDestructiveRequiresName;
        private @Nullable OpenSearchOpensearchUserConfigOpensearchAuthFailureListeners authFailureListeners;
        private @Nullable Integer clusterMaxShardsPerNode;
        private @Nullable Integer clusterRoutingAllocationNodeConcurrentRecoveries;
        private @Nullable String emailSenderName;
        private @Nullable String emailSenderPassword;
        private @Nullable String emailSenderUsername;
        private @Nullable Boolean enableSecurityAudit;
        private @Nullable Integer httpMaxContentLength;
        private @Nullable Integer httpMaxHeaderSize;
        private @Nullable Integer httpMaxInitialLineLength;
        private @Nullable Integer indicesFielddataCacheSize;
        private @Nullable Integer indicesMemoryIndexBufferSize;
        private @Nullable Integer indicesMemoryMaxIndexBufferSize;
        private @Nullable Integer indicesMemoryMinIndexBufferSize;
        private @Nullable Integer indicesQueriesCacheSize;
        private @Nullable Integer indicesQueryBoolMaxClauseCount;
        private @Nullable Integer indicesRecoveryMaxBytesPerSec;
        private @Nullable Integer indicesRecoveryMaxConcurrentFileChunks;
        private @Nullable Boolean ismEnabled;
        private @Nullable Boolean ismHistoryEnabled;
        private @Nullable Integer ismHistoryMaxAge;
        private @Nullable Integer ismHistoryMaxDocs;
        private @Nullable Integer ismHistoryRolloverCheckPeriod;
        private @Nullable Integer ismHistoryRolloverRetentionPeriod;
        private @Nullable Boolean knnMemoryCircuitBreakerEnabled;
        private @Nullable Integer knnMemoryCircuitBreakerLimit;
        private @Nullable Boolean overrideMainResponseVersion;
        private @Nullable Boolean pluginsAlertingFilterByBackendRoles;
        private @Nullable List<String> reindexRemoteWhitelists;
        private @Nullable String scriptMaxCompilationsRate;
        private @Nullable OpenSearchOpensearchUserConfigOpensearchSearchBackpressure searchBackpressure;
        private @Nullable OpenSearchOpensearchUserConfigOpensearchSearchInsightsTopQueries searchInsightsTopQueries;
        private @Nullable Integer searchMaxBuckets;
        private @Nullable OpenSearchOpensearchUserConfigOpensearchShardIndexingPressure shardIndexingPressure;
        private @Nullable Integer threadPoolAnalyzeQueueSize;
        private @Nullable Integer threadPoolAnalyzeSize;
        private @Nullable Integer threadPoolForceMergeSize;
        private @Nullable Integer threadPoolGetQueueSize;
        private @Nullable Integer threadPoolGetSize;
        private @Nullable Integer threadPoolSearchQueueSize;
        private @Nullable Integer threadPoolSearchSize;
        private @Nullable Integer threadPoolSearchThrottledQueueSize;
        private @Nullable Integer threadPoolSearchThrottledSize;
        private @Nullable Integer threadPoolWriteQueueSize;
        private @Nullable Integer threadPoolWriteSize;
        public Builder() {}
        public Builder(OpenSearchOpensearchUserConfigOpensearch defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionAutoCreateIndexEnabled = defaults.actionAutoCreateIndexEnabled;
    	      this.actionDestructiveRequiresName = defaults.actionDestructiveRequiresName;
    	      this.authFailureListeners = defaults.authFailureListeners;
    	      this.clusterMaxShardsPerNode = defaults.clusterMaxShardsPerNode;
    	      this.clusterRoutingAllocationNodeConcurrentRecoveries = defaults.clusterRoutingAllocationNodeConcurrentRecoveries;
    	      this.emailSenderName = defaults.emailSenderName;
    	      this.emailSenderPassword = defaults.emailSenderPassword;
    	      this.emailSenderUsername = defaults.emailSenderUsername;
    	      this.enableSecurityAudit = defaults.enableSecurityAudit;
    	      this.httpMaxContentLength = defaults.httpMaxContentLength;
    	      this.httpMaxHeaderSize = defaults.httpMaxHeaderSize;
    	      this.httpMaxInitialLineLength = defaults.httpMaxInitialLineLength;
    	      this.indicesFielddataCacheSize = defaults.indicesFielddataCacheSize;
    	      this.indicesMemoryIndexBufferSize = defaults.indicesMemoryIndexBufferSize;
    	      this.indicesMemoryMaxIndexBufferSize = defaults.indicesMemoryMaxIndexBufferSize;
    	      this.indicesMemoryMinIndexBufferSize = defaults.indicesMemoryMinIndexBufferSize;
    	      this.indicesQueriesCacheSize = defaults.indicesQueriesCacheSize;
    	      this.indicesQueryBoolMaxClauseCount = defaults.indicesQueryBoolMaxClauseCount;
    	      this.indicesRecoveryMaxBytesPerSec = defaults.indicesRecoveryMaxBytesPerSec;
    	      this.indicesRecoveryMaxConcurrentFileChunks = defaults.indicesRecoveryMaxConcurrentFileChunks;
    	      this.ismEnabled = defaults.ismEnabled;
    	      this.ismHistoryEnabled = defaults.ismHistoryEnabled;
    	      this.ismHistoryMaxAge = defaults.ismHistoryMaxAge;
    	      this.ismHistoryMaxDocs = defaults.ismHistoryMaxDocs;
    	      this.ismHistoryRolloverCheckPeriod = defaults.ismHistoryRolloverCheckPeriod;
    	      this.ismHistoryRolloverRetentionPeriod = defaults.ismHistoryRolloverRetentionPeriod;
    	      this.knnMemoryCircuitBreakerEnabled = defaults.knnMemoryCircuitBreakerEnabled;
    	      this.knnMemoryCircuitBreakerLimit = defaults.knnMemoryCircuitBreakerLimit;
    	      this.overrideMainResponseVersion = defaults.overrideMainResponseVersion;
    	      this.pluginsAlertingFilterByBackendRoles = defaults.pluginsAlertingFilterByBackendRoles;
    	      this.reindexRemoteWhitelists = defaults.reindexRemoteWhitelists;
    	      this.scriptMaxCompilationsRate = defaults.scriptMaxCompilationsRate;
    	      this.searchBackpressure = defaults.searchBackpressure;
    	      this.searchInsightsTopQueries = defaults.searchInsightsTopQueries;
    	      this.searchMaxBuckets = defaults.searchMaxBuckets;
    	      this.shardIndexingPressure = defaults.shardIndexingPressure;
    	      this.threadPoolAnalyzeQueueSize = defaults.threadPoolAnalyzeQueueSize;
    	      this.threadPoolAnalyzeSize = defaults.threadPoolAnalyzeSize;
    	      this.threadPoolForceMergeSize = defaults.threadPoolForceMergeSize;
    	      this.threadPoolGetQueueSize = defaults.threadPoolGetQueueSize;
    	      this.threadPoolGetSize = defaults.threadPoolGetSize;
    	      this.threadPoolSearchQueueSize = defaults.threadPoolSearchQueueSize;
    	      this.threadPoolSearchSize = defaults.threadPoolSearchSize;
    	      this.threadPoolSearchThrottledQueueSize = defaults.threadPoolSearchThrottledQueueSize;
    	      this.threadPoolSearchThrottledSize = defaults.threadPoolSearchThrottledSize;
    	      this.threadPoolWriteQueueSize = defaults.threadPoolWriteQueueSize;
    	      this.threadPoolWriteSize = defaults.threadPoolWriteSize;
        }

        @CustomType.Setter
        public Builder actionAutoCreateIndexEnabled(@Nullable Boolean actionAutoCreateIndexEnabled) {

            this.actionAutoCreateIndexEnabled = actionAutoCreateIndexEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder actionDestructiveRequiresName(@Nullable Boolean actionDestructiveRequiresName) {

            this.actionDestructiveRequiresName = actionDestructiveRequiresName;
            return this;
        }
        @CustomType.Setter
        public Builder authFailureListeners(@Nullable OpenSearchOpensearchUserConfigOpensearchAuthFailureListeners authFailureListeners) {

            this.authFailureListeners = authFailureListeners;
            return this;
        }
        @CustomType.Setter
        public Builder clusterMaxShardsPerNode(@Nullable Integer clusterMaxShardsPerNode) {

            this.clusterMaxShardsPerNode = clusterMaxShardsPerNode;
            return this;
        }
        @CustomType.Setter
        public Builder clusterRoutingAllocationNodeConcurrentRecoveries(@Nullable Integer clusterRoutingAllocationNodeConcurrentRecoveries) {

            this.clusterRoutingAllocationNodeConcurrentRecoveries = clusterRoutingAllocationNodeConcurrentRecoveries;
            return this;
        }
        @CustomType.Setter
        public Builder emailSenderName(@Nullable String emailSenderName) {

            this.emailSenderName = emailSenderName;
            return this;
        }
        @CustomType.Setter
        public Builder emailSenderPassword(@Nullable String emailSenderPassword) {

            this.emailSenderPassword = emailSenderPassword;
            return this;
        }
        @CustomType.Setter
        public Builder emailSenderUsername(@Nullable String emailSenderUsername) {

            this.emailSenderUsername = emailSenderUsername;
            return this;
        }
        @CustomType.Setter
        public Builder enableSecurityAudit(@Nullable Boolean enableSecurityAudit) {

            this.enableSecurityAudit = enableSecurityAudit;
            return this;
        }
        @CustomType.Setter
        public Builder httpMaxContentLength(@Nullable Integer httpMaxContentLength) {

            this.httpMaxContentLength = httpMaxContentLength;
            return this;
        }
        @CustomType.Setter
        public Builder httpMaxHeaderSize(@Nullable Integer httpMaxHeaderSize) {

            this.httpMaxHeaderSize = httpMaxHeaderSize;
            return this;
        }
        @CustomType.Setter
        public Builder httpMaxInitialLineLength(@Nullable Integer httpMaxInitialLineLength) {

            this.httpMaxInitialLineLength = httpMaxInitialLineLength;
            return this;
        }
        @CustomType.Setter
        public Builder indicesFielddataCacheSize(@Nullable Integer indicesFielddataCacheSize) {

            this.indicesFielddataCacheSize = indicesFielddataCacheSize;
            return this;
        }
        @CustomType.Setter
        public Builder indicesMemoryIndexBufferSize(@Nullable Integer indicesMemoryIndexBufferSize) {

            this.indicesMemoryIndexBufferSize = indicesMemoryIndexBufferSize;
            return this;
        }
        @CustomType.Setter
        public Builder indicesMemoryMaxIndexBufferSize(@Nullable Integer indicesMemoryMaxIndexBufferSize) {

            this.indicesMemoryMaxIndexBufferSize = indicesMemoryMaxIndexBufferSize;
            return this;
        }
        @CustomType.Setter
        public Builder indicesMemoryMinIndexBufferSize(@Nullable Integer indicesMemoryMinIndexBufferSize) {

            this.indicesMemoryMinIndexBufferSize = indicesMemoryMinIndexBufferSize;
            return this;
        }
        @CustomType.Setter
        public Builder indicesQueriesCacheSize(@Nullable Integer indicesQueriesCacheSize) {

            this.indicesQueriesCacheSize = indicesQueriesCacheSize;
            return this;
        }
        @CustomType.Setter
        public Builder indicesQueryBoolMaxClauseCount(@Nullable Integer indicesQueryBoolMaxClauseCount) {

            this.indicesQueryBoolMaxClauseCount = indicesQueryBoolMaxClauseCount;
            return this;
        }
        @CustomType.Setter
        public Builder indicesRecoveryMaxBytesPerSec(@Nullable Integer indicesRecoveryMaxBytesPerSec) {

            this.indicesRecoveryMaxBytesPerSec = indicesRecoveryMaxBytesPerSec;
            return this;
        }
        @CustomType.Setter
        public Builder indicesRecoveryMaxConcurrentFileChunks(@Nullable Integer indicesRecoveryMaxConcurrentFileChunks) {

            this.indicesRecoveryMaxConcurrentFileChunks = indicesRecoveryMaxConcurrentFileChunks;
            return this;
        }
        @CustomType.Setter
        public Builder ismEnabled(@Nullable Boolean ismEnabled) {

            this.ismEnabled = ismEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder ismHistoryEnabled(@Nullable Boolean ismHistoryEnabled) {

            this.ismHistoryEnabled = ismHistoryEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder ismHistoryMaxAge(@Nullable Integer ismHistoryMaxAge) {

            this.ismHistoryMaxAge = ismHistoryMaxAge;
            return this;
        }
        @CustomType.Setter
        public Builder ismHistoryMaxDocs(@Nullable Integer ismHistoryMaxDocs) {

            this.ismHistoryMaxDocs = ismHistoryMaxDocs;
            return this;
        }
        @CustomType.Setter
        public Builder ismHistoryRolloverCheckPeriod(@Nullable Integer ismHistoryRolloverCheckPeriod) {

            this.ismHistoryRolloverCheckPeriod = ismHistoryRolloverCheckPeriod;
            return this;
        }
        @CustomType.Setter
        public Builder ismHistoryRolloverRetentionPeriod(@Nullable Integer ismHistoryRolloverRetentionPeriod) {

            this.ismHistoryRolloverRetentionPeriod = ismHistoryRolloverRetentionPeriod;
            return this;
        }
        @CustomType.Setter
        public Builder knnMemoryCircuitBreakerEnabled(@Nullable Boolean knnMemoryCircuitBreakerEnabled) {

            this.knnMemoryCircuitBreakerEnabled = knnMemoryCircuitBreakerEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder knnMemoryCircuitBreakerLimit(@Nullable Integer knnMemoryCircuitBreakerLimit) {

            this.knnMemoryCircuitBreakerLimit = knnMemoryCircuitBreakerLimit;
            return this;
        }
        @CustomType.Setter
        public Builder overrideMainResponseVersion(@Nullable Boolean overrideMainResponseVersion) {

            this.overrideMainResponseVersion = overrideMainResponseVersion;
            return this;
        }
        @CustomType.Setter
        public Builder pluginsAlertingFilterByBackendRoles(@Nullable Boolean pluginsAlertingFilterByBackendRoles) {

            this.pluginsAlertingFilterByBackendRoles = pluginsAlertingFilterByBackendRoles;
            return this;
        }
        @CustomType.Setter
        public Builder reindexRemoteWhitelists(@Nullable List<String> reindexRemoteWhitelists) {

            this.reindexRemoteWhitelists = reindexRemoteWhitelists;
            return this;
        }
        public Builder reindexRemoteWhitelists(String... reindexRemoteWhitelists) {
            return reindexRemoteWhitelists(List.of(reindexRemoteWhitelists));
        }
        @CustomType.Setter
        public Builder scriptMaxCompilationsRate(@Nullable String scriptMaxCompilationsRate) {

            this.scriptMaxCompilationsRate = scriptMaxCompilationsRate;
            return this;
        }
        @CustomType.Setter
        public Builder searchBackpressure(@Nullable OpenSearchOpensearchUserConfigOpensearchSearchBackpressure searchBackpressure) {

            this.searchBackpressure = searchBackpressure;
            return this;
        }
        @CustomType.Setter
        public Builder searchInsightsTopQueries(@Nullable OpenSearchOpensearchUserConfigOpensearchSearchInsightsTopQueries searchInsightsTopQueries) {

            this.searchInsightsTopQueries = searchInsightsTopQueries;
            return this;
        }
        @CustomType.Setter
        public Builder searchMaxBuckets(@Nullable Integer searchMaxBuckets) {

            this.searchMaxBuckets = searchMaxBuckets;
            return this;
        }
        @CustomType.Setter
        public Builder shardIndexingPressure(@Nullable OpenSearchOpensearchUserConfigOpensearchShardIndexingPressure shardIndexingPressure) {

            this.shardIndexingPressure = shardIndexingPressure;
            return this;
        }
        @CustomType.Setter
        public Builder threadPoolAnalyzeQueueSize(@Nullable Integer threadPoolAnalyzeQueueSize) {

            this.threadPoolAnalyzeQueueSize = threadPoolAnalyzeQueueSize;
            return this;
        }
        @CustomType.Setter
        public Builder threadPoolAnalyzeSize(@Nullable Integer threadPoolAnalyzeSize) {

            this.threadPoolAnalyzeSize = threadPoolAnalyzeSize;
            return this;
        }
        @CustomType.Setter
        public Builder threadPoolForceMergeSize(@Nullable Integer threadPoolForceMergeSize) {

            this.threadPoolForceMergeSize = threadPoolForceMergeSize;
            return this;
        }
        @CustomType.Setter
        public Builder threadPoolGetQueueSize(@Nullable Integer threadPoolGetQueueSize) {

            this.threadPoolGetQueueSize = threadPoolGetQueueSize;
            return this;
        }
        @CustomType.Setter
        public Builder threadPoolGetSize(@Nullable Integer threadPoolGetSize) {

            this.threadPoolGetSize = threadPoolGetSize;
            return this;
        }
        @CustomType.Setter
        public Builder threadPoolSearchQueueSize(@Nullable Integer threadPoolSearchQueueSize) {

            this.threadPoolSearchQueueSize = threadPoolSearchQueueSize;
            return this;
        }
        @CustomType.Setter
        public Builder threadPoolSearchSize(@Nullable Integer threadPoolSearchSize) {

            this.threadPoolSearchSize = threadPoolSearchSize;
            return this;
        }
        @CustomType.Setter
        public Builder threadPoolSearchThrottledQueueSize(@Nullable Integer threadPoolSearchThrottledQueueSize) {

            this.threadPoolSearchThrottledQueueSize = threadPoolSearchThrottledQueueSize;
            return this;
        }
        @CustomType.Setter
        public Builder threadPoolSearchThrottledSize(@Nullable Integer threadPoolSearchThrottledSize) {

            this.threadPoolSearchThrottledSize = threadPoolSearchThrottledSize;
            return this;
        }
        @CustomType.Setter
        public Builder threadPoolWriteQueueSize(@Nullable Integer threadPoolWriteQueueSize) {

            this.threadPoolWriteQueueSize = threadPoolWriteQueueSize;
            return this;
        }
        @CustomType.Setter
        public Builder threadPoolWriteSize(@Nullable Integer threadPoolWriteSize) {

            this.threadPoolWriteSize = threadPoolWriteSize;
            return this;
        }
        public OpenSearchOpensearchUserConfigOpensearch build() {
            final var _resultValue = new OpenSearchOpensearchUserConfigOpensearch();
            _resultValue.actionAutoCreateIndexEnabled = actionAutoCreateIndexEnabled;
            _resultValue.actionDestructiveRequiresName = actionDestructiveRequiresName;
            _resultValue.authFailureListeners = authFailureListeners;
            _resultValue.clusterMaxShardsPerNode = clusterMaxShardsPerNode;
            _resultValue.clusterRoutingAllocationNodeConcurrentRecoveries = clusterRoutingAllocationNodeConcurrentRecoveries;
            _resultValue.emailSenderName = emailSenderName;
            _resultValue.emailSenderPassword = emailSenderPassword;
            _resultValue.emailSenderUsername = emailSenderUsername;
            _resultValue.enableSecurityAudit = enableSecurityAudit;
            _resultValue.httpMaxContentLength = httpMaxContentLength;
            _resultValue.httpMaxHeaderSize = httpMaxHeaderSize;
            _resultValue.httpMaxInitialLineLength = httpMaxInitialLineLength;
            _resultValue.indicesFielddataCacheSize = indicesFielddataCacheSize;
            _resultValue.indicesMemoryIndexBufferSize = indicesMemoryIndexBufferSize;
            _resultValue.indicesMemoryMaxIndexBufferSize = indicesMemoryMaxIndexBufferSize;
            _resultValue.indicesMemoryMinIndexBufferSize = indicesMemoryMinIndexBufferSize;
            _resultValue.indicesQueriesCacheSize = indicesQueriesCacheSize;
            _resultValue.indicesQueryBoolMaxClauseCount = indicesQueryBoolMaxClauseCount;
            _resultValue.indicesRecoveryMaxBytesPerSec = indicesRecoveryMaxBytesPerSec;
            _resultValue.indicesRecoveryMaxConcurrentFileChunks = indicesRecoveryMaxConcurrentFileChunks;
            _resultValue.ismEnabled = ismEnabled;
            _resultValue.ismHistoryEnabled = ismHistoryEnabled;
            _resultValue.ismHistoryMaxAge = ismHistoryMaxAge;
            _resultValue.ismHistoryMaxDocs = ismHistoryMaxDocs;
            _resultValue.ismHistoryRolloverCheckPeriod = ismHistoryRolloverCheckPeriod;
            _resultValue.ismHistoryRolloverRetentionPeriod = ismHistoryRolloverRetentionPeriod;
            _resultValue.knnMemoryCircuitBreakerEnabled = knnMemoryCircuitBreakerEnabled;
            _resultValue.knnMemoryCircuitBreakerLimit = knnMemoryCircuitBreakerLimit;
            _resultValue.overrideMainResponseVersion = overrideMainResponseVersion;
            _resultValue.pluginsAlertingFilterByBackendRoles = pluginsAlertingFilterByBackendRoles;
            _resultValue.reindexRemoteWhitelists = reindexRemoteWhitelists;
            _resultValue.scriptMaxCompilationsRate = scriptMaxCompilationsRate;
            _resultValue.searchBackpressure = searchBackpressure;
            _resultValue.searchInsightsTopQueries = searchInsightsTopQueries;
            _resultValue.searchMaxBuckets = searchMaxBuckets;
            _resultValue.shardIndexingPressure = shardIndexingPressure;
            _resultValue.threadPoolAnalyzeQueueSize = threadPoolAnalyzeQueueSize;
            _resultValue.threadPoolAnalyzeSize = threadPoolAnalyzeSize;
            _resultValue.threadPoolForceMergeSize = threadPoolForceMergeSize;
            _resultValue.threadPoolGetQueueSize = threadPoolGetQueueSize;
            _resultValue.threadPoolGetSize = threadPoolGetSize;
            _resultValue.threadPoolSearchQueueSize = threadPoolSearchQueueSize;
            _resultValue.threadPoolSearchSize = threadPoolSearchSize;
            _resultValue.threadPoolSearchThrottledQueueSize = threadPoolSearchThrottledQueueSize;
            _resultValue.threadPoolSearchThrottledSize = threadPoolSearchThrottledSize;
            _resultValue.threadPoolWriteQueueSize = threadPoolWriteQueueSize;
            _resultValue.threadPoolWriteSize = threadPoolWriteSize;
            return _resultValue;
        }
    }
}
