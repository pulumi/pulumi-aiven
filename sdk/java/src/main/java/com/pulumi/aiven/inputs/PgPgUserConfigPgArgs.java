// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PgPgUserConfigPgArgs extends com.pulumi.resources.ResourceArgs {

    public static final PgPgUserConfigPgArgs Empty = new PgPgUserConfigPgArgs();

    @Import(name="autovacuumAnalyzeScaleFactor")
    private @Nullable Output<String> autovacuumAnalyzeScaleFactor;

    public Optional<Output<String>> autovacuumAnalyzeScaleFactor() {
        return Optional.ofNullable(this.autovacuumAnalyzeScaleFactor);
    }

    @Import(name="autovacuumAnalyzeThreshold")
    private @Nullable Output<String> autovacuumAnalyzeThreshold;

    public Optional<Output<String>> autovacuumAnalyzeThreshold() {
        return Optional.ofNullable(this.autovacuumAnalyzeThreshold);
    }

    @Import(name="autovacuumFreezeMaxAge")
    private @Nullable Output<String> autovacuumFreezeMaxAge;

    public Optional<Output<String>> autovacuumFreezeMaxAge() {
        return Optional.ofNullable(this.autovacuumFreezeMaxAge);
    }

    @Import(name="autovacuumMaxWorkers")
    private @Nullable Output<String> autovacuumMaxWorkers;

    public Optional<Output<String>> autovacuumMaxWorkers() {
        return Optional.ofNullable(this.autovacuumMaxWorkers);
    }

    @Import(name="autovacuumNaptime")
    private @Nullable Output<String> autovacuumNaptime;

    public Optional<Output<String>> autovacuumNaptime() {
        return Optional.ofNullable(this.autovacuumNaptime);
    }

    @Import(name="autovacuumVacuumCostDelay")
    private @Nullable Output<String> autovacuumVacuumCostDelay;

    public Optional<Output<String>> autovacuumVacuumCostDelay() {
        return Optional.ofNullable(this.autovacuumVacuumCostDelay);
    }

    @Import(name="autovacuumVacuumCostLimit")
    private @Nullable Output<String> autovacuumVacuumCostLimit;

    public Optional<Output<String>> autovacuumVacuumCostLimit() {
        return Optional.ofNullable(this.autovacuumVacuumCostLimit);
    }

    @Import(name="autovacuumVacuumScaleFactor")
    private @Nullable Output<String> autovacuumVacuumScaleFactor;

    public Optional<Output<String>> autovacuumVacuumScaleFactor() {
        return Optional.ofNullable(this.autovacuumVacuumScaleFactor);
    }

    @Import(name="autovacuumVacuumThreshold")
    private @Nullable Output<String> autovacuumVacuumThreshold;

    public Optional<Output<String>> autovacuumVacuumThreshold() {
        return Optional.ofNullable(this.autovacuumVacuumThreshold);
    }

    @Import(name="bgwriterDelay")
    private @Nullable Output<String> bgwriterDelay;

    public Optional<Output<String>> bgwriterDelay() {
        return Optional.ofNullable(this.bgwriterDelay);
    }

    @Import(name="bgwriterFlushAfter")
    private @Nullable Output<String> bgwriterFlushAfter;

    public Optional<Output<String>> bgwriterFlushAfter() {
        return Optional.ofNullable(this.bgwriterFlushAfter);
    }

    @Import(name="bgwriterLruMaxpages")
    private @Nullable Output<String> bgwriterLruMaxpages;

    public Optional<Output<String>> bgwriterLruMaxpages() {
        return Optional.ofNullable(this.bgwriterLruMaxpages);
    }

    @Import(name="bgwriterLruMultiplier")
    private @Nullable Output<String> bgwriterLruMultiplier;

    public Optional<Output<String>> bgwriterLruMultiplier() {
        return Optional.ofNullable(this.bgwriterLruMultiplier);
    }

    @Import(name="deadlockTimeout")
    private @Nullable Output<String> deadlockTimeout;

    public Optional<Output<String>> deadlockTimeout() {
        return Optional.ofNullable(this.deadlockTimeout);
    }

    @Import(name="defaultToastCompression")
    private @Nullable Output<String> defaultToastCompression;

    public Optional<Output<String>> defaultToastCompression() {
        return Optional.ofNullable(this.defaultToastCompression);
    }

    @Import(name="idleInTransactionSessionTimeout")
    private @Nullable Output<String> idleInTransactionSessionTimeout;

    public Optional<Output<String>> idleInTransactionSessionTimeout() {
        return Optional.ofNullable(this.idleInTransactionSessionTimeout);
    }

    @Import(name="jit")
    private @Nullable Output<String> jit;

    public Optional<Output<String>> jit() {
        return Optional.ofNullable(this.jit);
    }

    @Import(name="logAutovacuumMinDuration")
    private @Nullable Output<String> logAutovacuumMinDuration;

    public Optional<Output<String>> logAutovacuumMinDuration() {
        return Optional.ofNullable(this.logAutovacuumMinDuration);
    }

    @Import(name="logErrorVerbosity")
    private @Nullable Output<String> logErrorVerbosity;

    public Optional<Output<String>> logErrorVerbosity() {
        return Optional.ofNullable(this.logErrorVerbosity);
    }

    @Import(name="logLinePrefix")
    private @Nullable Output<String> logLinePrefix;

    public Optional<Output<String>> logLinePrefix() {
        return Optional.ofNullable(this.logLinePrefix);
    }

    @Import(name="logMinDurationStatement")
    private @Nullable Output<String> logMinDurationStatement;

    public Optional<Output<String>> logMinDurationStatement() {
        return Optional.ofNullable(this.logMinDurationStatement);
    }

    @Import(name="logTempFiles")
    private @Nullable Output<String> logTempFiles;

    public Optional<Output<String>> logTempFiles() {
        return Optional.ofNullable(this.logTempFiles);
    }

    @Import(name="maxFilesPerProcess")
    private @Nullable Output<String> maxFilesPerProcess;

    public Optional<Output<String>> maxFilesPerProcess() {
        return Optional.ofNullable(this.maxFilesPerProcess);
    }

    @Import(name="maxLocksPerTransaction")
    private @Nullable Output<String> maxLocksPerTransaction;

    public Optional<Output<String>> maxLocksPerTransaction() {
        return Optional.ofNullable(this.maxLocksPerTransaction);
    }

    @Import(name="maxLogicalReplicationWorkers")
    private @Nullable Output<String> maxLogicalReplicationWorkers;

    public Optional<Output<String>> maxLogicalReplicationWorkers() {
        return Optional.ofNullable(this.maxLogicalReplicationWorkers);
    }

    @Import(name="maxParallelWorkers")
    private @Nullable Output<String> maxParallelWorkers;

    public Optional<Output<String>> maxParallelWorkers() {
        return Optional.ofNullable(this.maxParallelWorkers);
    }

    @Import(name="maxParallelWorkersPerGather")
    private @Nullable Output<String> maxParallelWorkersPerGather;

    public Optional<Output<String>> maxParallelWorkersPerGather() {
        return Optional.ofNullable(this.maxParallelWorkersPerGather);
    }

    @Import(name="maxPredLocksPerTransaction")
    private @Nullable Output<String> maxPredLocksPerTransaction;

    public Optional<Output<String>> maxPredLocksPerTransaction() {
        return Optional.ofNullable(this.maxPredLocksPerTransaction);
    }

    @Import(name="maxPreparedTransactions")
    private @Nullable Output<String> maxPreparedTransactions;

    public Optional<Output<String>> maxPreparedTransactions() {
        return Optional.ofNullable(this.maxPreparedTransactions);
    }

    @Import(name="maxReplicationSlots")
    private @Nullable Output<String> maxReplicationSlots;

    public Optional<Output<String>> maxReplicationSlots() {
        return Optional.ofNullable(this.maxReplicationSlots);
    }

    @Import(name="maxSlotWalKeepSize")
    private @Nullable Output<String> maxSlotWalKeepSize;

    public Optional<Output<String>> maxSlotWalKeepSize() {
        return Optional.ofNullable(this.maxSlotWalKeepSize);
    }

    @Import(name="maxStackDepth")
    private @Nullable Output<String> maxStackDepth;

    public Optional<Output<String>> maxStackDepth() {
        return Optional.ofNullable(this.maxStackDepth);
    }

    @Import(name="maxStandbyArchiveDelay")
    private @Nullable Output<String> maxStandbyArchiveDelay;

    public Optional<Output<String>> maxStandbyArchiveDelay() {
        return Optional.ofNullable(this.maxStandbyArchiveDelay);
    }

    @Import(name="maxStandbyStreamingDelay")
    private @Nullable Output<String> maxStandbyStreamingDelay;

    public Optional<Output<String>> maxStandbyStreamingDelay() {
        return Optional.ofNullable(this.maxStandbyStreamingDelay);
    }

    @Import(name="maxWalSenders")
    private @Nullable Output<String> maxWalSenders;

    public Optional<Output<String>> maxWalSenders() {
        return Optional.ofNullable(this.maxWalSenders);
    }

    @Import(name="maxWorkerProcesses")
    private @Nullable Output<String> maxWorkerProcesses;

    public Optional<Output<String>> maxWorkerProcesses() {
        return Optional.ofNullable(this.maxWorkerProcesses);
    }

    @Import(name="pgPartmanBgwDotInterval")
    private @Nullable Output<String> pgPartmanBgwDotInterval;

    public Optional<Output<String>> pgPartmanBgwDotInterval() {
        return Optional.ofNullable(this.pgPartmanBgwDotInterval);
    }

    @Import(name="pgPartmanBgwDotRole")
    private @Nullable Output<String> pgPartmanBgwDotRole;

    public Optional<Output<String>> pgPartmanBgwDotRole() {
        return Optional.ofNullable(this.pgPartmanBgwDotRole);
    }

    @Import(name="pgStatStatementsDotTrack")
    private @Nullable Output<String> pgStatStatementsDotTrack;

    public Optional<Output<String>> pgStatStatementsDotTrack() {
        return Optional.ofNullable(this.pgStatStatementsDotTrack);
    }

    @Import(name="tempFileLimit")
    private @Nullable Output<String> tempFileLimit;

    public Optional<Output<String>> tempFileLimit() {
        return Optional.ofNullable(this.tempFileLimit);
    }

    @Import(name="timezone")
    private @Nullable Output<String> timezone;

    public Optional<Output<String>> timezone() {
        return Optional.ofNullable(this.timezone);
    }

    @Import(name="trackActivityQuerySize")
    private @Nullable Output<String> trackActivityQuerySize;

    public Optional<Output<String>> trackActivityQuerySize() {
        return Optional.ofNullable(this.trackActivityQuerySize);
    }

    @Import(name="trackCommitTimestamp")
    private @Nullable Output<String> trackCommitTimestamp;

    public Optional<Output<String>> trackCommitTimestamp() {
        return Optional.ofNullable(this.trackCommitTimestamp);
    }

    @Import(name="trackFunctions")
    private @Nullable Output<String> trackFunctions;

    public Optional<Output<String>> trackFunctions() {
        return Optional.ofNullable(this.trackFunctions);
    }

    @Import(name="trackIoTiming")
    private @Nullable Output<String> trackIoTiming;

    public Optional<Output<String>> trackIoTiming() {
        return Optional.ofNullable(this.trackIoTiming);
    }

    @Import(name="walSenderTimeout")
    private @Nullable Output<String> walSenderTimeout;

    public Optional<Output<String>> walSenderTimeout() {
        return Optional.ofNullable(this.walSenderTimeout);
    }

    @Import(name="walWriterDelay")
    private @Nullable Output<String> walWriterDelay;

    public Optional<Output<String>> walWriterDelay() {
        return Optional.ofNullable(this.walWriterDelay);
    }

    private PgPgUserConfigPgArgs() {}

    private PgPgUserConfigPgArgs(PgPgUserConfigPgArgs $) {
        this.autovacuumAnalyzeScaleFactor = $.autovacuumAnalyzeScaleFactor;
        this.autovacuumAnalyzeThreshold = $.autovacuumAnalyzeThreshold;
        this.autovacuumFreezeMaxAge = $.autovacuumFreezeMaxAge;
        this.autovacuumMaxWorkers = $.autovacuumMaxWorkers;
        this.autovacuumNaptime = $.autovacuumNaptime;
        this.autovacuumVacuumCostDelay = $.autovacuumVacuumCostDelay;
        this.autovacuumVacuumCostLimit = $.autovacuumVacuumCostLimit;
        this.autovacuumVacuumScaleFactor = $.autovacuumVacuumScaleFactor;
        this.autovacuumVacuumThreshold = $.autovacuumVacuumThreshold;
        this.bgwriterDelay = $.bgwriterDelay;
        this.bgwriterFlushAfter = $.bgwriterFlushAfter;
        this.bgwriterLruMaxpages = $.bgwriterLruMaxpages;
        this.bgwriterLruMultiplier = $.bgwriterLruMultiplier;
        this.deadlockTimeout = $.deadlockTimeout;
        this.defaultToastCompression = $.defaultToastCompression;
        this.idleInTransactionSessionTimeout = $.idleInTransactionSessionTimeout;
        this.jit = $.jit;
        this.logAutovacuumMinDuration = $.logAutovacuumMinDuration;
        this.logErrorVerbosity = $.logErrorVerbosity;
        this.logLinePrefix = $.logLinePrefix;
        this.logMinDurationStatement = $.logMinDurationStatement;
        this.logTempFiles = $.logTempFiles;
        this.maxFilesPerProcess = $.maxFilesPerProcess;
        this.maxLocksPerTransaction = $.maxLocksPerTransaction;
        this.maxLogicalReplicationWorkers = $.maxLogicalReplicationWorkers;
        this.maxParallelWorkers = $.maxParallelWorkers;
        this.maxParallelWorkersPerGather = $.maxParallelWorkersPerGather;
        this.maxPredLocksPerTransaction = $.maxPredLocksPerTransaction;
        this.maxPreparedTransactions = $.maxPreparedTransactions;
        this.maxReplicationSlots = $.maxReplicationSlots;
        this.maxSlotWalKeepSize = $.maxSlotWalKeepSize;
        this.maxStackDepth = $.maxStackDepth;
        this.maxStandbyArchiveDelay = $.maxStandbyArchiveDelay;
        this.maxStandbyStreamingDelay = $.maxStandbyStreamingDelay;
        this.maxWalSenders = $.maxWalSenders;
        this.maxWorkerProcesses = $.maxWorkerProcesses;
        this.pgPartmanBgwDotInterval = $.pgPartmanBgwDotInterval;
        this.pgPartmanBgwDotRole = $.pgPartmanBgwDotRole;
        this.pgStatStatementsDotTrack = $.pgStatStatementsDotTrack;
        this.tempFileLimit = $.tempFileLimit;
        this.timezone = $.timezone;
        this.trackActivityQuerySize = $.trackActivityQuerySize;
        this.trackCommitTimestamp = $.trackCommitTimestamp;
        this.trackFunctions = $.trackFunctions;
        this.trackIoTiming = $.trackIoTiming;
        this.walSenderTimeout = $.walSenderTimeout;
        this.walWriterDelay = $.walWriterDelay;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PgPgUserConfigPgArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PgPgUserConfigPgArgs $;

        public Builder() {
            $ = new PgPgUserConfigPgArgs();
        }

        public Builder(PgPgUserConfigPgArgs defaults) {
            $ = new PgPgUserConfigPgArgs(Objects.requireNonNull(defaults));
        }

        public Builder autovacuumAnalyzeScaleFactor(@Nullable Output<String> autovacuumAnalyzeScaleFactor) {
            $.autovacuumAnalyzeScaleFactor = autovacuumAnalyzeScaleFactor;
            return this;
        }

        public Builder autovacuumAnalyzeScaleFactor(String autovacuumAnalyzeScaleFactor) {
            return autovacuumAnalyzeScaleFactor(Output.of(autovacuumAnalyzeScaleFactor));
        }

        public Builder autovacuumAnalyzeThreshold(@Nullable Output<String> autovacuumAnalyzeThreshold) {
            $.autovacuumAnalyzeThreshold = autovacuumAnalyzeThreshold;
            return this;
        }

        public Builder autovacuumAnalyzeThreshold(String autovacuumAnalyzeThreshold) {
            return autovacuumAnalyzeThreshold(Output.of(autovacuumAnalyzeThreshold));
        }

        public Builder autovacuumFreezeMaxAge(@Nullable Output<String> autovacuumFreezeMaxAge) {
            $.autovacuumFreezeMaxAge = autovacuumFreezeMaxAge;
            return this;
        }

        public Builder autovacuumFreezeMaxAge(String autovacuumFreezeMaxAge) {
            return autovacuumFreezeMaxAge(Output.of(autovacuumFreezeMaxAge));
        }

        public Builder autovacuumMaxWorkers(@Nullable Output<String> autovacuumMaxWorkers) {
            $.autovacuumMaxWorkers = autovacuumMaxWorkers;
            return this;
        }

        public Builder autovacuumMaxWorkers(String autovacuumMaxWorkers) {
            return autovacuumMaxWorkers(Output.of(autovacuumMaxWorkers));
        }

        public Builder autovacuumNaptime(@Nullable Output<String> autovacuumNaptime) {
            $.autovacuumNaptime = autovacuumNaptime;
            return this;
        }

        public Builder autovacuumNaptime(String autovacuumNaptime) {
            return autovacuumNaptime(Output.of(autovacuumNaptime));
        }

        public Builder autovacuumVacuumCostDelay(@Nullable Output<String> autovacuumVacuumCostDelay) {
            $.autovacuumVacuumCostDelay = autovacuumVacuumCostDelay;
            return this;
        }

        public Builder autovacuumVacuumCostDelay(String autovacuumVacuumCostDelay) {
            return autovacuumVacuumCostDelay(Output.of(autovacuumVacuumCostDelay));
        }

        public Builder autovacuumVacuumCostLimit(@Nullable Output<String> autovacuumVacuumCostLimit) {
            $.autovacuumVacuumCostLimit = autovacuumVacuumCostLimit;
            return this;
        }

        public Builder autovacuumVacuumCostLimit(String autovacuumVacuumCostLimit) {
            return autovacuumVacuumCostLimit(Output.of(autovacuumVacuumCostLimit));
        }

        public Builder autovacuumVacuumScaleFactor(@Nullable Output<String> autovacuumVacuumScaleFactor) {
            $.autovacuumVacuumScaleFactor = autovacuumVacuumScaleFactor;
            return this;
        }

        public Builder autovacuumVacuumScaleFactor(String autovacuumVacuumScaleFactor) {
            return autovacuumVacuumScaleFactor(Output.of(autovacuumVacuumScaleFactor));
        }

        public Builder autovacuumVacuumThreshold(@Nullable Output<String> autovacuumVacuumThreshold) {
            $.autovacuumVacuumThreshold = autovacuumVacuumThreshold;
            return this;
        }

        public Builder autovacuumVacuumThreshold(String autovacuumVacuumThreshold) {
            return autovacuumVacuumThreshold(Output.of(autovacuumVacuumThreshold));
        }

        public Builder bgwriterDelay(@Nullable Output<String> bgwriterDelay) {
            $.bgwriterDelay = bgwriterDelay;
            return this;
        }

        public Builder bgwriterDelay(String bgwriterDelay) {
            return bgwriterDelay(Output.of(bgwriterDelay));
        }

        public Builder bgwriterFlushAfter(@Nullable Output<String> bgwriterFlushAfter) {
            $.bgwriterFlushAfter = bgwriterFlushAfter;
            return this;
        }

        public Builder bgwriterFlushAfter(String bgwriterFlushAfter) {
            return bgwriterFlushAfter(Output.of(bgwriterFlushAfter));
        }

        public Builder bgwriterLruMaxpages(@Nullable Output<String> bgwriterLruMaxpages) {
            $.bgwriterLruMaxpages = bgwriterLruMaxpages;
            return this;
        }

        public Builder bgwriterLruMaxpages(String bgwriterLruMaxpages) {
            return bgwriterLruMaxpages(Output.of(bgwriterLruMaxpages));
        }

        public Builder bgwriterLruMultiplier(@Nullable Output<String> bgwriterLruMultiplier) {
            $.bgwriterLruMultiplier = bgwriterLruMultiplier;
            return this;
        }

        public Builder bgwriterLruMultiplier(String bgwriterLruMultiplier) {
            return bgwriterLruMultiplier(Output.of(bgwriterLruMultiplier));
        }

        public Builder deadlockTimeout(@Nullable Output<String> deadlockTimeout) {
            $.deadlockTimeout = deadlockTimeout;
            return this;
        }

        public Builder deadlockTimeout(String deadlockTimeout) {
            return deadlockTimeout(Output.of(deadlockTimeout));
        }

        public Builder defaultToastCompression(@Nullable Output<String> defaultToastCompression) {
            $.defaultToastCompression = defaultToastCompression;
            return this;
        }

        public Builder defaultToastCompression(String defaultToastCompression) {
            return defaultToastCompression(Output.of(defaultToastCompression));
        }

        public Builder idleInTransactionSessionTimeout(@Nullable Output<String> idleInTransactionSessionTimeout) {
            $.idleInTransactionSessionTimeout = idleInTransactionSessionTimeout;
            return this;
        }

        public Builder idleInTransactionSessionTimeout(String idleInTransactionSessionTimeout) {
            return idleInTransactionSessionTimeout(Output.of(idleInTransactionSessionTimeout));
        }

        public Builder jit(@Nullable Output<String> jit) {
            $.jit = jit;
            return this;
        }

        public Builder jit(String jit) {
            return jit(Output.of(jit));
        }

        public Builder logAutovacuumMinDuration(@Nullable Output<String> logAutovacuumMinDuration) {
            $.logAutovacuumMinDuration = logAutovacuumMinDuration;
            return this;
        }

        public Builder logAutovacuumMinDuration(String logAutovacuumMinDuration) {
            return logAutovacuumMinDuration(Output.of(logAutovacuumMinDuration));
        }

        public Builder logErrorVerbosity(@Nullable Output<String> logErrorVerbosity) {
            $.logErrorVerbosity = logErrorVerbosity;
            return this;
        }

        public Builder logErrorVerbosity(String logErrorVerbosity) {
            return logErrorVerbosity(Output.of(logErrorVerbosity));
        }

        public Builder logLinePrefix(@Nullable Output<String> logLinePrefix) {
            $.logLinePrefix = logLinePrefix;
            return this;
        }

        public Builder logLinePrefix(String logLinePrefix) {
            return logLinePrefix(Output.of(logLinePrefix));
        }

        public Builder logMinDurationStatement(@Nullable Output<String> logMinDurationStatement) {
            $.logMinDurationStatement = logMinDurationStatement;
            return this;
        }

        public Builder logMinDurationStatement(String logMinDurationStatement) {
            return logMinDurationStatement(Output.of(logMinDurationStatement));
        }

        public Builder logTempFiles(@Nullable Output<String> logTempFiles) {
            $.logTempFiles = logTempFiles;
            return this;
        }

        public Builder logTempFiles(String logTempFiles) {
            return logTempFiles(Output.of(logTempFiles));
        }

        public Builder maxFilesPerProcess(@Nullable Output<String> maxFilesPerProcess) {
            $.maxFilesPerProcess = maxFilesPerProcess;
            return this;
        }

        public Builder maxFilesPerProcess(String maxFilesPerProcess) {
            return maxFilesPerProcess(Output.of(maxFilesPerProcess));
        }

        public Builder maxLocksPerTransaction(@Nullable Output<String> maxLocksPerTransaction) {
            $.maxLocksPerTransaction = maxLocksPerTransaction;
            return this;
        }

        public Builder maxLocksPerTransaction(String maxLocksPerTransaction) {
            return maxLocksPerTransaction(Output.of(maxLocksPerTransaction));
        }

        public Builder maxLogicalReplicationWorkers(@Nullable Output<String> maxLogicalReplicationWorkers) {
            $.maxLogicalReplicationWorkers = maxLogicalReplicationWorkers;
            return this;
        }

        public Builder maxLogicalReplicationWorkers(String maxLogicalReplicationWorkers) {
            return maxLogicalReplicationWorkers(Output.of(maxLogicalReplicationWorkers));
        }

        public Builder maxParallelWorkers(@Nullable Output<String> maxParallelWorkers) {
            $.maxParallelWorkers = maxParallelWorkers;
            return this;
        }

        public Builder maxParallelWorkers(String maxParallelWorkers) {
            return maxParallelWorkers(Output.of(maxParallelWorkers));
        }

        public Builder maxParallelWorkersPerGather(@Nullable Output<String> maxParallelWorkersPerGather) {
            $.maxParallelWorkersPerGather = maxParallelWorkersPerGather;
            return this;
        }

        public Builder maxParallelWorkersPerGather(String maxParallelWorkersPerGather) {
            return maxParallelWorkersPerGather(Output.of(maxParallelWorkersPerGather));
        }

        public Builder maxPredLocksPerTransaction(@Nullable Output<String> maxPredLocksPerTransaction) {
            $.maxPredLocksPerTransaction = maxPredLocksPerTransaction;
            return this;
        }

        public Builder maxPredLocksPerTransaction(String maxPredLocksPerTransaction) {
            return maxPredLocksPerTransaction(Output.of(maxPredLocksPerTransaction));
        }

        public Builder maxPreparedTransactions(@Nullable Output<String> maxPreparedTransactions) {
            $.maxPreparedTransactions = maxPreparedTransactions;
            return this;
        }

        public Builder maxPreparedTransactions(String maxPreparedTransactions) {
            return maxPreparedTransactions(Output.of(maxPreparedTransactions));
        }

        public Builder maxReplicationSlots(@Nullable Output<String> maxReplicationSlots) {
            $.maxReplicationSlots = maxReplicationSlots;
            return this;
        }

        public Builder maxReplicationSlots(String maxReplicationSlots) {
            return maxReplicationSlots(Output.of(maxReplicationSlots));
        }

        public Builder maxSlotWalKeepSize(@Nullable Output<String> maxSlotWalKeepSize) {
            $.maxSlotWalKeepSize = maxSlotWalKeepSize;
            return this;
        }

        public Builder maxSlotWalKeepSize(String maxSlotWalKeepSize) {
            return maxSlotWalKeepSize(Output.of(maxSlotWalKeepSize));
        }

        public Builder maxStackDepth(@Nullable Output<String> maxStackDepth) {
            $.maxStackDepth = maxStackDepth;
            return this;
        }

        public Builder maxStackDepth(String maxStackDepth) {
            return maxStackDepth(Output.of(maxStackDepth));
        }

        public Builder maxStandbyArchiveDelay(@Nullable Output<String> maxStandbyArchiveDelay) {
            $.maxStandbyArchiveDelay = maxStandbyArchiveDelay;
            return this;
        }

        public Builder maxStandbyArchiveDelay(String maxStandbyArchiveDelay) {
            return maxStandbyArchiveDelay(Output.of(maxStandbyArchiveDelay));
        }

        public Builder maxStandbyStreamingDelay(@Nullable Output<String> maxStandbyStreamingDelay) {
            $.maxStandbyStreamingDelay = maxStandbyStreamingDelay;
            return this;
        }

        public Builder maxStandbyStreamingDelay(String maxStandbyStreamingDelay) {
            return maxStandbyStreamingDelay(Output.of(maxStandbyStreamingDelay));
        }

        public Builder maxWalSenders(@Nullable Output<String> maxWalSenders) {
            $.maxWalSenders = maxWalSenders;
            return this;
        }

        public Builder maxWalSenders(String maxWalSenders) {
            return maxWalSenders(Output.of(maxWalSenders));
        }

        public Builder maxWorkerProcesses(@Nullable Output<String> maxWorkerProcesses) {
            $.maxWorkerProcesses = maxWorkerProcesses;
            return this;
        }

        public Builder maxWorkerProcesses(String maxWorkerProcesses) {
            return maxWorkerProcesses(Output.of(maxWorkerProcesses));
        }

        public Builder pgPartmanBgwDotInterval(@Nullable Output<String> pgPartmanBgwDotInterval) {
            $.pgPartmanBgwDotInterval = pgPartmanBgwDotInterval;
            return this;
        }

        public Builder pgPartmanBgwDotInterval(String pgPartmanBgwDotInterval) {
            return pgPartmanBgwDotInterval(Output.of(pgPartmanBgwDotInterval));
        }

        public Builder pgPartmanBgwDotRole(@Nullable Output<String> pgPartmanBgwDotRole) {
            $.pgPartmanBgwDotRole = pgPartmanBgwDotRole;
            return this;
        }

        public Builder pgPartmanBgwDotRole(String pgPartmanBgwDotRole) {
            return pgPartmanBgwDotRole(Output.of(pgPartmanBgwDotRole));
        }

        public Builder pgStatStatementsDotTrack(@Nullable Output<String> pgStatStatementsDotTrack) {
            $.pgStatStatementsDotTrack = pgStatStatementsDotTrack;
            return this;
        }

        public Builder pgStatStatementsDotTrack(String pgStatStatementsDotTrack) {
            return pgStatStatementsDotTrack(Output.of(pgStatStatementsDotTrack));
        }

        public Builder tempFileLimit(@Nullable Output<String> tempFileLimit) {
            $.tempFileLimit = tempFileLimit;
            return this;
        }

        public Builder tempFileLimit(String tempFileLimit) {
            return tempFileLimit(Output.of(tempFileLimit));
        }

        public Builder timezone(@Nullable Output<String> timezone) {
            $.timezone = timezone;
            return this;
        }

        public Builder timezone(String timezone) {
            return timezone(Output.of(timezone));
        }

        public Builder trackActivityQuerySize(@Nullable Output<String> trackActivityQuerySize) {
            $.trackActivityQuerySize = trackActivityQuerySize;
            return this;
        }

        public Builder trackActivityQuerySize(String trackActivityQuerySize) {
            return trackActivityQuerySize(Output.of(trackActivityQuerySize));
        }

        public Builder trackCommitTimestamp(@Nullable Output<String> trackCommitTimestamp) {
            $.trackCommitTimestamp = trackCommitTimestamp;
            return this;
        }

        public Builder trackCommitTimestamp(String trackCommitTimestamp) {
            return trackCommitTimestamp(Output.of(trackCommitTimestamp));
        }

        public Builder trackFunctions(@Nullable Output<String> trackFunctions) {
            $.trackFunctions = trackFunctions;
            return this;
        }

        public Builder trackFunctions(String trackFunctions) {
            return trackFunctions(Output.of(trackFunctions));
        }

        public Builder trackIoTiming(@Nullable Output<String> trackIoTiming) {
            $.trackIoTiming = trackIoTiming;
            return this;
        }

        public Builder trackIoTiming(String trackIoTiming) {
            return trackIoTiming(Output.of(trackIoTiming));
        }

        public Builder walSenderTimeout(@Nullable Output<String> walSenderTimeout) {
            $.walSenderTimeout = walSenderTimeout;
            return this;
        }

        public Builder walSenderTimeout(String walSenderTimeout) {
            return walSenderTimeout(Output.of(walSenderTimeout));
        }

        public Builder walWriterDelay(@Nullable Output<String> walWriterDelay) {
            $.walWriterDelay = walWriterDelay;
            return this;
        }

        public Builder walWriterDelay(String walWriterDelay) {
            return walWriterDelay(Output.of(walWriterDelay));
        }

        public PgPgUserConfigPgArgs build() {
            return $;
        }
    }

}
