// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KafkaConnectKafkaConnectUserConfigIpFilterObjectArgs extends com.pulumi.resources.ResourceArgs {

    public static final KafkaConnectKafkaConnectUserConfigIpFilterObjectArgs Empty = new KafkaConnectKafkaConnectUserConfigIpFilterObjectArgs();

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="network", required=true)
    private Output<String> network;

    public Output<String> network() {
        return this.network;
    }

    private KafkaConnectKafkaConnectUserConfigIpFilterObjectArgs() {}

    private KafkaConnectKafkaConnectUserConfigIpFilterObjectArgs(KafkaConnectKafkaConnectUserConfigIpFilterObjectArgs $) {
        this.description = $.description;
        this.network = $.network;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KafkaConnectKafkaConnectUserConfigIpFilterObjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KafkaConnectKafkaConnectUserConfigIpFilterObjectArgs $;

        public Builder() {
            $ = new KafkaConnectKafkaConnectUserConfigIpFilterObjectArgs();
        }

        public Builder(KafkaConnectKafkaConnectUserConfigIpFilterObjectArgs defaults) {
            $ = new KafkaConnectKafkaConnectUserConfigIpFilterObjectArgs(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder network(Output<String> network) {
            $.network = network;
            return this;
        }

        public Builder network(String network) {
            return network(Output.of(network));
        }

        public KafkaConnectKafkaConnectUserConfigIpFilterObjectArgs build() {
            if ($.network == null) {
                throw new MissingRequiredPropertyException("KafkaConnectKafkaConnectUserConfigIpFilterObjectArgs", "network");
            }
            return $;
        }
    }

}
