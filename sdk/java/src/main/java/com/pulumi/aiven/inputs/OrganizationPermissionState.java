// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.aiven.inputs.OrganizationPermissionPermissionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OrganizationPermissionState extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationPermissionState Empty = new OrganizationPermissionState();

    /**
     * Organization ID
     * 
     */
    @Import(name="organizationId")
    private @Nullable Output<String> organizationId;

    /**
     * @return Organization ID
     * 
     */
    public Optional<Output<String>> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }

    /**
     * A permission to set
     * 
     */
    @Import(name="permissions")
    private @Nullable Output<List<OrganizationPermissionPermissionArgs>> permissions;

    /**
     * @return A permission to set
     * 
     */
    public Optional<Output<List<OrganizationPermissionPermissionArgs>>> permissions() {
        return Optional.ofNullable(this.permissions);
    }

    /**
     * Resource Id.
     * 
     */
    @Import(name="resourceId")
    private @Nullable Output<String> resourceId;

    /**
     * @return Resource Id.
     * 
     */
    public Optional<Output<String>> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    /**
     * Resource type. The possible values are `project`.
     * 
     */
    @Import(name="resourceType")
    private @Nullable Output<String> resourceType;

    /**
     * @return Resource type. The possible values are `project`.
     * 
     */
    public Optional<Output<String>> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    private OrganizationPermissionState() {}

    private OrganizationPermissionState(OrganizationPermissionState $) {
        this.organizationId = $.organizationId;
        this.permissions = $.permissions;
        this.resourceId = $.resourceId;
        this.resourceType = $.resourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationPermissionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationPermissionState $;

        public Builder() {
            $ = new OrganizationPermissionState();
        }

        public Builder(OrganizationPermissionState defaults) {
            $ = new OrganizationPermissionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param organizationId Organization ID
         * 
         * @return builder
         * 
         */
        public Builder organizationId(@Nullable Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId Organization ID
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        /**
         * @param permissions A permission to set
         * 
         * @return builder
         * 
         */
        public Builder permissions(@Nullable Output<List<OrganizationPermissionPermissionArgs>> permissions) {
            $.permissions = permissions;
            return this;
        }

        /**
         * @param permissions A permission to set
         * 
         * @return builder
         * 
         */
        public Builder permissions(List<OrganizationPermissionPermissionArgs> permissions) {
            return permissions(Output.of(permissions));
        }

        /**
         * @param permissions A permission to set
         * 
         * @return builder
         * 
         */
        public Builder permissions(OrganizationPermissionPermissionArgs... permissions) {
            return permissions(List.of(permissions));
        }

        /**
         * @param resourceId Resource Id.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(@Nullable Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId Resource Id.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        /**
         * @param resourceType Resource type. The possible values are `project`.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(@Nullable Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType Resource type. The possible values are `project`.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        public OrganizationPermissionState build() {
            return $;
        }
    }

}
