// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class FlinkJobArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlinkJobArgs Empty = new FlinkJobArgs();

    /**
     * Specifies the name of the service that this job is submitted to. To set up proper dependencies please refer to this
     * variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="jobName", required=true)
    private Output<String> jobName;

    /**
     * @return Specifies the name of the service that this job is submitted to. To set up proper dependencies please refer to this
     * variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public Output<String> jobName() {
        return this.jobName;
    }

    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
     * reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="project", required=true)
    private Output<String> project;

    /**
     * @return Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
     * reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this
     * variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this
     * variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    /**
     * The SQL statement to define the job. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="statement", required=true)
    private Output<String> statement;

    /**
     * @return The SQL statement to define the job. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public Output<String> statement() {
        return this.statement;
    }

    /**
     * A list of table ids that are required in the job runtime. To set up proper dependencies please refer to this variable as
     * a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="tableIds", required=true)
    private Output<List<String>> tableIds;

    /**
     * @return A list of table ids that are required in the job runtime. To set up proper dependencies please refer to this variable as
     * a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public Output<List<String>> tableIds() {
        return this.tableIds;
    }

    private FlinkJobArgs() {}

    private FlinkJobArgs(FlinkJobArgs $) {
        this.jobName = $.jobName;
        this.project = $.project;
        this.serviceName = $.serviceName;
        this.statement = $.statement;
        this.tableIds = $.tableIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlinkJobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlinkJobArgs $;

        public Builder() {
            $ = new FlinkJobArgs();
        }

        public Builder(FlinkJobArgs defaults) {
            $ = new FlinkJobArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param jobName Specifies the name of the service that this job is submitted to. To set up proper dependencies please refer to this
         * variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder jobName(Output<String> jobName) {
            $.jobName = jobName;
            return this;
        }

        /**
         * @param jobName Specifies the name of the service that this job is submitted to. To set up proper dependencies please refer to this
         * variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder jobName(String jobName) {
            return jobName(Output.of(jobName));
        }

        /**
         * @param project Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
         * reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
         * reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param serviceName Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this
         * variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this
         * variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param statement The SQL statement to define the job. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder statement(Output<String> statement) {
            $.statement = statement;
            return this;
        }

        /**
         * @param statement The SQL statement to define the job. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder statement(String statement) {
            return statement(Output.of(statement));
        }

        /**
         * @param tableIds A list of table ids that are required in the job runtime. To set up proper dependencies please refer to this variable as
         * a reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder tableIds(Output<List<String>> tableIds) {
            $.tableIds = tableIds;
            return this;
        }

        /**
         * @param tableIds A list of table ids that are required in the job runtime. To set up proper dependencies please refer to this variable as
         * a reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder tableIds(List<String> tableIds) {
            return tableIds(Output.of(tableIds));
        }

        /**
         * @param tableIds A list of table ids that are required in the job runtime. To set up proper dependencies please refer to this variable as
         * a reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder tableIds(String... tableIds) {
            return tableIds(List.of(tableIds));
        }

        public FlinkJobArgs build() {
            $.jobName = Objects.requireNonNull($.jobName, "expected parameter 'jobName' to be non-null");
            $.project = Objects.requireNonNull($.project, "expected parameter 'project' to be non-null");
            $.serviceName = Objects.requireNonNull($.serviceName, "expected parameter 'serviceName' to be non-null");
            $.statement = Objects.requireNonNull($.statement, "expected parameter 'statement' to be non-null");
            $.tableIds = Objects.requireNonNull($.tableIds, "expected parameter 'tableIds' to be non-null");
            return $;
        }
    }

}
