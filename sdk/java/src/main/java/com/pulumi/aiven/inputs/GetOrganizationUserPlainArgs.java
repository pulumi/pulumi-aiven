// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetOrganizationUserPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOrganizationUserPlainArgs Empty = new GetOrganizationUserPlainArgs();

    /**
     * The unique organization ID.
     * 
     */
    @Import(name="organizationId", required=true)
    private String organizationId;

    /**
     * @return The unique organization ID.
     * 
     */
    public String organizationId() {
        return this.organizationId;
    }

    /**
     * This is a user email address
     * 
     */
    @Import(name="userEmail")
    private @Nullable String userEmail;

    /**
     * @return This is a user email address
     * 
     */
    public Optional<String> userEmail() {
        return Optional.ofNullable(this.userEmail);
    }

    /**
     * The unique organization user ID
     * 
     */
    @Import(name="userId")
    private @Nullable String userId;

    /**
     * @return The unique organization user ID
     * 
     */
    public Optional<String> userId() {
        return Optional.ofNullable(this.userId);
    }

    private GetOrganizationUserPlainArgs() {}

    private GetOrganizationUserPlainArgs(GetOrganizationUserPlainArgs $) {
        this.organizationId = $.organizationId;
        this.userEmail = $.userEmail;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOrganizationUserPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOrganizationUserPlainArgs $;

        public Builder() {
            $ = new GetOrganizationUserPlainArgs();
        }

        public Builder(GetOrganizationUserPlainArgs defaults) {
            $ = new GetOrganizationUserPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param organizationId The unique organization ID.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param userEmail This is a user email address
         * 
         * @return builder
         * 
         */
        public Builder userEmail(@Nullable String userEmail) {
            $.userEmail = userEmail;
            return this;
        }

        /**
         * @param userId The unique organization user ID
         * 
         * @return builder
         * 
         */
        public Builder userId(@Nullable String userId) {
            $.userId = userId;
            return this;
        }

        public GetOrganizationUserPlainArgs build() {
            if ($.organizationId == null) {
                throw new MissingRequiredPropertyException("GetOrganizationUserPlainArgs", "organizationId");
            }
            return $;
        }
    }

}
