// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MirrorMakerReplicationFlowState extends com.pulumi.resources.ResourceArgs {

    public static final MirrorMakerReplicationFlowState Empty = new MirrorMakerReplicationFlowState();

    /**
     * Emit heartbeats enabled. The default value is `false`.
     * 
     */
    @Import(name="emitHeartbeatsEnabled")
    private @Nullable Output<Boolean> emitHeartbeatsEnabled;

    /**
     * @return Emit heartbeats enabled. The default value is `false`.
     * 
     */
    public Optional<Output<Boolean>> emitHeartbeatsEnabled() {
        return Optional.ofNullable(this.emitHeartbeatsEnabled);
    }

    /**
     * Enable of disable replication flows for a service.
     * 
     */
    @Import(name="enable")
    private @Nullable Output<Boolean> enable;

    /**
     * @return Enable of disable replication flows for a service.
     * 
     */
    public Optional<Output<Boolean>> enable() {
        return Optional.ofNullable(this.enable);
    }

    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
     * reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
     * reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and
     * `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is
     * `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.
     * 
     */
    @Import(name="replicationPolicyClass")
    private @Nullable Output<String> replicationPolicyClass;

    /**
     * @return Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and
     * `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is
     * `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.
     * 
     */
    public Optional<Output<String>> replicationPolicyClass() {
        return Optional.ofNullable(this.replicationPolicyClass);
    }

    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
     * reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
     * reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * Source cluster alias. Maximum Length: `128`.
     * 
     */
    @Import(name="sourceCluster")
    private @Nullable Output<String> sourceCluster;

    /**
     * @return Source cluster alias. Maximum Length: `128`.
     * 
     */
    public Optional<Output<String>> sourceCluster() {
        return Optional.ofNullable(this.sourceCluster);
    }

    /**
     * Sync consumer group offsets. The default value is `false`.
     * 
     */
    @Import(name="syncGroupOffsetsEnabled")
    private @Nullable Output<Boolean> syncGroupOffsetsEnabled;

    /**
     * @return Sync consumer group offsets. The default value is `false`.
     * 
     */
    public Optional<Output<Boolean>> syncGroupOffsetsEnabled() {
        return Optional.ofNullable(this.syncGroupOffsetsEnabled);
    }

    /**
     * Frequency of consumer group offset sync. The default value is `1`.
     * 
     */
    @Import(name="syncGroupOffsetsIntervalSeconds")
    private @Nullable Output<Integer> syncGroupOffsetsIntervalSeconds;

    /**
     * @return Frequency of consumer group offset sync. The default value is `1`.
     * 
     */
    public Optional<Output<Integer>> syncGroupOffsetsIntervalSeconds() {
        return Optional.ofNullable(this.syncGroupOffsetsIntervalSeconds);
    }

    /**
     * Target cluster alias. Maximum Length: `128`.
     * 
     */
    @Import(name="targetCluster")
    private @Nullable Output<String> targetCluster;

    /**
     * @return Target cluster alias. Maximum Length: `128`.
     * 
     */
    public Optional<Output<String>> targetCluster() {
        return Optional.ofNullable(this.targetCluster);
    }

    /**
     * List of topics and/or regular expressions to replicate
     * 
     */
    @Import(name="topics")
    private @Nullable Output<List<String>> topics;

    /**
     * @return List of topics and/or regular expressions to replicate
     * 
     */
    public Optional<Output<List<String>>> topics() {
        return Optional.ofNullable(this.topics);
    }

    /**
     * List of topics and/or regular expressions to not replicate.
     * 
     */
    @Import(name="topicsBlacklists")
    private @Nullable Output<List<String>> topicsBlacklists;

    /**
     * @return List of topics and/or regular expressions to not replicate.
     * 
     */
    public Optional<Output<List<String>>> topicsBlacklists() {
        return Optional.ofNullable(this.topicsBlacklists);
    }

    private MirrorMakerReplicationFlowState() {}

    private MirrorMakerReplicationFlowState(MirrorMakerReplicationFlowState $) {
        this.emitHeartbeatsEnabled = $.emitHeartbeatsEnabled;
        this.enable = $.enable;
        this.project = $.project;
        this.replicationPolicyClass = $.replicationPolicyClass;
        this.serviceName = $.serviceName;
        this.sourceCluster = $.sourceCluster;
        this.syncGroupOffsetsEnabled = $.syncGroupOffsetsEnabled;
        this.syncGroupOffsetsIntervalSeconds = $.syncGroupOffsetsIntervalSeconds;
        this.targetCluster = $.targetCluster;
        this.topics = $.topics;
        this.topicsBlacklists = $.topicsBlacklists;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MirrorMakerReplicationFlowState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MirrorMakerReplicationFlowState $;

        public Builder() {
            $ = new MirrorMakerReplicationFlowState();
        }

        public Builder(MirrorMakerReplicationFlowState defaults) {
            $ = new MirrorMakerReplicationFlowState(Objects.requireNonNull(defaults));
        }

        /**
         * @param emitHeartbeatsEnabled Emit heartbeats enabled. The default value is `false`.
         * 
         * @return builder
         * 
         */
        public Builder emitHeartbeatsEnabled(@Nullable Output<Boolean> emitHeartbeatsEnabled) {
            $.emitHeartbeatsEnabled = emitHeartbeatsEnabled;
            return this;
        }

        /**
         * @param emitHeartbeatsEnabled Emit heartbeats enabled. The default value is `false`.
         * 
         * @return builder
         * 
         */
        public Builder emitHeartbeatsEnabled(Boolean emitHeartbeatsEnabled) {
            return emitHeartbeatsEnabled(Output.of(emitHeartbeatsEnabled));
        }

        /**
         * @param enable Enable of disable replication flows for a service.
         * 
         * @return builder
         * 
         */
        public Builder enable(@Nullable Output<Boolean> enable) {
            $.enable = enable;
            return this;
        }

        /**
         * @param enable Enable of disable replication flows for a service.
         * 
         * @return builder
         * 
         */
        public Builder enable(Boolean enable) {
            return enable(Output.of(enable));
        }

        /**
         * @param project Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
         * reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
         * reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param replicationPolicyClass Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and
         * `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is
         * `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.
         * 
         * @return builder
         * 
         */
        public Builder replicationPolicyClass(@Nullable Output<String> replicationPolicyClass) {
            $.replicationPolicyClass = replicationPolicyClass;
            return this;
        }

        /**
         * @param replicationPolicyClass Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and
         * `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is
         * `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.
         * 
         * @return builder
         * 
         */
        public Builder replicationPolicyClass(String replicationPolicyClass) {
            return replicationPolicyClass(Output.of(replicationPolicyClass));
        }

        /**
         * @param serviceName Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
         * reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
         * reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param sourceCluster Source cluster alias. Maximum Length: `128`.
         * 
         * @return builder
         * 
         */
        public Builder sourceCluster(@Nullable Output<String> sourceCluster) {
            $.sourceCluster = sourceCluster;
            return this;
        }

        /**
         * @param sourceCluster Source cluster alias. Maximum Length: `128`.
         * 
         * @return builder
         * 
         */
        public Builder sourceCluster(String sourceCluster) {
            return sourceCluster(Output.of(sourceCluster));
        }

        /**
         * @param syncGroupOffsetsEnabled Sync consumer group offsets. The default value is `false`.
         * 
         * @return builder
         * 
         */
        public Builder syncGroupOffsetsEnabled(@Nullable Output<Boolean> syncGroupOffsetsEnabled) {
            $.syncGroupOffsetsEnabled = syncGroupOffsetsEnabled;
            return this;
        }

        /**
         * @param syncGroupOffsetsEnabled Sync consumer group offsets. The default value is `false`.
         * 
         * @return builder
         * 
         */
        public Builder syncGroupOffsetsEnabled(Boolean syncGroupOffsetsEnabled) {
            return syncGroupOffsetsEnabled(Output.of(syncGroupOffsetsEnabled));
        }

        /**
         * @param syncGroupOffsetsIntervalSeconds Frequency of consumer group offset sync. The default value is `1`.
         * 
         * @return builder
         * 
         */
        public Builder syncGroupOffsetsIntervalSeconds(@Nullable Output<Integer> syncGroupOffsetsIntervalSeconds) {
            $.syncGroupOffsetsIntervalSeconds = syncGroupOffsetsIntervalSeconds;
            return this;
        }

        /**
         * @param syncGroupOffsetsIntervalSeconds Frequency of consumer group offset sync. The default value is `1`.
         * 
         * @return builder
         * 
         */
        public Builder syncGroupOffsetsIntervalSeconds(Integer syncGroupOffsetsIntervalSeconds) {
            return syncGroupOffsetsIntervalSeconds(Output.of(syncGroupOffsetsIntervalSeconds));
        }

        /**
         * @param targetCluster Target cluster alias. Maximum Length: `128`.
         * 
         * @return builder
         * 
         */
        public Builder targetCluster(@Nullable Output<String> targetCluster) {
            $.targetCluster = targetCluster;
            return this;
        }

        /**
         * @param targetCluster Target cluster alias. Maximum Length: `128`.
         * 
         * @return builder
         * 
         */
        public Builder targetCluster(String targetCluster) {
            return targetCluster(Output.of(targetCluster));
        }

        /**
         * @param topics List of topics and/or regular expressions to replicate
         * 
         * @return builder
         * 
         */
        public Builder topics(@Nullable Output<List<String>> topics) {
            $.topics = topics;
            return this;
        }

        /**
         * @param topics List of topics and/or regular expressions to replicate
         * 
         * @return builder
         * 
         */
        public Builder topics(List<String> topics) {
            return topics(Output.of(topics));
        }

        /**
         * @param topics List of topics and/or regular expressions to replicate
         * 
         * @return builder
         * 
         */
        public Builder topics(String... topics) {
            return topics(List.of(topics));
        }

        /**
         * @param topicsBlacklists List of topics and/or regular expressions to not replicate.
         * 
         * @return builder
         * 
         */
        public Builder topicsBlacklists(@Nullable Output<List<String>> topicsBlacklists) {
            $.topicsBlacklists = topicsBlacklists;
            return this;
        }

        /**
         * @param topicsBlacklists List of topics and/or regular expressions to not replicate.
         * 
         * @return builder
         * 
         */
        public Builder topicsBlacklists(List<String> topicsBlacklists) {
            return topicsBlacklists(Output.of(topicsBlacklists));
        }

        /**
         * @param topicsBlacklists List of topics and/or regular expressions to not replicate.
         * 
         * @return builder
         * 
         */
        public Builder topicsBlacklists(String... topicsBlacklists) {
            return topicsBlacklists(List.of(topicsBlacklists));
        }

        public MirrorMakerReplicationFlowState build() {
            return $;
        }
    }

}
