// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KafkaSchemaArgs extends com.pulumi.resources.ResourceArgs {

    public static final KafkaSchemaArgs Empty = new KafkaSchemaArgs();

    /**
     * Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.
     * 
     */
    @Import(name="compatibilityLevel")
    private @Nullable Output<String> compatibilityLevel;

    /**
     * @return Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.
     * 
     */
    public Optional<Output<String>> compatibilityLevel() {
        return Optional.ofNullable(this.compatibilityLevel);
    }

    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="project", required=true)
    private Output<String> project;

    /**
     * @return The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    /**
     * Kafka Schema configuration. Should be a valid Avro, JSON, or Protobuf schema, depending on the schema type.
     * 
     */
    @Import(name="schema", required=true)
    private Output<String> schema;

    /**
     * @return Kafka Schema configuration. Should be a valid Avro, JSON, or Protobuf schema, depending on the schema type.
     * 
     */
    public Output<String> schema() {
        return this.schema;
    }

    /**
     * Kafka Schema configuration type. Defaults to AVRO. The possible values are `AVRO`, `JSON` and `PROTOBUF`.
     * 
     */
    @Import(name="schemaType")
    private @Nullable Output<String> schemaType;

    /**
     * @return Kafka Schema configuration type. Defaults to AVRO. The possible values are `AVRO`, `JSON` and `PROTOBUF`.
     * 
     */
    public Optional<Output<String>> schemaType() {
        return Optional.ofNullable(this.schemaType);
    }

    /**
     * The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    /**
     * The Kafka Schema Subject name. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="subjectName", required=true)
    private Output<String> subjectName;

    /**
     * @return The Kafka Schema Subject name. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> subjectName() {
        return this.subjectName;
    }

    private KafkaSchemaArgs() {}

    private KafkaSchemaArgs(KafkaSchemaArgs $) {
        this.compatibilityLevel = $.compatibilityLevel;
        this.project = $.project;
        this.schema = $.schema;
        this.schemaType = $.schemaType;
        this.serviceName = $.serviceName;
        this.subjectName = $.subjectName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KafkaSchemaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KafkaSchemaArgs $;

        public Builder() {
            $ = new KafkaSchemaArgs();
        }

        public Builder(KafkaSchemaArgs defaults) {
            $ = new KafkaSchemaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compatibilityLevel Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.
         * 
         * @return builder
         * 
         */
        public Builder compatibilityLevel(@Nullable Output<String> compatibilityLevel) {
            $.compatibilityLevel = compatibilityLevel;
            return this;
        }

        /**
         * @param compatibilityLevel Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.
         * 
         * @return builder
         * 
         */
        public Builder compatibilityLevel(String compatibilityLevel) {
            return compatibilityLevel(Output.of(compatibilityLevel));
        }

        /**
         * @param project The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param schema Kafka Schema configuration. Should be a valid Avro, JSON, or Protobuf schema, depending on the schema type.
         * 
         * @return builder
         * 
         */
        public Builder schema(Output<String> schema) {
            $.schema = schema;
            return this;
        }

        /**
         * @param schema Kafka Schema configuration. Should be a valid Avro, JSON, or Protobuf schema, depending on the schema type.
         * 
         * @return builder
         * 
         */
        public Builder schema(String schema) {
            return schema(Output.of(schema));
        }

        /**
         * @param schemaType Kafka Schema configuration type. Defaults to AVRO. The possible values are `AVRO`, `JSON` and `PROTOBUF`.
         * 
         * @return builder
         * 
         */
        public Builder schemaType(@Nullable Output<String> schemaType) {
            $.schemaType = schemaType;
            return this;
        }

        /**
         * @param schemaType Kafka Schema configuration type. Defaults to AVRO. The possible values are `AVRO`, `JSON` and `PROTOBUF`.
         * 
         * @return builder
         * 
         */
        public Builder schemaType(String schemaType) {
            return schemaType(Output.of(schemaType));
        }

        /**
         * @param serviceName The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param subjectName The Kafka Schema Subject name. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder subjectName(Output<String> subjectName) {
            $.subjectName = subjectName;
            return this;
        }

        /**
         * @param subjectName The Kafka Schema Subject name. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder subjectName(String subjectName) {
            return subjectName(Output.of(subjectName));
        }

        public KafkaSchemaArgs build() {
            if ($.project == null) {
                throw new MissingRequiredPropertyException("KafkaSchemaArgs", "project");
            }
            if ($.schema == null) {
                throw new MissingRequiredPropertyException("KafkaSchemaArgs", "schema");
            }
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("KafkaSchemaArgs", "serviceName");
            }
            if ($.subjectName == null) {
                throw new MissingRequiredPropertyException("KafkaSchemaArgs", "subjectName");
            }
            return $;
        }
    }

}
