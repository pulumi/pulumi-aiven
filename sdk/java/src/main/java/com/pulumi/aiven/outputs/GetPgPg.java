// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPgPg {
    private String dbname;
    private String host;
    private Integer maxConnections;
    private String password;
    private Integer port;
    private String replicaUri;
    private String sslmode;
    private String uri;
    private String user;

    private GetPgPg() {}
    public String dbname() {
        return this.dbname;
    }
    public String host() {
        return this.host;
    }
    public Integer maxConnections() {
        return this.maxConnections;
    }
    public String password() {
        return this.password;
    }
    public Integer port() {
        return this.port;
    }
    public String replicaUri() {
        return this.replicaUri;
    }
    public String sslmode() {
        return this.sslmode;
    }
    public String uri() {
        return this.uri;
    }
    public String user() {
        return this.user;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPgPg defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dbname;
        private String host;
        private Integer maxConnections;
        private String password;
        private Integer port;
        private String replicaUri;
        private String sslmode;
        private String uri;
        private String user;
        public Builder() {}
        public Builder(GetPgPg defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dbname = defaults.dbname;
    	      this.host = defaults.host;
    	      this.maxConnections = defaults.maxConnections;
    	      this.password = defaults.password;
    	      this.port = defaults.port;
    	      this.replicaUri = defaults.replicaUri;
    	      this.sslmode = defaults.sslmode;
    	      this.uri = defaults.uri;
    	      this.user = defaults.user;
        }

        @CustomType.Setter
        public Builder dbname(String dbname) {
            this.dbname = Objects.requireNonNull(dbname);
            return this;
        }
        @CustomType.Setter
        public Builder host(String host) {
            this.host = Objects.requireNonNull(host);
            return this;
        }
        @CustomType.Setter
        public Builder maxConnections(Integer maxConnections) {
            this.maxConnections = Objects.requireNonNull(maxConnections);
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }
        @CustomType.Setter
        public Builder replicaUri(String replicaUri) {
            this.replicaUri = Objects.requireNonNull(replicaUri);
            return this;
        }
        @CustomType.Setter
        public Builder sslmode(String sslmode) {
            this.sslmode = Objects.requireNonNull(sslmode);
            return this;
        }
        @CustomType.Setter
        public Builder uri(String uri) {
            this.uri = Objects.requireNonNull(uri);
            return this;
        }
        @CustomType.Setter
        public Builder user(String user) {
            this.user = Objects.requireNonNull(user);
            return this;
        }
        public GetPgPg build() {
            final var o = new GetPgPg();
            o.dbname = dbname;
            o.host = host;
            o.maxConnections = maxConnections;
            o.password = password;
            o.port = port;
            o.replicaUri = replicaUri;
            o.sslmode = sslmode;
            o.uri = uri;
            o.user = user;
            return o;
        }
    }
}
