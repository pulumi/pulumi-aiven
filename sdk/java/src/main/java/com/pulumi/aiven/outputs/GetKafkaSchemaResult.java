// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetKafkaSchemaResult {
    /**
     * @return Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.
     * 
     */
    private String compatibilityLevel;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    private String project;
    /**
     * @return Kafka Schema configuration should be a valid Avro Schema JSON format.
     * 
     */
    private String schema;
    /**
     * @return Kafka Schema type JSON or AVRO
     * 
     */
    private String schemaType;
    /**
     * @return Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    private String serviceName;
    /**
     * @return The Kafka Schema Subject name. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    private String subjectName;
    /**
     * @return Kafka Schema configuration version.
     * 
     */
    private Integer version;

    private GetKafkaSchemaResult() {}
    /**
     * @return Kafka Schemas compatibility level. The possible values are `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE` and `NONE`.
     * 
     */
    public String compatibilityLevel() {
        return this.compatibilityLevel;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public String project() {
        return this.project;
    }
    /**
     * @return Kafka Schema configuration should be a valid Avro Schema JSON format.
     * 
     */
    public String schema() {
        return this.schema;
    }
    /**
     * @return Kafka Schema type JSON or AVRO
     * 
     */
    public String schemaType() {
        return this.schemaType;
    }
    /**
     * @return Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return The Kafka Schema Subject name. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public String subjectName() {
        return this.subjectName;
    }
    /**
     * @return Kafka Schema configuration version.
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKafkaSchemaResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compatibilityLevel;
        private String id;
        private String project;
        private String schema;
        private String schemaType;
        private String serviceName;
        private String subjectName;
        private Integer version;
        public Builder() {}
        public Builder(GetKafkaSchemaResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compatibilityLevel = defaults.compatibilityLevel;
    	      this.id = defaults.id;
    	      this.project = defaults.project;
    	      this.schema = defaults.schema;
    	      this.schemaType = defaults.schemaType;
    	      this.serviceName = defaults.serviceName;
    	      this.subjectName = defaults.subjectName;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder compatibilityLevel(String compatibilityLevel) {
            this.compatibilityLevel = Objects.requireNonNull(compatibilityLevel);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }
        @CustomType.Setter
        public Builder schema(String schema) {
            this.schema = Objects.requireNonNull(schema);
            return this;
        }
        @CustomType.Setter
        public Builder schemaType(String schemaType) {
            this.schemaType = Objects.requireNonNull(schemaType);
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }
        @CustomType.Setter
        public Builder subjectName(String subjectName) {
            this.subjectName = Objects.requireNonNull(subjectName);
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public GetKafkaSchemaResult build() {
            final var o = new GetKafkaSchemaResult();
            o.compatibilityLevel = compatibilityLevel;
            o.id = id;
            o.project = project;
            o.schema = schema;
            o.schemaType = schemaType;
            o.serviceName = serviceName;
            o.subjectName = subjectName;
            o.version = version;
            return o;
        }
    }
}
