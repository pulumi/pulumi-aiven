// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.aiven.inputs.OrganizationApplicationUserTokenTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OrganizationApplicationUserTokenArgs extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationApplicationUserTokenArgs Empty = new OrganizationApplicationUserTokenArgs();

    /**
     * Description. Maximum length: `1000`. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description. Maximum length: `1000`. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Extend token expiration time when token is used. Only applicable if max*age*seconds is specified. The default value is `false`. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="extendWhenUsed")
    private @Nullable Output<Boolean> extendWhenUsed;

    /**
     * @return Extend token expiration time when token is used. Only applicable if max*age*seconds is specified. The default value is `false`. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<Boolean>> extendWhenUsed() {
        return Optional.ofNullable(this.extendWhenUsed);
    }

    /**
     * List of allowed IP ranges. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="ipAllowlists")
    private @Nullable Output<List<String>> ipAllowlists;

    /**
     * @return List of allowed IP ranges. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<List<String>>> ipAllowlists() {
        return Optional.ofNullable(this.ipAllowlists);
    }

    /**
     * Time the token remains valid since creation (or since last use if extend*when*used is true). Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="maxAgeSeconds")
    private @Nullable Output<Integer> maxAgeSeconds;

    /**
     * @return Time the token remains valid since creation (or since last use if extend*when*used is true). Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<Integer>> maxAgeSeconds() {
        return Optional.ofNullable(this.maxAgeSeconds);
    }

    /**
     * ID of an organization. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="organizationId", required=true)
    private Output<String> organizationId;

    /**
     * @return ID of an organization. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> organizationId() {
        return this.organizationId;
    }

    /**
     * Scopes this token is restricted to if specified. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="scopes")
    private @Nullable Output<List<String>> scopes;

    /**
     * @return Scopes this token is restricted to if specified. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<List<String>>> scopes() {
        return Optional.ofNullable(this.scopes);
    }

    @Import(name="timeouts")
    private @Nullable Output<OrganizationApplicationUserTokenTimeoutsArgs> timeouts;

    public Optional<Output<OrganizationApplicationUserTokenTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    /**
     * User ID. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="userId", required=true)
    private Output<String> userId;

    /**
     * @return User ID. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> userId() {
        return this.userId;
    }

    private OrganizationApplicationUserTokenArgs() {}

    private OrganizationApplicationUserTokenArgs(OrganizationApplicationUserTokenArgs $) {
        this.description = $.description;
        this.extendWhenUsed = $.extendWhenUsed;
        this.ipAllowlists = $.ipAllowlists;
        this.maxAgeSeconds = $.maxAgeSeconds;
        this.organizationId = $.organizationId;
        this.scopes = $.scopes;
        this.timeouts = $.timeouts;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationApplicationUserTokenArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationApplicationUserTokenArgs $;

        public Builder() {
            $ = new OrganizationApplicationUserTokenArgs();
        }

        public Builder(OrganizationApplicationUserTokenArgs defaults) {
            $ = new OrganizationApplicationUserTokenArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description. Maximum length: `1000`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description. Maximum length: `1000`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param extendWhenUsed Extend token expiration time when token is used. Only applicable if max*age*seconds is specified. The default value is `false`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder extendWhenUsed(@Nullable Output<Boolean> extendWhenUsed) {
            $.extendWhenUsed = extendWhenUsed;
            return this;
        }

        /**
         * @param extendWhenUsed Extend token expiration time when token is used. Only applicable if max*age*seconds is specified. The default value is `false`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder extendWhenUsed(Boolean extendWhenUsed) {
            return extendWhenUsed(Output.of(extendWhenUsed));
        }

        /**
         * @param ipAllowlists List of allowed IP ranges. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder ipAllowlists(@Nullable Output<List<String>> ipAllowlists) {
            $.ipAllowlists = ipAllowlists;
            return this;
        }

        /**
         * @param ipAllowlists List of allowed IP ranges. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder ipAllowlists(List<String> ipAllowlists) {
            return ipAllowlists(Output.of(ipAllowlists));
        }

        /**
         * @param ipAllowlists List of allowed IP ranges. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder ipAllowlists(String... ipAllowlists) {
            return ipAllowlists(List.of(ipAllowlists));
        }

        /**
         * @param maxAgeSeconds Time the token remains valid since creation (or since last use if extend*when*used is true). Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder maxAgeSeconds(@Nullable Output<Integer> maxAgeSeconds) {
            $.maxAgeSeconds = maxAgeSeconds;
            return this;
        }

        /**
         * @param maxAgeSeconds Time the token remains valid since creation (or since last use if extend*when*used is true). Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder maxAgeSeconds(Integer maxAgeSeconds) {
            return maxAgeSeconds(Output.of(maxAgeSeconds));
        }

        /**
         * @param organizationId ID of an organization. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId ID of an organization. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        /**
         * @param scopes Scopes this token is restricted to if specified. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder scopes(@Nullable Output<List<String>> scopes) {
            $.scopes = scopes;
            return this;
        }

        /**
         * @param scopes Scopes this token is restricted to if specified. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder scopes(List<String> scopes) {
            return scopes(Output.of(scopes));
        }

        /**
         * @param scopes Scopes this token is restricted to if specified. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }

        public Builder timeouts(@Nullable Output<OrganizationApplicationUserTokenTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(OrganizationApplicationUserTokenTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        /**
         * @param userId User ID. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder userId(Output<String> userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param userId User ID. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder userId(String userId) {
            return userId(Output.of(userId));
        }

        public OrganizationApplicationUserTokenArgs build() {
            if ($.organizationId == null) {
                throw new MissingRequiredPropertyException("OrganizationApplicationUserTokenArgs", "organizationId");
            }
            if ($.userId == null) {
                throw new MissingRequiredPropertyException("OrganizationApplicationUserTokenArgs", "userId");
            }
            return $;
        }
    }

}
