// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OpenSearchOpensearchUserConfigOpensearchSearchBackpressureNodeDuressArgs extends com.pulumi.resources.ResourceArgs {

    public static final OpenSearchOpensearchUserConfigOpensearchSearchBackpressureNodeDuressArgs Empty = new OpenSearchOpensearchUserConfigOpensearchSearchBackpressureNodeDuressArgs();

    /**
     * The CPU usage threshold (as a percentage) required for a node to be considered to be under duress. Default is 0.9.
     * 
     */
    @Import(name="cpuThreshold")
    private @Nullable Output<Double> cpuThreshold;

    /**
     * @return The CPU usage threshold (as a percentage) required for a node to be considered to be under duress. Default is 0.9.
     * 
     */
    public Optional<Output<Double>> cpuThreshold() {
        return Optional.ofNullable(this.cpuThreshold);
    }

    /**
     * The heap usage threshold (as a percentage) required for a node to be considered to be under duress. Default is 0.7.
     * 
     */
    @Import(name="heapThreshold")
    private @Nullable Output<Double> heapThreshold;

    /**
     * @return The heap usage threshold (as a percentage) required for a node to be considered to be under duress. Default is 0.7.
     * 
     */
    public Optional<Output<Double>> heapThreshold() {
        return Optional.ofNullable(this.heapThreshold);
    }

    /**
     * The number of successive limit breaches after which the node is considered to be under duress. Default is 3.
     * 
     */
    @Import(name="numSuccessiveBreaches")
    private @Nullable Output<Integer> numSuccessiveBreaches;

    /**
     * @return The number of successive limit breaches after which the node is considered to be under duress. Default is 3.
     * 
     */
    public Optional<Output<Integer>> numSuccessiveBreaches() {
        return Optional.ofNullable(this.numSuccessiveBreaches);
    }

    private OpenSearchOpensearchUserConfigOpensearchSearchBackpressureNodeDuressArgs() {}

    private OpenSearchOpensearchUserConfigOpensearchSearchBackpressureNodeDuressArgs(OpenSearchOpensearchUserConfigOpensearchSearchBackpressureNodeDuressArgs $) {
        this.cpuThreshold = $.cpuThreshold;
        this.heapThreshold = $.heapThreshold;
        this.numSuccessiveBreaches = $.numSuccessiveBreaches;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OpenSearchOpensearchUserConfigOpensearchSearchBackpressureNodeDuressArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OpenSearchOpensearchUserConfigOpensearchSearchBackpressureNodeDuressArgs $;

        public Builder() {
            $ = new OpenSearchOpensearchUserConfigOpensearchSearchBackpressureNodeDuressArgs();
        }

        public Builder(OpenSearchOpensearchUserConfigOpensearchSearchBackpressureNodeDuressArgs defaults) {
            $ = new OpenSearchOpensearchUserConfigOpensearchSearchBackpressureNodeDuressArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cpuThreshold The CPU usage threshold (as a percentage) required for a node to be considered to be under duress. Default is 0.9.
         * 
         * @return builder
         * 
         */
        public Builder cpuThreshold(@Nullable Output<Double> cpuThreshold) {
            $.cpuThreshold = cpuThreshold;
            return this;
        }

        /**
         * @param cpuThreshold The CPU usage threshold (as a percentage) required for a node to be considered to be under duress. Default is 0.9.
         * 
         * @return builder
         * 
         */
        public Builder cpuThreshold(Double cpuThreshold) {
            return cpuThreshold(Output.of(cpuThreshold));
        }

        /**
         * @param heapThreshold The heap usage threshold (as a percentage) required for a node to be considered to be under duress. Default is 0.7.
         * 
         * @return builder
         * 
         */
        public Builder heapThreshold(@Nullable Output<Double> heapThreshold) {
            $.heapThreshold = heapThreshold;
            return this;
        }

        /**
         * @param heapThreshold The heap usage threshold (as a percentage) required for a node to be considered to be under duress. Default is 0.7.
         * 
         * @return builder
         * 
         */
        public Builder heapThreshold(Double heapThreshold) {
            return heapThreshold(Output.of(heapThreshold));
        }

        /**
         * @param numSuccessiveBreaches The number of successive limit breaches after which the node is considered to be under duress. Default is 3.
         * 
         * @return builder
         * 
         */
        public Builder numSuccessiveBreaches(@Nullable Output<Integer> numSuccessiveBreaches) {
            $.numSuccessiveBreaches = numSuccessiveBreaches;
            return this;
        }

        /**
         * @param numSuccessiveBreaches The number of successive limit breaches after which the node is considered to be under duress. Default is 3.
         * 
         * @return builder
         * 
         */
        public Builder numSuccessiveBreaches(Integer numSuccessiveBreaches) {
            return numSuccessiveBreaches(Output.of(numSuccessiveBreaches));
        }

        public OpenSearchOpensearchUserConfigOpensearchSearchBackpressureNodeDuressArgs build() {
            return $;
        }
    }

}
