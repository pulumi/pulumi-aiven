// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlinkApplicationDeploymentState extends com.pulumi.resources.ResourceArgs {

    public static final FlinkApplicationDeploymentState Empty = new FlinkApplicationDeploymentState();

    /**
     * Application ID
     * 
     */
    @Import(name="applicationId")
    private @Nullable Output<String> applicationId;

    /**
     * @return Application ID
     * 
     */
    public Optional<Output<String>> applicationId() {
        return Optional.ofNullable(this.applicationId);
    }

    /**
     * Application deployment creation time
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return Application deployment creation time
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Application deployment creator
     * 
     */
    @Import(name="createdBy")
    private @Nullable Output<String> createdBy;

    /**
     * @return Application deployment creator
     * 
     */
    public Optional<Output<String>> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    /**
     * Flink Job parallelism
     * 
     */
    @Import(name="parallelism")
    private @Nullable Output<Integer> parallelism;

    /**
     * @return Flink Job parallelism
     * 
     */
    public Optional<Output<Integer>> parallelism() {
        return Optional.ofNullable(this.parallelism);
    }

    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Specifies whether a Flink Job is restarted in case it fails
     * 
     */
    @Import(name="restartEnabled")
    private @Nullable Output<Boolean> restartEnabled;

    /**
     * @return Specifies whether a Flink Job is restarted in case it fails
     * 
     */
    public Optional<Output<Boolean>> restartEnabled() {
        return Optional.ofNullable(this.restartEnabled);
    }

    /**
     * The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * Job savepoint
     * 
     */
    @Import(name="startingSavepoint")
    private @Nullable Output<String> startingSavepoint;

    /**
     * @return Job savepoint
     * 
     */
    public Optional<Output<String>> startingSavepoint() {
        return Optional.ofNullable(this.startingSavepoint);
    }

    /**
     * ApplicationVersion ID
     * 
     */
    @Import(name="versionId")
    private @Nullable Output<String> versionId;

    /**
     * @return ApplicationVersion ID
     * 
     */
    public Optional<Output<String>> versionId() {
        return Optional.ofNullable(this.versionId);
    }

    private FlinkApplicationDeploymentState() {}

    private FlinkApplicationDeploymentState(FlinkApplicationDeploymentState $) {
        this.applicationId = $.applicationId;
        this.createdAt = $.createdAt;
        this.createdBy = $.createdBy;
        this.parallelism = $.parallelism;
        this.project = $.project;
        this.restartEnabled = $.restartEnabled;
        this.serviceName = $.serviceName;
        this.startingSavepoint = $.startingSavepoint;
        this.versionId = $.versionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlinkApplicationDeploymentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlinkApplicationDeploymentState $;

        public Builder() {
            $ = new FlinkApplicationDeploymentState();
        }

        public Builder(FlinkApplicationDeploymentState defaults) {
            $ = new FlinkApplicationDeploymentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationId Application ID
         * 
         * @return builder
         * 
         */
        public Builder applicationId(@Nullable Output<String> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        /**
         * @param applicationId Application ID
         * 
         * @return builder
         * 
         */
        public Builder applicationId(String applicationId) {
            return applicationId(Output.of(applicationId));
        }

        /**
         * @param createdAt Application deployment creation time
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt Application deployment creation time
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param createdBy Application deployment creator
         * 
         * @return builder
         * 
         */
        public Builder createdBy(@Nullable Output<String> createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        /**
         * @param createdBy Application deployment creator
         * 
         * @return builder
         * 
         */
        public Builder createdBy(String createdBy) {
            return createdBy(Output.of(createdBy));
        }

        /**
         * @param parallelism Flink Job parallelism
         * 
         * @return builder
         * 
         */
        public Builder parallelism(@Nullable Output<Integer> parallelism) {
            $.parallelism = parallelism;
            return this;
        }

        /**
         * @param parallelism Flink Job parallelism
         * 
         * @return builder
         * 
         */
        public Builder parallelism(Integer parallelism) {
            return parallelism(Output.of(parallelism));
        }

        /**
         * @param project The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param restartEnabled Specifies whether a Flink Job is restarted in case it fails
         * 
         * @return builder
         * 
         */
        public Builder restartEnabled(@Nullable Output<Boolean> restartEnabled) {
            $.restartEnabled = restartEnabled;
            return this;
        }

        /**
         * @param restartEnabled Specifies whether a Flink Job is restarted in case it fails
         * 
         * @return builder
         * 
         */
        public Builder restartEnabled(Boolean restartEnabled) {
            return restartEnabled(Output.of(restartEnabled));
        }

        /**
         * @param serviceName The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param startingSavepoint Job savepoint
         * 
         * @return builder
         * 
         */
        public Builder startingSavepoint(@Nullable Output<String> startingSavepoint) {
            $.startingSavepoint = startingSavepoint;
            return this;
        }

        /**
         * @param startingSavepoint Job savepoint
         * 
         * @return builder
         * 
         */
        public Builder startingSavepoint(String startingSavepoint) {
            return startingSavepoint(Output.of(startingSavepoint));
        }

        /**
         * @param versionId ApplicationVersion ID
         * 
         * @return builder
         * 
         */
        public Builder versionId(@Nullable Output<String> versionId) {
            $.versionId = versionId;
            return this;
        }

        /**
         * @param versionId ApplicationVersion ID
         * 
         * @return builder
         * 
         */
        public Builder versionId(String versionId) {
            return versionId(Output.of(versionId));
        }

        public FlinkApplicationDeploymentState build() {
            return $;
        }
    }

}
