// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;


public final class OpenSearchOpensearchUserConfigOpensearchDiskWatermarksArgs extends com.pulumi.resources.ResourceArgs {

    public static final OpenSearchOpensearchUserConfigOpensearchDiskWatermarksArgs Empty = new OpenSearchOpensearchUserConfigOpensearchDiskWatermarksArgs();

    /**
     * The flood stage watermark for disk usage. Example: `95`.
     * 
     */
    @Import(name="floodStage", required=true)
    private Output<Integer> floodStage;

    /**
     * @return The flood stage watermark for disk usage. Example: `95`.
     * 
     */
    public Output<Integer> floodStage() {
        return this.floodStage;
    }

    /**
     * The high watermark for disk usage. Example: `90`.
     * 
     */
    @Import(name="high", required=true)
    private Output<Integer> high;

    /**
     * @return The high watermark for disk usage. Example: `90`.
     * 
     */
    public Output<Integer> high() {
        return this.high;
    }

    /**
     * The low watermark for disk usage. Example: `85`.
     * 
     */
    @Import(name="low", required=true)
    private Output<Integer> low;

    /**
     * @return The low watermark for disk usage. Example: `85`.
     * 
     */
    public Output<Integer> low() {
        return this.low;
    }

    private OpenSearchOpensearchUserConfigOpensearchDiskWatermarksArgs() {}

    private OpenSearchOpensearchUserConfigOpensearchDiskWatermarksArgs(OpenSearchOpensearchUserConfigOpensearchDiskWatermarksArgs $) {
        this.floodStage = $.floodStage;
        this.high = $.high;
        this.low = $.low;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OpenSearchOpensearchUserConfigOpensearchDiskWatermarksArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OpenSearchOpensearchUserConfigOpensearchDiskWatermarksArgs $;

        public Builder() {
            $ = new OpenSearchOpensearchUserConfigOpensearchDiskWatermarksArgs();
        }

        public Builder(OpenSearchOpensearchUserConfigOpensearchDiskWatermarksArgs defaults) {
            $ = new OpenSearchOpensearchUserConfigOpensearchDiskWatermarksArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param floodStage The flood stage watermark for disk usage. Example: `95`.
         * 
         * @return builder
         * 
         */
        public Builder floodStage(Output<Integer> floodStage) {
            $.floodStage = floodStage;
            return this;
        }

        /**
         * @param floodStage The flood stage watermark for disk usage. Example: `95`.
         * 
         * @return builder
         * 
         */
        public Builder floodStage(Integer floodStage) {
            return floodStage(Output.of(floodStage));
        }

        /**
         * @param high The high watermark for disk usage. Example: `90`.
         * 
         * @return builder
         * 
         */
        public Builder high(Output<Integer> high) {
            $.high = high;
            return this;
        }

        /**
         * @param high The high watermark for disk usage. Example: `90`.
         * 
         * @return builder
         * 
         */
        public Builder high(Integer high) {
            return high(Output.of(high));
        }

        /**
         * @param low The low watermark for disk usage. Example: `85`.
         * 
         * @return builder
         * 
         */
        public Builder low(Output<Integer> low) {
            $.low = low;
            return this;
        }

        /**
         * @param low The low watermark for disk usage. Example: `85`.
         * 
         * @return builder
         * 
         */
        public Builder low(Integer low) {
            return low(Output.of(low));
        }

        public OpenSearchOpensearchUserConfigOpensearchDiskWatermarksArgs build() {
            if ($.floodStage == null) {
                throw new MissingRequiredPropertyException("OpenSearchOpensearchUserConfigOpensearchDiskWatermarksArgs", "floodStage");
            }
            if ($.high == null) {
                throw new MissingRequiredPropertyException("OpenSearchOpensearchUserConfigOpensearchDiskWatermarksArgs", "high");
            }
            if ($.low == null) {
                throw new MissingRequiredPropertyException("OpenSearchOpensearchUserConfigOpensearchDiskWatermarksArgs", "low");
            }
            return $;
        }
    }

}
