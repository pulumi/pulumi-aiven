// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.aiven.outputs.GetGrafanaGrafanaUserConfigAuthAzuread;
import com.pulumi.aiven.outputs.GetGrafanaGrafanaUserConfigAuthGenericOauth;
import com.pulumi.aiven.outputs.GetGrafanaGrafanaUserConfigAuthGithub;
import com.pulumi.aiven.outputs.GetGrafanaGrafanaUserConfigAuthGitlab;
import com.pulumi.aiven.outputs.GetGrafanaGrafanaUserConfigAuthGoogle;
import com.pulumi.aiven.outputs.GetGrafanaGrafanaUserConfigDateFormats;
import com.pulumi.aiven.outputs.GetGrafanaGrafanaUserConfigExternalImageStorage;
import com.pulumi.aiven.outputs.GetGrafanaGrafanaUserConfigPrivateAccess;
import com.pulumi.aiven.outputs.GetGrafanaGrafanaUserConfigPrivatelinkAccess;
import com.pulumi.aiven.outputs.GetGrafanaGrafanaUserConfigPublicAccess;
import com.pulumi.aiven.outputs.GetGrafanaGrafanaUserConfigSmtpServer;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGrafanaGrafanaUserConfig {
    private final @Nullable String alertingEnabled;
    private final @Nullable String alertingErrorOrTimeout;
    private final @Nullable String alertingMaxAnnotationsToKeep;
    private final @Nullable String alertingNodataOrNullvalues;
    private final @Nullable String allowEmbedding;
    private final @Nullable GetGrafanaGrafanaUserConfigAuthAzuread authAzuread;
    private final @Nullable String authBasicEnabled;
    private final @Nullable GetGrafanaGrafanaUserConfigAuthGenericOauth authGenericOauth;
    private final @Nullable GetGrafanaGrafanaUserConfigAuthGithub authGithub;
    private final @Nullable GetGrafanaGrafanaUserConfigAuthGitlab authGitlab;
    private final @Nullable GetGrafanaGrafanaUserConfigAuthGoogle authGoogle;
    private final @Nullable String cookieSamesite;
    private final @Nullable String customDomain;
    private final @Nullable String dashboardsMinRefreshInterval;
    private final @Nullable String dashboardsVersionsToKeep;
    private final @Nullable String dataproxySendUserHeader;
    private final @Nullable String dataproxyTimeout;
    private final @Nullable GetGrafanaGrafanaUserConfigDateFormats dateFormats;
    private final @Nullable String disableGravatar;
    private final @Nullable String editorsCanAdmin;
    private final @Nullable GetGrafanaGrafanaUserConfigExternalImageStorage externalImageStorage;
    private final @Nullable String googleAnalyticsUaId;
    private final @Nullable List<String> ipFilters;
    private final @Nullable String metricsEnabled;
    private final @Nullable GetGrafanaGrafanaUserConfigPrivateAccess privateAccess;
    private final @Nullable GetGrafanaGrafanaUserConfigPrivatelinkAccess privatelinkAccess;
    private final @Nullable String projectToForkFrom;
    private final @Nullable GetGrafanaGrafanaUserConfigPublicAccess publicAccess;
    private final @Nullable String recoveryBasebackupName;
    private final @Nullable String serviceToForkFrom;
    private final @Nullable GetGrafanaGrafanaUserConfigSmtpServer smtpServer;
    /**
     * @return Static IPs that are going to be associated with this service. Please assign a value using the &#39;toset&#39; function. Once a static ip resource is in the &#39;assigned&#39; state it cannot be unbound from the node again
     * 
     */
    private final @Nullable String staticIps;
    private final @Nullable String userAutoAssignOrg;
    private final @Nullable String userAutoAssignOrgRole;
    private final @Nullable String viewersCanEdit;

    @CustomType.Constructor
    private GetGrafanaGrafanaUserConfig(
        @CustomType.Parameter("alertingEnabled") @Nullable String alertingEnabled,
        @CustomType.Parameter("alertingErrorOrTimeout") @Nullable String alertingErrorOrTimeout,
        @CustomType.Parameter("alertingMaxAnnotationsToKeep") @Nullable String alertingMaxAnnotationsToKeep,
        @CustomType.Parameter("alertingNodataOrNullvalues") @Nullable String alertingNodataOrNullvalues,
        @CustomType.Parameter("allowEmbedding") @Nullable String allowEmbedding,
        @CustomType.Parameter("authAzuread") @Nullable GetGrafanaGrafanaUserConfigAuthAzuread authAzuread,
        @CustomType.Parameter("authBasicEnabled") @Nullable String authBasicEnabled,
        @CustomType.Parameter("authGenericOauth") @Nullable GetGrafanaGrafanaUserConfigAuthGenericOauth authGenericOauth,
        @CustomType.Parameter("authGithub") @Nullable GetGrafanaGrafanaUserConfigAuthGithub authGithub,
        @CustomType.Parameter("authGitlab") @Nullable GetGrafanaGrafanaUserConfigAuthGitlab authGitlab,
        @CustomType.Parameter("authGoogle") @Nullable GetGrafanaGrafanaUserConfigAuthGoogle authGoogle,
        @CustomType.Parameter("cookieSamesite") @Nullable String cookieSamesite,
        @CustomType.Parameter("customDomain") @Nullable String customDomain,
        @CustomType.Parameter("dashboardsMinRefreshInterval") @Nullable String dashboardsMinRefreshInterval,
        @CustomType.Parameter("dashboardsVersionsToKeep") @Nullable String dashboardsVersionsToKeep,
        @CustomType.Parameter("dataproxySendUserHeader") @Nullable String dataproxySendUserHeader,
        @CustomType.Parameter("dataproxyTimeout") @Nullable String dataproxyTimeout,
        @CustomType.Parameter("dateFormats") @Nullable GetGrafanaGrafanaUserConfigDateFormats dateFormats,
        @CustomType.Parameter("disableGravatar") @Nullable String disableGravatar,
        @CustomType.Parameter("editorsCanAdmin") @Nullable String editorsCanAdmin,
        @CustomType.Parameter("externalImageStorage") @Nullable GetGrafanaGrafanaUserConfigExternalImageStorage externalImageStorage,
        @CustomType.Parameter("googleAnalyticsUaId") @Nullable String googleAnalyticsUaId,
        @CustomType.Parameter("ipFilters") @Nullable List<String> ipFilters,
        @CustomType.Parameter("metricsEnabled") @Nullable String metricsEnabled,
        @CustomType.Parameter("privateAccess") @Nullable GetGrafanaGrafanaUserConfigPrivateAccess privateAccess,
        @CustomType.Parameter("privatelinkAccess") @Nullable GetGrafanaGrafanaUserConfigPrivatelinkAccess privatelinkAccess,
        @CustomType.Parameter("projectToForkFrom") @Nullable String projectToForkFrom,
        @CustomType.Parameter("publicAccess") @Nullable GetGrafanaGrafanaUserConfigPublicAccess publicAccess,
        @CustomType.Parameter("recoveryBasebackupName") @Nullable String recoveryBasebackupName,
        @CustomType.Parameter("serviceToForkFrom") @Nullable String serviceToForkFrom,
        @CustomType.Parameter("smtpServer") @Nullable GetGrafanaGrafanaUserConfigSmtpServer smtpServer,
        @CustomType.Parameter("staticIps") @Nullable String staticIps,
        @CustomType.Parameter("userAutoAssignOrg") @Nullable String userAutoAssignOrg,
        @CustomType.Parameter("userAutoAssignOrgRole") @Nullable String userAutoAssignOrgRole,
        @CustomType.Parameter("viewersCanEdit") @Nullable String viewersCanEdit) {
        this.alertingEnabled = alertingEnabled;
        this.alertingErrorOrTimeout = alertingErrorOrTimeout;
        this.alertingMaxAnnotationsToKeep = alertingMaxAnnotationsToKeep;
        this.alertingNodataOrNullvalues = alertingNodataOrNullvalues;
        this.allowEmbedding = allowEmbedding;
        this.authAzuread = authAzuread;
        this.authBasicEnabled = authBasicEnabled;
        this.authGenericOauth = authGenericOauth;
        this.authGithub = authGithub;
        this.authGitlab = authGitlab;
        this.authGoogle = authGoogle;
        this.cookieSamesite = cookieSamesite;
        this.customDomain = customDomain;
        this.dashboardsMinRefreshInterval = dashboardsMinRefreshInterval;
        this.dashboardsVersionsToKeep = dashboardsVersionsToKeep;
        this.dataproxySendUserHeader = dataproxySendUserHeader;
        this.dataproxyTimeout = dataproxyTimeout;
        this.dateFormats = dateFormats;
        this.disableGravatar = disableGravatar;
        this.editorsCanAdmin = editorsCanAdmin;
        this.externalImageStorage = externalImageStorage;
        this.googleAnalyticsUaId = googleAnalyticsUaId;
        this.ipFilters = ipFilters;
        this.metricsEnabled = metricsEnabled;
        this.privateAccess = privateAccess;
        this.privatelinkAccess = privatelinkAccess;
        this.projectToForkFrom = projectToForkFrom;
        this.publicAccess = publicAccess;
        this.recoveryBasebackupName = recoveryBasebackupName;
        this.serviceToForkFrom = serviceToForkFrom;
        this.smtpServer = smtpServer;
        this.staticIps = staticIps;
        this.userAutoAssignOrg = userAutoAssignOrg;
        this.userAutoAssignOrgRole = userAutoAssignOrgRole;
        this.viewersCanEdit = viewersCanEdit;
    }

    public Optional<String> alertingEnabled() {
        return Optional.ofNullable(this.alertingEnabled);
    }
    public Optional<String> alertingErrorOrTimeout() {
        return Optional.ofNullable(this.alertingErrorOrTimeout);
    }
    public Optional<String> alertingMaxAnnotationsToKeep() {
        return Optional.ofNullable(this.alertingMaxAnnotationsToKeep);
    }
    public Optional<String> alertingNodataOrNullvalues() {
        return Optional.ofNullable(this.alertingNodataOrNullvalues);
    }
    public Optional<String> allowEmbedding() {
        return Optional.ofNullable(this.allowEmbedding);
    }
    public Optional<GetGrafanaGrafanaUserConfigAuthAzuread> authAzuread() {
        return Optional.ofNullable(this.authAzuread);
    }
    public Optional<String> authBasicEnabled() {
        return Optional.ofNullable(this.authBasicEnabled);
    }
    public Optional<GetGrafanaGrafanaUserConfigAuthGenericOauth> authGenericOauth() {
        return Optional.ofNullable(this.authGenericOauth);
    }
    public Optional<GetGrafanaGrafanaUserConfigAuthGithub> authGithub() {
        return Optional.ofNullable(this.authGithub);
    }
    public Optional<GetGrafanaGrafanaUserConfigAuthGitlab> authGitlab() {
        return Optional.ofNullable(this.authGitlab);
    }
    public Optional<GetGrafanaGrafanaUserConfigAuthGoogle> authGoogle() {
        return Optional.ofNullable(this.authGoogle);
    }
    public Optional<String> cookieSamesite() {
        return Optional.ofNullable(this.cookieSamesite);
    }
    public Optional<String> customDomain() {
        return Optional.ofNullable(this.customDomain);
    }
    public Optional<String> dashboardsMinRefreshInterval() {
        return Optional.ofNullable(this.dashboardsMinRefreshInterval);
    }
    public Optional<String> dashboardsVersionsToKeep() {
        return Optional.ofNullable(this.dashboardsVersionsToKeep);
    }
    public Optional<String> dataproxySendUserHeader() {
        return Optional.ofNullable(this.dataproxySendUserHeader);
    }
    public Optional<String> dataproxyTimeout() {
        return Optional.ofNullable(this.dataproxyTimeout);
    }
    public Optional<GetGrafanaGrafanaUserConfigDateFormats> dateFormats() {
        return Optional.ofNullable(this.dateFormats);
    }
    public Optional<String> disableGravatar() {
        return Optional.ofNullable(this.disableGravatar);
    }
    public Optional<String> editorsCanAdmin() {
        return Optional.ofNullable(this.editorsCanAdmin);
    }
    public Optional<GetGrafanaGrafanaUserConfigExternalImageStorage> externalImageStorage() {
        return Optional.ofNullable(this.externalImageStorage);
    }
    public Optional<String> googleAnalyticsUaId() {
        return Optional.ofNullable(this.googleAnalyticsUaId);
    }
    public List<String> ipFilters() {
        return this.ipFilters == null ? List.of() : this.ipFilters;
    }
    public Optional<String> metricsEnabled() {
        return Optional.ofNullable(this.metricsEnabled);
    }
    public Optional<GetGrafanaGrafanaUserConfigPrivateAccess> privateAccess() {
        return Optional.ofNullable(this.privateAccess);
    }
    public Optional<GetGrafanaGrafanaUserConfigPrivatelinkAccess> privatelinkAccess() {
        return Optional.ofNullable(this.privatelinkAccess);
    }
    public Optional<String> projectToForkFrom() {
        return Optional.ofNullable(this.projectToForkFrom);
    }
    public Optional<GetGrafanaGrafanaUserConfigPublicAccess> publicAccess() {
        return Optional.ofNullable(this.publicAccess);
    }
    public Optional<String> recoveryBasebackupName() {
        return Optional.ofNullable(this.recoveryBasebackupName);
    }
    public Optional<String> serviceToForkFrom() {
        return Optional.ofNullable(this.serviceToForkFrom);
    }
    public Optional<GetGrafanaGrafanaUserConfigSmtpServer> smtpServer() {
        return Optional.ofNullable(this.smtpServer);
    }
    /**
     * @return Static IPs that are going to be associated with this service. Please assign a value using the &#39;toset&#39; function. Once a static ip resource is in the &#39;assigned&#39; state it cannot be unbound from the node again
     * 
     */
    public Optional<String> staticIps() {
        return Optional.ofNullable(this.staticIps);
    }
    public Optional<String> userAutoAssignOrg() {
        return Optional.ofNullable(this.userAutoAssignOrg);
    }
    public Optional<String> userAutoAssignOrgRole() {
        return Optional.ofNullable(this.userAutoAssignOrgRole);
    }
    public Optional<String> viewersCanEdit() {
        return Optional.ofNullable(this.viewersCanEdit);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGrafanaGrafanaUserConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String alertingEnabled;
        private @Nullable String alertingErrorOrTimeout;
        private @Nullable String alertingMaxAnnotationsToKeep;
        private @Nullable String alertingNodataOrNullvalues;
        private @Nullable String allowEmbedding;
        private @Nullable GetGrafanaGrafanaUserConfigAuthAzuread authAzuread;
        private @Nullable String authBasicEnabled;
        private @Nullable GetGrafanaGrafanaUserConfigAuthGenericOauth authGenericOauth;
        private @Nullable GetGrafanaGrafanaUserConfigAuthGithub authGithub;
        private @Nullable GetGrafanaGrafanaUserConfigAuthGitlab authGitlab;
        private @Nullable GetGrafanaGrafanaUserConfigAuthGoogle authGoogle;
        private @Nullable String cookieSamesite;
        private @Nullable String customDomain;
        private @Nullable String dashboardsMinRefreshInterval;
        private @Nullable String dashboardsVersionsToKeep;
        private @Nullable String dataproxySendUserHeader;
        private @Nullable String dataproxyTimeout;
        private @Nullable GetGrafanaGrafanaUserConfigDateFormats dateFormats;
        private @Nullable String disableGravatar;
        private @Nullable String editorsCanAdmin;
        private @Nullable GetGrafanaGrafanaUserConfigExternalImageStorage externalImageStorage;
        private @Nullable String googleAnalyticsUaId;
        private @Nullable List<String> ipFilters;
        private @Nullable String metricsEnabled;
        private @Nullable GetGrafanaGrafanaUserConfigPrivateAccess privateAccess;
        private @Nullable GetGrafanaGrafanaUserConfigPrivatelinkAccess privatelinkAccess;
        private @Nullable String projectToForkFrom;
        private @Nullable GetGrafanaGrafanaUserConfigPublicAccess publicAccess;
        private @Nullable String recoveryBasebackupName;
        private @Nullable String serviceToForkFrom;
        private @Nullable GetGrafanaGrafanaUserConfigSmtpServer smtpServer;
        private @Nullable String staticIps;
        private @Nullable String userAutoAssignOrg;
        private @Nullable String userAutoAssignOrgRole;
        private @Nullable String viewersCanEdit;

        public Builder() {
    	      // Empty
        }

        public Builder(GetGrafanaGrafanaUserConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alertingEnabled = defaults.alertingEnabled;
    	      this.alertingErrorOrTimeout = defaults.alertingErrorOrTimeout;
    	      this.alertingMaxAnnotationsToKeep = defaults.alertingMaxAnnotationsToKeep;
    	      this.alertingNodataOrNullvalues = defaults.alertingNodataOrNullvalues;
    	      this.allowEmbedding = defaults.allowEmbedding;
    	      this.authAzuread = defaults.authAzuread;
    	      this.authBasicEnabled = defaults.authBasicEnabled;
    	      this.authGenericOauth = defaults.authGenericOauth;
    	      this.authGithub = defaults.authGithub;
    	      this.authGitlab = defaults.authGitlab;
    	      this.authGoogle = defaults.authGoogle;
    	      this.cookieSamesite = defaults.cookieSamesite;
    	      this.customDomain = defaults.customDomain;
    	      this.dashboardsMinRefreshInterval = defaults.dashboardsMinRefreshInterval;
    	      this.dashboardsVersionsToKeep = defaults.dashboardsVersionsToKeep;
    	      this.dataproxySendUserHeader = defaults.dataproxySendUserHeader;
    	      this.dataproxyTimeout = defaults.dataproxyTimeout;
    	      this.dateFormats = defaults.dateFormats;
    	      this.disableGravatar = defaults.disableGravatar;
    	      this.editorsCanAdmin = defaults.editorsCanAdmin;
    	      this.externalImageStorage = defaults.externalImageStorage;
    	      this.googleAnalyticsUaId = defaults.googleAnalyticsUaId;
    	      this.ipFilters = defaults.ipFilters;
    	      this.metricsEnabled = defaults.metricsEnabled;
    	      this.privateAccess = defaults.privateAccess;
    	      this.privatelinkAccess = defaults.privatelinkAccess;
    	      this.projectToForkFrom = defaults.projectToForkFrom;
    	      this.publicAccess = defaults.publicAccess;
    	      this.recoveryBasebackupName = defaults.recoveryBasebackupName;
    	      this.serviceToForkFrom = defaults.serviceToForkFrom;
    	      this.smtpServer = defaults.smtpServer;
    	      this.staticIps = defaults.staticIps;
    	      this.userAutoAssignOrg = defaults.userAutoAssignOrg;
    	      this.userAutoAssignOrgRole = defaults.userAutoAssignOrgRole;
    	      this.viewersCanEdit = defaults.viewersCanEdit;
        }

        public Builder alertingEnabled(@Nullable String alertingEnabled) {
            this.alertingEnabled = alertingEnabled;
            return this;
        }
        public Builder alertingErrorOrTimeout(@Nullable String alertingErrorOrTimeout) {
            this.alertingErrorOrTimeout = alertingErrorOrTimeout;
            return this;
        }
        public Builder alertingMaxAnnotationsToKeep(@Nullable String alertingMaxAnnotationsToKeep) {
            this.alertingMaxAnnotationsToKeep = alertingMaxAnnotationsToKeep;
            return this;
        }
        public Builder alertingNodataOrNullvalues(@Nullable String alertingNodataOrNullvalues) {
            this.alertingNodataOrNullvalues = alertingNodataOrNullvalues;
            return this;
        }
        public Builder allowEmbedding(@Nullable String allowEmbedding) {
            this.allowEmbedding = allowEmbedding;
            return this;
        }
        public Builder authAzuread(@Nullable GetGrafanaGrafanaUserConfigAuthAzuread authAzuread) {
            this.authAzuread = authAzuread;
            return this;
        }
        public Builder authBasicEnabled(@Nullable String authBasicEnabled) {
            this.authBasicEnabled = authBasicEnabled;
            return this;
        }
        public Builder authGenericOauth(@Nullable GetGrafanaGrafanaUserConfigAuthGenericOauth authGenericOauth) {
            this.authGenericOauth = authGenericOauth;
            return this;
        }
        public Builder authGithub(@Nullable GetGrafanaGrafanaUserConfigAuthGithub authGithub) {
            this.authGithub = authGithub;
            return this;
        }
        public Builder authGitlab(@Nullable GetGrafanaGrafanaUserConfigAuthGitlab authGitlab) {
            this.authGitlab = authGitlab;
            return this;
        }
        public Builder authGoogle(@Nullable GetGrafanaGrafanaUserConfigAuthGoogle authGoogle) {
            this.authGoogle = authGoogle;
            return this;
        }
        public Builder cookieSamesite(@Nullable String cookieSamesite) {
            this.cookieSamesite = cookieSamesite;
            return this;
        }
        public Builder customDomain(@Nullable String customDomain) {
            this.customDomain = customDomain;
            return this;
        }
        public Builder dashboardsMinRefreshInterval(@Nullable String dashboardsMinRefreshInterval) {
            this.dashboardsMinRefreshInterval = dashboardsMinRefreshInterval;
            return this;
        }
        public Builder dashboardsVersionsToKeep(@Nullable String dashboardsVersionsToKeep) {
            this.dashboardsVersionsToKeep = dashboardsVersionsToKeep;
            return this;
        }
        public Builder dataproxySendUserHeader(@Nullable String dataproxySendUserHeader) {
            this.dataproxySendUserHeader = dataproxySendUserHeader;
            return this;
        }
        public Builder dataproxyTimeout(@Nullable String dataproxyTimeout) {
            this.dataproxyTimeout = dataproxyTimeout;
            return this;
        }
        public Builder dateFormats(@Nullable GetGrafanaGrafanaUserConfigDateFormats dateFormats) {
            this.dateFormats = dateFormats;
            return this;
        }
        public Builder disableGravatar(@Nullable String disableGravatar) {
            this.disableGravatar = disableGravatar;
            return this;
        }
        public Builder editorsCanAdmin(@Nullable String editorsCanAdmin) {
            this.editorsCanAdmin = editorsCanAdmin;
            return this;
        }
        public Builder externalImageStorage(@Nullable GetGrafanaGrafanaUserConfigExternalImageStorage externalImageStorage) {
            this.externalImageStorage = externalImageStorage;
            return this;
        }
        public Builder googleAnalyticsUaId(@Nullable String googleAnalyticsUaId) {
            this.googleAnalyticsUaId = googleAnalyticsUaId;
            return this;
        }
        public Builder ipFilters(@Nullable List<String> ipFilters) {
            this.ipFilters = ipFilters;
            return this;
        }
        public Builder ipFilters(String... ipFilters) {
            return ipFilters(List.of(ipFilters));
        }
        public Builder metricsEnabled(@Nullable String metricsEnabled) {
            this.metricsEnabled = metricsEnabled;
            return this;
        }
        public Builder privateAccess(@Nullable GetGrafanaGrafanaUserConfigPrivateAccess privateAccess) {
            this.privateAccess = privateAccess;
            return this;
        }
        public Builder privatelinkAccess(@Nullable GetGrafanaGrafanaUserConfigPrivatelinkAccess privatelinkAccess) {
            this.privatelinkAccess = privatelinkAccess;
            return this;
        }
        public Builder projectToForkFrom(@Nullable String projectToForkFrom) {
            this.projectToForkFrom = projectToForkFrom;
            return this;
        }
        public Builder publicAccess(@Nullable GetGrafanaGrafanaUserConfigPublicAccess publicAccess) {
            this.publicAccess = publicAccess;
            return this;
        }
        public Builder recoveryBasebackupName(@Nullable String recoveryBasebackupName) {
            this.recoveryBasebackupName = recoveryBasebackupName;
            return this;
        }
        public Builder serviceToForkFrom(@Nullable String serviceToForkFrom) {
            this.serviceToForkFrom = serviceToForkFrom;
            return this;
        }
        public Builder smtpServer(@Nullable GetGrafanaGrafanaUserConfigSmtpServer smtpServer) {
            this.smtpServer = smtpServer;
            return this;
        }
        public Builder staticIps(@Nullable String staticIps) {
            this.staticIps = staticIps;
            return this;
        }
        public Builder userAutoAssignOrg(@Nullable String userAutoAssignOrg) {
            this.userAutoAssignOrg = userAutoAssignOrg;
            return this;
        }
        public Builder userAutoAssignOrgRole(@Nullable String userAutoAssignOrgRole) {
            this.userAutoAssignOrgRole = userAutoAssignOrgRole;
            return this;
        }
        public Builder viewersCanEdit(@Nullable String viewersCanEdit) {
            this.viewersCanEdit = viewersCanEdit;
            return this;
        }        public GetGrafanaGrafanaUserConfig build() {
            return new GetGrafanaGrafanaUserConfig(alertingEnabled, alertingErrorOrTimeout, alertingMaxAnnotationsToKeep, alertingNodataOrNullvalues, allowEmbedding, authAzuread, authBasicEnabled, authGenericOauth, authGithub, authGitlab, authGoogle, cookieSamesite, customDomain, dashboardsMinRefreshInterval, dashboardsVersionsToKeep, dataproxySendUserHeader, dataproxyTimeout, dateFormats, disableGravatar, editorsCanAdmin, externalImageStorage, googleAnalyticsUaId, ipFilters, metricsEnabled, privateAccess, privatelinkAccess, projectToForkFrom, publicAccess, recoveryBasebackupName, serviceToForkFrom, smtpServer, staticIps, userAutoAssignOrg, userAutoAssignOrgRole, viewersCanEdit);
        }
    }
}
