// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MySqlMysqlUserConfigMigrationArgs extends com.pulumi.resources.ResourceArgs {

    public static final MySqlMysqlUserConfigMigrationArgs Empty = new MySqlMysqlUserConfigMigrationArgs();

    @Import(name="dbname")
    private @Nullable Output<String> dbname;

    public Optional<Output<String>> dbname() {
        return Optional.ofNullable(this.dbname);
    }

    @Import(name="host")
    private @Nullable Output<String> host;

    public Optional<Output<String>> host() {
        return Optional.ofNullable(this.host);
    }

    @Import(name="ignoreDbs")
    private @Nullable Output<String> ignoreDbs;

    public Optional<Output<String>> ignoreDbs() {
        return Optional.ofNullable(this.ignoreDbs);
    }

    @Import(name="method")
    private @Nullable Output<String> method;

    public Optional<Output<String>> method() {
        return Optional.ofNullable(this.method);
    }

    @Import(name="password")
    private @Nullable Output<String> password;

    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    @Import(name="port")
    private @Nullable Output<String> port;

    public Optional<Output<String>> port() {
        return Optional.ofNullable(this.port);
    }

    @Import(name="ssl")
    private @Nullable Output<String> ssl;

    public Optional<Output<String>> ssl() {
        return Optional.ofNullable(this.ssl);
    }

    @Import(name="username")
    private @Nullable Output<String> username;

    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    private MySqlMysqlUserConfigMigrationArgs() {}

    private MySqlMysqlUserConfigMigrationArgs(MySqlMysqlUserConfigMigrationArgs $) {
        this.dbname = $.dbname;
        this.host = $.host;
        this.ignoreDbs = $.ignoreDbs;
        this.method = $.method;
        this.password = $.password;
        this.port = $.port;
        this.ssl = $.ssl;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MySqlMysqlUserConfigMigrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MySqlMysqlUserConfigMigrationArgs $;

        public Builder() {
            $ = new MySqlMysqlUserConfigMigrationArgs();
        }

        public Builder(MySqlMysqlUserConfigMigrationArgs defaults) {
            $ = new MySqlMysqlUserConfigMigrationArgs(Objects.requireNonNull(defaults));
        }

        public Builder dbname(@Nullable Output<String> dbname) {
            $.dbname = dbname;
            return this;
        }

        public Builder dbname(String dbname) {
            return dbname(Output.of(dbname));
        }

        public Builder host(@Nullable Output<String> host) {
            $.host = host;
            return this;
        }

        public Builder host(String host) {
            return host(Output.of(host));
        }

        public Builder ignoreDbs(@Nullable Output<String> ignoreDbs) {
            $.ignoreDbs = ignoreDbs;
            return this;
        }

        public Builder ignoreDbs(String ignoreDbs) {
            return ignoreDbs(Output.of(ignoreDbs));
        }

        public Builder method(@Nullable Output<String> method) {
            $.method = method;
            return this;
        }

        public Builder method(String method) {
            return method(Output.of(method));
        }

        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        public Builder password(String password) {
            return password(Output.of(password));
        }

        public Builder port(@Nullable Output<String> port) {
            $.port = port;
            return this;
        }

        public Builder port(String port) {
            return port(Output.of(port));
        }

        public Builder ssl(@Nullable Output<String> ssl) {
            $.ssl = ssl;
            return this;
        }

        public Builder ssl(String ssl) {
            return ssl(Output.of(ssl));
        }

        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        public Builder username(String username) {
            return username(Output.of(username));
        }

        public MySqlMysqlUserConfigMigrationArgs build() {
            return $;
        }
    }

}
