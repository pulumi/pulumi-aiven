// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.aiven.AccountTeamProjectArgs;
import com.pulumi.aiven.Utilities;
import com.pulumi.aiven.inputs.AccountTeamProjectState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Links an existing project to an existing team. Both the project and team should have the same `account_id`.
 * 
 * !&gt; **Teams have been deprecated and are being migrated to groups**
 * **On 30 September 2024** the Account Owners team will transition to super admin. Super admin have full access to the organization.
 * The Account Owners and super admin are synced, so the removal of the Account Owners team will have no impact on existing permissions.
 * **From 4 November 2024** you won&#39;t be able to create new teams or update existing ones. Existing teams will be migrated to groups after
 * this date. **On 2 December 2024** all teams will be deleted and the teams feature will be completely removed. View the
 * migration guide for more information on the changes and migrating to groups.
 * 
 * &gt; **Important**
 * You can&#39;t delete the Account Owners team. **Deleting all other teams in your organization will disable the teams feature.**
 * You won&#39;t be able to create new teams or access your Account Owners team.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aiven.Project;
 * import com.pulumi.aiven.ProjectArgs;
 * import com.pulumi.aiven.AccountTeam;
 * import com.pulumi.aiven.AccountTeamArgs;
 * import com.pulumi.aiven.AccountTeamProject;
 * import com.pulumi.aiven.AccountTeamProjectArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleProject = new Project("exampleProject", ProjectArgs.builder()
 *             .project("project-1")
 *             .accountId(ACCOUNT_RESOURCE_NAME.accountId())
 *             .build());
 * 
 *         var exampleTeam = new AccountTeam("exampleTeam", AccountTeamArgs.builder()
 *             .accountId(ACCOUNT_RESOURCE_NAMEAivenAccount.accountId())
 *             .name("Example team")
 *             .build());
 * 
 *         var main = new AccountTeamProject("main", AccountTeamProjectArgs.builder()
 *             .accountId(ACCOUNT_RESOURCE_NAMEAivenAccount.accountId())
 *             .teamId(exampleTeam.teamId())
 *             .projectName(exampleProject.project())
 *             .teamType("admin")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import aiven:index/accountTeamProject:AccountTeamProject account_team_project1 account_id/team_id/project_name
 * ```
 * 
 */
@ResourceType(type="aiven:index/accountTeamProject:AccountTeamProject")
public class AccountTeamProject extends com.pulumi.resources.CustomResource {
    /**
     * The unique account id
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return The unique account id
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * The name of an already existing project
     * 
     */
    @Export(name="projectName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> projectName;

    /**
     * @return The name of an already existing project
     * 
     */
    public Output<Optional<String>> projectName() {
        return Codegen.optional(this.projectName);
    }
    /**
     * An account team id
     * 
     */
    @Export(name="teamId", refs={String.class}, tree="[0]")
    private Output<String> teamId;

    /**
     * @return An account team id
     * 
     */
    public Output<String> teamId() {
        return this.teamId;
    }
    /**
     * The Account team project type. The possible values are `admin`, `developer`, `operator`, `organization:app_users:write`, `organization:audit_logs:read`, `organization:billing:read`, `organization:billing:write`, `organization:domains:write`, `organization:groups:write`, `organization:idps:write`, `organization:networking:read`, `organization:networking:write`, `organization:projects:write`, `organization:users:write`, `project:audit_logs:read`, `project:integrations:read`, `project:integrations:write`, `project:networking:read`, `project:networking:write`, `project:permissions:read`, `project:services:read`, `project:services:write`, `read_only`, `role:organization:admin`, `role:services:maintenance`, `role:services:recover`, `service:configuration:write`, `service:data:write`, `service:logs:read`, `service:secrets:read` and `service:users:write`.
     * 
     */
    @Export(name="teamType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> teamType;

    /**
     * @return The Account team project type. The possible values are `admin`, `developer`, `operator`, `organization:app_users:write`, `organization:audit_logs:read`, `organization:billing:read`, `organization:billing:write`, `organization:domains:write`, `organization:groups:write`, `organization:idps:write`, `organization:networking:read`, `organization:networking:write`, `organization:projects:write`, `organization:users:write`, `project:audit_logs:read`, `project:integrations:read`, `project:integrations:write`, `project:networking:read`, `project:networking:write`, `project:permissions:read`, `project:services:read`, `project:services:write`, `read_only`, `role:organization:admin`, `role:services:maintenance`, `role:services:recover`, `service:configuration:write`, `service:data:write`, `service:logs:read`, `service:secrets:read` and `service:users:write`.
     * 
     */
    public Output<Optional<String>> teamType() {
        return Codegen.optional(this.teamType);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AccountTeamProject(java.lang.String name) {
        this(name, AccountTeamProjectArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AccountTeamProject(java.lang.String name, AccountTeamProjectArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AccountTeamProject(java.lang.String name, AccountTeamProjectArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aiven:index/accountTeamProject:AccountTeamProject", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AccountTeamProject(java.lang.String name, Output<java.lang.String> id, @Nullable AccountTeamProjectState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aiven:index/accountTeamProject:AccountTeamProject", name, state, makeResourceOptions(options, id), false);
    }

    private static AccountTeamProjectArgs makeArgs(AccountTeamProjectArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AccountTeamProjectArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AccountTeamProject get(java.lang.String name, Output<java.lang.String> id, @Nullable AccountTeamProjectState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AccountTeamProject(name, id, state, options);
    }
}
