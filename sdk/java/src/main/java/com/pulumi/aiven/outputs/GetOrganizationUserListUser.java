// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.aiven.outputs.GetOrganizationUserListUserUserInfo;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetOrganizationUserListUser {
    /**
     * @return Super admin state of the organization user
     * 
     */
    private Boolean isSuperAdmin;
    /**
     * @return Join time
     * 
     */
    private String joinTime;
    /**
     * @return Last activity time
     * 
     */
    private String lastActivityTime;
    /**
     * @return User ID
     * 
     */
    private String userId;
    private List<GetOrganizationUserListUserUserInfo> userInfos;

    private GetOrganizationUserListUser() {}
    /**
     * @return Super admin state of the organization user
     * 
     */
    public Boolean isSuperAdmin() {
        return this.isSuperAdmin;
    }
    /**
     * @return Join time
     * 
     */
    public String joinTime() {
        return this.joinTime;
    }
    /**
     * @return Last activity time
     * 
     */
    public String lastActivityTime() {
        return this.lastActivityTime;
    }
    /**
     * @return User ID
     * 
     */
    public String userId() {
        return this.userId;
    }
    public List<GetOrganizationUserListUserUserInfo> userInfos() {
        return this.userInfos;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOrganizationUserListUser defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean isSuperAdmin;
        private String joinTime;
        private String lastActivityTime;
        private String userId;
        private List<GetOrganizationUserListUserUserInfo> userInfos;
        public Builder() {}
        public Builder(GetOrganizationUserListUser defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isSuperAdmin = defaults.isSuperAdmin;
    	      this.joinTime = defaults.joinTime;
    	      this.lastActivityTime = defaults.lastActivityTime;
    	      this.userId = defaults.userId;
    	      this.userInfos = defaults.userInfos;
        }

        @CustomType.Setter
        public Builder isSuperAdmin(Boolean isSuperAdmin) {
            if (isSuperAdmin == null) {
              throw new MissingRequiredPropertyException("GetOrganizationUserListUser", "isSuperAdmin");
            }
            this.isSuperAdmin = isSuperAdmin;
            return this;
        }
        @CustomType.Setter
        public Builder joinTime(String joinTime) {
            if (joinTime == null) {
              throw new MissingRequiredPropertyException("GetOrganizationUserListUser", "joinTime");
            }
            this.joinTime = joinTime;
            return this;
        }
        @CustomType.Setter
        public Builder lastActivityTime(String lastActivityTime) {
            if (lastActivityTime == null) {
              throw new MissingRequiredPropertyException("GetOrganizationUserListUser", "lastActivityTime");
            }
            this.lastActivityTime = lastActivityTime;
            return this;
        }
        @CustomType.Setter
        public Builder userId(String userId) {
            if (userId == null) {
              throw new MissingRequiredPropertyException("GetOrganizationUserListUser", "userId");
            }
            this.userId = userId;
            return this;
        }
        @CustomType.Setter
        public Builder userInfos(List<GetOrganizationUserListUserUserInfo> userInfos) {
            if (userInfos == null) {
              throw new MissingRequiredPropertyException("GetOrganizationUserListUser", "userInfos");
            }
            this.userInfos = userInfos;
            return this;
        }
        public Builder userInfos(GetOrganizationUserListUserUserInfo... userInfos) {
            return userInfos(List.of(userInfos));
        }
        public GetOrganizationUserListUser build() {
            final var _resultValue = new GetOrganizationUserListUser();
            _resultValue.isSuperAdmin = isSuperAdmin;
            _resultValue.joinTime = joinTime;
            _resultValue.lastActivityTime = lastActivityTime;
            _resultValue.userId = userId;
            _resultValue.userInfos = userInfos;
            return _resultValue;
        }
    }
}
