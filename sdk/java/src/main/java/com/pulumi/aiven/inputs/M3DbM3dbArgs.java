// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class M3DbM3dbArgs extends com.pulumi.resources.ResourceArgs {

    public static final M3DbM3dbArgs Empty = new M3DbM3dbArgs();

    /**
     * M3DB cluster URI.
     * 
     */
    @Import(name="httpClusterUri")
    private @Nullable Output<String> httpClusterUri;

    /**
     * @return M3DB cluster URI.
     * 
     */
    public Optional<Output<String>> httpClusterUri() {
        return Optional.ofNullable(this.httpClusterUri);
    }

    /**
     * M3DB node URI.
     * 
     */
    @Import(name="httpNodeUri")
    private @Nullable Output<String> httpNodeUri;

    /**
     * @return M3DB node URI.
     * 
     */
    public Optional<Output<String>> httpNodeUri() {
        return Optional.ofNullable(this.httpNodeUri);
    }

    /**
     * InfluxDB URI.
     * 
     */
    @Import(name="influxdbUri")
    private @Nullable Output<String> influxdbUri;

    /**
     * @return InfluxDB URI.
     * 
     */
    public Optional<Output<String>> influxdbUri() {
        return Optional.ofNullable(this.influxdbUri);
    }

    /**
     * Prometheus remote read URI.
     * 
     */
    @Import(name="prometheusRemoteReadUri")
    private @Nullable Output<String> prometheusRemoteReadUri;

    /**
     * @return Prometheus remote read URI.
     * 
     */
    public Optional<Output<String>> prometheusRemoteReadUri() {
        return Optional.ofNullable(this.prometheusRemoteReadUri);
    }

    /**
     * Prometheus remote write URI.
     * 
     */
    @Import(name="prometheusRemoteWriteUri")
    private @Nullable Output<String> prometheusRemoteWriteUri;

    /**
     * @return Prometheus remote write URI.
     * 
     */
    public Optional<Output<String>> prometheusRemoteWriteUri() {
        return Optional.ofNullable(this.prometheusRemoteWriteUri);
    }

    /**
     * M3DB server URIs.
     * 
     */
    @Import(name="uris")
    private @Nullable Output<List<String>> uris;

    /**
     * @return M3DB server URIs.
     * 
     */
    public Optional<Output<List<String>>> uris() {
        return Optional.ofNullable(this.uris);
    }

    private M3DbM3dbArgs() {}

    private M3DbM3dbArgs(M3DbM3dbArgs $) {
        this.httpClusterUri = $.httpClusterUri;
        this.httpNodeUri = $.httpNodeUri;
        this.influxdbUri = $.influxdbUri;
        this.prometheusRemoteReadUri = $.prometheusRemoteReadUri;
        this.prometheusRemoteWriteUri = $.prometheusRemoteWriteUri;
        this.uris = $.uris;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(M3DbM3dbArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private M3DbM3dbArgs $;

        public Builder() {
            $ = new M3DbM3dbArgs();
        }

        public Builder(M3DbM3dbArgs defaults) {
            $ = new M3DbM3dbArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param httpClusterUri M3DB cluster URI.
         * 
         * @return builder
         * 
         */
        public Builder httpClusterUri(@Nullable Output<String> httpClusterUri) {
            $.httpClusterUri = httpClusterUri;
            return this;
        }

        /**
         * @param httpClusterUri M3DB cluster URI.
         * 
         * @return builder
         * 
         */
        public Builder httpClusterUri(String httpClusterUri) {
            return httpClusterUri(Output.of(httpClusterUri));
        }

        /**
         * @param httpNodeUri M3DB node URI.
         * 
         * @return builder
         * 
         */
        public Builder httpNodeUri(@Nullable Output<String> httpNodeUri) {
            $.httpNodeUri = httpNodeUri;
            return this;
        }

        /**
         * @param httpNodeUri M3DB node URI.
         * 
         * @return builder
         * 
         */
        public Builder httpNodeUri(String httpNodeUri) {
            return httpNodeUri(Output.of(httpNodeUri));
        }

        /**
         * @param influxdbUri InfluxDB URI.
         * 
         * @return builder
         * 
         */
        public Builder influxdbUri(@Nullable Output<String> influxdbUri) {
            $.influxdbUri = influxdbUri;
            return this;
        }

        /**
         * @param influxdbUri InfluxDB URI.
         * 
         * @return builder
         * 
         */
        public Builder influxdbUri(String influxdbUri) {
            return influxdbUri(Output.of(influxdbUri));
        }

        /**
         * @param prometheusRemoteReadUri Prometheus remote read URI.
         * 
         * @return builder
         * 
         */
        public Builder prometheusRemoteReadUri(@Nullable Output<String> prometheusRemoteReadUri) {
            $.prometheusRemoteReadUri = prometheusRemoteReadUri;
            return this;
        }

        /**
         * @param prometheusRemoteReadUri Prometheus remote read URI.
         * 
         * @return builder
         * 
         */
        public Builder prometheusRemoteReadUri(String prometheusRemoteReadUri) {
            return prometheusRemoteReadUri(Output.of(prometheusRemoteReadUri));
        }

        /**
         * @param prometheusRemoteWriteUri Prometheus remote write URI.
         * 
         * @return builder
         * 
         */
        public Builder prometheusRemoteWriteUri(@Nullable Output<String> prometheusRemoteWriteUri) {
            $.prometheusRemoteWriteUri = prometheusRemoteWriteUri;
            return this;
        }

        /**
         * @param prometheusRemoteWriteUri Prometheus remote write URI.
         * 
         * @return builder
         * 
         */
        public Builder prometheusRemoteWriteUri(String prometheusRemoteWriteUri) {
            return prometheusRemoteWriteUri(Output.of(prometheusRemoteWriteUri));
        }

        /**
         * @param uris M3DB server URIs.
         * 
         * @return builder
         * 
         */
        public Builder uris(@Nullable Output<List<String>> uris) {
            $.uris = uris;
            return this;
        }

        /**
         * @param uris M3DB server URIs.
         * 
         * @return builder
         * 
         */
        public Builder uris(List<String> uris) {
            return uris(Output.of(uris));
        }

        /**
         * @param uris M3DB server URIs.
         * 
         * @return builder
         * 
         */
        public Builder uris(String... uris) {
            return uris(List.of(uris));
        }

        public M3DbM3dbArgs build() {
            return $;
        }
    }

}
