// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.aiven.ConnectionPoolArgs;
import com.pulumi.aiven.Utilities;
import com.pulumi.aiven.inputs.ConnectionPoolState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The Connection Pool resource allows the creation and management of Aiven Connection Pools.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aiven.ConnectionPool;
 * import com.pulumi.aiven.ConnectionPoolArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var mytestpool = new ConnectionPool(&#34;mytestpool&#34;, ConnectionPoolArgs.builder()        
 *             .project(myproject.project())
 *             .serviceName(mypg.serviceName())
 *             .databaseName(mypgdatabase.databaseName())
 *             .poolMode(&#34;transaction&#34;)
 *             .poolName(&#34;mypool&#34;)
 *             .poolSize(10)
 *             .username(mypguser.username())
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import aiven:index/connectionPool:ConnectionPool mytestpool project/service_name/pool_name
 * ```
 * 
 */
@ResourceType(type="aiven:index/connectionPool:ConnectionPool")
public class ConnectionPool extends com.pulumi.resources.CustomResource {
    /**
     * The URI for connecting to the pool
     * 
     */
    @Export(name="connectionUri", refs={String.class}, tree="[0]")
    private Output<String> connectionUri;

    /**
     * @return The URI for connecting to the pool
     * 
     */
    public Output<String> connectionUri() {
        return this.connectionUri;
    }
    /**
     * The name of the database the pool connects to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Export(name="databaseName", refs={String.class}, tree="[0]")
    private Output<String> databaseName;

    /**
     * @return The name of the database the pool connects to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> databaseName() {
        return this.databaseName;
    }
    /**
     * The mode the pool operates in. The possible values are `session`, `transaction` and `statement`. The default value is `transaction`.
     * 
     */
    @Export(name="poolMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> poolMode;

    /**
     * @return The mode the pool operates in. The possible values are `session`, `transaction` and `statement`. The default value is `transaction`.
     * 
     */
    public Output<Optional<String>> poolMode() {
        return Codegen.optional(this.poolMode);
    }
    /**
     * The name of the created pool. Changing this property forces recreation of the resource.
     * 
     */
    @Export(name="poolName", refs={String.class}, tree="[0]")
    private Output<String> poolName;

    /**
     * @return The name of the created pool. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> poolName() {
        return this.poolName;
    }
    /**
     * The number of connections the pool may create towards the backend server. This does not affect the number of incoming connections, which is always a much larger number. The default value is `10`.
     * 
     */
    @Export(name="poolSize", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> poolSize;

    /**
     * @return The number of connections the pool may create towards the backend server. This does not affect the number of incoming connections, which is always a much larger number. The default value is `10`.
     * 
     */
    public Output<Optional<Integer>> poolSize() {
        return Codegen.optional(this.poolSize);
    }
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Export(name="serviceName", refs={String.class}, tree="[0]")
    private Output<String> serviceName;

    /**
     * @return Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }
    /**
     * The name of the service user used to connect to the database. To set up proper dependencies please refer to this variable as a reference.
     * 
     */
    @Export(name="username", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> username;

    /**
     * @return The name of the service user used to connect to the database. To set up proper dependencies please refer to this variable as a reference.
     * 
     */
    public Output<Optional<String>> username() {
        return Codegen.optional(this.username);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ConnectionPool(String name) {
        this(name, ConnectionPoolArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ConnectionPool(String name, ConnectionPoolArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ConnectionPool(String name, ConnectionPoolArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aiven:index/connectionPool:ConnectionPool", name, args == null ? ConnectionPoolArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ConnectionPool(String name, Output<String> id, @Nullable ConnectionPoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aiven:index/connectionPool:ConnectionPool", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "connectionUri"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ConnectionPool get(String name, Output<String> id, @Nullable ConnectionPoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ConnectionPool(name, id, state, options);
    }
}
