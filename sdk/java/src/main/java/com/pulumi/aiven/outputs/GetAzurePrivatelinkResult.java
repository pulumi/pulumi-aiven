// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAzurePrivatelinkResult {
    /**
     * @return The Azure Private Link service alias.
     * 
     */
    private String azureServiceAlias;
    /**
     * @return The Azure Private Link service ID.
     * 
     */
    private String azureServiceId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Printable result of the Azure Private Link request.
     * 
     */
    private String message;
    /**
     * @return The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    private String project;
    /**
     * @return The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    private String serviceName;
    /**
     * @return The state of the Private Link resource.
     * 
     */
    private String state;
    /**
     * @return A list of allowed subscription IDs. Maximum length: `16`.
     * 
     */
    private List<String> userSubscriptionIds;

    private GetAzurePrivatelinkResult() {}
    /**
     * @return The Azure Private Link service alias.
     * 
     */
    public String azureServiceAlias() {
        return this.azureServiceAlias;
    }
    /**
     * @return The Azure Private Link service ID.
     * 
     */
    public String azureServiceId() {
        return this.azureServiceId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Printable result of the Azure Private Link request.
     * 
     */
    public String message() {
        return this.message;
    }
    /**
     * @return The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public String project() {
        return this.project;
    }
    /**
     * @return The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return The state of the Private Link resource.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return A list of allowed subscription IDs. Maximum length: `16`.
     * 
     */
    public List<String> userSubscriptionIds() {
        return this.userSubscriptionIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAzurePrivatelinkResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String azureServiceAlias;
        private String azureServiceId;
        private String id;
        private String message;
        private String project;
        private String serviceName;
        private String state;
        private List<String> userSubscriptionIds;
        public Builder() {}
        public Builder(GetAzurePrivatelinkResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.azureServiceAlias = defaults.azureServiceAlias;
    	      this.azureServiceId = defaults.azureServiceId;
    	      this.id = defaults.id;
    	      this.message = defaults.message;
    	      this.project = defaults.project;
    	      this.serviceName = defaults.serviceName;
    	      this.state = defaults.state;
    	      this.userSubscriptionIds = defaults.userSubscriptionIds;
        }

        @CustomType.Setter
        public Builder azureServiceAlias(String azureServiceAlias) {
            if (azureServiceAlias == null) {
              throw new MissingRequiredPropertyException("GetAzurePrivatelinkResult", "azureServiceAlias");
            }
            this.azureServiceAlias = azureServiceAlias;
            return this;
        }
        @CustomType.Setter
        public Builder azureServiceId(String azureServiceId) {
            if (azureServiceId == null) {
              throw new MissingRequiredPropertyException("GetAzurePrivatelinkResult", "azureServiceId");
            }
            this.azureServiceId = azureServiceId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAzurePrivatelinkResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder message(String message) {
            if (message == null) {
              throw new MissingRequiredPropertyException("GetAzurePrivatelinkResult", "message");
            }
            this.message = message;
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            if (project == null) {
              throw new MissingRequiredPropertyException("GetAzurePrivatelinkResult", "project");
            }
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            if (serviceName == null) {
              throw new MissingRequiredPropertyException("GetAzurePrivatelinkResult", "serviceName");
            }
            this.serviceName = serviceName;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetAzurePrivatelinkResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder userSubscriptionIds(List<String> userSubscriptionIds) {
            if (userSubscriptionIds == null) {
              throw new MissingRequiredPropertyException("GetAzurePrivatelinkResult", "userSubscriptionIds");
            }
            this.userSubscriptionIds = userSubscriptionIds;
            return this;
        }
        public Builder userSubscriptionIds(String... userSubscriptionIds) {
            return userSubscriptionIds(List.of(userSubscriptionIds));
        }
        public GetAzurePrivatelinkResult build() {
            final var _resultValue = new GetAzurePrivatelinkResult();
            _resultValue.azureServiceAlias = azureServiceAlias;
            _resultValue.azureServiceId = azureServiceId;
            _resultValue.id = id;
            _resultValue.message = message;
            _resultValue.project = project;
            _resultValue.serviceName = serviceName;
            _resultValue.state = state;
            _resultValue.userSubscriptionIds = userSubscriptionIds;
            return _resultValue;
        }
    }
}
