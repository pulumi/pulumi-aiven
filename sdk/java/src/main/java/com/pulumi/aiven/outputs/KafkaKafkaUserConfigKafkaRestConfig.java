// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class KafkaKafkaUserConfigKafkaRestConfig {
    private @Nullable Boolean consumerEnableAutoCommit;
    private @Nullable Integer consumerRequestMaxBytes;
    private @Nullable Integer consumerRequestTimeoutMs;
    private @Nullable String producerAcks;
    private @Nullable String producerCompressionType;
    private @Nullable Integer producerLingerMs;
    private @Nullable Integer producerMaxRequestSize;
    private @Nullable Integer simpleconsumerPoolSizeMax;

    private KafkaKafkaUserConfigKafkaRestConfig() {}
    public Optional<Boolean> consumerEnableAutoCommit() {
        return Optional.ofNullable(this.consumerEnableAutoCommit);
    }
    public Optional<Integer> consumerRequestMaxBytes() {
        return Optional.ofNullable(this.consumerRequestMaxBytes);
    }
    public Optional<Integer> consumerRequestTimeoutMs() {
        return Optional.ofNullable(this.consumerRequestTimeoutMs);
    }
    public Optional<String> producerAcks() {
        return Optional.ofNullable(this.producerAcks);
    }
    public Optional<String> producerCompressionType() {
        return Optional.ofNullable(this.producerCompressionType);
    }
    public Optional<Integer> producerLingerMs() {
        return Optional.ofNullable(this.producerLingerMs);
    }
    public Optional<Integer> producerMaxRequestSize() {
        return Optional.ofNullable(this.producerMaxRequestSize);
    }
    public Optional<Integer> simpleconsumerPoolSizeMax() {
        return Optional.ofNullable(this.simpleconsumerPoolSizeMax);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KafkaKafkaUserConfigKafkaRestConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean consumerEnableAutoCommit;
        private @Nullable Integer consumerRequestMaxBytes;
        private @Nullable Integer consumerRequestTimeoutMs;
        private @Nullable String producerAcks;
        private @Nullable String producerCompressionType;
        private @Nullable Integer producerLingerMs;
        private @Nullable Integer producerMaxRequestSize;
        private @Nullable Integer simpleconsumerPoolSizeMax;
        public Builder() {}
        public Builder(KafkaKafkaUserConfigKafkaRestConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consumerEnableAutoCommit = defaults.consumerEnableAutoCommit;
    	      this.consumerRequestMaxBytes = defaults.consumerRequestMaxBytes;
    	      this.consumerRequestTimeoutMs = defaults.consumerRequestTimeoutMs;
    	      this.producerAcks = defaults.producerAcks;
    	      this.producerCompressionType = defaults.producerCompressionType;
    	      this.producerLingerMs = defaults.producerLingerMs;
    	      this.producerMaxRequestSize = defaults.producerMaxRequestSize;
    	      this.simpleconsumerPoolSizeMax = defaults.simpleconsumerPoolSizeMax;
        }

        @CustomType.Setter
        public Builder consumerEnableAutoCommit(@Nullable Boolean consumerEnableAutoCommit) {
            this.consumerEnableAutoCommit = consumerEnableAutoCommit;
            return this;
        }
        @CustomType.Setter
        public Builder consumerRequestMaxBytes(@Nullable Integer consumerRequestMaxBytes) {
            this.consumerRequestMaxBytes = consumerRequestMaxBytes;
            return this;
        }
        @CustomType.Setter
        public Builder consumerRequestTimeoutMs(@Nullable Integer consumerRequestTimeoutMs) {
            this.consumerRequestTimeoutMs = consumerRequestTimeoutMs;
            return this;
        }
        @CustomType.Setter
        public Builder producerAcks(@Nullable String producerAcks) {
            this.producerAcks = producerAcks;
            return this;
        }
        @CustomType.Setter
        public Builder producerCompressionType(@Nullable String producerCompressionType) {
            this.producerCompressionType = producerCompressionType;
            return this;
        }
        @CustomType.Setter
        public Builder producerLingerMs(@Nullable Integer producerLingerMs) {
            this.producerLingerMs = producerLingerMs;
            return this;
        }
        @CustomType.Setter
        public Builder producerMaxRequestSize(@Nullable Integer producerMaxRequestSize) {
            this.producerMaxRequestSize = producerMaxRequestSize;
            return this;
        }
        @CustomType.Setter
        public Builder simpleconsumerPoolSizeMax(@Nullable Integer simpleconsumerPoolSizeMax) {
            this.simpleconsumerPoolSizeMax = simpleconsumerPoolSizeMax;
            return this;
        }
        public KafkaKafkaUserConfigKafkaRestConfig build() {
            final var o = new KafkaKafkaUserConfigKafkaRestConfig();
            o.consumerEnableAutoCommit = consumerEnableAutoCommit;
            o.consumerRequestMaxBytes = consumerRequestMaxBytes;
            o.consumerRequestTimeoutMs = consumerRequestTimeoutMs;
            o.producerAcks = producerAcks;
            o.producerCompressionType = producerCompressionType;
            o.producerLingerMs = producerLingerMs;
            o.producerMaxRequestSize = producerMaxRequestSize;
            o.simpleconsumerPoolSizeMax = simpleconsumerPoolSizeMax;
            return o;
        }
    }
}
