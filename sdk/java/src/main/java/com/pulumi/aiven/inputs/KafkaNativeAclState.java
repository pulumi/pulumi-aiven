// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KafkaNativeAclState extends com.pulumi.resources.ResourceArgs {

    public static final KafkaNativeAclState Empty = new KafkaNativeAclState();

    /**
     * The host or `*` for all hosts. Maximum length: `256`. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="host")
    private @Nullable Output<String> host;

    /**
     * @return The host or `*` for all hosts. Maximum length: `256`. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> host() {
        return Optional.ofNullable(this.host);
    }

    /**
     * The operation. The possible values are `All`, `Alter`, `AlterConfigs`, `ClusterAction`, `Create`, `CreateTokens`, `Delete`, `Describe`, `DescribeConfigs`, `DescribeTokens`, `IdempotentWrite`, `Read` and `Write`. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="operation")
    private @Nullable Output<String> operation;

    /**
     * @return The operation. The possible values are `All`, `Alter`, `AlterConfigs`, `ClusterAction`, `Create`, `CreateTokens`, `Delete`, `Describe`, `DescribeConfigs`, `DescribeTokens`, `IdempotentWrite`, `Read` and `Write`. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> operation() {
        return Optional.ofNullable(this.operation);
    }

    /**
     * Resource pattern used to match specified resources. The possible values are `LITERAL` and `PREFIXED`. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="patternType")
    private @Nullable Output<String> patternType;

    /**
     * @return Resource pattern used to match specified resources. The possible values are `LITERAL` and `PREFIXED`. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> patternType() {
        return Optional.ofNullable(this.patternType);
    }

    /**
     * The permission type. The possible values are `ALLOW` and `DENY`. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="permissionType")
    private @Nullable Output<String> permissionType;

    /**
     * @return The permission type. The possible values are `ALLOW` and `DENY`. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> permissionType() {
        return Optional.ofNullable(this.permissionType);
    }

    /**
     * Principal is in type:name&#39; format. Maximum length: `256`. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="principal")
    private @Nullable Output<String> principal;

    /**
     * @return Principal is in type:name&#39; format. Maximum length: `256`. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> principal() {
        return Optional.ofNullable(this.principal);
    }

    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The kafka resource name. Maximum length: `256`. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="resourceName")
    private @Nullable Output<String> resourceName;

    /**
     * @return The kafka resource name. Maximum length: `256`. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> resourceName() {
        return Optional.ofNullable(this.resourceName);
    }

    /**
     * The kafka resource type. The possible values are `Topic`, `Group`, `Cluster`, `TransactionalId`, `DelegationToken` and `User`. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="resourceType")
    private @Nullable Output<String> resourceType;

    /**
     * @return The kafka resource type. The possible values are `Topic`, `Group`, `Cluster`, `TransactionalId`, `DelegationToken` and `User`. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    /**
     * The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    private KafkaNativeAclState() {}

    private KafkaNativeAclState(KafkaNativeAclState $) {
        this.host = $.host;
        this.operation = $.operation;
        this.patternType = $.patternType;
        this.permissionType = $.permissionType;
        this.principal = $.principal;
        this.project = $.project;
        this.resourceName = $.resourceName;
        this.resourceType = $.resourceType;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KafkaNativeAclState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KafkaNativeAclState $;

        public Builder() {
            $ = new KafkaNativeAclState();
        }

        public Builder(KafkaNativeAclState defaults) {
            $ = new KafkaNativeAclState(Objects.requireNonNull(defaults));
        }

        /**
         * @param host The host or `*` for all hosts. Maximum length: `256`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder host(@Nullable Output<String> host) {
            $.host = host;
            return this;
        }

        /**
         * @param host The host or `*` for all hosts. Maximum length: `256`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder host(String host) {
            return host(Output.of(host));
        }

        /**
         * @param operation The operation. The possible values are `All`, `Alter`, `AlterConfigs`, `ClusterAction`, `Create`, `CreateTokens`, `Delete`, `Describe`, `DescribeConfigs`, `DescribeTokens`, `IdempotentWrite`, `Read` and `Write`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder operation(@Nullable Output<String> operation) {
            $.operation = operation;
            return this;
        }

        /**
         * @param operation The operation. The possible values are `All`, `Alter`, `AlterConfigs`, `ClusterAction`, `Create`, `CreateTokens`, `Delete`, `Describe`, `DescribeConfigs`, `DescribeTokens`, `IdempotentWrite`, `Read` and `Write`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder operation(String operation) {
            return operation(Output.of(operation));
        }

        /**
         * @param patternType Resource pattern used to match specified resources. The possible values are `LITERAL` and `PREFIXED`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder patternType(@Nullable Output<String> patternType) {
            $.patternType = patternType;
            return this;
        }

        /**
         * @param patternType Resource pattern used to match specified resources. The possible values are `LITERAL` and `PREFIXED`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder patternType(String patternType) {
            return patternType(Output.of(patternType));
        }

        /**
         * @param permissionType The permission type. The possible values are `ALLOW` and `DENY`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder permissionType(@Nullable Output<String> permissionType) {
            $.permissionType = permissionType;
            return this;
        }

        /**
         * @param permissionType The permission type. The possible values are `ALLOW` and `DENY`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder permissionType(String permissionType) {
            return permissionType(Output.of(permissionType));
        }

        /**
         * @param principal Principal is in type:name&#39; format. Maximum length: `256`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder principal(@Nullable Output<String> principal) {
            $.principal = principal;
            return this;
        }

        /**
         * @param principal Principal is in type:name&#39; format. Maximum length: `256`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder principal(String principal) {
            return principal(Output.of(principal));
        }

        /**
         * @param project The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param resourceName The kafka resource name. Maximum length: `256`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceName(@Nullable Output<String> resourceName) {
            $.resourceName = resourceName;
            return this;
        }

        /**
         * @param resourceName The kafka resource name. Maximum length: `256`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceName(String resourceName) {
            return resourceName(Output.of(resourceName));
        }

        /**
         * @param resourceType The kafka resource type. The possible values are `Topic`, `Group`, `Cluster`, `TransactionalId`, `DelegationToken` and `User`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(@Nullable Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType The kafka resource type. The possible values are `Topic`, `Group`, `Cluster`, `TransactionalId`, `DelegationToken` and `User`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        /**
         * @param serviceName The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public KafkaNativeAclState build() {
            return $;
        }
    }

}
