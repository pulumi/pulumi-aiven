// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.aiven.outputs.GetKafkaKafkaUserConfigIpFilterObject;
import com.pulumi.aiven.outputs.GetKafkaKafkaUserConfigKafka;
import com.pulumi.aiven.outputs.GetKafkaKafkaUserConfigKafkaAuthenticationMethods;
import com.pulumi.aiven.outputs.GetKafkaKafkaUserConfigKafkaConnectConfig;
import com.pulumi.aiven.outputs.GetKafkaKafkaUserConfigKafkaRestConfig;
import com.pulumi.aiven.outputs.GetKafkaKafkaUserConfigPrivateAccess;
import com.pulumi.aiven.outputs.GetKafkaKafkaUserConfigPrivatelinkAccess;
import com.pulumi.aiven.outputs.GetKafkaKafkaUserConfigPublicAccess;
import com.pulumi.aiven.outputs.GetKafkaKafkaUserConfigSchemaRegistryConfig;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetKafkaKafkaUserConfig {
    private @Nullable String additionalBackupRegions;
    private @Nullable String customDomain;
    private @Nullable List<GetKafkaKafkaUserConfigIpFilterObject> ipFilterObjects;
    private @Nullable List<String> ipFilterStrings;
    /**
     * @deprecated
     * This will be removed in v5.0.0 and replaced with ip_filter_string instead.
     * 
     */
    @Deprecated /* This will be removed in v5.0.0 and replaced with ip_filter_string instead. */
    private @Nullable List<String> ipFilters;
    /**
     * @return Kafka server provided values
     * 
     */
    private @Nullable GetKafkaKafkaUserConfigKafka kafka;
    private @Nullable GetKafkaKafkaUserConfigKafkaAuthenticationMethods kafkaAuthenticationMethods;
    private @Nullable Boolean kafkaConnect;
    private @Nullable GetKafkaKafkaUserConfigKafkaConnectConfig kafkaConnectConfig;
    private @Nullable Boolean kafkaRest;
    private @Nullable Boolean kafkaRestAuthorization;
    private @Nullable GetKafkaKafkaUserConfigKafkaRestConfig kafkaRestConfig;
    private @Nullable String kafkaVersion;
    private @Nullable GetKafkaKafkaUserConfigPrivateAccess privateAccess;
    private @Nullable GetKafkaKafkaUserConfigPrivatelinkAccess privatelinkAccess;
    private @Nullable GetKafkaKafkaUserConfigPublicAccess publicAccess;
    private @Nullable Boolean schemaRegistry;
    private @Nullable GetKafkaKafkaUserConfigSchemaRegistryConfig schemaRegistryConfig;
    /**
     * @return Static IPs that are going to be associated with this service. Please assign a value using the &#39;toset&#39; function. Once a static ip resource is in the &#39;assigned&#39; state it cannot be unbound from the node again
     * 
     */
    private @Nullable Boolean staticIps;

    private GetKafkaKafkaUserConfig() {}
    public Optional<String> additionalBackupRegions() {
        return Optional.ofNullable(this.additionalBackupRegions);
    }
    public Optional<String> customDomain() {
        return Optional.ofNullable(this.customDomain);
    }
    public List<GetKafkaKafkaUserConfigIpFilterObject> ipFilterObjects() {
        return this.ipFilterObjects == null ? List.of() : this.ipFilterObjects;
    }
    public List<String> ipFilterStrings() {
        return this.ipFilterStrings == null ? List.of() : this.ipFilterStrings;
    }
    /**
     * @deprecated
     * This will be removed in v5.0.0 and replaced with ip_filter_string instead.
     * 
     */
    @Deprecated /* This will be removed in v5.0.0 and replaced with ip_filter_string instead. */
    public List<String> ipFilters() {
        return this.ipFilters == null ? List.of() : this.ipFilters;
    }
    /**
     * @return Kafka server provided values
     * 
     */
    public Optional<GetKafkaKafkaUserConfigKafka> kafka() {
        return Optional.ofNullable(this.kafka);
    }
    public Optional<GetKafkaKafkaUserConfigKafkaAuthenticationMethods> kafkaAuthenticationMethods() {
        return Optional.ofNullable(this.kafkaAuthenticationMethods);
    }
    public Optional<Boolean> kafkaConnect() {
        return Optional.ofNullable(this.kafkaConnect);
    }
    public Optional<GetKafkaKafkaUserConfigKafkaConnectConfig> kafkaConnectConfig() {
        return Optional.ofNullable(this.kafkaConnectConfig);
    }
    public Optional<Boolean> kafkaRest() {
        return Optional.ofNullable(this.kafkaRest);
    }
    public Optional<Boolean> kafkaRestAuthorization() {
        return Optional.ofNullable(this.kafkaRestAuthorization);
    }
    public Optional<GetKafkaKafkaUserConfigKafkaRestConfig> kafkaRestConfig() {
        return Optional.ofNullable(this.kafkaRestConfig);
    }
    public Optional<String> kafkaVersion() {
        return Optional.ofNullable(this.kafkaVersion);
    }
    public Optional<GetKafkaKafkaUserConfigPrivateAccess> privateAccess() {
        return Optional.ofNullable(this.privateAccess);
    }
    public Optional<GetKafkaKafkaUserConfigPrivatelinkAccess> privatelinkAccess() {
        return Optional.ofNullable(this.privatelinkAccess);
    }
    public Optional<GetKafkaKafkaUserConfigPublicAccess> publicAccess() {
        return Optional.ofNullable(this.publicAccess);
    }
    public Optional<Boolean> schemaRegistry() {
        return Optional.ofNullable(this.schemaRegistry);
    }
    public Optional<GetKafkaKafkaUserConfigSchemaRegistryConfig> schemaRegistryConfig() {
        return Optional.ofNullable(this.schemaRegistryConfig);
    }
    /**
     * @return Static IPs that are going to be associated with this service. Please assign a value using the &#39;toset&#39; function. Once a static ip resource is in the &#39;assigned&#39; state it cannot be unbound from the node again
     * 
     */
    public Optional<Boolean> staticIps() {
        return Optional.ofNullable(this.staticIps);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKafkaKafkaUserConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String additionalBackupRegions;
        private @Nullable String customDomain;
        private @Nullable List<GetKafkaKafkaUserConfigIpFilterObject> ipFilterObjects;
        private @Nullable List<String> ipFilterStrings;
        private @Nullable List<String> ipFilters;
        private @Nullable GetKafkaKafkaUserConfigKafka kafka;
        private @Nullable GetKafkaKafkaUserConfigKafkaAuthenticationMethods kafkaAuthenticationMethods;
        private @Nullable Boolean kafkaConnect;
        private @Nullable GetKafkaKafkaUserConfigKafkaConnectConfig kafkaConnectConfig;
        private @Nullable Boolean kafkaRest;
        private @Nullable Boolean kafkaRestAuthorization;
        private @Nullable GetKafkaKafkaUserConfigKafkaRestConfig kafkaRestConfig;
        private @Nullable String kafkaVersion;
        private @Nullable GetKafkaKafkaUserConfigPrivateAccess privateAccess;
        private @Nullable GetKafkaKafkaUserConfigPrivatelinkAccess privatelinkAccess;
        private @Nullable GetKafkaKafkaUserConfigPublicAccess publicAccess;
        private @Nullable Boolean schemaRegistry;
        private @Nullable GetKafkaKafkaUserConfigSchemaRegistryConfig schemaRegistryConfig;
        private @Nullable Boolean staticIps;
        public Builder() {}
        public Builder(GetKafkaKafkaUserConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalBackupRegions = defaults.additionalBackupRegions;
    	      this.customDomain = defaults.customDomain;
    	      this.ipFilterObjects = defaults.ipFilterObjects;
    	      this.ipFilterStrings = defaults.ipFilterStrings;
    	      this.ipFilters = defaults.ipFilters;
    	      this.kafka = defaults.kafka;
    	      this.kafkaAuthenticationMethods = defaults.kafkaAuthenticationMethods;
    	      this.kafkaConnect = defaults.kafkaConnect;
    	      this.kafkaConnectConfig = defaults.kafkaConnectConfig;
    	      this.kafkaRest = defaults.kafkaRest;
    	      this.kafkaRestAuthorization = defaults.kafkaRestAuthorization;
    	      this.kafkaRestConfig = defaults.kafkaRestConfig;
    	      this.kafkaVersion = defaults.kafkaVersion;
    	      this.privateAccess = defaults.privateAccess;
    	      this.privatelinkAccess = defaults.privatelinkAccess;
    	      this.publicAccess = defaults.publicAccess;
    	      this.schemaRegistry = defaults.schemaRegistry;
    	      this.schemaRegistryConfig = defaults.schemaRegistryConfig;
    	      this.staticIps = defaults.staticIps;
        }

        @CustomType.Setter
        public Builder additionalBackupRegions(@Nullable String additionalBackupRegions) {
            this.additionalBackupRegions = additionalBackupRegions;
            return this;
        }
        @CustomType.Setter
        public Builder customDomain(@Nullable String customDomain) {
            this.customDomain = customDomain;
            return this;
        }
        @CustomType.Setter
        public Builder ipFilterObjects(@Nullable List<GetKafkaKafkaUserConfigIpFilterObject> ipFilterObjects) {
            this.ipFilterObjects = ipFilterObjects;
            return this;
        }
        public Builder ipFilterObjects(GetKafkaKafkaUserConfigIpFilterObject... ipFilterObjects) {
            return ipFilterObjects(List.of(ipFilterObjects));
        }
        @CustomType.Setter
        public Builder ipFilterStrings(@Nullable List<String> ipFilterStrings) {
            this.ipFilterStrings = ipFilterStrings;
            return this;
        }
        public Builder ipFilterStrings(String... ipFilterStrings) {
            return ipFilterStrings(List.of(ipFilterStrings));
        }
        @CustomType.Setter
        public Builder ipFilters(@Nullable List<String> ipFilters) {
            this.ipFilters = ipFilters;
            return this;
        }
        public Builder ipFilters(String... ipFilters) {
            return ipFilters(List.of(ipFilters));
        }
        @CustomType.Setter
        public Builder kafka(@Nullable GetKafkaKafkaUserConfigKafka kafka) {
            this.kafka = kafka;
            return this;
        }
        @CustomType.Setter
        public Builder kafkaAuthenticationMethods(@Nullable GetKafkaKafkaUserConfigKafkaAuthenticationMethods kafkaAuthenticationMethods) {
            this.kafkaAuthenticationMethods = kafkaAuthenticationMethods;
            return this;
        }
        @CustomType.Setter
        public Builder kafkaConnect(@Nullable Boolean kafkaConnect) {
            this.kafkaConnect = kafkaConnect;
            return this;
        }
        @CustomType.Setter
        public Builder kafkaConnectConfig(@Nullable GetKafkaKafkaUserConfigKafkaConnectConfig kafkaConnectConfig) {
            this.kafkaConnectConfig = kafkaConnectConfig;
            return this;
        }
        @CustomType.Setter
        public Builder kafkaRest(@Nullable Boolean kafkaRest) {
            this.kafkaRest = kafkaRest;
            return this;
        }
        @CustomType.Setter
        public Builder kafkaRestAuthorization(@Nullable Boolean kafkaRestAuthorization) {
            this.kafkaRestAuthorization = kafkaRestAuthorization;
            return this;
        }
        @CustomType.Setter
        public Builder kafkaRestConfig(@Nullable GetKafkaKafkaUserConfigKafkaRestConfig kafkaRestConfig) {
            this.kafkaRestConfig = kafkaRestConfig;
            return this;
        }
        @CustomType.Setter
        public Builder kafkaVersion(@Nullable String kafkaVersion) {
            this.kafkaVersion = kafkaVersion;
            return this;
        }
        @CustomType.Setter
        public Builder privateAccess(@Nullable GetKafkaKafkaUserConfigPrivateAccess privateAccess) {
            this.privateAccess = privateAccess;
            return this;
        }
        @CustomType.Setter
        public Builder privatelinkAccess(@Nullable GetKafkaKafkaUserConfigPrivatelinkAccess privatelinkAccess) {
            this.privatelinkAccess = privatelinkAccess;
            return this;
        }
        @CustomType.Setter
        public Builder publicAccess(@Nullable GetKafkaKafkaUserConfigPublicAccess publicAccess) {
            this.publicAccess = publicAccess;
            return this;
        }
        @CustomType.Setter
        public Builder schemaRegistry(@Nullable Boolean schemaRegistry) {
            this.schemaRegistry = schemaRegistry;
            return this;
        }
        @CustomType.Setter
        public Builder schemaRegistryConfig(@Nullable GetKafkaKafkaUserConfigSchemaRegistryConfig schemaRegistryConfig) {
            this.schemaRegistryConfig = schemaRegistryConfig;
            return this;
        }
        @CustomType.Setter
        public Builder staticIps(@Nullable Boolean staticIps) {
            this.staticIps = staticIps;
            return this;
        }
        public GetKafkaKafkaUserConfig build() {
            final var o = new GetKafkaKafkaUserConfig();
            o.additionalBackupRegions = additionalBackupRegions;
            o.customDomain = customDomain;
            o.ipFilterObjects = ipFilterObjects;
            o.ipFilterStrings = ipFilterStrings;
            o.ipFilters = ipFilters;
            o.kafka = kafka;
            o.kafkaAuthenticationMethods = kafkaAuthenticationMethods;
            o.kafkaConnect = kafkaConnect;
            o.kafkaConnectConfig = kafkaConnectConfig;
            o.kafkaRest = kafkaRest;
            o.kafkaRestAuthorization = kafkaRestAuthorization;
            o.kafkaRestConfig = kafkaRestConfig;
            o.kafkaVersion = kafkaVersion;
            o.privateAccess = privateAccess;
            o.privatelinkAccess = privatelinkAccess;
            o.publicAccess = publicAccess;
            o.schemaRegistry = schemaRegistry;
            o.schemaRegistryConfig = schemaRegistryConfig;
            o.staticIps = staticIps;
            return o;
        }
    }
}
