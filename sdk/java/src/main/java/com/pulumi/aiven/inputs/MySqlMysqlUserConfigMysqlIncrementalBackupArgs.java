// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MySqlMysqlUserConfigMysqlIncrementalBackupArgs extends com.pulumi.resources.ResourceArgs {

    public static final MySqlMysqlUserConfigMysqlIncrementalBackupArgs Empty = new MySqlMysqlUserConfigMysqlIncrementalBackupArgs();

    /**
     * Enable periodic incremental backups. When enabled, full*backup*week_schedule must be set. Incremental backups only store changes since the last backup, making them faster and more storage-efficient than full backups. This is particularly useful for large databases where daily full backups would be too time-consuming or expensive.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Enable periodic incremental backups. When enabled, full*backup*week_schedule must be set. Incremental backups only store changes since the last backup, making them faster and more storage-efficient than full backups. This is particularly useful for large databases where daily full backups would be too time-consuming or expensive.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * Comma-separated list of days of the week when full backups should be created. Valid values: mon, tue, wed, thu, fri, sat, sun. Example: `sun,wed`.
     * 
     */
    @Import(name="fullBackupWeekSchedule")
    private @Nullable Output<String> fullBackupWeekSchedule;

    /**
     * @return Comma-separated list of days of the week when full backups should be created. Valid values: mon, tue, wed, thu, fri, sat, sun. Example: `sun,wed`.
     * 
     */
    public Optional<Output<String>> fullBackupWeekSchedule() {
        return Optional.ofNullable(this.fullBackupWeekSchedule);
    }

    private MySqlMysqlUserConfigMysqlIncrementalBackupArgs() {}

    private MySqlMysqlUserConfigMysqlIncrementalBackupArgs(MySqlMysqlUserConfigMysqlIncrementalBackupArgs $) {
        this.enabled = $.enabled;
        this.fullBackupWeekSchedule = $.fullBackupWeekSchedule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MySqlMysqlUserConfigMysqlIncrementalBackupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MySqlMysqlUserConfigMysqlIncrementalBackupArgs $;

        public Builder() {
            $ = new MySqlMysqlUserConfigMysqlIncrementalBackupArgs();
        }

        public Builder(MySqlMysqlUserConfigMysqlIncrementalBackupArgs defaults) {
            $ = new MySqlMysqlUserConfigMysqlIncrementalBackupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Enable periodic incremental backups. When enabled, full*backup*week_schedule must be set. Incremental backups only store changes since the last backup, making them faster and more storage-efficient than full backups. This is particularly useful for large databases where daily full backups would be too time-consuming or expensive.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Enable periodic incremental backups. When enabled, full*backup*week_schedule must be set. Incremental backups only store changes since the last backup, making them faster and more storage-efficient than full backups. This is particularly useful for large databases where daily full backups would be too time-consuming or expensive.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param fullBackupWeekSchedule Comma-separated list of days of the week when full backups should be created. Valid values: mon, tue, wed, thu, fri, sat, sun. Example: `sun,wed`.
         * 
         * @return builder
         * 
         */
        public Builder fullBackupWeekSchedule(@Nullable Output<String> fullBackupWeekSchedule) {
            $.fullBackupWeekSchedule = fullBackupWeekSchedule;
            return this;
        }

        /**
         * @param fullBackupWeekSchedule Comma-separated list of days of the week when full backups should be created. Valid values: mon, tue, wed, thu, fri, sat, sun. Example: `sun,wed`.
         * 
         * @return builder
         * 
         */
        public Builder fullBackupWeekSchedule(String fullBackupWeekSchedule) {
            return fullBackupWeekSchedule(Output.of(fullBackupWeekSchedule));
        }

        public MySqlMysqlUserConfigMysqlIncrementalBackupArgs build() {
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("MySqlMysqlUserConfigMysqlIncrementalBackupArgs", "enabled");
            }
            return $;
        }
    }

}
