// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PgPgUserConfigPgbouncerArgs extends com.pulumi.resources.ResourceArgs {

    public static final PgPgUserConfigPgbouncerArgs Empty = new PgPgUserConfigPgbouncerArgs();

    @Import(name="autodbIdleTimeout")
    private @Nullable Output<String> autodbIdleTimeout;

    public Optional<Output<String>> autodbIdleTimeout() {
        return Optional.ofNullable(this.autodbIdleTimeout);
    }

    @Import(name="autodbMaxDbConnections")
    private @Nullable Output<String> autodbMaxDbConnections;

    public Optional<Output<String>> autodbMaxDbConnections() {
        return Optional.ofNullable(this.autodbMaxDbConnections);
    }

    @Import(name="autodbPoolMode")
    private @Nullable Output<String> autodbPoolMode;

    public Optional<Output<String>> autodbPoolMode() {
        return Optional.ofNullable(this.autodbPoolMode);
    }

    @Import(name="autodbPoolSize")
    private @Nullable Output<String> autodbPoolSize;

    public Optional<Output<String>> autodbPoolSize() {
        return Optional.ofNullable(this.autodbPoolSize);
    }

    @Import(name="ignoreStartupParameters")
    private @Nullable Output<List<String>> ignoreStartupParameters;

    public Optional<Output<List<String>>> ignoreStartupParameters() {
        return Optional.ofNullable(this.ignoreStartupParameters);
    }

    @Import(name="minPoolSize")
    private @Nullable Output<String> minPoolSize;

    public Optional<Output<String>> minPoolSize() {
        return Optional.ofNullable(this.minPoolSize);
    }

    @Import(name="serverIdleTimeout")
    private @Nullable Output<String> serverIdleTimeout;

    public Optional<Output<String>> serverIdleTimeout() {
        return Optional.ofNullable(this.serverIdleTimeout);
    }

    @Import(name="serverLifetime")
    private @Nullable Output<String> serverLifetime;

    public Optional<Output<String>> serverLifetime() {
        return Optional.ofNullable(this.serverLifetime);
    }

    @Import(name="serverResetQueryAlways")
    private @Nullable Output<String> serverResetQueryAlways;

    public Optional<Output<String>> serverResetQueryAlways() {
        return Optional.ofNullable(this.serverResetQueryAlways);
    }

    private PgPgUserConfigPgbouncerArgs() {}

    private PgPgUserConfigPgbouncerArgs(PgPgUserConfigPgbouncerArgs $) {
        this.autodbIdleTimeout = $.autodbIdleTimeout;
        this.autodbMaxDbConnections = $.autodbMaxDbConnections;
        this.autodbPoolMode = $.autodbPoolMode;
        this.autodbPoolSize = $.autodbPoolSize;
        this.ignoreStartupParameters = $.ignoreStartupParameters;
        this.minPoolSize = $.minPoolSize;
        this.serverIdleTimeout = $.serverIdleTimeout;
        this.serverLifetime = $.serverLifetime;
        this.serverResetQueryAlways = $.serverResetQueryAlways;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PgPgUserConfigPgbouncerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PgPgUserConfigPgbouncerArgs $;

        public Builder() {
            $ = new PgPgUserConfigPgbouncerArgs();
        }

        public Builder(PgPgUserConfigPgbouncerArgs defaults) {
            $ = new PgPgUserConfigPgbouncerArgs(Objects.requireNonNull(defaults));
        }

        public Builder autodbIdleTimeout(@Nullable Output<String> autodbIdleTimeout) {
            $.autodbIdleTimeout = autodbIdleTimeout;
            return this;
        }

        public Builder autodbIdleTimeout(String autodbIdleTimeout) {
            return autodbIdleTimeout(Output.of(autodbIdleTimeout));
        }

        public Builder autodbMaxDbConnections(@Nullable Output<String> autodbMaxDbConnections) {
            $.autodbMaxDbConnections = autodbMaxDbConnections;
            return this;
        }

        public Builder autodbMaxDbConnections(String autodbMaxDbConnections) {
            return autodbMaxDbConnections(Output.of(autodbMaxDbConnections));
        }

        public Builder autodbPoolMode(@Nullable Output<String> autodbPoolMode) {
            $.autodbPoolMode = autodbPoolMode;
            return this;
        }

        public Builder autodbPoolMode(String autodbPoolMode) {
            return autodbPoolMode(Output.of(autodbPoolMode));
        }

        public Builder autodbPoolSize(@Nullable Output<String> autodbPoolSize) {
            $.autodbPoolSize = autodbPoolSize;
            return this;
        }

        public Builder autodbPoolSize(String autodbPoolSize) {
            return autodbPoolSize(Output.of(autodbPoolSize));
        }

        public Builder ignoreStartupParameters(@Nullable Output<List<String>> ignoreStartupParameters) {
            $.ignoreStartupParameters = ignoreStartupParameters;
            return this;
        }

        public Builder ignoreStartupParameters(List<String> ignoreStartupParameters) {
            return ignoreStartupParameters(Output.of(ignoreStartupParameters));
        }

        public Builder ignoreStartupParameters(String... ignoreStartupParameters) {
            return ignoreStartupParameters(List.of(ignoreStartupParameters));
        }

        public Builder minPoolSize(@Nullable Output<String> minPoolSize) {
            $.minPoolSize = minPoolSize;
            return this;
        }

        public Builder minPoolSize(String minPoolSize) {
            return minPoolSize(Output.of(minPoolSize));
        }

        public Builder serverIdleTimeout(@Nullable Output<String> serverIdleTimeout) {
            $.serverIdleTimeout = serverIdleTimeout;
            return this;
        }

        public Builder serverIdleTimeout(String serverIdleTimeout) {
            return serverIdleTimeout(Output.of(serverIdleTimeout));
        }

        public Builder serverLifetime(@Nullable Output<String> serverLifetime) {
            $.serverLifetime = serverLifetime;
            return this;
        }

        public Builder serverLifetime(String serverLifetime) {
            return serverLifetime(Output.of(serverLifetime));
        }

        public Builder serverResetQueryAlways(@Nullable Output<String> serverResetQueryAlways) {
            $.serverResetQueryAlways = serverResetQueryAlways;
            return this;
        }

        public Builder serverResetQueryAlways(String serverResetQueryAlways) {
            return serverResetQueryAlways(Output.of(serverResetQueryAlways));
        }

        public PgPgUserConfigPgbouncerArgs build() {
            return $;
        }
    }

}
