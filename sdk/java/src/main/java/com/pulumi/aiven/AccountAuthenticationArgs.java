// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.aiven.inputs.AccountAuthenticationSamlFieldMappingArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountAuthenticationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountAuthenticationArgs Empty = new AccountAuthenticationArgs();

    /**
     * The unique id of the account.
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return The unique id of the account.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * Team ID
     * 
     */
    @Import(name="autoJoinTeamId")
    private @Nullable Output<String> autoJoinTeamId;

    /**
     * @return Team ID
     * 
     */
    public Optional<Output<String>> autoJoinTeamId() {
        return Optional.ofNullable(this.autoJoinTeamId);
    }

    /**
     * Status of account authentication method. The default value is `false`.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Status of account authentication method. The default value is `false`.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The name of the account authentication.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the account authentication.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * SAML Certificate
     * 
     */
    @Import(name="samlCertificate")
    private @Nullable Output<String> samlCertificate;

    /**
     * @return SAML Certificate
     * 
     */
    public Optional<Output<String>> samlCertificate() {
        return Optional.ofNullable(this.samlCertificate);
    }

    /**
     * Digest algorithm. This is an advanced option that typically does not need to be set.
     * 
     */
    @Import(name="samlDigestAlgorithm")
    private @Nullable Output<String> samlDigestAlgorithm;

    /**
     * @return Digest algorithm. This is an advanced option that typically does not need to be set.
     * 
     */
    public Optional<Output<String>> samlDigestAlgorithm() {
        return Optional.ofNullable(this.samlDigestAlgorithm);
    }

    /**
     * SAML Entity id
     * 
     */
    @Import(name="samlEntityId")
    private @Nullable Output<String> samlEntityId;

    /**
     * @return SAML Entity id
     * 
     */
    public Optional<Output<String>> samlEntityId() {
        return Optional.ofNullable(this.samlEntityId);
    }

    /**
     * Map IdP fields
     * 
     */
    @Import(name="samlFieldMapping")
    private @Nullable Output<AccountAuthenticationSamlFieldMappingArgs> samlFieldMapping;

    /**
     * @return Map IdP fields
     * 
     */
    public Optional<Output<AccountAuthenticationSamlFieldMappingArgs>> samlFieldMapping() {
        return Optional.ofNullable(this.samlFieldMapping);
    }

    /**
     * Set to &#39;true&#39; to enable IdP initiated login
     * 
     */
    @Import(name="samlIdpLoginAllowed")
    private @Nullable Output<Boolean> samlIdpLoginAllowed;

    /**
     * @return Set to &#39;true&#39; to enable IdP initiated login
     * 
     */
    public Optional<Output<Boolean>> samlIdpLoginAllowed() {
        return Optional.ofNullable(this.samlIdpLoginAllowed);
    }

    /**
     * SAML Idp URL
     * 
     */
    @Import(name="samlIdpUrl")
    private @Nullable Output<String> samlIdpUrl;

    /**
     * @return SAML Idp URL
     * 
     */
    public Optional<Output<String>> samlIdpUrl() {
        return Optional.ofNullable(this.samlIdpUrl);
    }

    /**
     * Signature algorithm. This is an advanced option that typically does not need to be set.
     * 
     */
    @Import(name="samlSignatureAlgorithm")
    private @Nullable Output<String> samlSignatureAlgorithm;

    /**
     * @return Signature algorithm. This is an advanced option that typically does not need to be set.
     * 
     */
    public Optional<Output<String>> samlSignatureAlgorithm() {
        return Optional.ofNullable(this.samlSignatureAlgorithm);
    }

    /**
     * SAML server variant
     * 
     */
    @Import(name="samlVariant")
    private @Nullable Output<String> samlVariant;

    /**
     * @return SAML server variant
     * 
     */
    public Optional<Output<String>> samlVariant() {
        return Optional.ofNullable(this.samlVariant);
    }

    /**
     * The account authentication type. The possible values are `internal` and `saml`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The account authentication type. The possible values are `internal` and `saml`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private AccountAuthenticationArgs() {}

    private AccountAuthenticationArgs(AccountAuthenticationArgs $) {
        this.accountId = $.accountId;
        this.autoJoinTeamId = $.autoJoinTeamId;
        this.enabled = $.enabled;
        this.name = $.name;
        this.samlCertificate = $.samlCertificate;
        this.samlDigestAlgorithm = $.samlDigestAlgorithm;
        this.samlEntityId = $.samlEntityId;
        this.samlFieldMapping = $.samlFieldMapping;
        this.samlIdpLoginAllowed = $.samlIdpLoginAllowed;
        this.samlIdpUrl = $.samlIdpUrl;
        this.samlSignatureAlgorithm = $.samlSignatureAlgorithm;
        this.samlVariant = $.samlVariant;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountAuthenticationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountAuthenticationArgs $;

        public Builder() {
            $ = new AccountAuthenticationArgs();
        }

        public Builder(AccountAuthenticationArgs defaults) {
            $ = new AccountAuthenticationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The unique id of the account.
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The unique id of the account.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param autoJoinTeamId Team ID
         * 
         * @return builder
         * 
         */
        public Builder autoJoinTeamId(@Nullable Output<String> autoJoinTeamId) {
            $.autoJoinTeamId = autoJoinTeamId;
            return this;
        }

        /**
         * @param autoJoinTeamId Team ID
         * 
         * @return builder
         * 
         */
        public Builder autoJoinTeamId(String autoJoinTeamId) {
            return autoJoinTeamId(Output.of(autoJoinTeamId));
        }

        /**
         * @param enabled Status of account authentication method. The default value is `false`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Status of account authentication method. The default value is `false`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param name The name of the account authentication.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the account authentication.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param samlCertificate SAML Certificate
         * 
         * @return builder
         * 
         */
        public Builder samlCertificate(@Nullable Output<String> samlCertificate) {
            $.samlCertificate = samlCertificate;
            return this;
        }

        /**
         * @param samlCertificate SAML Certificate
         * 
         * @return builder
         * 
         */
        public Builder samlCertificate(String samlCertificate) {
            return samlCertificate(Output.of(samlCertificate));
        }

        /**
         * @param samlDigestAlgorithm Digest algorithm. This is an advanced option that typically does not need to be set.
         * 
         * @return builder
         * 
         */
        public Builder samlDigestAlgorithm(@Nullable Output<String> samlDigestAlgorithm) {
            $.samlDigestAlgorithm = samlDigestAlgorithm;
            return this;
        }

        /**
         * @param samlDigestAlgorithm Digest algorithm. This is an advanced option that typically does not need to be set.
         * 
         * @return builder
         * 
         */
        public Builder samlDigestAlgorithm(String samlDigestAlgorithm) {
            return samlDigestAlgorithm(Output.of(samlDigestAlgorithm));
        }

        /**
         * @param samlEntityId SAML Entity id
         * 
         * @return builder
         * 
         */
        public Builder samlEntityId(@Nullable Output<String> samlEntityId) {
            $.samlEntityId = samlEntityId;
            return this;
        }

        /**
         * @param samlEntityId SAML Entity id
         * 
         * @return builder
         * 
         */
        public Builder samlEntityId(String samlEntityId) {
            return samlEntityId(Output.of(samlEntityId));
        }

        /**
         * @param samlFieldMapping Map IdP fields
         * 
         * @return builder
         * 
         */
        public Builder samlFieldMapping(@Nullable Output<AccountAuthenticationSamlFieldMappingArgs> samlFieldMapping) {
            $.samlFieldMapping = samlFieldMapping;
            return this;
        }

        /**
         * @param samlFieldMapping Map IdP fields
         * 
         * @return builder
         * 
         */
        public Builder samlFieldMapping(AccountAuthenticationSamlFieldMappingArgs samlFieldMapping) {
            return samlFieldMapping(Output.of(samlFieldMapping));
        }

        /**
         * @param samlIdpLoginAllowed Set to &#39;true&#39; to enable IdP initiated login
         * 
         * @return builder
         * 
         */
        public Builder samlIdpLoginAllowed(@Nullable Output<Boolean> samlIdpLoginAllowed) {
            $.samlIdpLoginAllowed = samlIdpLoginAllowed;
            return this;
        }

        /**
         * @param samlIdpLoginAllowed Set to &#39;true&#39; to enable IdP initiated login
         * 
         * @return builder
         * 
         */
        public Builder samlIdpLoginAllowed(Boolean samlIdpLoginAllowed) {
            return samlIdpLoginAllowed(Output.of(samlIdpLoginAllowed));
        }

        /**
         * @param samlIdpUrl SAML Idp URL
         * 
         * @return builder
         * 
         */
        public Builder samlIdpUrl(@Nullable Output<String> samlIdpUrl) {
            $.samlIdpUrl = samlIdpUrl;
            return this;
        }

        /**
         * @param samlIdpUrl SAML Idp URL
         * 
         * @return builder
         * 
         */
        public Builder samlIdpUrl(String samlIdpUrl) {
            return samlIdpUrl(Output.of(samlIdpUrl));
        }

        /**
         * @param samlSignatureAlgorithm Signature algorithm. This is an advanced option that typically does not need to be set.
         * 
         * @return builder
         * 
         */
        public Builder samlSignatureAlgorithm(@Nullable Output<String> samlSignatureAlgorithm) {
            $.samlSignatureAlgorithm = samlSignatureAlgorithm;
            return this;
        }

        /**
         * @param samlSignatureAlgorithm Signature algorithm. This is an advanced option that typically does not need to be set.
         * 
         * @return builder
         * 
         */
        public Builder samlSignatureAlgorithm(String samlSignatureAlgorithm) {
            return samlSignatureAlgorithm(Output.of(samlSignatureAlgorithm));
        }

        /**
         * @param samlVariant SAML server variant
         * 
         * @return builder
         * 
         */
        public Builder samlVariant(@Nullable Output<String> samlVariant) {
            $.samlVariant = samlVariant;
            return this;
        }

        /**
         * @param samlVariant SAML server variant
         * 
         * @return builder
         * 
         */
        public Builder samlVariant(String samlVariant) {
            return samlVariant(Output.of(samlVariant));
        }

        /**
         * @param type The account authentication type. The possible values are `internal` and `saml`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The account authentication type. The possible values are `internal` and `saml`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public AccountAuthenticationArgs build() {
            $.accountId = Objects.requireNonNull($.accountId, "expected parameter 'accountId' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
