// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.aiven.Utilities;
import com.pulumi.aiven.inputs.GetAccountArgs;
import com.pulumi.aiven.inputs.GetAccountAuthenticationArgs;
import com.pulumi.aiven.inputs.GetAccountAuthenticationPlainArgs;
import com.pulumi.aiven.inputs.GetAccountPlainArgs;
import com.pulumi.aiven.inputs.GetAccountTeamArgs;
import com.pulumi.aiven.inputs.GetAccountTeamMemberArgs;
import com.pulumi.aiven.inputs.GetAccountTeamMemberPlainArgs;
import com.pulumi.aiven.inputs.GetAccountTeamPlainArgs;
import com.pulumi.aiven.inputs.GetAccountTeamProjectArgs;
import com.pulumi.aiven.inputs.GetAccountTeamProjectPlainArgs;
import com.pulumi.aiven.inputs.GetAwsPrivatelinkArgs;
import com.pulumi.aiven.inputs.GetAwsPrivatelinkPlainArgs;
import com.pulumi.aiven.inputs.GetAwsVpcPeeringConnectionArgs;
import com.pulumi.aiven.inputs.GetAwsVpcPeeringConnectionPlainArgs;
import com.pulumi.aiven.inputs.GetAzurePrivatelinkArgs;
import com.pulumi.aiven.inputs.GetAzurePrivatelinkPlainArgs;
import com.pulumi.aiven.inputs.GetAzureVpcPeeringConnectionArgs;
import com.pulumi.aiven.inputs.GetAzureVpcPeeringConnectionPlainArgs;
import com.pulumi.aiven.inputs.GetBillingGroupArgs;
import com.pulumi.aiven.inputs.GetBillingGroupPlainArgs;
import com.pulumi.aiven.inputs.GetCassandaArgs;
import com.pulumi.aiven.inputs.GetCassandaPlainArgs;
import com.pulumi.aiven.inputs.GetCassandraArgs;
import com.pulumi.aiven.inputs.GetCassandraPlainArgs;
import com.pulumi.aiven.inputs.GetCassandraUserArgs;
import com.pulumi.aiven.inputs.GetCassandraUserPlainArgs;
import com.pulumi.aiven.inputs.GetClickhouseArgs;
import com.pulumi.aiven.inputs.GetClickhouseDatabaseArgs;
import com.pulumi.aiven.inputs.GetClickhouseDatabasePlainArgs;
import com.pulumi.aiven.inputs.GetClickhousePlainArgs;
import com.pulumi.aiven.inputs.GetClickhouseUserArgs;
import com.pulumi.aiven.inputs.GetClickhouseUserPlainArgs;
import com.pulumi.aiven.inputs.GetConnectionPoolArgs;
import com.pulumi.aiven.inputs.GetConnectionPoolPlainArgs;
import com.pulumi.aiven.inputs.GetDragonflyArgs;
import com.pulumi.aiven.inputs.GetDragonflyPlainArgs;
import com.pulumi.aiven.inputs.GetExternalIdentityArgs;
import com.pulumi.aiven.inputs.GetExternalIdentityPlainArgs;
import com.pulumi.aiven.inputs.GetFlinkApplicationArgs;
import com.pulumi.aiven.inputs.GetFlinkApplicationPlainArgs;
import com.pulumi.aiven.inputs.GetFlinkApplicationVersionArgs;
import com.pulumi.aiven.inputs.GetFlinkApplicationVersionPlainArgs;
import com.pulumi.aiven.inputs.GetFlinkArgs;
import com.pulumi.aiven.inputs.GetFlinkPlainArgs;
import com.pulumi.aiven.inputs.GetGcpPrivatelinkArgs;
import com.pulumi.aiven.inputs.GetGcpPrivatelinkPlainArgs;
import com.pulumi.aiven.inputs.GetGcpVpcPeeringConnectionArgs;
import com.pulumi.aiven.inputs.GetGcpVpcPeeringConnectionPlainArgs;
import com.pulumi.aiven.inputs.GetGrafanaArgs;
import com.pulumi.aiven.inputs.GetGrafanaPlainArgs;
import com.pulumi.aiven.inputs.GetInfluxDbArgs;
import com.pulumi.aiven.inputs.GetInfluxDbPlainArgs;
import com.pulumi.aiven.inputs.GetInfluxdbDatabaseArgs;
import com.pulumi.aiven.inputs.GetInfluxdbDatabasePlainArgs;
import com.pulumi.aiven.inputs.GetInfluxdbUserArgs;
import com.pulumi.aiven.inputs.GetInfluxdbUserPlainArgs;
import com.pulumi.aiven.inputs.GetKafkaAclArgs;
import com.pulumi.aiven.inputs.GetKafkaAclPlainArgs;
import com.pulumi.aiven.inputs.GetKafkaArgs;
import com.pulumi.aiven.inputs.GetKafkaConnectArgs;
import com.pulumi.aiven.inputs.GetKafkaConnectPlainArgs;
import com.pulumi.aiven.inputs.GetKafkaConnectorArgs;
import com.pulumi.aiven.inputs.GetKafkaConnectorPlainArgs;
import com.pulumi.aiven.inputs.GetKafkaMirrorMakerArgs;
import com.pulumi.aiven.inputs.GetKafkaMirrorMakerPlainArgs;
import com.pulumi.aiven.inputs.GetKafkaPlainArgs;
import com.pulumi.aiven.inputs.GetKafkaSchemaArgs;
import com.pulumi.aiven.inputs.GetKafkaSchemaConfigurationArgs;
import com.pulumi.aiven.inputs.GetKafkaSchemaConfigurationPlainArgs;
import com.pulumi.aiven.inputs.GetKafkaSchemaPlainArgs;
import com.pulumi.aiven.inputs.GetKafkaSchemaRegistryAclArgs;
import com.pulumi.aiven.inputs.GetKafkaSchemaRegistryAclPlainArgs;
import com.pulumi.aiven.inputs.GetKafkaTopicArgs;
import com.pulumi.aiven.inputs.GetKafkaTopicPlainArgs;
import com.pulumi.aiven.inputs.GetKafkaUserArgs;
import com.pulumi.aiven.inputs.GetKafkaUserPlainArgs;
import com.pulumi.aiven.inputs.GetM3AggregatorArgs;
import com.pulumi.aiven.inputs.GetM3AggregatorPlainArgs;
import com.pulumi.aiven.inputs.GetM3DbArgs;
import com.pulumi.aiven.inputs.GetM3DbPlainArgs;
import com.pulumi.aiven.inputs.GetM3dbUserArgs;
import com.pulumi.aiven.inputs.GetM3dbUserPlainArgs;
import com.pulumi.aiven.inputs.GetMirrorMakerReplicationFlowArgs;
import com.pulumi.aiven.inputs.GetMirrorMakerReplicationFlowPlainArgs;
import com.pulumi.aiven.inputs.GetMySqlArgs;
import com.pulumi.aiven.inputs.GetMySqlPlainArgs;
import com.pulumi.aiven.inputs.GetMysqlDatabaseArgs;
import com.pulumi.aiven.inputs.GetMysqlDatabasePlainArgs;
import com.pulumi.aiven.inputs.GetMysqlUserArgs;
import com.pulumi.aiven.inputs.GetMysqlUserPlainArgs;
import com.pulumi.aiven.inputs.GetOpenSearchAclConfigArgs;
import com.pulumi.aiven.inputs.GetOpenSearchAclConfigPlainArgs;
import com.pulumi.aiven.inputs.GetOpenSearchAclRuleArgs;
import com.pulumi.aiven.inputs.GetOpenSearchAclRulePlainArgs;
import com.pulumi.aiven.inputs.GetOpenSearchArgs;
import com.pulumi.aiven.inputs.GetOpenSearchPlainArgs;
import com.pulumi.aiven.inputs.GetOpensearchSecurityPluginConfigArgs;
import com.pulumi.aiven.inputs.GetOpensearchSecurityPluginConfigPlainArgs;
import com.pulumi.aiven.inputs.GetOpensearchUserArgs;
import com.pulumi.aiven.inputs.GetOpensearchUserPlainArgs;
import com.pulumi.aiven.inputs.GetOrganizationApplicationUserArgs;
import com.pulumi.aiven.inputs.GetOrganizationApplicationUserPlainArgs;
import com.pulumi.aiven.inputs.GetOrganizationArgs;
import com.pulumi.aiven.inputs.GetOrganizationPlainArgs;
import com.pulumi.aiven.inputs.GetOrganizationUserArgs;
import com.pulumi.aiven.inputs.GetOrganizationUserGroupArgs;
import com.pulumi.aiven.inputs.GetOrganizationUserGroupPlainArgs;
import com.pulumi.aiven.inputs.GetOrganizationUserPlainArgs;
import com.pulumi.aiven.inputs.GetOrganizationalUnitArgs;
import com.pulumi.aiven.inputs.GetOrganizationalUnitPlainArgs;
import com.pulumi.aiven.inputs.GetPgArgs;
import com.pulumi.aiven.inputs.GetPgDatabaseArgs;
import com.pulumi.aiven.inputs.GetPgDatabasePlainArgs;
import com.pulumi.aiven.inputs.GetPgPlainArgs;
import com.pulumi.aiven.inputs.GetPgUserArgs;
import com.pulumi.aiven.inputs.GetPgUserPlainArgs;
import com.pulumi.aiven.inputs.GetProjectArgs;
import com.pulumi.aiven.inputs.GetProjectPlainArgs;
import com.pulumi.aiven.inputs.GetProjectUserArgs;
import com.pulumi.aiven.inputs.GetProjectUserPlainArgs;
import com.pulumi.aiven.inputs.GetProjectVpcArgs;
import com.pulumi.aiven.inputs.GetProjectVpcPlainArgs;
import com.pulumi.aiven.inputs.GetRedisArgs;
import com.pulumi.aiven.inputs.GetRedisPlainArgs;
import com.pulumi.aiven.inputs.GetRedisUserArgs;
import com.pulumi.aiven.inputs.GetRedisUserPlainArgs;
import com.pulumi.aiven.inputs.GetServiceComponentArgs;
import com.pulumi.aiven.inputs.GetServiceComponentPlainArgs;
import com.pulumi.aiven.inputs.GetServiceIntegrationArgs;
import com.pulumi.aiven.inputs.GetServiceIntegrationEndpointArgs;
import com.pulumi.aiven.inputs.GetServiceIntegrationEndpointPlainArgs;
import com.pulumi.aiven.inputs.GetServiceIntegrationPlainArgs;
import com.pulumi.aiven.inputs.GetThanosArgs;
import com.pulumi.aiven.inputs.GetThanosPlainArgs;
import com.pulumi.aiven.inputs.GetTransitGatewayVpcAttachmentArgs;
import com.pulumi.aiven.inputs.GetTransitGatewayVpcAttachmentPlainArgs;
import com.pulumi.aiven.inputs.GetValkeyArgs;
import com.pulumi.aiven.inputs.GetValkeyPlainArgs;
import com.pulumi.aiven.inputs.GetValkeyUserArgs;
import com.pulumi.aiven.inputs.GetValkeyUserPlainArgs;
import com.pulumi.aiven.outputs.GetAccountAuthenticationResult;
import com.pulumi.aiven.outputs.GetAccountResult;
import com.pulumi.aiven.outputs.GetAccountTeamMemberResult;
import com.pulumi.aiven.outputs.GetAccountTeamProjectResult;
import com.pulumi.aiven.outputs.GetAccountTeamResult;
import com.pulumi.aiven.outputs.GetAwsPrivatelinkResult;
import com.pulumi.aiven.outputs.GetAwsVpcPeeringConnectionResult;
import com.pulumi.aiven.outputs.GetAzurePrivatelinkResult;
import com.pulumi.aiven.outputs.GetAzureVpcPeeringConnectionResult;
import com.pulumi.aiven.outputs.GetBillingGroupResult;
import com.pulumi.aiven.outputs.GetCassandaResult;
import com.pulumi.aiven.outputs.GetCassandraResult;
import com.pulumi.aiven.outputs.GetCassandraUserResult;
import com.pulumi.aiven.outputs.GetClickhouseDatabaseResult;
import com.pulumi.aiven.outputs.GetClickhouseResult;
import com.pulumi.aiven.outputs.GetClickhouseUserResult;
import com.pulumi.aiven.outputs.GetConnectionPoolResult;
import com.pulumi.aiven.outputs.GetDragonflyResult;
import com.pulumi.aiven.outputs.GetExternalIdentityResult;
import com.pulumi.aiven.outputs.GetFlinkApplicationResult;
import com.pulumi.aiven.outputs.GetFlinkApplicationVersionResult;
import com.pulumi.aiven.outputs.GetFlinkResult;
import com.pulumi.aiven.outputs.GetGcpPrivatelinkResult;
import com.pulumi.aiven.outputs.GetGcpVpcPeeringConnectionResult;
import com.pulumi.aiven.outputs.GetGrafanaResult;
import com.pulumi.aiven.outputs.GetInfluxDbResult;
import com.pulumi.aiven.outputs.GetInfluxdbDatabaseResult;
import com.pulumi.aiven.outputs.GetInfluxdbUserResult;
import com.pulumi.aiven.outputs.GetKafkaAclResult;
import com.pulumi.aiven.outputs.GetKafkaConnectResult;
import com.pulumi.aiven.outputs.GetKafkaConnectorResult;
import com.pulumi.aiven.outputs.GetKafkaMirrorMakerResult;
import com.pulumi.aiven.outputs.GetKafkaResult;
import com.pulumi.aiven.outputs.GetKafkaSchemaConfigurationResult;
import com.pulumi.aiven.outputs.GetKafkaSchemaRegistryAclResult;
import com.pulumi.aiven.outputs.GetKafkaSchemaResult;
import com.pulumi.aiven.outputs.GetKafkaTopicResult;
import com.pulumi.aiven.outputs.GetKafkaUserResult;
import com.pulumi.aiven.outputs.GetM3AggregatorResult;
import com.pulumi.aiven.outputs.GetM3DbResult;
import com.pulumi.aiven.outputs.GetM3dbUserResult;
import com.pulumi.aiven.outputs.GetMirrorMakerReplicationFlowResult;
import com.pulumi.aiven.outputs.GetMySqlResult;
import com.pulumi.aiven.outputs.GetMysqlDatabaseResult;
import com.pulumi.aiven.outputs.GetMysqlUserResult;
import com.pulumi.aiven.outputs.GetOpenSearchAclConfigResult;
import com.pulumi.aiven.outputs.GetOpenSearchAclRuleResult;
import com.pulumi.aiven.outputs.GetOpenSearchResult;
import com.pulumi.aiven.outputs.GetOpensearchSecurityPluginConfigResult;
import com.pulumi.aiven.outputs.GetOpensearchUserResult;
import com.pulumi.aiven.outputs.GetOrganizationApplicationUserResult;
import com.pulumi.aiven.outputs.GetOrganizationResult;
import com.pulumi.aiven.outputs.GetOrganizationUserGroupResult;
import com.pulumi.aiven.outputs.GetOrganizationUserResult;
import com.pulumi.aiven.outputs.GetOrganizationalUnitResult;
import com.pulumi.aiven.outputs.GetPgDatabaseResult;
import com.pulumi.aiven.outputs.GetPgResult;
import com.pulumi.aiven.outputs.GetPgUserResult;
import com.pulumi.aiven.outputs.GetProjectResult;
import com.pulumi.aiven.outputs.GetProjectUserResult;
import com.pulumi.aiven.outputs.GetProjectVpcResult;
import com.pulumi.aiven.outputs.GetRedisResult;
import com.pulumi.aiven.outputs.GetRedisUserResult;
import com.pulumi.aiven.outputs.GetServiceComponentResult;
import com.pulumi.aiven.outputs.GetServiceIntegrationEndpointResult;
import com.pulumi.aiven.outputs.GetServiceIntegrationResult;
import com.pulumi.aiven.outputs.GetThanosResult;
import com.pulumi.aiven.outputs.GetTransitGatewayVpcAttachmentResult;
import com.pulumi.aiven.outputs.GetValkeyResult;
import com.pulumi.aiven.outputs.GetValkeyUserResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;

public final class AivenFunctions {
    /**
     * The Account data source provides information about the existing Aiven Account.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var account1 = AivenFunctions.getAccount(GetAccountArgs.builder()
     *             .name("<ACCOUNT_NAME>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountResult> getAccount(GetAccountArgs args) {
        return getAccount(args, InvokeOptions.Empty);
    }
    /**
     * The Account data source provides information about the existing Aiven Account.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var account1 = AivenFunctions.getAccount(GetAccountArgs.builder()
     *             .name("<ACCOUNT_NAME>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountResult> getAccountPlain(GetAccountPlainArgs args) {
        return getAccountPlain(args, InvokeOptions.Empty);
    }
    /**
     * The Account data source provides information about the existing Aiven Account.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var account1 = AivenFunctions.getAccount(GetAccountArgs.builder()
     *             .name("<ACCOUNT_NAME>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccountResult> getAccount(GetAccountArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getAccount:getAccount", TypeShape.of(GetAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Account data source provides information about the existing Aiven Account.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var account1 = AivenFunctions.getAccount(GetAccountArgs.builder()
     *             .name("<ACCOUNT_NAME>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccountResult> getAccountPlain(GetAccountPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getAccount:getAccount", TypeShape.of(GetAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Account Authentication data source provides information about the existing Aiven Account Authentication.
     * 
     */
    public static Output<GetAccountAuthenticationResult> getAccountAuthentication(GetAccountAuthenticationArgs args) {
        return getAccountAuthentication(args, InvokeOptions.Empty);
    }
    /**
     * The Account Authentication data source provides information about the existing Aiven Account Authentication.
     * 
     */
    public static CompletableFuture<GetAccountAuthenticationResult> getAccountAuthenticationPlain(GetAccountAuthenticationPlainArgs args) {
        return getAccountAuthenticationPlain(args, InvokeOptions.Empty);
    }
    /**
     * The Account Authentication data source provides information about the existing Aiven Account Authentication.
     * 
     */
    public static Output<GetAccountAuthenticationResult> getAccountAuthentication(GetAccountAuthenticationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getAccountAuthentication:getAccountAuthentication", TypeShape.of(GetAccountAuthenticationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Account Authentication data source provides information about the existing Aiven Account Authentication.
     * 
     */
    public static CompletableFuture<GetAccountAuthenticationResult> getAccountAuthenticationPlain(GetAccountAuthenticationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getAccountAuthentication:getAccountAuthentication", TypeShape.of(GetAccountAuthenticationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Account Team data source provides information about the existing Account Team.
     * 
     */
    public static Output<GetAccountTeamResult> getAccountTeam(GetAccountTeamArgs args) {
        return getAccountTeam(args, InvokeOptions.Empty);
    }
    /**
     * The Account Team data source provides information about the existing Account Team.
     * 
     */
    public static CompletableFuture<GetAccountTeamResult> getAccountTeamPlain(GetAccountTeamPlainArgs args) {
        return getAccountTeamPlain(args, InvokeOptions.Empty);
    }
    /**
     * The Account Team data source provides information about the existing Account Team.
     * 
     */
    public static Output<GetAccountTeamResult> getAccountTeam(GetAccountTeamArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getAccountTeam:getAccountTeam", TypeShape.of(GetAccountTeamResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Account Team data source provides information about the existing Account Team.
     * 
     */
    public static CompletableFuture<GetAccountTeamResult> getAccountTeamPlain(GetAccountTeamPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getAccountTeam:getAccountTeam", TypeShape.of(GetAccountTeamResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Account Team Member data source provides information about the existing Aiven Account Team Member.
     * 
     */
    public static Output<GetAccountTeamMemberResult> getAccountTeamMember(GetAccountTeamMemberArgs args) {
        return getAccountTeamMember(args, InvokeOptions.Empty);
    }
    /**
     * The Account Team Member data source provides information about the existing Aiven Account Team Member.
     * 
     */
    public static CompletableFuture<GetAccountTeamMemberResult> getAccountTeamMemberPlain(GetAccountTeamMemberPlainArgs args) {
        return getAccountTeamMemberPlain(args, InvokeOptions.Empty);
    }
    /**
     * The Account Team Member data source provides information about the existing Aiven Account Team Member.
     * 
     */
    public static Output<GetAccountTeamMemberResult> getAccountTeamMember(GetAccountTeamMemberArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getAccountTeamMember:getAccountTeamMember", TypeShape.of(GetAccountTeamMemberResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Account Team Member data source provides information about the existing Aiven Account Team Member.
     * 
     */
    public static CompletableFuture<GetAccountTeamMemberResult> getAccountTeamMemberPlain(GetAccountTeamMemberPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getAccountTeamMember:getAccountTeamMember", TypeShape.of(GetAccountTeamMemberResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Account Team Project data source provides information about the existing Account Team Project.
     * 
     */
    public static Output<GetAccountTeamProjectResult> getAccountTeamProject(GetAccountTeamProjectArgs args) {
        return getAccountTeamProject(args, InvokeOptions.Empty);
    }
    /**
     * The Account Team Project data source provides information about the existing Account Team Project.
     * 
     */
    public static CompletableFuture<GetAccountTeamProjectResult> getAccountTeamProjectPlain(GetAccountTeamProjectPlainArgs args) {
        return getAccountTeamProjectPlain(args, InvokeOptions.Empty);
    }
    /**
     * The Account Team Project data source provides information about the existing Account Team Project.
     * 
     */
    public static Output<GetAccountTeamProjectResult> getAccountTeamProject(GetAccountTeamProjectArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getAccountTeamProject:getAccountTeamProject", TypeShape.of(GetAccountTeamProjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Account Team Project data source provides information about the existing Account Team Project.
     * 
     */
    public static CompletableFuture<GetAccountTeamProjectResult> getAccountTeamProjectPlain(GetAccountTeamProjectPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getAccountTeamProject:getAccountTeamProject", TypeShape.of(GetAccountTeamProjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an AWS PrivateLink connection for an Aiven service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetAwsPrivatelinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getAwsPrivatelink(GetAwsPrivatelinkArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleKafka.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAwsPrivatelinkResult> getAwsPrivatelink(GetAwsPrivatelinkArgs args) {
        return getAwsPrivatelink(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an AWS PrivateLink connection for an Aiven service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetAwsPrivatelinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getAwsPrivatelink(GetAwsPrivatelinkArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleKafka.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAwsPrivatelinkResult> getAwsPrivatelinkPlain(GetAwsPrivatelinkPlainArgs args) {
        return getAwsPrivatelinkPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an AWS PrivateLink connection for an Aiven service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetAwsPrivatelinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getAwsPrivatelink(GetAwsPrivatelinkArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleKafka.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAwsPrivatelinkResult> getAwsPrivatelink(GetAwsPrivatelinkArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getAwsPrivatelink:getAwsPrivatelink", TypeShape.of(GetAwsPrivatelinkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an AWS PrivateLink connection for an Aiven service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetAwsPrivatelinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getAwsPrivatelink(GetAwsPrivatelinkArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleKafka.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAwsPrivatelinkResult> getAwsPrivatelinkPlain(GetAwsPrivatelinkPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getAwsPrivatelink:getAwsPrivatelink", TypeShape.of(GetAwsPrivatelinkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an AWS VPC peering connection.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.ProjectVpc;
     * import com.pulumi.aiven.ProjectVpcArgs;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetAwsVpcPeeringConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleVpc = new ProjectVpc("exampleVpc", ProjectVpcArgs.builder()
     *             .project(exampleProject.project())
     *             .cloudName("google-europe-west1")
     *             .networkCidr("192.168.1.0/24")
     *             .build());
     * 
     *         final var awsToAivenPeering = AivenFunctions.getAwsVpcPeeringConnection(GetAwsVpcPeeringConnectionArgs.builder()
     *             .vpcId(exampleVpc.id())
     *             .awsAccountId(awsId)
     *             .awsVpcId("vpc-1a2b3c4d5e6f7g8h9")
     *             .awsVpcRegion("aws-us-east-2")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAwsVpcPeeringConnectionResult> getAwsVpcPeeringConnection(GetAwsVpcPeeringConnectionArgs args) {
        return getAwsVpcPeeringConnection(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an AWS VPC peering connection.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.ProjectVpc;
     * import com.pulumi.aiven.ProjectVpcArgs;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetAwsVpcPeeringConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleVpc = new ProjectVpc("exampleVpc", ProjectVpcArgs.builder()
     *             .project(exampleProject.project())
     *             .cloudName("google-europe-west1")
     *             .networkCidr("192.168.1.0/24")
     *             .build());
     * 
     *         final var awsToAivenPeering = AivenFunctions.getAwsVpcPeeringConnection(GetAwsVpcPeeringConnectionArgs.builder()
     *             .vpcId(exampleVpc.id())
     *             .awsAccountId(awsId)
     *             .awsVpcId("vpc-1a2b3c4d5e6f7g8h9")
     *             .awsVpcRegion("aws-us-east-2")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAwsVpcPeeringConnectionResult> getAwsVpcPeeringConnectionPlain(GetAwsVpcPeeringConnectionPlainArgs args) {
        return getAwsVpcPeeringConnectionPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an AWS VPC peering connection.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.ProjectVpc;
     * import com.pulumi.aiven.ProjectVpcArgs;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetAwsVpcPeeringConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleVpc = new ProjectVpc("exampleVpc", ProjectVpcArgs.builder()
     *             .project(exampleProject.project())
     *             .cloudName("google-europe-west1")
     *             .networkCidr("192.168.1.0/24")
     *             .build());
     * 
     *         final var awsToAivenPeering = AivenFunctions.getAwsVpcPeeringConnection(GetAwsVpcPeeringConnectionArgs.builder()
     *             .vpcId(exampleVpc.id())
     *             .awsAccountId(awsId)
     *             .awsVpcId("vpc-1a2b3c4d5e6f7g8h9")
     *             .awsVpcRegion("aws-us-east-2")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAwsVpcPeeringConnectionResult> getAwsVpcPeeringConnection(GetAwsVpcPeeringConnectionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getAwsVpcPeeringConnection:getAwsVpcPeeringConnection", TypeShape.of(GetAwsVpcPeeringConnectionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an AWS VPC peering connection.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.ProjectVpc;
     * import com.pulumi.aiven.ProjectVpcArgs;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetAwsVpcPeeringConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleVpc = new ProjectVpc("exampleVpc", ProjectVpcArgs.builder()
     *             .project(exampleProject.project())
     *             .cloudName("google-europe-west1")
     *             .networkCidr("192.168.1.0/24")
     *             .build());
     * 
     *         final var awsToAivenPeering = AivenFunctions.getAwsVpcPeeringConnection(GetAwsVpcPeeringConnectionArgs.builder()
     *             .vpcId(exampleVpc.id())
     *             .awsAccountId(awsId)
     *             .awsVpcId("vpc-1a2b3c4d5e6f7g8h9")
     *             .awsVpcRegion("aws-us-east-2")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAwsVpcPeeringConnectionResult> getAwsVpcPeeringConnectionPlain(GetAwsVpcPeeringConnectionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getAwsVpcPeeringConnection:getAwsVpcPeeringConnection", TypeShape.of(GetAwsVpcPeeringConnectionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Azure Private Link connection for an Aiven service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetAzurePrivatelinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getAzurePrivatelink(GetAzurePrivatelinkArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleKafka.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAzurePrivatelinkResult> getAzurePrivatelink(GetAzurePrivatelinkArgs args) {
        return getAzurePrivatelink(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Azure Private Link connection for an Aiven service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetAzurePrivatelinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getAzurePrivatelink(GetAzurePrivatelinkArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleKafka.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAzurePrivatelinkResult> getAzurePrivatelinkPlain(GetAzurePrivatelinkPlainArgs args) {
        return getAzurePrivatelinkPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Azure Private Link connection for an Aiven service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetAzurePrivatelinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getAzurePrivatelink(GetAzurePrivatelinkArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleKafka.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAzurePrivatelinkResult> getAzurePrivatelink(GetAzurePrivatelinkArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getAzurePrivatelink:getAzurePrivatelink", TypeShape.of(GetAzurePrivatelinkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Azure Private Link connection for an Aiven service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetAzurePrivatelinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getAzurePrivatelink(GetAzurePrivatelinkArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleKafka.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAzurePrivatelinkResult> getAzurePrivatelinkPlain(GetAzurePrivatelinkPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getAzurePrivatelink:getAzurePrivatelink", TypeShape.of(GetAzurePrivatelinkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about about an Azure VPC peering connection.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetAzureVpcPeeringConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var azureToAivenPeering = AivenFunctions.getAzureVpcPeeringConnection(GetAzureVpcPeeringConnectionArgs.builder()
     *             .vpcId(exampleVpc.id())
     *             .azureSubscriptionId("00000000-0000-0000-0000-000000000000")
     *             .peerResourceGroup("example-resource-group")
     *             .vnetName("example-vnet")
     *             .peerAzureAppId("00000000-0000-0000-0000-000000000000")
     *             .peerAzureTenantId("00000000-0000-0000-0000-000000000000")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAzureVpcPeeringConnectionResult> getAzureVpcPeeringConnection(GetAzureVpcPeeringConnectionArgs args) {
        return getAzureVpcPeeringConnection(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about about an Azure VPC peering connection.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetAzureVpcPeeringConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var azureToAivenPeering = AivenFunctions.getAzureVpcPeeringConnection(GetAzureVpcPeeringConnectionArgs.builder()
     *             .vpcId(exampleVpc.id())
     *             .azureSubscriptionId("00000000-0000-0000-0000-000000000000")
     *             .peerResourceGroup("example-resource-group")
     *             .vnetName("example-vnet")
     *             .peerAzureAppId("00000000-0000-0000-0000-000000000000")
     *             .peerAzureTenantId("00000000-0000-0000-0000-000000000000")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAzureVpcPeeringConnectionResult> getAzureVpcPeeringConnectionPlain(GetAzureVpcPeeringConnectionPlainArgs args) {
        return getAzureVpcPeeringConnectionPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about about an Azure VPC peering connection.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetAzureVpcPeeringConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var azureToAivenPeering = AivenFunctions.getAzureVpcPeeringConnection(GetAzureVpcPeeringConnectionArgs.builder()
     *             .vpcId(exampleVpc.id())
     *             .azureSubscriptionId("00000000-0000-0000-0000-000000000000")
     *             .peerResourceGroup("example-resource-group")
     *             .vnetName("example-vnet")
     *             .peerAzureAppId("00000000-0000-0000-0000-000000000000")
     *             .peerAzureTenantId("00000000-0000-0000-0000-000000000000")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAzureVpcPeeringConnectionResult> getAzureVpcPeeringConnection(GetAzureVpcPeeringConnectionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getAzureVpcPeeringConnection:getAzureVpcPeeringConnection", TypeShape.of(GetAzureVpcPeeringConnectionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about about an Azure VPC peering connection.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetAzureVpcPeeringConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var azureToAivenPeering = AivenFunctions.getAzureVpcPeeringConnection(GetAzureVpcPeeringConnectionArgs.builder()
     *             .vpcId(exampleVpc.id())
     *             .azureSubscriptionId("00000000-0000-0000-0000-000000000000")
     *             .peerResourceGroup("example-resource-group")
     *             .vnetName("example-vnet")
     *             .peerAzureAppId("00000000-0000-0000-0000-000000000000")
     *             .peerAzureTenantId("00000000-0000-0000-0000-000000000000")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAzureVpcPeeringConnectionResult> getAzureVpcPeeringConnectionPlain(GetAzureVpcPeeringConnectionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getAzureVpcPeeringConnection:getAzureVpcPeeringConnection", TypeShape.of(GetAzureVpcPeeringConnectionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a billing group.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetBillingGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleBillingGroup = AivenFunctions.getBillingGroup(GetBillingGroupArgs.builder()
     *             .name("example-billing-group")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBillingGroupResult> getBillingGroup(GetBillingGroupArgs args) {
        return getBillingGroup(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a billing group.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetBillingGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleBillingGroup = AivenFunctions.getBillingGroup(GetBillingGroupArgs.builder()
     *             .name("example-billing-group")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetBillingGroupResult> getBillingGroupPlain(GetBillingGroupPlainArgs args) {
        return getBillingGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a billing group.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetBillingGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleBillingGroup = AivenFunctions.getBillingGroup(GetBillingGroupArgs.builder()
     *             .name("example-billing-group")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBillingGroupResult> getBillingGroup(GetBillingGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getBillingGroup:getBillingGroup", TypeShape.of(GetBillingGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a billing group.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetBillingGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleBillingGroup = AivenFunctions.getBillingGroup(GetBillingGroupArgs.builder()
     *             .name("example-billing-group")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetBillingGroupResult> getBillingGroupPlain(GetBillingGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getBillingGroup:getBillingGroup", TypeShape.of(GetBillingGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Apache Cassandra® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetCassandraArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCassandra = AivenFunctions.getCassandra(GetCassandraArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-cassandra-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * @deprecated
     * aiven.getCassanda has been deprecated in favor of aiven.getCassandra
     * 
     */
    @Deprecated /* aiven.getCassanda has been deprecated in favor of aiven.getCassandra */
    public static Output<GetCassandaResult> getCassanda(GetCassandaArgs args) {
        return getCassanda(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Apache Cassandra® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetCassandraArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCassandra = AivenFunctions.getCassandra(GetCassandraArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-cassandra-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * @deprecated
     * aiven.getCassanda has been deprecated in favor of aiven.getCassandra
     * 
     */
    @Deprecated /* aiven.getCassanda has been deprecated in favor of aiven.getCassandra */
    public static CompletableFuture<GetCassandaResult> getCassandaPlain(GetCassandaPlainArgs args) {
        return getCassandaPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Apache Cassandra® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetCassandraArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCassandra = AivenFunctions.getCassandra(GetCassandraArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-cassandra-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * @deprecated
     * aiven.getCassanda has been deprecated in favor of aiven.getCassandra
     * 
     */
    @Deprecated /* aiven.getCassanda has been deprecated in favor of aiven.getCassandra */
    public static Output<GetCassandaResult> getCassanda(GetCassandaArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getCassanda:getCassanda", TypeShape.of(GetCassandaResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Apache Cassandra® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetCassandraArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCassandra = AivenFunctions.getCassandra(GetCassandraArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-cassandra-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * @deprecated
     * aiven.getCassanda has been deprecated in favor of aiven.getCassandra
     * 
     */
    @Deprecated /* aiven.getCassanda has been deprecated in favor of aiven.getCassandra */
    public static CompletableFuture<GetCassandaResult> getCassandaPlain(GetCassandaPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getCassanda:getCassanda", TypeShape.of(GetCassandaResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Apache Cassandra® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetCassandraArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCassandra = AivenFunctions.getCassandra(GetCassandraArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-cassandra-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCassandraResult> getCassandra(GetCassandraArgs args) {
        return getCassandra(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Apache Cassandra® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetCassandraArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCassandra = AivenFunctions.getCassandra(GetCassandraArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-cassandra-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCassandraResult> getCassandraPlain(GetCassandraPlainArgs args) {
        return getCassandraPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Apache Cassandra® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetCassandraArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCassandra = AivenFunctions.getCassandra(GetCassandraArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-cassandra-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCassandraResult> getCassandra(GetCassandraArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getCassandra:getCassandra", TypeShape.of(GetCassandraResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Apache Cassandra® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetCassandraArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleCassandra = AivenFunctions.getCassandra(GetCassandraArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-cassandra-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCassandraResult> getCassandraPlain(GetCassandraPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getCassandra:getCassandra", TypeShape.of(GetCassandraResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Apache Cassandra® service user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetCassandraUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleServiceUser = AivenFunctions.getCassandraUser(GetCassandraUserArgs.builder()
     *             .serviceName(exampleCassandra.serviceName())
     *             .project(exampleProject.project())
     *             .username("example-cassandra-user")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCassandraUserResult> getCassandraUser(GetCassandraUserArgs args) {
        return getCassandraUser(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Apache Cassandra® service user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetCassandraUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleServiceUser = AivenFunctions.getCassandraUser(GetCassandraUserArgs.builder()
     *             .serviceName(exampleCassandra.serviceName())
     *             .project(exampleProject.project())
     *             .username("example-cassandra-user")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCassandraUserResult> getCassandraUserPlain(GetCassandraUserPlainArgs args) {
        return getCassandraUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Apache Cassandra® service user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetCassandraUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleServiceUser = AivenFunctions.getCassandraUser(GetCassandraUserArgs.builder()
     *             .serviceName(exampleCassandra.serviceName())
     *             .project(exampleProject.project())
     *             .username("example-cassandra-user")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCassandraUserResult> getCassandraUser(GetCassandraUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getCassandraUser:getCassandraUser", TypeShape.of(GetCassandraUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Apache Cassandra® service user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetCassandraUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleServiceUser = AivenFunctions.getCassandraUser(GetCassandraUserArgs.builder()
     *             .serviceName(exampleCassandra.serviceName())
     *             .project(exampleProject.project())
     *             .username("example-cassandra-user")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCassandraUserResult> getCassandraUserPlain(GetCassandraUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getCassandraUser:getCassandraUser", TypeShape.of(GetCassandraUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a ClickHouse service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetClickhouseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleClickhouse = AivenFunctions.getClickhouse(GetClickhouseArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-clickhouse-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClickhouseResult> getClickhouse(GetClickhouseArgs args) {
        return getClickhouse(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a ClickHouse service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetClickhouseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleClickhouse = AivenFunctions.getClickhouse(GetClickhouseArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-clickhouse-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClickhouseResult> getClickhousePlain(GetClickhousePlainArgs args) {
        return getClickhousePlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a ClickHouse service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetClickhouseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleClickhouse = AivenFunctions.getClickhouse(GetClickhouseArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-clickhouse-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClickhouseResult> getClickhouse(GetClickhouseArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getClickhouse:getClickhouse", TypeShape.of(GetClickhouseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a ClickHouse service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetClickhouseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleClickhouse = AivenFunctions.getClickhouse(GetClickhouseArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-clickhouse-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClickhouseResult> getClickhousePlain(GetClickhousePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getClickhouse:getClickhouse", TypeShape.of(GetClickhouseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a ClickHouse database.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetClickhouseDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleClickhouseDb = AivenFunctions.getClickhouseDatabase(GetClickhouseDatabaseArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleClickhouse.serviceName())
     *             .name("example-database")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClickhouseDatabaseResult> getClickhouseDatabase(GetClickhouseDatabaseArgs args) {
        return getClickhouseDatabase(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a ClickHouse database.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetClickhouseDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleClickhouseDb = AivenFunctions.getClickhouseDatabase(GetClickhouseDatabaseArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleClickhouse.serviceName())
     *             .name("example-database")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClickhouseDatabaseResult> getClickhouseDatabasePlain(GetClickhouseDatabasePlainArgs args) {
        return getClickhouseDatabasePlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a ClickHouse database.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetClickhouseDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleClickhouseDb = AivenFunctions.getClickhouseDatabase(GetClickhouseDatabaseArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleClickhouse.serviceName())
     *             .name("example-database")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClickhouseDatabaseResult> getClickhouseDatabase(GetClickhouseDatabaseArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getClickhouseDatabase:getClickhouseDatabase", TypeShape.of(GetClickhouseDatabaseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a ClickHouse database.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetClickhouseDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleClickhouseDb = AivenFunctions.getClickhouseDatabase(GetClickhouseDatabaseArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleClickhouse.serviceName())
     *             .name("example-database")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClickhouseDatabaseResult> getClickhouseDatabasePlain(GetClickhouseDatabasePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getClickhouseDatabase:getClickhouseDatabase", TypeShape.of(GetClickhouseDatabaseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a ClickHouse user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetClickhouseUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUser = AivenFunctions.getClickhouseUser(GetClickhouseUserArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleClickhouse.serviceName())
     *             .username("analyst")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClickhouseUserResult> getClickhouseUser(GetClickhouseUserArgs args) {
        return getClickhouseUser(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a ClickHouse user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetClickhouseUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUser = AivenFunctions.getClickhouseUser(GetClickhouseUserArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleClickhouse.serviceName())
     *             .username("analyst")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClickhouseUserResult> getClickhouseUserPlain(GetClickhouseUserPlainArgs args) {
        return getClickhouseUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a ClickHouse user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetClickhouseUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUser = AivenFunctions.getClickhouseUser(GetClickhouseUserArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleClickhouse.serviceName())
     *             .username("analyst")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClickhouseUserResult> getClickhouseUser(GetClickhouseUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getClickhouseUser:getClickhouseUser", TypeShape.of(GetClickhouseUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a ClickHouse user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetClickhouseUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUser = AivenFunctions.getClickhouseUser(GetClickhouseUserArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleClickhouse.serviceName())
     *             .username("analyst")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClickhouseUserResult> getClickhouseUserPlain(GetClickhouseUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getClickhouseUser:getClickhouseUser", TypeShape.of(GetClickhouseUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a connection pool in an Aiven for PostgreSQL® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetConnectionPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getConnectionPool(GetConnectionPoolArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(examplePostgres.serviceName())
     *             .poolName("example-pool")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetConnectionPoolResult> getConnectionPool(GetConnectionPoolArgs args) {
        return getConnectionPool(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a connection pool in an Aiven for PostgreSQL® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetConnectionPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getConnectionPool(GetConnectionPoolArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(examplePostgres.serviceName())
     *             .poolName("example-pool")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetConnectionPoolResult> getConnectionPoolPlain(GetConnectionPoolPlainArgs args) {
        return getConnectionPoolPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a connection pool in an Aiven for PostgreSQL® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetConnectionPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getConnectionPool(GetConnectionPoolArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(examplePostgres.serviceName())
     *             .poolName("example-pool")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetConnectionPoolResult> getConnectionPool(GetConnectionPoolArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getConnectionPool:getConnectionPool", TypeShape.of(GetConnectionPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a connection pool in an Aiven for PostgreSQL® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetConnectionPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getConnectionPool(GetConnectionPoolArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(examplePostgres.serviceName())
     *             .poolName("example-pool")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetConnectionPoolResult> getConnectionPoolPlain(GetConnectionPoolPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getConnectionPool:getConnectionPool", TypeShape.of(GetConnectionPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Dragonfly® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetDragonflyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDragonfly = AivenFunctions.getDragonfly(GetDragonflyArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-dragonfly-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDragonflyResult> getDragonfly(GetDragonflyArgs args) {
        return getDragonfly(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Dragonfly® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetDragonflyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDragonfly = AivenFunctions.getDragonfly(GetDragonflyArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-dragonfly-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDragonflyResult> getDragonflyPlain(GetDragonflyPlainArgs args) {
        return getDragonflyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Dragonfly® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetDragonflyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDragonfly = AivenFunctions.getDragonfly(GetDragonflyArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-dragonfly-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDragonflyResult> getDragonfly(GetDragonflyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getDragonfly:getDragonfly", TypeShape.of(GetDragonflyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Dragonfly® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetDragonflyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleDragonfly = AivenFunctions.getDragonfly(GetDragonflyArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-dragonfly-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDragonflyResult> getDragonflyPlain(GetDragonflyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getDragonfly:getDragonfly", TypeShape.of(GetDragonflyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Maps an external service user to an Aiven user.
     * 
     * **This resource is in the beta stage and may change without notice.** Set
     * the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
     * 
     */
    public static Output<GetExternalIdentityResult> getExternalIdentity(GetExternalIdentityArgs args) {
        return getExternalIdentity(args, InvokeOptions.Empty);
    }
    /**
     * Maps an external service user to an Aiven user.
     * 
     * **This resource is in the beta stage and may change without notice.** Set
     * the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
     * 
     */
    public static CompletableFuture<GetExternalIdentityResult> getExternalIdentityPlain(GetExternalIdentityPlainArgs args) {
        return getExternalIdentityPlain(args, InvokeOptions.Empty);
    }
    /**
     * Maps an external service user to an Aiven user.
     * 
     * **This resource is in the beta stage and may change without notice.** Set
     * the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
     * 
     */
    public static Output<GetExternalIdentityResult> getExternalIdentity(GetExternalIdentityArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getExternalIdentity:getExternalIdentity", TypeShape.of(GetExternalIdentityResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Maps an external service user to an Aiven user.
     * 
     * **This resource is in the beta stage and may change without notice.** Set
     * the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
     * 
     */
    public static CompletableFuture<GetExternalIdentityResult> getExternalIdentityPlain(GetExternalIdentityPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getExternalIdentity:getExternalIdentity", TypeShape.of(GetExternalIdentityResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Apache Flink® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetFlinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleFlink = AivenFunctions.getFlink(GetFlinkArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-flink-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFlinkResult> getFlink(GetFlinkArgs args) {
        return getFlink(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Apache Flink® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetFlinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleFlink = AivenFunctions.getFlink(GetFlinkArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-flink-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFlinkResult> getFlinkPlain(GetFlinkPlainArgs args) {
        return getFlinkPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Apache Flink® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetFlinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleFlink = AivenFunctions.getFlink(GetFlinkArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-flink-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFlinkResult> getFlink(GetFlinkArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getFlink:getFlink", TypeShape.of(GetFlinkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Apache Flink® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetFlinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleFlink = AivenFunctions.getFlink(GetFlinkArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-flink-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFlinkResult> getFlinkPlain(GetFlinkPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getFlink:getFlink", TypeShape.of(GetFlinkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Apache Flink® application.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetFlinkApplicationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApp = AivenFunctions.getFlinkApplication(GetFlinkApplicationArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-flink-service")
     *             .name("example-app")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFlinkApplicationResult> getFlinkApplication(GetFlinkApplicationArgs args) {
        return getFlinkApplication(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Apache Flink® application.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetFlinkApplicationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApp = AivenFunctions.getFlinkApplication(GetFlinkApplicationArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-flink-service")
     *             .name("example-app")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFlinkApplicationResult> getFlinkApplicationPlain(GetFlinkApplicationPlainArgs args) {
        return getFlinkApplicationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Apache Flink® application.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetFlinkApplicationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApp = AivenFunctions.getFlinkApplication(GetFlinkApplicationArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-flink-service")
     *             .name("example-app")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFlinkApplicationResult> getFlinkApplication(GetFlinkApplicationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getFlinkApplication:getFlinkApplication", TypeShape.of(GetFlinkApplicationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Apache Flink® application.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetFlinkApplicationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleApp = AivenFunctions.getFlinkApplication(GetFlinkApplicationArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-flink-service")
     *             .name("example-app")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFlinkApplicationResult> getFlinkApplicationPlain(GetFlinkApplicationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getFlinkApplication:getFlinkApplication", TypeShape.of(GetFlinkApplicationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Apache Flink® application version.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetFlinkApplicationVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getFlinkApplicationVersion(GetFlinkApplicationVersionArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleFlink.serviceName())
     *             .applicationId(exampleApp.applicationId())
     *             .applicationVersionId("d6e7f71c-cadf-49b5-a4ad-126c805fe684")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFlinkApplicationVersionResult> getFlinkApplicationVersion(GetFlinkApplicationVersionArgs args) {
        return getFlinkApplicationVersion(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Apache Flink® application version.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetFlinkApplicationVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getFlinkApplicationVersion(GetFlinkApplicationVersionArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleFlink.serviceName())
     *             .applicationId(exampleApp.applicationId())
     *             .applicationVersionId("d6e7f71c-cadf-49b5-a4ad-126c805fe684")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFlinkApplicationVersionResult> getFlinkApplicationVersionPlain(GetFlinkApplicationVersionPlainArgs args) {
        return getFlinkApplicationVersionPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Apache Flink® application version.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetFlinkApplicationVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getFlinkApplicationVersion(GetFlinkApplicationVersionArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleFlink.serviceName())
     *             .applicationId(exampleApp.applicationId())
     *             .applicationVersionId("d6e7f71c-cadf-49b5-a4ad-126c805fe684")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFlinkApplicationVersionResult> getFlinkApplicationVersion(GetFlinkApplicationVersionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getFlinkApplicationVersion:getFlinkApplicationVersion", TypeShape.of(GetFlinkApplicationVersionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Apache Flink® application version.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetFlinkApplicationVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getFlinkApplicationVersion(GetFlinkApplicationVersionArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleFlink.serviceName())
     *             .applicationId(exampleApp.applicationId())
     *             .applicationVersionId("d6e7f71c-cadf-49b5-a4ad-126c805fe684")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFlinkApplicationVersionResult> getFlinkApplicationVersionPlain(GetFlinkApplicationVersionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getFlinkApplicationVersion:getFlinkApplicationVersion", TypeShape.of(GetFlinkApplicationVersionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a Google Private Service Connect connection for an Aiven service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetGcpPrivatelinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getGcpPrivatelink(GetGcpPrivatelinkArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleKafka.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetGcpPrivatelinkResult> getGcpPrivatelink(GetGcpPrivatelinkArgs args) {
        return getGcpPrivatelink(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Google Private Service Connect connection for an Aiven service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetGcpPrivatelinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getGcpPrivatelink(GetGcpPrivatelinkArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleKafka.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetGcpPrivatelinkResult> getGcpPrivatelinkPlain(GetGcpPrivatelinkPlainArgs args) {
        return getGcpPrivatelinkPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Google Private Service Connect connection for an Aiven service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetGcpPrivatelinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getGcpPrivatelink(GetGcpPrivatelinkArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleKafka.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetGcpPrivatelinkResult> getGcpPrivatelink(GetGcpPrivatelinkArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getGcpPrivatelink:getGcpPrivatelink", TypeShape.of(GetGcpPrivatelinkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a Google Private Service Connect connection for an Aiven service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetGcpPrivatelinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getGcpPrivatelink(GetGcpPrivatelinkArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleKafka.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetGcpPrivatelinkResult> getGcpPrivatelinkPlain(GetGcpPrivatelinkPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getGcpPrivatelink:getGcpPrivatelink", TypeShape.of(GetGcpPrivatelinkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The GCP VPC Peering Connection data source provides information about the existing Aiven VPC Peering Connection.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetGcpVpcPeeringConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getGcpVpcPeeringConnection(GetGcpVpcPeeringConnectionArgs.builder()
     *             .vpcId(vpc.id())
     *             .gcpProjectId("example-project")
     *             .peerVpc("example-network")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetGcpVpcPeeringConnectionResult> getGcpVpcPeeringConnection(GetGcpVpcPeeringConnectionArgs args) {
        return getGcpVpcPeeringConnection(args, InvokeOptions.Empty);
    }
    /**
     * The GCP VPC Peering Connection data source provides information about the existing Aiven VPC Peering Connection.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetGcpVpcPeeringConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getGcpVpcPeeringConnection(GetGcpVpcPeeringConnectionArgs.builder()
     *             .vpcId(vpc.id())
     *             .gcpProjectId("example-project")
     *             .peerVpc("example-network")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetGcpVpcPeeringConnectionResult> getGcpVpcPeeringConnectionPlain(GetGcpVpcPeeringConnectionPlainArgs args) {
        return getGcpVpcPeeringConnectionPlain(args, InvokeOptions.Empty);
    }
    /**
     * The GCP VPC Peering Connection data source provides information about the existing Aiven VPC Peering Connection.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetGcpVpcPeeringConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getGcpVpcPeeringConnection(GetGcpVpcPeeringConnectionArgs.builder()
     *             .vpcId(vpc.id())
     *             .gcpProjectId("example-project")
     *             .peerVpc("example-network")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetGcpVpcPeeringConnectionResult> getGcpVpcPeeringConnection(GetGcpVpcPeeringConnectionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getGcpVpcPeeringConnection:getGcpVpcPeeringConnection", TypeShape.of(GetGcpVpcPeeringConnectionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The GCP VPC Peering Connection data source provides information about the existing Aiven VPC Peering Connection.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetGcpVpcPeeringConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getGcpVpcPeeringConnection(GetGcpVpcPeeringConnectionArgs.builder()
     *             .vpcId(vpc.id())
     *             .gcpProjectId("example-project")
     *             .peerVpc("example-network")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetGcpVpcPeeringConnectionResult> getGcpVpcPeeringConnectionPlain(GetGcpVpcPeeringConnectionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getGcpVpcPeeringConnection:getGcpVpcPeeringConnection", TypeShape.of(GetGcpVpcPeeringConnectionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Grafana® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetGrafanaArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleGrafana = AivenFunctions.getGrafana(GetGrafanaArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-grafana-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetGrafanaResult> getGrafana(GetGrafanaArgs args) {
        return getGrafana(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Grafana® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetGrafanaArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleGrafana = AivenFunctions.getGrafana(GetGrafanaArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-grafana-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetGrafanaResult> getGrafanaPlain(GetGrafanaPlainArgs args) {
        return getGrafanaPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Grafana® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetGrafanaArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleGrafana = AivenFunctions.getGrafana(GetGrafanaArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-grafana-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetGrafanaResult> getGrafana(GetGrafanaArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getGrafana:getGrafana", TypeShape.of(GetGrafanaResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Grafana® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetGrafanaArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleGrafana = AivenFunctions.getGrafana(GetGrafanaArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-grafana-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetGrafanaResult> getGrafanaPlain(GetGrafanaPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getGrafana:getGrafana", TypeShape.of(GetGrafanaResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetInfluxDbResult> getInfluxDb(GetInfluxDbArgs args) {
        return getInfluxDb(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetInfluxDbResult> getInfluxDbPlain(GetInfluxDbPlainArgs args) {
        return getInfluxDbPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetInfluxDbResult> getInfluxDb(GetInfluxDbArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getInfluxDb:getInfluxDb", TypeShape.of(GetInfluxDbResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetInfluxDbResult> getInfluxDbPlain(GetInfluxDbPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getInfluxDb:getInfluxDb", TypeShape.of(GetInfluxDbResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetInfluxdbDatabaseResult> getInfluxdbDatabase(GetInfluxdbDatabaseArgs args) {
        return getInfluxdbDatabase(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetInfluxdbDatabaseResult> getInfluxdbDatabasePlain(GetInfluxdbDatabasePlainArgs args) {
        return getInfluxdbDatabasePlain(args, InvokeOptions.Empty);
    }
    public static Output<GetInfluxdbDatabaseResult> getInfluxdbDatabase(GetInfluxdbDatabaseArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getInfluxdbDatabase:getInfluxdbDatabase", TypeShape.of(GetInfluxdbDatabaseResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetInfluxdbDatabaseResult> getInfluxdbDatabasePlain(GetInfluxdbDatabasePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getInfluxdbDatabase:getInfluxdbDatabase", TypeShape.of(GetInfluxdbDatabaseResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetInfluxdbUserResult> getInfluxdbUser(GetInfluxdbUserArgs args) {
        return getInfluxdbUser(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetInfluxdbUserResult> getInfluxdbUserPlain(GetInfluxdbUserPlainArgs args) {
        return getInfluxdbUserPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetInfluxdbUserResult> getInfluxdbUser(GetInfluxdbUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getInfluxdbUser:getInfluxdbUser", TypeShape.of(GetInfluxdbUserResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetInfluxdbUserResult> getInfluxdbUserPlain(GetInfluxdbUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getInfluxdbUser:getInfluxdbUser", TypeShape.of(GetInfluxdbUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Apache Kafka® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleKafka = AivenFunctions.getKafka(GetKafkaArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-kafka")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKafkaResult> getKafka(GetKafkaArgs args) {
        return getKafka(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Apache Kafka® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleKafka = AivenFunctions.getKafka(GetKafkaArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-kafka")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKafkaResult> getKafkaPlain(GetKafkaPlainArgs args) {
        return getKafkaPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Apache Kafka® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleKafka = AivenFunctions.getKafka(GetKafkaArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-kafka")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKafkaResult> getKafka(GetKafkaArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getKafka:getKafka", TypeShape.of(GetKafkaResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Apache Kafka® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleKafka = AivenFunctions.getKafka(GetKafkaArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-kafka")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKafkaResult> getKafkaPlain(GetKafkaPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getKafka:getKafka", TypeShape.of(GetKafkaResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an ACL entry for an Aiven for Apache Kafka® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaAclArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAcl = AivenFunctions.getKafkaAcl(GetKafkaAclArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleKafka.serviceName())
     *             .topic("example-topic")
     *             .permission("admin")
     *             .username("example-user")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKafkaAclResult> getKafkaAcl(GetKafkaAclArgs args) {
        return getKafkaAcl(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an ACL entry for an Aiven for Apache Kafka® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaAclArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAcl = AivenFunctions.getKafkaAcl(GetKafkaAclArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleKafka.serviceName())
     *             .topic("example-topic")
     *             .permission("admin")
     *             .username("example-user")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKafkaAclResult> getKafkaAclPlain(GetKafkaAclPlainArgs args) {
        return getKafkaAclPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an ACL entry for an Aiven for Apache Kafka® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaAclArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAcl = AivenFunctions.getKafkaAcl(GetKafkaAclArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleKafka.serviceName())
     *             .topic("example-topic")
     *             .permission("admin")
     *             .username("example-user")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKafkaAclResult> getKafkaAcl(GetKafkaAclArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getKafkaAcl:getKafkaAcl", TypeShape.of(GetKafkaAclResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an ACL entry for an Aiven for Apache Kafka® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaAclArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleAcl = AivenFunctions.getKafkaAcl(GetKafkaAclArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleKafka.serviceName())
     *             .topic("example-topic")
     *             .permission("admin")
     *             .username("example-user")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKafkaAclResult> getKafkaAclPlain(GetKafkaAclPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getKafkaAcl:getKafkaAcl", TypeShape.of(GetKafkaAclResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Apache Kafka® Connect service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaConnectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleKafkaConnect = AivenFunctions.getKafkaConnect(GetKafkaConnectArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-connect-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKafkaConnectResult> getKafkaConnect(GetKafkaConnectArgs args) {
        return getKafkaConnect(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Apache Kafka® Connect service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaConnectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleKafkaConnect = AivenFunctions.getKafkaConnect(GetKafkaConnectArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-connect-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKafkaConnectResult> getKafkaConnectPlain(GetKafkaConnectPlainArgs args) {
        return getKafkaConnectPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Apache Kafka® Connect service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaConnectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleKafkaConnect = AivenFunctions.getKafkaConnect(GetKafkaConnectArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-connect-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKafkaConnectResult> getKafkaConnect(GetKafkaConnectArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getKafkaConnect:getKafkaConnect", TypeShape.of(GetKafkaConnectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Apache Kafka® Connect service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaConnectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleKafkaConnect = AivenFunctions.getKafkaConnect(GetKafkaConnectArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-connect-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKafkaConnectResult> getKafkaConnectPlain(GetKafkaConnectPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getKafkaConnect:getKafkaConnect", TypeShape.of(GetKafkaConnectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Apache Kafka® connector.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaConnectorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var kafka-os-connector = AivenFunctions.getKafkaConnector(GetKafkaConnectorArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleKafka.serviceName())
     *             .connectorName("kafka-opensearch-connector")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKafkaConnectorResult> getKafkaConnector(GetKafkaConnectorArgs args) {
        return getKafkaConnector(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Apache Kafka® connector.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaConnectorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var kafka-os-connector = AivenFunctions.getKafkaConnector(GetKafkaConnectorArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleKafka.serviceName())
     *             .connectorName("kafka-opensearch-connector")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKafkaConnectorResult> getKafkaConnectorPlain(GetKafkaConnectorPlainArgs args) {
        return getKafkaConnectorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Apache Kafka® connector.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaConnectorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var kafka-os-connector = AivenFunctions.getKafkaConnector(GetKafkaConnectorArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleKafka.serviceName())
     *             .connectorName("kafka-opensearch-connector")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKafkaConnectorResult> getKafkaConnector(GetKafkaConnectorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getKafkaConnector:getKafkaConnector", TypeShape.of(GetKafkaConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Apache Kafka® connector.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaConnectorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var kafka-os-connector = AivenFunctions.getKafkaConnector(GetKafkaConnectorArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleKafka.serviceName())
     *             .connectorName("kafka-opensearch-connector")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKafkaConnectorResult> getKafkaConnectorPlain(GetKafkaConnectorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getKafkaConnector:getKafkaConnector", TypeShape.of(GetKafkaConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Kafka MirrorMaker data source provides information about the existing Aiven Kafka MirrorMaker 2 service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaMirrorMakerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var mm1 = AivenFunctions.getKafkaMirrorMaker(GetKafkaMirrorMakerArgs.builder()
     *             .project(pr1.project())
     *             .serviceName("my-mm1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKafkaMirrorMakerResult> getKafkaMirrorMaker(GetKafkaMirrorMakerArgs args) {
        return getKafkaMirrorMaker(args, InvokeOptions.Empty);
    }
    /**
     * The Kafka MirrorMaker data source provides information about the existing Aiven Kafka MirrorMaker 2 service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaMirrorMakerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var mm1 = AivenFunctions.getKafkaMirrorMaker(GetKafkaMirrorMakerArgs.builder()
     *             .project(pr1.project())
     *             .serviceName("my-mm1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKafkaMirrorMakerResult> getKafkaMirrorMakerPlain(GetKafkaMirrorMakerPlainArgs args) {
        return getKafkaMirrorMakerPlain(args, InvokeOptions.Empty);
    }
    /**
     * The Kafka MirrorMaker data source provides information about the existing Aiven Kafka MirrorMaker 2 service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaMirrorMakerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var mm1 = AivenFunctions.getKafkaMirrorMaker(GetKafkaMirrorMakerArgs.builder()
     *             .project(pr1.project())
     *             .serviceName("my-mm1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKafkaMirrorMakerResult> getKafkaMirrorMaker(GetKafkaMirrorMakerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getKafkaMirrorMaker:getKafkaMirrorMaker", TypeShape.of(GetKafkaMirrorMakerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Kafka MirrorMaker data source provides information about the existing Aiven Kafka MirrorMaker 2 service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaMirrorMakerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var mm1 = AivenFunctions.getKafkaMirrorMaker(GetKafkaMirrorMakerArgs.builder()
     *             .project(pr1.project())
     *             .serviceName("my-mm1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKafkaMirrorMakerResult> getKafkaMirrorMakerPlain(GetKafkaMirrorMakerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getKafkaMirrorMaker:getKafkaMirrorMaker", TypeShape.of(GetKafkaMirrorMakerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Kafka Schema data source provides information about the existing Aiven Kafka Schema.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaSchemaConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = AivenFunctions.getKafkaSchemaConfiguration(GetKafkaSchemaConfigurationArgs.builder()
     *             .project(kafka_schemas_project1.project())
     *             .serviceName(kafka_service1.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKafkaSchemaResult> getKafkaSchema(GetKafkaSchemaArgs args) {
        return getKafkaSchema(args, InvokeOptions.Empty);
    }
    /**
     * The Kafka Schema data source provides information about the existing Aiven Kafka Schema.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaSchemaConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = AivenFunctions.getKafkaSchemaConfiguration(GetKafkaSchemaConfigurationArgs.builder()
     *             .project(kafka_schemas_project1.project())
     *             .serviceName(kafka_service1.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKafkaSchemaResult> getKafkaSchemaPlain(GetKafkaSchemaPlainArgs args) {
        return getKafkaSchemaPlain(args, InvokeOptions.Empty);
    }
    /**
     * The Kafka Schema data source provides information about the existing Aiven Kafka Schema.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaSchemaConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = AivenFunctions.getKafkaSchemaConfiguration(GetKafkaSchemaConfigurationArgs.builder()
     *             .project(kafka_schemas_project1.project())
     *             .serviceName(kafka_service1.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKafkaSchemaResult> getKafkaSchema(GetKafkaSchemaArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getKafkaSchema:getKafkaSchema", TypeShape.of(GetKafkaSchemaResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Kafka Schema data source provides information about the existing Aiven Kafka Schema.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaSchemaConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = AivenFunctions.getKafkaSchemaConfiguration(GetKafkaSchemaConfigurationArgs.builder()
     *             .project(kafka_schemas_project1.project())
     *             .serviceName(kafka_service1.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKafkaSchemaResult> getKafkaSchemaPlain(GetKafkaSchemaPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getKafkaSchema:getKafkaSchema", TypeShape.of(GetKafkaSchemaResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Kafka Schema Configuration data source provides information about the existing Aiven Kafka Schema Configuration.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.KafkaSchemaConfiguration;
     * import com.pulumi.aiven.KafkaSchemaConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var config = new KafkaSchemaConfiguration("config", KafkaSchemaConfigurationArgs.builder()
     *             .project(kafka_schemas_project1.project())
     *             .serviceName(kafka_service1.serviceName())
     *             .compatibilityLevel("BACKWARD")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKafkaSchemaConfigurationResult> getKafkaSchemaConfiguration(GetKafkaSchemaConfigurationArgs args) {
        return getKafkaSchemaConfiguration(args, InvokeOptions.Empty);
    }
    /**
     * The Kafka Schema Configuration data source provides information about the existing Aiven Kafka Schema Configuration.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.KafkaSchemaConfiguration;
     * import com.pulumi.aiven.KafkaSchemaConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var config = new KafkaSchemaConfiguration("config", KafkaSchemaConfigurationArgs.builder()
     *             .project(kafka_schemas_project1.project())
     *             .serviceName(kafka_service1.serviceName())
     *             .compatibilityLevel("BACKWARD")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKafkaSchemaConfigurationResult> getKafkaSchemaConfigurationPlain(GetKafkaSchemaConfigurationPlainArgs args) {
        return getKafkaSchemaConfigurationPlain(args, InvokeOptions.Empty);
    }
    /**
     * The Kafka Schema Configuration data source provides information about the existing Aiven Kafka Schema Configuration.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.KafkaSchemaConfiguration;
     * import com.pulumi.aiven.KafkaSchemaConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var config = new KafkaSchemaConfiguration("config", KafkaSchemaConfigurationArgs.builder()
     *             .project(kafka_schemas_project1.project())
     *             .serviceName(kafka_service1.serviceName())
     *             .compatibilityLevel("BACKWARD")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKafkaSchemaConfigurationResult> getKafkaSchemaConfiguration(GetKafkaSchemaConfigurationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getKafkaSchemaConfiguration:getKafkaSchemaConfiguration", TypeShape.of(GetKafkaSchemaConfigurationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Kafka Schema Configuration data source provides information about the existing Aiven Kafka Schema Configuration.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.KafkaSchemaConfiguration;
     * import com.pulumi.aiven.KafkaSchemaConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var config = new KafkaSchemaConfiguration("config", KafkaSchemaConfigurationArgs.builder()
     *             .project(kafka_schemas_project1.project())
     *             .serviceName(kafka_service1.serviceName())
     *             .compatibilityLevel("BACKWARD")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKafkaSchemaConfigurationResult> getKafkaSchemaConfigurationPlain(GetKafkaSchemaConfigurationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getKafkaSchemaConfiguration:getKafkaSchemaConfiguration", TypeShape.of(GetKafkaSchemaConfigurationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Data Source Kafka Schema Registry ACL data source provides information about the existing Aiven Kafka Schema Registry ACL for a Kafka service.
     * 
     */
    public static Output<GetKafkaSchemaRegistryAclResult> getKafkaSchemaRegistryAcl(GetKafkaSchemaRegistryAclArgs args) {
        return getKafkaSchemaRegistryAcl(args, InvokeOptions.Empty);
    }
    /**
     * The Data Source Kafka Schema Registry ACL data source provides information about the existing Aiven Kafka Schema Registry ACL for a Kafka service.
     * 
     */
    public static CompletableFuture<GetKafkaSchemaRegistryAclResult> getKafkaSchemaRegistryAclPlain(GetKafkaSchemaRegistryAclPlainArgs args) {
        return getKafkaSchemaRegistryAclPlain(args, InvokeOptions.Empty);
    }
    /**
     * The Data Source Kafka Schema Registry ACL data source provides information about the existing Aiven Kafka Schema Registry ACL for a Kafka service.
     * 
     */
    public static Output<GetKafkaSchemaRegistryAclResult> getKafkaSchemaRegistryAcl(GetKafkaSchemaRegistryAclArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getKafkaSchemaRegistryAcl:getKafkaSchemaRegistryAcl", TypeShape.of(GetKafkaSchemaRegistryAclResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Data Source Kafka Schema Registry ACL data source provides information about the existing Aiven Kafka Schema Registry ACL for a Kafka service.
     * 
     */
    public static CompletableFuture<GetKafkaSchemaRegistryAclResult> getKafkaSchemaRegistryAclPlain(GetKafkaSchemaRegistryAclPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getKafkaSchemaRegistryAcl:getKafkaSchemaRegistryAcl", TypeShape.of(GetKafkaSchemaRegistryAclResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Apache Kafka® topic.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaTopicArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTopic = AivenFunctions.getKafkaTopic(GetKafkaTopicArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleKafka.serviceName())
     *             .topicName("example-topic")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKafkaTopicResult> getKafkaTopic(GetKafkaTopicArgs args) {
        return getKafkaTopic(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Apache Kafka® topic.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaTopicArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTopic = AivenFunctions.getKafkaTopic(GetKafkaTopicArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleKafka.serviceName())
     *             .topicName("example-topic")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKafkaTopicResult> getKafkaTopicPlain(GetKafkaTopicPlainArgs args) {
        return getKafkaTopicPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Apache Kafka® topic.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaTopicArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTopic = AivenFunctions.getKafkaTopic(GetKafkaTopicArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleKafka.serviceName())
     *             .topicName("example-topic")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKafkaTopicResult> getKafkaTopic(GetKafkaTopicArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getKafkaTopic:getKafkaTopic", TypeShape.of(GetKafkaTopicResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Apache Kafka® topic.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaTopicArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleTopic = AivenFunctions.getKafkaTopic(GetKafkaTopicArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(exampleKafka.serviceName())
     *             .topicName("example-topic")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKafkaTopicResult> getKafkaTopicPlain(GetKafkaTopicPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getKafkaTopic:getKafkaTopic", TypeShape.of(GetKafkaTopicResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Apache Kafka® service user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleServiceUser = AivenFunctions.getKafkaUser(GetKafkaUserArgs.builder()
     *             .serviceName(exampleKafka.serviceName())
     *             .project(exampleProject.project())
     *             .username("example-kafka-user")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKafkaUserResult> getKafkaUser(GetKafkaUserArgs args) {
        return getKafkaUser(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Apache Kafka® service user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleServiceUser = AivenFunctions.getKafkaUser(GetKafkaUserArgs.builder()
     *             .serviceName(exampleKafka.serviceName())
     *             .project(exampleProject.project())
     *             .username("example-kafka-user")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKafkaUserResult> getKafkaUserPlain(GetKafkaUserPlainArgs args) {
        return getKafkaUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Apache Kafka® service user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleServiceUser = AivenFunctions.getKafkaUser(GetKafkaUserArgs.builder()
     *             .serviceName(exampleKafka.serviceName())
     *             .project(exampleProject.project())
     *             .username("example-kafka-user")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKafkaUserResult> getKafkaUser(GetKafkaUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getKafkaUser:getKafkaUser", TypeShape.of(GetKafkaUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Apache Kafka® service user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetKafkaUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleServiceUser = AivenFunctions.getKafkaUser(GetKafkaUserArgs.builder()
     *             .serviceName(exampleKafka.serviceName())
     *             .project(exampleProject.project())
     *             .username("example-kafka-user")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKafkaUserResult> getKafkaUserPlain(GetKafkaUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getKafkaUser:getKafkaUser", TypeShape.of(GetKafkaUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The M3 Aggregator data source provides information about the existing Aiven M3 Aggregator.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetM3AggregatorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var m3a = AivenFunctions.getM3Aggregator(GetM3AggregatorArgs.builder()
     *             .project(foo.project())
     *             .serviceName("my-m3a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetM3AggregatorResult> getM3Aggregator(GetM3AggregatorArgs args) {
        return getM3Aggregator(args, InvokeOptions.Empty);
    }
    /**
     * The M3 Aggregator data source provides information about the existing Aiven M3 Aggregator.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetM3AggregatorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var m3a = AivenFunctions.getM3Aggregator(GetM3AggregatorArgs.builder()
     *             .project(foo.project())
     *             .serviceName("my-m3a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetM3AggregatorResult> getM3AggregatorPlain(GetM3AggregatorPlainArgs args) {
        return getM3AggregatorPlain(args, InvokeOptions.Empty);
    }
    /**
     * The M3 Aggregator data source provides information about the existing Aiven M3 Aggregator.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetM3AggregatorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var m3a = AivenFunctions.getM3Aggregator(GetM3AggregatorArgs.builder()
     *             .project(foo.project())
     *             .serviceName("my-m3a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetM3AggregatorResult> getM3Aggregator(GetM3AggregatorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getM3Aggregator:getM3Aggregator", TypeShape.of(GetM3AggregatorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The M3 Aggregator data source provides information about the existing Aiven M3 Aggregator.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetM3AggregatorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var m3a = AivenFunctions.getM3Aggregator(GetM3AggregatorArgs.builder()
     *             .project(foo.project())
     *             .serviceName("my-m3a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetM3AggregatorResult> getM3AggregatorPlain(GetM3AggregatorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getM3Aggregator:getM3Aggregator", TypeShape.of(GetM3AggregatorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for M3DB service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetM3DbArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleM3db = AivenFunctions.getM3Db(GetM3DbArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-m3db-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetM3DbResult> getM3Db(GetM3DbArgs args) {
        return getM3Db(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for M3DB service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetM3DbArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleM3db = AivenFunctions.getM3Db(GetM3DbArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-m3db-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetM3DbResult> getM3DbPlain(GetM3DbPlainArgs args) {
        return getM3DbPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for M3DB service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetM3DbArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleM3db = AivenFunctions.getM3Db(GetM3DbArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-m3db-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetM3DbResult> getM3Db(GetM3DbArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getM3Db:getM3Db", TypeShape.of(GetM3DbResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for M3DB service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetM3DbArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleM3db = AivenFunctions.getM3Db(GetM3DbArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-m3db-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetM3DbResult> getM3DbPlain(GetM3DbPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getM3Db:getM3Db", TypeShape.of(GetM3DbResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for M3DB service user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetM3dbUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleServiceUser = AivenFunctions.getM3dbUser(GetM3dbUserArgs.builder()
     *             .serviceName(exampleM3db.serviceName())
     *             .project(exampleProject.project())
     *             .username("example-m3db-user")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetM3dbUserResult> getM3dbUser(GetM3dbUserArgs args) {
        return getM3dbUser(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for M3DB service user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetM3dbUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleServiceUser = AivenFunctions.getM3dbUser(GetM3dbUserArgs.builder()
     *             .serviceName(exampleM3db.serviceName())
     *             .project(exampleProject.project())
     *             .username("example-m3db-user")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetM3dbUserResult> getM3dbUserPlain(GetM3dbUserPlainArgs args) {
        return getM3dbUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for M3DB service user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetM3dbUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleServiceUser = AivenFunctions.getM3dbUser(GetM3dbUserArgs.builder()
     *             .serviceName(exampleM3db.serviceName())
     *             .project(exampleProject.project())
     *             .username("example-m3db-user")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetM3dbUserResult> getM3dbUser(GetM3dbUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getM3dbUser:getM3dbUser", TypeShape.of(GetM3dbUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for M3DB service user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetM3dbUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleServiceUser = AivenFunctions.getM3dbUser(GetM3dbUserArgs.builder()
     *             .serviceName(exampleM3db.serviceName())
     *             .project(exampleProject.project())
     *             .username("example-m3db-user")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetM3dbUserResult> getM3dbUserPlain(GetM3dbUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getM3dbUser:getM3dbUser", TypeShape.of(GetM3dbUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The MirrorMaker 2 Replication Flow data source provides information about the existing MirrorMaker 2 Replication Flow on Aiven Cloud.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetMirrorMakerReplicationFlowArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var f1 = AivenFunctions.getMirrorMakerReplicationFlow(GetMirrorMakerReplicationFlowArgs.builder()
     *             .project(kafka_mm_project1.project())
     *             .serviceName(mm.serviceName())
     *             .sourceCluster(source.serviceName())
     *             .targetCluster(target.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMirrorMakerReplicationFlowResult> getMirrorMakerReplicationFlow(GetMirrorMakerReplicationFlowArgs args) {
        return getMirrorMakerReplicationFlow(args, InvokeOptions.Empty);
    }
    /**
     * The MirrorMaker 2 Replication Flow data source provides information about the existing MirrorMaker 2 Replication Flow on Aiven Cloud.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetMirrorMakerReplicationFlowArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var f1 = AivenFunctions.getMirrorMakerReplicationFlow(GetMirrorMakerReplicationFlowArgs.builder()
     *             .project(kafka_mm_project1.project())
     *             .serviceName(mm.serviceName())
     *             .sourceCluster(source.serviceName())
     *             .targetCluster(target.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMirrorMakerReplicationFlowResult> getMirrorMakerReplicationFlowPlain(GetMirrorMakerReplicationFlowPlainArgs args) {
        return getMirrorMakerReplicationFlowPlain(args, InvokeOptions.Empty);
    }
    /**
     * The MirrorMaker 2 Replication Flow data source provides information about the existing MirrorMaker 2 Replication Flow on Aiven Cloud.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetMirrorMakerReplicationFlowArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var f1 = AivenFunctions.getMirrorMakerReplicationFlow(GetMirrorMakerReplicationFlowArgs.builder()
     *             .project(kafka_mm_project1.project())
     *             .serviceName(mm.serviceName())
     *             .sourceCluster(source.serviceName())
     *             .targetCluster(target.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMirrorMakerReplicationFlowResult> getMirrorMakerReplicationFlow(GetMirrorMakerReplicationFlowArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getMirrorMakerReplicationFlow:getMirrorMakerReplicationFlow", TypeShape.of(GetMirrorMakerReplicationFlowResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The MirrorMaker 2 Replication Flow data source provides information about the existing MirrorMaker 2 Replication Flow on Aiven Cloud.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetMirrorMakerReplicationFlowArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var f1 = AivenFunctions.getMirrorMakerReplicationFlow(GetMirrorMakerReplicationFlowArgs.builder()
     *             .project(kafka_mm_project1.project())
     *             .serviceName(mm.serviceName())
     *             .sourceCluster(source.serviceName())
     *             .targetCluster(target.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMirrorMakerReplicationFlowResult> getMirrorMakerReplicationFlowPlain(GetMirrorMakerReplicationFlowPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getMirrorMakerReplicationFlow:getMirrorMakerReplicationFlow", TypeShape.of(GetMirrorMakerReplicationFlowResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The MySQL data source provides information about the existing Aiven MySQL service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetMySqlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var mysql1 = AivenFunctions.getMySql(GetMySqlArgs.builder()
     *             .project(foo.project())
     *             .serviceName("my-mysql1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMySqlResult> getMySql(GetMySqlArgs args) {
        return getMySql(args, InvokeOptions.Empty);
    }
    /**
     * The MySQL data source provides information about the existing Aiven MySQL service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetMySqlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var mysql1 = AivenFunctions.getMySql(GetMySqlArgs.builder()
     *             .project(foo.project())
     *             .serviceName("my-mysql1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMySqlResult> getMySqlPlain(GetMySqlPlainArgs args) {
        return getMySqlPlain(args, InvokeOptions.Empty);
    }
    /**
     * The MySQL data source provides information about the existing Aiven MySQL service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetMySqlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var mysql1 = AivenFunctions.getMySql(GetMySqlArgs.builder()
     *             .project(foo.project())
     *             .serviceName("my-mysql1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMySqlResult> getMySql(GetMySqlArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getMySql:getMySql", TypeShape.of(GetMySqlResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The MySQL data source provides information about the existing Aiven MySQL service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetMySqlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var mysql1 = AivenFunctions.getMySql(GetMySqlArgs.builder()
     *             .project(foo.project())
     *             .serviceName("my-mysql1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMySqlResult> getMySqlPlain(GetMySqlPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getMySql:getMySql", TypeShape.of(GetMySqlResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The MySQL Database data source provides information about the existing Aiven MySQL Database.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetMysqlDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var mydatabase = AivenFunctions.getMysqlDatabase(GetMysqlDatabaseArgs.builder()
     *             .project(myproject.project())
     *             .serviceName(mymysql.serviceName())
     *             .databaseName("<DATABASE_NAME>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMysqlDatabaseResult> getMysqlDatabase(GetMysqlDatabaseArgs args) {
        return getMysqlDatabase(args, InvokeOptions.Empty);
    }
    /**
     * The MySQL Database data source provides information about the existing Aiven MySQL Database.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetMysqlDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var mydatabase = AivenFunctions.getMysqlDatabase(GetMysqlDatabaseArgs.builder()
     *             .project(myproject.project())
     *             .serviceName(mymysql.serviceName())
     *             .databaseName("<DATABASE_NAME>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMysqlDatabaseResult> getMysqlDatabasePlain(GetMysqlDatabasePlainArgs args) {
        return getMysqlDatabasePlain(args, InvokeOptions.Empty);
    }
    /**
     * The MySQL Database data source provides information about the existing Aiven MySQL Database.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetMysqlDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var mydatabase = AivenFunctions.getMysqlDatabase(GetMysqlDatabaseArgs.builder()
     *             .project(myproject.project())
     *             .serviceName(mymysql.serviceName())
     *             .databaseName("<DATABASE_NAME>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMysqlDatabaseResult> getMysqlDatabase(GetMysqlDatabaseArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getMysqlDatabase:getMysqlDatabase", TypeShape.of(GetMysqlDatabaseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The MySQL Database data source provides information about the existing Aiven MySQL Database.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetMysqlDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var mydatabase = AivenFunctions.getMysqlDatabase(GetMysqlDatabaseArgs.builder()
     *             .project(myproject.project())
     *             .serviceName(mymysql.serviceName())
     *             .databaseName("<DATABASE_NAME>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMysqlDatabaseResult> getMysqlDatabasePlain(GetMysqlDatabasePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getMysqlDatabase:getMysqlDatabase", TypeShape.of(GetMysqlDatabaseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The MySQL User data source provides information about the existing Aiven MySQL User.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetMysqlUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var user = AivenFunctions.getMysqlUser(GetMysqlUserArgs.builder()
     *             .serviceName("my-service")
     *             .project("my-project")
     *             .username("user1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMysqlUserResult> getMysqlUser(GetMysqlUserArgs args) {
        return getMysqlUser(args, InvokeOptions.Empty);
    }
    /**
     * The MySQL User data source provides information about the existing Aiven MySQL User.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetMysqlUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var user = AivenFunctions.getMysqlUser(GetMysqlUserArgs.builder()
     *             .serviceName("my-service")
     *             .project("my-project")
     *             .username("user1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMysqlUserResult> getMysqlUserPlain(GetMysqlUserPlainArgs args) {
        return getMysqlUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * The MySQL User data source provides information about the existing Aiven MySQL User.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetMysqlUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var user = AivenFunctions.getMysqlUser(GetMysqlUserArgs.builder()
     *             .serviceName("my-service")
     *             .project("my-project")
     *             .username("user1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMysqlUserResult> getMysqlUser(GetMysqlUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getMysqlUser:getMysqlUser", TypeShape.of(GetMysqlUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The MySQL User data source provides information about the existing Aiven MySQL User.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetMysqlUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var user = AivenFunctions.getMysqlUser(GetMysqlUserArgs.builder()
     *             .serviceName("my-service")
     *             .project("my-project")
     *             .username("user1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMysqlUserResult> getMysqlUserPlain(GetMysqlUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getMysqlUser:getMysqlUser", TypeShape.of(GetMysqlUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The OpenSearch data source provides information about the existing Aiven OpenSearch service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOpenSearchArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var os1 = AivenFunctions.getOpenSearch(GetOpenSearchArgs.builder()
     *             .project(pr1.project())
     *             .serviceName("my-os1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOpenSearchResult> getOpenSearch(GetOpenSearchArgs args) {
        return getOpenSearch(args, InvokeOptions.Empty);
    }
    /**
     * The OpenSearch data source provides information about the existing Aiven OpenSearch service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOpenSearchArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var os1 = AivenFunctions.getOpenSearch(GetOpenSearchArgs.builder()
     *             .project(pr1.project())
     *             .serviceName("my-os1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOpenSearchResult> getOpenSearchPlain(GetOpenSearchPlainArgs args) {
        return getOpenSearchPlain(args, InvokeOptions.Empty);
    }
    /**
     * The OpenSearch data source provides information about the existing Aiven OpenSearch service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOpenSearchArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var os1 = AivenFunctions.getOpenSearch(GetOpenSearchArgs.builder()
     *             .project(pr1.project())
     *             .serviceName("my-os1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOpenSearchResult> getOpenSearch(GetOpenSearchArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getOpenSearch:getOpenSearch", TypeShape.of(GetOpenSearchResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The OpenSearch data source provides information about the existing Aiven OpenSearch service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOpenSearchArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var os1 = AivenFunctions.getOpenSearch(GetOpenSearchArgs.builder()
     *             .project(pr1.project())
     *             .serviceName("my-os1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOpenSearchResult> getOpenSearchPlain(GetOpenSearchPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getOpenSearch:getOpenSearch", TypeShape.of(GetOpenSearchResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The OpenSearch ACL Config data source provides information about an existing Aiven OpenSearch ACL Config.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOpenSearchAclConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var os-acl-config = AivenFunctions.getOpenSearchAclConfig(GetOpenSearchAclConfigArgs.builder()
     *             .project(os_project.project())
     *             .serviceName(os.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOpenSearchAclConfigResult> getOpenSearchAclConfig(GetOpenSearchAclConfigArgs args) {
        return getOpenSearchAclConfig(args, InvokeOptions.Empty);
    }
    /**
     * The OpenSearch ACL Config data source provides information about an existing Aiven OpenSearch ACL Config.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOpenSearchAclConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var os-acl-config = AivenFunctions.getOpenSearchAclConfig(GetOpenSearchAclConfigArgs.builder()
     *             .project(os_project.project())
     *             .serviceName(os.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOpenSearchAclConfigResult> getOpenSearchAclConfigPlain(GetOpenSearchAclConfigPlainArgs args) {
        return getOpenSearchAclConfigPlain(args, InvokeOptions.Empty);
    }
    /**
     * The OpenSearch ACL Config data source provides information about an existing Aiven OpenSearch ACL Config.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOpenSearchAclConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var os-acl-config = AivenFunctions.getOpenSearchAclConfig(GetOpenSearchAclConfigArgs.builder()
     *             .project(os_project.project())
     *             .serviceName(os.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOpenSearchAclConfigResult> getOpenSearchAclConfig(GetOpenSearchAclConfigArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getOpenSearchAclConfig:getOpenSearchAclConfig", TypeShape.of(GetOpenSearchAclConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The OpenSearch ACL Config data source provides information about an existing Aiven OpenSearch ACL Config.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOpenSearchAclConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var os-acl-config = AivenFunctions.getOpenSearchAclConfig(GetOpenSearchAclConfigArgs.builder()
     *             .project(os_project.project())
     *             .serviceName(os.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOpenSearchAclConfigResult> getOpenSearchAclConfigPlain(GetOpenSearchAclConfigPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getOpenSearchAclConfig:getOpenSearchAclConfig", TypeShape.of(GetOpenSearchAclConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The OpenSearch ACL Rule data source provides information about an existing Aiven OpenSearch ACL Rule.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOpenSearchAclRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var osAclRule = AivenFunctions.getOpenSearchAclRule(GetOpenSearchAclRuleArgs.builder()
     *             .project(osAclsConfig.project())
     *             .serviceName(osAclsConfig.serviceName())
     *             .username("<USERNAME>")
     *             .index("<INDEX>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOpenSearchAclRuleResult> getOpenSearchAclRule(GetOpenSearchAclRuleArgs args) {
        return getOpenSearchAclRule(args, InvokeOptions.Empty);
    }
    /**
     * The OpenSearch ACL Rule data source provides information about an existing Aiven OpenSearch ACL Rule.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOpenSearchAclRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var osAclRule = AivenFunctions.getOpenSearchAclRule(GetOpenSearchAclRuleArgs.builder()
     *             .project(osAclsConfig.project())
     *             .serviceName(osAclsConfig.serviceName())
     *             .username("<USERNAME>")
     *             .index("<INDEX>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOpenSearchAclRuleResult> getOpenSearchAclRulePlain(GetOpenSearchAclRulePlainArgs args) {
        return getOpenSearchAclRulePlain(args, InvokeOptions.Empty);
    }
    /**
     * The OpenSearch ACL Rule data source provides information about an existing Aiven OpenSearch ACL Rule.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOpenSearchAclRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var osAclRule = AivenFunctions.getOpenSearchAclRule(GetOpenSearchAclRuleArgs.builder()
     *             .project(osAclsConfig.project())
     *             .serviceName(osAclsConfig.serviceName())
     *             .username("<USERNAME>")
     *             .index("<INDEX>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOpenSearchAclRuleResult> getOpenSearchAclRule(GetOpenSearchAclRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getOpenSearchAclRule:getOpenSearchAclRule", TypeShape.of(GetOpenSearchAclRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The OpenSearch ACL Rule data source provides information about an existing Aiven OpenSearch ACL Rule.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOpenSearchAclRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var osAclRule = AivenFunctions.getOpenSearchAclRule(GetOpenSearchAclRuleArgs.builder()
     *             .project(osAclsConfig.project())
     *             .serviceName(osAclsConfig.serviceName())
     *             .username("<USERNAME>")
     *             .index("<INDEX>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOpenSearchAclRuleResult> getOpenSearchAclRulePlain(GetOpenSearchAclRulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getOpenSearchAclRule:getOpenSearchAclRule", TypeShape.of(GetOpenSearchAclRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The OpenSearch Security Plugin Config data source provides information about an existing Aiven OpenSearch Security Plugin Config.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOpensearchSecurityPluginConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var os-sec-config = AivenFunctions.getOpensearchSecurityPluginConfig(GetOpensearchSecurityPluginConfigArgs.builder()
     *             .project(os_project.project())
     *             .serviceName(os.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOpensearchSecurityPluginConfigResult> getOpensearchSecurityPluginConfig(GetOpensearchSecurityPluginConfigArgs args) {
        return getOpensearchSecurityPluginConfig(args, InvokeOptions.Empty);
    }
    /**
     * The OpenSearch Security Plugin Config data source provides information about an existing Aiven OpenSearch Security Plugin Config.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOpensearchSecurityPluginConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var os-sec-config = AivenFunctions.getOpensearchSecurityPluginConfig(GetOpensearchSecurityPluginConfigArgs.builder()
     *             .project(os_project.project())
     *             .serviceName(os.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOpensearchSecurityPluginConfigResult> getOpensearchSecurityPluginConfigPlain(GetOpensearchSecurityPluginConfigPlainArgs args) {
        return getOpensearchSecurityPluginConfigPlain(args, InvokeOptions.Empty);
    }
    /**
     * The OpenSearch Security Plugin Config data source provides information about an existing Aiven OpenSearch Security Plugin Config.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOpensearchSecurityPluginConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var os-sec-config = AivenFunctions.getOpensearchSecurityPluginConfig(GetOpensearchSecurityPluginConfigArgs.builder()
     *             .project(os_project.project())
     *             .serviceName(os.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOpensearchSecurityPluginConfigResult> getOpensearchSecurityPluginConfig(GetOpensearchSecurityPluginConfigArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getOpensearchSecurityPluginConfig:getOpensearchSecurityPluginConfig", TypeShape.of(GetOpensearchSecurityPluginConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The OpenSearch Security Plugin Config data source provides information about an existing Aiven OpenSearch Security Plugin Config.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOpensearchSecurityPluginConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var os-sec-config = AivenFunctions.getOpensearchSecurityPluginConfig(GetOpensearchSecurityPluginConfigArgs.builder()
     *             .project(os_project.project())
     *             .serviceName(os.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOpensearchSecurityPluginConfigResult> getOpensearchSecurityPluginConfigPlain(GetOpensearchSecurityPluginConfigPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getOpensearchSecurityPluginConfig:getOpensearchSecurityPluginConfig", TypeShape.of(GetOpensearchSecurityPluginConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The OpenSearch User data source provides information about the existing Aiven OpenSearch User.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOpensearchUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var user = AivenFunctions.getOpensearchUser(GetOpensearchUserArgs.builder()
     *             .serviceName("my-service")
     *             .project("my-project")
     *             .username("user1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOpensearchUserResult> getOpensearchUser(GetOpensearchUserArgs args) {
        return getOpensearchUser(args, InvokeOptions.Empty);
    }
    /**
     * The OpenSearch User data source provides information about the existing Aiven OpenSearch User.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOpensearchUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var user = AivenFunctions.getOpensearchUser(GetOpensearchUserArgs.builder()
     *             .serviceName("my-service")
     *             .project("my-project")
     *             .username("user1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOpensearchUserResult> getOpensearchUserPlain(GetOpensearchUserPlainArgs args) {
        return getOpensearchUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * The OpenSearch User data source provides information about the existing Aiven OpenSearch User.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOpensearchUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var user = AivenFunctions.getOpensearchUser(GetOpensearchUserArgs.builder()
     *             .serviceName("my-service")
     *             .project("my-project")
     *             .username("user1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOpensearchUserResult> getOpensearchUser(GetOpensearchUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getOpensearchUser:getOpensearchUser", TypeShape.of(GetOpensearchUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The OpenSearch User data source provides information about the existing Aiven OpenSearch User.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOpensearchUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var user = AivenFunctions.getOpensearchUser(GetOpensearchUserArgs.builder()
     *             .serviceName("my-service")
     *             .project("my-project")
     *             .username("user1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOpensearchUserResult> getOpensearchUserPlain(GetOpensearchUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getOpensearchUser:getOpensearchUser", TypeShape.of(GetOpensearchUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an organization.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getOrganization(GetOrganizationArgs.builder()
     *             .name("Example organization")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOrganizationResult> getOrganization() {
        return getOrganization(GetOrganizationArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about an organization.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getOrganization(GetOrganizationArgs.builder()
     *             .name("Example organization")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOrganizationResult> getOrganizationPlain() {
        return getOrganizationPlain(GetOrganizationPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about an organization.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getOrganization(GetOrganizationArgs.builder()
     *             .name("Example organization")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOrganizationResult> getOrganization(GetOrganizationArgs args) {
        return getOrganization(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an organization.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getOrganization(GetOrganizationArgs.builder()
     *             .name("Example organization")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOrganizationResult> getOrganizationPlain(GetOrganizationPlainArgs args) {
        return getOrganizationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an organization.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getOrganization(GetOrganizationArgs.builder()
     *             .name("Example organization")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOrganizationResult> getOrganization(GetOrganizationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getOrganization:getOrganization", TypeShape.of(GetOrganizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an organization.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getOrganization(GetOrganizationArgs.builder()
     *             .name("Example organization")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOrganizationResult> getOrganizationPlain(GetOrganizationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getOrganization:getOrganization", TypeShape.of(GetOrganizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an application user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOrganizationApplicationUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var tfUser = AivenFunctions.getOrganizationApplicationUser(GetOrganizationApplicationUserArgs.builder()
     *             .organizationId(main.id())
     *             .userId("u123a456b7890c")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOrganizationApplicationUserResult> getOrganizationApplicationUser(GetOrganizationApplicationUserArgs args) {
        return getOrganizationApplicationUser(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an application user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOrganizationApplicationUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var tfUser = AivenFunctions.getOrganizationApplicationUser(GetOrganizationApplicationUserArgs.builder()
     *             .organizationId(main.id())
     *             .userId("u123a456b7890c")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOrganizationApplicationUserResult> getOrganizationApplicationUserPlain(GetOrganizationApplicationUserPlainArgs args) {
        return getOrganizationApplicationUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an application user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOrganizationApplicationUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var tfUser = AivenFunctions.getOrganizationApplicationUser(GetOrganizationApplicationUserArgs.builder()
     *             .organizationId(main.id())
     *             .userId("u123a456b7890c")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOrganizationApplicationUserResult> getOrganizationApplicationUser(GetOrganizationApplicationUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getOrganizationApplicationUser:getOrganizationApplicationUser", TypeShape.of(GetOrganizationApplicationUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an application user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOrganizationApplicationUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var tfUser = AivenFunctions.getOrganizationApplicationUser(GetOrganizationApplicationUserArgs.builder()
     *             .organizationId(main.id())
     *             .userId("u123a456b7890c")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOrganizationApplicationUserResult> getOrganizationApplicationUserPlain(GetOrganizationApplicationUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getOrganizationApplicationUser:getOrganizationApplicationUser", TypeShape.of(GetOrganizationApplicationUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Organization User data source provides information about the existing Aiven Organization User.
     * 
     */
    public static Output<GetOrganizationUserResult> getOrganizationUser(GetOrganizationUserArgs args) {
        return getOrganizationUser(args, InvokeOptions.Empty);
    }
    /**
     * The Organization User data source provides information about the existing Aiven Organization User.
     * 
     */
    public static CompletableFuture<GetOrganizationUserResult> getOrganizationUserPlain(GetOrganizationUserPlainArgs args) {
        return getOrganizationUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * The Organization User data source provides information about the existing Aiven Organization User.
     * 
     */
    public static Output<GetOrganizationUserResult> getOrganizationUser(GetOrganizationUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getOrganizationUser:getOrganizationUser", TypeShape.of(GetOrganizationUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Organization User data source provides information about the existing Aiven Organization User.
     * 
     */
    public static CompletableFuture<GetOrganizationUserResult> getOrganizationUserPlain(GetOrganizationUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getOrganizationUser:getOrganizationUser", TypeShape.of(GetOrganizationUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an existing user group in an organization.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOrganizationUserGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AivenFunctions.getOrganizationUserGroup(GetOrganizationUserGroupArgs.builder()
     *             .name("Example group")
     *             .organizationId(main.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOrganizationUserGroupResult> getOrganizationUserGroup(GetOrganizationUserGroupArgs args) {
        return getOrganizationUserGroup(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an existing user group in an organization.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOrganizationUserGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AivenFunctions.getOrganizationUserGroup(GetOrganizationUserGroupArgs.builder()
     *             .name("Example group")
     *             .organizationId(main.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOrganizationUserGroupResult> getOrganizationUserGroupPlain(GetOrganizationUserGroupPlainArgs args) {
        return getOrganizationUserGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an existing user group in an organization.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOrganizationUserGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AivenFunctions.getOrganizationUserGroup(GetOrganizationUserGroupArgs.builder()
     *             .name("Example group")
     *             .organizationId(main.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOrganizationUserGroupResult> getOrganizationUserGroup(GetOrganizationUserGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getOrganizationUserGroup:getOrganizationUserGroup", TypeShape.of(GetOrganizationUserGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an existing user group in an organization.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOrganizationUserGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AivenFunctions.getOrganizationUserGroup(GetOrganizationUserGroupArgs.builder()
     *             .name("Example group")
     *             .organizationId(main.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOrganizationUserGroupResult> getOrganizationUserGroupPlain(GetOrganizationUserGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getOrganizationUserGroup:getOrganizationUserGroup", TypeShape.of(GetOrganizationUserGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an organizational unit.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOrganizationalUnitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUnit = AivenFunctions.getOrganizationalUnit(GetOrganizationalUnitArgs.builder()
     *             .name("Example organizational unit")
     *             .parentId(main.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOrganizationalUnitResult> getOrganizationalUnit(GetOrganizationalUnitArgs args) {
        return getOrganizationalUnit(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an organizational unit.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOrganizationalUnitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUnit = AivenFunctions.getOrganizationalUnit(GetOrganizationalUnitArgs.builder()
     *             .name("Example organizational unit")
     *             .parentId(main.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOrganizationalUnitResult> getOrganizationalUnitPlain(GetOrganizationalUnitPlainArgs args) {
        return getOrganizationalUnitPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an organizational unit.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOrganizationalUnitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUnit = AivenFunctions.getOrganizationalUnit(GetOrganizationalUnitArgs.builder()
     *             .name("Example organizational unit")
     *             .parentId(main.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOrganizationalUnitResult> getOrganizationalUnit(GetOrganizationalUnitArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getOrganizationalUnit:getOrganizationalUnit", TypeShape.of(GetOrganizationalUnitResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an organizational unit.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetOrganizationalUnitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUnit = AivenFunctions.getOrganizationalUnit(GetOrganizationalUnitArgs.builder()
     *             .name("Example organizational unit")
     *             .parentId(main.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOrganizationalUnitResult> getOrganizationalUnitPlain(GetOrganizationalUnitPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getOrganizationalUnit:getOrganizationalUnit", TypeShape.of(GetOrganizationalUnitResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for PostgreSQL® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetPgArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePostgres = AivenFunctions.getPg(GetPgArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-postgres-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPgResult> getPg(GetPgArgs args) {
        return getPg(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for PostgreSQL® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetPgArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePostgres = AivenFunctions.getPg(GetPgArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-postgres-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPgResult> getPgPlain(GetPgPlainArgs args) {
        return getPgPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for PostgreSQL® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetPgArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePostgres = AivenFunctions.getPg(GetPgArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-postgres-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPgResult> getPg(GetPgArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getPg:getPg", TypeShape.of(GetPgResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for PostgreSQL® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetPgArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var examplePostgres = AivenFunctions.getPg(GetPgArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-postgres-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPgResult> getPgPlain(GetPgPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getPg:getPg", TypeShape.of(GetPgResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a database in an Aiven for PostgreSQL® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetPgDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getPgDatabase(GetPgDatabaseArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(examplePostgres.serviceName())
     *             .databaseName("example-database")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPgDatabaseResult> getPgDatabase(GetPgDatabaseArgs args) {
        return getPgDatabase(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a database in an Aiven for PostgreSQL® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetPgDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getPgDatabase(GetPgDatabaseArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(examplePostgres.serviceName())
     *             .databaseName("example-database")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPgDatabaseResult> getPgDatabasePlain(GetPgDatabasePlainArgs args) {
        return getPgDatabasePlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a database in an Aiven for PostgreSQL® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetPgDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getPgDatabase(GetPgDatabaseArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(examplePostgres.serviceName())
     *             .databaseName("example-database")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPgDatabaseResult> getPgDatabase(GetPgDatabaseArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getPgDatabase:getPgDatabase", TypeShape.of(GetPgDatabaseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a database in an Aiven for PostgreSQL® service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetPgDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = AivenFunctions.getPgDatabase(GetPgDatabaseArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName(examplePostgres.serviceName())
     *             .databaseName("example-database")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPgDatabaseResult> getPgDatabasePlain(GetPgDatabasePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getPgDatabase:getPgDatabase", TypeShape.of(GetPgDatabaseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for PostgreSQL® service user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetPgUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUser = AivenFunctions.getPgUser(GetPgUserArgs.builder()
     *             .serviceName(examplePostgres.serviceName())
     *             .project(exampleProject.project())
     *             .username("example-service-user")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPgUserResult> getPgUser(GetPgUserArgs args) {
        return getPgUser(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for PostgreSQL® service user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetPgUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUser = AivenFunctions.getPgUser(GetPgUserArgs.builder()
     *             .serviceName(examplePostgres.serviceName())
     *             .project(exampleProject.project())
     *             .username("example-service-user")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPgUserResult> getPgUserPlain(GetPgUserPlainArgs args) {
        return getPgUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for PostgreSQL® service user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetPgUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUser = AivenFunctions.getPgUser(GetPgUserArgs.builder()
     *             .serviceName(examplePostgres.serviceName())
     *             .project(exampleProject.project())
     *             .username("example-service-user")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPgUserResult> getPgUser(GetPgUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getPgUser:getPgUser", TypeShape.of(GetPgUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for PostgreSQL® service user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetPgUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUser = AivenFunctions.getPgUser(GetPgUserArgs.builder()
     *             .serviceName(examplePostgres.serviceName())
     *             .project(exampleProject.project())
     *             .username("example-service-user")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPgUserResult> getPgUserPlain(GetPgUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getPgUser:getPgUser", TypeShape.of(GetPgUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven project.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleProject = AivenFunctions.getProject(GetProjectArgs.builder()
     *             .project("example-project")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetProjectResult> getProject(GetProjectArgs args) {
        return getProject(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven project.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleProject = AivenFunctions.getProject(GetProjectArgs.builder()
     *             .project("example-project")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetProjectResult> getProjectPlain(GetProjectPlainArgs args) {
        return getProjectPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven project.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleProject = AivenFunctions.getProject(GetProjectArgs.builder()
     *             .project("example-project")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetProjectResult> getProject(GetProjectArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getProject:getProject", TypeShape.of(GetProjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven project.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleProject = AivenFunctions.getProject(GetProjectArgs.builder()
     *             .project("example-project")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetProjectResult> getProjectPlain(GetProjectPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getProject:getProject", TypeShape.of(GetProjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Project User data source provides information about the existing Aiven Project User.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetProjectUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var mytestuser = AivenFunctions.getProjectUser(GetProjectUserArgs.builder()
     *             .project(myproject.project())
     *             .email("john.doe}{@literal @}{@code example.com")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetProjectUserResult> getProjectUser(GetProjectUserArgs args) {
        return getProjectUser(args, InvokeOptions.Empty);
    }
    /**
     * The Project User data source provides information about the existing Aiven Project User.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetProjectUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var mytestuser = AivenFunctions.getProjectUser(GetProjectUserArgs.builder()
     *             .project(myproject.project())
     *             .email("john.doe}{@literal @}{@code example.com")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetProjectUserResult> getProjectUserPlain(GetProjectUserPlainArgs args) {
        return getProjectUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * The Project User data source provides information about the existing Aiven Project User.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetProjectUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var mytestuser = AivenFunctions.getProjectUser(GetProjectUserArgs.builder()
     *             .project(myproject.project())
     *             .email("john.doe}{@literal @}{@code example.com")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetProjectUserResult> getProjectUser(GetProjectUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getProjectUser:getProjectUser", TypeShape.of(GetProjectUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Project User data source provides information about the existing Aiven Project User.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetProjectUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var mytestuser = AivenFunctions.getProjectUser(GetProjectUserArgs.builder()
     *             .project(myproject.project())
     *             .email("john.doe}{@literal @}{@code example.com")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetProjectUserResult> getProjectUserPlain(GetProjectUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getProjectUser:getProjectUser", TypeShape.of(GetProjectUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about the VPC for an Aiven project.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetProjectVpcArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleVpc = AivenFunctions.getProjectVpc(GetProjectVpcArgs.builder()
     *             .project(exampleProject.project())
     *             .cloudName("google-europe-west1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetProjectVpcResult> getProjectVpc() {
        return getProjectVpc(GetProjectVpcArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about the VPC for an Aiven project.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetProjectVpcArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleVpc = AivenFunctions.getProjectVpc(GetProjectVpcArgs.builder()
     *             .project(exampleProject.project())
     *             .cloudName("google-europe-west1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetProjectVpcResult> getProjectVpcPlain() {
        return getProjectVpcPlain(GetProjectVpcPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about the VPC for an Aiven project.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetProjectVpcArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleVpc = AivenFunctions.getProjectVpc(GetProjectVpcArgs.builder()
     *             .project(exampleProject.project())
     *             .cloudName("google-europe-west1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetProjectVpcResult> getProjectVpc(GetProjectVpcArgs args) {
        return getProjectVpc(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about the VPC for an Aiven project.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetProjectVpcArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleVpc = AivenFunctions.getProjectVpc(GetProjectVpcArgs.builder()
     *             .project(exampleProject.project())
     *             .cloudName("google-europe-west1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetProjectVpcResult> getProjectVpcPlain(GetProjectVpcPlainArgs args) {
        return getProjectVpcPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about the VPC for an Aiven project.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetProjectVpcArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleVpc = AivenFunctions.getProjectVpc(GetProjectVpcArgs.builder()
     *             .project(exampleProject.project())
     *             .cloudName("google-europe-west1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetProjectVpcResult> getProjectVpc(GetProjectVpcArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getProjectVpc:getProjectVpc", TypeShape.of(GetProjectVpcResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about the VPC for an Aiven project.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetProjectVpcArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleVpc = AivenFunctions.getProjectVpc(GetProjectVpcArgs.builder()
     *             .project(exampleProject.project())
     *             .cloudName("google-europe-west1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetProjectVpcResult> getProjectVpcPlain(GetProjectVpcPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getProjectVpc:getProjectVpc", TypeShape.of(GetProjectVpcResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Redis data source provides information about the existing Aiven Redis service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetRedisArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var redis1 = AivenFunctions.getRedis(GetRedisArgs.builder()
     *             .project(pr1.project())
     *             .serviceName("my-redis1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRedisResult> getRedis(GetRedisArgs args) {
        return getRedis(args, InvokeOptions.Empty);
    }
    /**
     * The Redis data source provides information about the existing Aiven Redis service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetRedisArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var redis1 = AivenFunctions.getRedis(GetRedisArgs.builder()
     *             .project(pr1.project())
     *             .serviceName("my-redis1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRedisResult> getRedisPlain(GetRedisPlainArgs args) {
        return getRedisPlain(args, InvokeOptions.Empty);
    }
    /**
     * The Redis data source provides information about the existing Aiven Redis service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetRedisArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var redis1 = AivenFunctions.getRedis(GetRedisArgs.builder()
     *             .project(pr1.project())
     *             .serviceName("my-redis1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRedisResult> getRedis(GetRedisArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getRedis:getRedis", TypeShape.of(GetRedisResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Redis data source provides information about the existing Aiven Redis service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetRedisArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var redis1 = AivenFunctions.getRedis(GetRedisArgs.builder()
     *             .project(pr1.project())
     *             .serviceName("my-redis1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRedisResult> getRedisPlain(GetRedisPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getRedis:getRedis", TypeShape.of(GetRedisResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Redis User data source provides information about the existing Aiven Redis User.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetRedisUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var user = AivenFunctions.getRedisUser(GetRedisUserArgs.builder()
     *             .serviceName("my-service")
     *             .project("my-project")
     *             .username("user1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRedisUserResult> getRedisUser(GetRedisUserArgs args) {
        return getRedisUser(args, InvokeOptions.Empty);
    }
    /**
     * The Redis User data source provides information about the existing Aiven Redis User.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetRedisUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var user = AivenFunctions.getRedisUser(GetRedisUserArgs.builder()
     *             .serviceName("my-service")
     *             .project("my-project")
     *             .username("user1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRedisUserResult> getRedisUserPlain(GetRedisUserPlainArgs args) {
        return getRedisUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * The Redis User data source provides information about the existing Aiven Redis User.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetRedisUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var user = AivenFunctions.getRedisUser(GetRedisUserArgs.builder()
     *             .serviceName("my-service")
     *             .project("my-project")
     *             .username("user1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRedisUserResult> getRedisUser(GetRedisUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getRedisUser:getRedisUser", TypeShape.of(GetRedisUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Redis User data source provides information about the existing Aiven Redis User.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetRedisUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var user = AivenFunctions.getRedisUser(GetRedisUserArgs.builder()
     *             .serviceName("my-service")
     *             .project("my-project")
     *             .username("user1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRedisUserResult> getRedisUserPlain(GetRedisUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getRedisUser:getRedisUser", TypeShape.of(GetRedisUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Service Component data source provides information about the existing Aiven service Component.
     * 
     * Service components can be defined to get the connection info for specific service. Services may support multiple different access routes (VPC peering and public access), have additional components or support various authentication methods. Each of these may be represented by different DNS name or TCP port and the specific component to match can be selected by specifying appropriate filters as shown below.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetServiceComponentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var sc1 = AivenFunctions.getServiceComponent(GetServiceComponentArgs.builder()
     *             .project(project1.project())
     *             .serviceName(service1.serviceName())
     *             .component("kafka")
     *             .route("dynamic")
     *             .kafkaAuthenticationMethod("certificate")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceComponentResult> getServiceComponent(GetServiceComponentArgs args) {
        return getServiceComponent(args, InvokeOptions.Empty);
    }
    /**
     * The Service Component data source provides information about the existing Aiven service Component.
     * 
     * Service components can be defined to get the connection info for specific service. Services may support multiple different access routes (VPC peering and public access), have additional components or support various authentication methods. Each of these may be represented by different DNS name or TCP port and the specific component to match can be selected by specifying appropriate filters as shown below.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetServiceComponentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var sc1 = AivenFunctions.getServiceComponent(GetServiceComponentArgs.builder()
     *             .project(project1.project())
     *             .serviceName(service1.serviceName())
     *             .component("kafka")
     *             .route("dynamic")
     *             .kafkaAuthenticationMethod("certificate")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceComponentResult> getServiceComponentPlain(GetServiceComponentPlainArgs args) {
        return getServiceComponentPlain(args, InvokeOptions.Empty);
    }
    /**
     * The Service Component data source provides information about the existing Aiven service Component.
     * 
     * Service components can be defined to get the connection info for specific service. Services may support multiple different access routes (VPC peering and public access), have additional components or support various authentication methods. Each of these may be represented by different DNS name or TCP port and the specific component to match can be selected by specifying appropriate filters as shown below.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetServiceComponentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var sc1 = AivenFunctions.getServiceComponent(GetServiceComponentArgs.builder()
     *             .project(project1.project())
     *             .serviceName(service1.serviceName())
     *             .component("kafka")
     *             .route("dynamic")
     *             .kafkaAuthenticationMethod("certificate")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceComponentResult> getServiceComponent(GetServiceComponentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getServiceComponent:getServiceComponent", TypeShape.of(GetServiceComponentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Service Component data source provides information about the existing Aiven service Component.
     * 
     * Service components can be defined to get the connection info for specific service. Services may support multiple different access routes (VPC peering and public access), have additional components or support various authentication methods. Each of these may be represented by different DNS name or TCP port and the specific component to match can be selected by specifying appropriate filters as shown below.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetServiceComponentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var sc1 = AivenFunctions.getServiceComponent(GetServiceComponentArgs.builder()
     *             .project(project1.project())
     *             .serviceName(service1.serviceName())
     *             .component("kafka")
     *             .route("dynamic")
     *             .kafkaAuthenticationMethod("certificate")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceComponentResult> getServiceComponentPlain(GetServiceComponentPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getServiceComponent:getServiceComponent", TypeShape.of(GetServiceComponentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven service integration.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetServiceIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleIntegration = AivenFunctions.getServiceIntegration(GetServiceIntegrationArgs.builder()
     *             .project(exampleProject.project())
     *             .destinationServiceName(exampleM3db.serviceName())
     *             .integrationType("metrics")
     *             .sourceServiceName(exampleKafka.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceIntegrationResult> getServiceIntegration(GetServiceIntegrationArgs args) {
        return getServiceIntegration(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven service integration.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetServiceIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleIntegration = AivenFunctions.getServiceIntegration(GetServiceIntegrationArgs.builder()
     *             .project(exampleProject.project())
     *             .destinationServiceName(exampleM3db.serviceName())
     *             .integrationType("metrics")
     *             .sourceServiceName(exampleKafka.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceIntegrationResult> getServiceIntegrationPlain(GetServiceIntegrationPlainArgs args) {
        return getServiceIntegrationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven service integration.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetServiceIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleIntegration = AivenFunctions.getServiceIntegration(GetServiceIntegrationArgs.builder()
     *             .project(exampleProject.project())
     *             .destinationServiceName(exampleM3db.serviceName())
     *             .integrationType("metrics")
     *             .sourceServiceName(exampleKafka.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceIntegrationResult> getServiceIntegration(GetServiceIntegrationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getServiceIntegration:getServiceIntegration", TypeShape.of(GetServiceIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven service integration.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetServiceIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleIntegration = AivenFunctions.getServiceIntegration(GetServiceIntegrationArgs.builder()
     *             .project(exampleProject.project())
     *             .destinationServiceName(exampleM3db.serviceName())
     *             .integrationType("metrics")
     *             .sourceServiceName(exampleKafka.serviceName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceIntegrationResult> getServiceIntegrationPlain(GetServiceIntegrationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getServiceIntegration:getServiceIntegration", TypeShape.of(GetServiceIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Service Integration Endpoint data source provides information about the existing Aiven Service Integration Endpoint.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetServiceIntegrationEndpointArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myendpoint = AivenFunctions.getServiceIntegrationEndpoint(GetServiceIntegrationEndpointArgs.builder()
     *             .project(myproject.project())
     *             .endpointName("<ENDPOINT_NAME>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceIntegrationEndpointResult> getServiceIntegrationEndpoint(GetServiceIntegrationEndpointArgs args) {
        return getServiceIntegrationEndpoint(args, InvokeOptions.Empty);
    }
    /**
     * The Service Integration Endpoint data source provides information about the existing Aiven Service Integration Endpoint.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetServiceIntegrationEndpointArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myendpoint = AivenFunctions.getServiceIntegrationEndpoint(GetServiceIntegrationEndpointArgs.builder()
     *             .project(myproject.project())
     *             .endpointName("<ENDPOINT_NAME>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceIntegrationEndpointResult> getServiceIntegrationEndpointPlain(GetServiceIntegrationEndpointPlainArgs args) {
        return getServiceIntegrationEndpointPlain(args, InvokeOptions.Empty);
    }
    /**
     * The Service Integration Endpoint data source provides information about the existing Aiven Service Integration Endpoint.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetServiceIntegrationEndpointArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myendpoint = AivenFunctions.getServiceIntegrationEndpoint(GetServiceIntegrationEndpointArgs.builder()
     *             .project(myproject.project())
     *             .endpointName("<ENDPOINT_NAME>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceIntegrationEndpointResult> getServiceIntegrationEndpoint(GetServiceIntegrationEndpointArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getServiceIntegrationEndpoint:getServiceIntegrationEndpoint", TypeShape.of(GetServiceIntegrationEndpointResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Service Integration Endpoint data source provides information about the existing Aiven Service Integration Endpoint.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetServiceIntegrationEndpointArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myendpoint = AivenFunctions.getServiceIntegrationEndpoint(GetServiceIntegrationEndpointArgs.builder()
     *             .project(myproject.project())
     *             .endpointName("<ENDPOINT_NAME>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceIntegrationEndpointResult> getServiceIntegrationEndpointPlain(GetServiceIntegrationEndpointPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getServiceIntegrationEndpoint:getServiceIntegrationEndpoint", TypeShape.of(GetServiceIntegrationEndpointResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Thanos® service.
     * 
     */
    public static Output<GetThanosResult> getThanos(GetThanosArgs args) {
        return getThanos(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Thanos® service.
     * 
     */
    public static CompletableFuture<GetThanosResult> getThanosPlain(GetThanosPlainArgs args) {
        return getThanosPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Thanos® service.
     * 
     */
    public static Output<GetThanosResult> getThanos(GetThanosArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getThanos:getThanos", TypeShape.of(GetThanosResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Thanos® service.
     * 
     */
    public static CompletableFuture<GetThanosResult> getThanosPlain(GetThanosPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getThanos:getThanos", TypeShape.of(GetThanosResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Transit Gateway VPC Attachment resource allows the creation and management Transit Gateway VPC Attachment VPC peering connection between Aiven and AWS.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetTransitGatewayVpcAttachmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var attachment = AivenFunctions.getTransitGatewayVpcAttachment(GetTransitGatewayVpcAttachmentArgs.builder()
     *             .vpcId(bar.id())
     *             .peerCloudAccount("<PEER_ACCOUNT_ID>")
     *             .peerVpc("google-project1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTransitGatewayVpcAttachmentResult> getTransitGatewayVpcAttachment(GetTransitGatewayVpcAttachmentArgs args) {
        return getTransitGatewayVpcAttachment(args, InvokeOptions.Empty);
    }
    /**
     * The Transit Gateway VPC Attachment resource allows the creation and management Transit Gateway VPC Attachment VPC peering connection between Aiven and AWS.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetTransitGatewayVpcAttachmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var attachment = AivenFunctions.getTransitGatewayVpcAttachment(GetTransitGatewayVpcAttachmentArgs.builder()
     *             .vpcId(bar.id())
     *             .peerCloudAccount("<PEER_ACCOUNT_ID>")
     *             .peerVpc("google-project1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTransitGatewayVpcAttachmentResult> getTransitGatewayVpcAttachmentPlain(GetTransitGatewayVpcAttachmentPlainArgs args) {
        return getTransitGatewayVpcAttachmentPlain(args, InvokeOptions.Empty);
    }
    /**
     * The Transit Gateway VPC Attachment resource allows the creation and management Transit Gateway VPC Attachment VPC peering connection between Aiven and AWS.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetTransitGatewayVpcAttachmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var attachment = AivenFunctions.getTransitGatewayVpcAttachment(GetTransitGatewayVpcAttachmentArgs.builder()
     *             .vpcId(bar.id())
     *             .peerCloudAccount("<PEER_ACCOUNT_ID>")
     *             .peerVpc("google-project1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTransitGatewayVpcAttachmentResult> getTransitGatewayVpcAttachment(GetTransitGatewayVpcAttachmentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getTransitGatewayVpcAttachment:getTransitGatewayVpcAttachment", TypeShape.of(GetTransitGatewayVpcAttachmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Transit Gateway VPC Attachment resource allows the creation and management Transit Gateway VPC Attachment VPC peering connection between Aiven and AWS.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetTransitGatewayVpcAttachmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var attachment = AivenFunctions.getTransitGatewayVpcAttachment(GetTransitGatewayVpcAttachmentArgs.builder()
     *             .vpcId(bar.id())
     *             .peerCloudAccount("<PEER_ACCOUNT_ID>")
     *             .peerVpc("google-project1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTransitGatewayVpcAttachmentResult> getTransitGatewayVpcAttachmentPlain(GetTransitGatewayVpcAttachmentPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getTransitGatewayVpcAttachment:getTransitGatewayVpcAttachment", TypeShape.of(GetTransitGatewayVpcAttachmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Valkey service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetValkeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleValkey = AivenFunctions.getValkey(GetValkeyArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-valkey-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetValkeyResult> getValkey(GetValkeyArgs args) {
        return getValkey(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Valkey service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetValkeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleValkey = AivenFunctions.getValkey(GetValkeyArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-valkey-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetValkeyResult> getValkeyPlain(GetValkeyPlainArgs args) {
        return getValkeyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an Aiven for Valkey service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetValkeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleValkey = AivenFunctions.getValkey(GetValkeyArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-valkey-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetValkeyResult> getValkey(GetValkeyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getValkey:getValkey", TypeShape.of(GetValkeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an Aiven for Valkey service.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aiven.AivenFunctions;
     * import com.pulumi.aiven.inputs.GetValkeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleValkey = AivenFunctions.getValkey(GetValkeyArgs.builder()
     *             .project(exampleProject.project())
     *             .serviceName("example-valkey-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetValkeyResult> getValkeyPlain(GetValkeyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getValkey:getValkey", TypeShape.of(GetValkeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Valkey User data source provides information about the existing Aiven for Valkey user.
     * 
     */
    public static Output<GetValkeyUserResult> getValkeyUser(GetValkeyUserArgs args) {
        return getValkeyUser(args, InvokeOptions.Empty);
    }
    /**
     * The Valkey User data source provides information about the existing Aiven for Valkey user.
     * 
     */
    public static CompletableFuture<GetValkeyUserResult> getValkeyUserPlain(GetValkeyUserPlainArgs args) {
        return getValkeyUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * The Valkey User data source provides information about the existing Aiven for Valkey user.
     * 
     */
    public static Output<GetValkeyUserResult> getValkeyUser(GetValkeyUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aiven:index/getValkeyUser:getValkeyUser", TypeShape.of(GetValkeyUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Valkey User data source provides information about the existing Aiven for Valkey user.
     * 
     */
    public static CompletableFuture<GetValkeyUserResult> getValkeyUserPlain(GetValkeyUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aiven:index/getValkeyUser:getValkeyUser", TypeShape.of(GetValkeyUserResult.class), args, Utilities.withVersion(options));
    }
}
