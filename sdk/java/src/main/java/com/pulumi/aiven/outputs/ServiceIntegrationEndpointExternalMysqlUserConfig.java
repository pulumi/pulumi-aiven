// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceIntegrationEndpointExternalMysqlUserConfig {
    /**
     * @return Hostname or IP address of the server. Example: `my.server.com`.
     * 
     */
    private String host;
    /**
     * @return Password. Example: `jjKk45Nnd`.
     * 
     */
    private String password;
    /**
     * @return Port number of the server. Example: `5432`.
     * 
     */
    private Integer port;
    /**
     * @return Enum: `verify-full`. SSL Mode. Default: `verify-full`.
     * 
     */
    private @Nullable String sslMode;
    /**
     * @return SSL Root Cert. Example: `-----BEGIN CERTIFICATE-----
     * ...
     * -----END CERTIFICATE-----
     * `.
     * 
     */
    private @Nullable String sslRootCert;
    /**
     * @return User name. Example: `myname`.
     * 
     */
    private String username;

    private ServiceIntegrationEndpointExternalMysqlUserConfig() {}
    /**
     * @return Hostname or IP address of the server. Example: `my.server.com`.
     * 
     */
    public String host() {
        return this.host;
    }
    /**
     * @return Password. Example: `jjKk45Nnd`.
     * 
     */
    public String password() {
        return this.password;
    }
    /**
     * @return Port number of the server. Example: `5432`.
     * 
     */
    public Integer port() {
        return this.port;
    }
    /**
     * @return Enum: `verify-full`. SSL Mode. Default: `verify-full`.
     * 
     */
    public Optional<String> sslMode() {
        return Optional.ofNullable(this.sslMode);
    }
    /**
     * @return SSL Root Cert. Example: `-----BEGIN CERTIFICATE-----
     * ...
     * -----END CERTIFICATE-----
     * `.
     * 
     */
    public Optional<String> sslRootCert() {
        return Optional.ofNullable(this.sslRootCert);
    }
    /**
     * @return User name. Example: `myname`.
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceIntegrationEndpointExternalMysqlUserConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String host;
        private String password;
        private Integer port;
        private @Nullable String sslMode;
        private @Nullable String sslRootCert;
        private String username;
        public Builder() {}
        public Builder(ServiceIntegrationEndpointExternalMysqlUserConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.host = defaults.host;
    	      this.password = defaults.password;
    	      this.port = defaults.port;
    	      this.sslMode = defaults.sslMode;
    	      this.sslRootCert = defaults.sslRootCert;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder host(String host) {
            if (host == null) {
              throw new MissingRequiredPropertyException("ServiceIntegrationEndpointExternalMysqlUserConfig", "host");
            }
            this.host = host;
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            if (password == null) {
              throw new MissingRequiredPropertyException("ServiceIntegrationEndpointExternalMysqlUserConfig", "password");
            }
            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("ServiceIntegrationEndpointExternalMysqlUserConfig", "port");
            }
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder sslMode(@Nullable String sslMode) {

            this.sslMode = sslMode;
            return this;
        }
        @CustomType.Setter
        public Builder sslRootCert(@Nullable String sslRootCert) {

            this.sslRootCert = sslRootCert;
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            if (username == null) {
              throw new MissingRequiredPropertyException("ServiceIntegrationEndpointExternalMysqlUserConfig", "username");
            }
            this.username = username;
            return this;
        }
        public ServiceIntegrationEndpointExternalMysqlUserConfig build() {
            final var _resultValue = new ServiceIntegrationEndpointExternalMysqlUserConfig();
            _resultValue.host = host;
            _resultValue.password = password;
            _resultValue.port = port;
            _resultValue.sslMode = sslMode;
            _resultValue.sslRootCert = sslRootCert;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}
