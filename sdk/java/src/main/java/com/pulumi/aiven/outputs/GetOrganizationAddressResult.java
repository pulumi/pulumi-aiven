// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetOrganizationAddressResult {
    /**
     * @return ID of the address.
     * 
     */
    private String addressId;
    /**
     * @return Array of address lines.
     * 
     */
    private List<String> addressLines;
    /**
     * @return City name.
     * 
     */
    private String city;
    /**
     * @return Name of the company.
     * 
     */
    private String companyName;
    /**
     * @return Country code.
     * 
     */
    private String countryCode;
    /**
     * @return Timestamp of the creation.
     * 
     */
    private String createTime;
    /**
     * @return Resource ID, a composite of organization*id and address*id.
     * 
     */
    private String id;
    /**
     * @return ID of organization.
     * 
     */
    private String organizationId;
    /**
     * @return State name.
     * 
     */
    private String state;
    /**
     * @return Timestamp of the last update.
     * 
     */
    private String updateTime;
    /**
     * @return Zip code.
     * 
     */
    private String zipCode;

    private GetOrganizationAddressResult() {}
    /**
     * @return ID of the address.
     * 
     */
    public String addressId() {
        return this.addressId;
    }
    /**
     * @return Array of address lines.
     * 
     */
    public List<String> addressLines() {
        return this.addressLines;
    }
    /**
     * @return City name.
     * 
     */
    public String city() {
        return this.city;
    }
    /**
     * @return Name of the company.
     * 
     */
    public String companyName() {
        return this.companyName;
    }
    /**
     * @return Country code.
     * 
     */
    public String countryCode() {
        return this.countryCode;
    }
    /**
     * @return Timestamp of the creation.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Resource ID, a composite of organization*id and address*id.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return ID of organization.
     * 
     */
    public String organizationId() {
        return this.organizationId;
    }
    /**
     * @return State name.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Timestamp of the last update.
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }
    /**
     * @return Zip code.
     * 
     */
    public String zipCode() {
        return this.zipCode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOrganizationAddressResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String addressId;
        private List<String> addressLines;
        private String city;
        private String companyName;
        private String countryCode;
        private String createTime;
        private String id;
        private String organizationId;
        private String state;
        private String updateTime;
        private String zipCode;
        public Builder() {}
        public Builder(GetOrganizationAddressResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressId = defaults.addressId;
    	      this.addressLines = defaults.addressLines;
    	      this.city = defaults.city;
    	      this.companyName = defaults.companyName;
    	      this.countryCode = defaults.countryCode;
    	      this.createTime = defaults.createTime;
    	      this.id = defaults.id;
    	      this.organizationId = defaults.organizationId;
    	      this.state = defaults.state;
    	      this.updateTime = defaults.updateTime;
    	      this.zipCode = defaults.zipCode;
        }

        @CustomType.Setter
        public Builder addressId(String addressId) {
            if (addressId == null) {
              throw new MissingRequiredPropertyException("GetOrganizationAddressResult", "addressId");
            }
            this.addressId = addressId;
            return this;
        }
        @CustomType.Setter
        public Builder addressLines(List<String> addressLines) {
            if (addressLines == null) {
              throw new MissingRequiredPropertyException("GetOrganizationAddressResult", "addressLines");
            }
            this.addressLines = addressLines;
            return this;
        }
        public Builder addressLines(String... addressLines) {
            return addressLines(List.of(addressLines));
        }
        @CustomType.Setter
        public Builder city(String city) {
            if (city == null) {
              throw new MissingRequiredPropertyException("GetOrganizationAddressResult", "city");
            }
            this.city = city;
            return this;
        }
        @CustomType.Setter
        public Builder companyName(String companyName) {
            if (companyName == null) {
              throw new MissingRequiredPropertyException("GetOrganizationAddressResult", "companyName");
            }
            this.companyName = companyName;
            return this;
        }
        @CustomType.Setter
        public Builder countryCode(String countryCode) {
            if (countryCode == null) {
              throw new MissingRequiredPropertyException("GetOrganizationAddressResult", "countryCode");
            }
            this.countryCode = countryCode;
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetOrganizationAddressResult", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetOrganizationAddressResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder organizationId(String organizationId) {
            if (organizationId == null) {
              throw new MissingRequiredPropertyException("GetOrganizationAddressResult", "organizationId");
            }
            this.organizationId = organizationId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetOrganizationAddressResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            if (updateTime == null) {
              throw new MissingRequiredPropertyException("GetOrganizationAddressResult", "updateTime");
            }
            this.updateTime = updateTime;
            return this;
        }
        @CustomType.Setter
        public Builder zipCode(String zipCode) {
            if (zipCode == null) {
              throw new MissingRequiredPropertyException("GetOrganizationAddressResult", "zipCode");
            }
            this.zipCode = zipCode;
            return this;
        }
        public GetOrganizationAddressResult build() {
            final var _resultValue = new GetOrganizationAddressResult();
            _resultValue.addressId = addressId;
            _resultValue.addressLines = addressLines;
            _resultValue.city = city;
            _resultValue.companyName = companyName;
            _resultValue.countryCode = countryCode;
            _resultValue.createTime = createTime;
            _resultValue.id = id;
            _resultValue.organizationId = organizationId;
            _resultValue.state = state;
            _resultValue.updateTime = updateTime;
            _resultValue.zipCode = zipCode;
            return _resultValue;
        }
    }
}
