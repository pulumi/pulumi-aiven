// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ServiceIntegrationEndpointExternalAwsS3UserConfig {
    /**
     * @return Access Key Id. Example: `AAAAAAAAAAAAAAAAAAA`.
     * 
     */
    private String accessKeyId;
    /**
     * @return Secret Access Key. Example: `AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA`.
     * 
     */
    private String secretAccessKey;
    /**
     * @return S3-compatible bucket URL. Example: `https://mybucket.s3-myregion.amazonaws.com/mydataset/`.
     * 
     */
    private String url;

    private ServiceIntegrationEndpointExternalAwsS3UserConfig() {}
    /**
     * @return Access Key Id. Example: `AAAAAAAAAAAAAAAAAAA`.
     * 
     */
    public String accessKeyId() {
        return this.accessKeyId;
    }
    /**
     * @return Secret Access Key. Example: `AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA`.
     * 
     */
    public String secretAccessKey() {
        return this.secretAccessKey;
    }
    /**
     * @return S3-compatible bucket URL. Example: `https://mybucket.s3-myregion.amazonaws.com/mydataset/`.
     * 
     */
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceIntegrationEndpointExternalAwsS3UserConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessKeyId;
        private String secretAccessKey;
        private String url;
        public Builder() {}
        public Builder(ServiceIntegrationEndpointExternalAwsS3UserConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessKeyId = defaults.accessKeyId;
    	      this.secretAccessKey = defaults.secretAccessKey;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder accessKeyId(String accessKeyId) {
            if (accessKeyId == null) {
              throw new MissingRequiredPropertyException("ServiceIntegrationEndpointExternalAwsS3UserConfig", "accessKeyId");
            }
            this.accessKeyId = accessKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder secretAccessKey(String secretAccessKey) {
            if (secretAccessKey == null) {
              throw new MissingRequiredPropertyException("ServiceIntegrationEndpointExternalAwsS3UserConfig", "secretAccessKey");
            }
            this.secretAccessKey = secretAccessKey;
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            if (url == null) {
              throw new MissingRequiredPropertyException("ServiceIntegrationEndpointExternalAwsS3UserConfig", "url");
            }
            this.url = url;
            return this;
        }
        public ServiceIntegrationEndpointExternalAwsS3UserConfig build() {
            final var _resultValue = new ServiceIntegrationEndpointExternalAwsS3UserConfig();
            _resultValue.accessKeyId = accessKeyId;
            _resultValue.secretAccessKey = secretAccessKey;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
