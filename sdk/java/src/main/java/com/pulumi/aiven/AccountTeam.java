// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.aiven.AccountTeamArgs;
import com.pulumi.aiven.Utilities;
import com.pulumi.aiven.inputs.AccountTeamState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Creates and manages a team.
 * 
 * &gt; **Teams are becoming groups**
 * Groups are an easier way to control access to your organization&#39;s projects and
 * services for a group of users.
 * Migrate your teams to groups.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aiven.AccountTeam;
 * import com.pulumi.aiven.AccountTeamArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleTeam = new AccountTeam("exampleTeam", AccountTeamArgs.builder()
 *             .accountId(ACCOUNT_RESOURCE_NAME.accountId())
 *             .name("Example team")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import aiven:index/accountTeam:AccountTeam account_team1 account_id/team_id
 * ```
 * 
 */
@ResourceType(type="aiven:index/accountTeam:AccountTeam")
public class AccountTeam extends com.pulumi.resources.CustomResource {
    /**
     * The unique account id
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return The unique account id
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * Time of creation
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return Time of creation
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The account team name
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The account team name
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The auto-generated unique account team id
     * 
     */
    @Export(name="teamId", refs={String.class}, tree="[0]")
    private Output<String> teamId;

    /**
     * @return The auto-generated unique account team id
     * 
     */
    public Output<String> teamId() {
        return this.teamId;
    }
    /**
     * Time of last update
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return Time of last update
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AccountTeam(String name) {
        this(name, AccountTeamArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AccountTeam(String name, AccountTeamArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AccountTeam(String name, AccountTeamArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aiven:index/accountTeam:AccountTeam", name, args == null ? AccountTeamArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AccountTeam(String name, Output<String> id, @Nullable AccountTeamState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aiven:index/accountTeam:AccountTeam", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AccountTeam get(String name, Output<String> id, @Nullable AccountTeamState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AccountTeam(name, id, state, options);
    }
}
