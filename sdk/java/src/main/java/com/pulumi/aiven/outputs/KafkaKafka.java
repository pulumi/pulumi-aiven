// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class KafkaKafka {
    /**
     * @return The Kafka client certificate
     * 
     */
    private @Nullable String accessCert;
    /**
     * @return The Kafka client certificate key
     * 
     */
    private @Nullable String accessKey;
    /**
     * @return The Kafka Connect URI, if any
     * 
     */
    private @Nullable String connectUri;
    /**
     * @return The Kafka REST URI, if any
     * 
     */
    private @Nullable String restUri;
    /**
     * @return The Schema Registry URI, if any
     * 
     */
    private @Nullable String schemaRegistryUri;

    private KafkaKafka() {}
    /**
     * @return The Kafka client certificate
     * 
     */
    public Optional<String> accessCert() {
        return Optional.ofNullable(this.accessCert);
    }
    /**
     * @return The Kafka client certificate key
     * 
     */
    public Optional<String> accessKey() {
        return Optional.ofNullable(this.accessKey);
    }
    /**
     * @return The Kafka Connect URI, if any
     * 
     */
    public Optional<String> connectUri() {
        return Optional.ofNullable(this.connectUri);
    }
    /**
     * @return The Kafka REST URI, if any
     * 
     */
    public Optional<String> restUri() {
        return Optional.ofNullable(this.restUri);
    }
    /**
     * @return The Schema Registry URI, if any
     * 
     */
    public Optional<String> schemaRegistryUri() {
        return Optional.ofNullable(this.schemaRegistryUri);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KafkaKafka defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accessCert;
        private @Nullable String accessKey;
        private @Nullable String connectUri;
        private @Nullable String restUri;
        private @Nullable String schemaRegistryUri;
        public Builder() {}
        public Builder(KafkaKafka defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessCert = defaults.accessCert;
    	      this.accessKey = defaults.accessKey;
    	      this.connectUri = defaults.connectUri;
    	      this.restUri = defaults.restUri;
    	      this.schemaRegistryUri = defaults.schemaRegistryUri;
        }

        @CustomType.Setter
        public Builder accessCert(@Nullable String accessCert) {

            this.accessCert = accessCert;
            return this;
        }
        @CustomType.Setter
        public Builder accessKey(@Nullable String accessKey) {

            this.accessKey = accessKey;
            return this;
        }
        @CustomType.Setter
        public Builder connectUri(@Nullable String connectUri) {

            this.connectUri = connectUri;
            return this;
        }
        @CustomType.Setter
        public Builder restUri(@Nullable String restUri) {

            this.restUri = restUri;
            return this;
        }
        @CustomType.Setter
        public Builder schemaRegistryUri(@Nullable String schemaRegistryUri) {

            this.schemaRegistryUri = schemaRegistryUri;
            return this;
        }
        public KafkaKafka build() {
            final var _resultValue = new KafkaKafka();
            _resultValue.accessCert = accessCert;
            _resultValue.accessKey = accessKey;
            _resultValue.connectUri = connectUri;
            _resultValue.restUri = restUri;
            _resultValue.schemaRegistryUri = schemaRegistryUri;
            return _resultValue;
        }
    }
}
