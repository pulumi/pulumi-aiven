// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker {
    private final @Nullable String emitCheckpointsEnabled;
    private final @Nullable String emitCheckpointsIntervalSeconds;
    private final @Nullable String refreshGroupsEnabled;
    private final @Nullable String refreshGroupsIntervalSeconds;
    private final @Nullable String refreshTopicsEnabled;
    private final @Nullable String refreshTopicsIntervalSeconds;
    private final @Nullable String syncGroupOffsetsEnabled;
    private final @Nullable String syncGroupOffsetsIntervalSeconds;
    private final @Nullable String syncTopicConfigsEnabled;
    private final @Nullable String tasksMaxPerCpu;

    @CustomType.Constructor
    private GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker(
        @CustomType.Parameter("emitCheckpointsEnabled") @Nullable String emitCheckpointsEnabled,
        @CustomType.Parameter("emitCheckpointsIntervalSeconds") @Nullable String emitCheckpointsIntervalSeconds,
        @CustomType.Parameter("refreshGroupsEnabled") @Nullable String refreshGroupsEnabled,
        @CustomType.Parameter("refreshGroupsIntervalSeconds") @Nullable String refreshGroupsIntervalSeconds,
        @CustomType.Parameter("refreshTopicsEnabled") @Nullable String refreshTopicsEnabled,
        @CustomType.Parameter("refreshTopicsIntervalSeconds") @Nullable String refreshTopicsIntervalSeconds,
        @CustomType.Parameter("syncGroupOffsetsEnabled") @Nullable String syncGroupOffsetsEnabled,
        @CustomType.Parameter("syncGroupOffsetsIntervalSeconds") @Nullable String syncGroupOffsetsIntervalSeconds,
        @CustomType.Parameter("syncTopicConfigsEnabled") @Nullable String syncTopicConfigsEnabled,
        @CustomType.Parameter("tasksMaxPerCpu") @Nullable String tasksMaxPerCpu) {
        this.emitCheckpointsEnabled = emitCheckpointsEnabled;
        this.emitCheckpointsIntervalSeconds = emitCheckpointsIntervalSeconds;
        this.refreshGroupsEnabled = refreshGroupsEnabled;
        this.refreshGroupsIntervalSeconds = refreshGroupsIntervalSeconds;
        this.refreshTopicsEnabled = refreshTopicsEnabled;
        this.refreshTopicsIntervalSeconds = refreshTopicsIntervalSeconds;
        this.syncGroupOffsetsEnabled = syncGroupOffsetsEnabled;
        this.syncGroupOffsetsIntervalSeconds = syncGroupOffsetsIntervalSeconds;
        this.syncTopicConfigsEnabled = syncTopicConfigsEnabled;
        this.tasksMaxPerCpu = tasksMaxPerCpu;
    }

    public Optional<String> emitCheckpointsEnabled() {
        return Optional.ofNullable(this.emitCheckpointsEnabled);
    }
    public Optional<String> emitCheckpointsIntervalSeconds() {
        return Optional.ofNullable(this.emitCheckpointsIntervalSeconds);
    }
    public Optional<String> refreshGroupsEnabled() {
        return Optional.ofNullable(this.refreshGroupsEnabled);
    }
    public Optional<String> refreshGroupsIntervalSeconds() {
        return Optional.ofNullable(this.refreshGroupsIntervalSeconds);
    }
    public Optional<String> refreshTopicsEnabled() {
        return Optional.ofNullable(this.refreshTopicsEnabled);
    }
    public Optional<String> refreshTopicsIntervalSeconds() {
        return Optional.ofNullable(this.refreshTopicsIntervalSeconds);
    }
    public Optional<String> syncGroupOffsetsEnabled() {
        return Optional.ofNullable(this.syncGroupOffsetsEnabled);
    }
    public Optional<String> syncGroupOffsetsIntervalSeconds() {
        return Optional.ofNullable(this.syncGroupOffsetsIntervalSeconds);
    }
    public Optional<String> syncTopicConfigsEnabled() {
        return Optional.ofNullable(this.syncTopicConfigsEnabled);
    }
    public Optional<String> tasksMaxPerCpu() {
        return Optional.ofNullable(this.tasksMaxPerCpu);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String emitCheckpointsEnabled;
        private @Nullable String emitCheckpointsIntervalSeconds;
        private @Nullable String refreshGroupsEnabled;
        private @Nullable String refreshGroupsIntervalSeconds;
        private @Nullable String refreshTopicsEnabled;
        private @Nullable String refreshTopicsIntervalSeconds;
        private @Nullable String syncGroupOffsetsEnabled;
        private @Nullable String syncGroupOffsetsIntervalSeconds;
        private @Nullable String syncTopicConfigsEnabled;
        private @Nullable String tasksMaxPerCpu;

        public Builder() {
    	      // Empty
        }

        public Builder(GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.emitCheckpointsEnabled = defaults.emitCheckpointsEnabled;
    	      this.emitCheckpointsIntervalSeconds = defaults.emitCheckpointsIntervalSeconds;
    	      this.refreshGroupsEnabled = defaults.refreshGroupsEnabled;
    	      this.refreshGroupsIntervalSeconds = defaults.refreshGroupsIntervalSeconds;
    	      this.refreshTopicsEnabled = defaults.refreshTopicsEnabled;
    	      this.refreshTopicsIntervalSeconds = defaults.refreshTopicsIntervalSeconds;
    	      this.syncGroupOffsetsEnabled = defaults.syncGroupOffsetsEnabled;
    	      this.syncGroupOffsetsIntervalSeconds = defaults.syncGroupOffsetsIntervalSeconds;
    	      this.syncTopicConfigsEnabled = defaults.syncTopicConfigsEnabled;
    	      this.tasksMaxPerCpu = defaults.tasksMaxPerCpu;
        }

        public Builder emitCheckpointsEnabled(@Nullable String emitCheckpointsEnabled) {
            this.emitCheckpointsEnabled = emitCheckpointsEnabled;
            return this;
        }
        public Builder emitCheckpointsIntervalSeconds(@Nullable String emitCheckpointsIntervalSeconds) {
            this.emitCheckpointsIntervalSeconds = emitCheckpointsIntervalSeconds;
            return this;
        }
        public Builder refreshGroupsEnabled(@Nullable String refreshGroupsEnabled) {
            this.refreshGroupsEnabled = refreshGroupsEnabled;
            return this;
        }
        public Builder refreshGroupsIntervalSeconds(@Nullable String refreshGroupsIntervalSeconds) {
            this.refreshGroupsIntervalSeconds = refreshGroupsIntervalSeconds;
            return this;
        }
        public Builder refreshTopicsEnabled(@Nullable String refreshTopicsEnabled) {
            this.refreshTopicsEnabled = refreshTopicsEnabled;
            return this;
        }
        public Builder refreshTopicsIntervalSeconds(@Nullable String refreshTopicsIntervalSeconds) {
            this.refreshTopicsIntervalSeconds = refreshTopicsIntervalSeconds;
            return this;
        }
        public Builder syncGroupOffsetsEnabled(@Nullable String syncGroupOffsetsEnabled) {
            this.syncGroupOffsetsEnabled = syncGroupOffsetsEnabled;
            return this;
        }
        public Builder syncGroupOffsetsIntervalSeconds(@Nullable String syncGroupOffsetsIntervalSeconds) {
            this.syncGroupOffsetsIntervalSeconds = syncGroupOffsetsIntervalSeconds;
            return this;
        }
        public Builder syncTopicConfigsEnabled(@Nullable String syncTopicConfigsEnabled) {
            this.syncTopicConfigsEnabled = syncTopicConfigsEnabled;
            return this;
        }
        public Builder tasksMaxPerCpu(@Nullable String tasksMaxPerCpu) {
            this.tasksMaxPerCpu = tasksMaxPerCpu;
            return this;
        }        public GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker build() {
            return new GetKafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker(emitCheckpointsEnabled, emitCheckpointsIntervalSeconds, refreshGroupsEnabled, refreshGroupsIntervalSeconds, refreshTopicsEnabled, refreshTopicsIntervalSeconds, syncGroupOffsetsEnabled, syncGroupOffsetsIntervalSeconds, syncTopicConfigsEnabled, tasksMaxPerCpu);
        }
    }
}
