// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OrganizationApplicationUserState extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationApplicationUserState Empty = new OrganizationApplicationUserState();

    /**
     * An email address automatically generated by Aiven to help identify the application user. No notifications are sent to this email.
     * 
     */
    @Import(name="email")
    private @Nullable Output<String> email;

    /**
     * @return An email address automatically generated by Aiven to help identify the application user. No notifications are sent to this email.
     * 
     */
    public Optional<Output<String>> email() {
        return Optional.ofNullable(this.email);
    }

    /**
     * Makes the application user a super admin. The super admin role has completely unrestricted access to all organization resources and settings. This role should be limited to as few users as possible. For daily administrative tasks, assign users the organization admin role instead using the `aiven.OrganizationPermission` resource.
     * 
     * @deprecated
     * This field is no longer accepted by the API. For administrative tasks, assign application users the organization admin role instead using the aiven.OrganizationPermission resource.
     * 
     */
    @Deprecated /* This field is no longer accepted by the API. For administrative tasks, assign application users the organization admin role instead using the aiven.OrganizationPermission resource. */
    @Import(name="isSuperAdmin")
    private @Nullable Output<Boolean> isSuperAdmin;

    /**
     * @return Makes the application user a super admin. The super admin role has completely unrestricted access to all organization resources and settings. This role should be limited to as few users as possible. For daily administrative tasks, assign users the organization admin role instead using the `aiven.OrganizationPermission` resource.
     * 
     * @deprecated
     * This field is no longer accepted by the API. For administrative tasks, assign application users the organization admin role instead using the aiven.OrganizationPermission resource.
     * 
     */
    @Deprecated /* This field is no longer accepted by the API. For administrative tasks, assign application users the organization admin role instead using the aiven.OrganizationPermission resource. */
    public Optional<Output<Boolean>> isSuperAdmin() {
        return Optional.ofNullable(this.isSuperAdmin);
    }

    /**
     * Name of the application user.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the application user.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the organization the application user belongs to.
     * 
     */
    @Import(name="organizationId")
    private @Nullable Output<String> organizationId;

    /**
     * @return The ID of the organization the application user belongs to.
     * 
     */
    public Optional<Output<String>> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }

    /**
     * The ID of the application user.
     * 
     */
    @Import(name="userId")
    private @Nullable Output<String> userId;

    /**
     * @return The ID of the application user.
     * 
     */
    public Optional<Output<String>> userId() {
        return Optional.ofNullable(this.userId);
    }

    private OrganizationApplicationUserState() {}

    private OrganizationApplicationUserState(OrganizationApplicationUserState $) {
        this.email = $.email;
        this.isSuperAdmin = $.isSuperAdmin;
        this.name = $.name;
        this.organizationId = $.organizationId;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationApplicationUserState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationApplicationUserState $;

        public Builder() {
            $ = new OrganizationApplicationUserState();
        }

        public Builder(OrganizationApplicationUserState defaults) {
            $ = new OrganizationApplicationUserState(Objects.requireNonNull(defaults));
        }

        /**
         * @param email An email address automatically generated by Aiven to help identify the application user. No notifications are sent to this email.
         * 
         * @return builder
         * 
         */
        public Builder email(@Nullable Output<String> email) {
            $.email = email;
            return this;
        }

        /**
         * @param email An email address automatically generated by Aiven to help identify the application user. No notifications are sent to this email.
         * 
         * @return builder
         * 
         */
        public Builder email(String email) {
            return email(Output.of(email));
        }

        /**
         * @param isSuperAdmin Makes the application user a super admin. The super admin role has completely unrestricted access to all organization resources and settings. This role should be limited to as few users as possible. For daily administrative tasks, assign users the organization admin role instead using the `aiven.OrganizationPermission` resource.
         * 
         * @return builder
         * 
         * @deprecated
         * This field is no longer accepted by the API. For administrative tasks, assign application users the organization admin role instead using the aiven.OrganizationPermission resource.
         * 
         */
        @Deprecated /* This field is no longer accepted by the API. For administrative tasks, assign application users the organization admin role instead using the aiven.OrganizationPermission resource. */
        public Builder isSuperAdmin(@Nullable Output<Boolean> isSuperAdmin) {
            $.isSuperAdmin = isSuperAdmin;
            return this;
        }

        /**
         * @param isSuperAdmin Makes the application user a super admin. The super admin role has completely unrestricted access to all organization resources and settings. This role should be limited to as few users as possible. For daily administrative tasks, assign users the organization admin role instead using the `aiven.OrganizationPermission` resource.
         * 
         * @return builder
         * 
         * @deprecated
         * This field is no longer accepted by the API. For administrative tasks, assign application users the organization admin role instead using the aiven.OrganizationPermission resource.
         * 
         */
        @Deprecated /* This field is no longer accepted by the API. For administrative tasks, assign application users the organization admin role instead using the aiven.OrganizationPermission resource. */
        public Builder isSuperAdmin(Boolean isSuperAdmin) {
            return isSuperAdmin(Output.of(isSuperAdmin));
        }

        /**
         * @param name Name of the application user.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the application user.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param organizationId The ID of the organization the application user belongs to.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(@Nullable Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId The ID of the organization the application user belongs to.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        /**
         * @param userId The ID of the application user.
         * 
         * @return builder
         * 
         */
        public Builder userId(@Nullable Output<String> userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param userId The ID of the application user.
         * 
         * @return builder
         * 
         */
        public Builder userId(String userId) {
            return userId(Output.of(userId));
        }

        public OrganizationApplicationUserState build() {
            return $;
        }
    }

}
