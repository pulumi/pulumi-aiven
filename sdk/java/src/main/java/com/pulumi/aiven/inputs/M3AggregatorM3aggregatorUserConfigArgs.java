// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.aiven.inputs.M3AggregatorM3aggregatorUserConfigIpFilterObjectArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class M3AggregatorM3aggregatorUserConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final M3AggregatorM3aggregatorUserConfigArgs Empty = new M3AggregatorM3aggregatorUserConfigArgs();

    @Import(name="customDomain")
    private @Nullable Output<String> customDomain;

    public Optional<Output<String>> customDomain() {
        return Optional.ofNullable(this.customDomain);
    }

    @Import(name="ipFilterObjects")
    private @Nullable Output<List<M3AggregatorM3aggregatorUserConfigIpFilterObjectArgs>> ipFilterObjects;

    public Optional<Output<List<M3AggregatorM3aggregatorUserConfigIpFilterObjectArgs>>> ipFilterObjects() {
        return Optional.ofNullable(this.ipFilterObjects);
    }

    @Import(name="ipFilters")
    private @Nullable Output<List<String>> ipFilters;

    public Optional<Output<List<String>>> ipFilters() {
        return Optional.ofNullable(this.ipFilters);
    }

    @Import(name="m3Version")
    private @Nullable Output<String> m3Version;

    public Optional<Output<String>> m3Version() {
        return Optional.ofNullable(this.m3Version);
    }

    @Import(name="m3aggregatorVersion")
    private @Nullable Output<String> m3aggregatorVersion;

    public Optional<Output<String>> m3aggregatorVersion() {
        return Optional.ofNullable(this.m3aggregatorVersion);
    }

    @Import(name="staticIps")
    private @Nullable Output<String> staticIps;

    public Optional<Output<String>> staticIps() {
        return Optional.ofNullable(this.staticIps);
    }

    private M3AggregatorM3aggregatorUserConfigArgs() {}

    private M3AggregatorM3aggregatorUserConfigArgs(M3AggregatorM3aggregatorUserConfigArgs $) {
        this.customDomain = $.customDomain;
        this.ipFilterObjects = $.ipFilterObjects;
        this.ipFilters = $.ipFilters;
        this.m3Version = $.m3Version;
        this.m3aggregatorVersion = $.m3aggregatorVersion;
        this.staticIps = $.staticIps;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(M3AggregatorM3aggregatorUserConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private M3AggregatorM3aggregatorUserConfigArgs $;

        public Builder() {
            $ = new M3AggregatorM3aggregatorUserConfigArgs();
        }

        public Builder(M3AggregatorM3aggregatorUserConfigArgs defaults) {
            $ = new M3AggregatorM3aggregatorUserConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder customDomain(@Nullable Output<String> customDomain) {
            $.customDomain = customDomain;
            return this;
        }

        public Builder customDomain(String customDomain) {
            return customDomain(Output.of(customDomain));
        }

        public Builder ipFilterObjects(@Nullable Output<List<M3AggregatorM3aggregatorUserConfigIpFilterObjectArgs>> ipFilterObjects) {
            $.ipFilterObjects = ipFilterObjects;
            return this;
        }

        public Builder ipFilterObjects(List<M3AggregatorM3aggregatorUserConfigIpFilterObjectArgs> ipFilterObjects) {
            return ipFilterObjects(Output.of(ipFilterObjects));
        }

        public Builder ipFilterObjects(M3AggregatorM3aggregatorUserConfigIpFilterObjectArgs... ipFilterObjects) {
            return ipFilterObjects(List.of(ipFilterObjects));
        }

        public Builder ipFilters(@Nullable Output<List<String>> ipFilters) {
            $.ipFilters = ipFilters;
            return this;
        }

        public Builder ipFilters(List<String> ipFilters) {
            return ipFilters(Output.of(ipFilters));
        }

        public Builder ipFilters(String... ipFilters) {
            return ipFilters(List.of(ipFilters));
        }

        public Builder m3Version(@Nullable Output<String> m3Version) {
            $.m3Version = m3Version;
            return this;
        }

        public Builder m3Version(String m3Version) {
            return m3Version(Output.of(m3Version));
        }

        public Builder m3aggregatorVersion(@Nullable Output<String> m3aggregatorVersion) {
            $.m3aggregatorVersion = m3aggregatorVersion;
            return this;
        }

        public Builder m3aggregatorVersion(String m3aggregatorVersion) {
            return m3aggregatorVersion(Output.of(m3aggregatorVersion));
        }

        public Builder staticIps(@Nullable Output<String> staticIps) {
            $.staticIps = staticIps;
            return this;
        }

        public Builder staticIps(String staticIps) {
            return staticIps(Output.of(staticIps));
        }

        public M3AggregatorM3aggregatorUserConfigArgs build() {
            return $;
        }
    }

}
