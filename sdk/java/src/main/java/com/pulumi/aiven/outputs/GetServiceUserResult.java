// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceUserResult {
    /**
     * @return Access certificate for the user if applicable for the service in question
     * 
     */
    private String accessCert;
    /**
     * @return Access certificate key for the user if applicable for the service in question
     * 
     */
    private String accessKey;
    /**
     * @return Authentication details. The possible values are `caching_sha2_password` and `mysql_native_password`.
     * 
     */
    private String authentication;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The password of the service user ( not applicable for all services ).
     * 
     */
    private String password;
    /**
     * @return Postgres specific field, defines whether replication is allowed. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    private Boolean pgAllowReplication;
    /**
     * @return Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    private String project;
    /**
     * @return Redis specific field, defines command category rules. The field is required with`redis_acl_commands` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    private List<String> redisAclCategories;
    /**
     * @return Redis specific field, defines the permitted pub/sub channel patterns. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    private List<String> redisAclChannels;
    /**
     * @return Redis specific field, defines rules for individual commands. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    private List<String> redisAclCommands;
    /**
     * @return Redis specific field, defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    private List<String> redisAclKeys;
    /**
     * @return Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    private String serviceName;
    /**
     * @return Type of the user account. Tells wether the user is the primary account or a regular account.
     * 
     */
    private String type;
    /**
     * @return The actual name of the service user. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    private String username;

    private GetServiceUserResult() {}
    /**
     * @return Access certificate for the user if applicable for the service in question
     * 
     */
    public String accessCert() {
        return this.accessCert;
    }
    /**
     * @return Access certificate key for the user if applicable for the service in question
     * 
     */
    public String accessKey() {
        return this.accessKey;
    }
    /**
     * @return Authentication details. The possible values are `caching_sha2_password` and `mysql_native_password`.
     * 
     */
    public String authentication() {
        return this.authentication;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The password of the service user ( not applicable for all services ).
     * 
     */
    public String password() {
        return this.password;
    }
    /**
     * @return Postgres specific field, defines whether replication is allowed. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public Boolean pgAllowReplication() {
        return this.pgAllowReplication;
    }
    /**
     * @return Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public String project() {
        return this.project;
    }
    /**
     * @return Redis specific field, defines command category rules. The field is required with`redis_acl_commands` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public List<String> redisAclCategories() {
        return this.redisAclCategories;
    }
    /**
     * @return Redis specific field, defines the permitted pub/sub channel patterns. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public List<String> redisAclChannels() {
        return this.redisAclChannels;
    }
    /**
     * @return Redis specific field, defines rules for individual commands. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public List<String> redisAclCommands() {
        return this.redisAclCommands;
    }
    /**
     * @return Redis specific field, defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public List<String> redisAclKeys() {
        return this.redisAclKeys;
    }
    /**
     * @return Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return Type of the user account. Tells wether the user is the primary account or a regular account.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The actual name of the service user. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceUserResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessCert;
        private String accessKey;
        private String authentication;
        private String id;
        private String password;
        private Boolean pgAllowReplication;
        private String project;
        private List<String> redisAclCategories;
        private List<String> redisAclChannels;
        private List<String> redisAclCommands;
        private List<String> redisAclKeys;
        private String serviceName;
        private String type;
        private String username;
        public Builder() {}
        public Builder(GetServiceUserResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessCert = defaults.accessCert;
    	      this.accessKey = defaults.accessKey;
    	      this.authentication = defaults.authentication;
    	      this.id = defaults.id;
    	      this.password = defaults.password;
    	      this.pgAllowReplication = defaults.pgAllowReplication;
    	      this.project = defaults.project;
    	      this.redisAclCategories = defaults.redisAclCategories;
    	      this.redisAclChannels = defaults.redisAclChannels;
    	      this.redisAclCommands = defaults.redisAclCommands;
    	      this.redisAclKeys = defaults.redisAclKeys;
    	      this.serviceName = defaults.serviceName;
    	      this.type = defaults.type;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder accessCert(String accessCert) {
            this.accessCert = Objects.requireNonNull(accessCert);
            return this;
        }
        @CustomType.Setter
        public Builder accessKey(String accessKey) {
            this.accessKey = Objects.requireNonNull(accessKey);
            return this;
        }
        @CustomType.Setter
        public Builder authentication(String authentication) {
            this.authentication = Objects.requireNonNull(authentication);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }
        @CustomType.Setter
        public Builder pgAllowReplication(Boolean pgAllowReplication) {
            this.pgAllowReplication = Objects.requireNonNull(pgAllowReplication);
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }
        @CustomType.Setter
        public Builder redisAclCategories(List<String> redisAclCategories) {
            this.redisAclCategories = Objects.requireNonNull(redisAclCategories);
            return this;
        }
        public Builder redisAclCategories(String... redisAclCategories) {
            return redisAclCategories(List.of(redisAclCategories));
        }
        @CustomType.Setter
        public Builder redisAclChannels(List<String> redisAclChannels) {
            this.redisAclChannels = Objects.requireNonNull(redisAclChannels);
            return this;
        }
        public Builder redisAclChannels(String... redisAclChannels) {
            return redisAclChannels(List.of(redisAclChannels));
        }
        @CustomType.Setter
        public Builder redisAclCommands(List<String> redisAclCommands) {
            this.redisAclCommands = Objects.requireNonNull(redisAclCommands);
            return this;
        }
        public Builder redisAclCommands(String... redisAclCommands) {
            return redisAclCommands(List.of(redisAclCommands));
        }
        @CustomType.Setter
        public Builder redisAclKeys(List<String> redisAclKeys) {
            this.redisAclKeys = Objects.requireNonNull(redisAclKeys);
            return this;
        }
        public Builder redisAclKeys(String... redisAclKeys) {
            return redisAclKeys(List.of(redisAclKeys));
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }
        public GetServiceUserResult build() {
            final var o = new GetServiceUserResult();
            o.accessCert = accessCert;
            o.accessKey = accessKey;
            o.authentication = authentication;
            o.id = id;
            o.password = password;
            o.pgAllowReplication = pgAllowReplication;
            o.project = project;
            o.redisAclCategories = redisAclCategories;
            o.redisAclChannels = redisAclChannels;
            o.redisAclCommands = redisAclCommands;
            o.redisAclKeys = redisAclKeys;
            o.serviceName = serviceName;
            o.type = type;
            o.username = username;
            return o;
        }
    }
}
