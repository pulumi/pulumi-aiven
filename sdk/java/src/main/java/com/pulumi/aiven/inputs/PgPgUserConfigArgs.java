// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.aiven.inputs.PgPgUserConfigMigrationArgs;
import com.pulumi.aiven.inputs.PgPgUserConfigPgArgs;
import com.pulumi.aiven.inputs.PgPgUserConfigPgbouncerArgs;
import com.pulumi.aiven.inputs.PgPgUserConfigPglookoutArgs;
import com.pulumi.aiven.inputs.PgPgUserConfigPrivateAccessArgs;
import com.pulumi.aiven.inputs.PgPgUserConfigPrivatelinkAccessArgs;
import com.pulumi.aiven.inputs.PgPgUserConfigPublicAccessArgs;
import com.pulumi.aiven.inputs.PgPgUserConfigTimescaledbArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PgPgUserConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final PgPgUserConfigArgs Empty = new PgPgUserConfigArgs();

    @Import(name="adminPassword")
    private @Nullable Output<String> adminPassword;

    public Optional<Output<String>> adminPassword() {
        return Optional.ofNullable(this.adminPassword);
    }

    @Import(name="adminUsername")
    private @Nullable Output<String> adminUsername;

    public Optional<Output<String>> adminUsername() {
        return Optional.ofNullable(this.adminUsername);
    }

    @Import(name="backupHour")
    private @Nullable Output<String> backupHour;

    public Optional<Output<String>> backupHour() {
        return Optional.ofNullable(this.backupHour);
    }

    @Import(name="backupMinute")
    private @Nullable Output<String> backupMinute;

    public Optional<Output<String>> backupMinute() {
        return Optional.ofNullable(this.backupMinute);
    }

    @Import(name="enableIpv6")
    private @Nullable Output<String> enableIpv6;

    public Optional<Output<String>> enableIpv6() {
        return Optional.ofNullable(this.enableIpv6);
    }

    @Import(name="ipFilters")
    private @Nullable Output<List<String>> ipFilters;

    public Optional<Output<List<String>>> ipFilters() {
        return Optional.ofNullable(this.ipFilters);
    }

    @Import(name="migration")
    private @Nullable Output<PgPgUserConfigMigrationArgs> migration;

    public Optional<Output<PgPgUserConfigMigrationArgs>> migration() {
        return Optional.ofNullable(this.migration);
    }

    @Import(name="pg")
    private @Nullable Output<PgPgUserConfigPgArgs> pg;

    public Optional<Output<PgPgUserConfigPgArgs>> pg() {
        return Optional.ofNullable(this.pg);
    }

    @Import(name="pgReadReplica")
    private @Nullable Output<String> pgReadReplica;

    public Optional<Output<String>> pgReadReplica() {
        return Optional.ofNullable(this.pgReadReplica);
    }

    @Import(name="pgServiceToForkFrom")
    private @Nullable Output<String> pgServiceToForkFrom;

    public Optional<Output<String>> pgServiceToForkFrom() {
        return Optional.ofNullable(this.pgServiceToForkFrom);
    }

    @Import(name="pgVersion")
    private @Nullable Output<String> pgVersion;

    public Optional<Output<String>> pgVersion() {
        return Optional.ofNullable(this.pgVersion);
    }

    @Import(name="pgbouncer")
    private @Nullable Output<PgPgUserConfigPgbouncerArgs> pgbouncer;

    public Optional<Output<PgPgUserConfigPgbouncerArgs>> pgbouncer() {
        return Optional.ofNullable(this.pgbouncer);
    }

    @Import(name="pglookout")
    private @Nullable Output<PgPgUserConfigPglookoutArgs> pglookout;

    public Optional<Output<PgPgUserConfigPglookoutArgs>> pglookout() {
        return Optional.ofNullable(this.pglookout);
    }

    @Import(name="privateAccess")
    private @Nullable Output<PgPgUserConfigPrivateAccessArgs> privateAccess;

    public Optional<Output<PgPgUserConfigPrivateAccessArgs>> privateAccess() {
        return Optional.ofNullable(this.privateAccess);
    }

    @Import(name="privatelinkAccess")
    private @Nullable Output<PgPgUserConfigPrivatelinkAccessArgs> privatelinkAccess;

    public Optional<Output<PgPgUserConfigPrivatelinkAccessArgs>> privatelinkAccess() {
        return Optional.ofNullable(this.privatelinkAccess);
    }

    @Import(name="projectToForkFrom")
    private @Nullable Output<String> projectToForkFrom;

    public Optional<Output<String>> projectToForkFrom() {
        return Optional.ofNullable(this.projectToForkFrom);
    }

    @Import(name="publicAccess")
    private @Nullable Output<PgPgUserConfigPublicAccessArgs> publicAccess;

    public Optional<Output<PgPgUserConfigPublicAccessArgs>> publicAccess() {
        return Optional.ofNullable(this.publicAccess);
    }

    @Import(name="recoveryTargetTime")
    private @Nullable Output<String> recoveryTargetTime;

    public Optional<Output<String>> recoveryTargetTime() {
        return Optional.ofNullable(this.recoveryTargetTime);
    }

    @Import(name="serviceToForkFrom")
    private @Nullable Output<String> serviceToForkFrom;

    public Optional<Output<String>> serviceToForkFrom() {
        return Optional.ofNullable(this.serviceToForkFrom);
    }

    @Import(name="sharedBuffersPercentage")
    private @Nullable Output<String> sharedBuffersPercentage;

    public Optional<Output<String>> sharedBuffersPercentage() {
        return Optional.ofNullable(this.sharedBuffersPercentage);
    }

    @Import(name="staticIps")
    private @Nullable Output<String> staticIps;

    public Optional<Output<String>> staticIps() {
        return Optional.ofNullable(this.staticIps);
    }

    @Import(name="synchronousReplication")
    private @Nullable Output<String> synchronousReplication;

    public Optional<Output<String>> synchronousReplication() {
        return Optional.ofNullable(this.synchronousReplication);
    }

    @Import(name="timescaledb")
    private @Nullable Output<PgPgUserConfigTimescaledbArgs> timescaledb;

    public Optional<Output<PgPgUserConfigTimescaledbArgs>> timescaledb() {
        return Optional.ofNullable(this.timescaledb);
    }

    @Import(name="variant")
    private @Nullable Output<String> variant;

    public Optional<Output<String>> variant() {
        return Optional.ofNullable(this.variant);
    }

    @Import(name="workMem")
    private @Nullable Output<String> workMem;

    public Optional<Output<String>> workMem() {
        return Optional.ofNullable(this.workMem);
    }

    private PgPgUserConfigArgs() {}

    private PgPgUserConfigArgs(PgPgUserConfigArgs $) {
        this.adminPassword = $.adminPassword;
        this.adminUsername = $.adminUsername;
        this.backupHour = $.backupHour;
        this.backupMinute = $.backupMinute;
        this.enableIpv6 = $.enableIpv6;
        this.ipFilters = $.ipFilters;
        this.migration = $.migration;
        this.pg = $.pg;
        this.pgReadReplica = $.pgReadReplica;
        this.pgServiceToForkFrom = $.pgServiceToForkFrom;
        this.pgVersion = $.pgVersion;
        this.pgbouncer = $.pgbouncer;
        this.pglookout = $.pglookout;
        this.privateAccess = $.privateAccess;
        this.privatelinkAccess = $.privatelinkAccess;
        this.projectToForkFrom = $.projectToForkFrom;
        this.publicAccess = $.publicAccess;
        this.recoveryTargetTime = $.recoveryTargetTime;
        this.serviceToForkFrom = $.serviceToForkFrom;
        this.sharedBuffersPercentage = $.sharedBuffersPercentage;
        this.staticIps = $.staticIps;
        this.synchronousReplication = $.synchronousReplication;
        this.timescaledb = $.timescaledb;
        this.variant = $.variant;
        this.workMem = $.workMem;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PgPgUserConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PgPgUserConfigArgs $;

        public Builder() {
            $ = new PgPgUserConfigArgs();
        }

        public Builder(PgPgUserConfigArgs defaults) {
            $ = new PgPgUserConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder adminPassword(@Nullable Output<String> adminPassword) {
            $.adminPassword = adminPassword;
            return this;
        }

        public Builder adminPassword(String adminPassword) {
            return adminPassword(Output.of(adminPassword));
        }

        public Builder adminUsername(@Nullable Output<String> adminUsername) {
            $.adminUsername = adminUsername;
            return this;
        }

        public Builder adminUsername(String adminUsername) {
            return adminUsername(Output.of(adminUsername));
        }

        public Builder backupHour(@Nullable Output<String> backupHour) {
            $.backupHour = backupHour;
            return this;
        }

        public Builder backupHour(String backupHour) {
            return backupHour(Output.of(backupHour));
        }

        public Builder backupMinute(@Nullable Output<String> backupMinute) {
            $.backupMinute = backupMinute;
            return this;
        }

        public Builder backupMinute(String backupMinute) {
            return backupMinute(Output.of(backupMinute));
        }

        public Builder enableIpv6(@Nullable Output<String> enableIpv6) {
            $.enableIpv6 = enableIpv6;
            return this;
        }

        public Builder enableIpv6(String enableIpv6) {
            return enableIpv6(Output.of(enableIpv6));
        }

        public Builder ipFilters(@Nullable Output<List<String>> ipFilters) {
            $.ipFilters = ipFilters;
            return this;
        }

        public Builder ipFilters(List<String> ipFilters) {
            return ipFilters(Output.of(ipFilters));
        }

        public Builder ipFilters(String... ipFilters) {
            return ipFilters(List.of(ipFilters));
        }

        public Builder migration(@Nullable Output<PgPgUserConfigMigrationArgs> migration) {
            $.migration = migration;
            return this;
        }

        public Builder migration(PgPgUserConfigMigrationArgs migration) {
            return migration(Output.of(migration));
        }

        public Builder pg(@Nullable Output<PgPgUserConfigPgArgs> pg) {
            $.pg = pg;
            return this;
        }

        public Builder pg(PgPgUserConfigPgArgs pg) {
            return pg(Output.of(pg));
        }

        public Builder pgReadReplica(@Nullable Output<String> pgReadReplica) {
            $.pgReadReplica = pgReadReplica;
            return this;
        }

        public Builder pgReadReplica(String pgReadReplica) {
            return pgReadReplica(Output.of(pgReadReplica));
        }

        public Builder pgServiceToForkFrom(@Nullable Output<String> pgServiceToForkFrom) {
            $.pgServiceToForkFrom = pgServiceToForkFrom;
            return this;
        }

        public Builder pgServiceToForkFrom(String pgServiceToForkFrom) {
            return pgServiceToForkFrom(Output.of(pgServiceToForkFrom));
        }

        public Builder pgVersion(@Nullable Output<String> pgVersion) {
            $.pgVersion = pgVersion;
            return this;
        }

        public Builder pgVersion(String pgVersion) {
            return pgVersion(Output.of(pgVersion));
        }

        public Builder pgbouncer(@Nullable Output<PgPgUserConfigPgbouncerArgs> pgbouncer) {
            $.pgbouncer = pgbouncer;
            return this;
        }

        public Builder pgbouncer(PgPgUserConfigPgbouncerArgs pgbouncer) {
            return pgbouncer(Output.of(pgbouncer));
        }

        public Builder pglookout(@Nullable Output<PgPgUserConfigPglookoutArgs> pglookout) {
            $.pglookout = pglookout;
            return this;
        }

        public Builder pglookout(PgPgUserConfigPglookoutArgs pglookout) {
            return pglookout(Output.of(pglookout));
        }

        public Builder privateAccess(@Nullable Output<PgPgUserConfigPrivateAccessArgs> privateAccess) {
            $.privateAccess = privateAccess;
            return this;
        }

        public Builder privateAccess(PgPgUserConfigPrivateAccessArgs privateAccess) {
            return privateAccess(Output.of(privateAccess));
        }

        public Builder privatelinkAccess(@Nullable Output<PgPgUserConfigPrivatelinkAccessArgs> privatelinkAccess) {
            $.privatelinkAccess = privatelinkAccess;
            return this;
        }

        public Builder privatelinkAccess(PgPgUserConfigPrivatelinkAccessArgs privatelinkAccess) {
            return privatelinkAccess(Output.of(privatelinkAccess));
        }

        public Builder projectToForkFrom(@Nullable Output<String> projectToForkFrom) {
            $.projectToForkFrom = projectToForkFrom;
            return this;
        }

        public Builder projectToForkFrom(String projectToForkFrom) {
            return projectToForkFrom(Output.of(projectToForkFrom));
        }

        public Builder publicAccess(@Nullable Output<PgPgUserConfigPublicAccessArgs> publicAccess) {
            $.publicAccess = publicAccess;
            return this;
        }

        public Builder publicAccess(PgPgUserConfigPublicAccessArgs publicAccess) {
            return publicAccess(Output.of(publicAccess));
        }

        public Builder recoveryTargetTime(@Nullable Output<String> recoveryTargetTime) {
            $.recoveryTargetTime = recoveryTargetTime;
            return this;
        }

        public Builder recoveryTargetTime(String recoveryTargetTime) {
            return recoveryTargetTime(Output.of(recoveryTargetTime));
        }

        public Builder serviceToForkFrom(@Nullable Output<String> serviceToForkFrom) {
            $.serviceToForkFrom = serviceToForkFrom;
            return this;
        }

        public Builder serviceToForkFrom(String serviceToForkFrom) {
            return serviceToForkFrom(Output.of(serviceToForkFrom));
        }

        public Builder sharedBuffersPercentage(@Nullable Output<String> sharedBuffersPercentage) {
            $.sharedBuffersPercentage = sharedBuffersPercentage;
            return this;
        }

        public Builder sharedBuffersPercentage(String sharedBuffersPercentage) {
            return sharedBuffersPercentage(Output.of(sharedBuffersPercentage));
        }

        public Builder staticIps(@Nullable Output<String> staticIps) {
            $.staticIps = staticIps;
            return this;
        }

        public Builder staticIps(String staticIps) {
            return staticIps(Output.of(staticIps));
        }

        public Builder synchronousReplication(@Nullable Output<String> synchronousReplication) {
            $.synchronousReplication = synchronousReplication;
            return this;
        }

        public Builder synchronousReplication(String synchronousReplication) {
            return synchronousReplication(Output.of(synchronousReplication));
        }

        public Builder timescaledb(@Nullable Output<PgPgUserConfigTimescaledbArgs> timescaledb) {
            $.timescaledb = timescaledb;
            return this;
        }

        public Builder timescaledb(PgPgUserConfigTimescaledbArgs timescaledb) {
            return timescaledb(Output.of(timescaledb));
        }

        public Builder variant(@Nullable Output<String> variant) {
            $.variant = variant;
            return this;
        }

        public Builder variant(String variant) {
            return variant(Output.of(variant));
        }

        public Builder workMem(@Nullable Output<String> workMem) {
            $.workMem = workMem;
            return this;
        }

        public Builder workMem(String workMem) {
            return workMem(Output.of(workMem));
        }

        public PgPgUserConfigArgs build() {
            return $;
        }
    }

}
