// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.aiven.inputs.ServiceIntegrationClickhousePostgresqlUserConfigDatabaseArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceIntegrationClickhousePostgresqlUserConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceIntegrationClickhousePostgresqlUserConfigArgs Empty = new ServiceIntegrationClickhousePostgresqlUserConfigArgs();

    /**
     * Databases to expose.
     * 
     */
    @Import(name="databases")
    private @Nullable Output<List<ServiceIntegrationClickhousePostgresqlUserConfigDatabaseArgs>> databases;

    /**
     * @return Databases to expose.
     * 
     */
    public Optional<Output<List<ServiceIntegrationClickhousePostgresqlUserConfigDatabaseArgs>>> databases() {
        return Optional.ofNullable(this.databases);
    }

    private ServiceIntegrationClickhousePostgresqlUserConfigArgs() {}

    private ServiceIntegrationClickhousePostgresqlUserConfigArgs(ServiceIntegrationClickhousePostgresqlUserConfigArgs $) {
        this.databases = $.databases;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceIntegrationClickhousePostgresqlUserConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceIntegrationClickhousePostgresqlUserConfigArgs $;

        public Builder() {
            $ = new ServiceIntegrationClickhousePostgresqlUserConfigArgs();
        }

        public Builder(ServiceIntegrationClickhousePostgresqlUserConfigArgs defaults) {
            $ = new ServiceIntegrationClickhousePostgresqlUserConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param databases Databases to expose.
         * 
         * @return builder
         * 
         */
        public Builder databases(@Nullable Output<List<ServiceIntegrationClickhousePostgresqlUserConfigDatabaseArgs>> databases) {
            $.databases = databases;
            return this;
        }

        /**
         * @param databases Databases to expose.
         * 
         * @return builder
         * 
         */
        public Builder databases(List<ServiceIntegrationClickhousePostgresqlUserConfigDatabaseArgs> databases) {
            return databases(Output.of(databases));
        }

        /**
         * @param databases Databases to expose.
         * 
         * @return builder
         * 
         */
        public Builder databases(ServiceIntegrationClickhousePostgresqlUserConfigDatabaseArgs... databases) {
            return databases(List.of(databases));
        }

        public ServiceIntegrationClickhousePostgresqlUserConfigArgs build() {
            return $;
        }
    }

}
