// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs Empty = new ServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs();

    /**
     * The list of logging fields that will be sent to the integration logging service. The MESSAGE and timestamp fields are always sent.
     * 
     */
    @Import(name="selectedLogFields")
    private @Nullable Output<List<String>> selectedLogFields;

    /**
     * @return The list of logging fields that will be sent to the integration logging service. The MESSAGE and timestamp fields are always sent.
     * 
     */
    public Optional<Output<List<String>>> selectedLogFields() {
        return Optional.ofNullable(this.selectedLogFields);
    }

    private ServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs() {}

    private ServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs(ServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs $) {
        this.selectedLogFields = $.selectedLogFields;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs $;

        public Builder() {
            $ = new ServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs();
        }

        public Builder(ServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs defaults) {
            $ = new ServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param selectedLogFields The list of logging fields that will be sent to the integration logging service. The MESSAGE and timestamp fields are always sent.
         * 
         * @return builder
         * 
         */
        public Builder selectedLogFields(@Nullable Output<List<String>> selectedLogFields) {
            $.selectedLogFields = selectedLogFields;
            return this;
        }

        /**
         * @param selectedLogFields The list of logging fields that will be sent to the integration logging service. The MESSAGE and timestamp fields are always sent.
         * 
         * @return builder
         * 
         */
        public Builder selectedLogFields(List<String> selectedLogFields) {
            return selectedLogFields(Output.of(selectedLogFields));
        }

        /**
         * @param selectedLogFields The list of logging fields that will be sent to the integration logging service. The MESSAGE and timestamp fields are always sent.
         * 
         * @return builder
         * 
         */
        public Builder selectedLogFields(String... selectedLogFields) {
            return selectedLogFields(List.of(selectedLogFields));
        }

        public ServiceIntegrationExternalAwsCloudwatchLogsUserConfigArgs build() {
            return $;
        }
    }

}
