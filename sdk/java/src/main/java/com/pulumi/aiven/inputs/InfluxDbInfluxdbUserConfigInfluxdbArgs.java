// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InfluxDbInfluxdbUserConfigInfluxdbArgs extends com.pulumi.resources.ResourceArgs {

    public static final InfluxDbInfluxdbUserConfigInfluxdbArgs Empty = new InfluxDbInfluxdbUserConfigInfluxdbArgs();

    @Import(name="logQueriesAfter")
    private @Nullable Output<Integer> logQueriesAfter;

    public Optional<Output<Integer>> logQueriesAfter() {
        return Optional.ofNullable(this.logQueriesAfter);
    }

    @Import(name="maxConnectionLimit")
    private @Nullable Output<Integer> maxConnectionLimit;

    public Optional<Output<Integer>> maxConnectionLimit() {
        return Optional.ofNullable(this.maxConnectionLimit);
    }

    @Import(name="maxRowLimit")
    private @Nullable Output<Integer> maxRowLimit;

    public Optional<Output<Integer>> maxRowLimit() {
        return Optional.ofNullable(this.maxRowLimit);
    }

    @Import(name="maxSelectBuckets")
    private @Nullable Output<Integer> maxSelectBuckets;

    public Optional<Output<Integer>> maxSelectBuckets() {
        return Optional.ofNullable(this.maxSelectBuckets);
    }

    @Import(name="maxSelectPoint")
    private @Nullable Output<Integer> maxSelectPoint;

    public Optional<Output<Integer>> maxSelectPoint() {
        return Optional.ofNullable(this.maxSelectPoint);
    }

    @Import(name="queryLogEnabled")
    private @Nullable Output<Boolean> queryLogEnabled;

    public Optional<Output<Boolean>> queryLogEnabled() {
        return Optional.ofNullable(this.queryLogEnabled);
    }

    @Import(name="queryTimeout")
    private @Nullable Output<Integer> queryTimeout;

    public Optional<Output<Integer>> queryTimeout() {
        return Optional.ofNullable(this.queryTimeout);
    }

    private InfluxDbInfluxdbUserConfigInfluxdbArgs() {}

    private InfluxDbInfluxdbUserConfigInfluxdbArgs(InfluxDbInfluxdbUserConfigInfluxdbArgs $) {
        this.logQueriesAfter = $.logQueriesAfter;
        this.maxConnectionLimit = $.maxConnectionLimit;
        this.maxRowLimit = $.maxRowLimit;
        this.maxSelectBuckets = $.maxSelectBuckets;
        this.maxSelectPoint = $.maxSelectPoint;
        this.queryLogEnabled = $.queryLogEnabled;
        this.queryTimeout = $.queryTimeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InfluxDbInfluxdbUserConfigInfluxdbArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InfluxDbInfluxdbUserConfigInfluxdbArgs $;

        public Builder() {
            $ = new InfluxDbInfluxdbUserConfigInfluxdbArgs();
        }

        public Builder(InfluxDbInfluxdbUserConfigInfluxdbArgs defaults) {
            $ = new InfluxDbInfluxdbUserConfigInfluxdbArgs(Objects.requireNonNull(defaults));
        }

        public Builder logQueriesAfter(@Nullable Output<Integer> logQueriesAfter) {
            $.logQueriesAfter = logQueriesAfter;
            return this;
        }

        public Builder logQueriesAfter(Integer logQueriesAfter) {
            return logQueriesAfter(Output.of(logQueriesAfter));
        }

        public Builder maxConnectionLimit(@Nullable Output<Integer> maxConnectionLimit) {
            $.maxConnectionLimit = maxConnectionLimit;
            return this;
        }

        public Builder maxConnectionLimit(Integer maxConnectionLimit) {
            return maxConnectionLimit(Output.of(maxConnectionLimit));
        }

        public Builder maxRowLimit(@Nullable Output<Integer> maxRowLimit) {
            $.maxRowLimit = maxRowLimit;
            return this;
        }

        public Builder maxRowLimit(Integer maxRowLimit) {
            return maxRowLimit(Output.of(maxRowLimit));
        }

        public Builder maxSelectBuckets(@Nullable Output<Integer> maxSelectBuckets) {
            $.maxSelectBuckets = maxSelectBuckets;
            return this;
        }

        public Builder maxSelectBuckets(Integer maxSelectBuckets) {
            return maxSelectBuckets(Output.of(maxSelectBuckets));
        }

        public Builder maxSelectPoint(@Nullable Output<Integer> maxSelectPoint) {
            $.maxSelectPoint = maxSelectPoint;
            return this;
        }

        public Builder maxSelectPoint(Integer maxSelectPoint) {
            return maxSelectPoint(Output.of(maxSelectPoint));
        }

        public Builder queryLogEnabled(@Nullable Output<Boolean> queryLogEnabled) {
            $.queryLogEnabled = queryLogEnabled;
            return this;
        }

        public Builder queryLogEnabled(Boolean queryLogEnabled) {
            return queryLogEnabled(Output.of(queryLogEnabled));
        }

        public Builder queryTimeout(@Nullable Output<Integer> queryTimeout) {
            $.queryTimeout = queryTimeout;
            return this;
        }

        public Builder queryTimeout(Integer queryTimeout) {
            return queryTimeout(Output.of(queryTimeout));
        }

        public InfluxDbInfluxdbUserConfigInfluxdbArgs build() {
            return $;
        }
    }

}
