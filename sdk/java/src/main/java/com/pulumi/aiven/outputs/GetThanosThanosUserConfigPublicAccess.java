// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetThanosThanosUserConfigPublicAccess {
    /**
     * @return Allow clients to connect to compactor from the public internet for service nodes that are in a project VPC or another type of private network.
     * 
     */
    private @Nullable Boolean compactor;
    /**
     * @return Allow clients to connect to query from the public internet for service nodes that are in a project VPC or another type of private network.
     * 
     */
    private @Nullable Boolean query;
    /**
     * @return Allow clients to connect to query_frontend from the public internet for service nodes that are in a project VPC or another type of private network.
     * 
     */
    private @Nullable Boolean queryFrontend;
    /**
     * @return Allow clients to connect to receiver_ingesting from the public internet for service nodes that are in a project VPC or another type of private network.
     * 
     */
    private @Nullable Boolean receiverIngesting;
    /**
     * @return Allow clients to connect to receiver_routing from the public internet for service nodes that are in a project VPC or another type of private network.
     * 
     */
    private @Nullable Boolean receiverRouting;
    /**
     * @return Allow clients to connect to ruler from the public internet for service nodes that are in a project VPC or another type of private network.
     * 
     */
    private @Nullable Boolean ruler;
    /**
     * @return Allow clients to connect to store from the public internet for service nodes that are in a project VPC or another type of private network.
     * 
     */
    private @Nullable Boolean store;

    private GetThanosThanosUserConfigPublicAccess() {}
    /**
     * @return Allow clients to connect to compactor from the public internet for service nodes that are in a project VPC or another type of private network.
     * 
     */
    public Optional<Boolean> compactor() {
        return Optional.ofNullable(this.compactor);
    }
    /**
     * @return Allow clients to connect to query from the public internet for service nodes that are in a project VPC or another type of private network.
     * 
     */
    public Optional<Boolean> query() {
        return Optional.ofNullable(this.query);
    }
    /**
     * @return Allow clients to connect to query_frontend from the public internet for service nodes that are in a project VPC or another type of private network.
     * 
     */
    public Optional<Boolean> queryFrontend() {
        return Optional.ofNullable(this.queryFrontend);
    }
    /**
     * @return Allow clients to connect to receiver_ingesting from the public internet for service nodes that are in a project VPC or another type of private network.
     * 
     */
    public Optional<Boolean> receiverIngesting() {
        return Optional.ofNullable(this.receiverIngesting);
    }
    /**
     * @return Allow clients to connect to receiver_routing from the public internet for service nodes that are in a project VPC or another type of private network.
     * 
     */
    public Optional<Boolean> receiverRouting() {
        return Optional.ofNullable(this.receiverRouting);
    }
    /**
     * @return Allow clients to connect to ruler from the public internet for service nodes that are in a project VPC or another type of private network.
     * 
     */
    public Optional<Boolean> ruler() {
        return Optional.ofNullable(this.ruler);
    }
    /**
     * @return Allow clients to connect to store from the public internet for service nodes that are in a project VPC or another type of private network.
     * 
     */
    public Optional<Boolean> store() {
        return Optional.ofNullable(this.store);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetThanosThanosUserConfigPublicAccess defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean compactor;
        private @Nullable Boolean query;
        private @Nullable Boolean queryFrontend;
        private @Nullable Boolean receiverIngesting;
        private @Nullable Boolean receiverRouting;
        private @Nullable Boolean ruler;
        private @Nullable Boolean store;
        public Builder() {}
        public Builder(GetThanosThanosUserConfigPublicAccess defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compactor = defaults.compactor;
    	      this.query = defaults.query;
    	      this.queryFrontend = defaults.queryFrontend;
    	      this.receiverIngesting = defaults.receiverIngesting;
    	      this.receiverRouting = defaults.receiverRouting;
    	      this.ruler = defaults.ruler;
    	      this.store = defaults.store;
        }

        @CustomType.Setter
        public Builder compactor(@Nullable Boolean compactor) {

            this.compactor = compactor;
            return this;
        }
        @CustomType.Setter
        public Builder query(@Nullable Boolean query) {

            this.query = query;
            return this;
        }
        @CustomType.Setter
        public Builder queryFrontend(@Nullable Boolean queryFrontend) {

            this.queryFrontend = queryFrontend;
            return this;
        }
        @CustomType.Setter
        public Builder receiverIngesting(@Nullable Boolean receiverIngesting) {

            this.receiverIngesting = receiverIngesting;
            return this;
        }
        @CustomType.Setter
        public Builder receiverRouting(@Nullable Boolean receiverRouting) {

            this.receiverRouting = receiverRouting;
            return this;
        }
        @CustomType.Setter
        public Builder ruler(@Nullable Boolean ruler) {

            this.ruler = ruler;
            return this;
        }
        @CustomType.Setter
        public Builder store(@Nullable Boolean store) {

            this.store = store;
            return this;
        }
        public GetThanosThanosUserConfigPublicAccess build() {
            final var _resultValue = new GetThanosThanosUserConfigPublicAccess();
            _resultValue.compactor = compactor;
            _resultValue.query = query;
            _resultValue.queryFrontend = queryFrontend;
            _resultValue.receiverIngesting = receiverIngesting;
            _resultValue.receiverRouting = receiverRouting;
            _resultValue.ruler = ruler;
            _resultValue.store = store;
            return _resultValue;
        }
    }
}
