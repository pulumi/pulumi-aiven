// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRedisUserResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The password of the Redis User.
     * 
     */
    private String password;
    /**
     * @return Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    private String project;
    /**
     * @return Defines command category rules. The field is required with`redis_acl_commands` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    private List<String> redisAclCategories;
    /**
     * @return Defines the permitted pub/sub channel patterns. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    private List<String> redisAclChannels;
    /**
     * @return Defines rules for individual commands. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    private List<String> redisAclCommands;
    /**
     * @return Defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    private List<String> redisAclKeys;
    /**
     * @return Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    private String serviceName;
    /**
     * @return Type of the user account. Tells whether the user is the primary account or a regular account.
     * 
     */
    private String type;
    /**
     * @return The actual name of the Redis User. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    private String username;

    private GetRedisUserResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The password of the Redis User.
     * 
     */
    public String password() {
        return this.password;
    }
    /**
     * @return Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public String project() {
        return this.project;
    }
    /**
     * @return Defines command category rules. The field is required with`redis_acl_commands` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public List<String> redisAclCategories() {
        return this.redisAclCategories;
    }
    /**
     * @return Defines the permitted pub/sub channel patterns. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public List<String> redisAclChannels() {
        return this.redisAclChannels;
    }
    /**
     * @return Defines rules for individual commands. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public List<String> redisAclCommands() {
        return this.redisAclCommands;
    }
    /**
     * @return Defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public List<String> redisAclKeys() {
        return this.redisAclKeys;
    }
    /**
     * @return Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return Type of the user account. Tells whether the user is the primary account or a regular account.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The actual name of the Redis User. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRedisUserResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String password;
        private String project;
        private List<String> redisAclCategories;
        private List<String> redisAclChannels;
        private List<String> redisAclCommands;
        private List<String> redisAclKeys;
        private String serviceName;
        private String type;
        private String username;
        public Builder() {}
        public Builder(GetRedisUserResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.password = defaults.password;
    	      this.project = defaults.project;
    	      this.redisAclCategories = defaults.redisAclCategories;
    	      this.redisAclChannels = defaults.redisAclChannels;
    	      this.redisAclCommands = defaults.redisAclCommands;
    	      this.redisAclKeys = defaults.redisAclKeys;
    	      this.serviceName = defaults.serviceName;
    	      this.type = defaults.type;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRedisUserResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            if (password == null) {
              throw new MissingRequiredPropertyException("GetRedisUserResult", "password");
            }
            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            if (project == null) {
              throw new MissingRequiredPropertyException("GetRedisUserResult", "project");
            }
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder redisAclCategories(List<String> redisAclCategories) {
            if (redisAclCategories == null) {
              throw new MissingRequiredPropertyException("GetRedisUserResult", "redisAclCategories");
            }
            this.redisAclCategories = redisAclCategories;
            return this;
        }
        public Builder redisAclCategories(String... redisAclCategories) {
            return redisAclCategories(List.of(redisAclCategories));
        }
        @CustomType.Setter
        public Builder redisAclChannels(List<String> redisAclChannels) {
            if (redisAclChannels == null) {
              throw new MissingRequiredPropertyException("GetRedisUserResult", "redisAclChannels");
            }
            this.redisAclChannels = redisAclChannels;
            return this;
        }
        public Builder redisAclChannels(String... redisAclChannels) {
            return redisAclChannels(List.of(redisAclChannels));
        }
        @CustomType.Setter
        public Builder redisAclCommands(List<String> redisAclCommands) {
            if (redisAclCommands == null) {
              throw new MissingRequiredPropertyException("GetRedisUserResult", "redisAclCommands");
            }
            this.redisAclCommands = redisAclCommands;
            return this;
        }
        public Builder redisAclCommands(String... redisAclCommands) {
            return redisAclCommands(List.of(redisAclCommands));
        }
        @CustomType.Setter
        public Builder redisAclKeys(List<String> redisAclKeys) {
            if (redisAclKeys == null) {
              throw new MissingRequiredPropertyException("GetRedisUserResult", "redisAclKeys");
            }
            this.redisAclKeys = redisAclKeys;
            return this;
        }
        public Builder redisAclKeys(String... redisAclKeys) {
            return redisAclKeys(List.of(redisAclKeys));
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            if (serviceName == null) {
              throw new MissingRequiredPropertyException("GetRedisUserResult", "serviceName");
            }
            this.serviceName = serviceName;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetRedisUserResult", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            if (username == null) {
              throw new MissingRequiredPropertyException("GetRedisUserResult", "username");
            }
            this.username = username;
            return this;
        }
        public GetRedisUserResult build() {
            final var _resultValue = new GetRedisUserResult();
            _resultValue.id = id;
            _resultValue.password = password;
            _resultValue.project = project;
            _resultValue.redisAclCategories = redisAclCategories;
            _resultValue.redisAclChannels = redisAclChannels;
            _resultValue.redisAclCommands = redisAclCommands;
            _resultValue.redisAclKeys = redisAclKeys;
            _resultValue.serviceName = serviceName;
            _resultValue.type = type;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}
