// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceIntegrationEndpointExternalKafkaUserConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceIntegrationEndpointExternalKafkaUserConfigArgs Empty = new ServiceIntegrationEndpointExternalKafkaUserConfigArgs();

    @Import(name="bootstrapServers")
    private @Nullable Output<String> bootstrapServers;

    public Optional<Output<String>> bootstrapServers() {
        return Optional.ofNullable(this.bootstrapServers);
    }

    @Import(name="saslMechanism")
    private @Nullable Output<String> saslMechanism;

    public Optional<Output<String>> saslMechanism() {
        return Optional.ofNullable(this.saslMechanism);
    }

    @Import(name="saslPlainPassword")
    private @Nullable Output<String> saslPlainPassword;

    public Optional<Output<String>> saslPlainPassword() {
        return Optional.ofNullable(this.saslPlainPassword);
    }

    @Import(name="saslPlainUsername")
    private @Nullable Output<String> saslPlainUsername;

    public Optional<Output<String>> saslPlainUsername() {
        return Optional.ofNullable(this.saslPlainUsername);
    }

    @Import(name="securityProtocol")
    private @Nullable Output<String> securityProtocol;

    public Optional<Output<String>> securityProtocol() {
        return Optional.ofNullable(this.securityProtocol);
    }

    @Import(name="sslCaCert")
    private @Nullable Output<String> sslCaCert;

    public Optional<Output<String>> sslCaCert() {
        return Optional.ofNullable(this.sslCaCert);
    }

    @Import(name="sslClientCert")
    private @Nullable Output<String> sslClientCert;

    public Optional<Output<String>> sslClientCert() {
        return Optional.ofNullable(this.sslClientCert);
    }

    @Import(name="sslClientKey")
    private @Nullable Output<String> sslClientKey;

    public Optional<Output<String>> sslClientKey() {
        return Optional.ofNullable(this.sslClientKey);
    }

    @Import(name="sslEndpointIdentificationAlgorithm")
    private @Nullable Output<String> sslEndpointIdentificationAlgorithm;

    public Optional<Output<String>> sslEndpointIdentificationAlgorithm() {
        return Optional.ofNullable(this.sslEndpointIdentificationAlgorithm);
    }

    private ServiceIntegrationEndpointExternalKafkaUserConfigArgs() {}

    private ServiceIntegrationEndpointExternalKafkaUserConfigArgs(ServiceIntegrationEndpointExternalKafkaUserConfigArgs $) {
        this.bootstrapServers = $.bootstrapServers;
        this.saslMechanism = $.saslMechanism;
        this.saslPlainPassword = $.saslPlainPassword;
        this.saslPlainUsername = $.saslPlainUsername;
        this.securityProtocol = $.securityProtocol;
        this.sslCaCert = $.sslCaCert;
        this.sslClientCert = $.sslClientCert;
        this.sslClientKey = $.sslClientKey;
        this.sslEndpointIdentificationAlgorithm = $.sslEndpointIdentificationAlgorithm;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceIntegrationEndpointExternalKafkaUserConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceIntegrationEndpointExternalKafkaUserConfigArgs $;

        public Builder() {
            $ = new ServiceIntegrationEndpointExternalKafkaUserConfigArgs();
        }

        public Builder(ServiceIntegrationEndpointExternalKafkaUserConfigArgs defaults) {
            $ = new ServiceIntegrationEndpointExternalKafkaUserConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder bootstrapServers(@Nullable Output<String> bootstrapServers) {
            $.bootstrapServers = bootstrapServers;
            return this;
        }

        public Builder bootstrapServers(String bootstrapServers) {
            return bootstrapServers(Output.of(bootstrapServers));
        }

        public Builder saslMechanism(@Nullable Output<String> saslMechanism) {
            $.saslMechanism = saslMechanism;
            return this;
        }

        public Builder saslMechanism(String saslMechanism) {
            return saslMechanism(Output.of(saslMechanism));
        }

        public Builder saslPlainPassword(@Nullable Output<String> saslPlainPassword) {
            $.saslPlainPassword = saslPlainPassword;
            return this;
        }

        public Builder saslPlainPassword(String saslPlainPassword) {
            return saslPlainPassword(Output.of(saslPlainPassword));
        }

        public Builder saslPlainUsername(@Nullable Output<String> saslPlainUsername) {
            $.saslPlainUsername = saslPlainUsername;
            return this;
        }

        public Builder saslPlainUsername(String saslPlainUsername) {
            return saslPlainUsername(Output.of(saslPlainUsername));
        }

        public Builder securityProtocol(@Nullable Output<String> securityProtocol) {
            $.securityProtocol = securityProtocol;
            return this;
        }

        public Builder securityProtocol(String securityProtocol) {
            return securityProtocol(Output.of(securityProtocol));
        }

        public Builder sslCaCert(@Nullable Output<String> sslCaCert) {
            $.sslCaCert = sslCaCert;
            return this;
        }

        public Builder sslCaCert(String sslCaCert) {
            return sslCaCert(Output.of(sslCaCert));
        }

        public Builder sslClientCert(@Nullable Output<String> sslClientCert) {
            $.sslClientCert = sslClientCert;
            return this;
        }

        public Builder sslClientCert(String sslClientCert) {
            return sslClientCert(Output.of(sslClientCert));
        }

        public Builder sslClientKey(@Nullable Output<String> sslClientKey) {
            $.sslClientKey = sslClientKey;
            return this;
        }

        public Builder sslClientKey(String sslClientKey) {
            return sslClientKey(Output.of(sslClientKey));
        }

        public Builder sslEndpointIdentificationAlgorithm(@Nullable Output<String> sslEndpointIdentificationAlgorithm) {
            $.sslEndpointIdentificationAlgorithm = sslEndpointIdentificationAlgorithm;
            return this;
        }

        public Builder sslEndpointIdentificationAlgorithm(String sslEndpointIdentificationAlgorithm) {
            return sslEndpointIdentificationAlgorithm(Output.of(sslEndpointIdentificationAlgorithm));
        }

        public ServiceIntegrationEndpointExternalKafkaUserConfigArgs build() {
            return $;
        }
    }

}
