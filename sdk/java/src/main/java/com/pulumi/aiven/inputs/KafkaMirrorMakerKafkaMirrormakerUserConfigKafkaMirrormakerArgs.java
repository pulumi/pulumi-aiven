// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs extends com.pulumi.resources.ResourceArgs {

    public static final KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs Empty = new KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs();

    @Import(name="emitCheckpointsEnabled")
    private @Nullable Output<String> emitCheckpointsEnabled;

    public Optional<Output<String>> emitCheckpointsEnabled() {
        return Optional.ofNullable(this.emitCheckpointsEnabled);
    }

    @Import(name="emitCheckpointsIntervalSeconds")
    private @Nullable Output<String> emitCheckpointsIntervalSeconds;

    public Optional<Output<String>> emitCheckpointsIntervalSeconds() {
        return Optional.ofNullable(this.emitCheckpointsIntervalSeconds);
    }

    @Import(name="refreshGroupsEnabled")
    private @Nullable Output<String> refreshGroupsEnabled;

    public Optional<Output<String>> refreshGroupsEnabled() {
        return Optional.ofNullable(this.refreshGroupsEnabled);
    }

    @Import(name="refreshGroupsIntervalSeconds")
    private @Nullable Output<String> refreshGroupsIntervalSeconds;

    public Optional<Output<String>> refreshGroupsIntervalSeconds() {
        return Optional.ofNullable(this.refreshGroupsIntervalSeconds);
    }

    @Import(name="refreshTopicsEnabled")
    private @Nullable Output<String> refreshTopicsEnabled;

    public Optional<Output<String>> refreshTopicsEnabled() {
        return Optional.ofNullable(this.refreshTopicsEnabled);
    }

    @Import(name="refreshTopicsIntervalSeconds")
    private @Nullable Output<String> refreshTopicsIntervalSeconds;

    public Optional<Output<String>> refreshTopicsIntervalSeconds() {
        return Optional.ofNullable(this.refreshTopicsIntervalSeconds);
    }

    @Import(name="syncGroupOffsetsEnabled")
    private @Nullable Output<String> syncGroupOffsetsEnabled;

    public Optional<Output<String>> syncGroupOffsetsEnabled() {
        return Optional.ofNullable(this.syncGroupOffsetsEnabled);
    }

    @Import(name="syncGroupOffsetsIntervalSeconds")
    private @Nullable Output<String> syncGroupOffsetsIntervalSeconds;

    public Optional<Output<String>> syncGroupOffsetsIntervalSeconds() {
        return Optional.ofNullable(this.syncGroupOffsetsIntervalSeconds);
    }

    @Import(name="syncTopicConfigsEnabled")
    private @Nullable Output<String> syncTopicConfigsEnabled;

    public Optional<Output<String>> syncTopicConfigsEnabled() {
        return Optional.ofNullable(this.syncTopicConfigsEnabled);
    }

    @Import(name="tasksMaxPerCpu")
    private @Nullable Output<String> tasksMaxPerCpu;

    public Optional<Output<String>> tasksMaxPerCpu() {
        return Optional.ofNullable(this.tasksMaxPerCpu);
    }

    private KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs() {}

    private KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs(KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs $) {
        this.emitCheckpointsEnabled = $.emitCheckpointsEnabled;
        this.emitCheckpointsIntervalSeconds = $.emitCheckpointsIntervalSeconds;
        this.refreshGroupsEnabled = $.refreshGroupsEnabled;
        this.refreshGroupsIntervalSeconds = $.refreshGroupsIntervalSeconds;
        this.refreshTopicsEnabled = $.refreshTopicsEnabled;
        this.refreshTopicsIntervalSeconds = $.refreshTopicsIntervalSeconds;
        this.syncGroupOffsetsEnabled = $.syncGroupOffsetsEnabled;
        this.syncGroupOffsetsIntervalSeconds = $.syncGroupOffsetsIntervalSeconds;
        this.syncTopicConfigsEnabled = $.syncTopicConfigsEnabled;
        this.tasksMaxPerCpu = $.tasksMaxPerCpu;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs $;

        public Builder() {
            $ = new KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs();
        }

        public Builder(KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs defaults) {
            $ = new KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs(Objects.requireNonNull(defaults));
        }

        public Builder emitCheckpointsEnabled(@Nullable Output<String> emitCheckpointsEnabled) {
            $.emitCheckpointsEnabled = emitCheckpointsEnabled;
            return this;
        }

        public Builder emitCheckpointsEnabled(String emitCheckpointsEnabled) {
            return emitCheckpointsEnabled(Output.of(emitCheckpointsEnabled));
        }

        public Builder emitCheckpointsIntervalSeconds(@Nullable Output<String> emitCheckpointsIntervalSeconds) {
            $.emitCheckpointsIntervalSeconds = emitCheckpointsIntervalSeconds;
            return this;
        }

        public Builder emitCheckpointsIntervalSeconds(String emitCheckpointsIntervalSeconds) {
            return emitCheckpointsIntervalSeconds(Output.of(emitCheckpointsIntervalSeconds));
        }

        public Builder refreshGroupsEnabled(@Nullable Output<String> refreshGroupsEnabled) {
            $.refreshGroupsEnabled = refreshGroupsEnabled;
            return this;
        }

        public Builder refreshGroupsEnabled(String refreshGroupsEnabled) {
            return refreshGroupsEnabled(Output.of(refreshGroupsEnabled));
        }

        public Builder refreshGroupsIntervalSeconds(@Nullable Output<String> refreshGroupsIntervalSeconds) {
            $.refreshGroupsIntervalSeconds = refreshGroupsIntervalSeconds;
            return this;
        }

        public Builder refreshGroupsIntervalSeconds(String refreshGroupsIntervalSeconds) {
            return refreshGroupsIntervalSeconds(Output.of(refreshGroupsIntervalSeconds));
        }

        public Builder refreshTopicsEnabled(@Nullable Output<String> refreshTopicsEnabled) {
            $.refreshTopicsEnabled = refreshTopicsEnabled;
            return this;
        }

        public Builder refreshTopicsEnabled(String refreshTopicsEnabled) {
            return refreshTopicsEnabled(Output.of(refreshTopicsEnabled));
        }

        public Builder refreshTopicsIntervalSeconds(@Nullable Output<String> refreshTopicsIntervalSeconds) {
            $.refreshTopicsIntervalSeconds = refreshTopicsIntervalSeconds;
            return this;
        }

        public Builder refreshTopicsIntervalSeconds(String refreshTopicsIntervalSeconds) {
            return refreshTopicsIntervalSeconds(Output.of(refreshTopicsIntervalSeconds));
        }

        public Builder syncGroupOffsetsEnabled(@Nullable Output<String> syncGroupOffsetsEnabled) {
            $.syncGroupOffsetsEnabled = syncGroupOffsetsEnabled;
            return this;
        }

        public Builder syncGroupOffsetsEnabled(String syncGroupOffsetsEnabled) {
            return syncGroupOffsetsEnabled(Output.of(syncGroupOffsetsEnabled));
        }

        public Builder syncGroupOffsetsIntervalSeconds(@Nullable Output<String> syncGroupOffsetsIntervalSeconds) {
            $.syncGroupOffsetsIntervalSeconds = syncGroupOffsetsIntervalSeconds;
            return this;
        }

        public Builder syncGroupOffsetsIntervalSeconds(String syncGroupOffsetsIntervalSeconds) {
            return syncGroupOffsetsIntervalSeconds(Output.of(syncGroupOffsetsIntervalSeconds));
        }

        public Builder syncTopicConfigsEnabled(@Nullable Output<String> syncTopicConfigsEnabled) {
            $.syncTopicConfigsEnabled = syncTopicConfigsEnabled;
            return this;
        }

        public Builder syncTopicConfigsEnabled(String syncTopicConfigsEnabled) {
            return syncTopicConfigsEnabled(Output.of(syncTopicConfigsEnabled));
        }

        public Builder tasksMaxPerCpu(@Nullable Output<String> tasksMaxPerCpu) {
            $.tasksMaxPerCpu = tasksMaxPerCpu;
            return this;
        }

        public Builder tasksMaxPerCpu(String tasksMaxPerCpu) {
            return tasksMaxPerCpu(Output.of(tasksMaxPerCpu));
        }

        public KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs build() {
            return $;
        }
    }

}
