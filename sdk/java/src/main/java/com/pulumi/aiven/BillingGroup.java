// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.aiven.BillingGroupArgs;
import com.pulumi.aiven.Utilities;
import com.pulumi.aiven.inputs.BillingGroupState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The Billing Group resource allows the creation and management of Aiven Billing Groups and association with the Projects.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aiven.BillingGroup;
 * import com.pulumi.aiven.BillingGroupArgs;
 * import com.pulumi.aiven.Project;
 * import com.pulumi.aiven.ProjectArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var bybg1 = new BillingGroup(&#34;bybg1&#34;, BillingGroupArgs.builder()        
 *             .billingCurrency(&#34;USD&#34;)
 *             .vatId(&#34;123ABC&#34;)
 *             .build());
 * 
 *         var pr1 = new Project(&#34;pr1&#34;, ProjectArgs.builder()        
 *             .project(&#34;pr1&#34;)
 *             .billingGroup(bybg1.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * ```sh
 *  $ pulumi import aiven:index/billingGroup:BillingGroup bybg1 id
 * ```
 * 
 */
@ResourceType(type="aiven:index/billingGroup:BillingGroup")
public class BillingGroup extends com.pulumi.resources.CustomResource {
    /**
     * Account id
     * 
     * @deprecated
     * Use parent_id instead. This field will be removed in the next major release.
     * 
     */
    @Deprecated /* Use parent_id instead. This field will be removed in the next major release. */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> accountId;

    /**
     * @return Account id
     * 
     */
    public Output<Optional<String>> accountId() {
        return Codegen.optional(this.accountId);
    }
    /**
     * Address lines
     * 
     */
    @Export(name="addressLines", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> addressLines;

    /**
     * @return Address lines
     * 
     */
    public Output<Optional<List<String>>> addressLines() {
        return Codegen.optional(this.addressLines);
    }
    /**
     * Billing currency
     * 
     */
    @Export(name="billingCurrency", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> billingCurrency;

    /**
     * @return Billing currency
     * 
     */
    public Output<Optional<String>> billingCurrency() {
        return Codegen.optional(this.billingCurrency);
    }
    /**
     * Billing contact emails
     * 
     */
    @Export(name="billingEmails", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> billingEmails;

    /**
     * @return Billing contact emails
     * 
     */
    public Output<Optional<List<String>>> billingEmails() {
        return Codegen.optional(this.billingEmails);
    }
    /**
     * Billing extra text
     * 
     */
    @Export(name="billingExtraText", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> billingExtraText;

    /**
     * @return Billing extra text
     * 
     */
    public Output<Optional<String>> billingExtraText() {
        return Codegen.optional(this.billingExtraText);
    }
    /**
     * Credit card id
     * 
     */
    @Export(name="cardId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> cardId;

    /**
     * @return Credit card id
     * 
     */
    public Output<Optional<String>> cardId() {
        return Codegen.optional(this.cardId);
    }
    /**
     * City
     * 
     */
    @Export(name="city", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> city;

    /**
     * @return City
     * 
     */
    public Output<Optional<String>> city() {
        return Codegen.optional(this.city);
    }
    /**
     * Company name
     * 
     */
    @Export(name="company", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> company;

    /**
     * @return Company name
     * 
     */
    public Output<Optional<String>> company() {
        return Codegen.optional(this.company);
    }
    /**
     * ID of the billing group to copy from
     * 
     */
    @Export(name="copyFromBillingGroup", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> copyFromBillingGroup;

    /**
     * @return ID of the billing group to copy from
     * 
     */
    public Output<Optional<String>> copyFromBillingGroup() {
        return Codegen.optional(this.copyFromBillingGroup);
    }
    /**
     * Country code
     * 
     */
    @Export(name="countryCode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> countryCode;

    /**
     * @return Country code
     * 
     */
    public Output<Optional<String>> countryCode() {
        return Codegen.optional(this.countryCode);
    }
    /**
     * Billing Group name
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Billing Group name
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * An optional property to link a billing group to an already existing organization or account by using its ID. To set up proper dependencies please refer to this variable as a reference.
     * 
     */
    @Export(name="parentId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> parentId;

    /**
     * @return An optional property to link a billing group to an already existing organization or account by using its ID. To set up proper dependencies please refer to this variable as a reference.
     * 
     */
    public Output<Optional<String>> parentId() {
        return Codegen.optional(this.parentId);
    }
    /**
     * State
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> state;

    /**
     * @return State
     * 
     */
    public Output<Optional<String>> state() {
        return Codegen.optional(this.state);
    }
    /**
     * VAT id
     * 
     */
    @Export(name="vatId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vatId;

    /**
     * @return VAT id
     * 
     */
    public Output<Optional<String>> vatId() {
        return Codegen.optional(this.vatId);
    }
    /**
     * Zip Code
     * 
     */
    @Export(name="zipCode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> zipCode;

    /**
     * @return Zip Code
     * 
     */
    public Output<Optional<String>> zipCode() {
        return Codegen.optional(this.zipCode);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BillingGroup(String name) {
        this(name, BillingGroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BillingGroup(String name, @Nullable BillingGroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BillingGroup(String name, @Nullable BillingGroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aiven:index/billingGroup:BillingGroup", name, args == null ? BillingGroupArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private BillingGroup(String name, Output<String> id, @Nullable BillingGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aiven:index/billingGroup:BillingGroup", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BillingGroup get(String name, Output<String> id, @Nullable BillingGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BillingGroup(name, id, state, options);
    }
}
