// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPgPgUserConfigPgbouncer {
    private final @Nullable String autodbIdleTimeout;
    private final @Nullable String autodbMaxDbConnections;
    private final @Nullable String autodbPoolMode;
    private final @Nullable String autodbPoolSize;
    private final @Nullable List<String> ignoreStartupParameters;
    private final @Nullable String minPoolSize;
    private final @Nullable String serverIdleTimeout;
    private final @Nullable String serverLifetime;
    private final @Nullable String serverResetQueryAlways;

    @CustomType.Constructor
    private GetPgPgUserConfigPgbouncer(
        @CustomType.Parameter("autodbIdleTimeout") @Nullable String autodbIdleTimeout,
        @CustomType.Parameter("autodbMaxDbConnections") @Nullable String autodbMaxDbConnections,
        @CustomType.Parameter("autodbPoolMode") @Nullable String autodbPoolMode,
        @CustomType.Parameter("autodbPoolSize") @Nullable String autodbPoolSize,
        @CustomType.Parameter("ignoreStartupParameters") @Nullable List<String> ignoreStartupParameters,
        @CustomType.Parameter("minPoolSize") @Nullable String minPoolSize,
        @CustomType.Parameter("serverIdleTimeout") @Nullable String serverIdleTimeout,
        @CustomType.Parameter("serverLifetime") @Nullable String serverLifetime,
        @CustomType.Parameter("serverResetQueryAlways") @Nullable String serverResetQueryAlways) {
        this.autodbIdleTimeout = autodbIdleTimeout;
        this.autodbMaxDbConnections = autodbMaxDbConnections;
        this.autodbPoolMode = autodbPoolMode;
        this.autodbPoolSize = autodbPoolSize;
        this.ignoreStartupParameters = ignoreStartupParameters;
        this.minPoolSize = minPoolSize;
        this.serverIdleTimeout = serverIdleTimeout;
        this.serverLifetime = serverLifetime;
        this.serverResetQueryAlways = serverResetQueryAlways;
    }

    public Optional<String> autodbIdleTimeout() {
        return Optional.ofNullable(this.autodbIdleTimeout);
    }
    public Optional<String> autodbMaxDbConnections() {
        return Optional.ofNullable(this.autodbMaxDbConnections);
    }
    public Optional<String> autodbPoolMode() {
        return Optional.ofNullable(this.autodbPoolMode);
    }
    public Optional<String> autodbPoolSize() {
        return Optional.ofNullable(this.autodbPoolSize);
    }
    public List<String> ignoreStartupParameters() {
        return this.ignoreStartupParameters == null ? List.of() : this.ignoreStartupParameters;
    }
    public Optional<String> minPoolSize() {
        return Optional.ofNullable(this.minPoolSize);
    }
    public Optional<String> serverIdleTimeout() {
        return Optional.ofNullable(this.serverIdleTimeout);
    }
    public Optional<String> serverLifetime() {
        return Optional.ofNullable(this.serverLifetime);
    }
    public Optional<String> serverResetQueryAlways() {
        return Optional.ofNullable(this.serverResetQueryAlways);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPgPgUserConfigPgbouncer defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String autodbIdleTimeout;
        private @Nullable String autodbMaxDbConnections;
        private @Nullable String autodbPoolMode;
        private @Nullable String autodbPoolSize;
        private @Nullable List<String> ignoreStartupParameters;
        private @Nullable String minPoolSize;
        private @Nullable String serverIdleTimeout;
        private @Nullable String serverLifetime;
        private @Nullable String serverResetQueryAlways;

        public Builder() {
    	      // Empty
        }

        public Builder(GetPgPgUserConfigPgbouncer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autodbIdleTimeout = defaults.autodbIdleTimeout;
    	      this.autodbMaxDbConnections = defaults.autodbMaxDbConnections;
    	      this.autodbPoolMode = defaults.autodbPoolMode;
    	      this.autodbPoolSize = defaults.autodbPoolSize;
    	      this.ignoreStartupParameters = defaults.ignoreStartupParameters;
    	      this.minPoolSize = defaults.minPoolSize;
    	      this.serverIdleTimeout = defaults.serverIdleTimeout;
    	      this.serverLifetime = defaults.serverLifetime;
    	      this.serverResetQueryAlways = defaults.serverResetQueryAlways;
        }

        public Builder autodbIdleTimeout(@Nullable String autodbIdleTimeout) {
            this.autodbIdleTimeout = autodbIdleTimeout;
            return this;
        }
        public Builder autodbMaxDbConnections(@Nullable String autodbMaxDbConnections) {
            this.autodbMaxDbConnections = autodbMaxDbConnections;
            return this;
        }
        public Builder autodbPoolMode(@Nullable String autodbPoolMode) {
            this.autodbPoolMode = autodbPoolMode;
            return this;
        }
        public Builder autodbPoolSize(@Nullable String autodbPoolSize) {
            this.autodbPoolSize = autodbPoolSize;
            return this;
        }
        public Builder ignoreStartupParameters(@Nullable List<String> ignoreStartupParameters) {
            this.ignoreStartupParameters = ignoreStartupParameters;
            return this;
        }
        public Builder ignoreStartupParameters(String... ignoreStartupParameters) {
            return ignoreStartupParameters(List.of(ignoreStartupParameters));
        }
        public Builder minPoolSize(@Nullable String minPoolSize) {
            this.minPoolSize = minPoolSize;
            return this;
        }
        public Builder serverIdleTimeout(@Nullable String serverIdleTimeout) {
            this.serverIdleTimeout = serverIdleTimeout;
            return this;
        }
        public Builder serverLifetime(@Nullable String serverLifetime) {
            this.serverLifetime = serverLifetime;
            return this;
        }
        public Builder serverResetQueryAlways(@Nullable String serverResetQueryAlways) {
            this.serverResetQueryAlways = serverResetQueryAlways;
            return this;
        }        public GetPgPgUserConfigPgbouncer build() {
            return new GetPgPgUserConfigPgbouncer(autodbIdleTimeout, autodbMaxDbConnections, autodbPoolMode, autodbPoolSize, ignoreStartupParameters, minPoolSize, serverIdleTimeout, serverLifetime, serverResetQueryAlways);
        }
    }
}
