// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetServiceComponentResult {
    private final String component;
    private final String host;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final @Nullable String kafkaAuthenticationMethod;
    private final Integer port;
    private final String project;
    private final @Nullable String route;
    private final @Nullable String serviceName;
    private final @Nullable Boolean ssl;
    private final @Nullable String usage;

    @CustomType.Constructor
    private GetServiceComponentResult(
        @CustomType.Parameter("component") String component,
        @CustomType.Parameter("host") String host,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("kafkaAuthenticationMethod") @Nullable String kafkaAuthenticationMethod,
        @CustomType.Parameter("port") Integer port,
        @CustomType.Parameter("project") String project,
        @CustomType.Parameter("route") @Nullable String route,
        @CustomType.Parameter("serviceName") @Nullable String serviceName,
        @CustomType.Parameter("ssl") @Nullable Boolean ssl,
        @CustomType.Parameter("usage") @Nullable String usage) {
        this.component = component;
        this.host = host;
        this.id = id;
        this.kafkaAuthenticationMethod = kafkaAuthenticationMethod;
        this.port = port;
        this.project = project;
        this.route = route;
        this.serviceName = serviceName;
        this.ssl = ssl;
        this.usage = usage;
    }

    public String component() {
        return this.component;
    }
    public String host() {
        return this.host;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> kafkaAuthenticationMethod() {
        return Optional.ofNullable(this.kafkaAuthenticationMethod);
    }
    public Integer port() {
        return this.port;
    }
    public String project() {
        return this.project;
    }
    public Optional<String> route() {
        return Optional.ofNullable(this.route);
    }
    public Optional<String> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }
    public Optional<Boolean> ssl() {
        return Optional.ofNullable(this.ssl);
    }
    public Optional<String> usage() {
        return Optional.ofNullable(this.usage);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceComponentResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String component;
        private String host;
        private String id;
        private @Nullable String kafkaAuthenticationMethod;
        private Integer port;
        private String project;
        private @Nullable String route;
        private @Nullable String serviceName;
        private @Nullable Boolean ssl;
        private @Nullable String usage;

        public Builder() {
    	      // Empty
        }

        public Builder(GetServiceComponentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.component = defaults.component;
    	      this.host = defaults.host;
    	      this.id = defaults.id;
    	      this.kafkaAuthenticationMethod = defaults.kafkaAuthenticationMethod;
    	      this.port = defaults.port;
    	      this.project = defaults.project;
    	      this.route = defaults.route;
    	      this.serviceName = defaults.serviceName;
    	      this.ssl = defaults.ssl;
    	      this.usage = defaults.usage;
        }

        public Builder component(String component) {
            this.component = Objects.requireNonNull(component);
            return this;
        }
        public Builder host(String host) {
            this.host = Objects.requireNonNull(host);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder kafkaAuthenticationMethod(@Nullable String kafkaAuthenticationMethod) {
            this.kafkaAuthenticationMethod = kafkaAuthenticationMethod;
            return this;
        }
        public Builder port(Integer port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }
        public Builder project(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }
        public Builder route(@Nullable String route) {
            this.route = route;
            return this;
        }
        public Builder serviceName(@Nullable String serviceName) {
            this.serviceName = serviceName;
            return this;
        }
        public Builder ssl(@Nullable Boolean ssl) {
            this.ssl = ssl;
            return this;
        }
        public Builder usage(@Nullable String usage) {
            this.usage = usage;
            return this;
        }        public GetServiceComponentResult build() {
            return new GetServiceComponentResult(component, host, id, kafkaAuthenticationMethod, port, project, route, serviceName, ssl, usage);
        }
    }
}
