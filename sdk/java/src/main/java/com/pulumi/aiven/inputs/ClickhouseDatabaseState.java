// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClickhouseDatabaseState extends com.pulumi.resources.ResourceArgs {

    public static final ClickhouseDatabaseState Empty = new ClickhouseDatabaseState();

    /**
     * The name of the Clickhouse database. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Clickhouse database. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
     * reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
     * reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this
     * variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this
     * variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * It is a Terraform client-side deletion protections, which prevents the Clickhouse database from being deleted by
     * Terraform. It is recommended to enable this for any production Clickhouse databases containing critical data. The
     * default value is `false`.
     * 
     */
    @Import(name="terminationProtection")
    private @Nullable Output<Boolean> terminationProtection;

    /**
     * @return It is a Terraform client-side deletion protections, which prevents the Clickhouse database from being deleted by
     * Terraform. It is recommended to enable this for any production Clickhouse databases containing critical data. The
     * default value is `false`.
     * 
     */
    public Optional<Output<Boolean>> terminationProtection() {
        return Optional.ofNullable(this.terminationProtection);
    }

    private ClickhouseDatabaseState() {}

    private ClickhouseDatabaseState(ClickhouseDatabaseState $) {
        this.name = $.name;
        this.project = $.project;
        this.serviceName = $.serviceName;
        this.terminationProtection = $.terminationProtection;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClickhouseDatabaseState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClickhouseDatabaseState $;

        public Builder() {
            $ = new ClickhouseDatabaseState();
        }

        public Builder(ClickhouseDatabaseState defaults) {
            $ = new ClickhouseDatabaseState(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the Clickhouse database. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Clickhouse database. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
         * reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
         * reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param serviceName Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this
         * variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this
         * variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param terminationProtection It is a Terraform client-side deletion protections, which prevents the Clickhouse database from being deleted by
         * Terraform. It is recommended to enable this for any production Clickhouse databases containing critical data. The
         * default value is `false`.
         * 
         * @return builder
         * 
         */
        public Builder terminationProtection(@Nullable Output<Boolean> terminationProtection) {
            $.terminationProtection = terminationProtection;
            return this;
        }

        /**
         * @param terminationProtection It is a Terraform client-side deletion protections, which prevents the Clickhouse database from being deleted by
         * Terraform. It is recommended to enable this for any production Clickhouse databases containing critical data. The
         * default value is `false`.
         * 
         * @return builder
         * 
         */
        public Builder terminationProtection(Boolean terminationProtection) {
            return terminationProtection(Output.of(terminationProtection));
        }

        public ClickhouseDatabaseState build() {
            return $;
        }
    }

}
