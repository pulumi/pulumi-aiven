// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StaticIpState extends com.pulumi.resources.ResourceArgs {

    public static final StaticIpState Empty = new StaticIpState();

    /**
     * Specifies the cloud that the static ip belongs to. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="cloudName")
    private @Nullable Output<String> cloudName;

    /**
     * @return Specifies the cloud that the static ip belongs to. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> cloudName() {
        return Optional.ofNullable(this.cloudName);
    }

    /**
     * The address of the static ip
     * 
     */
    @Import(name="ipAddress")
    private @Nullable Output<String> ipAddress;

    /**
     * @return The address of the static ip
     * 
     */
    public Optional<Output<String>> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }

    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The service name the static ip is associated with.
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return The service name the static ip is associated with.
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * The state the static ip is in.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The state the static ip is in.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The static ip id of the resource. Should be used as a reference elsewhere.
     * 
     */
    @Import(name="staticIpAddressId")
    private @Nullable Output<String> staticIpAddressId;

    /**
     * @return The static ip id of the resource. Should be used as a reference elsewhere.
     * 
     */
    public Optional<Output<String>> staticIpAddressId() {
        return Optional.ofNullable(this.staticIpAddressId);
    }

    private StaticIpState() {}

    private StaticIpState(StaticIpState $) {
        this.cloudName = $.cloudName;
        this.ipAddress = $.ipAddress;
        this.project = $.project;
        this.serviceName = $.serviceName;
        this.state = $.state;
        this.staticIpAddressId = $.staticIpAddressId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StaticIpState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StaticIpState $;

        public Builder() {
            $ = new StaticIpState();
        }

        public Builder(StaticIpState defaults) {
            $ = new StaticIpState(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudName Specifies the cloud that the static ip belongs to. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder cloudName(@Nullable Output<String> cloudName) {
            $.cloudName = cloudName;
            return this;
        }

        /**
         * @param cloudName Specifies the cloud that the static ip belongs to. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder cloudName(String cloudName) {
            return cloudName(Output.of(cloudName));
        }

        /**
         * @param ipAddress The address of the static ip
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(@Nullable Output<String> ipAddress) {
            $.ipAddress = ipAddress;
            return this;
        }

        /**
         * @param ipAddress The address of the static ip
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(String ipAddress) {
            return ipAddress(Output.of(ipAddress));
        }

        /**
         * @param project Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param serviceName The service name the static ip is associated with.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The service name the static ip is associated with.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param state The state the static ip is in.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The state the static ip is in.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param staticIpAddressId The static ip id of the resource. Should be used as a reference elsewhere.
         * 
         * @return builder
         * 
         */
        public Builder staticIpAddressId(@Nullable Output<String> staticIpAddressId) {
            $.staticIpAddressId = staticIpAddressId;
            return this;
        }

        /**
         * @param staticIpAddressId The static ip id of the resource. Should be used as a reference elsewhere.
         * 
         * @return builder
         * 
         */
        public Builder staticIpAddressId(String staticIpAddressId) {
            return staticIpAddressId(Output.of(staticIpAddressId));
        }

        public StaticIpState build() {
            return $;
        }
    }

}
