// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ValkeyValkeyUserConfigPrivateAccessArgs extends com.pulumi.resources.ResourceArgs {

    public static final ValkeyValkeyUserConfigPrivateAccessArgs Empty = new ValkeyValkeyUserConfigPrivateAccessArgs();

    /**
     * Allow clients to connect to prometheus with a DNS name that always resolves to the service&#39;s private IP addresses. Only available in certain network locations.
     * 
     */
    @Import(name="prometheus")
    private @Nullable Output<Boolean> prometheus;

    /**
     * @return Allow clients to connect to prometheus with a DNS name that always resolves to the service&#39;s private IP addresses. Only available in certain network locations.
     * 
     */
    public Optional<Output<Boolean>> prometheus() {
        return Optional.ofNullable(this.prometheus);
    }

    /**
     * Allow clients to connect to valkey with a DNS name that always resolves to the service&#39;s private IP addresses. Only available in certain network locations.
     * 
     */
    @Import(name="valkey")
    private @Nullable Output<Boolean> valkey;

    /**
     * @return Allow clients to connect to valkey with a DNS name that always resolves to the service&#39;s private IP addresses. Only available in certain network locations.
     * 
     */
    public Optional<Output<Boolean>> valkey() {
        return Optional.ofNullable(this.valkey);
    }

    private ValkeyValkeyUserConfigPrivateAccessArgs() {}

    private ValkeyValkeyUserConfigPrivateAccessArgs(ValkeyValkeyUserConfigPrivateAccessArgs $) {
        this.prometheus = $.prometheus;
        this.valkey = $.valkey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ValkeyValkeyUserConfigPrivateAccessArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ValkeyValkeyUserConfigPrivateAccessArgs $;

        public Builder() {
            $ = new ValkeyValkeyUserConfigPrivateAccessArgs();
        }

        public Builder(ValkeyValkeyUserConfigPrivateAccessArgs defaults) {
            $ = new ValkeyValkeyUserConfigPrivateAccessArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param prometheus Allow clients to connect to prometheus with a DNS name that always resolves to the service&#39;s private IP addresses. Only available in certain network locations.
         * 
         * @return builder
         * 
         */
        public Builder prometheus(@Nullable Output<Boolean> prometheus) {
            $.prometheus = prometheus;
            return this;
        }

        /**
         * @param prometheus Allow clients to connect to prometheus with a DNS name that always resolves to the service&#39;s private IP addresses. Only available in certain network locations.
         * 
         * @return builder
         * 
         */
        public Builder prometheus(Boolean prometheus) {
            return prometheus(Output.of(prometheus));
        }

        /**
         * @param valkey Allow clients to connect to valkey with a DNS name that always resolves to the service&#39;s private IP addresses. Only available in certain network locations.
         * 
         * @return builder
         * 
         */
        public Builder valkey(@Nullable Output<Boolean> valkey) {
            $.valkey = valkey;
            return this;
        }

        /**
         * @param valkey Allow clients to connect to valkey with a DNS name that always resolves to the service&#39;s private IP addresses. Only available in certain network locations.
         * 
         * @return builder
         * 
         */
        public Builder valkey(Boolean valkey) {
            return valkey(Output.of(valkey));
        }

        public ValkeyValkeyUserConfigPrivateAccessArgs build() {
            return $;
        }
    }

}
