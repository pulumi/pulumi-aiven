// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetServiceIntegrationEndpointExternalClickhouseUserConfig {
    /**
     * @return Hostname or IP address of the server. Example: `my.server.com`.
     * 
     */
    private String host;
    /**
     * @return Password. Example: `jjKk45Nnd`.
     * 
     */
    private String password;
    /**
     * @return Secure TCP server port. Example: `9440`.
     * 
     */
    private Integer port;
    /**
     * @return User name. Example: `default`.
     * 
     */
    private String username;

    private GetServiceIntegrationEndpointExternalClickhouseUserConfig() {}
    /**
     * @return Hostname or IP address of the server. Example: `my.server.com`.
     * 
     */
    public String host() {
        return this.host;
    }
    /**
     * @return Password. Example: `jjKk45Nnd`.
     * 
     */
    public String password() {
        return this.password;
    }
    /**
     * @return Secure TCP server port. Example: `9440`.
     * 
     */
    public Integer port() {
        return this.port;
    }
    /**
     * @return User name. Example: `default`.
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceIntegrationEndpointExternalClickhouseUserConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String host;
        private String password;
        private Integer port;
        private String username;
        public Builder() {}
        public Builder(GetServiceIntegrationEndpointExternalClickhouseUserConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.host = defaults.host;
    	      this.password = defaults.password;
    	      this.port = defaults.port;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder host(String host) {
            if (host == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointExternalClickhouseUserConfig", "host");
            }
            this.host = host;
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            if (password == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointExternalClickhouseUserConfig", "password");
            }
            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointExternalClickhouseUserConfig", "port");
            }
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            if (username == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointExternalClickhouseUserConfig", "username");
            }
            this.username = username;
            return this;
        }
        public GetServiceIntegrationEndpointExternalClickhouseUserConfig build() {
            final var _resultValue = new GetServiceIntegrationEndpointExternalClickhouseUserConfig();
            _resultValue.host = host;
            _resultValue.password = password;
            _resultValue.port = port;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}
