// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetClickhouseClickhouseUserConfig {
    private @Nullable List<String> ipFilters;
    private @Nullable String projectToForkFrom;
    private @Nullable String serviceToForkFrom;

    private GetClickhouseClickhouseUserConfig() {}
    public List<String> ipFilters() {
        return this.ipFilters == null ? List.of() : this.ipFilters;
    }
    public Optional<String> projectToForkFrom() {
        return Optional.ofNullable(this.projectToForkFrom);
    }
    public Optional<String> serviceToForkFrom() {
        return Optional.ofNullable(this.serviceToForkFrom);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClickhouseClickhouseUserConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> ipFilters;
        private @Nullable String projectToForkFrom;
        private @Nullable String serviceToForkFrom;
        public Builder() {}
        public Builder(GetClickhouseClickhouseUserConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ipFilters = defaults.ipFilters;
    	      this.projectToForkFrom = defaults.projectToForkFrom;
    	      this.serviceToForkFrom = defaults.serviceToForkFrom;
        }

        @CustomType.Setter
        public Builder ipFilters(@Nullable List<String> ipFilters) {
            this.ipFilters = ipFilters;
            return this;
        }
        public Builder ipFilters(String... ipFilters) {
            return ipFilters(List.of(ipFilters));
        }
        @CustomType.Setter
        public Builder projectToForkFrom(@Nullable String projectToForkFrom) {
            this.projectToForkFrom = projectToForkFrom;
            return this;
        }
        @CustomType.Setter
        public Builder serviceToForkFrom(@Nullable String serviceToForkFrom) {
            this.serviceToForkFrom = serviceToForkFrom;
            return this;
        }
        public GetClickhouseClickhouseUserConfig build() {
            final var o = new GetClickhouseClickhouseUserConfig();
            o.ipFilters = ipFilters;
            o.projectToForkFrom = projectToForkFrom;
            o.serviceToForkFrom = serviceToForkFrom;
            return o;
        }
    }
}
