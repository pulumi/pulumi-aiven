// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.aiven.outputs.GetServiceIntegrationEndpointAutoscalerUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationEndpointDatadogUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationEndpointExternalAwsS3UserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationEndpointExternalClickhouseUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationEndpointExternalGoogleCloudBigquery;
import com.pulumi.aiven.outputs.GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationEndpointExternalKafkaUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationEndpointExternalMysqlUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationEndpointExternalOpensearchLogsUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationEndpointExternalPostgresql;
import com.pulumi.aiven.outputs.GetServiceIntegrationEndpointExternalPrometheusUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationEndpointExternalSchemaRegistryUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationEndpointJolokiaUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationEndpointPrometheusUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationEndpointRsyslogUserConfig;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetServiceIntegrationEndpointResult {
    /**
     * @return Autoscaler user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationEndpointAutoscalerUserConfig> autoscalerUserConfigs;
    /**
     * @return Datadog user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationEndpointDatadogUserConfig> datadogUserConfigs;
    /**
     * @return Backend configuration for the endpoint.
     * 
     */
    private Map<String,String> endpointConfig;
    /**
     * @return Name of the service integration endpoint.
     * 
     */
    private String endpointName;
    /**
     * @return The type of service integration endpoint. The possible values are `autoscaler`, `datadog`, `external_aws_cloudwatch_logs`, `external_aws_cloudwatch_metrics`, `external_aws_s3`, `external_clickhouse`, `external_elasticsearch_logs`, `external_google_cloud_bigquery`, `external_google_cloud_logging`, `external_kafka`, `external_mysql`, `external_opensearch_logs`, `external_postgresql`, `external_prometheus`, `external_redis`, `external_schema_registry`, `external_sumologic_logs`, `jolokia`, `prometheus` and `rsyslog`.
     * 
     */
    private String endpointType;
    /**
     * @return ExternalAwsCloudwatchLogs user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig> externalAwsCloudwatchLogsUserConfigs;
    /**
     * @return ExternalAwsCloudwatchMetrics user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig> externalAwsCloudwatchMetricsUserConfigs;
    /**
     * @return ExternalAwsS3 user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationEndpointExternalAwsS3UserConfig> externalAwsS3UserConfigs;
    /**
     * @return ExternalClickhouse user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationEndpointExternalClickhouseUserConfig> externalClickhouseUserConfigs;
    /**
     * @return ExternalElasticsearchLogs user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfig> externalElasticsearchLogsUserConfigs;
    /**
     * @return ExternalGoogleCloudBigquery user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationEndpointExternalGoogleCloudBigquery> externalGoogleCloudBigqueries;
    /**
     * @return ExternalGoogleCloudLogging user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig> externalGoogleCloudLoggingUserConfigs;
    /**
     * @return ExternalKafka user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationEndpointExternalKafkaUserConfig> externalKafkaUserConfigs;
    /**
     * @return ExternalMysql user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationEndpointExternalMysqlUserConfig> externalMysqlUserConfigs;
    /**
     * @return ExternalOpensearchLogs user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationEndpointExternalOpensearchLogsUserConfig> externalOpensearchLogsUserConfigs;
    /**
     * @return ExternalPostgresql user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationEndpointExternalPostgresql> externalPostgresqls;
    /**
     * @return ExternalPrometheus user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationEndpointExternalPrometheusUserConfig> externalPrometheusUserConfigs;
    /**
     * @return ExternalSchemaRegistry user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationEndpointExternalSchemaRegistryUserConfig> externalSchemaRegistryUserConfigs;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Jolokia user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationEndpointJolokiaUserConfig> jolokiaUserConfigs;
    /**
     * @return Project the service integration endpoint is in.
     * 
     */
    private String project;
    /**
     * @return Prometheus user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationEndpointPrometheusUserConfig> prometheusUserConfigs;
    /**
     * @return Rsyslog user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationEndpointRsyslogUserConfig> rsyslogUserConfigs;

    private GetServiceIntegrationEndpointResult() {}
    /**
     * @return Autoscaler user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationEndpointAutoscalerUserConfig> autoscalerUserConfigs() {
        return this.autoscalerUserConfigs;
    }
    /**
     * @return Datadog user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationEndpointDatadogUserConfig> datadogUserConfigs() {
        return this.datadogUserConfigs;
    }
    /**
     * @return Backend configuration for the endpoint.
     * 
     */
    public Map<String,String> endpointConfig() {
        return this.endpointConfig;
    }
    /**
     * @return Name of the service integration endpoint.
     * 
     */
    public String endpointName() {
        return this.endpointName;
    }
    /**
     * @return The type of service integration endpoint. The possible values are `autoscaler`, `datadog`, `external_aws_cloudwatch_logs`, `external_aws_cloudwatch_metrics`, `external_aws_s3`, `external_clickhouse`, `external_elasticsearch_logs`, `external_google_cloud_bigquery`, `external_google_cloud_logging`, `external_kafka`, `external_mysql`, `external_opensearch_logs`, `external_postgresql`, `external_prometheus`, `external_redis`, `external_schema_registry`, `external_sumologic_logs`, `jolokia`, `prometheus` and `rsyslog`.
     * 
     */
    public String endpointType() {
        return this.endpointType;
    }
    /**
     * @return ExternalAwsCloudwatchLogs user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig> externalAwsCloudwatchLogsUserConfigs() {
        return this.externalAwsCloudwatchLogsUserConfigs;
    }
    /**
     * @return ExternalAwsCloudwatchMetrics user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig> externalAwsCloudwatchMetricsUserConfigs() {
        return this.externalAwsCloudwatchMetricsUserConfigs;
    }
    /**
     * @return ExternalAwsS3 user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationEndpointExternalAwsS3UserConfig> externalAwsS3UserConfigs() {
        return this.externalAwsS3UserConfigs;
    }
    /**
     * @return ExternalClickhouse user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationEndpointExternalClickhouseUserConfig> externalClickhouseUserConfigs() {
        return this.externalClickhouseUserConfigs;
    }
    /**
     * @return ExternalElasticsearchLogs user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfig> externalElasticsearchLogsUserConfigs() {
        return this.externalElasticsearchLogsUserConfigs;
    }
    /**
     * @return ExternalGoogleCloudBigquery user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationEndpointExternalGoogleCloudBigquery> externalGoogleCloudBigqueries() {
        return this.externalGoogleCloudBigqueries;
    }
    /**
     * @return ExternalGoogleCloudLogging user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig> externalGoogleCloudLoggingUserConfigs() {
        return this.externalGoogleCloudLoggingUserConfigs;
    }
    /**
     * @return ExternalKafka user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationEndpointExternalKafkaUserConfig> externalKafkaUserConfigs() {
        return this.externalKafkaUserConfigs;
    }
    /**
     * @return ExternalMysql user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationEndpointExternalMysqlUserConfig> externalMysqlUserConfigs() {
        return this.externalMysqlUserConfigs;
    }
    /**
     * @return ExternalOpensearchLogs user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationEndpointExternalOpensearchLogsUserConfig> externalOpensearchLogsUserConfigs() {
        return this.externalOpensearchLogsUserConfigs;
    }
    /**
     * @return ExternalPostgresql user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationEndpointExternalPostgresql> externalPostgresqls() {
        return this.externalPostgresqls;
    }
    /**
     * @return ExternalPrometheus user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationEndpointExternalPrometheusUserConfig> externalPrometheusUserConfigs() {
        return this.externalPrometheusUserConfigs;
    }
    /**
     * @return ExternalSchemaRegistry user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationEndpointExternalSchemaRegistryUserConfig> externalSchemaRegistryUserConfigs() {
        return this.externalSchemaRegistryUserConfigs;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Jolokia user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationEndpointJolokiaUserConfig> jolokiaUserConfigs() {
        return this.jolokiaUserConfigs;
    }
    /**
     * @return Project the service integration endpoint is in.
     * 
     */
    public String project() {
        return this.project;
    }
    /**
     * @return Prometheus user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationEndpointPrometheusUserConfig> prometheusUserConfigs() {
        return this.prometheusUserConfigs;
    }
    /**
     * @return Rsyslog user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationEndpointRsyslogUserConfig> rsyslogUserConfigs() {
        return this.rsyslogUserConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceIntegrationEndpointResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetServiceIntegrationEndpointAutoscalerUserConfig> autoscalerUserConfigs;
        private List<GetServiceIntegrationEndpointDatadogUserConfig> datadogUserConfigs;
        private Map<String,String> endpointConfig;
        private String endpointName;
        private String endpointType;
        private List<GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig> externalAwsCloudwatchLogsUserConfigs;
        private List<GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig> externalAwsCloudwatchMetricsUserConfigs;
        private List<GetServiceIntegrationEndpointExternalAwsS3UserConfig> externalAwsS3UserConfigs;
        private List<GetServiceIntegrationEndpointExternalClickhouseUserConfig> externalClickhouseUserConfigs;
        private List<GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfig> externalElasticsearchLogsUserConfigs;
        private List<GetServiceIntegrationEndpointExternalGoogleCloudBigquery> externalGoogleCloudBigqueries;
        private List<GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig> externalGoogleCloudLoggingUserConfigs;
        private List<GetServiceIntegrationEndpointExternalKafkaUserConfig> externalKafkaUserConfigs;
        private List<GetServiceIntegrationEndpointExternalMysqlUserConfig> externalMysqlUserConfigs;
        private List<GetServiceIntegrationEndpointExternalOpensearchLogsUserConfig> externalOpensearchLogsUserConfigs;
        private List<GetServiceIntegrationEndpointExternalPostgresql> externalPostgresqls;
        private List<GetServiceIntegrationEndpointExternalPrometheusUserConfig> externalPrometheusUserConfigs;
        private List<GetServiceIntegrationEndpointExternalSchemaRegistryUserConfig> externalSchemaRegistryUserConfigs;
        private String id;
        private List<GetServiceIntegrationEndpointJolokiaUserConfig> jolokiaUserConfigs;
        private String project;
        private List<GetServiceIntegrationEndpointPrometheusUserConfig> prometheusUserConfigs;
        private List<GetServiceIntegrationEndpointRsyslogUserConfig> rsyslogUserConfigs;
        public Builder() {}
        public Builder(GetServiceIntegrationEndpointResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoscalerUserConfigs = defaults.autoscalerUserConfigs;
    	      this.datadogUserConfigs = defaults.datadogUserConfigs;
    	      this.endpointConfig = defaults.endpointConfig;
    	      this.endpointName = defaults.endpointName;
    	      this.endpointType = defaults.endpointType;
    	      this.externalAwsCloudwatchLogsUserConfigs = defaults.externalAwsCloudwatchLogsUserConfigs;
    	      this.externalAwsCloudwatchMetricsUserConfigs = defaults.externalAwsCloudwatchMetricsUserConfigs;
    	      this.externalAwsS3UserConfigs = defaults.externalAwsS3UserConfigs;
    	      this.externalClickhouseUserConfigs = defaults.externalClickhouseUserConfigs;
    	      this.externalElasticsearchLogsUserConfigs = defaults.externalElasticsearchLogsUserConfigs;
    	      this.externalGoogleCloudBigqueries = defaults.externalGoogleCloudBigqueries;
    	      this.externalGoogleCloudLoggingUserConfigs = defaults.externalGoogleCloudLoggingUserConfigs;
    	      this.externalKafkaUserConfigs = defaults.externalKafkaUserConfigs;
    	      this.externalMysqlUserConfigs = defaults.externalMysqlUserConfigs;
    	      this.externalOpensearchLogsUserConfigs = defaults.externalOpensearchLogsUserConfigs;
    	      this.externalPostgresqls = defaults.externalPostgresqls;
    	      this.externalPrometheusUserConfigs = defaults.externalPrometheusUserConfigs;
    	      this.externalSchemaRegistryUserConfigs = defaults.externalSchemaRegistryUserConfigs;
    	      this.id = defaults.id;
    	      this.jolokiaUserConfigs = defaults.jolokiaUserConfigs;
    	      this.project = defaults.project;
    	      this.prometheusUserConfigs = defaults.prometheusUserConfigs;
    	      this.rsyslogUserConfigs = defaults.rsyslogUserConfigs;
        }

        @CustomType.Setter
        public Builder autoscalerUserConfigs(List<GetServiceIntegrationEndpointAutoscalerUserConfig> autoscalerUserConfigs) {
            if (autoscalerUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointResult", "autoscalerUserConfigs");
            }
            this.autoscalerUserConfigs = autoscalerUserConfigs;
            return this;
        }
        public Builder autoscalerUserConfigs(GetServiceIntegrationEndpointAutoscalerUserConfig... autoscalerUserConfigs) {
            return autoscalerUserConfigs(List.of(autoscalerUserConfigs));
        }
        @CustomType.Setter
        public Builder datadogUserConfigs(List<GetServiceIntegrationEndpointDatadogUserConfig> datadogUserConfigs) {
            if (datadogUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointResult", "datadogUserConfigs");
            }
            this.datadogUserConfigs = datadogUserConfigs;
            return this;
        }
        public Builder datadogUserConfigs(GetServiceIntegrationEndpointDatadogUserConfig... datadogUserConfigs) {
            return datadogUserConfigs(List.of(datadogUserConfigs));
        }
        @CustomType.Setter
        public Builder endpointConfig(Map<String,String> endpointConfig) {
            if (endpointConfig == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointResult", "endpointConfig");
            }
            this.endpointConfig = endpointConfig;
            return this;
        }
        @CustomType.Setter
        public Builder endpointName(String endpointName) {
            if (endpointName == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointResult", "endpointName");
            }
            this.endpointName = endpointName;
            return this;
        }
        @CustomType.Setter
        public Builder endpointType(String endpointType) {
            if (endpointType == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointResult", "endpointType");
            }
            this.endpointType = endpointType;
            return this;
        }
        @CustomType.Setter
        public Builder externalAwsCloudwatchLogsUserConfigs(List<GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig> externalAwsCloudwatchLogsUserConfigs) {
            if (externalAwsCloudwatchLogsUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointResult", "externalAwsCloudwatchLogsUserConfigs");
            }
            this.externalAwsCloudwatchLogsUserConfigs = externalAwsCloudwatchLogsUserConfigs;
            return this;
        }
        public Builder externalAwsCloudwatchLogsUserConfigs(GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig... externalAwsCloudwatchLogsUserConfigs) {
            return externalAwsCloudwatchLogsUserConfigs(List.of(externalAwsCloudwatchLogsUserConfigs));
        }
        @CustomType.Setter
        public Builder externalAwsCloudwatchMetricsUserConfigs(List<GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig> externalAwsCloudwatchMetricsUserConfigs) {
            if (externalAwsCloudwatchMetricsUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointResult", "externalAwsCloudwatchMetricsUserConfigs");
            }
            this.externalAwsCloudwatchMetricsUserConfigs = externalAwsCloudwatchMetricsUserConfigs;
            return this;
        }
        public Builder externalAwsCloudwatchMetricsUserConfigs(GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig... externalAwsCloudwatchMetricsUserConfigs) {
            return externalAwsCloudwatchMetricsUserConfigs(List.of(externalAwsCloudwatchMetricsUserConfigs));
        }
        @CustomType.Setter
        public Builder externalAwsS3UserConfigs(List<GetServiceIntegrationEndpointExternalAwsS3UserConfig> externalAwsS3UserConfigs) {
            if (externalAwsS3UserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointResult", "externalAwsS3UserConfigs");
            }
            this.externalAwsS3UserConfigs = externalAwsS3UserConfigs;
            return this;
        }
        public Builder externalAwsS3UserConfigs(GetServiceIntegrationEndpointExternalAwsS3UserConfig... externalAwsS3UserConfigs) {
            return externalAwsS3UserConfigs(List.of(externalAwsS3UserConfigs));
        }
        @CustomType.Setter
        public Builder externalClickhouseUserConfigs(List<GetServiceIntegrationEndpointExternalClickhouseUserConfig> externalClickhouseUserConfigs) {
            if (externalClickhouseUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointResult", "externalClickhouseUserConfigs");
            }
            this.externalClickhouseUserConfigs = externalClickhouseUserConfigs;
            return this;
        }
        public Builder externalClickhouseUserConfigs(GetServiceIntegrationEndpointExternalClickhouseUserConfig... externalClickhouseUserConfigs) {
            return externalClickhouseUserConfigs(List.of(externalClickhouseUserConfigs));
        }
        @CustomType.Setter
        public Builder externalElasticsearchLogsUserConfigs(List<GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfig> externalElasticsearchLogsUserConfigs) {
            if (externalElasticsearchLogsUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointResult", "externalElasticsearchLogsUserConfigs");
            }
            this.externalElasticsearchLogsUserConfigs = externalElasticsearchLogsUserConfigs;
            return this;
        }
        public Builder externalElasticsearchLogsUserConfigs(GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfig... externalElasticsearchLogsUserConfigs) {
            return externalElasticsearchLogsUserConfigs(List.of(externalElasticsearchLogsUserConfigs));
        }
        @CustomType.Setter
        public Builder externalGoogleCloudBigqueries(List<GetServiceIntegrationEndpointExternalGoogleCloudBigquery> externalGoogleCloudBigqueries) {
            if (externalGoogleCloudBigqueries == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointResult", "externalGoogleCloudBigqueries");
            }
            this.externalGoogleCloudBigqueries = externalGoogleCloudBigqueries;
            return this;
        }
        public Builder externalGoogleCloudBigqueries(GetServiceIntegrationEndpointExternalGoogleCloudBigquery... externalGoogleCloudBigqueries) {
            return externalGoogleCloudBigqueries(List.of(externalGoogleCloudBigqueries));
        }
        @CustomType.Setter
        public Builder externalGoogleCloudLoggingUserConfigs(List<GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig> externalGoogleCloudLoggingUserConfigs) {
            if (externalGoogleCloudLoggingUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointResult", "externalGoogleCloudLoggingUserConfigs");
            }
            this.externalGoogleCloudLoggingUserConfigs = externalGoogleCloudLoggingUserConfigs;
            return this;
        }
        public Builder externalGoogleCloudLoggingUserConfigs(GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig... externalGoogleCloudLoggingUserConfigs) {
            return externalGoogleCloudLoggingUserConfigs(List.of(externalGoogleCloudLoggingUserConfigs));
        }
        @CustomType.Setter
        public Builder externalKafkaUserConfigs(List<GetServiceIntegrationEndpointExternalKafkaUserConfig> externalKafkaUserConfigs) {
            if (externalKafkaUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointResult", "externalKafkaUserConfigs");
            }
            this.externalKafkaUserConfigs = externalKafkaUserConfigs;
            return this;
        }
        public Builder externalKafkaUserConfigs(GetServiceIntegrationEndpointExternalKafkaUserConfig... externalKafkaUserConfigs) {
            return externalKafkaUserConfigs(List.of(externalKafkaUserConfigs));
        }
        @CustomType.Setter
        public Builder externalMysqlUserConfigs(List<GetServiceIntegrationEndpointExternalMysqlUserConfig> externalMysqlUserConfigs) {
            if (externalMysqlUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointResult", "externalMysqlUserConfigs");
            }
            this.externalMysqlUserConfigs = externalMysqlUserConfigs;
            return this;
        }
        public Builder externalMysqlUserConfigs(GetServiceIntegrationEndpointExternalMysqlUserConfig... externalMysqlUserConfigs) {
            return externalMysqlUserConfigs(List.of(externalMysqlUserConfigs));
        }
        @CustomType.Setter
        public Builder externalOpensearchLogsUserConfigs(List<GetServiceIntegrationEndpointExternalOpensearchLogsUserConfig> externalOpensearchLogsUserConfigs) {
            if (externalOpensearchLogsUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointResult", "externalOpensearchLogsUserConfigs");
            }
            this.externalOpensearchLogsUserConfigs = externalOpensearchLogsUserConfigs;
            return this;
        }
        public Builder externalOpensearchLogsUserConfigs(GetServiceIntegrationEndpointExternalOpensearchLogsUserConfig... externalOpensearchLogsUserConfigs) {
            return externalOpensearchLogsUserConfigs(List.of(externalOpensearchLogsUserConfigs));
        }
        @CustomType.Setter
        public Builder externalPostgresqls(List<GetServiceIntegrationEndpointExternalPostgresql> externalPostgresqls) {
            if (externalPostgresqls == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointResult", "externalPostgresqls");
            }
            this.externalPostgresqls = externalPostgresqls;
            return this;
        }
        public Builder externalPostgresqls(GetServiceIntegrationEndpointExternalPostgresql... externalPostgresqls) {
            return externalPostgresqls(List.of(externalPostgresqls));
        }
        @CustomType.Setter
        public Builder externalPrometheusUserConfigs(List<GetServiceIntegrationEndpointExternalPrometheusUserConfig> externalPrometheusUserConfigs) {
            if (externalPrometheusUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointResult", "externalPrometheusUserConfigs");
            }
            this.externalPrometheusUserConfigs = externalPrometheusUserConfigs;
            return this;
        }
        public Builder externalPrometheusUserConfigs(GetServiceIntegrationEndpointExternalPrometheusUserConfig... externalPrometheusUserConfigs) {
            return externalPrometheusUserConfigs(List.of(externalPrometheusUserConfigs));
        }
        @CustomType.Setter
        public Builder externalSchemaRegistryUserConfigs(List<GetServiceIntegrationEndpointExternalSchemaRegistryUserConfig> externalSchemaRegistryUserConfigs) {
            if (externalSchemaRegistryUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointResult", "externalSchemaRegistryUserConfigs");
            }
            this.externalSchemaRegistryUserConfigs = externalSchemaRegistryUserConfigs;
            return this;
        }
        public Builder externalSchemaRegistryUserConfigs(GetServiceIntegrationEndpointExternalSchemaRegistryUserConfig... externalSchemaRegistryUserConfigs) {
            return externalSchemaRegistryUserConfigs(List.of(externalSchemaRegistryUserConfigs));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder jolokiaUserConfigs(List<GetServiceIntegrationEndpointJolokiaUserConfig> jolokiaUserConfigs) {
            if (jolokiaUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointResult", "jolokiaUserConfigs");
            }
            this.jolokiaUserConfigs = jolokiaUserConfigs;
            return this;
        }
        public Builder jolokiaUserConfigs(GetServiceIntegrationEndpointJolokiaUserConfig... jolokiaUserConfigs) {
            return jolokiaUserConfigs(List.of(jolokiaUserConfigs));
        }
        @CustomType.Setter
        public Builder project(String project) {
            if (project == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointResult", "project");
            }
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder prometheusUserConfigs(List<GetServiceIntegrationEndpointPrometheusUserConfig> prometheusUserConfigs) {
            if (prometheusUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointResult", "prometheusUserConfigs");
            }
            this.prometheusUserConfigs = prometheusUserConfigs;
            return this;
        }
        public Builder prometheusUserConfigs(GetServiceIntegrationEndpointPrometheusUserConfig... prometheusUserConfigs) {
            return prometheusUserConfigs(List.of(prometheusUserConfigs));
        }
        @CustomType.Setter
        public Builder rsyslogUserConfigs(List<GetServiceIntegrationEndpointRsyslogUserConfig> rsyslogUserConfigs) {
            if (rsyslogUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointResult", "rsyslogUserConfigs");
            }
            this.rsyslogUserConfigs = rsyslogUserConfigs;
            return this;
        }
        public Builder rsyslogUserConfigs(GetServiceIntegrationEndpointRsyslogUserConfig... rsyslogUserConfigs) {
            return rsyslogUserConfigs(List.of(rsyslogUserConfigs));
        }
        public GetServiceIntegrationEndpointResult build() {
            final var _resultValue = new GetServiceIntegrationEndpointResult();
            _resultValue.autoscalerUserConfigs = autoscalerUserConfigs;
            _resultValue.datadogUserConfigs = datadogUserConfigs;
            _resultValue.endpointConfig = endpointConfig;
            _resultValue.endpointName = endpointName;
            _resultValue.endpointType = endpointType;
            _resultValue.externalAwsCloudwatchLogsUserConfigs = externalAwsCloudwatchLogsUserConfigs;
            _resultValue.externalAwsCloudwatchMetricsUserConfigs = externalAwsCloudwatchMetricsUserConfigs;
            _resultValue.externalAwsS3UserConfigs = externalAwsS3UserConfigs;
            _resultValue.externalClickhouseUserConfigs = externalClickhouseUserConfigs;
            _resultValue.externalElasticsearchLogsUserConfigs = externalElasticsearchLogsUserConfigs;
            _resultValue.externalGoogleCloudBigqueries = externalGoogleCloudBigqueries;
            _resultValue.externalGoogleCloudLoggingUserConfigs = externalGoogleCloudLoggingUserConfigs;
            _resultValue.externalKafkaUserConfigs = externalKafkaUserConfigs;
            _resultValue.externalMysqlUserConfigs = externalMysqlUserConfigs;
            _resultValue.externalOpensearchLogsUserConfigs = externalOpensearchLogsUserConfigs;
            _resultValue.externalPostgresqls = externalPostgresqls;
            _resultValue.externalPrometheusUserConfigs = externalPrometheusUserConfigs;
            _resultValue.externalSchemaRegistryUserConfigs = externalSchemaRegistryUserConfigs;
            _resultValue.id = id;
            _resultValue.jolokiaUserConfigs = jolokiaUserConfigs;
            _resultValue.project = project;
            _resultValue.prometheusUserConfigs = prometheusUserConfigs;
            _resultValue.rsyslogUserConfigs = rsyslogUserConfigs;
            return _resultValue;
        }
    }
}
