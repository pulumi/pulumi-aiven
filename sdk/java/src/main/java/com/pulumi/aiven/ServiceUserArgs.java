// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceUserArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceUserArgs Empty = new ServiceUserArgs();

    /**
     * Authentication details. The possible values are `caching_sha2_password` and `mysql_native_password`.
     * 
     */
    @Import(name="authentication")
    private @Nullable Output<String> authentication;

    /**
     * @return Authentication details. The possible values are `caching_sha2_password` and `mysql_native_password`.
     * 
     */
    public Optional<Output<String>> authentication() {
        return Optional.ofNullable(this.authentication);
    }

    /**
     * The password of the service user ( not applicable for all services ).
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return The password of the service user ( not applicable for all services ).
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * Postgres specific field, defines whether replication is allowed. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="pgAllowReplication")
    private @Nullable Output<Boolean> pgAllowReplication;

    /**
     * @return Postgres specific field, defines whether replication is allowed. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public Optional<Output<Boolean>> pgAllowReplication() {
        return Optional.ofNullable(this.pgAllowReplication);
    }

    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="project", required=true)
    private Output<String> project;

    /**
     * @return Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    /**
     * Redis specific field, defines command category rules. The field is required with`redis_acl_commands` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="redisAclCategories")
    private @Nullable Output<List<String>> redisAclCategories;

    /**
     * @return Redis specific field, defines command category rules. The field is required with`redis_acl_commands` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public Optional<Output<List<String>>> redisAclCategories() {
        return Optional.ofNullable(this.redisAclCategories);
    }

    /**
     * Redis specific field, defines the permitted pub/sub channel patterns. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="redisAclChannels")
    private @Nullable Output<List<String>> redisAclChannels;

    /**
     * @return Redis specific field, defines the permitted pub/sub channel patterns. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public Optional<Output<List<String>>> redisAclChannels() {
        return Optional.ofNullable(this.redisAclChannels);
    }

    /**
     * Redis specific field, defines rules for individual commands. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="redisAclCommands")
    private @Nullable Output<List<String>> redisAclCommands;

    /**
     * @return Redis specific field, defines rules for individual commands. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public Optional<Output<List<String>>> redisAclCommands() {
        return Optional.ofNullable(this.redisAclCommands);
    }

    /**
     * Redis specific field, defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="redisAclKeys")
    private @Nullable Output<List<String>> redisAclKeys;

    /**
     * @return Redis specific field, defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public Optional<Output<List<String>>> redisAclKeys() {
        return Optional.ofNullable(this.redisAclKeys);
    }

    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    /**
     * The actual name of the service user. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="username", required=true)
    private Output<String> username;

    /**
     * @return The actual name of the service user. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public Output<String> username() {
        return this.username;
    }

    private ServiceUserArgs() {}

    private ServiceUserArgs(ServiceUserArgs $) {
        this.authentication = $.authentication;
        this.password = $.password;
        this.pgAllowReplication = $.pgAllowReplication;
        this.project = $.project;
        this.redisAclCategories = $.redisAclCategories;
        this.redisAclChannels = $.redisAclChannels;
        this.redisAclCommands = $.redisAclCommands;
        this.redisAclKeys = $.redisAclKeys;
        this.serviceName = $.serviceName;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceUserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceUserArgs $;

        public Builder() {
            $ = new ServiceUserArgs();
        }

        public Builder(ServiceUserArgs defaults) {
            $ = new ServiceUserArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authentication Authentication details. The possible values are `caching_sha2_password` and `mysql_native_password`.
         * 
         * @return builder
         * 
         */
        public Builder authentication(@Nullable Output<String> authentication) {
            $.authentication = authentication;
            return this;
        }

        /**
         * @param authentication Authentication details. The possible values are `caching_sha2_password` and `mysql_native_password`.
         * 
         * @return builder
         * 
         */
        public Builder authentication(String authentication) {
            return authentication(Output.of(authentication));
        }

        /**
         * @param password The password of the service user ( not applicable for all services ).
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password The password of the service user ( not applicable for all services ).
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param pgAllowReplication Postgres specific field, defines whether replication is allowed. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder pgAllowReplication(@Nullable Output<Boolean> pgAllowReplication) {
            $.pgAllowReplication = pgAllowReplication;
            return this;
        }

        /**
         * @param pgAllowReplication Postgres specific field, defines whether replication is allowed. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder pgAllowReplication(Boolean pgAllowReplication) {
            return pgAllowReplication(Output.of(pgAllowReplication));
        }

        /**
         * @param project Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param redisAclCategories Redis specific field, defines command category rules. The field is required with`redis_acl_commands` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder redisAclCategories(@Nullable Output<List<String>> redisAclCategories) {
            $.redisAclCategories = redisAclCategories;
            return this;
        }

        /**
         * @param redisAclCategories Redis specific field, defines command category rules. The field is required with`redis_acl_commands` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder redisAclCategories(List<String> redisAclCategories) {
            return redisAclCategories(Output.of(redisAclCategories));
        }

        /**
         * @param redisAclCategories Redis specific field, defines command category rules. The field is required with`redis_acl_commands` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder redisAclCategories(String... redisAclCategories) {
            return redisAclCategories(List.of(redisAclCategories));
        }

        /**
         * @param redisAclChannels Redis specific field, defines the permitted pub/sub channel patterns. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder redisAclChannels(@Nullable Output<List<String>> redisAclChannels) {
            $.redisAclChannels = redisAclChannels;
            return this;
        }

        /**
         * @param redisAclChannels Redis specific field, defines the permitted pub/sub channel patterns. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder redisAclChannels(List<String> redisAclChannels) {
            return redisAclChannels(Output.of(redisAclChannels));
        }

        /**
         * @param redisAclChannels Redis specific field, defines the permitted pub/sub channel patterns. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder redisAclChannels(String... redisAclChannels) {
            return redisAclChannels(List.of(redisAclChannels));
        }

        /**
         * @param redisAclCommands Redis specific field, defines rules for individual commands. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder redisAclCommands(@Nullable Output<List<String>> redisAclCommands) {
            $.redisAclCommands = redisAclCommands;
            return this;
        }

        /**
         * @param redisAclCommands Redis specific field, defines rules for individual commands. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder redisAclCommands(List<String> redisAclCommands) {
            return redisAclCommands(Output.of(redisAclCommands));
        }

        /**
         * @param redisAclCommands Redis specific field, defines rules for individual commands. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder redisAclCommands(String... redisAclCommands) {
            return redisAclCommands(List.of(redisAclCommands));
        }

        /**
         * @param redisAclKeys Redis specific field, defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder redisAclKeys(@Nullable Output<List<String>> redisAclKeys) {
            $.redisAclKeys = redisAclKeys;
            return this;
        }

        /**
         * @param redisAclKeys Redis specific field, defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder redisAclKeys(List<String> redisAclKeys) {
            return redisAclKeys(Output.of(redisAclKeys));
        }

        /**
         * @param redisAclKeys Redis specific field, defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder redisAclKeys(String... redisAclKeys) {
            return redisAclKeys(List.of(redisAclKeys));
        }

        /**
         * @param serviceName Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param username The actual name of the service user. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder username(Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username The actual name of the service user. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public ServiceUserArgs build() {
            $.project = Objects.requireNonNull($.project, "expected parameter 'project' to be non-null");
            $.serviceName = Objects.requireNonNull($.serviceName, "expected parameter 'serviceName' to be non-null");
            $.username = Objects.requireNonNull($.username, "expected parameter 'username' to be non-null");
            return $;
        }
    }

}
