// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceIntegrationEndpointRsyslogUserConfig {
    /**
     * @return PEM encoded CA certificate. Example: `-----BEGIN CERTIFICATE-----
     * ...
     * -----END CERTIFICATE-----
     * `.
     * 
     */
    private @Nullable String ca;
    /**
     * @return PEM encoded client certificate. Example: `-----BEGIN CERTIFICATE-----
     * ...
     * -----END CERTIFICATE-----
     * `.
     * 
     */
    private @Nullable String cert;
    /**
     * @return Enum: `custom`, `rfc3164`, `rfc5424`. Message format. Default: `rfc5424`.
     * 
     */
    private String format;
    /**
     * @return PEM encoded client key. Example: `-----BEGIN PRIVATE KEY-----
     * ...
     * -----END PRIVATE KEY-----
     * `.
     * 
     */
    private @Nullable String key;
    /**
     * @return Custom syslog message format. Example: `&lt;%pri%&gt;%timestamp:::date-rfc3339% %HOSTNAME% %app-name% %msg%`.
     * 
     */
    private @Nullable String logline;
    /**
     * @return Rsyslog max message size. Default: `8192`.
     * 
     */
    private @Nullable Integer maxMessageSize;
    /**
     * @return Rsyslog server port. Default: `514`.
     * 
     */
    private Integer port;
    /**
     * @return Structured data block for log message. Example: `TOKEN tag=&#34;LiteralValue&#34;`.
     * 
     */
    private @Nullable String sd;
    /**
     * @return Rsyslog server IP address or hostname. Example: `logs.example.com`.
     * 
     */
    private String server;
    /**
     * @return Require TLS. Default: `true`.
     * 
     */
    private Boolean tls;

    private ServiceIntegrationEndpointRsyslogUserConfig() {}
    /**
     * @return PEM encoded CA certificate. Example: `-----BEGIN CERTIFICATE-----
     * ...
     * -----END CERTIFICATE-----
     * `.
     * 
     */
    public Optional<String> ca() {
        return Optional.ofNullable(this.ca);
    }
    /**
     * @return PEM encoded client certificate. Example: `-----BEGIN CERTIFICATE-----
     * ...
     * -----END CERTIFICATE-----
     * `.
     * 
     */
    public Optional<String> cert() {
        return Optional.ofNullable(this.cert);
    }
    /**
     * @return Enum: `custom`, `rfc3164`, `rfc5424`. Message format. Default: `rfc5424`.
     * 
     */
    public String format() {
        return this.format;
    }
    /**
     * @return PEM encoded client key. Example: `-----BEGIN PRIVATE KEY-----
     * ...
     * -----END PRIVATE KEY-----
     * `.
     * 
     */
    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }
    /**
     * @return Custom syslog message format. Example: `&lt;%pri%&gt;%timestamp:::date-rfc3339% %HOSTNAME% %app-name% %msg%`.
     * 
     */
    public Optional<String> logline() {
        return Optional.ofNullable(this.logline);
    }
    /**
     * @return Rsyslog max message size. Default: `8192`.
     * 
     */
    public Optional<Integer> maxMessageSize() {
        return Optional.ofNullable(this.maxMessageSize);
    }
    /**
     * @return Rsyslog server port. Default: `514`.
     * 
     */
    public Integer port() {
        return this.port;
    }
    /**
     * @return Structured data block for log message. Example: `TOKEN tag=&#34;LiteralValue&#34;`.
     * 
     */
    public Optional<String> sd() {
        return Optional.ofNullable(this.sd);
    }
    /**
     * @return Rsyslog server IP address or hostname. Example: `logs.example.com`.
     * 
     */
    public String server() {
        return this.server;
    }
    /**
     * @return Require TLS. Default: `true`.
     * 
     */
    public Boolean tls() {
        return this.tls;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceIntegrationEndpointRsyslogUserConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String ca;
        private @Nullable String cert;
        private String format;
        private @Nullable String key;
        private @Nullable String logline;
        private @Nullable Integer maxMessageSize;
        private Integer port;
        private @Nullable String sd;
        private String server;
        private Boolean tls;
        public Builder() {}
        public Builder(ServiceIntegrationEndpointRsyslogUserConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ca = defaults.ca;
    	      this.cert = defaults.cert;
    	      this.format = defaults.format;
    	      this.key = defaults.key;
    	      this.logline = defaults.logline;
    	      this.maxMessageSize = defaults.maxMessageSize;
    	      this.port = defaults.port;
    	      this.sd = defaults.sd;
    	      this.server = defaults.server;
    	      this.tls = defaults.tls;
        }

        @CustomType.Setter
        public Builder ca(@Nullable String ca) {

            this.ca = ca;
            return this;
        }
        @CustomType.Setter
        public Builder cert(@Nullable String cert) {

            this.cert = cert;
            return this;
        }
        @CustomType.Setter
        public Builder format(String format) {
            if (format == null) {
              throw new MissingRequiredPropertyException("ServiceIntegrationEndpointRsyslogUserConfig", "format");
            }
            this.format = format;
            return this;
        }
        @CustomType.Setter
        public Builder key(@Nullable String key) {

            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder logline(@Nullable String logline) {

            this.logline = logline;
            return this;
        }
        @CustomType.Setter
        public Builder maxMessageSize(@Nullable Integer maxMessageSize) {

            this.maxMessageSize = maxMessageSize;
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("ServiceIntegrationEndpointRsyslogUserConfig", "port");
            }
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder sd(@Nullable String sd) {

            this.sd = sd;
            return this;
        }
        @CustomType.Setter
        public Builder server(String server) {
            if (server == null) {
              throw new MissingRequiredPropertyException("ServiceIntegrationEndpointRsyslogUserConfig", "server");
            }
            this.server = server;
            return this;
        }
        @CustomType.Setter
        public Builder tls(Boolean tls) {
            if (tls == null) {
              throw new MissingRequiredPropertyException("ServiceIntegrationEndpointRsyslogUserConfig", "tls");
            }
            this.tls = tls;
            return this;
        }
        public ServiceIntegrationEndpointRsyslogUserConfig build() {
            final var _resultValue = new ServiceIntegrationEndpointRsyslogUserConfig();
            _resultValue.ca = ca;
            _resultValue.cert = cert;
            _resultValue.format = format;
            _resultValue.key = key;
            _resultValue.logline = logline;
            _resultValue.maxMessageSize = maxMessageSize;
            _resultValue.port = port;
            _resultValue.sd = sd;
            _resultValue.server = server;
            _resultValue.tls = tls;
            return _resultValue;
        }
    }
}
