// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetM3DbM3dbUserConfigLimits {
    /**
     * @return The maximum number of blocks that can be read in a given lookback period. Example: `20000`.
     * 
     */
    private @Nullable Integer maxRecentlyQueriedSeriesBlocks;
    /**
     * @return The maximum number of disk bytes that can be read in a given lookback period. Example: `104857600`.
     * 
     */
    private @Nullable Integer maxRecentlyQueriedSeriesDiskBytesRead;
    /**
     * @return The lookback period for `max_recently_queried_series_blocks` and `max_recently_queried_series_disk_bytes_read`. Example: `15s`.
     * 
     */
    private @Nullable String maxRecentlyQueriedSeriesLookback;
    /**
     * @return The maximum number of docs fetched in single query. Example: `100000`.
     * 
     */
    private @Nullable Integer queryDocs;
    /**
     * @return When query limits are exceeded, whether to return error or return partial results.
     * 
     */
    private @Nullable Boolean queryRequireExhaustive;
    /**
     * @return The maximum number of series fetched in single query. Example: `100000`.
     * 
     */
    private @Nullable Integer querySeries;

    private GetM3DbM3dbUserConfigLimits() {}
    /**
     * @return The maximum number of blocks that can be read in a given lookback period. Example: `20000`.
     * 
     */
    public Optional<Integer> maxRecentlyQueriedSeriesBlocks() {
        return Optional.ofNullable(this.maxRecentlyQueriedSeriesBlocks);
    }
    /**
     * @return The maximum number of disk bytes that can be read in a given lookback period. Example: `104857600`.
     * 
     */
    public Optional<Integer> maxRecentlyQueriedSeriesDiskBytesRead() {
        return Optional.ofNullable(this.maxRecentlyQueriedSeriesDiskBytesRead);
    }
    /**
     * @return The lookback period for `max_recently_queried_series_blocks` and `max_recently_queried_series_disk_bytes_read`. Example: `15s`.
     * 
     */
    public Optional<String> maxRecentlyQueriedSeriesLookback() {
        return Optional.ofNullable(this.maxRecentlyQueriedSeriesLookback);
    }
    /**
     * @return The maximum number of docs fetched in single query. Example: `100000`.
     * 
     */
    public Optional<Integer> queryDocs() {
        return Optional.ofNullable(this.queryDocs);
    }
    /**
     * @return When query limits are exceeded, whether to return error or return partial results.
     * 
     */
    public Optional<Boolean> queryRequireExhaustive() {
        return Optional.ofNullable(this.queryRequireExhaustive);
    }
    /**
     * @return The maximum number of series fetched in single query. Example: `100000`.
     * 
     */
    public Optional<Integer> querySeries() {
        return Optional.ofNullable(this.querySeries);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetM3DbM3dbUserConfigLimits defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer maxRecentlyQueriedSeriesBlocks;
        private @Nullable Integer maxRecentlyQueriedSeriesDiskBytesRead;
        private @Nullable String maxRecentlyQueriedSeriesLookback;
        private @Nullable Integer queryDocs;
        private @Nullable Boolean queryRequireExhaustive;
        private @Nullable Integer querySeries;
        public Builder() {}
        public Builder(GetM3DbM3dbUserConfigLimits defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxRecentlyQueriedSeriesBlocks = defaults.maxRecentlyQueriedSeriesBlocks;
    	      this.maxRecentlyQueriedSeriesDiskBytesRead = defaults.maxRecentlyQueriedSeriesDiskBytesRead;
    	      this.maxRecentlyQueriedSeriesLookback = defaults.maxRecentlyQueriedSeriesLookback;
    	      this.queryDocs = defaults.queryDocs;
    	      this.queryRequireExhaustive = defaults.queryRequireExhaustive;
    	      this.querySeries = defaults.querySeries;
        }

        @CustomType.Setter
        public Builder maxRecentlyQueriedSeriesBlocks(@Nullable Integer maxRecentlyQueriedSeriesBlocks) {

            this.maxRecentlyQueriedSeriesBlocks = maxRecentlyQueriedSeriesBlocks;
            return this;
        }
        @CustomType.Setter
        public Builder maxRecentlyQueriedSeriesDiskBytesRead(@Nullable Integer maxRecentlyQueriedSeriesDiskBytesRead) {

            this.maxRecentlyQueriedSeriesDiskBytesRead = maxRecentlyQueriedSeriesDiskBytesRead;
            return this;
        }
        @CustomType.Setter
        public Builder maxRecentlyQueriedSeriesLookback(@Nullable String maxRecentlyQueriedSeriesLookback) {

            this.maxRecentlyQueriedSeriesLookback = maxRecentlyQueriedSeriesLookback;
            return this;
        }
        @CustomType.Setter
        public Builder queryDocs(@Nullable Integer queryDocs) {

            this.queryDocs = queryDocs;
            return this;
        }
        @CustomType.Setter
        public Builder queryRequireExhaustive(@Nullable Boolean queryRequireExhaustive) {

            this.queryRequireExhaustive = queryRequireExhaustive;
            return this;
        }
        @CustomType.Setter
        public Builder querySeries(@Nullable Integer querySeries) {

            this.querySeries = querySeries;
            return this;
        }
        public GetM3DbM3dbUserConfigLimits build() {
            final var _resultValue = new GetM3DbM3dbUserConfigLimits();
            _resultValue.maxRecentlyQueriedSeriesBlocks = maxRecentlyQueriedSeriesBlocks;
            _resultValue.maxRecentlyQueriedSeriesDiskBytesRead = maxRecentlyQueriedSeriesDiskBytesRead;
            _resultValue.maxRecentlyQueriedSeriesLookback = maxRecentlyQueriedSeriesLookback;
            _resultValue.queryDocs = queryDocs;
            _resultValue.queryRequireExhaustive = queryRequireExhaustive;
            _resultValue.querySeries = querySeries;
            return _resultValue;
        }
    }
}
