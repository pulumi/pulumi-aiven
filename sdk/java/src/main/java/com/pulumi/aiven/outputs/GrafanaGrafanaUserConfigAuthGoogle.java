// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GrafanaGrafanaUserConfigAuthGoogle {
    /**
     * @return Automatically sign-up users on successful sign-in.
     * 
     */
    private @Nullable Boolean allowSignUp;
    /**
     * @return Domains allowed to sign-in to this Grafana.
     * 
     */
    private List<String> allowedDomains;
    /**
     * @return Client ID from provider. Example: `b1ba0bf54a4c2c0a1c29`.
     * 
     */
    private String clientId;
    /**
     * @return Client secret from provider. Example: `bfa6gea4f129076761dcba8ce5e1e406bd83af7b`.
     * 
     */
    private String clientSecret;

    private GrafanaGrafanaUserConfigAuthGoogle() {}
    /**
     * @return Automatically sign-up users on successful sign-in.
     * 
     */
    public Optional<Boolean> allowSignUp() {
        return Optional.ofNullable(this.allowSignUp);
    }
    /**
     * @return Domains allowed to sign-in to this Grafana.
     * 
     */
    public List<String> allowedDomains() {
        return this.allowedDomains;
    }
    /**
     * @return Client ID from provider. Example: `b1ba0bf54a4c2c0a1c29`.
     * 
     */
    public String clientId() {
        return this.clientId;
    }
    /**
     * @return Client secret from provider. Example: `bfa6gea4f129076761dcba8ce5e1e406bd83af7b`.
     * 
     */
    public String clientSecret() {
        return this.clientSecret;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GrafanaGrafanaUserConfigAuthGoogle defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean allowSignUp;
        private List<String> allowedDomains;
        private String clientId;
        private String clientSecret;
        public Builder() {}
        public Builder(GrafanaGrafanaUserConfigAuthGoogle defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowSignUp = defaults.allowSignUp;
    	      this.allowedDomains = defaults.allowedDomains;
    	      this.clientId = defaults.clientId;
    	      this.clientSecret = defaults.clientSecret;
        }

        @CustomType.Setter
        public Builder allowSignUp(@Nullable Boolean allowSignUp) {

            this.allowSignUp = allowSignUp;
            return this;
        }
        @CustomType.Setter
        public Builder allowedDomains(List<String> allowedDomains) {
            if (allowedDomains == null) {
              throw new MissingRequiredPropertyException("GrafanaGrafanaUserConfigAuthGoogle", "allowedDomains");
            }
            this.allowedDomains = allowedDomains;
            return this;
        }
        public Builder allowedDomains(String... allowedDomains) {
            return allowedDomains(List.of(allowedDomains));
        }
        @CustomType.Setter
        public Builder clientId(String clientId) {
            if (clientId == null) {
              throw new MissingRequiredPropertyException("GrafanaGrafanaUserConfigAuthGoogle", "clientId");
            }
            this.clientId = clientId;
            return this;
        }
        @CustomType.Setter
        public Builder clientSecret(String clientSecret) {
            if (clientSecret == null) {
              throw new MissingRequiredPropertyException("GrafanaGrafanaUserConfigAuthGoogle", "clientSecret");
            }
            this.clientSecret = clientSecret;
            return this;
        }
        public GrafanaGrafanaUserConfigAuthGoogle build() {
            final var _resultValue = new GrafanaGrafanaUserConfigAuthGoogle();
            _resultValue.allowSignUp = allowSignUp;
            _resultValue.allowedDomains = allowedDomains;
            _resultValue.clientId = clientId;
            _resultValue.clientSecret = clientSecret;
            return _resultValue;
        }
    }
}
