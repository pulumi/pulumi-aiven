// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetOpenSearchOpensearchUserConfigIndexPattern {
    /**
     * @return Maximum number of indexes to keep. Example: `3`.
     * 
     */
    private Integer maxIndexCount;
    /**
     * @return fnmatch pattern. Example: `logs_*_foo_*`.
     * 
     */
    private String pattern;
    /**
     * @return Enum: `alphabetical`, `creation_date`. Deletion sorting algorithm. Default: `creation_date`.
     * 
     */
    private @Nullable String sortingAlgorithm;

    private GetOpenSearchOpensearchUserConfigIndexPattern() {}
    /**
     * @return Maximum number of indexes to keep. Example: `3`.
     * 
     */
    public Integer maxIndexCount() {
        return this.maxIndexCount;
    }
    /**
     * @return fnmatch pattern. Example: `logs_*_foo_*`.
     * 
     */
    public String pattern() {
        return this.pattern;
    }
    /**
     * @return Enum: `alphabetical`, `creation_date`. Deletion sorting algorithm. Default: `creation_date`.
     * 
     */
    public Optional<String> sortingAlgorithm() {
        return Optional.ofNullable(this.sortingAlgorithm);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOpenSearchOpensearchUserConfigIndexPattern defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer maxIndexCount;
        private String pattern;
        private @Nullable String sortingAlgorithm;
        public Builder() {}
        public Builder(GetOpenSearchOpensearchUserConfigIndexPattern defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxIndexCount = defaults.maxIndexCount;
    	      this.pattern = defaults.pattern;
    	      this.sortingAlgorithm = defaults.sortingAlgorithm;
        }

        @CustomType.Setter
        public Builder maxIndexCount(Integer maxIndexCount) {
            if (maxIndexCount == null) {
              throw new MissingRequiredPropertyException("GetOpenSearchOpensearchUserConfigIndexPattern", "maxIndexCount");
            }
            this.maxIndexCount = maxIndexCount;
            return this;
        }
        @CustomType.Setter
        public Builder pattern(String pattern) {
            if (pattern == null) {
              throw new MissingRequiredPropertyException("GetOpenSearchOpensearchUserConfigIndexPattern", "pattern");
            }
            this.pattern = pattern;
            return this;
        }
        @CustomType.Setter
        public Builder sortingAlgorithm(@Nullable String sortingAlgorithm) {

            this.sortingAlgorithm = sortingAlgorithm;
            return this;
        }
        public GetOpenSearchOpensearchUserConfigIndexPattern build() {
            final var _resultValue = new GetOpenSearchOpensearchUserConfigIndexPattern();
            _resultValue.maxIndexCount = maxIndexCount;
            _resultValue.pattern = pattern;
            _resultValue.sortingAlgorithm = sortingAlgorithm;
            return _resultValue;
        }
    }
}
