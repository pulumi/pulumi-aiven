// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetKafkaSchemaConfigurationResult {
    private final String compatibilityLevel;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final String project;
    private final String schema;
    private final String schemaType;
    private final String serviceName;
    private final String subjectName;
    private final Integer version;

    @CustomType.Constructor
    private GetKafkaSchemaConfigurationResult(
        @CustomType.Parameter("compatibilityLevel") String compatibilityLevel,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("project") String project,
        @CustomType.Parameter("schema") String schema,
        @CustomType.Parameter("schemaType") String schemaType,
        @CustomType.Parameter("serviceName") String serviceName,
        @CustomType.Parameter("subjectName") String subjectName,
        @CustomType.Parameter("version") Integer version) {
        this.compatibilityLevel = compatibilityLevel;
        this.id = id;
        this.project = project;
        this.schema = schema;
        this.schemaType = schemaType;
        this.serviceName = serviceName;
        this.subjectName = subjectName;
        this.version = version;
    }

    public String compatibilityLevel() {
        return this.compatibilityLevel;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String project() {
        return this.project;
    }
    public String schema() {
        return this.schema;
    }
    public String schemaType() {
        return this.schemaType;
    }
    public String serviceName() {
        return this.serviceName;
    }
    public String subjectName() {
        return this.subjectName;
    }
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKafkaSchemaConfigurationResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compatibilityLevel;
        private String id;
        private String project;
        private String schema;
        private String schemaType;
        private String serviceName;
        private String subjectName;
        private Integer version;

        public Builder() {
    	      // Empty
        }

        public Builder(GetKafkaSchemaConfigurationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compatibilityLevel = defaults.compatibilityLevel;
    	      this.id = defaults.id;
    	      this.project = defaults.project;
    	      this.schema = defaults.schema;
    	      this.schemaType = defaults.schemaType;
    	      this.serviceName = defaults.serviceName;
    	      this.subjectName = defaults.subjectName;
    	      this.version = defaults.version;
        }

        public Builder compatibilityLevel(String compatibilityLevel) {
            this.compatibilityLevel = Objects.requireNonNull(compatibilityLevel);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder project(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }
        public Builder schema(String schema) {
            this.schema = Objects.requireNonNull(schema);
            return this;
        }
        public Builder schemaType(String schemaType) {
            this.schemaType = Objects.requireNonNull(schemaType);
            return this;
        }
        public Builder serviceName(String serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }
        public Builder subjectName(String subjectName) {
            this.subjectName = Objects.requireNonNull(subjectName);
            return this;
        }
        public Builder version(Integer version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }        public GetKafkaSchemaConfigurationResult build() {
            return new GetKafkaSchemaConfigurationResult(compatibilityLevel, id, project, schema, schemaType, serviceName, subjectName, version);
        }
    }
}
