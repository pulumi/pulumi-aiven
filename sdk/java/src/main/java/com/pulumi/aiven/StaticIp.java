// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.aiven.StaticIpArgs;
import com.pulumi.aiven.Utilities;
import com.pulumi.aiven.inputs.StaticIpState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * The aiven.StaticIp resource allows the creation and deletion of static ips. Please not that once a static ip is in the &#39;assigned&#39; state it is bound to the node it is assigned to and cannot be deleted or disassociated until the node is recycled. Plans that would delete static ips that are in the assigned state will be blocked.
 * 
 */
@ResourceType(type="aiven:index/staticIp:StaticIp")
public class StaticIp extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the cloud that the static ip belongs to. Changing this property forces recreation of the resource.
     * 
     */
    @Export(name="cloudName", refs={String.class}, tree="[0]")
    private Output<String> cloudName;

    /**
     * @return Specifies the cloud that the static ip belongs to. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> cloudName() {
        return this.cloudName;
    }
    /**
     * The address of the static ip.
     * 
     */
    @Export(name="ipAddress", refs={String.class}, tree="[0]")
    private Output<String> ipAddress;

    /**
     * @return The address of the static ip.
     * 
     */
    public Output<String> ipAddress() {
        return this.ipAddress;
    }
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The service name the static ip is associated with.
     * 
     */
    @Export(name="serviceName", refs={String.class}, tree="[0]")
    private Output<String> serviceName;

    /**
     * @return The service name the static ip is associated with.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }
    /**
     * The state the static ip is in.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The state the static ip is in.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The static ip id of the resource. Should be used as a reference elsewhere.
     * 
     */
    @Export(name="staticIpAddressId", refs={String.class}, tree="[0]")
    private Output<String> staticIpAddressId;

    /**
     * @return The static ip id of the resource. Should be used as a reference elsewhere.
     * 
     */
    public Output<String> staticIpAddressId() {
        return this.staticIpAddressId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public StaticIp(String name) {
        this(name, StaticIpArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public StaticIp(String name, StaticIpArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public StaticIp(String name, StaticIpArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aiven:index/staticIp:StaticIp", name, args == null ? StaticIpArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private StaticIp(String name, Output<String> id, @Nullable StaticIpState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aiven:index/staticIp:StaticIp", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static StaticIp get(String name, Output<String> id, @Nullable StaticIpState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new StaticIp(name, id, state, options);
    }
}
