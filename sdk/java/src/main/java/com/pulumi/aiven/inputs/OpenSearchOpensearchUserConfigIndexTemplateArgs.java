// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OpenSearchOpensearchUserConfigIndexTemplateArgs extends com.pulumi.resources.ResourceArgs {

    public static final OpenSearchOpensearchUserConfigIndexTemplateArgs Empty = new OpenSearchOpensearchUserConfigIndexTemplateArgs();

    /**
     * The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. Default is 10000. Example: `10000`.
     * 
     */
    @Import(name="mappingNestedObjectsLimit")
    private @Nullable Output<Integer> mappingNestedObjectsLimit;

    /**
     * @return The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. Default is 10000. Example: `10000`.
     * 
     */
    public Optional<Output<Integer>> mappingNestedObjectsLimit() {
        return Optional.ofNullable(this.mappingNestedObjectsLimit);
    }

    /**
     * The number of replicas each primary shard has. Example: `1`.
     * 
     */
    @Import(name="numberOfReplicas")
    private @Nullable Output<Integer> numberOfReplicas;

    /**
     * @return The number of replicas each primary shard has. Example: `1`.
     * 
     */
    public Optional<Output<Integer>> numberOfReplicas() {
        return Optional.ofNullable(this.numberOfReplicas);
    }

    /**
     * The number of primary shards that an index should have. Example: `1`.
     * 
     */
    @Import(name="numberOfShards")
    private @Nullable Output<Integer> numberOfShards;

    /**
     * @return The number of primary shards that an index should have. Example: `1`.
     * 
     */
    public Optional<Output<Integer>> numberOfShards() {
        return Optional.ofNullable(this.numberOfShards);
    }

    private OpenSearchOpensearchUserConfigIndexTemplateArgs() {}

    private OpenSearchOpensearchUserConfigIndexTemplateArgs(OpenSearchOpensearchUserConfigIndexTemplateArgs $) {
        this.mappingNestedObjectsLimit = $.mappingNestedObjectsLimit;
        this.numberOfReplicas = $.numberOfReplicas;
        this.numberOfShards = $.numberOfShards;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OpenSearchOpensearchUserConfigIndexTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OpenSearchOpensearchUserConfigIndexTemplateArgs $;

        public Builder() {
            $ = new OpenSearchOpensearchUserConfigIndexTemplateArgs();
        }

        public Builder(OpenSearchOpensearchUserConfigIndexTemplateArgs defaults) {
            $ = new OpenSearchOpensearchUserConfigIndexTemplateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param mappingNestedObjectsLimit The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. Default is 10000. Example: `10000`.
         * 
         * @return builder
         * 
         */
        public Builder mappingNestedObjectsLimit(@Nullable Output<Integer> mappingNestedObjectsLimit) {
            $.mappingNestedObjectsLimit = mappingNestedObjectsLimit;
            return this;
        }

        /**
         * @param mappingNestedObjectsLimit The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. Default is 10000. Example: `10000`.
         * 
         * @return builder
         * 
         */
        public Builder mappingNestedObjectsLimit(Integer mappingNestedObjectsLimit) {
            return mappingNestedObjectsLimit(Output.of(mappingNestedObjectsLimit));
        }

        /**
         * @param numberOfReplicas The number of replicas each primary shard has. Example: `1`.
         * 
         * @return builder
         * 
         */
        public Builder numberOfReplicas(@Nullable Output<Integer> numberOfReplicas) {
            $.numberOfReplicas = numberOfReplicas;
            return this;
        }

        /**
         * @param numberOfReplicas The number of replicas each primary shard has. Example: `1`.
         * 
         * @return builder
         * 
         */
        public Builder numberOfReplicas(Integer numberOfReplicas) {
            return numberOfReplicas(Output.of(numberOfReplicas));
        }

        /**
         * @param numberOfShards The number of primary shards that an index should have. Example: `1`.
         * 
         * @return builder
         * 
         */
        public Builder numberOfShards(@Nullable Output<Integer> numberOfShards) {
            $.numberOfShards = numberOfShards;
            return this;
        }

        /**
         * @param numberOfShards The number of primary shards that an index should have. Example: `1`.
         * 
         * @return builder
         * 
         */
        public Builder numberOfShards(Integer numberOfShards) {
            return numberOfShards(Output.of(numberOfShards));
        }

        public OpenSearchOpensearchUserConfigIndexTemplateArgs build() {
            return $;
        }
    }

}
