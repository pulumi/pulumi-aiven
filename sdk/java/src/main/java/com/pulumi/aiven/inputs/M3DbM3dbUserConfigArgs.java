// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.aiven.inputs.M3DbM3dbUserConfigIpFilterObjectArgs;
import com.pulumi.aiven.inputs.M3DbM3dbUserConfigLimitsArgs;
import com.pulumi.aiven.inputs.M3DbM3dbUserConfigNamespaceArgs;
import com.pulumi.aiven.inputs.M3DbM3dbUserConfigPrivateAccessArgs;
import com.pulumi.aiven.inputs.M3DbM3dbUserConfigPublicAccessArgs;
import com.pulumi.aiven.inputs.M3DbM3dbUserConfigRulesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class M3DbM3dbUserConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final M3DbM3dbUserConfigArgs Empty = new M3DbM3dbUserConfigArgs();

    @Import(name="additionalBackupRegions")
    private @Nullable Output<String> additionalBackupRegions;

    public Optional<Output<String>> additionalBackupRegions() {
        return Optional.ofNullable(this.additionalBackupRegions);
    }

    @Import(name="customDomain")
    private @Nullable Output<String> customDomain;

    public Optional<Output<String>> customDomain() {
        return Optional.ofNullable(this.customDomain);
    }

    @Import(name="ipFilterObjects")
    private @Nullable Output<List<M3DbM3dbUserConfigIpFilterObjectArgs>> ipFilterObjects;

    public Optional<Output<List<M3DbM3dbUserConfigIpFilterObjectArgs>>> ipFilterObjects() {
        return Optional.ofNullable(this.ipFilterObjects);
    }

    /**
     * @deprecated
     * This will be removed in v5.0.0 and replaced with ip_filter_string instead.
     * 
     */
    @Deprecated /* This will be removed in v5.0.0 and replaced with ip_filter_string instead. */
    @Import(name="ipFilters")
    private @Nullable Output<List<String>> ipFilters;

    /**
     * @deprecated
     * This will be removed in v5.0.0 and replaced with ip_filter_string instead.
     * 
     */
    @Deprecated /* This will be removed in v5.0.0 and replaced with ip_filter_string instead. */
    public Optional<Output<List<String>>> ipFilters() {
        return Optional.ofNullable(this.ipFilters);
    }

    @Import(name="limits")
    private @Nullable Output<M3DbM3dbUserConfigLimitsArgs> limits;

    public Optional<Output<M3DbM3dbUserConfigLimitsArgs>> limits() {
        return Optional.ofNullable(this.limits);
    }

    /**
     * @deprecated
     * Usage of this field is discouraged.
     * 
     */
    @Deprecated /* Usage of this field is discouraged. */
    @Import(name="m3Version")
    private @Nullable Output<String> m3Version;

    /**
     * @deprecated
     * Usage of this field is discouraged.
     * 
     */
    @Deprecated /* Usage of this field is discouraged. */
    public Optional<Output<String>> m3Version() {
        return Optional.ofNullable(this.m3Version);
    }

    @Import(name="m3coordinatorEnableGraphiteCarbonIngest")
    private @Nullable Output<Boolean> m3coordinatorEnableGraphiteCarbonIngest;

    public Optional<Output<Boolean>> m3coordinatorEnableGraphiteCarbonIngest() {
        return Optional.ofNullable(this.m3coordinatorEnableGraphiteCarbonIngest);
    }

    @Import(name="m3dbVersion")
    private @Nullable Output<String> m3dbVersion;

    public Optional<Output<String>> m3dbVersion() {
        return Optional.ofNullable(this.m3dbVersion);
    }

    /**
     * @deprecated
     * This will be removed in v5.0.0 and replaced with namespaces_string instead.
     * 
     */
    @Deprecated /* This will be removed in v5.0.0 and replaced with namespaces_string instead. */
    @Import(name="namespaces")
    private @Nullable Output<List<M3DbM3dbUserConfigNamespaceArgs>> namespaces;

    /**
     * @deprecated
     * This will be removed in v5.0.0 and replaced with namespaces_string instead.
     * 
     */
    @Deprecated /* This will be removed in v5.0.0 and replaced with namespaces_string instead. */
    public Optional<Output<List<M3DbM3dbUserConfigNamespaceArgs>>> namespaces() {
        return Optional.ofNullable(this.namespaces);
    }

    @Import(name="privateAccess")
    private @Nullable Output<M3DbM3dbUserConfigPrivateAccessArgs> privateAccess;

    public Optional<Output<M3DbM3dbUserConfigPrivateAccessArgs>> privateAccess() {
        return Optional.ofNullable(this.privateAccess);
    }

    @Import(name="projectToForkFrom")
    private @Nullable Output<String> projectToForkFrom;

    public Optional<Output<String>> projectToForkFrom() {
        return Optional.ofNullable(this.projectToForkFrom);
    }

    @Import(name="publicAccess")
    private @Nullable Output<M3DbM3dbUserConfigPublicAccessArgs> publicAccess;

    public Optional<Output<M3DbM3dbUserConfigPublicAccessArgs>> publicAccess() {
        return Optional.ofNullable(this.publicAccess);
    }

    @Import(name="rules")
    private @Nullable Output<M3DbM3dbUserConfigRulesArgs> rules;

    public Optional<Output<M3DbM3dbUserConfigRulesArgs>> rules() {
        return Optional.ofNullable(this.rules);
    }

    @Import(name="serviceToForkFrom")
    private @Nullable Output<String> serviceToForkFrom;

    public Optional<Output<String>> serviceToForkFrom() {
        return Optional.ofNullable(this.serviceToForkFrom);
    }

    @Import(name="staticIps")
    private @Nullable Output<Boolean> staticIps;

    public Optional<Output<Boolean>> staticIps() {
        return Optional.ofNullable(this.staticIps);
    }

    private M3DbM3dbUserConfigArgs() {}

    private M3DbM3dbUserConfigArgs(M3DbM3dbUserConfigArgs $) {
        this.additionalBackupRegions = $.additionalBackupRegions;
        this.customDomain = $.customDomain;
        this.ipFilterObjects = $.ipFilterObjects;
        this.ipFilters = $.ipFilters;
        this.limits = $.limits;
        this.m3Version = $.m3Version;
        this.m3coordinatorEnableGraphiteCarbonIngest = $.m3coordinatorEnableGraphiteCarbonIngest;
        this.m3dbVersion = $.m3dbVersion;
        this.namespaces = $.namespaces;
        this.privateAccess = $.privateAccess;
        this.projectToForkFrom = $.projectToForkFrom;
        this.publicAccess = $.publicAccess;
        this.rules = $.rules;
        this.serviceToForkFrom = $.serviceToForkFrom;
        this.staticIps = $.staticIps;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(M3DbM3dbUserConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private M3DbM3dbUserConfigArgs $;

        public Builder() {
            $ = new M3DbM3dbUserConfigArgs();
        }

        public Builder(M3DbM3dbUserConfigArgs defaults) {
            $ = new M3DbM3dbUserConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder additionalBackupRegions(@Nullable Output<String> additionalBackupRegions) {
            $.additionalBackupRegions = additionalBackupRegions;
            return this;
        }

        public Builder additionalBackupRegions(String additionalBackupRegions) {
            return additionalBackupRegions(Output.of(additionalBackupRegions));
        }

        public Builder customDomain(@Nullable Output<String> customDomain) {
            $.customDomain = customDomain;
            return this;
        }

        public Builder customDomain(String customDomain) {
            return customDomain(Output.of(customDomain));
        }

        public Builder ipFilterObjects(@Nullable Output<List<M3DbM3dbUserConfigIpFilterObjectArgs>> ipFilterObjects) {
            $.ipFilterObjects = ipFilterObjects;
            return this;
        }

        public Builder ipFilterObjects(List<M3DbM3dbUserConfigIpFilterObjectArgs> ipFilterObjects) {
            return ipFilterObjects(Output.of(ipFilterObjects));
        }

        public Builder ipFilterObjects(M3DbM3dbUserConfigIpFilterObjectArgs... ipFilterObjects) {
            return ipFilterObjects(List.of(ipFilterObjects));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * This will be removed in v5.0.0 and replaced with ip_filter_string instead.
         * 
         */
        @Deprecated /* This will be removed in v5.0.0 and replaced with ip_filter_string instead. */
        public Builder ipFilters(@Nullable Output<List<String>> ipFilters) {
            $.ipFilters = ipFilters;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * This will be removed in v5.0.0 and replaced with ip_filter_string instead.
         * 
         */
        @Deprecated /* This will be removed in v5.0.0 and replaced with ip_filter_string instead. */
        public Builder ipFilters(List<String> ipFilters) {
            return ipFilters(Output.of(ipFilters));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * This will be removed in v5.0.0 and replaced with ip_filter_string instead.
         * 
         */
        @Deprecated /* This will be removed in v5.0.0 and replaced with ip_filter_string instead. */
        public Builder ipFilters(String... ipFilters) {
            return ipFilters(List.of(ipFilters));
        }

        public Builder limits(@Nullable Output<M3DbM3dbUserConfigLimitsArgs> limits) {
            $.limits = limits;
            return this;
        }

        public Builder limits(M3DbM3dbUserConfigLimitsArgs limits) {
            return limits(Output.of(limits));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Usage of this field is discouraged.
         * 
         */
        @Deprecated /* Usage of this field is discouraged. */
        public Builder m3Version(@Nullable Output<String> m3Version) {
            $.m3Version = m3Version;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Usage of this field is discouraged.
         * 
         */
        @Deprecated /* Usage of this field is discouraged. */
        public Builder m3Version(String m3Version) {
            return m3Version(Output.of(m3Version));
        }

        public Builder m3coordinatorEnableGraphiteCarbonIngest(@Nullable Output<Boolean> m3coordinatorEnableGraphiteCarbonIngest) {
            $.m3coordinatorEnableGraphiteCarbonIngest = m3coordinatorEnableGraphiteCarbonIngest;
            return this;
        }

        public Builder m3coordinatorEnableGraphiteCarbonIngest(Boolean m3coordinatorEnableGraphiteCarbonIngest) {
            return m3coordinatorEnableGraphiteCarbonIngest(Output.of(m3coordinatorEnableGraphiteCarbonIngest));
        }

        public Builder m3dbVersion(@Nullable Output<String> m3dbVersion) {
            $.m3dbVersion = m3dbVersion;
            return this;
        }

        public Builder m3dbVersion(String m3dbVersion) {
            return m3dbVersion(Output.of(m3dbVersion));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * This will be removed in v5.0.0 and replaced with namespaces_string instead.
         * 
         */
        @Deprecated /* This will be removed in v5.0.0 and replaced with namespaces_string instead. */
        public Builder namespaces(@Nullable Output<List<M3DbM3dbUserConfigNamespaceArgs>> namespaces) {
            $.namespaces = namespaces;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * This will be removed in v5.0.0 and replaced with namespaces_string instead.
         * 
         */
        @Deprecated /* This will be removed in v5.0.0 and replaced with namespaces_string instead. */
        public Builder namespaces(List<M3DbM3dbUserConfigNamespaceArgs> namespaces) {
            return namespaces(Output.of(namespaces));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * This will be removed in v5.0.0 and replaced with namespaces_string instead.
         * 
         */
        @Deprecated /* This will be removed in v5.0.0 and replaced with namespaces_string instead. */
        public Builder namespaces(M3DbM3dbUserConfigNamespaceArgs... namespaces) {
            return namespaces(List.of(namespaces));
        }

        public Builder privateAccess(@Nullable Output<M3DbM3dbUserConfigPrivateAccessArgs> privateAccess) {
            $.privateAccess = privateAccess;
            return this;
        }

        public Builder privateAccess(M3DbM3dbUserConfigPrivateAccessArgs privateAccess) {
            return privateAccess(Output.of(privateAccess));
        }

        public Builder projectToForkFrom(@Nullable Output<String> projectToForkFrom) {
            $.projectToForkFrom = projectToForkFrom;
            return this;
        }

        public Builder projectToForkFrom(String projectToForkFrom) {
            return projectToForkFrom(Output.of(projectToForkFrom));
        }

        public Builder publicAccess(@Nullable Output<M3DbM3dbUserConfigPublicAccessArgs> publicAccess) {
            $.publicAccess = publicAccess;
            return this;
        }

        public Builder publicAccess(M3DbM3dbUserConfigPublicAccessArgs publicAccess) {
            return publicAccess(Output.of(publicAccess));
        }

        public Builder rules(@Nullable Output<M3DbM3dbUserConfigRulesArgs> rules) {
            $.rules = rules;
            return this;
        }

        public Builder rules(M3DbM3dbUserConfigRulesArgs rules) {
            return rules(Output.of(rules));
        }

        public Builder serviceToForkFrom(@Nullable Output<String> serviceToForkFrom) {
            $.serviceToForkFrom = serviceToForkFrom;
            return this;
        }

        public Builder serviceToForkFrom(String serviceToForkFrom) {
            return serviceToForkFrom(Output.of(serviceToForkFrom));
        }

        public Builder staticIps(@Nullable Output<Boolean> staticIps) {
            $.staticIps = staticIps;
            return this;
        }

        public Builder staticIps(Boolean staticIps) {
            return staticIps(Output.of(staticIps));
        }

        public M3DbM3dbUserConfigArgs build() {
            return $;
        }
    }

}
