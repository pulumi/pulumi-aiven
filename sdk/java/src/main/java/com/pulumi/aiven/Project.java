// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.aiven.ProjectArgs;
import com.pulumi.aiven.Utilities;
import com.pulumi.aiven.inputs.ProjectState;
import com.pulumi.aiven.outputs.ProjectTag;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The Project resource allows the creation and management of Aiven Projects.
 * 
 * ## Import
 * 
 * ```sh
 *  $ pulumi import aiven:index/project:Project myproject project
 * ```
 * 
 */
@ResourceType(type="aiven:index/project:Project")
public class Project extends com.pulumi.resources.CustomResource {
    /**
     * An optional property to link a project to already an existing account by using account ID. To set up proper dependencies please refer to this variable as a reference.
     * 
     */
    @Export(name="accountId", type=String.class, parameters={})
    private Output</* @Nullable */ String> accountId;

    /**
     * @return An optional property to link a project to already an existing account by using account ID. To set up proper dependencies please refer to this variable as a reference.
     * 
     */
    public Output<Optional<String>> accountId() {
        return Codegen.optional(this.accountId);
    }
    /**
     * If account_id is set, grant account owner team admin access to the new project. The default value is `true`.
     * 
     */
    @Export(name="addAccountOwnersAdminAccess", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> addAccountOwnersAdminAccess;

    /**
     * @return If account_id is set, grant account owner team admin access to the new project. The default value is `true`.
     * 
     */
    public Output<Optional<Boolean>> addAccountOwnersAdminAccess() {
        return Codegen.optional(this.addAccountOwnersAdminAccess);
    }
    /**
     * The amount of platform credits available to the project. This could be your free trial or other promotional credits.
     * 
     */
    @Export(name="availableCredits", type=String.class, parameters={})
    private Output<String> availableCredits;

    /**
     * @return The amount of platform credits available to the project. This could be your free trial or other promotional credits.
     * 
     */
    public Output<String> availableCredits() {
        return this.availableCredits;
    }
    /**
     * The id of the billing group that is linked to this project. To set up proper dependencies please refer to this variable as a reference.
     * 
     */
    @Export(name="billingGroup", type=String.class, parameters={})
    private Output</* @Nullable */ String> billingGroup;

    /**
     * @return The id of the billing group that is linked to this project. To set up proper dependencies please refer to this variable as a reference.
     * 
     */
    public Output<Optional<String>> billingGroup() {
        return Codegen.optional(this.billingGroup);
    }
    /**
     * The CA certificate of the project. This is required for configuring clients that connect to certain services like Kafka.
     * 
     */
    @Export(name="caCert", type=String.class, parameters={})
    private Output<String> caCert;

    /**
     * @return The CA certificate of the project. This is required for configuring clients that connect to certain services like Kafka.
     * 
     */
    public Output<String> caCert() {
        return this.caCert;
    }
    /**
     * is the name of another project used to copy billing information and some other project attributes like technical contacts from. This is mostly relevant when an existing project has billing type set to invoice and that needs to be copied over to a new project. (Setting billing is otherwise not allowed over the API.) This only has effect when the project is created. To set up proper dependencies please refer to this variable as a reference.
     * 
     */
    @Export(name="copyFromProject", type=String.class, parameters={})
    private Output</* @Nullable */ String> copyFromProject;

    /**
     * @return is the name of another project used to copy billing information and some other project attributes like technical contacts from. This is mostly relevant when an existing project has billing type set to invoice and that needs to be copied over to a new project. (Setting billing is otherwise not allowed over the API.) This only has effect when the project is created. To set up proper dependencies please refer to this variable as a reference.
     * 
     */
    public Output<Optional<String>> copyFromProject() {
        return Codegen.optional(this.copyFromProject);
    }
    /**
     * Defines the default cloud provider and region where services are hosted. This can be changed freely after the project is created. This will not affect existing services.
     * 
     */
    @Export(name="defaultCloud", type=String.class, parameters={})
    private Output</* @Nullable */ String> defaultCloud;

    /**
     * @return Defines the default cloud provider and region where services are hosted. This can be changed freely after the project is created. This will not affect existing services.
     * 
     */
    public Output<Optional<String>> defaultCloud() {
        return Codegen.optional(this.defaultCloud);
    }
    /**
     * The current accumulated bill for this project in the current billing period.
     * 
     */
    @Export(name="estimatedBalance", type=String.class, parameters={})
    private Output<String> estimatedBalance;

    /**
     * @return The current accumulated bill for this project in the current billing period.
     * 
     */
    public Output<String> estimatedBalance() {
        return this.estimatedBalance;
    }
    /**
     * The method of invoicing used for payments for this project, e.g. `card`.
     * 
     */
    @Export(name="paymentMethod", type=String.class, parameters={})
    private Output<String> paymentMethod;

    /**
     * @return The method of invoicing used for payments for this project, e.g. `card`.
     * 
     */
    public Output<String> paymentMethod() {
        return this.paymentMethod;
    }
    /**
     * Defines the name of the project. Name must be globally unique (between all Aiven customers) and cannot be changed later without destroying and re-creating the project, including all sub-resources.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return Defines the name of the project. Name must be globally unique (between all Aiven customers) and cannot be changed later without destroying and re-creating the project, including all sub-resources.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Tags are key-value pairs that allow you to categorize projects.
     * 
     */
    @Export(name="tags", type=List.class, parameters={ProjectTag.class})
    private Output</* @Nullable */ List<ProjectTag>> tags;

    /**
     * @return Tags are key-value pairs that allow you to categorize projects.
     * 
     */
    public Output<Optional<List<ProjectTag>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability. It is  good practice to keep this up-to-date to be aware of any potential issues with your project.
     * 
     */
    @Export(name="technicalEmails", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> technicalEmails;

    /**
     * @return Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability. It is  good practice to keep this up-to-date to be aware of any potential issues with your project.
     * 
     */
    public Output<Optional<List<String>>> technicalEmails() {
        return Codegen.optional(this.technicalEmails);
    }
    /**
     * Use the same billing group that is used in source project.
     * 
     */
    @Export(name="useSourceProjectBillingGroup", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> useSourceProjectBillingGroup;

    /**
     * @return Use the same billing group that is used in source project.
     * 
     */
    public Output<Optional<Boolean>> useSourceProjectBillingGroup() {
        return Codegen.optional(this.useSourceProjectBillingGroup);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Project(String name) {
        this(name, ProjectArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Project(String name, ProjectArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Project(String name, ProjectArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aiven:index/project:Project", name, args == null ? ProjectArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Project(String name, Output<String> id, @Nullable ProjectState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aiven:index/project:Project", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "caCert"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Project get(String name, Output<String> id, @Nullable ProjectState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Project(name, id, state, options);
    }
}
