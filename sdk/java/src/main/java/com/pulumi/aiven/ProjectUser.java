// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.aiven.ProjectUserArgs;
import com.pulumi.aiven.Utilities;
import com.pulumi.aiven.inputs.ProjectUserState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Creates and manages an Aiven project member.
 * 
 * **This resource is deprecated.** Use `aiven.OrganizationPermission` and
 * migrate existing aiven.ProjectUser resources
 * to the new resource.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aiven.ProjectUser;
 * import com.pulumi.aiven.ProjectUserArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var mytestuser = new ProjectUser("mytestuser", ProjectUserArgs.builder()
 *             .project(myproject.project())
 *             .email("john.doe}{@literal @}{@code example.com")
 *             .memberType("admin")
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import aiven:index/projectUser:ProjectUser mytestuser PROJECT/EMAIL
 * ```
 * 
 */
@ResourceType(type="aiven:index/projectUser:ProjectUser")
public class ProjectUser extends com.pulumi.resources.CustomResource {
    /**
     * Whether the user has accepted the request to join the project. Users get an invite and become project members after accepting the invite.
     * 
     */
    @Export(name="accepted", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> accepted;

    /**
     * @return Whether the user has accepted the request to join the project. Users get an invite and become project members after accepting the invite.
     * 
     */
    public Output<Boolean> accepted() {
        return this.accepted;
    }
    /**
     * Email address of the user in lowercase. Changing this property forces recreation of the resource.
     * 
     */
    @Export(name="email", refs={String.class}, tree="[0]")
    private Output<String> email;

    /**
     * @return Email address of the user in lowercase. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> email() {
        return this.email;
    }
    /**
     * Project membership type. The possible values are `admin`, `developer`, `operator`, `organization:app_users:write`, `organization:audit_logs:read`, `organization:domains:write`, `organization:groups:write`, `organization:idps:write`, `organization:projects:write`, `organization:users:write`, `project:audit_logs:read`, `project:integrations:read`, `project:integrations:write`, `project:networking:read`, `project:networking:write`, `project:permissions:read`, `project:services:read`, `project:services:write`, `read_only`, `role:organization:admin`, `role:services:maintenance`, `role:services:recover`, `service:configuration:write`, `service:data:write`, `service:logs:read`, `service:secrets:read` and `service:users:write`.
     * 
     */
    @Export(name="memberType", refs={String.class}, tree="[0]")
    private Output<String> memberType;

    /**
     * @return Project membership type. The possible values are `admin`, `developer`, `operator`, `organization:app_users:write`, `organization:audit_logs:read`, `organization:domains:write`, `organization:groups:write`, `organization:idps:write`, `organization:projects:write`, `organization:users:write`, `project:audit_logs:read`, `project:integrations:read`, `project:integrations:write`, `project:networking:read`, `project:networking:write`, `project:permissions:read`, `project:services:read`, `project:services:write`, `read_only`, `role:organization:admin`, `role:services:maintenance`, `role:services:recover`, `service:configuration:write`, `service:data:write`, `service:logs:read`, `service:secrets:read` and `service:users:write`.
     * 
     */
    public Output<String> memberType() {
        return this.memberType;
    }
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ProjectUser(java.lang.String name) {
        this(name, ProjectUserArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ProjectUser(java.lang.String name, ProjectUserArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ProjectUser(java.lang.String name, ProjectUserArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aiven:index/projectUser:ProjectUser", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ProjectUser(java.lang.String name, Output<java.lang.String> id, @Nullable ProjectUserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aiven:index/projectUser:ProjectUser", name, state, makeResourceOptions(options, id), false);
    }

    private static ProjectUserArgs makeArgs(ProjectUserArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ProjectUserArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ProjectUser get(java.lang.String name, Output<java.lang.String> id, @Nullable ProjectUserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ProjectUser(name, id, state, options);
    }
}
