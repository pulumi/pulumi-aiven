// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDragonflyDragonfly {
    /**
     * @return Dragonfly password.
     * 
     */
    private String password;
    /**
     * @return Dragonfly replica server URI.
     * 
     */
    private String replicaUri;
    /**
     * @return Dragonfly slave server URIs.
     * 
     */
    private List<String> slaveUris;
    /**
     * @return Dragonfly server URIs.
     * 
     */
    private List<String> uris;

    private GetDragonflyDragonfly() {}
    /**
     * @return Dragonfly password.
     * 
     */
    public String password() {
        return this.password;
    }
    /**
     * @return Dragonfly replica server URI.
     * 
     */
    public String replicaUri() {
        return this.replicaUri;
    }
    /**
     * @return Dragonfly slave server URIs.
     * 
     */
    public List<String> slaveUris() {
        return this.slaveUris;
    }
    /**
     * @return Dragonfly server URIs.
     * 
     */
    public List<String> uris() {
        return this.uris;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDragonflyDragonfly defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String password;
        private String replicaUri;
        private List<String> slaveUris;
        private List<String> uris;
        public Builder() {}
        public Builder(GetDragonflyDragonfly defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.password = defaults.password;
    	      this.replicaUri = defaults.replicaUri;
    	      this.slaveUris = defaults.slaveUris;
    	      this.uris = defaults.uris;
        }

        @CustomType.Setter
        public Builder password(String password) {
            if (password == null) {
              throw new MissingRequiredPropertyException("GetDragonflyDragonfly", "password");
            }
            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder replicaUri(String replicaUri) {
            if (replicaUri == null) {
              throw new MissingRequiredPropertyException("GetDragonflyDragonfly", "replicaUri");
            }
            this.replicaUri = replicaUri;
            return this;
        }
        @CustomType.Setter
        public Builder slaveUris(List<String> slaveUris) {
            if (slaveUris == null) {
              throw new MissingRequiredPropertyException("GetDragonflyDragonfly", "slaveUris");
            }
            this.slaveUris = slaveUris;
            return this;
        }
        public Builder slaveUris(String... slaveUris) {
            return slaveUris(List.of(slaveUris));
        }
        @CustomType.Setter
        public Builder uris(List<String> uris) {
            if (uris == null) {
              throw new MissingRequiredPropertyException("GetDragonflyDragonfly", "uris");
            }
            this.uris = uris;
            return this;
        }
        public Builder uris(String... uris) {
            return uris(List.of(uris));
        }
        public GetDragonflyDragonfly build() {
            final var _resultValue = new GetDragonflyDragonfly();
            _resultValue.password = password;
            _resultValue.replicaUri = replicaUri;
            _resultValue.slaveUris = slaveUris;
            _resultValue.uris = uris;
            return _resultValue;
        }
    }
}
