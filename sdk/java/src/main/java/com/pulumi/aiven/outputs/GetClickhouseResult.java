// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.aiven.outputs.GetClickhouseClickhouse;
import com.pulumi.aiven.outputs.GetClickhouseClickhouseUserConfig;
import com.pulumi.aiven.outputs.GetClickhouseComponent;
import com.pulumi.aiven.outputs.GetClickhouseServiceIntegration;
import com.pulumi.aiven.outputs.GetClickhouseTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetClickhouseResult {
    private final List<GetClickhouseClickhouseUserConfig> clickhouseUserConfigs;
    private final List<GetClickhouseClickhouse> clickhouses;
    private final String cloudName;
    private final List<GetClickhouseComponent> components;
    private final String diskSpace;
    private final String diskSpaceCap;
    private final String diskSpaceDefault;
    private final String diskSpaceStep;
    private final String diskSpaceUsed;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final String maintenanceWindowDow;
    private final String maintenanceWindowTime;
    private final String plan;
    private final String project;
    private final String projectVpcId;
    private final String serviceHost;
    private final List<GetClickhouseServiceIntegration> serviceIntegrations;
    private final String serviceName;
    private final String servicePassword;
    private final Integer servicePort;
    private final String serviceType;
    private final String serviceUri;
    private final String serviceUsername;
    private final String state;
    private final List<String> staticIps;
    private final List<GetClickhouseTag> tags;
    private final Boolean terminationProtection;

    @CustomType.Constructor
    private GetClickhouseResult(
        @CustomType.Parameter("clickhouseUserConfigs") List<GetClickhouseClickhouseUserConfig> clickhouseUserConfigs,
        @CustomType.Parameter("clickhouses") List<GetClickhouseClickhouse> clickhouses,
        @CustomType.Parameter("cloudName") String cloudName,
        @CustomType.Parameter("components") List<GetClickhouseComponent> components,
        @CustomType.Parameter("diskSpace") String diskSpace,
        @CustomType.Parameter("diskSpaceCap") String diskSpaceCap,
        @CustomType.Parameter("diskSpaceDefault") String diskSpaceDefault,
        @CustomType.Parameter("diskSpaceStep") String diskSpaceStep,
        @CustomType.Parameter("diskSpaceUsed") String diskSpaceUsed,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("maintenanceWindowDow") String maintenanceWindowDow,
        @CustomType.Parameter("maintenanceWindowTime") String maintenanceWindowTime,
        @CustomType.Parameter("plan") String plan,
        @CustomType.Parameter("project") String project,
        @CustomType.Parameter("projectVpcId") String projectVpcId,
        @CustomType.Parameter("serviceHost") String serviceHost,
        @CustomType.Parameter("serviceIntegrations") List<GetClickhouseServiceIntegration> serviceIntegrations,
        @CustomType.Parameter("serviceName") String serviceName,
        @CustomType.Parameter("servicePassword") String servicePassword,
        @CustomType.Parameter("servicePort") Integer servicePort,
        @CustomType.Parameter("serviceType") String serviceType,
        @CustomType.Parameter("serviceUri") String serviceUri,
        @CustomType.Parameter("serviceUsername") String serviceUsername,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("staticIps") List<String> staticIps,
        @CustomType.Parameter("tags") List<GetClickhouseTag> tags,
        @CustomType.Parameter("terminationProtection") Boolean terminationProtection) {
        this.clickhouseUserConfigs = clickhouseUserConfigs;
        this.clickhouses = clickhouses;
        this.cloudName = cloudName;
        this.components = components;
        this.diskSpace = diskSpace;
        this.diskSpaceCap = diskSpaceCap;
        this.diskSpaceDefault = diskSpaceDefault;
        this.diskSpaceStep = diskSpaceStep;
        this.diskSpaceUsed = diskSpaceUsed;
        this.id = id;
        this.maintenanceWindowDow = maintenanceWindowDow;
        this.maintenanceWindowTime = maintenanceWindowTime;
        this.plan = plan;
        this.project = project;
        this.projectVpcId = projectVpcId;
        this.serviceHost = serviceHost;
        this.serviceIntegrations = serviceIntegrations;
        this.serviceName = serviceName;
        this.servicePassword = servicePassword;
        this.servicePort = servicePort;
        this.serviceType = serviceType;
        this.serviceUri = serviceUri;
        this.serviceUsername = serviceUsername;
        this.state = state;
        this.staticIps = staticIps;
        this.tags = tags;
        this.terminationProtection = terminationProtection;
    }

    public List<GetClickhouseClickhouseUserConfig> clickhouseUserConfigs() {
        return this.clickhouseUserConfigs;
    }
    public List<GetClickhouseClickhouse> clickhouses() {
        return this.clickhouses;
    }
    public String cloudName() {
        return this.cloudName;
    }
    public List<GetClickhouseComponent> components() {
        return this.components;
    }
    public String diskSpace() {
        return this.diskSpace;
    }
    public String diskSpaceCap() {
        return this.diskSpaceCap;
    }
    public String diskSpaceDefault() {
        return this.diskSpaceDefault;
    }
    public String diskSpaceStep() {
        return this.diskSpaceStep;
    }
    public String diskSpaceUsed() {
        return this.diskSpaceUsed;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String maintenanceWindowDow() {
        return this.maintenanceWindowDow;
    }
    public String maintenanceWindowTime() {
        return this.maintenanceWindowTime;
    }
    public String plan() {
        return this.plan;
    }
    public String project() {
        return this.project;
    }
    public String projectVpcId() {
        return this.projectVpcId;
    }
    public String serviceHost() {
        return this.serviceHost;
    }
    public List<GetClickhouseServiceIntegration> serviceIntegrations() {
        return this.serviceIntegrations;
    }
    public String serviceName() {
        return this.serviceName;
    }
    public String servicePassword() {
        return this.servicePassword;
    }
    public Integer servicePort() {
        return this.servicePort;
    }
    public String serviceType() {
        return this.serviceType;
    }
    public String serviceUri() {
        return this.serviceUri;
    }
    public String serviceUsername() {
        return this.serviceUsername;
    }
    public String state() {
        return this.state;
    }
    public List<String> staticIps() {
        return this.staticIps;
    }
    public List<GetClickhouseTag> tags() {
        return this.tags;
    }
    public Boolean terminationProtection() {
        return this.terminationProtection;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClickhouseResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetClickhouseClickhouseUserConfig> clickhouseUserConfigs;
        private List<GetClickhouseClickhouse> clickhouses;
        private String cloudName;
        private List<GetClickhouseComponent> components;
        private String diskSpace;
        private String diskSpaceCap;
        private String diskSpaceDefault;
        private String diskSpaceStep;
        private String diskSpaceUsed;
        private String id;
        private String maintenanceWindowDow;
        private String maintenanceWindowTime;
        private String plan;
        private String project;
        private String projectVpcId;
        private String serviceHost;
        private List<GetClickhouseServiceIntegration> serviceIntegrations;
        private String serviceName;
        private String servicePassword;
        private Integer servicePort;
        private String serviceType;
        private String serviceUri;
        private String serviceUsername;
        private String state;
        private List<String> staticIps;
        private List<GetClickhouseTag> tags;
        private Boolean terminationProtection;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClickhouseResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clickhouseUserConfigs = defaults.clickhouseUserConfigs;
    	      this.clickhouses = defaults.clickhouses;
    	      this.cloudName = defaults.cloudName;
    	      this.components = defaults.components;
    	      this.diskSpace = defaults.diskSpace;
    	      this.diskSpaceCap = defaults.diskSpaceCap;
    	      this.diskSpaceDefault = defaults.diskSpaceDefault;
    	      this.diskSpaceStep = defaults.diskSpaceStep;
    	      this.diskSpaceUsed = defaults.diskSpaceUsed;
    	      this.id = defaults.id;
    	      this.maintenanceWindowDow = defaults.maintenanceWindowDow;
    	      this.maintenanceWindowTime = defaults.maintenanceWindowTime;
    	      this.plan = defaults.plan;
    	      this.project = defaults.project;
    	      this.projectVpcId = defaults.projectVpcId;
    	      this.serviceHost = defaults.serviceHost;
    	      this.serviceIntegrations = defaults.serviceIntegrations;
    	      this.serviceName = defaults.serviceName;
    	      this.servicePassword = defaults.servicePassword;
    	      this.servicePort = defaults.servicePort;
    	      this.serviceType = defaults.serviceType;
    	      this.serviceUri = defaults.serviceUri;
    	      this.serviceUsername = defaults.serviceUsername;
    	      this.state = defaults.state;
    	      this.staticIps = defaults.staticIps;
    	      this.tags = defaults.tags;
    	      this.terminationProtection = defaults.terminationProtection;
        }

        public Builder clickhouseUserConfigs(List<GetClickhouseClickhouseUserConfig> clickhouseUserConfigs) {
            this.clickhouseUserConfigs = Objects.requireNonNull(clickhouseUserConfigs);
            return this;
        }
        public Builder clickhouseUserConfigs(GetClickhouseClickhouseUserConfig... clickhouseUserConfigs) {
            return clickhouseUserConfigs(List.of(clickhouseUserConfigs));
        }
        public Builder clickhouses(List<GetClickhouseClickhouse> clickhouses) {
            this.clickhouses = Objects.requireNonNull(clickhouses);
            return this;
        }
        public Builder clickhouses(GetClickhouseClickhouse... clickhouses) {
            return clickhouses(List.of(clickhouses));
        }
        public Builder cloudName(String cloudName) {
            this.cloudName = Objects.requireNonNull(cloudName);
            return this;
        }
        public Builder components(List<GetClickhouseComponent> components) {
            this.components = Objects.requireNonNull(components);
            return this;
        }
        public Builder components(GetClickhouseComponent... components) {
            return components(List.of(components));
        }
        public Builder diskSpace(String diskSpace) {
            this.diskSpace = Objects.requireNonNull(diskSpace);
            return this;
        }
        public Builder diskSpaceCap(String diskSpaceCap) {
            this.diskSpaceCap = Objects.requireNonNull(diskSpaceCap);
            return this;
        }
        public Builder diskSpaceDefault(String diskSpaceDefault) {
            this.diskSpaceDefault = Objects.requireNonNull(diskSpaceDefault);
            return this;
        }
        public Builder diskSpaceStep(String diskSpaceStep) {
            this.diskSpaceStep = Objects.requireNonNull(diskSpaceStep);
            return this;
        }
        public Builder diskSpaceUsed(String diskSpaceUsed) {
            this.diskSpaceUsed = Objects.requireNonNull(diskSpaceUsed);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder maintenanceWindowDow(String maintenanceWindowDow) {
            this.maintenanceWindowDow = Objects.requireNonNull(maintenanceWindowDow);
            return this;
        }
        public Builder maintenanceWindowTime(String maintenanceWindowTime) {
            this.maintenanceWindowTime = Objects.requireNonNull(maintenanceWindowTime);
            return this;
        }
        public Builder plan(String plan) {
            this.plan = Objects.requireNonNull(plan);
            return this;
        }
        public Builder project(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }
        public Builder projectVpcId(String projectVpcId) {
            this.projectVpcId = Objects.requireNonNull(projectVpcId);
            return this;
        }
        public Builder serviceHost(String serviceHost) {
            this.serviceHost = Objects.requireNonNull(serviceHost);
            return this;
        }
        public Builder serviceIntegrations(List<GetClickhouseServiceIntegration> serviceIntegrations) {
            this.serviceIntegrations = Objects.requireNonNull(serviceIntegrations);
            return this;
        }
        public Builder serviceIntegrations(GetClickhouseServiceIntegration... serviceIntegrations) {
            return serviceIntegrations(List.of(serviceIntegrations));
        }
        public Builder serviceName(String serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }
        public Builder servicePassword(String servicePassword) {
            this.servicePassword = Objects.requireNonNull(servicePassword);
            return this;
        }
        public Builder servicePort(Integer servicePort) {
            this.servicePort = Objects.requireNonNull(servicePort);
            return this;
        }
        public Builder serviceType(String serviceType) {
            this.serviceType = Objects.requireNonNull(serviceType);
            return this;
        }
        public Builder serviceUri(String serviceUri) {
            this.serviceUri = Objects.requireNonNull(serviceUri);
            return this;
        }
        public Builder serviceUsername(String serviceUsername) {
            this.serviceUsername = Objects.requireNonNull(serviceUsername);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder staticIps(List<String> staticIps) {
            this.staticIps = Objects.requireNonNull(staticIps);
            return this;
        }
        public Builder staticIps(String... staticIps) {
            return staticIps(List.of(staticIps));
        }
        public Builder tags(List<GetClickhouseTag> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(GetClickhouseTag... tags) {
            return tags(List.of(tags));
        }
        public Builder terminationProtection(Boolean terminationProtection) {
            this.terminationProtection = Objects.requireNonNull(terminationProtection);
            return this;
        }        public GetClickhouseResult build() {
            return new GetClickhouseResult(clickhouseUserConfigs, clickhouses, cloudName, components, diskSpace, diskSpaceCap, diskSpaceDefault, diskSpaceStep, diskSpaceUsed, id, maintenanceWindowDow, maintenanceWindowTime, plan, project, projectVpcId, serviceHost, serviceIntegrations, serviceName, servicePassword, servicePort, serviceType, serviceUri, serviceUsername, state, staticIps, tags, terminationProtection);
        }
    }
}
