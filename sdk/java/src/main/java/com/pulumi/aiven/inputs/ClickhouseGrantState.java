// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.aiven.inputs.ClickhouseGrantPrivilegeGrantArgs;
import com.pulumi.aiven.inputs.ClickhouseGrantRoleGrantArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClickhouseGrantState extends com.pulumi.resources.ResourceArgs {

    public static final ClickhouseGrantState Empty = new ClickhouseGrantState();

    /**
     * Configuration to grant a privilege. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="privilegeGrants")
    private @Nullable Output<List<ClickhouseGrantPrivilegeGrantArgs>> privilegeGrants;

    /**
     * @return Configuration to grant a privilege. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<List<ClickhouseGrantPrivilegeGrantArgs>>> privilegeGrants() {
        return Optional.ofNullable(this.privilegeGrants);
    }

    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The role to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="role")
    private @Nullable Output<String> role;

    /**
     * @return The role to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> role() {
        return Optional.ofNullable(this.role);
    }

    /**
     * Configuration to grant a role. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="roleGrants")
    private @Nullable Output<List<ClickhouseGrantRoleGrantArgs>> roleGrants;

    /**
     * @return Configuration to grant a role. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<List<ClickhouseGrantRoleGrantArgs>>> roleGrants() {
        return Optional.ofNullable(this.roleGrants);
    }

    /**
     * The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * The user to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="user")
    private @Nullable Output<String> user;

    /**
     * @return The user to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> user() {
        return Optional.ofNullable(this.user);
    }

    private ClickhouseGrantState() {}

    private ClickhouseGrantState(ClickhouseGrantState $) {
        this.privilegeGrants = $.privilegeGrants;
        this.project = $.project;
        this.role = $.role;
        this.roleGrants = $.roleGrants;
        this.serviceName = $.serviceName;
        this.user = $.user;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClickhouseGrantState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClickhouseGrantState $;

        public Builder() {
            $ = new ClickhouseGrantState();
        }

        public Builder(ClickhouseGrantState defaults) {
            $ = new ClickhouseGrantState(Objects.requireNonNull(defaults));
        }

        /**
         * @param privilegeGrants Configuration to grant a privilege. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder privilegeGrants(@Nullable Output<List<ClickhouseGrantPrivilegeGrantArgs>> privilegeGrants) {
            $.privilegeGrants = privilegeGrants;
            return this;
        }

        /**
         * @param privilegeGrants Configuration to grant a privilege. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder privilegeGrants(List<ClickhouseGrantPrivilegeGrantArgs> privilegeGrants) {
            return privilegeGrants(Output.of(privilegeGrants));
        }

        /**
         * @param privilegeGrants Configuration to grant a privilege. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder privilegeGrants(ClickhouseGrantPrivilegeGrantArgs... privilegeGrants) {
            return privilegeGrants(List.of(privilegeGrants));
        }

        /**
         * @param project The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param role The role to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder role(@Nullable Output<String> role) {
            $.role = role;
            return this;
        }

        /**
         * @param role The role to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder role(String role) {
            return role(Output.of(role));
        }

        /**
         * @param roleGrants Configuration to grant a role. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder roleGrants(@Nullable Output<List<ClickhouseGrantRoleGrantArgs>> roleGrants) {
            $.roleGrants = roleGrants;
            return this;
        }

        /**
         * @param roleGrants Configuration to grant a role. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder roleGrants(List<ClickhouseGrantRoleGrantArgs> roleGrants) {
            return roleGrants(Output.of(roleGrants));
        }

        /**
         * @param roleGrants Configuration to grant a role. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder roleGrants(ClickhouseGrantRoleGrantArgs... roleGrants) {
            return roleGrants(List.of(roleGrants));
        }

        /**
         * @param serviceName The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param user The user to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder user(@Nullable Output<String> user) {
            $.user = user;
            return this;
        }

        /**
         * @param user The user to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder user(String user) {
            return user(Output.of(user));
        }

        public ClickhouseGrantState build() {
            return $;
        }
    }

}
