// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetValkeyUserResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The Valkey service user&#39;s password.
     * 
     */
    private String password;
    /**
     * @return The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    private String project;
    /**
     * @return The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    private String serviceName;
    /**
     * @return User account type, such as primary or regular account.
     * 
     */
    private String type;
    /**
     * @return Name of the Valkey service user. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    private String username;
    /**
     * @return Allow or disallow command categories. To allow a category use the prefix `+{@literal @}` and to disallow use `-{@literal @}`. See the [Valkey documentation](https://valkey.io/topics/acl/) for details on the ACL feature. The field is required with`valkey_acl_commands` and `valkey_acl_keys`. Changing this property forces recreation of the resource.
     * 
     */
    private List<String> valkeyAclCategories;
    /**
     * @return Allows and disallows access to pub/sub channels. Entries are defined as standard glob patterns. Changing this property forces recreation of the resource.
     * 
     */
    private List<String> valkeyAclChannels;
    /**
     * @return Defines rules for individual commands. To allow a command use the prefix `+` and to disallow use `-`. The field is required with`valkey_acl_categories` and `valkey_acl_keys`. Changing this property forces recreation of the resource.
     * 
     */
    private List<String> valkeyAclCommands;
    /**
     * @return Key access rules. Entries are defined as standard glob patterns. The field is required with`valkey_acl_categories` and `valkey_acl_keys`. Changing this property forces recreation of the resource.
     * 
     */
    private List<String> valkeyAclKeys;

    private GetValkeyUserResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Valkey service user&#39;s password.
     * 
     */
    public String password() {
        return this.password;
    }
    /**
     * @return The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public String project() {
        return this.project;
    }
    /**
     * @return The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return User account type, such as primary or regular account.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Name of the Valkey service user. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public String username() {
        return this.username;
    }
    /**
     * @return Allow or disallow command categories. To allow a category use the prefix `+{@literal @}` and to disallow use `-{@literal @}`. See the [Valkey documentation](https://valkey.io/topics/acl/) for details on the ACL feature. The field is required with`valkey_acl_commands` and `valkey_acl_keys`. Changing this property forces recreation of the resource.
     * 
     */
    public List<String> valkeyAclCategories() {
        return this.valkeyAclCategories;
    }
    /**
     * @return Allows and disallows access to pub/sub channels. Entries are defined as standard glob patterns. Changing this property forces recreation of the resource.
     * 
     */
    public List<String> valkeyAclChannels() {
        return this.valkeyAclChannels;
    }
    /**
     * @return Defines rules for individual commands. To allow a command use the prefix `+` and to disallow use `-`. The field is required with`valkey_acl_categories` and `valkey_acl_keys`. Changing this property forces recreation of the resource.
     * 
     */
    public List<String> valkeyAclCommands() {
        return this.valkeyAclCommands;
    }
    /**
     * @return Key access rules. Entries are defined as standard glob patterns. The field is required with`valkey_acl_categories` and `valkey_acl_keys`. Changing this property forces recreation of the resource.
     * 
     */
    public List<String> valkeyAclKeys() {
        return this.valkeyAclKeys;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetValkeyUserResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String password;
        private String project;
        private String serviceName;
        private String type;
        private String username;
        private List<String> valkeyAclCategories;
        private List<String> valkeyAclChannels;
        private List<String> valkeyAclCommands;
        private List<String> valkeyAclKeys;
        public Builder() {}
        public Builder(GetValkeyUserResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.password = defaults.password;
    	      this.project = defaults.project;
    	      this.serviceName = defaults.serviceName;
    	      this.type = defaults.type;
    	      this.username = defaults.username;
    	      this.valkeyAclCategories = defaults.valkeyAclCategories;
    	      this.valkeyAclChannels = defaults.valkeyAclChannels;
    	      this.valkeyAclCommands = defaults.valkeyAclCommands;
    	      this.valkeyAclKeys = defaults.valkeyAclKeys;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetValkeyUserResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            if (password == null) {
              throw new MissingRequiredPropertyException("GetValkeyUserResult", "password");
            }
            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            if (project == null) {
              throw new MissingRequiredPropertyException("GetValkeyUserResult", "project");
            }
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            if (serviceName == null) {
              throw new MissingRequiredPropertyException("GetValkeyUserResult", "serviceName");
            }
            this.serviceName = serviceName;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetValkeyUserResult", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            if (username == null) {
              throw new MissingRequiredPropertyException("GetValkeyUserResult", "username");
            }
            this.username = username;
            return this;
        }
        @CustomType.Setter
        public Builder valkeyAclCategories(List<String> valkeyAclCategories) {
            if (valkeyAclCategories == null) {
              throw new MissingRequiredPropertyException("GetValkeyUserResult", "valkeyAclCategories");
            }
            this.valkeyAclCategories = valkeyAclCategories;
            return this;
        }
        public Builder valkeyAclCategories(String... valkeyAclCategories) {
            return valkeyAclCategories(List.of(valkeyAclCategories));
        }
        @CustomType.Setter
        public Builder valkeyAclChannels(List<String> valkeyAclChannels) {
            if (valkeyAclChannels == null) {
              throw new MissingRequiredPropertyException("GetValkeyUserResult", "valkeyAclChannels");
            }
            this.valkeyAclChannels = valkeyAclChannels;
            return this;
        }
        public Builder valkeyAclChannels(String... valkeyAclChannels) {
            return valkeyAclChannels(List.of(valkeyAclChannels));
        }
        @CustomType.Setter
        public Builder valkeyAclCommands(List<String> valkeyAclCommands) {
            if (valkeyAclCommands == null) {
              throw new MissingRequiredPropertyException("GetValkeyUserResult", "valkeyAclCommands");
            }
            this.valkeyAclCommands = valkeyAclCommands;
            return this;
        }
        public Builder valkeyAclCommands(String... valkeyAclCommands) {
            return valkeyAclCommands(List.of(valkeyAclCommands));
        }
        @CustomType.Setter
        public Builder valkeyAclKeys(List<String> valkeyAclKeys) {
            if (valkeyAclKeys == null) {
              throw new MissingRequiredPropertyException("GetValkeyUserResult", "valkeyAclKeys");
            }
            this.valkeyAclKeys = valkeyAclKeys;
            return this;
        }
        public Builder valkeyAclKeys(String... valkeyAclKeys) {
            return valkeyAclKeys(List.of(valkeyAclKeys));
        }
        public GetValkeyUserResult build() {
            final var _resultValue = new GetValkeyUserResult();
            _resultValue.id = id;
            _resultValue.password = password;
            _resultValue.project = project;
            _resultValue.serviceName = serviceName;
            _resultValue.type = type;
            _resultValue.username = username;
            _resultValue.valkeyAclCategories = valkeyAclCategories;
            _resultValue.valkeyAclChannels = valkeyAclChannels;
            _resultValue.valkeyAclCommands = valkeyAclCommands;
            _resultValue.valkeyAclKeys = valkeyAclKeys;
            return _resultValue;
        }
    }
}
