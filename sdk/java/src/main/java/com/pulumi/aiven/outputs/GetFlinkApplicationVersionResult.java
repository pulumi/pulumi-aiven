// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.aiven.outputs.GetFlinkApplicationVersionSink;
import com.pulumi.aiven.outputs.GetFlinkApplicationVersionSource;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFlinkApplicationVersionResult {
    /**
     * @return Application ID.
     * 
     */
    private String applicationId;
    /**
     * @return Application version ID.
     * 
     */
    private String applicationVersionId;
    /**
     * @return Application version creation time.
     * 
     */
    private String createdAt;
    /**
     * @return The user who created the application.
     * 
     */
    private String createdBy;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    private String project;
    /**
     * @return The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    private String serviceName;
    /**
     * @return The sink table for the application.
     * 
     */
    private List<GetFlinkApplicationVersionSink> sink;
    /**
     * @return Application sinks
     * 
     */
    private List<GetFlinkApplicationVersionSink> sinks;
    /**
     * @return The source table for the application.
     * 
     */
    private List<GetFlinkApplicationVersionSource> source;
    /**
     * @return Application sources
     * 
     */
    private List<GetFlinkApplicationVersionSource> sources;
    /**
     * @return Job SQL statement.
     * 
     */
    private String statement;
    /**
     * @return Application version number.
     * 
     */
    private Integer version;

    private GetFlinkApplicationVersionResult() {}
    /**
     * @return Application ID.
     * 
     */
    public String applicationId() {
        return this.applicationId;
    }
    /**
     * @return Application version ID.
     * 
     */
    public String applicationVersionId() {
        return this.applicationVersionId;
    }
    /**
     * @return Application version creation time.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return The user who created the application.
     * 
     */
    public String createdBy() {
        return this.createdBy;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public String project() {
        return this.project;
    }
    /**
     * @return The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return The sink table for the application.
     * 
     */
    public List<GetFlinkApplicationVersionSink> sink() {
        return this.sink;
    }
    /**
     * @return Application sinks
     * 
     */
    public List<GetFlinkApplicationVersionSink> sinks() {
        return this.sinks;
    }
    /**
     * @return The source table for the application.
     * 
     */
    public List<GetFlinkApplicationVersionSource> source() {
        return this.source;
    }
    /**
     * @return Application sources
     * 
     */
    public List<GetFlinkApplicationVersionSource> sources() {
        return this.sources;
    }
    /**
     * @return Job SQL statement.
     * 
     */
    public String statement() {
        return this.statement;
    }
    /**
     * @return Application version number.
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFlinkApplicationVersionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String applicationId;
        private String applicationVersionId;
        private String createdAt;
        private String createdBy;
        private String id;
        private String project;
        private String serviceName;
        private List<GetFlinkApplicationVersionSink> sink;
        private List<GetFlinkApplicationVersionSink> sinks;
        private List<GetFlinkApplicationVersionSource> source;
        private List<GetFlinkApplicationVersionSource> sources;
        private String statement;
        private Integer version;
        public Builder() {}
        public Builder(GetFlinkApplicationVersionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationId = defaults.applicationId;
    	      this.applicationVersionId = defaults.applicationVersionId;
    	      this.createdAt = defaults.createdAt;
    	      this.createdBy = defaults.createdBy;
    	      this.id = defaults.id;
    	      this.project = defaults.project;
    	      this.serviceName = defaults.serviceName;
    	      this.sink = defaults.sink;
    	      this.sinks = defaults.sinks;
    	      this.source = defaults.source;
    	      this.sources = defaults.sources;
    	      this.statement = defaults.statement;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder applicationId(String applicationId) {
            if (applicationId == null) {
              throw new MissingRequiredPropertyException("GetFlinkApplicationVersionResult", "applicationId");
            }
            this.applicationId = applicationId;
            return this;
        }
        @CustomType.Setter
        public Builder applicationVersionId(String applicationVersionId) {
            if (applicationVersionId == null) {
              throw new MissingRequiredPropertyException("GetFlinkApplicationVersionResult", "applicationVersionId");
            }
            this.applicationVersionId = applicationVersionId;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetFlinkApplicationVersionResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(String createdBy) {
            if (createdBy == null) {
              throw new MissingRequiredPropertyException("GetFlinkApplicationVersionResult", "createdBy");
            }
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFlinkApplicationVersionResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            if (project == null) {
              throw new MissingRequiredPropertyException("GetFlinkApplicationVersionResult", "project");
            }
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            if (serviceName == null) {
              throw new MissingRequiredPropertyException("GetFlinkApplicationVersionResult", "serviceName");
            }
            this.serviceName = serviceName;
            return this;
        }
        @CustomType.Setter
        public Builder sink(List<GetFlinkApplicationVersionSink> sink) {
            if (sink == null) {
              throw new MissingRequiredPropertyException("GetFlinkApplicationVersionResult", "sink");
            }
            this.sink = sink;
            return this;
        }
        public Builder sink(GetFlinkApplicationVersionSink... sink) {
            return sink(List.of(sink));
        }
        @CustomType.Setter
        public Builder sinks(List<GetFlinkApplicationVersionSink> sinks) {
            if (sinks == null) {
              throw new MissingRequiredPropertyException("GetFlinkApplicationVersionResult", "sinks");
            }
            this.sinks = sinks;
            return this;
        }
        public Builder sinks(GetFlinkApplicationVersionSink... sinks) {
            return sinks(List.of(sinks));
        }
        @CustomType.Setter
        public Builder source(List<GetFlinkApplicationVersionSource> source) {
            if (source == null) {
              throw new MissingRequiredPropertyException("GetFlinkApplicationVersionResult", "source");
            }
            this.source = source;
            return this;
        }
        public Builder source(GetFlinkApplicationVersionSource... source) {
            return source(List.of(source));
        }
        @CustomType.Setter
        public Builder sources(List<GetFlinkApplicationVersionSource> sources) {
            if (sources == null) {
              throw new MissingRequiredPropertyException("GetFlinkApplicationVersionResult", "sources");
            }
            this.sources = sources;
            return this;
        }
        public Builder sources(GetFlinkApplicationVersionSource... sources) {
            return sources(List.of(sources));
        }
        @CustomType.Setter
        public Builder statement(String statement) {
            if (statement == null) {
              throw new MissingRequiredPropertyException("GetFlinkApplicationVersionResult", "statement");
            }
            this.statement = statement;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetFlinkApplicationVersionResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetFlinkApplicationVersionResult build() {
            final var _resultValue = new GetFlinkApplicationVersionResult();
            _resultValue.applicationId = applicationId;
            _resultValue.applicationVersionId = applicationVersionId;
            _resultValue.createdAt = createdAt;
            _resultValue.createdBy = createdBy;
            _resultValue.id = id;
            _resultValue.project = project;
            _resultValue.serviceName = serviceName;
            _resultValue.sink = sink;
            _resultValue.sinks = sinks;
            _resultValue.source = source;
            _resultValue.sources = sources;
            _resultValue.statement = statement;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
