// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetKafkaAclPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetKafkaAclPlainArgs Empty = new GetKafkaAclPlainArgs();

    @Import(name="permission", required=true)
    private String permission;

    public String permission() {
        return this.permission;
    }

    @Import(name="project", required=true)
    private String project;

    public String project() {
        return this.project;
    }

    @Import(name="serviceName", required=true)
    private String serviceName;

    public String serviceName() {
        return this.serviceName;
    }

    @Import(name="topic", required=true)
    private String topic;

    public String topic() {
        return this.topic;
    }

    @Import(name="username", required=true)
    private String username;

    public String username() {
        return this.username;
    }

    private GetKafkaAclPlainArgs() {}

    private GetKafkaAclPlainArgs(GetKafkaAclPlainArgs $) {
        this.permission = $.permission;
        this.project = $.project;
        this.serviceName = $.serviceName;
        this.topic = $.topic;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetKafkaAclPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetKafkaAclPlainArgs $;

        public Builder() {
            $ = new GetKafkaAclPlainArgs();
        }

        public Builder(GetKafkaAclPlainArgs defaults) {
            $ = new GetKafkaAclPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder permission(String permission) {
            $.permission = permission;
            return this;
        }

        public Builder project(String project) {
            $.project = project;
            return this;
        }

        public Builder serviceName(String serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        public Builder topic(String topic) {
            $.topic = topic;
            return this;
        }

        public Builder username(String username) {
            $.username = username;
            return this;
        }

        public GetKafkaAclPlainArgs build() {
            $.permission = Objects.requireNonNull($.permission, "expected parameter 'permission' to be non-null");
            $.project = Objects.requireNonNull($.project, "expected parameter 'project' to be non-null");
            $.serviceName = Objects.requireNonNull($.serviceName, "expected parameter 'serviceName' to be non-null");
            $.topic = Objects.requireNonNull($.topic, "expected parameter 'topic' to be non-null");
            $.username = Objects.requireNonNull($.username, "expected parameter 'username' to be non-null");
            return $;
        }
    }

}
