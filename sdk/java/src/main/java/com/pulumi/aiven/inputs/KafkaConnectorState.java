// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.aiven.inputs.KafkaConnectorTaskArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KafkaConnectorState extends com.pulumi.resources.ResourceArgs {

    public static final KafkaConnectorState Empty = new KafkaConnectorState();

    /**
     * The Kafka Connector configuration parameters.
     * 
     */
    @Import(name="config")
    private @Nullable Output<Map<String,String>> config;

    /**
     * @return The Kafka Connector configuration parameters.
     * 
     */
    public Optional<Output<Map<String,String>>> config() {
        return Optional.ofNullable(this.config);
    }

    /**
     * The kafka connector name. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="connectorName")
    private @Nullable Output<String> connectorName;

    /**
     * @return The kafka connector name. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> connectorName() {
        return Optional.ofNullable(this.connectorName);
    }

    /**
     * The Kafka connector author.
     * 
     */
    @Import(name="pluginAuthor")
    private @Nullable Output<String> pluginAuthor;

    /**
     * @return The Kafka connector author.
     * 
     */
    public Optional<Output<String>> pluginAuthor() {
        return Optional.ofNullable(this.pluginAuthor);
    }

    /**
     * The Kafka connector Java class.
     * 
     */
    @Import(name="pluginClass")
    private @Nullable Output<String> pluginClass;

    /**
     * @return The Kafka connector Java class.
     * 
     */
    public Optional<Output<String>> pluginClass() {
        return Optional.ofNullable(this.pluginClass);
    }

    /**
     * The Kafka connector documentation URL.
     * 
     */
    @Import(name="pluginDocUrl")
    private @Nullable Output<String> pluginDocUrl;

    /**
     * @return The Kafka connector documentation URL.
     * 
     */
    public Optional<Output<String>> pluginDocUrl() {
        return Optional.ofNullable(this.pluginDocUrl);
    }

    /**
     * The Kafka connector title.
     * 
     */
    @Import(name="pluginTitle")
    private @Nullable Output<String> pluginTitle;

    /**
     * @return The Kafka connector title.
     * 
     */
    public Optional<Output<String>> pluginTitle() {
        return Optional.ofNullable(this.pluginTitle);
    }

    /**
     * The Kafka connector type.
     * 
     */
    @Import(name="pluginType")
    private @Nullable Output<String> pluginType;

    /**
     * @return The Kafka connector type.
     * 
     */
    public Optional<Output<String>> pluginType() {
        return Optional.ofNullable(this.pluginType);
    }

    /**
     * The version of the kafka connector.
     * 
     */
    @Import(name="pluginVersion")
    private @Nullable Output<String> pluginVersion;

    /**
     * @return The version of the kafka connector.
     * 
     */
    public Optional<Output<String>> pluginVersion() {
        return Optional.ofNullable(this.pluginVersion);
    }

    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * List of tasks of a connector.
     * 
     */
    @Import(name="tasks")
    private @Nullable Output<List<KafkaConnectorTaskArgs>> tasks;

    /**
     * @return List of tasks of a connector.
     * 
     */
    public Optional<Output<List<KafkaConnectorTaskArgs>>> tasks() {
        return Optional.ofNullable(this.tasks);
    }

    private KafkaConnectorState() {}

    private KafkaConnectorState(KafkaConnectorState $) {
        this.config = $.config;
        this.connectorName = $.connectorName;
        this.pluginAuthor = $.pluginAuthor;
        this.pluginClass = $.pluginClass;
        this.pluginDocUrl = $.pluginDocUrl;
        this.pluginTitle = $.pluginTitle;
        this.pluginType = $.pluginType;
        this.pluginVersion = $.pluginVersion;
        this.project = $.project;
        this.serviceName = $.serviceName;
        this.tasks = $.tasks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KafkaConnectorState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KafkaConnectorState $;

        public Builder() {
            $ = new KafkaConnectorState();
        }

        public Builder(KafkaConnectorState defaults) {
            $ = new KafkaConnectorState(Objects.requireNonNull(defaults));
        }

        /**
         * @param config The Kafka Connector configuration parameters.
         * 
         * @return builder
         * 
         */
        public Builder config(@Nullable Output<Map<String,String>> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config The Kafka Connector configuration parameters.
         * 
         * @return builder
         * 
         */
        public Builder config(Map<String,String> config) {
            return config(Output.of(config));
        }

        /**
         * @param connectorName The kafka connector name. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder connectorName(@Nullable Output<String> connectorName) {
            $.connectorName = connectorName;
            return this;
        }

        /**
         * @param connectorName The kafka connector name. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder connectorName(String connectorName) {
            return connectorName(Output.of(connectorName));
        }

        /**
         * @param pluginAuthor The Kafka connector author.
         * 
         * @return builder
         * 
         */
        public Builder pluginAuthor(@Nullable Output<String> pluginAuthor) {
            $.pluginAuthor = pluginAuthor;
            return this;
        }

        /**
         * @param pluginAuthor The Kafka connector author.
         * 
         * @return builder
         * 
         */
        public Builder pluginAuthor(String pluginAuthor) {
            return pluginAuthor(Output.of(pluginAuthor));
        }

        /**
         * @param pluginClass The Kafka connector Java class.
         * 
         * @return builder
         * 
         */
        public Builder pluginClass(@Nullable Output<String> pluginClass) {
            $.pluginClass = pluginClass;
            return this;
        }

        /**
         * @param pluginClass The Kafka connector Java class.
         * 
         * @return builder
         * 
         */
        public Builder pluginClass(String pluginClass) {
            return pluginClass(Output.of(pluginClass));
        }

        /**
         * @param pluginDocUrl The Kafka connector documentation URL.
         * 
         * @return builder
         * 
         */
        public Builder pluginDocUrl(@Nullable Output<String> pluginDocUrl) {
            $.pluginDocUrl = pluginDocUrl;
            return this;
        }

        /**
         * @param pluginDocUrl The Kafka connector documentation URL.
         * 
         * @return builder
         * 
         */
        public Builder pluginDocUrl(String pluginDocUrl) {
            return pluginDocUrl(Output.of(pluginDocUrl));
        }

        /**
         * @param pluginTitle The Kafka connector title.
         * 
         * @return builder
         * 
         */
        public Builder pluginTitle(@Nullable Output<String> pluginTitle) {
            $.pluginTitle = pluginTitle;
            return this;
        }

        /**
         * @param pluginTitle The Kafka connector title.
         * 
         * @return builder
         * 
         */
        public Builder pluginTitle(String pluginTitle) {
            return pluginTitle(Output.of(pluginTitle));
        }

        /**
         * @param pluginType The Kafka connector type.
         * 
         * @return builder
         * 
         */
        public Builder pluginType(@Nullable Output<String> pluginType) {
            $.pluginType = pluginType;
            return this;
        }

        /**
         * @param pluginType The Kafka connector type.
         * 
         * @return builder
         * 
         */
        public Builder pluginType(String pluginType) {
            return pluginType(Output.of(pluginType));
        }

        /**
         * @param pluginVersion The version of the kafka connector.
         * 
         * @return builder
         * 
         */
        public Builder pluginVersion(@Nullable Output<String> pluginVersion) {
            $.pluginVersion = pluginVersion;
            return this;
        }

        /**
         * @param pluginVersion The version of the kafka connector.
         * 
         * @return builder
         * 
         */
        public Builder pluginVersion(String pluginVersion) {
            return pluginVersion(Output.of(pluginVersion));
        }

        /**
         * @param project The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param serviceName The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param tasks List of tasks of a connector.
         * 
         * @return builder
         * 
         */
        public Builder tasks(@Nullable Output<List<KafkaConnectorTaskArgs>> tasks) {
            $.tasks = tasks;
            return this;
        }

        /**
         * @param tasks List of tasks of a connector.
         * 
         * @return builder
         * 
         */
        public Builder tasks(List<KafkaConnectorTaskArgs> tasks) {
            return tasks(Output.of(tasks));
        }

        /**
         * @param tasks List of tasks of a connector.
         * 
         * @return builder
         * 
         */
        public Builder tasks(KafkaConnectorTaskArgs... tasks) {
            return tasks(List.of(tasks));
        }

        public KafkaConnectorState build() {
            return $;
        }
    }

}
