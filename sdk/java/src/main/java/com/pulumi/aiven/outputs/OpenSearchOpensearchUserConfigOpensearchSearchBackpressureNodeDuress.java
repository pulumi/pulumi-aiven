// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OpenSearchOpensearchUserConfigOpensearchSearchBackpressureNodeDuress {
    /**
     * @return The CPU usage threshold (as a percentage) required for a node to be considered to be under duress. Default is 0.9.
     * 
     */
    private @Nullable Double cpuThreshold;
    /**
     * @return The heap usage threshold (as a percentage) required for a node to be considered to be under duress. Default is 0.7.
     * 
     */
    private @Nullable Double heapThreshold;
    /**
     * @return The number of successive limit breaches after which the node is considered to be under duress. Default is 3.
     * 
     */
    private @Nullable Integer numSuccessiveBreaches;

    private OpenSearchOpensearchUserConfigOpensearchSearchBackpressureNodeDuress() {}
    /**
     * @return The CPU usage threshold (as a percentage) required for a node to be considered to be under duress. Default is 0.9.
     * 
     */
    public Optional<Double> cpuThreshold() {
        return Optional.ofNullable(this.cpuThreshold);
    }
    /**
     * @return The heap usage threshold (as a percentage) required for a node to be considered to be under duress. Default is 0.7.
     * 
     */
    public Optional<Double> heapThreshold() {
        return Optional.ofNullable(this.heapThreshold);
    }
    /**
     * @return The number of successive limit breaches after which the node is considered to be under duress. Default is 3.
     * 
     */
    public Optional<Integer> numSuccessiveBreaches() {
        return Optional.ofNullable(this.numSuccessiveBreaches);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OpenSearchOpensearchUserConfigOpensearchSearchBackpressureNodeDuress defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double cpuThreshold;
        private @Nullable Double heapThreshold;
        private @Nullable Integer numSuccessiveBreaches;
        public Builder() {}
        public Builder(OpenSearchOpensearchUserConfigOpensearchSearchBackpressureNodeDuress defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpuThreshold = defaults.cpuThreshold;
    	      this.heapThreshold = defaults.heapThreshold;
    	      this.numSuccessiveBreaches = defaults.numSuccessiveBreaches;
        }

        @CustomType.Setter
        public Builder cpuThreshold(@Nullable Double cpuThreshold) {

            this.cpuThreshold = cpuThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder heapThreshold(@Nullable Double heapThreshold) {

            this.heapThreshold = heapThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder numSuccessiveBreaches(@Nullable Integer numSuccessiveBreaches) {

            this.numSuccessiveBreaches = numSuccessiveBreaches;
            return this;
        }
        public OpenSearchOpensearchUserConfigOpensearchSearchBackpressureNodeDuress build() {
            final var _resultValue = new OpenSearchOpensearchUserConfigOpensearchSearchBackpressureNodeDuress();
            _resultValue.cpuThreshold = cpuThreshold;
            _resultValue.heapThreshold = heapThreshold;
            _resultValue.numSuccessiveBreaches = numSuccessiveBreaches;
            return _resultValue;
        }
    }
}
