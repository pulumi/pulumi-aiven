// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.aiven.KafkaQuotaArgs;
import com.pulumi.aiven.Utilities;
import com.pulumi.aiven.inputs.KafkaQuotaState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Creates and manages quotas for an Aiven for Apache KafkaÂ® service user.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aiven.KafkaQuota;
 * import com.pulumi.aiven.KafkaQuotaArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleQuota = new KafkaQuota("exampleQuota", KafkaQuotaArgs.builder()
 *             .project(foo.project())
 *             .serviceName(exampleKafka.serviceName())
 *             .user("example-kafka-user")
 *             .clientId("example_client")
 *             .consumerByteRate(1000)
 *             .producerByteRate(1000)
 *             .requestPercentage(50.0)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * When both USER and CLIENT_ID are specified
 * 
 * ```sh
 * $ pulumi import aiven:index/kafkaQuota:KafkaQuota example_quota PROJECT/SERVICE_NAME/CLIENT_ID/USER
 * ```
 * 
 * When only USER is specified
 * 
 * ```sh
 * $ pulumi import aiven:index/kafkaQuota:KafkaQuota example_quota PROJECT/SERVICE_NAME//USER
 * ```
 * 
 * When only CLIENT_ID is specified
 * 
 * ```sh
 * $ pulumi import aiven:index/kafkaQuota:KafkaQuota example_quota PROJECT/SERVICE_NAME/CLIENT_ID/
 * ```
 * 
 */
@ResourceType(type="aiven:index/kafkaQuota:KafkaQuota")
public class KafkaQuota extends com.pulumi.resources.CustomResource {
    /**
     * Represents a logical group of clients, assigned a unique name by the client application.
     * Quotas can be applied based on user, client-id, or both.
     * The most relevant quota is chosen for each connection.
     * All connections within a quota group share the same quota.
     * It is possible to set default quotas for each (user, client-id), user or client-id group by specifying &#39;default&#39;
     * 
     */
    @Export(name="clientId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> clientId;

    /**
     * @return Represents a logical group of clients, assigned a unique name by the client application.
     * Quotas can be applied based on user, client-id, or both.
     * The most relevant quota is chosen for each connection.
     * All connections within a quota group share the same quota.
     * It is possible to set default quotas for each (user, client-id), user or client-id group by specifying &#39;default&#39;
     * 
     */
    public Output<Optional<String>> clientId() {
        return Codegen.optional(this.clientId);
    }
    /**
     * Defines the bandwidth limit in bytes/sec for each group of clients sharing a quota.
     * Every distinct client group is allocated a specific quota, as defined by the cluster, on a per-broker basis.
     * Exceeding this limit results in client throttling.
     * 
     */
    @Export(name="consumerByteRate", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> consumerByteRate;

    /**
     * @return Defines the bandwidth limit in bytes/sec for each group of clients sharing a quota.
     * Every distinct client group is allocated a specific quota, as defined by the cluster, on a per-broker basis.
     * Exceeding this limit results in client throttling.
     * 
     */
    public Output<Optional<Integer>> consumerByteRate() {
        return Codegen.optional(this.consumerByteRate);
    }
    /**
     * Defines the bandwidth limit in bytes/sec for each group of clients sharing a quota.
     * Every distinct client group is allocated a specific quota, as defined by the cluster, on a per-broker basis.
     * Exceeding this limit results in client throttling.
     * 
     */
    @Export(name="producerByteRate", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> producerByteRate;

    /**
     * @return Defines the bandwidth limit in bytes/sec for each group of clients sharing a quota.
     * Every distinct client group is allocated a specific quota, as defined by the cluster, on a per-broker basis.
     * Exceeding this limit results in client throttling.
     * 
     */
    public Output<Optional<Integer>> producerByteRate() {
        return Codegen.optional(this.producerByteRate);
    }
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Sets the maximum percentage of CPU time that a client group can use on request handler I/O and network threads per broker within a quota window.
     * Exceeding this limit triggers throttling.
     * The quota, expressed as a percentage, also indicates the total allowable CPU usage for the client groups sharing the quota.
     * 
     */
    @Export(name="requestPercentage", refs={Double.class}, tree="[0]")
    private Output</* @Nullable */ Double> requestPercentage;

    /**
     * @return Sets the maximum percentage of CPU time that a client group can use on request handler I/O and network threads per broker within a quota window.
     * Exceeding this limit triggers throttling.
     * The quota, expressed as a percentage, also indicates the total allowable CPU usage for the client groups sharing the quota.
     * 
     */
    public Output<Optional<Double>> requestPercentage() {
        return Codegen.optional(this.requestPercentage);
    }
    /**
     * The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Export(name="serviceName", refs={String.class}, tree="[0]")
    private Output<String> serviceName;

    /**
     * @return The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }
    /**
     * Represents a logical group of clients, assigned a unique name by the client application.
     * Quotas can be applied based on user, client-id, or both.
     * The most relevant quota is chosen for each connection.
     * All connections within a quota group share the same quota.
     * It is possible to set default quotas for each (user, client-id), user or client-id group by specifying &#39;default&#39;
     * 
     */
    @Export(name="user", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> user;

    /**
     * @return Represents a logical group of clients, assigned a unique name by the client application.
     * Quotas can be applied based on user, client-id, or both.
     * The most relevant quota is chosen for each connection.
     * All connections within a quota group share the same quota.
     * It is possible to set default quotas for each (user, client-id), user or client-id group by specifying &#39;default&#39;
     * 
     */
    public Output<Optional<String>> user() {
        return Codegen.optional(this.user);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public KafkaQuota(java.lang.String name) {
        this(name, KafkaQuotaArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public KafkaQuota(java.lang.String name, KafkaQuotaArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public KafkaQuota(java.lang.String name, KafkaQuotaArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aiven:index/kafkaQuota:KafkaQuota", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private KafkaQuota(java.lang.String name, Output<java.lang.String> id, @Nullable KafkaQuotaState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aiven:index/kafkaQuota:KafkaQuota", name, state, makeResourceOptions(options, id), false);
    }

    private static KafkaQuotaArgs makeArgs(KafkaQuotaArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? KafkaQuotaArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static KafkaQuota get(java.lang.String name, Output<java.lang.String> id, @Nullable KafkaQuotaState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new KafkaQuota(name, id, state, options);
    }
}
