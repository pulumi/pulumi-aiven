// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetOrganizationProjectPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOrganizationProjectPlainArgs Empty = new GetOrganizationProjectPlainArgs();

    /**
     * ID of an organization. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="organizationId", required=true)
    private String organizationId;

    /**
     * @return ID of an organization. Changing this property forces recreation of the resource.
     * 
     */
    public String organizationId() {
        return this.organizationId;
    }

    /**
     * Unique identifier for the project that also serves as the project name.
     * 
     */
    @Import(name="projectId", required=true)
    private String projectId;

    /**
     * @return Unique identifier for the project that also serves as the project name.
     * 
     */
    public String projectId() {
        return this.projectId;
    }

    private GetOrganizationProjectPlainArgs() {}

    private GetOrganizationProjectPlainArgs(GetOrganizationProjectPlainArgs $) {
        this.organizationId = $.organizationId;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOrganizationProjectPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOrganizationProjectPlainArgs $;

        public Builder() {
            $ = new GetOrganizationProjectPlainArgs();
        }

        public Builder(GetOrganizationProjectPlainArgs defaults) {
            $ = new GetOrganizationProjectPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param organizationId ID of an organization. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param projectId Unique identifier for the project that also serves as the project name.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            $.projectId = projectId;
            return this;
        }

        public GetOrganizationProjectPlainArgs build() {
            if ($.organizationId == null) {
                throw new MissingRequiredPropertyException("GetOrganizationProjectPlainArgs", "organizationId");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GetOrganizationProjectPlainArgs", "projectId");
            }
            return $;
        }
    }

}
