// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class StaticIpArgs extends com.pulumi.resources.ResourceArgs {

    public static final StaticIpArgs Empty = new StaticIpArgs();

    /**
     * Specifies the cloud that the static ip belongs to. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="cloudName", required=true)
    private Output<String> cloudName;

    /**
     * @return Specifies the cloud that the static ip belongs to. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> cloudName() {
        return this.cloudName;
    }

    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="project", required=true)
    private Output<String> project;

    /**
     * @return The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    private StaticIpArgs() {}

    private StaticIpArgs(StaticIpArgs $) {
        this.cloudName = $.cloudName;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StaticIpArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StaticIpArgs $;

        public Builder() {
            $ = new StaticIpArgs();
        }

        public Builder(StaticIpArgs defaults) {
            $ = new StaticIpArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudName Specifies the cloud that the static ip belongs to. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder cloudName(Output<String> cloudName) {
            $.cloudName = cloudName;
            return this;
        }

        /**
         * @param cloudName Specifies the cloud that the static ip belongs to. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder cloudName(String cloudName) {
            return cloudName(Output.of(cloudName));
        }

        /**
         * @param project The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public StaticIpArgs build() {
            if ($.cloudName == null) {
                throw new MissingRequiredPropertyException("StaticIpArgs", "cloudName");
            }
            if ($.project == null) {
                throw new MissingRequiredPropertyException("StaticIpArgs", "project");
            }
            return $;
        }
    }

}
