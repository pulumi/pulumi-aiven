// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetMirrorMakerReplicationFlowPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMirrorMakerReplicationFlowPlainArgs Empty = new GetMirrorMakerReplicationFlowPlainArgs();

    @Import(name="project", required=true)
    private String project;

    public String project() {
        return this.project;
    }

    @Import(name="serviceName", required=true)
    private String serviceName;

    public String serviceName() {
        return this.serviceName;
    }

    @Import(name="sourceCluster", required=true)
    private String sourceCluster;

    public String sourceCluster() {
        return this.sourceCluster;
    }

    @Import(name="targetCluster", required=true)
    private String targetCluster;

    public String targetCluster() {
        return this.targetCluster;
    }

    private GetMirrorMakerReplicationFlowPlainArgs() {}

    private GetMirrorMakerReplicationFlowPlainArgs(GetMirrorMakerReplicationFlowPlainArgs $) {
        this.project = $.project;
        this.serviceName = $.serviceName;
        this.sourceCluster = $.sourceCluster;
        this.targetCluster = $.targetCluster;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMirrorMakerReplicationFlowPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMirrorMakerReplicationFlowPlainArgs $;

        public Builder() {
            $ = new GetMirrorMakerReplicationFlowPlainArgs();
        }

        public Builder(GetMirrorMakerReplicationFlowPlainArgs defaults) {
            $ = new GetMirrorMakerReplicationFlowPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder project(String project) {
            $.project = project;
            return this;
        }

        public Builder serviceName(String serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        public Builder sourceCluster(String sourceCluster) {
            $.sourceCluster = sourceCluster;
            return this;
        }

        public Builder targetCluster(String targetCluster) {
            $.targetCluster = targetCluster;
            return this;
        }

        public GetMirrorMakerReplicationFlowPlainArgs build() {
            $.project = Objects.requireNonNull($.project, "expected parameter 'project' to be non-null");
            $.serviceName = Objects.requireNonNull($.serviceName, "expected parameter 'serviceName' to be non-null");
            $.sourceCluster = Objects.requireNonNull($.sourceCluster, "expected parameter 'sourceCluster' to be non-null");
            $.targetCluster = Objects.requireNonNull($.targetCluster, "expected parameter 'targetCluster' to be non-null");
            return $;
        }
    }

}
