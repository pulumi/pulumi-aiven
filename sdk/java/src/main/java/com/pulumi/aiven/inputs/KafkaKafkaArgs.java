// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KafkaKafkaArgs extends com.pulumi.resources.ResourceArgs {

    public static final KafkaKafkaArgs Empty = new KafkaKafkaArgs();

    @Import(name="accessCert")
    private @Nullable Output<String> accessCert;

    public Optional<Output<String>> accessCert() {
        return Optional.ofNullable(this.accessCert);
    }

    @Import(name="accessKey")
    private @Nullable Output<String> accessKey;

    public Optional<Output<String>> accessKey() {
        return Optional.ofNullable(this.accessKey);
    }

    @Import(name="connectUri")
    private @Nullable Output<String> connectUri;

    public Optional<Output<String>> connectUri() {
        return Optional.ofNullable(this.connectUri);
    }

    @Import(name="restUri")
    private @Nullable Output<String> restUri;

    public Optional<Output<String>> restUri() {
        return Optional.ofNullable(this.restUri);
    }

    @Import(name="schemaRegistryUri")
    private @Nullable Output<String> schemaRegistryUri;

    public Optional<Output<String>> schemaRegistryUri() {
        return Optional.ofNullable(this.schemaRegistryUri);
    }

    private KafkaKafkaArgs() {}

    private KafkaKafkaArgs(KafkaKafkaArgs $) {
        this.accessCert = $.accessCert;
        this.accessKey = $.accessKey;
        this.connectUri = $.connectUri;
        this.restUri = $.restUri;
        this.schemaRegistryUri = $.schemaRegistryUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KafkaKafkaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KafkaKafkaArgs $;

        public Builder() {
            $ = new KafkaKafkaArgs();
        }

        public Builder(KafkaKafkaArgs defaults) {
            $ = new KafkaKafkaArgs(Objects.requireNonNull(defaults));
        }

        public Builder accessCert(@Nullable Output<String> accessCert) {
            $.accessCert = accessCert;
            return this;
        }

        public Builder accessCert(String accessCert) {
            return accessCert(Output.of(accessCert));
        }

        public Builder accessKey(@Nullable Output<String> accessKey) {
            $.accessKey = accessKey;
            return this;
        }

        public Builder accessKey(String accessKey) {
            return accessKey(Output.of(accessKey));
        }

        public Builder connectUri(@Nullable Output<String> connectUri) {
            $.connectUri = connectUri;
            return this;
        }

        public Builder connectUri(String connectUri) {
            return connectUri(Output.of(connectUri));
        }

        public Builder restUri(@Nullable Output<String> restUri) {
            $.restUri = restUri;
            return this;
        }

        public Builder restUri(String restUri) {
            return restUri(Output.of(restUri));
        }

        public Builder schemaRegistryUri(@Nullable Output<String> schemaRegistryUri) {
            $.schemaRegistryUri = schemaRegistryUri;
            return this;
        }

        public Builder schemaRegistryUri(String schemaRegistryUri) {
            return schemaRegistryUri(Output.of(schemaRegistryUri));
        }

        public KafkaKafkaArgs build() {
            return $;
        }
    }

}
