// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.aiven.outputs.GetM3DbM3dbUserConfigNamespaceOptions;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetM3DbM3dbUserConfigNamespace {
    /**
     * @return The name of the namespace. Example: `default`.
     * 
     */
    private String name;
    /**
     * @return Namespace options
     * 
     */
    private @Nullable GetM3DbM3dbUserConfigNamespaceOptions options;
    /**
     * @return The resolution for an aggregated namespace. Example: `30s`.
     * 
     */
    private @Nullable String resolution;
    /**
     * @return Enum: `aggregated`, `unaggregated`. The type of aggregation (aggregated/unaggregated).
     * 
     */
    private String type;

    private GetM3DbM3dbUserConfigNamespace() {}
    /**
     * @return The name of the namespace. Example: `default`.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Namespace options
     * 
     */
    public Optional<GetM3DbM3dbUserConfigNamespaceOptions> options() {
        return Optional.ofNullable(this.options);
    }
    /**
     * @return The resolution for an aggregated namespace. Example: `30s`.
     * 
     */
    public Optional<String> resolution() {
        return Optional.ofNullable(this.resolution);
    }
    /**
     * @return Enum: `aggregated`, `unaggregated`. The type of aggregation (aggregated/unaggregated).
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetM3DbM3dbUserConfigNamespace defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String name;
        private @Nullable GetM3DbM3dbUserConfigNamespaceOptions options;
        private @Nullable String resolution;
        private String type;
        public Builder() {}
        public Builder(GetM3DbM3dbUserConfigNamespace defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.options = defaults.options;
    	      this.resolution = defaults.resolution;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetM3DbM3dbUserConfigNamespace", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder options(@Nullable GetM3DbM3dbUserConfigNamespaceOptions options) {

            this.options = options;
            return this;
        }
        @CustomType.Setter
        public Builder resolution(@Nullable String resolution) {

            this.resolution = resolution;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetM3DbM3dbUserConfigNamespace", "type");
            }
            this.type = type;
            return this;
        }
        public GetM3DbM3dbUserConfigNamespace build() {
            final var _resultValue = new GetM3DbM3dbUserConfigNamespace();
            _resultValue.name = name;
            _resultValue.options = options;
            _resultValue.resolution = resolution;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
