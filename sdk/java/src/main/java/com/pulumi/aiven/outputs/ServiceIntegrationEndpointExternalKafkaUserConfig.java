// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceIntegrationEndpointExternalKafkaUserConfig {
    /**
     * @return Bootstrap servers.
     * 
     */
    private @Nullable String bootstrapServers;
    /**
     * @return The list of SASL mechanisms enabled in the Kafka server.
     * 
     */
    private @Nullable String saslMechanism;
    /**
     * @return Password for SASL PLAIN mechanism in the Kafka server.
     * 
     */
    private @Nullable String saslPlainPassword;
    /**
     * @return Username for SASL PLAIN mechanism in the Kafka server.
     * 
     */
    private @Nullable String saslPlainUsername;
    /**
     * @return Security protocol.
     * 
     */
    private @Nullable String securityProtocol;
    /**
     * @return PEM-encoded CA certificate.
     * 
     */
    private @Nullable String sslCaCert;
    /**
     * @return PEM-encoded client certificate.
     * 
     */
    private @Nullable String sslClientCert;
    /**
     * @return PEM-encoded client key.
     * 
     */
    private @Nullable String sslClientKey;
    /**
     * @return The endpoint identification algorithm to validate server hostname using server certificate.
     * 
     */
    private @Nullable String sslEndpointIdentificationAlgorithm;

    private ServiceIntegrationEndpointExternalKafkaUserConfig() {}
    /**
     * @return Bootstrap servers.
     * 
     */
    public Optional<String> bootstrapServers() {
        return Optional.ofNullable(this.bootstrapServers);
    }
    /**
     * @return The list of SASL mechanisms enabled in the Kafka server.
     * 
     */
    public Optional<String> saslMechanism() {
        return Optional.ofNullable(this.saslMechanism);
    }
    /**
     * @return Password for SASL PLAIN mechanism in the Kafka server.
     * 
     */
    public Optional<String> saslPlainPassword() {
        return Optional.ofNullable(this.saslPlainPassword);
    }
    /**
     * @return Username for SASL PLAIN mechanism in the Kafka server.
     * 
     */
    public Optional<String> saslPlainUsername() {
        return Optional.ofNullable(this.saslPlainUsername);
    }
    /**
     * @return Security protocol.
     * 
     */
    public Optional<String> securityProtocol() {
        return Optional.ofNullable(this.securityProtocol);
    }
    /**
     * @return PEM-encoded CA certificate.
     * 
     */
    public Optional<String> sslCaCert() {
        return Optional.ofNullable(this.sslCaCert);
    }
    /**
     * @return PEM-encoded client certificate.
     * 
     */
    public Optional<String> sslClientCert() {
        return Optional.ofNullable(this.sslClientCert);
    }
    /**
     * @return PEM-encoded client key.
     * 
     */
    public Optional<String> sslClientKey() {
        return Optional.ofNullable(this.sslClientKey);
    }
    /**
     * @return The endpoint identification algorithm to validate server hostname using server certificate.
     * 
     */
    public Optional<String> sslEndpointIdentificationAlgorithm() {
        return Optional.ofNullable(this.sslEndpointIdentificationAlgorithm);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceIntegrationEndpointExternalKafkaUserConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String bootstrapServers;
        private @Nullable String saslMechanism;
        private @Nullable String saslPlainPassword;
        private @Nullable String saslPlainUsername;
        private @Nullable String securityProtocol;
        private @Nullable String sslCaCert;
        private @Nullable String sslClientCert;
        private @Nullable String sslClientKey;
        private @Nullable String sslEndpointIdentificationAlgorithm;
        public Builder() {}
        public Builder(ServiceIntegrationEndpointExternalKafkaUserConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bootstrapServers = defaults.bootstrapServers;
    	      this.saslMechanism = defaults.saslMechanism;
    	      this.saslPlainPassword = defaults.saslPlainPassword;
    	      this.saslPlainUsername = defaults.saslPlainUsername;
    	      this.securityProtocol = defaults.securityProtocol;
    	      this.sslCaCert = defaults.sslCaCert;
    	      this.sslClientCert = defaults.sslClientCert;
    	      this.sslClientKey = defaults.sslClientKey;
    	      this.sslEndpointIdentificationAlgorithm = defaults.sslEndpointIdentificationAlgorithm;
        }

        @CustomType.Setter
        public Builder bootstrapServers(@Nullable String bootstrapServers) {
            this.bootstrapServers = bootstrapServers;
            return this;
        }
        @CustomType.Setter
        public Builder saslMechanism(@Nullable String saslMechanism) {
            this.saslMechanism = saslMechanism;
            return this;
        }
        @CustomType.Setter
        public Builder saslPlainPassword(@Nullable String saslPlainPassword) {
            this.saslPlainPassword = saslPlainPassword;
            return this;
        }
        @CustomType.Setter
        public Builder saslPlainUsername(@Nullable String saslPlainUsername) {
            this.saslPlainUsername = saslPlainUsername;
            return this;
        }
        @CustomType.Setter
        public Builder securityProtocol(@Nullable String securityProtocol) {
            this.securityProtocol = securityProtocol;
            return this;
        }
        @CustomType.Setter
        public Builder sslCaCert(@Nullable String sslCaCert) {
            this.sslCaCert = sslCaCert;
            return this;
        }
        @CustomType.Setter
        public Builder sslClientCert(@Nullable String sslClientCert) {
            this.sslClientCert = sslClientCert;
            return this;
        }
        @CustomType.Setter
        public Builder sslClientKey(@Nullable String sslClientKey) {
            this.sslClientKey = sslClientKey;
            return this;
        }
        @CustomType.Setter
        public Builder sslEndpointIdentificationAlgorithm(@Nullable String sslEndpointIdentificationAlgorithm) {
            this.sslEndpointIdentificationAlgorithm = sslEndpointIdentificationAlgorithm;
            return this;
        }
        public ServiceIntegrationEndpointExternalKafkaUserConfig build() {
            final var o = new ServiceIntegrationEndpointExternalKafkaUserConfig();
            o.bootstrapServers = bootstrapServers;
            o.saslMechanism = saslMechanism;
            o.saslPlainPassword = saslPlainPassword;
            o.saslPlainUsername = saslPlainUsername;
            o.securityProtocol = securityProtocol;
            o.sslCaCert = sslCaCert;
            o.sslClientCert = sslClientCert;
            o.sslClientKey = sslClientKey;
            o.sslEndpointIdentificationAlgorithm = sslEndpointIdentificationAlgorithm;
            return o;
        }
    }
}
