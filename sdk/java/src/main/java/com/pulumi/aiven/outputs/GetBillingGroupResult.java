// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetBillingGroupResult {
    /**
     * @return Account id
     * 
     */
    private String accountId;
    /**
     * @return Address lines
     * 
     */
    private List<String> addressLines;
    /**
     * @return Billing currency
     * 
     */
    private String billingCurrency;
    /**
     * @return Billing contact emails
     * 
     */
    private List<String> billingEmails;
    /**
     * @return Billing extra text
     * 
     */
    private String billingExtraText;
    /**
     * @return The id of the billing group. To set up proper dependencies please refer to this variable as a reference.
     * 
     */
    private String billingGroupId;
    /**
     * @return Credit card id
     * 
     */
    private String cardId;
    /**
     * @return City
     * 
     */
    private String city;
    /**
     * @return Company name
     * 
     */
    private String company;
    /**
     * @return ID of the billing group to copy from
     * 
     */
    private String copyFromBillingGroup;
    /**
     * @return Country code
     * 
     */
    private String countryCode;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Billing Group name
     * 
     */
    private String name;
    /**
     * @return An optional property to link a billing group to an already existing organization or account by using its ID. To set up proper dependencies please refer to this variable as a reference.
     * 
     */
    private String parentId;
    /**
     * @return State
     * 
     */
    private String state;
    /**
     * @return VAT id
     * 
     */
    private String vatId;
    /**
     * @return Zip Code
     * 
     */
    private String zipCode;

    private GetBillingGroupResult() {}
    /**
     * @return Account id
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return Address lines
     * 
     */
    public List<String> addressLines() {
        return this.addressLines;
    }
    /**
     * @return Billing currency
     * 
     */
    public String billingCurrency() {
        return this.billingCurrency;
    }
    /**
     * @return Billing contact emails
     * 
     */
    public List<String> billingEmails() {
        return this.billingEmails;
    }
    /**
     * @return Billing extra text
     * 
     */
    public String billingExtraText() {
        return this.billingExtraText;
    }
    /**
     * @return The id of the billing group. To set up proper dependencies please refer to this variable as a reference.
     * 
     */
    public String billingGroupId() {
        return this.billingGroupId;
    }
    /**
     * @return Credit card id
     * 
     */
    public String cardId() {
        return this.cardId;
    }
    /**
     * @return City
     * 
     */
    public String city() {
        return this.city;
    }
    /**
     * @return Company name
     * 
     */
    public String company() {
        return this.company;
    }
    /**
     * @return ID of the billing group to copy from
     * 
     */
    public String copyFromBillingGroup() {
        return this.copyFromBillingGroup;
    }
    /**
     * @return Country code
     * 
     */
    public String countryCode() {
        return this.countryCode;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Billing Group name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return An optional property to link a billing group to an already existing organization or account by using its ID. To set up proper dependencies please refer to this variable as a reference.
     * 
     */
    public String parentId() {
        return this.parentId;
    }
    /**
     * @return State
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return VAT id
     * 
     */
    public String vatId() {
        return this.vatId;
    }
    /**
     * @return Zip Code
     * 
     */
    public String zipCode() {
        return this.zipCode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBillingGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private List<String> addressLines;
        private String billingCurrency;
        private List<String> billingEmails;
        private String billingExtraText;
        private String billingGroupId;
        private String cardId;
        private String city;
        private String company;
        private String copyFromBillingGroup;
        private String countryCode;
        private String id;
        private String name;
        private String parentId;
        private String state;
        private String vatId;
        private String zipCode;
        public Builder() {}
        public Builder(GetBillingGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.addressLines = defaults.addressLines;
    	      this.billingCurrency = defaults.billingCurrency;
    	      this.billingEmails = defaults.billingEmails;
    	      this.billingExtraText = defaults.billingExtraText;
    	      this.billingGroupId = defaults.billingGroupId;
    	      this.cardId = defaults.cardId;
    	      this.city = defaults.city;
    	      this.company = defaults.company;
    	      this.copyFromBillingGroup = defaults.copyFromBillingGroup;
    	      this.countryCode = defaults.countryCode;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.parentId = defaults.parentId;
    	      this.state = defaults.state;
    	      this.vatId = defaults.vatId;
    	      this.zipCode = defaults.zipCode;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            this.accountId = Objects.requireNonNull(accountId);
            return this;
        }
        @CustomType.Setter
        public Builder addressLines(List<String> addressLines) {
            this.addressLines = Objects.requireNonNull(addressLines);
            return this;
        }
        public Builder addressLines(String... addressLines) {
            return addressLines(List.of(addressLines));
        }
        @CustomType.Setter
        public Builder billingCurrency(String billingCurrency) {
            this.billingCurrency = Objects.requireNonNull(billingCurrency);
            return this;
        }
        @CustomType.Setter
        public Builder billingEmails(List<String> billingEmails) {
            this.billingEmails = Objects.requireNonNull(billingEmails);
            return this;
        }
        public Builder billingEmails(String... billingEmails) {
            return billingEmails(List.of(billingEmails));
        }
        @CustomType.Setter
        public Builder billingExtraText(String billingExtraText) {
            this.billingExtraText = Objects.requireNonNull(billingExtraText);
            return this;
        }
        @CustomType.Setter
        public Builder billingGroupId(String billingGroupId) {
            this.billingGroupId = Objects.requireNonNull(billingGroupId);
            return this;
        }
        @CustomType.Setter
        public Builder cardId(String cardId) {
            this.cardId = Objects.requireNonNull(cardId);
            return this;
        }
        @CustomType.Setter
        public Builder city(String city) {
            this.city = Objects.requireNonNull(city);
            return this;
        }
        @CustomType.Setter
        public Builder company(String company) {
            this.company = Objects.requireNonNull(company);
            return this;
        }
        @CustomType.Setter
        public Builder copyFromBillingGroup(String copyFromBillingGroup) {
            this.copyFromBillingGroup = Objects.requireNonNull(copyFromBillingGroup);
            return this;
        }
        @CustomType.Setter
        public Builder countryCode(String countryCode) {
            this.countryCode = Objects.requireNonNull(countryCode);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder parentId(String parentId) {
            this.parentId = Objects.requireNonNull(parentId);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder vatId(String vatId) {
            this.vatId = Objects.requireNonNull(vatId);
            return this;
        }
        @CustomType.Setter
        public Builder zipCode(String zipCode) {
            this.zipCode = Objects.requireNonNull(zipCode);
            return this;
        }
        public GetBillingGroupResult build() {
            final var o = new GetBillingGroupResult();
            o.accountId = accountId;
            o.addressLines = addressLines;
            o.billingCurrency = billingCurrency;
            o.billingEmails = billingEmails;
            o.billingExtraText = billingExtraText;
            o.billingGroupId = billingGroupId;
            o.cardId = cardId;
            o.city = city;
            o.company = company;
            o.copyFromBillingGroup = copyFromBillingGroup;
            o.countryCode = countryCode;
            o.id = id;
            o.name = name;
            o.parentId = parentId;
            o.state = state;
            o.vatId = vatId;
            o.zipCode = zipCode;
            return o;
        }
    }
}
