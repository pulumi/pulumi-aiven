// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetProjectVpcPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetProjectVpcPlainArgs Empty = new GetProjectVpcPlainArgs();

    /**
     * Defines where the cloud provider and region where the service is hosted in. See the Service resource for additional information. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="cloudName", required=true)
    private String cloudName;

    /**
     * @return Defines where the cloud provider and region where the service is hosted in. See the Service resource for additional information. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public String cloudName() {
        return this.cloudName;
    }

    /**
     * ID of the VPC. This can be used to filter out the specific VPC if there are more than one datasource returned.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return ID of the VPC. This can be used to filter out the specific VPC if there are more than one datasource returned.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="project", required=true)
    private String project;

    /**
     * @return Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public String project() {
        return this.project;
    }

    private GetProjectVpcPlainArgs() {}

    private GetProjectVpcPlainArgs(GetProjectVpcPlainArgs $) {
        this.cloudName = $.cloudName;
        this.id = $.id;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetProjectVpcPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetProjectVpcPlainArgs $;

        public Builder() {
            $ = new GetProjectVpcPlainArgs();
        }

        public Builder(GetProjectVpcPlainArgs defaults) {
            $ = new GetProjectVpcPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudName Defines where the cloud provider and region where the service is hosted in. See the Service resource for additional information. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder cloudName(String cloudName) {
            $.cloudName = cloudName;
            return this;
        }

        /**
         * @param id ID of the VPC. This can be used to filter out the specific VPC if there are more than one datasource returned.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param project Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            $.project = project;
            return this;
        }

        public GetProjectVpcPlainArgs build() {
            $.cloudName = Objects.requireNonNull($.cloudName, "expected parameter 'cloudName' to be non-null");
            $.project = Objects.requireNonNull($.project, "expected parameter 'project' to be non-null");
            return $;
        }
    }

}
