// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetProjectVpcPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetProjectVpcPlainArgs Empty = new GetProjectVpcPlainArgs();

    @Import(name="cloudName", required=true)
    private String cloudName;

    public String cloudName() {
        return this.cloudName;
    }

    @Import(name="id")
    private @Nullable String id;

    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    @Import(name="project", required=true)
    private String project;

    public String project() {
        return this.project;
    }

    private GetProjectVpcPlainArgs() {}

    private GetProjectVpcPlainArgs(GetProjectVpcPlainArgs $) {
        this.cloudName = $.cloudName;
        this.id = $.id;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetProjectVpcPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetProjectVpcPlainArgs $;

        public Builder() {
            $ = new GetProjectVpcPlainArgs();
        }

        public Builder(GetProjectVpcPlainArgs defaults) {
            $ = new GetProjectVpcPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder cloudName(String cloudName) {
            $.cloudName = cloudName;
            return this;
        }

        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        public Builder project(String project) {
            $.project = project;
            return this;
        }

        public GetProjectVpcPlainArgs build() {
            $.cloudName = Objects.requireNonNull($.cloudName, "expected parameter 'cloudName' to be non-null");
            $.project = Objects.requireNonNull($.project, "expected parameter 'project' to be non-null");
            return $;
        }
    }

}
