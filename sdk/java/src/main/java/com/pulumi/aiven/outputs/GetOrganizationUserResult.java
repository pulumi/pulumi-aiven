// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetOrganizationUserResult {
    /**
     * @return Time of creation
     * 
     */
    private String createTime;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The unique organization ID.
     * 
     */
    private String organizationId;
    /**
     * @return This is a user email address
     * 
     */
    private @Nullable String userEmail;
    /**
     * @return The unique organization user ID
     * 
     */
    private @Nullable String userId;

    private GetOrganizationUserResult() {}
    /**
     * @return Time of creation
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The unique organization ID.
     * 
     */
    public String organizationId() {
        return this.organizationId;
    }
    /**
     * @return This is a user email address
     * 
     */
    public Optional<String> userEmail() {
        return Optional.ofNullable(this.userEmail);
    }
    /**
     * @return The unique organization user ID
     * 
     */
    public Optional<String> userId() {
        return Optional.ofNullable(this.userId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOrganizationUserResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createTime;
        private String id;
        private String organizationId;
        private @Nullable String userEmail;
        private @Nullable String userId;
        public Builder() {}
        public Builder(GetOrganizationUserResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.id = defaults.id;
    	      this.organizationId = defaults.organizationId;
    	      this.userEmail = defaults.userEmail;
    	      this.userId = defaults.userId;
        }

        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetOrganizationUserResult", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetOrganizationUserResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder organizationId(String organizationId) {
            if (organizationId == null) {
              throw new MissingRequiredPropertyException("GetOrganizationUserResult", "organizationId");
            }
            this.organizationId = organizationId;
            return this;
        }
        @CustomType.Setter
        public Builder userEmail(@Nullable String userEmail) {

            this.userEmail = userEmail;
            return this;
        }
        @CustomType.Setter
        public Builder userId(@Nullable String userId) {

            this.userId = userId;
            return this;
        }
        public GetOrganizationUserResult build() {
            final var _resultValue = new GetOrganizationUserResult();
            _resultValue.createTime = createTime;
            _resultValue.id = id;
            _resultValue.organizationId = organizationId;
            _resultValue.userEmail = userEmail;
            _resultValue.userId = userId;
            return _resultValue;
        }
    }
}
