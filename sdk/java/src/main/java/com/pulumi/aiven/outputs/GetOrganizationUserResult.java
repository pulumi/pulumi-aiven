// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetOrganizationUserResult {
    /**
     * @return This is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an organization.
     * 
     */
    private Boolean accepted;
    /**
     * @return Time of creation
     * 
     */
    private String createTime;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The email address of the user who sent an invitation to the user.
     * 
     */
    private String invitedBy;
    /**
     * @return The unique organization ID. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    private String organizationId;
    /**
     * @return This is a user email address that first will be invited, and after accepting an invitation, they become a member of the organization. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    private String userEmail;

    private GetOrganizationUserResult() {}
    /**
     * @return This is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an organization.
     * 
     */
    public Boolean accepted() {
        return this.accepted;
    }
    /**
     * @return Time of creation
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The email address of the user who sent an invitation to the user.
     * 
     */
    public String invitedBy() {
        return this.invitedBy;
    }
    /**
     * @return The unique organization ID. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public String organizationId() {
        return this.organizationId;
    }
    /**
     * @return This is a user email address that first will be invited, and after accepting an invitation, they become a member of the organization. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public String userEmail() {
        return this.userEmail;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOrganizationUserResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean accepted;
        private String createTime;
        private String id;
        private String invitedBy;
        private String organizationId;
        private String userEmail;
        public Builder() {}
        public Builder(GetOrganizationUserResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accepted = defaults.accepted;
    	      this.createTime = defaults.createTime;
    	      this.id = defaults.id;
    	      this.invitedBy = defaults.invitedBy;
    	      this.organizationId = defaults.organizationId;
    	      this.userEmail = defaults.userEmail;
        }

        @CustomType.Setter
        public Builder accepted(Boolean accepted) {
            this.accepted = Objects.requireNonNull(accepted);
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder invitedBy(String invitedBy) {
            this.invitedBy = Objects.requireNonNull(invitedBy);
            return this;
        }
        @CustomType.Setter
        public Builder organizationId(String organizationId) {
            this.organizationId = Objects.requireNonNull(organizationId);
            return this;
        }
        @CustomType.Setter
        public Builder userEmail(String userEmail) {
            this.userEmail = Objects.requireNonNull(userEmail);
            return this;
        }
        public GetOrganizationUserResult build() {
            final var o = new GetOrganizationUserResult();
            o.accepted = accepted;
            o.createTime = createTime;
            o.id = id;
            o.invitedBy = invitedBy;
            o.organizationId = organizationId;
            o.userEmail = userEmail;
            return o;
        }
    }
}
