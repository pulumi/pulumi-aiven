// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MySqlMysqlUserConfigPrivateAccess {
    /**
     * @return Allow clients to connect to mysql with a DNS name that always resolves to the service&#39;s private IP addresses. Only available in certain network locations.
     * 
     */
    private @Nullable Boolean mysql;
    /**
     * @return Allow clients to connect to mysqlx with a DNS name that always resolves to the service&#39;s private IP addresses. Only available in certain network locations.
     * 
     */
    private @Nullable Boolean mysqlx;
    /**
     * @return Allow clients to connect to prometheus with a DNS name that always resolves to the service&#39;s private IP addresses. Only available in certain network locations.
     * 
     */
    private @Nullable Boolean prometheus;

    private MySqlMysqlUserConfigPrivateAccess() {}
    /**
     * @return Allow clients to connect to mysql with a DNS name that always resolves to the service&#39;s private IP addresses. Only available in certain network locations.
     * 
     */
    public Optional<Boolean> mysql() {
        return Optional.ofNullable(this.mysql);
    }
    /**
     * @return Allow clients to connect to mysqlx with a DNS name that always resolves to the service&#39;s private IP addresses. Only available in certain network locations.
     * 
     */
    public Optional<Boolean> mysqlx() {
        return Optional.ofNullable(this.mysqlx);
    }
    /**
     * @return Allow clients to connect to prometheus with a DNS name that always resolves to the service&#39;s private IP addresses. Only available in certain network locations.
     * 
     */
    public Optional<Boolean> prometheus() {
        return Optional.ofNullable(this.prometheus);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MySqlMysqlUserConfigPrivateAccess defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean mysql;
        private @Nullable Boolean mysqlx;
        private @Nullable Boolean prometheus;
        public Builder() {}
        public Builder(MySqlMysqlUserConfigPrivateAccess defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mysql = defaults.mysql;
    	      this.mysqlx = defaults.mysqlx;
    	      this.prometheus = defaults.prometheus;
        }

        @CustomType.Setter
        public Builder mysql(@Nullable Boolean mysql) {

            this.mysql = mysql;
            return this;
        }
        @CustomType.Setter
        public Builder mysqlx(@Nullable Boolean mysqlx) {

            this.mysqlx = mysqlx;
            return this;
        }
        @CustomType.Setter
        public Builder prometheus(@Nullable Boolean prometheus) {

            this.prometheus = prometheus;
            return this;
        }
        public MySqlMysqlUserConfigPrivateAccess build() {
            final var _resultValue = new MySqlMysqlUserConfigPrivateAccess();
            _resultValue.mysql = mysql;
            _resultValue.mysqlx = mysqlx;
            _resultValue.prometheus = prometheus;
            return _resultValue;
        }
    }
}
