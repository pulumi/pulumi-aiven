// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceIntegrationMirrormakerUserConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceIntegrationMirrormakerUserConfigArgs Empty = new ServiceIntegrationMirrormakerUserConfigArgs();

    @Import(name="mirrormakerWhitelist")
    private @Nullable Output<String> mirrormakerWhitelist;

    public Optional<Output<String>> mirrormakerWhitelist() {
        return Optional.ofNullable(this.mirrormakerWhitelist);
    }

    private ServiceIntegrationMirrormakerUserConfigArgs() {}

    private ServiceIntegrationMirrormakerUserConfigArgs(ServiceIntegrationMirrormakerUserConfigArgs $) {
        this.mirrormakerWhitelist = $.mirrormakerWhitelist;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceIntegrationMirrormakerUserConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceIntegrationMirrormakerUserConfigArgs $;

        public Builder() {
            $ = new ServiceIntegrationMirrormakerUserConfigArgs();
        }

        public Builder(ServiceIntegrationMirrormakerUserConfigArgs defaults) {
            $ = new ServiceIntegrationMirrormakerUserConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder mirrormakerWhitelist(@Nullable Output<String> mirrormakerWhitelist) {
            $.mirrormakerWhitelist = mirrormakerWhitelist;
            return this;
        }

        public Builder mirrormakerWhitelist(String mirrormakerWhitelist) {
            return mirrormakerWhitelist(Output.of(mirrormakerWhitelist));
        }

        public ServiceIntegrationMirrormakerUserConfigArgs build() {
            return $;
        }
    }

}
