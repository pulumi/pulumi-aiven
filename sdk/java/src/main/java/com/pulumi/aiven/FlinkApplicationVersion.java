// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.aiven.FlinkApplicationVersionArgs;
import com.pulumi.aiven.Utilities;
import com.pulumi.aiven.inputs.FlinkApplicationVersionState;
import com.pulumi.aiven.outputs.FlinkApplicationVersionSink;
import com.pulumi.aiven.outputs.FlinkApplicationVersionSource;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The Flink Application Version resource allows the creation and management of Aiven Flink Application Versions.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aiven.FlinkApplicationVersion;
 * import com.pulumi.aiven.FlinkApplicationVersionArgs;
 * import com.pulumi.aiven.inputs.FlinkApplicationVersionSinkArgs;
 * import com.pulumi.aiven.inputs.FlinkApplicationVersionSourceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var foo = new FlinkApplicationVersion("foo", FlinkApplicationVersionArgs.builder()        
 *             .project(fooAivenProject.project())
 *             .serviceName(fooAivenFlink.serviceName())
 *             .applicationId(fooAivenFlinkApplication.applicationId())
 *             .statement("""
 *     INSERT INTO kafka_known_pizza SELECT * FROM kafka_pizza WHERE shop LIKE '%Luigis Pizza%'
 *             """)
 *             .sinks(FlinkApplicationVersionSinkArgs.builder()
 *                 .createTable("""
 *       CREATE TABLE kafka_known_pizza (
 *         shop STRING,
 *         name STRING
 *       ) WITH (
 *         'connector' = 'kafka',
 *         'properties.bootstrap.servers' = '',
 *         'scan.startup.mode' = 'earliest-offset',
 *         'topic' = 'sink_topic',
 *         'value.format' = 'json'
 *       )
 *                 """)
 *                 .integrationId(flinkToKafka.integrationId())
 *                 .build())
 *             .sources(FlinkApplicationVersionSourceArgs.builder()
 *                 .createTable("""
 *       CREATE TABLE kafka_pizza (
 *         shop STRING,
 *         name STRING
 *       ) WITH (
 *         'connector' = 'kafka',
 *         'properties.bootstrap.servers' = '',
 *         'scan.startup.mode' = 'earliest-offset',
 *         'topic' = 'source_topic',
 *         'value.format' = 'json'
 *       )
 *                 """)
 *                 .integrationId(flinkToKafka.integrationId())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import aiven:index/flinkApplicationVersion:FlinkApplicationVersion v1 project/service/application_id/application_version_id
 * ```
 * 
 */
@ResourceType(type="aiven:index/flinkApplicationVersion:FlinkApplicationVersion")
public class FlinkApplicationVersion extends com.pulumi.resources.CustomResource {
    /**
     * Application ID
     * 
     */
    @Export(name="applicationId", refs={String.class}, tree="[0]")
    private Output<String> applicationId;

    /**
     * @return Application ID
     * 
     */
    public Output<String> applicationId() {
        return this.applicationId;
    }
    /**
     * Application version ID
     * 
     */
    @Export(name="applicationVersionId", refs={String.class}, tree="[0]")
    private Output<String> applicationVersionId;

    /**
     * @return Application version ID
     * 
     */
    public Output<String> applicationVersionId() {
        return this.applicationVersionId;
    }
    /**
     * Application version creation time
     * 
     */
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    /**
     * @return Application version creation time
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * Application version creator
     * 
     */
    @Export(name="createdBy", refs={String.class}, tree="[0]")
    private Output<String> createdBy;

    /**
     * @return Application version creator
     * 
     */
    public Output<String> createdBy() {
        return this.createdBy;
    }
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Export(name="serviceName", refs={String.class}, tree="[0]")
    private Output<String> serviceName;

    /**
     * @return The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }
    /**
     * Application sink
     * 
     */
    @Export(name="sink", refs={List.class,FlinkApplicationVersionSink.class}, tree="[0,1]")
    private Output</* @Nullable */ List<FlinkApplicationVersionSink>> sink;

    /**
     * @return Application sink
     * 
     */
    public Output<Optional<List<FlinkApplicationVersionSink>>> sink() {
        return Codegen.optional(this.sink);
    }
    /**
     * Application sinks
     * 
     * @deprecated
     * This field is deprecated and will be removed in the next major release. Use `sink` instead.
     * 
     */
    @Deprecated /* This field is deprecated and will be removed in the next major release. Use `sink` instead. */
    @Export(name="sinks", refs={List.class,FlinkApplicationVersionSink.class}, tree="[0,1]")
    private Output</* @Nullable */ List<FlinkApplicationVersionSink>> sinks;

    /**
     * @return Application sinks
     * 
     */
    public Output<Optional<List<FlinkApplicationVersionSink>>> sinks() {
        return Codegen.optional(this.sinks);
    }
    /**
     * Application source
     * 
     */
    @Export(name="source", refs={List.class,FlinkApplicationVersionSource.class}, tree="[0,1]")
    private Output</* @Nullable */ List<FlinkApplicationVersionSource>> source;

    /**
     * @return Application source
     * 
     */
    public Output<Optional<List<FlinkApplicationVersionSource>>> source() {
        return Codegen.optional(this.source);
    }
    /**
     * Application sources
     * 
     * @deprecated
     * This field is deprecated and will be removed in the next major release. Use `source` instead.
     * 
     */
    @Deprecated /* This field is deprecated and will be removed in the next major release. Use `source` instead. */
    @Export(name="sources", refs={List.class,FlinkApplicationVersionSource.class}, tree="[0,1]")
    private Output</* @Nullable */ List<FlinkApplicationVersionSource>> sources;

    /**
     * @return Application sources
     * 
     */
    public Output<Optional<List<FlinkApplicationVersionSource>>> sources() {
        return Codegen.optional(this.sources);
    }
    /**
     * Job SQL statement
     * 
     */
    @Export(name="statement", refs={String.class}, tree="[0]")
    private Output<String> statement;

    /**
     * @return Job SQL statement
     * 
     */
    public Output<String> statement() {
        return this.statement;
    }
    /**
     * Application version number
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output<Integer> version;

    /**
     * @return Application version number
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FlinkApplicationVersion(String name) {
        this(name, FlinkApplicationVersionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FlinkApplicationVersion(String name, FlinkApplicationVersionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FlinkApplicationVersion(String name, FlinkApplicationVersionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aiven:index/flinkApplicationVersion:FlinkApplicationVersion", name, args == null ? FlinkApplicationVersionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private FlinkApplicationVersion(String name, Output<String> id, @Nullable FlinkApplicationVersionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aiven:index/flinkApplicationVersion:FlinkApplicationVersion", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FlinkApplicationVersion get(String name, Output<String> id, @Nullable FlinkApplicationVersionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FlinkApplicationVersion(name, id, state, options);
    }
}
