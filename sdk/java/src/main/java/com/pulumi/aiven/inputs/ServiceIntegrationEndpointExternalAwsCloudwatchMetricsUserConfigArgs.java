// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs Empty = new ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs();

    /**
     * AWS access key. Required permissions are cloudwatch:PutMetricData.
     * 
     */
    @Import(name="accessKey", required=true)
    private Output<String> accessKey;

    /**
     * @return AWS access key. Required permissions are cloudwatch:PutMetricData.
     * 
     */
    public Output<String> accessKey() {
        return this.accessKey;
    }

    /**
     * AWS CloudWatch Metrics Namespace.
     * 
     */
    @Import(name="namespace", required=true)
    private Output<String> namespace;

    /**
     * @return AWS CloudWatch Metrics Namespace.
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }

    /**
     * AWS region.
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    /**
     * @return AWS region.
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    /**
     * AWS secret key.
     * 
     */
    @Import(name="secretKey", required=true)
    private Output<String> secretKey;

    /**
     * @return AWS secret key.
     * 
     */
    public Output<String> secretKey() {
        return this.secretKey;
    }

    private ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs() {}

    private ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs(ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs $) {
        this.accessKey = $.accessKey;
        this.namespace = $.namespace;
        this.region = $.region;
        this.secretKey = $.secretKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs $;

        public Builder() {
            $ = new ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs();
        }

        public Builder(ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs defaults) {
            $ = new ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessKey AWS access key. Required permissions are cloudwatch:PutMetricData.
         * 
         * @return builder
         * 
         */
        public Builder accessKey(Output<String> accessKey) {
            $.accessKey = accessKey;
            return this;
        }

        /**
         * @param accessKey AWS access key. Required permissions are cloudwatch:PutMetricData.
         * 
         * @return builder
         * 
         */
        public Builder accessKey(String accessKey) {
            return accessKey(Output.of(accessKey));
        }

        /**
         * @param namespace AWS CloudWatch Metrics Namespace.
         * 
         * @return builder
         * 
         */
        public Builder namespace(Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace AWS CloudWatch Metrics Namespace.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param region AWS region.
         * 
         * @return builder
         * 
         */
        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region AWS region.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param secretKey AWS secret key.
         * 
         * @return builder
         * 
         */
        public Builder secretKey(Output<String> secretKey) {
            $.secretKey = secretKey;
            return this;
        }

        /**
         * @param secretKey AWS secret key.
         * 
         * @return builder
         * 
         */
        public Builder secretKey(String secretKey) {
            return secretKey(Output.of(secretKey));
        }

        public ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs build() {
            if ($.accessKey == null) {
                throw new MissingRequiredPropertyException("ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs", "accessKey");
            }
            if ($.namespace == null) {
                throw new MissingRequiredPropertyException("ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs", "namespace");
            }
            if ($.region == null) {
                throw new MissingRequiredPropertyException("ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs", "region");
            }
            if ($.secretKey == null) {
                throw new MissingRequiredPropertyException("ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs", "secretKey");
            }
            return $;
        }
    }

}
