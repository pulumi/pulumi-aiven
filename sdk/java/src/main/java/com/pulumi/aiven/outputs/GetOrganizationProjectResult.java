// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.aiven.outputs.GetOrganizationProjectTag;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetOrganizationProjectResult {
    /**
     * @return Billing group ID to assign to the project.
     * 
     */
    private String billingGroupId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return ID of an organization. Changing this property forces recreation of the resource.
     * 
     */
    private String organizationId;
    /**
     * @return Link a project to an [organization or organizational unit](https://aiven.io/docs/platform/concepts/orgs-units-projects) by using its ID. To set up proper dependencies please refer to this variable as a reference.
     * 
     */
    private String parentId;
    /**
     * @return Unique identifier for the project that also serves as the project name.
     * 
     */
    private String projectId;
    /**
     * @return Tags are key-value pairs that allow you to categorize projects.
     * 
     */
    private List<GetOrganizationProjectTag> tags;
    /**
     * @return The email addresses for [project contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive important alerts and updates about this project and its services. You can also set email contacts at the service level. It&#39;s good practice to keep these up-to-date to be aware of any potential issues with your project.
     * 
     */
    private List<String> technicalEmails;

    private GetOrganizationProjectResult() {}
    /**
     * @return Billing group ID to assign to the project.
     * 
     */
    public String billingGroupId() {
        return this.billingGroupId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return ID of an organization. Changing this property forces recreation of the resource.
     * 
     */
    public String organizationId() {
        return this.organizationId;
    }
    /**
     * @return Link a project to an [organization or organizational unit](https://aiven.io/docs/platform/concepts/orgs-units-projects) by using its ID. To set up proper dependencies please refer to this variable as a reference.
     * 
     */
    public String parentId() {
        return this.parentId;
    }
    /**
     * @return Unique identifier for the project that also serves as the project name.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return Tags are key-value pairs that allow you to categorize projects.
     * 
     */
    public List<GetOrganizationProjectTag> tags() {
        return this.tags;
    }
    /**
     * @return The email addresses for [project contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive important alerts and updates about this project and its services. You can also set email contacts at the service level. It&#39;s good practice to keep these up-to-date to be aware of any potential issues with your project.
     * 
     */
    public List<String> technicalEmails() {
        return this.technicalEmails;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOrganizationProjectResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String billingGroupId;
        private String id;
        private String organizationId;
        private String parentId;
        private String projectId;
        private List<GetOrganizationProjectTag> tags;
        private List<String> technicalEmails;
        public Builder() {}
        public Builder(GetOrganizationProjectResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.billingGroupId = defaults.billingGroupId;
    	      this.id = defaults.id;
    	      this.organizationId = defaults.organizationId;
    	      this.parentId = defaults.parentId;
    	      this.projectId = defaults.projectId;
    	      this.tags = defaults.tags;
    	      this.technicalEmails = defaults.technicalEmails;
        }

        @CustomType.Setter
        public Builder billingGroupId(String billingGroupId) {
            if (billingGroupId == null) {
              throw new MissingRequiredPropertyException("GetOrganizationProjectResult", "billingGroupId");
            }
            this.billingGroupId = billingGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetOrganizationProjectResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder organizationId(String organizationId) {
            if (organizationId == null) {
              throw new MissingRequiredPropertyException("GetOrganizationProjectResult", "organizationId");
            }
            this.organizationId = organizationId;
            return this;
        }
        @CustomType.Setter
        public Builder parentId(String parentId) {
            if (parentId == null) {
              throw new MissingRequiredPropertyException("GetOrganizationProjectResult", "parentId");
            }
            this.parentId = parentId;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetOrganizationProjectResult", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<GetOrganizationProjectTag> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetOrganizationProjectResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(GetOrganizationProjectTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder technicalEmails(List<String> technicalEmails) {
            if (technicalEmails == null) {
              throw new MissingRequiredPropertyException("GetOrganizationProjectResult", "technicalEmails");
            }
            this.technicalEmails = technicalEmails;
            return this;
        }
        public Builder technicalEmails(String... technicalEmails) {
            return technicalEmails(List.of(technicalEmails));
        }
        public GetOrganizationProjectResult build() {
            final var _resultValue = new GetOrganizationProjectResult();
            _resultValue.billingGroupId = billingGroupId;
            _resultValue.id = id;
            _resultValue.organizationId = organizationId;
            _resultValue.parentId = parentId;
            _resultValue.projectId = projectId;
            _resultValue.tags = tags;
            _resultValue.technicalEmails = technicalEmails;
            return _resultValue;
        }
    }
}
