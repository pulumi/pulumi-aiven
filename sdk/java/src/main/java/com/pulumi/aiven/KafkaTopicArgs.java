// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.aiven.inputs.KafkaTopicConfigArgs;
import com.pulumi.aiven.inputs.KafkaTopicTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KafkaTopicArgs extends com.pulumi.resources.ResourceArgs {

    public static final KafkaTopicArgs Empty = new KafkaTopicArgs();

    /**
     * Kafka topic configuration
     * 
     */
    @Import(name="config")
    private @Nullable Output<KafkaTopicConfigArgs> config;

    /**
     * @return Kafka topic configuration
     * 
     */
    public Optional<Output<KafkaTopicConfigArgs>> config() {
        return Optional.ofNullable(this.config);
    }

    /**
     * The number of partitions to create in the topic.
     * 
     */
    @Import(name="partitions", required=true)
    private Output<Integer> partitions;

    /**
     * @return The number of partitions to create in the topic.
     * 
     */
    public Output<Integer> partitions() {
        return this.partitions;
    }

    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="project", required=true)
    private Output<String> project;

    /**
     * @return Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    /**
     * The replication factor for the topic.
     * 
     */
    @Import(name="replication", required=true)
    private Output<Integer> replication;

    /**
     * @return The replication factor for the topic.
     * 
     */
    public Output<Integer> replication() {
        return this.replication;
    }

    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    /**
     * Kafka Topic tag.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<KafkaTopicTagArgs>> tags;

    /**
     * @return Kafka Topic tag.
     * 
     */
    public Optional<Output<List<KafkaTopicTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * It is a Terraform client-side deletion protection, which prevents a Kafka topic from being deleted. It is recommended to
     * enable this for any production Kafka topic containing critical data.
     * 
     */
    @Import(name="terminationProtection")
    private @Nullable Output<Boolean> terminationProtection;

    /**
     * @return It is a Terraform client-side deletion protection, which prevents a Kafka topic from being deleted. It is recommended to
     * enable this for any production Kafka topic containing critical data.
     * 
     */
    public Optional<Output<Boolean>> terminationProtection() {
        return Optional.ofNullable(this.terminationProtection);
    }

    /**
     * The name of the topic. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="topicName", required=true)
    private Output<String> topicName;

    /**
     * @return The name of the topic. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> topicName() {
        return this.topicName;
    }

    private KafkaTopicArgs() {}

    private KafkaTopicArgs(KafkaTopicArgs $) {
        this.config = $.config;
        this.partitions = $.partitions;
        this.project = $.project;
        this.replication = $.replication;
        this.serviceName = $.serviceName;
        this.tags = $.tags;
        this.terminationProtection = $.terminationProtection;
        this.topicName = $.topicName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KafkaTopicArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KafkaTopicArgs $;

        public Builder() {
            $ = new KafkaTopicArgs();
        }

        public Builder(KafkaTopicArgs defaults) {
            $ = new KafkaTopicArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param config Kafka topic configuration
         * 
         * @return builder
         * 
         */
        public Builder config(@Nullable Output<KafkaTopicConfigArgs> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config Kafka topic configuration
         * 
         * @return builder
         * 
         */
        public Builder config(KafkaTopicConfigArgs config) {
            return config(Output.of(config));
        }

        /**
         * @param partitions The number of partitions to create in the topic.
         * 
         * @return builder
         * 
         */
        public Builder partitions(Output<Integer> partitions) {
            $.partitions = partitions;
            return this;
        }

        /**
         * @param partitions The number of partitions to create in the topic.
         * 
         * @return builder
         * 
         */
        public Builder partitions(Integer partitions) {
            return partitions(Output.of(partitions));
        }

        /**
         * @param project Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param replication The replication factor for the topic.
         * 
         * @return builder
         * 
         */
        public Builder replication(Output<Integer> replication) {
            $.replication = replication;
            return this;
        }

        /**
         * @param replication The replication factor for the topic.
         * 
         * @return builder
         * 
         */
        public Builder replication(Integer replication) {
            return replication(Output.of(replication));
        }

        /**
         * @param serviceName Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param tags Kafka Topic tag.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<KafkaTopicTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Kafka Topic tag.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<KafkaTopicTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags Kafka Topic tag.
         * 
         * @return builder
         * 
         */
        public Builder tags(KafkaTopicTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param terminationProtection It is a Terraform client-side deletion protection, which prevents a Kafka topic from being deleted. It is recommended to
         * enable this for any production Kafka topic containing critical data.
         * 
         * @return builder
         * 
         */
        public Builder terminationProtection(@Nullable Output<Boolean> terminationProtection) {
            $.terminationProtection = terminationProtection;
            return this;
        }

        /**
         * @param terminationProtection It is a Terraform client-side deletion protection, which prevents a Kafka topic from being deleted. It is recommended to
         * enable this for any production Kafka topic containing critical data.
         * 
         * @return builder
         * 
         */
        public Builder terminationProtection(Boolean terminationProtection) {
            return terminationProtection(Output.of(terminationProtection));
        }

        /**
         * @param topicName The name of the topic. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder topicName(Output<String> topicName) {
            $.topicName = topicName;
            return this;
        }

        /**
         * @param topicName The name of the topic. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder topicName(String topicName) {
            return topicName(Output.of(topicName));
        }

        public KafkaTopicArgs build() {
            if ($.partitions == null) {
                throw new MissingRequiredPropertyException("KafkaTopicArgs", "partitions");
            }
            if ($.project == null) {
                throw new MissingRequiredPropertyException("KafkaTopicArgs", "project");
            }
            if ($.replication == null) {
                throw new MissingRequiredPropertyException("KafkaTopicArgs", "replication");
            }
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("KafkaTopicArgs", "serviceName");
            }
            if ($.topicName == null) {
                throw new MissingRequiredPropertyException("KafkaTopicArgs", "topicName");
            }
            return $;
        }
    }

}
