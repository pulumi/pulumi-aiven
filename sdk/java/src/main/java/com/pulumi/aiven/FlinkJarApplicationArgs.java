// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlinkJarApplicationArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlinkJarApplicationArgs Empty = new FlinkJarApplicationArgs();

    /**
     * Application name. Maximum length: `128`.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Application name. Maximum length: `128`.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Project name. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="project", required=true)
    private Output<String> project;

    /**
     * @return Project name. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    /**
     * Service name. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return Service name. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    private FlinkJarApplicationArgs() {}

    private FlinkJarApplicationArgs(FlinkJarApplicationArgs $) {
        this.name = $.name;
        this.project = $.project;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlinkJarApplicationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlinkJarApplicationArgs $;

        public Builder() {
            $ = new FlinkJarApplicationArgs();
        }

        public Builder(FlinkJarApplicationArgs defaults) {
            $ = new FlinkJarApplicationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Application name. Maximum length: `128`.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Application name. Maximum length: `128`.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project Project name. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project Project name. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param serviceName Service name. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName Service name. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public FlinkJarApplicationArgs build() {
            if ($.project == null) {
                throw new MissingRequiredPropertyException("FlinkJarApplicationArgs", "project");
            }
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("FlinkJarApplicationArgs", "serviceName");
            }
            return $;
        }
    }

}
