// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.aiven.ProjectVpcArgs;
import com.pulumi.aiven.Utilities;
import com.pulumi.aiven.inputs.ProjectVpcState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * The Project VPC resource allows the creation and management of Aiven Project VPCs.
 * 
 * ## Example Usage
 * 
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aiven.ProjectVpc;
 * import com.pulumi.aiven.ProjectVpcArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var myvpc = new ProjectVpc(&#34;myvpc&#34;, ProjectVpcArgs.builder()        
 *             .project(aiven_project.myproject().project())
 *             .cloudName(&#34;google-europe-west1&#34;)
 *             .networkCidr(&#34;192.168.1.0/24&#34;)
 *             .timeouts(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * ```sh
 *  $ pulumi import aiven:index/projectVpc:ProjectVpc myvpc project/id
 * ```
 * 
 */
@ResourceType(type="aiven:index/projectVpc:ProjectVpc")
public class ProjectVpc extends com.pulumi.resources.CustomResource {
    /**
     * Defines where the cloud provider and region where the service is hosted in. See the Service resource for additional information. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Export(name="cloudName", type=String.class, parameters={})
    private Output<String> cloudName;

    /**
     * @return Defines where the cloud provider and region where the service is hosted in. See the Service resource for additional information. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public Output<String> cloudName() {
        return this.cloudName;
    }
    /**
     * Network address range used by the VPC like 192.168.0.0/24
     * 
     */
    @Export(name="networkCidr", type=String.class, parameters={})
    private Output<String> networkCidr;

    /**
     * @return Network address range used by the VPC like 192.168.0.0/24
     * 
     */
    public Output<String> networkCidr() {
        return this.networkCidr;
    }
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * State of the VPC. The possible values are `APPROVED`, `ACTIVE`, `DELETING` and `DELETED`.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return State of the VPC. The possible values are `APPROVED`, `ACTIVE`, `DELETING` and `DELETED`.
     * 
     */
    public Output<String> state() {
        return this.state;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ProjectVpc(String name) {
        this(name, ProjectVpcArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ProjectVpc(String name, ProjectVpcArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ProjectVpc(String name, ProjectVpcArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aiven:index/projectVpc:ProjectVpc", name, args == null ? ProjectVpcArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ProjectVpc(String name, Output<String> id, @Nullable ProjectVpcState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aiven:index/projectVpc:ProjectVpc", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ProjectVpc get(String name, Output<String> id, @Nullable ProjectVpcState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ProjectVpc(name, id, state, options);
    }
}
