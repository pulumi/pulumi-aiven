// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.aiven.inputs.GetOrganizationBillingGroupListBillingGroupArgs;
import com.pulumi.aiven.inputs.GetOrganizationBillingGroupListTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetOrganizationBillingGroupListArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOrganizationBillingGroupListArgs Empty = new GetOrganizationBillingGroupListArgs();

    /**
     * A list of all billing groups belonging to the organization.
     * 
     */
    @Import(name="billingGroups")
    private @Nullable Output<List<GetOrganizationBillingGroupListBillingGroupArgs>> billingGroups;

    /**
     * @return A list of all billing groups belonging to the organization.
     * 
     */
    public Optional<Output<List<GetOrganizationBillingGroupListBillingGroupArgs>>> billingGroups() {
        return Optional.ofNullable(this.billingGroups);
    }

    /**
     * ID of an organization.
     * 
     */
    @Import(name="organizationId", required=true)
    private Output<String> organizationId;

    /**
     * @return ID of an organization.
     * 
     */
    public Output<String> organizationId() {
        return this.organizationId;
    }

    @Import(name="timeouts")
    private @Nullable Output<GetOrganizationBillingGroupListTimeoutsArgs> timeouts;

    public Optional<Output<GetOrganizationBillingGroupListTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private GetOrganizationBillingGroupListArgs() {}

    private GetOrganizationBillingGroupListArgs(GetOrganizationBillingGroupListArgs $) {
        this.billingGroups = $.billingGroups;
        this.organizationId = $.organizationId;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOrganizationBillingGroupListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOrganizationBillingGroupListArgs $;

        public Builder() {
            $ = new GetOrganizationBillingGroupListArgs();
        }

        public Builder(GetOrganizationBillingGroupListArgs defaults) {
            $ = new GetOrganizationBillingGroupListArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param billingGroups A list of all billing groups belonging to the organization.
         * 
         * @return builder
         * 
         */
        public Builder billingGroups(@Nullable Output<List<GetOrganizationBillingGroupListBillingGroupArgs>> billingGroups) {
            $.billingGroups = billingGroups;
            return this;
        }

        /**
         * @param billingGroups A list of all billing groups belonging to the organization.
         * 
         * @return builder
         * 
         */
        public Builder billingGroups(List<GetOrganizationBillingGroupListBillingGroupArgs> billingGroups) {
            return billingGroups(Output.of(billingGroups));
        }

        /**
         * @param billingGroups A list of all billing groups belonging to the organization.
         * 
         * @return builder
         * 
         */
        public Builder billingGroups(GetOrganizationBillingGroupListBillingGroupArgs... billingGroups) {
            return billingGroups(List.of(billingGroups));
        }

        /**
         * @param organizationId ID of an organization.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId ID of an organization.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        public Builder timeouts(@Nullable Output<GetOrganizationBillingGroupListTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(GetOrganizationBillingGroupListTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public GetOrganizationBillingGroupListArgs build() {
            if ($.organizationId == null) {
                throw new MissingRequiredPropertyException("GetOrganizationBillingGroupListArgs", "organizationId");
            }
            return $;
        }
    }

}
