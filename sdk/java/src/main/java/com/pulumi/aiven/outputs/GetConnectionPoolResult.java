// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetConnectionPoolResult {
    private final String connectionUri;
    private final String databaseName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final String poolMode;
    private final String poolName;
    private final Integer poolSize;
    private final String project;
    private final String serviceName;
    private final String username;

    @CustomType.Constructor
    private GetConnectionPoolResult(
        @CustomType.Parameter("connectionUri") String connectionUri,
        @CustomType.Parameter("databaseName") String databaseName,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("poolMode") String poolMode,
        @CustomType.Parameter("poolName") String poolName,
        @CustomType.Parameter("poolSize") Integer poolSize,
        @CustomType.Parameter("project") String project,
        @CustomType.Parameter("serviceName") String serviceName,
        @CustomType.Parameter("username") String username) {
        this.connectionUri = connectionUri;
        this.databaseName = databaseName;
        this.id = id;
        this.poolMode = poolMode;
        this.poolName = poolName;
        this.poolSize = poolSize;
        this.project = project;
        this.serviceName = serviceName;
        this.username = username;
    }

    public String connectionUri() {
        return this.connectionUri;
    }
    public String databaseName() {
        return this.databaseName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String poolMode() {
        return this.poolMode;
    }
    public String poolName() {
        return this.poolName;
    }
    public Integer poolSize() {
        return this.poolSize;
    }
    public String project() {
        return this.project;
    }
    public String serviceName() {
        return this.serviceName;
    }
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectionPoolResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String connectionUri;
        private String databaseName;
        private String id;
        private String poolMode;
        private String poolName;
        private Integer poolSize;
        private String project;
        private String serviceName;
        private String username;

        public Builder() {
    	      // Empty
        }

        public Builder(GetConnectionPoolResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionUri = defaults.connectionUri;
    	      this.databaseName = defaults.databaseName;
    	      this.id = defaults.id;
    	      this.poolMode = defaults.poolMode;
    	      this.poolName = defaults.poolName;
    	      this.poolSize = defaults.poolSize;
    	      this.project = defaults.project;
    	      this.serviceName = defaults.serviceName;
    	      this.username = defaults.username;
        }

        public Builder connectionUri(String connectionUri) {
            this.connectionUri = Objects.requireNonNull(connectionUri);
            return this;
        }
        public Builder databaseName(String databaseName) {
            this.databaseName = Objects.requireNonNull(databaseName);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder poolMode(String poolMode) {
            this.poolMode = Objects.requireNonNull(poolMode);
            return this;
        }
        public Builder poolName(String poolName) {
            this.poolName = Objects.requireNonNull(poolName);
            return this;
        }
        public Builder poolSize(Integer poolSize) {
            this.poolSize = Objects.requireNonNull(poolSize);
            return this;
        }
        public Builder project(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }
        public Builder serviceName(String serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }
        public Builder username(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }        public GetConnectionPoolResult build() {
            return new GetConnectionPoolResult(connectionUri, databaseName, id, poolMode, poolName, poolSize, project, serviceName, username);
        }
    }
}
