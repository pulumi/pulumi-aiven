// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetOpenSearchOpensearchUserConfigOpensearchShardIndexingPressurePrimaryParameterNode {
    /**
     * @return Define the percentage of the node-level memory threshold that acts as a soft indicator for strain on a node. Default is 0.7.
     * 
     */
    private @Nullable Double softLimit;

    private GetOpenSearchOpensearchUserConfigOpensearchShardIndexingPressurePrimaryParameterNode() {}
    /**
     * @return Define the percentage of the node-level memory threshold that acts as a soft indicator for strain on a node. Default is 0.7.
     * 
     */
    public Optional<Double> softLimit() {
        return Optional.ofNullable(this.softLimit);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOpenSearchOpensearchUserConfigOpensearchShardIndexingPressurePrimaryParameterNode defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double softLimit;
        public Builder() {}
        public Builder(GetOpenSearchOpensearchUserConfigOpensearchShardIndexingPressurePrimaryParameterNode defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.softLimit = defaults.softLimit;
        }

        @CustomType.Setter
        public Builder softLimit(@Nullable Double softLimit) {

            this.softLimit = softLimit;
            return this;
        }
        public GetOpenSearchOpensearchUserConfigOpensearchShardIndexingPressurePrimaryParameterNode build() {
            final var _resultValue = new GetOpenSearchOpensearchUserConfigOpensearchShardIndexingPressurePrimaryParameterNode();
            _resultValue.softLimit = softLimit;
            return _resultValue;
        }
    }
}
