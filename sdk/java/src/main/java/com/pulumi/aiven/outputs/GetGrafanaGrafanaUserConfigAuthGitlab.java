// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGrafanaGrafanaUserConfigAuthGitlab {
    private @Nullable Boolean allowSignUp;
    private @Nullable List<String> allowedGroups;
    private @Nullable String apiUrl;
    private @Nullable String authUrl;
    private String clientId;
    private String clientSecret;
    private @Nullable String tokenUrl;

    private GetGrafanaGrafanaUserConfigAuthGitlab() {}
    public Optional<Boolean> allowSignUp() {
        return Optional.ofNullable(this.allowSignUp);
    }
    public List<String> allowedGroups() {
        return this.allowedGroups == null ? List.of() : this.allowedGroups;
    }
    public Optional<String> apiUrl() {
        return Optional.ofNullable(this.apiUrl);
    }
    public Optional<String> authUrl() {
        return Optional.ofNullable(this.authUrl);
    }
    public String clientId() {
        return this.clientId;
    }
    public String clientSecret() {
        return this.clientSecret;
    }
    public Optional<String> tokenUrl() {
        return Optional.ofNullable(this.tokenUrl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGrafanaGrafanaUserConfigAuthGitlab defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean allowSignUp;
        private @Nullable List<String> allowedGroups;
        private @Nullable String apiUrl;
        private @Nullable String authUrl;
        private String clientId;
        private String clientSecret;
        private @Nullable String tokenUrl;
        public Builder() {}
        public Builder(GetGrafanaGrafanaUserConfigAuthGitlab defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowSignUp = defaults.allowSignUp;
    	      this.allowedGroups = defaults.allowedGroups;
    	      this.apiUrl = defaults.apiUrl;
    	      this.authUrl = defaults.authUrl;
    	      this.clientId = defaults.clientId;
    	      this.clientSecret = defaults.clientSecret;
    	      this.tokenUrl = defaults.tokenUrl;
        }

        @CustomType.Setter
        public Builder allowSignUp(@Nullable Boolean allowSignUp) {
            this.allowSignUp = allowSignUp;
            return this;
        }
        @CustomType.Setter
        public Builder allowedGroups(@Nullable List<String> allowedGroups) {
            this.allowedGroups = allowedGroups;
            return this;
        }
        public Builder allowedGroups(String... allowedGroups) {
            return allowedGroups(List.of(allowedGroups));
        }
        @CustomType.Setter
        public Builder apiUrl(@Nullable String apiUrl) {
            this.apiUrl = apiUrl;
            return this;
        }
        @CustomType.Setter
        public Builder authUrl(@Nullable String authUrl) {
            this.authUrl = authUrl;
            return this;
        }
        @CustomType.Setter
        public Builder clientId(String clientId) {
            this.clientId = Objects.requireNonNull(clientId);
            return this;
        }
        @CustomType.Setter
        public Builder clientSecret(String clientSecret) {
            this.clientSecret = Objects.requireNonNull(clientSecret);
            return this;
        }
        @CustomType.Setter
        public Builder tokenUrl(@Nullable String tokenUrl) {
            this.tokenUrl = tokenUrl;
            return this;
        }
        public GetGrafanaGrafanaUserConfigAuthGitlab build() {
            final var o = new GetGrafanaGrafanaUserConfigAuthGitlab();
            o.allowSignUp = allowSignUp;
            o.allowedGroups = allowedGroups;
            o.apiUrl = apiUrl;
            o.authUrl = authUrl;
            o.clientId = clientId;
            o.clientSecret = clientSecret;
            o.tokenUrl = tokenUrl;
            return o;
        }
    }
}
