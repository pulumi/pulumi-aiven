// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AwsOrgVpcPeeringConnectionState extends com.pulumi.resources.ResourceArgs {

    public static final AwsOrgVpcPeeringConnectionState Empty = new AwsOrgVpcPeeringConnectionState();

    /**
     * AWS account ID. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="awsAccountId")
    private @Nullable Output<String> awsAccountId;

    /**
     * @return AWS account ID. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> awsAccountId() {
        return Optional.ofNullable(this.awsAccountId);
    }

    /**
     * AWS VPC ID. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="awsVpcId")
    private @Nullable Output<String> awsVpcId;

    /**
     * @return AWS VPC ID. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> awsVpcId() {
        return Optional.ofNullable(this.awsVpcId);
    }

    /**
     * The ID of the AWS VPC peering connection.
     * 
     */
    @Import(name="awsVpcPeeringConnectionId")
    private @Nullable Output<String> awsVpcPeeringConnectionId;

    /**
     * @return The ID of the AWS VPC peering connection.
     * 
     */
    public Optional<Output<String>> awsVpcPeeringConnectionId() {
        return Optional.ofNullable(this.awsVpcPeeringConnectionId);
    }

    /**
     * The AWS region of the peered VPC. For example, `eu-central-1`.
     * 
     */
    @Import(name="awsVpcRegion")
    private @Nullable Output<String> awsVpcRegion;

    /**
     * @return The AWS region of the peered VPC. For example, `eu-central-1`.
     * 
     */
    public Optional<Output<String>> awsVpcRegion() {
        return Optional.ofNullable(this.awsVpcRegion);
    }

    /**
     * Identifier of the organization.
     * 
     */
    @Import(name="organizationId")
    private @Nullable Output<String> organizationId;

    /**
     * @return Identifier of the organization.
     * 
     */
    public Optional<Output<String>> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }

    /**
     * Identifier of the organization VPC.
     * 
     */
    @Import(name="organizationVpcId")
    private @Nullable Output<String> organizationVpcId;

    /**
     * @return Identifier of the organization VPC.
     * 
     */
    public Optional<Output<String>> organizationVpcId() {
        return Optional.ofNullable(this.organizationVpcId);
    }

    /**
     * The ID of the peering connection.
     * 
     */
    @Import(name="peeringConnectionId")
    private @Nullable Output<String> peeringConnectionId;

    /**
     * @return The ID of the peering connection.
     * 
     */
    public Optional<Output<String>> peeringConnectionId() {
        return Optional.ofNullable(this.peeringConnectionId);
    }

    /**
     * State of the peering connection. The possible values are `ACTIVE`, `APPROVED`, `APPROVED_PEER_REQUESTED`, `DELETED`, `DELETED_BY_PEER`, `DELETING`, `ERROR`, `INVALID_SPECIFICATION`, `PENDING_PEER` and `REJECTED_BY_PEER`.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return State of the peering connection. The possible values are `ACTIVE`, `APPROVED`, `APPROVED_PEER_REQUESTED`, `DELETED`, `DELETED_BY_PEER`, `DELETING`, `ERROR`, `INVALID_SPECIFICATION`, `PENDING_PEER` and `REJECTED_BY_PEER`.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private AwsOrgVpcPeeringConnectionState() {}

    private AwsOrgVpcPeeringConnectionState(AwsOrgVpcPeeringConnectionState $) {
        this.awsAccountId = $.awsAccountId;
        this.awsVpcId = $.awsVpcId;
        this.awsVpcPeeringConnectionId = $.awsVpcPeeringConnectionId;
        this.awsVpcRegion = $.awsVpcRegion;
        this.organizationId = $.organizationId;
        this.organizationVpcId = $.organizationVpcId;
        this.peeringConnectionId = $.peeringConnectionId;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AwsOrgVpcPeeringConnectionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AwsOrgVpcPeeringConnectionState $;

        public Builder() {
            $ = new AwsOrgVpcPeeringConnectionState();
        }

        public Builder(AwsOrgVpcPeeringConnectionState defaults) {
            $ = new AwsOrgVpcPeeringConnectionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param awsAccountId AWS account ID. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder awsAccountId(@Nullable Output<String> awsAccountId) {
            $.awsAccountId = awsAccountId;
            return this;
        }

        /**
         * @param awsAccountId AWS account ID. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder awsAccountId(String awsAccountId) {
            return awsAccountId(Output.of(awsAccountId));
        }

        /**
         * @param awsVpcId AWS VPC ID. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder awsVpcId(@Nullable Output<String> awsVpcId) {
            $.awsVpcId = awsVpcId;
            return this;
        }

        /**
         * @param awsVpcId AWS VPC ID. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder awsVpcId(String awsVpcId) {
            return awsVpcId(Output.of(awsVpcId));
        }

        /**
         * @param awsVpcPeeringConnectionId The ID of the AWS VPC peering connection.
         * 
         * @return builder
         * 
         */
        public Builder awsVpcPeeringConnectionId(@Nullable Output<String> awsVpcPeeringConnectionId) {
            $.awsVpcPeeringConnectionId = awsVpcPeeringConnectionId;
            return this;
        }

        /**
         * @param awsVpcPeeringConnectionId The ID of the AWS VPC peering connection.
         * 
         * @return builder
         * 
         */
        public Builder awsVpcPeeringConnectionId(String awsVpcPeeringConnectionId) {
            return awsVpcPeeringConnectionId(Output.of(awsVpcPeeringConnectionId));
        }

        /**
         * @param awsVpcRegion The AWS region of the peered VPC. For example, `eu-central-1`.
         * 
         * @return builder
         * 
         */
        public Builder awsVpcRegion(@Nullable Output<String> awsVpcRegion) {
            $.awsVpcRegion = awsVpcRegion;
            return this;
        }

        /**
         * @param awsVpcRegion The AWS region of the peered VPC. For example, `eu-central-1`.
         * 
         * @return builder
         * 
         */
        public Builder awsVpcRegion(String awsVpcRegion) {
            return awsVpcRegion(Output.of(awsVpcRegion));
        }

        /**
         * @param organizationId Identifier of the organization.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(@Nullable Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId Identifier of the organization.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        /**
         * @param organizationVpcId Identifier of the organization VPC.
         * 
         * @return builder
         * 
         */
        public Builder organizationVpcId(@Nullable Output<String> organizationVpcId) {
            $.organizationVpcId = organizationVpcId;
            return this;
        }

        /**
         * @param organizationVpcId Identifier of the organization VPC.
         * 
         * @return builder
         * 
         */
        public Builder organizationVpcId(String organizationVpcId) {
            return organizationVpcId(Output.of(organizationVpcId));
        }

        /**
         * @param peeringConnectionId The ID of the peering connection.
         * 
         * @return builder
         * 
         */
        public Builder peeringConnectionId(@Nullable Output<String> peeringConnectionId) {
            $.peeringConnectionId = peeringConnectionId;
            return this;
        }

        /**
         * @param peeringConnectionId The ID of the peering connection.
         * 
         * @return builder
         * 
         */
        public Builder peeringConnectionId(String peeringConnectionId) {
            return peeringConnectionId(Output.of(peeringConnectionId));
        }

        /**
         * @param state State of the peering connection. The possible values are `ACTIVE`, `APPROVED`, `APPROVED_PEER_REQUESTED`, `DELETED`, `DELETED_BY_PEER`, `DELETING`, `ERROR`, `INVALID_SPECIFICATION`, `PENDING_PEER` and `REJECTED_BY_PEER`.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state State of the peering connection. The possible values are `ACTIVE`, `APPROVED`, `APPROVED_PEER_REQUESTED`, `DELETED`, `DELETED_BY_PEER`, `DELETING`, `ERROR`, `INVALID_SPECIFICATION`, `PENDING_PEER` and `REJECTED_BY_PEER`.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        public AwsOrgVpcPeeringConnectionState build() {
            return $;
        }
    }

}
