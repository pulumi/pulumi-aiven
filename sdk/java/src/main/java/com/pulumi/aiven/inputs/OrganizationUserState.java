// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OrganizationUserState extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationUserState Empty = new OrganizationUserState();

    /**
     * This is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an organization.
     * 
     */
    @Import(name="accepted")
    private @Nullable Output<Boolean> accepted;

    /**
     * @return This is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an organization.
     * 
     */
    public Optional<Output<Boolean>> accepted() {
        return Optional.ofNullable(this.accepted);
    }

    /**
     * Time of creation
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return Time of creation
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The email address of the user who sent an invitation to the user.
     * 
     */
    @Import(name="invitedBy")
    private @Nullable Output<String> invitedBy;

    /**
     * @return The email address of the user who sent an invitation to the user.
     * 
     */
    public Optional<Output<String>> invitedBy() {
        return Optional.ofNullable(this.invitedBy);
    }

    /**
     * The unique organization ID. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="organizationId")
    private @Nullable Output<String> organizationId;

    /**
     * @return The unique organization ID. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }

    /**
     * This is a user email address that first will be invited, and after accepting an invitation, they become a member of the organization. Should be lowercase. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="userEmail")
    private @Nullable Output<String> userEmail;

    /**
     * @return This is a user email address that first will be invited, and after accepting an invitation, they become a member of the organization. Should be lowercase. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> userEmail() {
        return Optional.ofNullable(this.userEmail);
    }

    private OrganizationUserState() {}

    private OrganizationUserState(OrganizationUserState $) {
        this.accepted = $.accepted;
        this.createTime = $.createTime;
        this.invitedBy = $.invitedBy;
        this.organizationId = $.organizationId;
        this.userEmail = $.userEmail;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationUserState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationUserState $;

        public Builder() {
            $ = new OrganizationUserState();
        }

        public Builder(OrganizationUserState defaults) {
            $ = new OrganizationUserState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accepted This is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an organization.
         * 
         * @return builder
         * 
         */
        public Builder accepted(@Nullable Output<Boolean> accepted) {
            $.accepted = accepted;
            return this;
        }

        /**
         * @param accepted This is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an organization.
         * 
         * @return builder
         * 
         */
        public Builder accepted(Boolean accepted) {
            return accepted(Output.of(accepted));
        }

        /**
         * @param createTime Time of creation
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime Time of creation
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param invitedBy The email address of the user who sent an invitation to the user.
         * 
         * @return builder
         * 
         */
        public Builder invitedBy(@Nullable Output<String> invitedBy) {
            $.invitedBy = invitedBy;
            return this;
        }

        /**
         * @param invitedBy The email address of the user who sent an invitation to the user.
         * 
         * @return builder
         * 
         */
        public Builder invitedBy(String invitedBy) {
            return invitedBy(Output.of(invitedBy));
        }

        /**
         * @param organizationId The unique organization ID. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(@Nullable Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId The unique organization ID. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        /**
         * @param userEmail This is a user email address that first will be invited, and after accepting an invitation, they become a member of the organization. Should be lowercase. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder userEmail(@Nullable Output<String> userEmail) {
            $.userEmail = userEmail;
            return this;
        }

        /**
         * @param userEmail This is a user email address that first will be invited, and after accepting an invitation, they become a member of the organization. Should be lowercase. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder userEmail(String userEmail) {
            return userEmail(Output.of(userEmail));
        }

        public OrganizationUserState build() {
            return $;
        }
    }

}
