// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GrafanaGrafanaUserConfigSmtpServerArgs extends com.pulumi.resources.ResourceArgs {

    public static final GrafanaGrafanaUserConfigSmtpServerArgs Empty = new GrafanaGrafanaUserConfigSmtpServerArgs();

    @Import(name="fromAddress", required=true)
    private Output<String> fromAddress;

    public Output<String> fromAddress() {
        return this.fromAddress;
    }

    @Import(name="fromName")
    private @Nullable Output<String> fromName;

    public Optional<Output<String>> fromName() {
        return Optional.ofNullable(this.fromName);
    }

    @Import(name="host", required=true)
    private Output<String> host;

    public Output<String> host() {
        return this.host;
    }

    @Import(name="password")
    private @Nullable Output<String> password;

    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    @Import(name="port", required=true)
    private Output<Integer> port;

    public Output<Integer> port() {
        return this.port;
    }

    @Import(name="skipVerify")
    private @Nullable Output<Boolean> skipVerify;

    public Optional<Output<Boolean>> skipVerify() {
        return Optional.ofNullable(this.skipVerify);
    }

    @Import(name="starttlsPolicy")
    private @Nullable Output<String> starttlsPolicy;

    public Optional<Output<String>> starttlsPolicy() {
        return Optional.ofNullable(this.starttlsPolicy);
    }

    @Import(name="username")
    private @Nullable Output<String> username;

    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    private GrafanaGrafanaUserConfigSmtpServerArgs() {}

    private GrafanaGrafanaUserConfigSmtpServerArgs(GrafanaGrafanaUserConfigSmtpServerArgs $) {
        this.fromAddress = $.fromAddress;
        this.fromName = $.fromName;
        this.host = $.host;
        this.password = $.password;
        this.port = $.port;
        this.skipVerify = $.skipVerify;
        this.starttlsPolicy = $.starttlsPolicy;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GrafanaGrafanaUserConfigSmtpServerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GrafanaGrafanaUserConfigSmtpServerArgs $;

        public Builder() {
            $ = new GrafanaGrafanaUserConfigSmtpServerArgs();
        }

        public Builder(GrafanaGrafanaUserConfigSmtpServerArgs defaults) {
            $ = new GrafanaGrafanaUserConfigSmtpServerArgs(Objects.requireNonNull(defaults));
        }

        public Builder fromAddress(Output<String> fromAddress) {
            $.fromAddress = fromAddress;
            return this;
        }

        public Builder fromAddress(String fromAddress) {
            return fromAddress(Output.of(fromAddress));
        }

        public Builder fromName(@Nullable Output<String> fromName) {
            $.fromName = fromName;
            return this;
        }

        public Builder fromName(String fromName) {
            return fromName(Output.of(fromName));
        }

        public Builder host(Output<String> host) {
            $.host = host;
            return this;
        }

        public Builder host(String host) {
            return host(Output.of(host));
        }

        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        public Builder password(String password) {
            return password(Output.of(password));
        }

        public Builder port(Output<Integer> port) {
            $.port = port;
            return this;
        }

        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        public Builder skipVerify(@Nullable Output<Boolean> skipVerify) {
            $.skipVerify = skipVerify;
            return this;
        }

        public Builder skipVerify(Boolean skipVerify) {
            return skipVerify(Output.of(skipVerify));
        }

        public Builder starttlsPolicy(@Nullable Output<String> starttlsPolicy) {
            $.starttlsPolicy = starttlsPolicy;
            return this;
        }

        public Builder starttlsPolicy(String starttlsPolicy) {
            return starttlsPolicy(Output.of(starttlsPolicy));
        }

        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        public Builder username(String username) {
            return username(Output.of(username));
        }

        public GrafanaGrafanaUserConfigSmtpServerArgs build() {
            if ($.fromAddress == null) {
                throw new MissingRequiredPropertyException("GrafanaGrafanaUserConfigSmtpServerArgs", "fromAddress");
            }
            if ($.host == null) {
                throw new MissingRequiredPropertyException("GrafanaGrafanaUserConfigSmtpServerArgs", "host");
            }
            if ($.port == null) {
                throw new MissingRequiredPropertyException("GrafanaGrafanaUserConfigSmtpServerArgs", "port");
            }
            return $;
        }
    }

}
