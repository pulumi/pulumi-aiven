// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.aiven.inputs.KafkaKafkaUserConfigKafkaArgs;
import com.pulumi.aiven.inputs.KafkaKafkaUserConfigKafkaAuthenticationMethodsArgs;
import com.pulumi.aiven.inputs.KafkaKafkaUserConfigKafkaConnectConfigArgs;
import com.pulumi.aiven.inputs.KafkaKafkaUserConfigKafkaRestConfigArgs;
import com.pulumi.aiven.inputs.KafkaKafkaUserConfigPrivateAccessArgs;
import com.pulumi.aiven.inputs.KafkaKafkaUserConfigPrivatelinkAccessArgs;
import com.pulumi.aiven.inputs.KafkaKafkaUserConfigPublicAccessArgs;
import com.pulumi.aiven.inputs.KafkaKafkaUserConfigSchemaRegistryConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KafkaKafkaUserConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final KafkaKafkaUserConfigArgs Empty = new KafkaKafkaUserConfigArgs();

    @Import(name="customDomain")
    private @Nullable Output<String> customDomain;

    public Optional<Output<String>> customDomain() {
        return Optional.ofNullable(this.customDomain);
    }

    @Import(name="ipFilters")
    private @Nullable Output<List<String>> ipFilters;

    public Optional<Output<List<String>>> ipFilters() {
        return Optional.ofNullable(this.ipFilters);
    }

    @Import(name="kafka")
    private @Nullable Output<KafkaKafkaUserConfigKafkaArgs> kafka;

    public Optional<Output<KafkaKafkaUserConfigKafkaArgs>> kafka() {
        return Optional.ofNullable(this.kafka);
    }

    @Import(name="kafkaAuthenticationMethods")
    private @Nullable Output<KafkaKafkaUserConfigKafkaAuthenticationMethodsArgs> kafkaAuthenticationMethods;

    public Optional<Output<KafkaKafkaUserConfigKafkaAuthenticationMethodsArgs>> kafkaAuthenticationMethods() {
        return Optional.ofNullable(this.kafkaAuthenticationMethods);
    }

    @Import(name="kafkaConnect")
    private @Nullable Output<String> kafkaConnect;

    public Optional<Output<String>> kafkaConnect() {
        return Optional.ofNullable(this.kafkaConnect);
    }

    @Import(name="kafkaConnectConfig")
    private @Nullable Output<KafkaKafkaUserConfigKafkaConnectConfigArgs> kafkaConnectConfig;

    public Optional<Output<KafkaKafkaUserConfigKafkaConnectConfigArgs>> kafkaConnectConfig() {
        return Optional.ofNullable(this.kafkaConnectConfig);
    }

    @Import(name="kafkaRest")
    private @Nullable Output<String> kafkaRest;

    public Optional<Output<String>> kafkaRest() {
        return Optional.ofNullable(this.kafkaRest);
    }

    @Import(name="kafkaRestConfig")
    private @Nullable Output<KafkaKafkaUserConfigKafkaRestConfigArgs> kafkaRestConfig;

    public Optional<Output<KafkaKafkaUserConfigKafkaRestConfigArgs>> kafkaRestConfig() {
        return Optional.ofNullable(this.kafkaRestConfig);
    }

    @Import(name="kafkaVersion")
    private @Nullable Output<String> kafkaVersion;

    public Optional<Output<String>> kafkaVersion() {
        return Optional.ofNullable(this.kafkaVersion);
    }

    @Import(name="privateAccess")
    private @Nullable Output<KafkaKafkaUserConfigPrivateAccessArgs> privateAccess;

    public Optional<Output<KafkaKafkaUserConfigPrivateAccessArgs>> privateAccess() {
        return Optional.ofNullable(this.privateAccess);
    }

    @Import(name="privatelinkAccess")
    private @Nullable Output<KafkaKafkaUserConfigPrivatelinkAccessArgs> privatelinkAccess;

    public Optional<Output<KafkaKafkaUserConfigPrivatelinkAccessArgs>> privatelinkAccess() {
        return Optional.ofNullable(this.privatelinkAccess);
    }

    @Import(name="publicAccess")
    private @Nullable Output<KafkaKafkaUserConfigPublicAccessArgs> publicAccess;

    public Optional<Output<KafkaKafkaUserConfigPublicAccessArgs>> publicAccess() {
        return Optional.ofNullable(this.publicAccess);
    }

    @Import(name="schemaRegistry")
    private @Nullable Output<String> schemaRegistry;

    public Optional<Output<String>> schemaRegistry() {
        return Optional.ofNullable(this.schemaRegistry);
    }

    @Import(name="schemaRegistryConfig")
    private @Nullable Output<KafkaKafkaUserConfigSchemaRegistryConfigArgs> schemaRegistryConfig;

    public Optional<Output<KafkaKafkaUserConfigSchemaRegistryConfigArgs>> schemaRegistryConfig() {
        return Optional.ofNullable(this.schemaRegistryConfig);
    }

    @Import(name="staticIps")
    private @Nullable Output<String> staticIps;

    public Optional<Output<String>> staticIps() {
        return Optional.ofNullable(this.staticIps);
    }

    private KafkaKafkaUserConfigArgs() {}

    private KafkaKafkaUserConfigArgs(KafkaKafkaUserConfigArgs $) {
        this.customDomain = $.customDomain;
        this.ipFilters = $.ipFilters;
        this.kafka = $.kafka;
        this.kafkaAuthenticationMethods = $.kafkaAuthenticationMethods;
        this.kafkaConnect = $.kafkaConnect;
        this.kafkaConnectConfig = $.kafkaConnectConfig;
        this.kafkaRest = $.kafkaRest;
        this.kafkaRestConfig = $.kafkaRestConfig;
        this.kafkaVersion = $.kafkaVersion;
        this.privateAccess = $.privateAccess;
        this.privatelinkAccess = $.privatelinkAccess;
        this.publicAccess = $.publicAccess;
        this.schemaRegistry = $.schemaRegistry;
        this.schemaRegistryConfig = $.schemaRegistryConfig;
        this.staticIps = $.staticIps;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KafkaKafkaUserConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KafkaKafkaUserConfigArgs $;

        public Builder() {
            $ = new KafkaKafkaUserConfigArgs();
        }

        public Builder(KafkaKafkaUserConfigArgs defaults) {
            $ = new KafkaKafkaUserConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder customDomain(@Nullable Output<String> customDomain) {
            $.customDomain = customDomain;
            return this;
        }

        public Builder customDomain(String customDomain) {
            return customDomain(Output.of(customDomain));
        }

        public Builder ipFilters(@Nullable Output<List<String>> ipFilters) {
            $.ipFilters = ipFilters;
            return this;
        }

        public Builder ipFilters(List<String> ipFilters) {
            return ipFilters(Output.of(ipFilters));
        }

        public Builder ipFilters(String... ipFilters) {
            return ipFilters(List.of(ipFilters));
        }

        public Builder kafka(@Nullable Output<KafkaKafkaUserConfigKafkaArgs> kafka) {
            $.kafka = kafka;
            return this;
        }

        public Builder kafka(KafkaKafkaUserConfigKafkaArgs kafka) {
            return kafka(Output.of(kafka));
        }

        public Builder kafkaAuthenticationMethods(@Nullable Output<KafkaKafkaUserConfigKafkaAuthenticationMethodsArgs> kafkaAuthenticationMethods) {
            $.kafkaAuthenticationMethods = kafkaAuthenticationMethods;
            return this;
        }

        public Builder kafkaAuthenticationMethods(KafkaKafkaUserConfigKafkaAuthenticationMethodsArgs kafkaAuthenticationMethods) {
            return kafkaAuthenticationMethods(Output.of(kafkaAuthenticationMethods));
        }

        public Builder kafkaConnect(@Nullable Output<String> kafkaConnect) {
            $.kafkaConnect = kafkaConnect;
            return this;
        }

        public Builder kafkaConnect(String kafkaConnect) {
            return kafkaConnect(Output.of(kafkaConnect));
        }

        public Builder kafkaConnectConfig(@Nullable Output<KafkaKafkaUserConfigKafkaConnectConfigArgs> kafkaConnectConfig) {
            $.kafkaConnectConfig = kafkaConnectConfig;
            return this;
        }

        public Builder kafkaConnectConfig(KafkaKafkaUserConfigKafkaConnectConfigArgs kafkaConnectConfig) {
            return kafkaConnectConfig(Output.of(kafkaConnectConfig));
        }

        public Builder kafkaRest(@Nullable Output<String> kafkaRest) {
            $.kafkaRest = kafkaRest;
            return this;
        }

        public Builder kafkaRest(String kafkaRest) {
            return kafkaRest(Output.of(kafkaRest));
        }

        public Builder kafkaRestConfig(@Nullable Output<KafkaKafkaUserConfigKafkaRestConfigArgs> kafkaRestConfig) {
            $.kafkaRestConfig = kafkaRestConfig;
            return this;
        }

        public Builder kafkaRestConfig(KafkaKafkaUserConfigKafkaRestConfigArgs kafkaRestConfig) {
            return kafkaRestConfig(Output.of(kafkaRestConfig));
        }

        public Builder kafkaVersion(@Nullable Output<String> kafkaVersion) {
            $.kafkaVersion = kafkaVersion;
            return this;
        }

        public Builder kafkaVersion(String kafkaVersion) {
            return kafkaVersion(Output.of(kafkaVersion));
        }

        public Builder privateAccess(@Nullable Output<KafkaKafkaUserConfigPrivateAccessArgs> privateAccess) {
            $.privateAccess = privateAccess;
            return this;
        }

        public Builder privateAccess(KafkaKafkaUserConfigPrivateAccessArgs privateAccess) {
            return privateAccess(Output.of(privateAccess));
        }

        public Builder privatelinkAccess(@Nullable Output<KafkaKafkaUserConfigPrivatelinkAccessArgs> privatelinkAccess) {
            $.privatelinkAccess = privatelinkAccess;
            return this;
        }

        public Builder privatelinkAccess(KafkaKafkaUserConfigPrivatelinkAccessArgs privatelinkAccess) {
            return privatelinkAccess(Output.of(privatelinkAccess));
        }

        public Builder publicAccess(@Nullable Output<KafkaKafkaUserConfigPublicAccessArgs> publicAccess) {
            $.publicAccess = publicAccess;
            return this;
        }

        public Builder publicAccess(KafkaKafkaUserConfigPublicAccessArgs publicAccess) {
            return publicAccess(Output.of(publicAccess));
        }

        public Builder schemaRegistry(@Nullable Output<String> schemaRegistry) {
            $.schemaRegistry = schemaRegistry;
            return this;
        }

        public Builder schemaRegistry(String schemaRegistry) {
            return schemaRegistry(Output.of(schemaRegistry));
        }

        public Builder schemaRegistryConfig(@Nullable Output<KafkaKafkaUserConfigSchemaRegistryConfigArgs> schemaRegistryConfig) {
            $.schemaRegistryConfig = schemaRegistryConfig;
            return this;
        }

        public Builder schemaRegistryConfig(KafkaKafkaUserConfigSchemaRegistryConfigArgs schemaRegistryConfig) {
            return schemaRegistryConfig(Output.of(schemaRegistryConfig));
        }

        public Builder staticIps(@Nullable Output<String> staticIps) {
            $.staticIps = staticIps;
            return this;
        }

        public Builder staticIps(String staticIps) {
            return staticIps(Output.of(staticIps));
        }

        public KafkaKafkaUserConfigArgs build() {
            return $;
        }
    }

}
