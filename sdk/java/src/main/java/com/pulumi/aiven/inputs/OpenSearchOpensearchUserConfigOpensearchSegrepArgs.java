// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OpenSearchOpensearchUserConfigOpensearchSegrepArgs extends com.pulumi.resources.ResourceArgs {

    public static final OpenSearchOpensearchUserConfigOpensearchSegrepArgs Empty = new OpenSearchOpensearchUserConfigOpensearchSegrepArgs();

    /**
     * The maximum number of indexing checkpoints that a replica shard can fall behind when copying from primary. Once `segrep.pressure.checkpoint.limit` is breached along with `segrep.pressure.time.limit`, the segment replication backpressure mechanism is initiated. Default is 4 checkpoints. Default: `4`.
     * 
     */
    @Import(name="pressureCheckpointLimit")
    private @Nullable Output<Integer> pressureCheckpointLimit;

    /**
     * @return The maximum number of indexing checkpoints that a replica shard can fall behind when copying from primary. Once `segrep.pressure.checkpoint.limit` is breached along with `segrep.pressure.time.limit`, the segment replication backpressure mechanism is initiated. Default is 4 checkpoints. Default: `4`.
     * 
     */
    public Optional<Output<Integer>> pressureCheckpointLimit() {
        return Optional.ofNullable(this.pressureCheckpointLimit);
    }

    /**
     * Enables the segment replication backpressure mechanism. Default is false. Default: `false`.
     * 
     */
    @Import(name="pressureEnabled")
    private @Nullable Output<Boolean> pressureEnabled;

    /**
     * @return Enables the segment replication backpressure mechanism. Default is false. Default: `false`.
     * 
     */
    public Optional<Output<Boolean>> pressureEnabled() {
        return Optional.ofNullable(this.pressureEnabled);
    }

    /**
     * The maximum number of stale replica shards that can exist in a replication group. Once `segrep.pressure.replica.stale.limit` is breached, the segment replication backpressure mechanism is initiated. Default is .5, which is 50% of a replication group. Default: `0.5`.
     * 
     */
    @Import(name="pressureReplicaStaleLimit")
    private @Nullable Output<Double> pressureReplicaStaleLimit;

    /**
     * @return The maximum number of stale replica shards that can exist in a replication group. Once `segrep.pressure.replica.stale.limit` is breached, the segment replication backpressure mechanism is initiated. Default is .5, which is 50% of a replication group. Default: `0.5`.
     * 
     */
    public Optional<Output<Double>> pressureReplicaStaleLimit() {
        return Optional.ofNullable(this.pressureReplicaStaleLimit);
    }

    /**
     * The maximum amount of time that a replica shard can take to copy from the primary shard. Once segrep.pressure.time.limit is breached along with segrep.pressure.checkpoint.limit, the segment replication backpressure mechanism is initiated. Default is 5 minutes. Default: `5m`.
     * 
     */
    @Import(name="pressureTimeLimit")
    private @Nullable Output<String> pressureTimeLimit;

    /**
     * @return The maximum amount of time that a replica shard can take to copy from the primary shard. Once segrep.pressure.time.limit is breached along with segrep.pressure.checkpoint.limit, the segment replication backpressure mechanism is initiated. Default is 5 minutes. Default: `5m`.
     * 
     */
    public Optional<Output<String>> pressureTimeLimit() {
        return Optional.ofNullable(this.pressureTimeLimit);
    }

    private OpenSearchOpensearchUserConfigOpensearchSegrepArgs() {}

    private OpenSearchOpensearchUserConfigOpensearchSegrepArgs(OpenSearchOpensearchUserConfigOpensearchSegrepArgs $) {
        this.pressureCheckpointLimit = $.pressureCheckpointLimit;
        this.pressureEnabled = $.pressureEnabled;
        this.pressureReplicaStaleLimit = $.pressureReplicaStaleLimit;
        this.pressureTimeLimit = $.pressureTimeLimit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OpenSearchOpensearchUserConfigOpensearchSegrepArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OpenSearchOpensearchUserConfigOpensearchSegrepArgs $;

        public Builder() {
            $ = new OpenSearchOpensearchUserConfigOpensearchSegrepArgs();
        }

        public Builder(OpenSearchOpensearchUserConfigOpensearchSegrepArgs defaults) {
            $ = new OpenSearchOpensearchUserConfigOpensearchSegrepArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param pressureCheckpointLimit The maximum number of indexing checkpoints that a replica shard can fall behind when copying from primary. Once `segrep.pressure.checkpoint.limit` is breached along with `segrep.pressure.time.limit`, the segment replication backpressure mechanism is initiated. Default is 4 checkpoints. Default: `4`.
         * 
         * @return builder
         * 
         */
        public Builder pressureCheckpointLimit(@Nullable Output<Integer> pressureCheckpointLimit) {
            $.pressureCheckpointLimit = pressureCheckpointLimit;
            return this;
        }

        /**
         * @param pressureCheckpointLimit The maximum number of indexing checkpoints that a replica shard can fall behind when copying from primary. Once `segrep.pressure.checkpoint.limit` is breached along with `segrep.pressure.time.limit`, the segment replication backpressure mechanism is initiated. Default is 4 checkpoints. Default: `4`.
         * 
         * @return builder
         * 
         */
        public Builder pressureCheckpointLimit(Integer pressureCheckpointLimit) {
            return pressureCheckpointLimit(Output.of(pressureCheckpointLimit));
        }

        /**
         * @param pressureEnabled Enables the segment replication backpressure mechanism. Default is false. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder pressureEnabled(@Nullable Output<Boolean> pressureEnabled) {
            $.pressureEnabled = pressureEnabled;
            return this;
        }

        /**
         * @param pressureEnabled Enables the segment replication backpressure mechanism. Default is false. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder pressureEnabled(Boolean pressureEnabled) {
            return pressureEnabled(Output.of(pressureEnabled));
        }

        /**
         * @param pressureReplicaStaleLimit The maximum number of stale replica shards that can exist in a replication group. Once `segrep.pressure.replica.stale.limit` is breached, the segment replication backpressure mechanism is initiated. Default is .5, which is 50% of a replication group. Default: `0.5`.
         * 
         * @return builder
         * 
         */
        public Builder pressureReplicaStaleLimit(@Nullable Output<Double> pressureReplicaStaleLimit) {
            $.pressureReplicaStaleLimit = pressureReplicaStaleLimit;
            return this;
        }

        /**
         * @param pressureReplicaStaleLimit The maximum number of stale replica shards that can exist in a replication group. Once `segrep.pressure.replica.stale.limit` is breached, the segment replication backpressure mechanism is initiated. Default is .5, which is 50% of a replication group. Default: `0.5`.
         * 
         * @return builder
         * 
         */
        public Builder pressureReplicaStaleLimit(Double pressureReplicaStaleLimit) {
            return pressureReplicaStaleLimit(Output.of(pressureReplicaStaleLimit));
        }

        /**
         * @param pressureTimeLimit The maximum amount of time that a replica shard can take to copy from the primary shard. Once segrep.pressure.time.limit is breached along with segrep.pressure.checkpoint.limit, the segment replication backpressure mechanism is initiated. Default is 5 minutes. Default: `5m`.
         * 
         * @return builder
         * 
         */
        public Builder pressureTimeLimit(@Nullable Output<String> pressureTimeLimit) {
            $.pressureTimeLimit = pressureTimeLimit;
            return this;
        }

        /**
         * @param pressureTimeLimit The maximum amount of time that a replica shard can take to copy from the primary shard. Once segrep.pressure.time.limit is breached along with segrep.pressure.checkpoint.limit, the segment replication backpressure mechanism is initiated. Default is 5 minutes. Default: `5m`.
         * 
         * @return builder
         * 
         */
        public Builder pressureTimeLimit(String pressureTimeLimit) {
            return pressureTimeLimit(Output.of(pressureTimeLimit));
        }

        public OpenSearchOpensearchUserConfigOpensearchSegrepArgs build() {
            return $;
        }
    }

}
