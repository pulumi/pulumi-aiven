// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetKafkaConnectKafkaConnectUserConfigSecretProviderAws {
    /**
     * @return Access key used to authenticate with aws.
     * 
     */
    private @Nullable String accessKey;
    /**
     * @return Enum: `credentials`. Auth method of the vault secret provider.
     * 
     */
    private String authMethod;
    /**
     * @return Region used to lookup secrets with AWS SecretManager.
     * 
     */
    private String region;
    /**
     * @return Secret key used to authenticate with aws.
     * 
     */
    private @Nullable String secretKey;

    private GetKafkaConnectKafkaConnectUserConfigSecretProviderAws() {}
    /**
     * @return Access key used to authenticate with aws.
     * 
     */
    public Optional<String> accessKey() {
        return Optional.ofNullable(this.accessKey);
    }
    /**
     * @return Enum: `credentials`. Auth method of the vault secret provider.
     * 
     */
    public String authMethod() {
        return this.authMethod;
    }
    /**
     * @return Region used to lookup secrets with AWS SecretManager.
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return Secret key used to authenticate with aws.
     * 
     */
    public Optional<String> secretKey() {
        return Optional.ofNullable(this.secretKey);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKafkaConnectKafkaConnectUserConfigSecretProviderAws defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accessKey;
        private String authMethod;
        private String region;
        private @Nullable String secretKey;
        public Builder() {}
        public Builder(GetKafkaConnectKafkaConnectUserConfigSecretProviderAws defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessKey = defaults.accessKey;
    	      this.authMethod = defaults.authMethod;
    	      this.region = defaults.region;
    	      this.secretKey = defaults.secretKey;
        }

        @CustomType.Setter
        public Builder accessKey(@Nullable String accessKey) {

            this.accessKey = accessKey;
            return this;
        }
        @CustomType.Setter
        public Builder authMethod(String authMethod) {
            if (authMethod == null) {
              throw new MissingRequiredPropertyException("GetKafkaConnectKafkaConnectUserConfigSecretProviderAws", "authMethod");
            }
            this.authMethod = authMethod;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetKafkaConnectKafkaConnectUserConfigSecretProviderAws", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder secretKey(@Nullable String secretKey) {

            this.secretKey = secretKey;
            return this;
        }
        public GetKafkaConnectKafkaConnectUserConfigSecretProviderAws build() {
            final var _resultValue = new GetKafkaConnectKafkaConnectUserConfigSecretProviderAws();
            _resultValue.accessKey = accessKey;
            _resultValue.authMethod = authMethod;
            _resultValue.region = region;
            _resultValue.secretKey = secretKey;
            return _resultValue;
        }
    }
}
