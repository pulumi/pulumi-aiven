// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.aiven.inputs.GovernanceAccessAccessDataArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GovernanceAccessArgs extends com.pulumi.resources.ResourceArgs {

    public static final GovernanceAccessArgs Empty = new GovernanceAccessArgs();

    /**
     * Details of the access. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="accessData", required=true)
    private Output<GovernanceAccessAccessDataArgs> accessData;

    /**
     * @return Details of the access. Changing this property forces recreation of the resource.
     * 
     */
    public Output<GovernanceAccessAccessDataArgs> accessData() {
        return this.accessData;
    }

    /**
     * The name to describe the access. Maximum length: `54`. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="accessName", required=true)
    private Output<String> accessName;

    /**
     * @return The name to describe the access. Maximum length: `54`. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> accessName() {
        return this.accessName;
    }

    /**
     * The type of access. The possible value is `KAFKA`. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="accessType", required=true)
    private Output<String> accessType;

    /**
     * @return The type of access. The possible value is `KAFKA`. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> accessType() {
        return this.accessType;
    }

    /**
     * The ID of the organization. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="organizationId", required=true)
    private Output<String> organizationId;

    /**
     * @return The ID of the organization. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> organizationId() {
        return this.organizationId;
    }

    /**
     * The ID of the user group that owns the access. Maximum length: `54`. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="ownerUserGroupId")
    private @Nullable Output<String> ownerUserGroupId;

    /**
     * @return The ID of the user group that owns the access. Maximum length: `54`. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> ownerUserGroupId() {
        return Optional.ofNullable(this.ownerUserGroupId);
    }

    private GovernanceAccessArgs() {}

    private GovernanceAccessArgs(GovernanceAccessArgs $) {
        this.accessData = $.accessData;
        this.accessName = $.accessName;
        this.accessType = $.accessType;
        this.organizationId = $.organizationId;
        this.ownerUserGroupId = $.ownerUserGroupId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GovernanceAccessArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GovernanceAccessArgs $;

        public Builder() {
            $ = new GovernanceAccessArgs();
        }

        public Builder(GovernanceAccessArgs defaults) {
            $ = new GovernanceAccessArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessData Details of the access. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder accessData(Output<GovernanceAccessAccessDataArgs> accessData) {
            $.accessData = accessData;
            return this;
        }

        /**
         * @param accessData Details of the access. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder accessData(GovernanceAccessAccessDataArgs accessData) {
            return accessData(Output.of(accessData));
        }

        /**
         * @param accessName The name to describe the access. Maximum length: `54`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder accessName(Output<String> accessName) {
            $.accessName = accessName;
            return this;
        }

        /**
         * @param accessName The name to describe the access. Maximum length: `54`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder accessName(String accessName) {
            return accessName(Output.of(accessName));
        }

        /**
         * @param accessType The type of access. The possible value is `KAFKA`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder accessType(Output<String> accessType) {
            $.accessType = accessType;
            return this;
        }

        /**
         * @param accessType The type of access. The possible value is `KAFKA`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder accessType(String accessType) {
            return accessType(Output.of(accessType));
        }

        /**
         * @param organizationId The ID of the organization. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId The ID of the organization. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        /**
         * @param ownerUserGroupId The ID of the user group that owns the access. Maximum length: `54`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder ownerUserGroupId(@Nullable Output<String> ownerUserGroupId) {
            $.ownerUserGroupId = ownerUserGroupId;
            return this;
        }

        /**
         * @param ownerUserGroupId The ID of the user group that owns the access. Maximum length: `54`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder ownerUserGroupId(String ownerUserGroupId) {
            return ownerUserGroupId(Output.of(ownerUserGroupId));
        }

        public GovernanceAccessArgs build() {
            if ($.accessData == null) {
                throw new MissingRequiredPropertyException("GovernanceAccessArgs", "accessData");
            }
            if ($.accessName == null) {
                throw new MissingRequiredPropertyException("GovernanceAccessArgs", "accessName");
            }
            if ($.accessType == null) {
                throw new MissingRequiredPropertyException("GovernanceAccessArgs", "accessType");
            }
            if ($.organizationId == null) {
                throw new MissingRequiredPropertyException("GovernanceAccessArgs", "organizationId");
            }
            return $;
        }
    }

}
