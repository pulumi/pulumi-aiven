// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OrganizationApplicationUserArgs extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationApplicationUserArgs Empty = new OrganizationApplicationUserArgs();

    /**
     * Makes the application user a super admin. The super admin role has completely unrestricted access to all organization resources and settings. This role should be limited to as few users as possible. For daily administrative tasks, assign users the organization admin role instead using the `aiven.OrganizationPermission` resource.
     * 
     * @deprecated
     * This field is no longer accepted by the API. For administrative tasks, assign application users the organization admin role instead using the aiven.OrganizationPermission resource.
     * 
     */
    @Deprecated /* This field is no longer accepted by the API. For administrative tasks, assign application users the organization admin role instead using the aiven.OrganizationPermission resource. */
    @Import(name="isSuperAdmin")
    private @Nullable Output<Boolean> isSuperAdmin;

    /**
     * @return Makes the application user a super admin. The super admin role has completely unrestricted access to all organization resources and settings. This role should be limited to as few users as possible. For daily administrative tasks, assign users the organization admin role instead using the `aiven.OrganizationPermission` resource.
     * 
     * @deprecated
     * This field is no longer accepted by the API. For administrative tasks, assign application users the organization admin role instead using the aiven.OrganizationPermission resource.
     * 
     */
    @Deprecated /* This field is no longer accepted by the API. For administrative tasks, assign application users the organization admin role instead using the aiven.OrganizationPermission resource. */
    public Optional<Output<Boolean>> isSuperAdmin() {
        return Optional.ofNullable(this.isSuperAdmin);
    }

    /**
     * Name of the application user.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the application user.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the organization the application user belongs to.
     * 
     */
    @Import(name="organizationId", required=true)
    private Output<String> organizationId;

    /**
     * @return The ID of the organization the application user belongs to.
     * 
     */
    public Output<String> organizationId() {
        return this.organizationId;
    }

    private OrganizationApplicationUserArgs() {}

    private OrganizationApplicationUserArgs(OrganizationApplicationUserArgs $) {
        this.isSuperAdmin = $.isSuperAdmin;
        this.name = $.name;
        this.organizationId = $.organizationId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationApplicationUserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationApplicationUserArgs $;

        public Builder() {
            $ = new OrganizationApplicationUserArgs();
        }

        public Builder(OrganizationApplicationUserArgs defaults) {
            $ = new OrganizationApplicationUserArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param isSuperAdmin Makes the application user a super admin. The super admin role has completely unrestricted access to all organization resources and settings. This role should be limited to as few users as possible. For daily administrative tasks, assign users the organization admin role instead using the `aiven.OrganizationPermission` resource.
         * 
         * @return builder
         * 
         * @deprecated
         * This field is no longer accepted by the API. For administrative tasks, assign application users the organization admin role instead using the aiven.OrganizationPermission resource.
         * 
         */
        @Deprecated /* This field is no longer accepted by the API. For administrative tasks, assign application users the organization admin role instead using the aiven.OrganizationPermission resource. */
        public Builder isSuperAdmin(@Nullable Output<Boolean> isSuperAdmin) {
            $.isSuperAdmin = isSuperAdmin;
            return this;
        }

        /**
         * @param isSuperAdmin Makes the application user a super admin. The super admin role has completely unrestricted access to all organization resources and settings. This role should be limited to as few users as possible. For daily administrative tasks, assign users the organization admin role instead using the `aiven.OrganizationPermission` resource.
         * 
         * @return builder
         * 
         * @deprecated
         * This field is no longer accepted by the API. For administrative tasks, assign application users the organization admin role instead using the aiven.OrganizationPermission resource.
         * 
         */
        @Deprecated /* This field is no longer accepted by the API. For administrative tasks, assign application users the organization admin role instead using the aiven.OrganizationPermission resource. */
        public Builder isSuperAdmin(Boolean isSuperAdmin) {
            return isSuperAdmin(Output.of(isSuperAdmin));
        }

        /**
         * @param name Name of the application user.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the application user.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param organizationId The ID of the organization the application user belongs to.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId The ID of the organization the application user belongs to.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        public OrganizationApplicationUserArgs build() {
            if ($.organizationId == null) {
                throw new MissingRequiredPropertyException("OrganizationApplicationUserArgs", "organizationId");
            }
            return $;
        }
    }

}
