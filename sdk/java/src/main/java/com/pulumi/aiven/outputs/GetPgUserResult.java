// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPgUserResult {
    /**
     * @return Access certificate for the user
     * 
     */
    private String accessCert;
    /**
     * @return Access certificate key for the user
     * 
     */
    private String accessKey;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The password of the PG User (not applicable for all services).
     * 
     */
    private String password;
    /**
     * @return Defines whether replication is allowed.
     * 
     */
    private Boolean pgAllowReplication;
    /**
     * @return Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    private String project;
    /**
     * @return Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    private String serviceName;
    /**
     * @return Type of the user account. Tells whether the user is the primary account or a regular account.
     * 
     */
    private String type;
    /**
     * @return The actual name of the PG User. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    private String username;

    private GetPgUserResult() {}
    /**
     * @return Access certificate for the user
     * 
     */
    public String accessCert() {
        return this.accessCert;
    }
    /**
     * @return Access certificate key for the user
     * 
     */
    public String accessKey() {
        return this.accessKey;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The password of the PG User (not applicable for all services).
     * 
     */
    public String password() {
        return this.password;
    }
    /**
     * @return Defines whether replication is allowed.
     * 
     */
    public Boolean pgAllowReplication() {
        return this.pgAllowReplication;
    }
    /**
     * @return Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public String project() {
        return this.project;
    }
    /**
     * @return Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return Type of the user account. Tells whether the user is the primary account or a regular account.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The actual name of the PG User. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPgUserResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessCert;
        private String accessKey;
        private String id;
        private String password;
        private Boolean pgAllowReplication;
        private String project;
        private String serviceName;
        private String type;
        private String username;
        public Builder() {}
        public Builder(GetPgUserResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessCert = defaults.accessCert;
    	      this.accessKey = defaults.accessKey;
    	      this.id = defaults.id;
    	      this.password = defaults.password;
    	      this.pgAllowReplication = defaults.pgAllowReplication;
    	      this.project = defaults.project;
    	      this.serviceName = defaults.serviceName;
    	      this.type = defaults.type;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder accessCert(String accessCert) {
            this.accessCert = Objects.requireNonNull(accessCert);
            return this;
        }
        @CustomType.Setter
        public Builder accessKey(String accessKey) {
            this.accessKey = Objects.requireNonNull(accessKey);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }
        @CustomType.Setter
        public Builder pgAllowReplication(Boolean pgAllowReplication) {
            this.pgAllowReplication = Objects.requireNonNull(pgAllowReplication);
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }
        public GetPgUserResult build() {
            final var o = new GetPgUserResult();
            o.accessCert = accessCert;
            o.accessKey = accessKey;
            o.id = id;
            o.password = password;
            o.pgAllowReplication = pgAllowReplication;
            o.project = project;
            o.serviceName = serviceName;
            o.type = type;
            o.username = username;
            return o;
        }
    }
}
