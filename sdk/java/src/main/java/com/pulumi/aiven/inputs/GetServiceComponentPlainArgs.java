// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetServiceComponentPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetServiceComponentPlainArgs Empty = new GetServiceComponentPlainArgs();

    @Import(name="component", required=true)
    private String component;

    public String component() {
        return this.component;
    }

    @Import(name="kafkaAuthenticationMethod")
    private @Nullable String kafkaAuthenticationMethod;

    public Optional<String> kafkaAuthenticationMethod() {
        return Optional.ofNullable(this.kafkaAuthenticationMethod);
    }

    @Import(name="project", required=true)
    private String project;

    public String project() {
        return this.project;
    }

    @Import(name="route")
    private @Nullable String route;

    public Optional<String> route() {
        return Optional.ofNullable(this.route);
    }

    @Import(name="serviceName")
    private @Nullable String serviceName;

    public Optional<String> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    @Import(name="ssl")
    private @Nullable Boolean ssl;

    public Optional<Boolean> ssl() {
        return Optional.ofNullable(this.ssl);
    }

    @Import(name="usage")
    private @Nullable String usage;

    public Optional<String> usage() {
        return Optional.ofNullable(this.usage);
    }

    private GetServiceComponentPlainArgs() {}

    private GetServiceComponentPlainArgs(GetServiceComponentPlainArgs $) {
        this.component = $.component;
        this.kafkaAuthenticationMethod = $.kafkaAuthenticationMethod;
        this.project = $.project;
        this.route = $.route;
        this.serviceName = $.serviceName;
        this.ssl = $.ssl;
        this.usage = $.usage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetServiceComponentPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetServiceComponentPlainArgs $;

        public Builder() {
            $ = new GetServiceComponentPlainArgs();
        }

        public Builder(GetServiceComponentPlainArgs defaults) {
            $ = new GetServiceComponentPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder component(String component) {
            $.component = component;
            return this;
        }

        public Builder kafkaAuthenticationMethod(@Nullable String kafkaAuthenticationMethod) {
            $.kafkaAuthenticationMethod = kafkaAuthenticationMethod;
            return this;
        }

        public Builder project(String project) {
            $.project = project;
            return this;
        }

        public Builder route(@Nullable String route) {
            $.route = route;
            return this;
        }

        public Builder serviceName(@Nullable String serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        public Builder ssl(@Nullable Boolean ssl) {
            $.ssl = ssl;
            return this;
        }

        public Builder usage(@Nullable String usage) {
            $.usage = usage;
            return this;
        }

        public GetServiceComponentPlainArgs build() {
            $.component = Objects.requireNonNull($.component, "expected parameter 'component' to be non-null");
            $.project = Objects.requireNonNull($.project, "expected parameter 'project' to be non-null");
            return $;
        }
    }

}
