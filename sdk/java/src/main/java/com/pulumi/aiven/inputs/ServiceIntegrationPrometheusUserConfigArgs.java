// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.aiven.inputs.ServiceIntegrationPrometheusUserConfigSourceMysqlArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceIntegrationPrometheusUserConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceIntegrationPrometheusUserConfigArgs Empty = new ServiceIntegrationPrometheusUserConfigArgs();

    /**
     * Configuration options for metrics where source service is MySQL
     * 
     */
    @Import(name="sourceMysql")
    private @Nullable Output<ServiceIntegrationPrometheusUserConfigSourceMysqlArgs> sourceMysql;

    /**
     * @return Configuration options for metrics where source service is MySQL
     * 
     */
    public Optional<Output<ServiceIntegrationPrometheusUserConfigSourceMysqlArgs>> sourceMysql() {
        return Optional.ofNullable(this.sourceMysql);
    }

    private ServiceIntegrationPrometheusUserConfigArgs() {}

    private ServiceIntegrationPrometheusUserConfigArgs(ServiceIntegrationPrometheusUserConfigArgs $) {
        this.sourceMysql = $.sourceMysql;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceIntegrationPrometheusUserConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceIntegrationPrometheusUserConfigArgs $;

        public Builder() {
            $ = new ServiceIntegrationPrometheusUserConfigArgs();
        }

        public Builder(ServiceIntegrationPrometheusUserConfigArgs defaults) {
            $ = new ServiceIntegrationPrometheusUserConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param sourceMysql Configuration options for metrics where source service is MySQL
         * 
         * @return builder
         * 
         */
        public Builder sourceMysql(@Nullable Output<ServiceIntegrationPrometheusUserConfigSourceMysqlArgs> sourceMysql) {
            $.sourceMysql = sourceMysql;
            return this;
        }

        /**
         * @param sourceMysql Configuration options for metrics where source service is MySQL
         * 
         * @return builder
         * 
         */
        public Builder sourceMysql(ServiceIntegrationPrometheusUserConfigSourceMysqlArgs sourceMysql) {
            return sourceMysql(Output.of(sourceMysql));
        }

        public ServiceIntegrationPrometheusUserConfigArgs build() {
            return $;
        }
    }

}
