// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.aiven.inputs.GetOrganizationProjectTagArgs;
import com.pulumi.aiven.inputs.GetOrganizationProjectTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetOrganizationProjectArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOrganizationProjectArgs Empty = new GetOrganizationProjectArgs();

    /**
     * ID of an organization.
     * 
     */
    @Import(name="organizationId", required=true)
    private Output<String> organizationId;

    /**
     * @return ID of an organization.
     * 
     */
    public Output<String> organizationId() {
        return this.organizationId;
    }

    /**
     * The name of the project. Names must be globally unique among all Aiven customers. Names must begin with a letter (a-z), and consist of letters, numbers, and dashes. It&#39;s recommended to use a random string or your organization name as a prefix or suffix. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return The name of the project. Names must be globally unique among all Aiven customers. Names must begin with a letter (a-z), and consist of letters, numbers, and dashes. It&#39;s recommended to use a random string or your organization name as a prefix or suffix. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    /**
     * Tags are key-value pairs that allow you to categorize projects.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<GetOrganizationProjectTagArgs>> tags;

    /**
     * @return Tags are key-value pairs that allow you to categorize projects.
     * 
     */
    public Optional<Output<List<GetOrganizationProjectTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="timeouts")
    private @Nullable Output<GetOrganizationProjectTimeoutsArgs> timeouts;

    public Optional<Output<GetOrganizationProjectTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private GetOrganizationProjectArgs() {}

    private GetOrganizationProjectArgs(GetOrganizationProjectArgs $) {
        this.organizationId = $.organizationId;
        this.projectId = $.projectId;
        this.tags = $.tags;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOrganizationProjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOrganizationProjectArgs $;

        public Builder() {
            $ = new GetOrganizationProjectArgs();
        }

        public Builder(GetOrganizationProjectArgs defaults) {
            $ = new GetOrganizationProjectArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param organizationId ID of an organization.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId ID of an organization.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        /**
         * @param projectId The name of the project. Names must be globally unique among all Aiven customers. Names must begin with a letter (a-z), and consist of letters, numbers, and dashes. It&#39;s recommended to use a random string or your organization name as a prefix or suffix. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The name of the project. Names must be globally unique among all Aiven customers. Names must begin with a letter (a-z), and consist of letters, numbers, and dashes. It&#39;s recommended to use a random string or your organization name as a prefix or suffix. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param tags Tags are key-value pairs that allow you to categorize projects.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<GetOrganizationProjectTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Tags are key-value pairs that allow you to categorize projects.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<GetOrganizationProjectTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags Tags are key-value pairs that allow you to categorize projects.
         * 
         * @return builder
         * 
         */
        public Builder tags(GetOrganizationProjectTagArgs... tags) {
            return tags(List.of(tags));
        }

        public Builder timeouts(@Nullable Output<GetOrganizationProjectTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(GetOrganizationProjectTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public GetOrganizationProjectArgs build() {
            if ($.organizationId == null) {
                throw new MissingRequiredPropertyException("GetOrganizationProjectArgs", "organizationId");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GetOrganizationProjectArgs", "projectId");
            }
            return $;
        }
    }

}
