// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OpenSearchOpensearchUserConfigOpensearchShardIndexingPressurePrimaryParameterShardArgs extends com.pulumi.resources.ResourceArgs {

    public static final OpenSearchOpensearchUserConfigOpensearchShardIndexingPressurePrimaryParameterShardArgs Empty = new OpenSearchOpensearchUserConfigOpensearchShardIndexingPressurePrimaryParameterShardArgs();

    /**
     * Specify the minimum assigned quota for a new shard in any role (coordinator, primary, or replica).
     *                         Shard indexing backpressure increases or decreases this allocated quota based on the inflow of traffic for the shard.
     *                         Default is 0.001.
     * 
     */
    @Import(name="minLimit")
    private @Nullable Output<Double> minLimit;

    /**
     * @return Specify the minimum assigned quota for a new shard in any role (coordinator, primary, or replica).
     *                         Shard indexing backpressure increases or decreases this allocated quota based on the inflow of traffic for the shard.
     *                         Default is 0.001.
     * 
     */
    public Optional<Output<Double>> minLimit() {
        return Optional.ofNullable(this.minLimit);
    }

    private OpenSearchOpensearchUserConfigOpensearchShardIndexingPressurePrimaryParameterShardArgs() {}

    private OpenSearchOpensearchUserConfigOpensearchShardIndexingPressurePrimaryParameterShardArgs(OpenSearchOpensearchUserConfigOpensearchShardIndexingPressurePrimaryParameterShardArgs $) {
        this.minLimit = $.minLimit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OpenSearchOpensearchUserConfigOpensearchShardIndexingPressurePrimaryParameterShardArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OpenSearchOpensearchUserConfigOpensearchShardIndexingPressurePrimaryParameterShardArgs $;

        public Builder() {
            $ = new OpenSearchOpensearchUserConfigOpensearchShardIndexingPressurePrimaryParameterShardArgs();
        }

        public Builder(OpenSearchOpensearchUserConfigOpensearchShardIndexingPressurePrimaryParameterShardArgs defaults) {
            $ = new OpenSearchOpensearchUserConfigOpensearchShardIndexingPressurePrimaryParameterShardArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param minLimit Specify the minimum assigned quota for a new shard in any role (coordinator, primary, or replica).
         *                         Shard indexing backpressure increases or decreases this allocated quota based on the inflow of traffic for the shard.
         *                         Default is 0.001.
         * 
         * @return builder
         * 
         */
        public Builder minLimit(@Nullable Output<Double> minLimit) {
            $.minLimit = minLimit;
            return this;
        }

        /**
         * @param minLimit Specify the minimum assigned quota for a new shard in any role (coordinator, primary, or replica).
         *                         Shard indexing backpressure increases or decreases this allocated quota based on the inflow of traffic for the shard.
         *                         Default is 0.001.
         * 
         * @return builder
         * 
         */
        public Builder minLimit(Double minLimit) {
            return minLimit(Output.of(minLimit));
        }

        public OpenSearchOpensearchUserConfigOpensearchShardIndexingPressurePrimaryParameterShardArgs build() {
            return $;
        }
    }

}
