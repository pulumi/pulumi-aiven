// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.aiven.ServiceIntegrationArgs;
import com.pulumi.aiven.Utilities;
import com.pulumi.aiven.inputs.ServiceIntegrationState;
import com.pulumi.aiven.outputs.ServiceIntegrationClickhouseKafkaUserConfig;
import com.pulumi.aiven.outputs.ServiceIntegrationClickhousePostgresqlUserConfig;
import com.pulumi.aiven.outputs.ServiceIntegrationDatadogUserConfig;
import com.pulumi.aiven.outputs.ServiceIntegrationExternalAwsCloudwatchLogsUserConfig;
import com.pulumi.aiven.outputs.ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig;
import com.pulumi.aiven.outputs.ServiceIntegrationExternalElasticsearchLogsUserConfig;
import com.pulumi.aiven.outputs.ServiceIntegrationExternalOpensearchLogsUserConfig;
import com.pulumi.aiven.outputs.ServiceIntegrationKafkaConnectUserConfig;
import com.pulumi.aiven.outputs.ServiceIntegrationKafkaLogsUserConfig;
import com.pulumi.aiven.outputs.ServiceIntegrationKafkaMirrormakerUserConfig;
import com.pulumi.aiven.outputs.ServiceIntegrationLogsUserConfig;
import com.pulumi.aiven.outputs.ServiceIntegrationMetricsUserConfig;
import com.pulumi.aiven.outputs.ServiceIntegrationPrometheusUserConfig;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The Service Integration resource allows the creation and management of Aiven Service Integrations.
 * 
 * **Note** For services running on `hobbyist` plan service integrations are not supported.
 * 
 * Service Integration defines an integration between two Aiven services or between Aiven service and an external
 * integration endpoint. Integration could be for example sending metrics from Kafka service to an M3DB service,
 * getting metrics from an M3DB service to a Grafana service to show dashboards, sending logs from any service to
 * OpenSearch, etc.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aiven.ServiceIntegration;
 * import com.pulumi.aiven.ServiceIntegrationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var myIntegrationMetrics = new ServiceIntegration(&#34;myIntegrationMetrics&#34;, ServiceIntegrationArgs.builder()        
 *             .project(aiven_project.myproject().project())
 *             .integrationType(&#34;metrics&#34;)
 *             .sourceServiceName(aiven_kafka.kfk1().service_name())
 *             .destinationServiceName(aiven_m3db.m3db().service_name())
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import aiven:index/serviceIntegration:ServiceIntegration myintegration project/integration_id
 * ```
 * 
 */
@ResourceType(type="aiven:index/serviceIntegration:ServiceIntegration")
public class ServiceIntegration extends com.pulumi.resources.CustomResource {
    /**
     * ClickhouseKafka user configurable settings
     * 
     */
    @Export(name="clickhouseKafkaUserConfig", refs={ServiceIntegrationClickhouseKafkaUserConfig.class}, tree="[0]")
    private Output</* @Nullable */ ServiceIntegrationClickhouseKafkaUserConfig> clickhouseKafkaUserConfig;

    /**
     * @return ClickhouseKafka user configurable settings
     * 
     */
    public Output<Optional<ServiceIntegrationClickhouseKafkaUserConfig>> clickhouseKafkaUserConfig() {
        return Codegen.optional(this.clickhouseKafkaUserConfig);
    }
    /**
     * ClickhousePostgresql user configurable settings
     * 
     */
    @Export(name="clickhousePostgresqlUserConfig", refs={ServiceIntegrationClickhousePostgresqlUserConfig.class}, tree="[0]")
    private Output</* @Nullable */ ServiceIntegrationClickhousePostgresqlUserConfig> clickhousePostgresqlUserConfig;

    /**
     * @return ClickhousePostgresql user configurable settings
     * 
     */
    public Output<Optional<ServiceIntegrationClickhousePostgresqlUserConfig>> clickhousePostgresqlUserConfig() {
        return Codegen.optional(this.clickhousePostgresqlUserConfig);
    }
    /**
     * Datadog user configurable settings
     * 
     */
    @Export(name="datadogUserConfig", refs={ServiceIntegrationDatadogUserConfig.class}, tree="[0]")
    private Output</* @Nullable */ ServiceIntegrationDatadogUserConfig> datadogUserConfig;

    /**
     * @return Datadog user configurable settings
     * 
     */
    public Output<Optional<ServiceIntegrationDatadogUserConfig>> datadogUserConfig() {
        return Codegen.optional(this.datadogUserConfig);
    }
    /**
     * Destination endpoint for the integration (if any)
     * 
     */
    @Export(name="destinationEndpointId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> destinationEndpointId;

    /**
     * @return Destination endpoint for the integration (if any)
     * 
     */
    public Output<Optional<String>> destinationEndpointId() {
        return Codegen.optional(this.destinationEndpointId);
    }
    /**
     * Destination service for the integration (if any)
     * 
     */
    @Export(name="destinationServiceName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> destinationServiceName;

    /**
     * @return Destination service for the integration (if any)
     * 
     */
    public Output<Optional<String>> destinationServiceName() {
        return Codegen.optional(this.destinationServiceName);
    }
    /**
     * ExternalAwsCloudwatchLogs user configurable settings
     * 
     */
    @Export(name="externalAwsCloudwatchLogsUserConfig", refs={ServiceIntegrationExternalAwsCloudwatchLogsUserConfig.class}, tree="[0]")
    private Output</* @Nullable */ ServiceIntegrationExternalAwsCloudwatchLogsUserConfig> externalAwsCloudwatchLogsUserConfig;

    /**
     * @return ExternalAwsCloudwatchLogs user configurable settings
     * 
     */
    public Output<Optional<ServiceIntegrationExternalAwsCloudwatchLogsUserConfig>> externalAwsCloudwatchLogsUserConfig() {
        return Codegen.optional(this.externalAwsCloudwatchLogsUserConfig);
    }
    /**
     * ExternalAwsCloudwatchMetrics user configurable settings
     * 
     */
    @Export(name="externalAwsCloudwatchMetricsUserConfig", refs={ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig.class}, tree="[0]")
    private Output</* @Nullable */ ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig> externalAwsCloudwatchMetricsUserConfig;

    /**
     * @return ExternalAwsCloudwatchMetrics user configurable settings
     * 
     */
    public Output<Optional<ServiceIntegrationExternalAwsCloudwatchMetricsUserConfig>> externalAwsCloudwatchMetricsUserConfig() {
        return Codegen.optional(this.externalAwsCloudwatchMetricsUserConfig);
    }
    /**
     * ExternalElasticsearchLogs user configurable settings
     * 
     */
    @Export(name="externalElasticsearchLogsUserConfig", refs={ServiceIntegrationExternalElasticsearchLogsUserConfig.class}, tree="[0]")
    private Output</* @Nullable */ ServiceIntegrationExternalElasticsearchLogsUserConfig> externalElasticsearchLogsUserConfig;

    /**
     * @return ExternalElasticsearchLogs user configurable settings
     * 
     */
    public Output<Optional<ServiceIntegrationExternalElasticsearchLogsUserConfig>> externalElasticsearchLogsUserConfig() {
        return Codegen.optional(this.externalElasticsearchLogsUserConfig);
    }
    /**
     * ExternalOpensearchLogs user configurable settings
     * 
     */
    @Export(name="externalOpensearchLogsUserConfig", refs={ServiceIntegrationExternalOpensearchLogsUserConfig.class}, tree="[0]")
    private Output</* @Nullable */ ServiceIntegrationExternalOpensearchLogsUserConfig> externalOpensearchLogsUserConfig;

    /**
     * @return ExternalOpensearchLogs user configurable settings
     * 
     */
    public Output<Optional<ServiceIntegrationExternalOpensearchLogsUserConfig>> externalOpensearchLogsUserConfig() {
        return Codegen.optional(this.externalOpensearchLogsUserConfig);
    }
    /**
     * Service Integration Id at aiven
     * 
     */
    @Export(name="integrationId", refs={String.class}, tree="[0]")
    private Output<String> integrationId;

    /**
     * @return Service Integration Id at aiven
     * 
     */
    public Output<String> integrationId() {
        return this.integrationId;
    }
    /**
     * Type of the service integration. Possible values: `alertmanager`, `autoscaler`, `caching`, `cassandra_cross_service_cluster`, `clickhouse_credentials`, `clickhouse_kafka`, `clickhouse_postgresql`, `dashboard`, `datadog`, `datasource`, `external_aws_cloudwatch_logs`, `external_aws_cloudwatch_metrics`, `external_elasticsearch_logs`, `external_google_cloud_logging`, `external_opensearch_logs`, `flink`, `flink_external_bigquery`, `flink_external_kafka`, `internal_connectivity`, `jolokia`, `kafka_connect`, `kafka_connect_postgresql`, `kafka_logs`, `kafka_mirrormaker`, `logs`, `m3aggregator`, `m3coordinator`, `metrics`, `opensearch_cross_cluster_replication`, `opensearch_cross_cluster_search`, `prometheus`, `read_replica`, `rsyslog`, `schema_registry_proxy`, `stresstester`, `thanoscompactor`, `thanosquery`, `thanosstore`, `vector`, `vmalert`
     * 
     */
    @Export(name="integrationType", refs={String.class}, tree="[0]")
    private Output<String> integrationType;

    /**
     * @return Type of the service integration. Possible values: `alertmanager`, `autoscaler`, `caching`, `cassandra_cross_service_cluster`, `clickhouse_credentials`, `clickhouse_kafka`, `clickhouse_postgresql`, `dashboard`, `datadog`, `datasource`, `external_aws_cloudwatch_logs`, `external_aws_cloudwatch_metrics`, `external_elasticsearch_logs`, `external_google_cloud_logging`, `external_opensearch_logs`, `flink`, `flink_external_bigquery`, `flink_external_kafka`, `internal_connectivity`, `jolokia`, `kafka_connect`, `kafka_connect_postgresql`, `kafka_logs`, `kafka_mirrormaker`, `logs`, `m3aggregator`, `m3coordinator`, `metrics`, `opensearch_cross_cluster_replication`, `opensearch_cross_cluster_search`, `prometheus`, `read_replica`, `rsyslog`, `schema_registry_proxy`, `stresstester`, `thanoscompactor`, `thanosquery`, `thanosstore`, `vector`, `vmalert`
     * 
     */
    public Output<String> integrationType() {
        return this.integrationType;
    }
    /**
     * KafkaConnect user configurable settings
     * 
     */
    @Export(name="kafkaConnectUserConfig", refs={ServiceIntegrationKafkaConnectUserConfig.class}, tree="[0]")
    private Output</* @Nullable */ ServiceIntegrationKafkaConnectUserConfig> kafkaConnectUserConfig;

    /**
     * @return KafkaConnect user configurable settings
     * 
     */
    public Output<Optional<ServiceIntegrationKafkaConnectUserConfig>> kafkaConnectUserConfig() {
        return Codegen.optional(this.kafkaConnectUserConfig);
    }
    /**
     * KafkaLogs user configurable settings
     * 
     */
    @Export(name="kafkaLogsUserConfig", refs={ServiceIntegrationKafkaLogsUserConfig.class}, tree="[0]")
    private Output</* @Nullable */ ServiceIntegrationKafkaLogsUserConfig> kafkaLogsUserConfig;

    /**
     * @return KafkaLogs user configurable settings
     * 
     */
    public Output<Optional<ServiceIntegrationKafkaLogsUserConfig>> kafkaLogsUserConfig() {
        return Codegen.optional(this.kafkaLogsUserConfig);
    }
    /**
     * KafkaMirrormaker user configurable settings
     * 
     */
    @Export(name="kafkaMirrormakerUserConfig", refs={ServiceIntegrationKafkaMirrormakerUserConfig.class}, tree="[0]")
    private Output</* @Nullable */ ServiceIntegrationKafkaMirrormakerUserConfig> kafkaMirrormakerUserConfig;

    /**
     * @return KafkaMirrormaker user configurable settings
     * 
     */
    public Output<Optional<ServiceIntegrationKafkaMirrormakerUserConfig>> kafkaMirrormakerUserConfig() {
        return Codegen.optional(this.kafkaMirrormakerUserConfig);
    }
    /**
     * Logs user configurable settings
     * 
     */
    @Export(name="logsUserConfig", refs={ServiceIntegrationLogsUserConfig.class}, tree="[0]")
    private Output</* @Nullable */ ServiceIntegrationLogsUserConfig> logsUserConfig;

    /**
     * @return Logs user configurable settings
     * 
     */
    public Output<Optional<ServiceIntegrationLogsUserConfig>> logsUserConfig() {
        return Codegen.optional(this.logsUserConfig);
    }
    /**
     * Metrics user configurable settings
     * 
     */
    @Export(name="metricsUserConfig", refs={ServiceIntegrationMetricsUserConfig.class}, tree="[0]")
    private Output</* @Nullable */ ServiceIntegrationMetricsUserConfig> metricsUserConfig;

    /**
     * @return Metrics user configurable settings
     * 
     */
    public Output<Optional<ServiceIntegrationMetricsUserConfig>> metricsUserConfig() {
        return Codegen.optional(this.metricsUserConfig);
    }
    /**
     * Project the integration belongs to
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return Project the integration belongs to
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Prometheus user configurable settings
     * 
     */
    @Export(name="prometheusUserConfig", refs={ServiceIntegrationPrometheusUserConfig.class}, tree="[0]")
    private Output</* @Nullable */ ServiceIntegrationPrometheusUserConfig> prometheusUserConfig;

    /**
     * @return Prometheus user configurable settings
     * 
     */
    public Output<Optional<ServiceIntegrationPrometheusUserConfig>> prometheusUserConfig() {
        return Codegen.optional(this.prometheusUserConfig);
    }
    /**
     * Source endpoint for the integration (if any)
     * 
     */
    @Export(name="sourceEndpointId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sourceEndpointId;

    /**
     * @return Source endpoint for the integration (if any)
     * 
     */
    public Output<Optional<String>> sourceEndpointId() {
        return Codegen.optional(this.sourceEndpointId);
    }
    /**
     * Source service for the integration (if any)
     * 
     */
    @Export(name="sourceServiceName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sourceServiceName;

    /**
     * @return Source service for the integration (if any)
     * 
     */
    public Output<Optional<String>> sourceServiceName() {
        return Codegen.optional(this.sourceServiceName);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServiceIntegration(String name) {
        this(name, ServiceIntegrationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServiceIntegration(String name, ServiceIntegrationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServiceIntegration(String name, ServiceIntegrationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aiven:index/serviceIntegration:ServiceIntegration", name, args == null ? ServiceIntegrationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ServiceIntegration(String name, Output<String> id, @Nullable ServiceIntegrationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aiven:index/serviceIntegration:ServiceIntegration", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServiceIntegration get(String name, Output<String> id, @Nullable ServiceIntegrationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServiceIntegration(name, id, state, options);
    }
}
