// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetProjectVpcResult {
    /**
     * @return The cloud provider and region where the service is hosted in the format `CLOUD_PROVIDER-REGION_NAME`. For example, `google-europe-west1` or `aws-us-east-2`.
     * 
     */
    private @Nullable String cloudName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Network address range used by the VPC. For example, `192.168.0.0/24`.
     * 
     */
    private String networkCidr;
    /**
     * @return Identifies the project this resource belongs to.
     * 
     */
    private @Nullable String project;
    /**
     * @return State of the VPC. The possible values are `ACTIVE`, `APPROVED`, `DELETED` and `DELETING`.
     * 
     */
    private String state;
    /**
     * @return The ID of the VPC. This can be used to filter out the other VPCs if there are more than one for the project and cloud.
     * 
     */
    private @Nullable String vpcId;

    private GetProjectVpcResult() {}
    /**
     * @return The cloud provider and region where the service is hosted in the format `CLOUD_PROVIDER-REGION_NAME`. For example, `google-europe-west1` or `aws-us-east-2`.
     * 
     */
    public Optional<String> cloudName() {
        return Optional.ofNullable(this.cloudName);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Network address range used by the VPC. For example, `192.168.0.0/24`.
     * 
     */
    public String networkCidr() {
        return this.networkCidr;
    }
    /**
     * @return Identifies the project this resource belongs to.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    /**
     * @return State of the VPC. The possible values are `ACTIVE`, `APPROVED`, `DELETED` and `DELETING`.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The ID of the VPC. This can be used to filter out the other VPCs if there are more than one for the project and cloud.
     * 
     */
    public Optional<String> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProjectVpcResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String cloudName;
        private String id;
        private String networkCidr;
        private @Nullable String project;
        private String state;
        private @Nullable String vpcId;
        public Builder() {}
        public Builder(GetProjectVpcResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudName = defaults.cloudName;
    	      this.id = defaults.id;
    	      this.networkCidr = defaults.networkCidr;
    	      this.project = defaults.project;
    	      this.state = defaults.state;
    	      this.vpcId = defaults.vpcId;
        }

        @CustomType.Setter
        public Builder cloudName(@Nullable String cloudName) {

            this.cloudName = cloudName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetProjectVpcResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder networkCidr(String networkCidr) {
            if (networkCidr == null) {
              throw new MissingRequiredPropertyException("GetProjectVpcResult", "networkCidr");
            }
            this.networkCidr = networkCidr;
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {

            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetProjectVpcResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(@Nullable String vpcId) {

            this.vpcId = vpcId;
            return this;
        }
        public GetProjectVpcResult build() {
            final var _resultValue = new GetProjectVpcResult();
            _resultValue.cloudName = cloudName;
            _resultValue.id = id;
            _resultValue.networkCidr = networkCidr;
            _resultValue.project = project;
            _resultValue.state = state;
            _resultValue.vpcId = vpcId;
            return _resultValue;
        }
    }
}
