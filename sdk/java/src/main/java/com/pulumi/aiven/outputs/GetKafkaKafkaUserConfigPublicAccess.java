// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetKafkaKafkaUserConfigPublicAccess {
    /**
     * @return Allow clients to connect to kafka from the public internet for service nodes that are in a project VPC or another type of private network.
     * 
     */
    private @Nullable Boolean kafka;
    /**
     * @return Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network.
     * 
     */
    private @Nullable Boolean kafkaConnect;
    /**
     * @return Allow clients to connect to kafka_rest from the public internet for service nodes that are in a project VPC or another type of private network.
     * 
     */
    private @Nullable Boolean kafkaRest;
    /**
     * @return Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network.
     * 
     */
    private @Nullable Boolean prometheus;
    /**
     * @return Allow clients to connect to schema_registry from the public internet for service nodes that are in a project VPC or another type of private network.
     * 
     */
    private @Nullable Boolean schemaRegistry;

    private GetKafkaKafkaUserConfigPublicAccess() {}
    /**
     * @return Allow clients to connect to kafka from the public internet for service nodes that are in a project VPC or another type of private network.
     * 
     */
    public Optional<Boolean> kafka() {
        return Optional.ofNullable(this.kafka);
    }
    /**
     * @return Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network.
     * 
     */
    public Optional<Boolean> kafkaConnect() {
        return Optional.ofNullable(this.kafkaConnect);
    }
    /**
     * @return Allow clients to connect to kafka_rest from the public internet for service nodes that are in a project VPC or another type of private network.
     * 
     */
    public Optional<Boolean> kafkaRest() {
        return Optional.ofNullable(this.kafkaRest);
    }
    /**
     * @return Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network.
     * 
     */
    public Optional<Boolean> prometheus() {
        return Optional.ofNullable(this.prometheus);
    }
    /**
     * @return Allow clients to connect to schema_registry from the public internet for service nodes that are in a project VPC or another type of private network.
     * 
     */
    public Optional<Boolean> schemaRegistry() {
        return Optional.ofNullable(this.schemaRegistry);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKafkaKafkaUserConfigPublicAccess defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean kafka;
        private @Nullable Boolean kafkaConnect;
        private @Nullable Boolean kafkaRest;
        private @Nullable Boolean prometheus;
        private @Nullable Boolean schemaRegistry;
        public Builder() {}
        public Builder(GetKafkaKafkaUserConfigPublicAccess defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.kafka = defaults.kafka;
    	      this.kafkaConnect = defaults.kafkaConnect;
    	      this.kafkaRest = defaults.kafkaRest;
    	      this.prometheus = defaults.prometheus;
    	      this.schemaRegistry = defaults.schemaRegistry;
        }

        @CustomType.Setter
        public Builder kafka(@Nullable Boolean kafka) {

            this.kafka = kafka;
            return this;
        }
        @CustomType.Setter
        public Builder kafkaConnect(@Nullable Boolean kafkaConnect) {

            this.kafkaConnect = kafkaConnect;
            return this;
        }
        @CustomType.Setter
        public Builder kafkaRest(@Nullable Boolean kafkaRest) {

            this.kafkaRest = kafkaRest;
            return this;
        }
        @CustomType.Setter
        public Builder prometheus(@Nullable Boolean prometheus) {

            this.prometheus = prometheus;
            return this;
        }
        @CustomType.Setter
        public Builder schemaRegistry(@Nullable Boolean schemaRegistry) {

            this.schemaRegistry = schemaRegistry;
            return this;
        }
        public GetKafkaKafkaUserConfigPublicAccess build() {
            final var _resultValue = new GetKafkaKafkaUserConfigPublicAccess();
            _resultValue.kafka = kafka;
            _resultValue.kafkaConnect = kafkaConnect;
            _resultValue.kafkaRest = kafkaRest;
            _resultValue.prometheus = prometheus;
            _resultValue.schemaRegistry = schemaRegistry;
            return _resultValue;
        }
    }
}
