// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class KafkaMirrorMakerTagArgs extends com.pulumi.resources.ResourceArgs {

    public static final KafkaMirrorMakerTagArgs Empty = new KafkaMirrorMakerTagArgs();

    /**
     * Service tag key
     * 
     */
    @Import(name="key", required=true)
    private Output<String> key;

    /**
     * @return Service tag key
     * 
     */
    public Output<String> key() {
        return this.key;
    }

    /**
     * Service tag value
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return Service tag value
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private KafkaMirrorMakerTagArgs() {}

    private KafkaMirrorMakerTagArgs(KafkaMirrorMakerTagArgs $) {
        this.key = $.key;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KafkaMirrorMakerTagArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KafkaMirrorMakerTagArgs $;

        public Builder() {
            $ = new KafkaMirrorMakerTagArgs();
        }

        public Builder(KafkaMirrorMakerTagArgs defaults) {
            $ = new KafkaMirrorMakerTagArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param key Service tag key
         * 
         * @return builder
         * 
         */
        public Builder key(Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key Service tag key
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param value Service tag value
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Service tag value
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public KafkaMirrorMakerTagArgs build() {
            if ($.key == null) {
                throw new MissingRequiredPropertyException("KafkaMirrorMakerTagArgs", "key");
            }
            if ($.value == null) {
                throw new MissingRequiredPropertyException("KafkaMirrorMakerTagArgs", "value");
            }
            return $;
        }
    }

}
