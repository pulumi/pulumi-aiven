// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KafkaConnectKafkaConnectUserConfigKafkaConnectArgs extends com.pulumi.resources.ResourceArgs {

    public static final KafkaConnectKafkaConnectUserConfigKafkaConnectArgs Empty = new KafkaConnectKafkaConnectUserConfigKafkaConnectArgs();

    @Import(name="connectorClientConfigOverridePolicy")
    private @Nullable Output<String> connectorClientConfigOverridePolicy;

    public Optional<Output<String>> connectorClientConfigOverridePolicy() {
        return Optional.ofNullable(this.connectorClientConfigOverridePolicy);
    }

    @Import(name="consumerAutoOffsetReset")
    private @Nullable Output<String> consumerAutoOffsetReset;

    public Optional<Output<String>> consumerAutoOffsetReset() {
        return Optional.ofNullable(this.consumerAutoOffsetReset);
    }

    @Import(name="consumerFetchMaxBytes")
    private @Nullable Output<Integer> consumerFetchMaxBytes;

    public Optional<Output<Integer>> consumerFetchMaxBytes() {
        return Optional.ofNullable(this.consumerFetchMaxBytes);
    }

    @Import(name="consumerIsolationLevel")
    private @Nullable Output<String> consumerIsolationLevel;

    public Optional<Output<String>> consumerIsolationLevel() {
        return Optional.ofNullable(this.consumerIsolationLevel);
    }

    @Import(name="consumerMaxPartitionFetchBytes")
    private @Nullable Output<Integer> consumerMaxPartitionFetchBytes;

    public Optional<Output<Integer>> consumerMaxPartitionFetchBytes() {
        return Optional.ofNullable(this.consumerMaxPartitionFetchBytes);
    }

    @Import(name="consumerMaxPollIntervalMs")
    private @Nullable Output<Integer> consumerMaxPollIntervalMs;

    public Optional<Output<Integer>> consumerMaxPollIntervalMs() {
        return Optional.ofNullable(this.consumerMaxPollIntervalMs);
    }

    @Import(name="consumerMaxPollRecords")
    private @Nullable Output<Integer> consumerMaxPollRecords;

    public Optional<Output<Integer>> consumerMaxPollRecords() {
        return Optional.ofNullable(this.consumerMaxPollRecords);
    }

    @Import(name="offsetFlushIntervalMs")
    private @Nullable Output<Integer> offsetFlushIntervalMs;

    public Optional<Output<Integer>> offsetFlushIntervalMs() {
        return Optional.ofNullable(this.offsetFlushIntervalMs);
    }

    @Import(name="offsetFlushTimeoutMs")
    private @Nullable Output<Integer> offsetFlushTimeoutMs;

    public Optional<Output<Integer>> offsetFlushTimeoutMs() {
        return Optional.ofNullable(this.offsetFlushTimeoutMs);
    }

    @Import(name="producerBatchSize")
    private @Nullable Output<Integer> producerBatchSize;

    public Optional<Output<Integer>> producerBatchSize() {
        return Optional.ofNullable(this.producerBatchSize);
    }

    @Import(name="producerBufferMemory")
    private @Nullable Output<Integer> producerBufferMemory;

    public Optional<Output<Integer>> producerBufferMemory() {
        return Optional.ofNullable(this.producerBufferMemory);
    }

    @Import(name="producerCompressionType")
    private @Nullable Output<String> producerCompressionType;

    public Optional<Output<String>> producerCompressionType() {
        return Optional.ofNullable(this.producerCompressionType);
    }

    @Import(name="producerLingerMs")
    private @Nullable Output<Integer> producerLingerMs;

    public Optional<Output<Integer>> producerLingerMs() {
        return Optional.ofNullable(this.producerLingerMs);
    }

    @Import(name="producerMaxRequestSize")
    private @Nullable Output<Integer> producerMaxRequestSize;

    public Optional<Output<Integer>> producerMaxRequestSize() {
        return Optional.ofNullable(this.producerMaxRequestSize);
    }

    @Import(name="sessionTimeoutMs")
    private @Nullable Output<Integer> sessionTimeoutMs;

    public Optional<Output<Integer>> sessionTimeoutMs() {
        return Optional.ofNullable(this.sessionTimeoutMs);
    }

    private KafkaConnectKafkaConnectUserConfigKafkaConnectArgs() {}

    private KafkaConnectKafkaConnectUserConfigKafkaConnectArgs(KafkaConnectKafkaConnectUserConfigKafkaConnectArgs $) {
        this.connectorClientConfigOverridePolicy = $.connectorClientConfigOverridePolicy;
        this.consumerAutoOffsetReset = $.consumerAutoOffsetReset;
        this.consumerFetchMaxBytes = $.consumerFetchMaxBytes;
        this.consumerIsolationLevel = $.consumerIsolationLevel;
        this.consumerMaxPartitionFetchBytes = $.consumerMaxPartitionFetchBytes;
        this.consumerMaxPollIntervalMs = $.consumerMaxPollIntervalMs;
        this.consumerMaxPollRecords = $.consumerMaxPollRecords;
        this.offsetFlushIntervalMs = $.offsetFlushIntervalMs;
        this.offsetFlushTimeoutMs = $.offsetFlushTimeoutMs;
        this.producerBatchSize = $.producerBatchSize;
        this.producerBufferMemory = $.producerBufferMemory;
        this.producerCompressionType = $.producerCompressionType;
        this.producerLingerMs = $.producerLingerMs;
        this.producerMaxRequestSize = $.producerMaxRequestSize;
        this.sessionTimeoutMs = $.sessionTimeoutMs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KafkaConnectKafkaConnectUserConfigKafkaConnectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KafkaConnectKafkaConnectUserConfigKafkaConnectArgs $;

        public Builder() {
            $ = new KafkaConnectKafkaConnectUserConfigKafkaConnectArgs();
        }

        public Builder(KafkaConnectKafkaConnectUserConfigKafkaConnectArgs defaults) {
            $ = new KafkaConnectKafkaConnectUserConfigKafkaConnectArgs(Objects.requireNonNull(defaults));
        }

        public Builder connectorClientConfigOverridePolicy(@Nullable Output<String> connectorClientConfigOverridePolicy) {
            $.connectorClientConfigOverridePolicy = connectorClientConfigOverridePolicy;
            return this;
        }

        public Builder connectorClientConfigOverridePolicy(String connectorClientConfigOverridePolicy) {
            return connectorClientConfigOverridePolicy(Output.of(connectorClientConfigOverridePolicy));
        }

        public Builder consumerAutoOffsetReset(@Nullable Output<String> consumerAutoOffsetReset) {
            $.consumerAutoOffsetReset = consumerAutoOffsetReset;
            return this;
        }

        public Builder consumerAutoOffsetReset(String consumerAutoOffsetReset) {
            return consumerAutoOffsetReset(Output.of(consumerAutoOffsetReset));
        }

        public Builder consumerFetchMaxBytes(@Nullable Output<Integer> consumerFetchMaxBytes) {
            $.consumerFetchMaxBytes = consumerFetchMaxBytes;
            return this;
        }

        public Builder consumerFetchMaxBytes(Integer consumerFetchMaxBytes) {
            return consumerFetchMaxBytes(Output.of(consumerFetchMaxBytes));
        }

        public Builder consumerIsolationLevel(@Nullable Output<String> consumerIsolationLevel) {
            $.consumerIsolationLevel = consumerIsolationLevel;
            return this;
        }

        public Builder consumerIsolationLevel(String consumerIsolationLevel) {
            return consumerIsolationLevel(Output.of(consumerIsolationLevel));
        }

        public Builder consumerMaxPartitionFetchBytes(@Nullable Output<Integer> consumerMaxPartitionFetchBytes) {
            $.consumerMaxPartitionFetchBytes = consumerMaxPartitionFetchBytes;
            return this;
        }

        public Builder consumerMaxPartitionFetchBytes(Integer consumerMaxPartitionFetchBytes) {
            return consumerMaxPartitionFetchBytes(Output.of(consumerMaxPartitionFetchBytes));
        }

        public Builder consumerMaxPollIntervalMs(@Nullable Output<Integer> consumerMaxPollIntervalMs) {
            $.consumerMaxPollIntervalMs = consumerMaxPollIntervalMs;
            return this;
        }

        public Builder consumerMaxPollIntervalMs(Integer consumerMaxPollIntervalMs) {
            return consumerMaxPollIntervalMs(Output.of(consumerMaxPollIntervalMs));
        }

        public Builder consumerMaxPollRecords(@Nullable Output<Integer> consumerMaxPollRecords) {
            $.consumerMaxPollRecords = consumerMaxPollRecords;
            return this;
        }

        public Builder consumerMaxPollRecords(Integer consumerMaxPollRecords) {
            return consumerMaxPollRecords(Output.of(consumerMaxPollRecords));
        }

        public Builder offsetFlushIntervalMs(@Nullable Output<Integer> offsetFlushIntervalMs) {
            $.offsetFlushIntervalMs = offsetFlushIntervalMs;
            return this;
        }

        public Builder offsetFlushIntervalMs(Integer offsetFlushIntervalMs) {
            return offsetFlushIntervalMs(Output.of(offsetFlushIntervalMs));
        }

        public Builder offsetFlushTimeoutMs(@Nullable Output<Integer> offsetFlushTimeoutMs) {
            $.offsetFlushTimeoutMs = offsetFlushTimeoutMs;
            return this;
        }

        public Builder offsetFlushTimeoutMs(Integer offsetFlushTimeoutMs) {
            return offsetFlushTimeoutMs(Output.of(offsetFlushTimeoutMs));
        }

        public Builder producerBatchSize(@Nullable Output<Integer> producerBatchSize) {
            $.producerBatchSize = producerBatchSize;
            return this;
        }

        public Builder producerBatchSize(Integer producerBatchSize) {
            return producerBatchSize(Output.of(producerBatchSize));
        }

        public Builder producerBufferMemory(@Nullable Output<Integer> producerBufferMemory) {
            $.producerBufferMemory = producerBufferMemory;
            return this;
        }

        public Builder producerBufferMemory(Integer producerBufferMemory) {
            return producerBufferMemory(Output.of(producerBufferMemory));
        }

        public Builder producerCompressionType(@Nullable Output<String> producerCompressionType) {
            $.producerCompressionType = producerCompressionType;
            return this;
        }

        public Builder producerCompressionType(String producerCompressionType) {
            return producerCompressionType(Output.of(producerCompressionType));
        }

        public Builder producerLingerMs(@Nullable Output<Integer> producerLingerMs) {
            $.producerLingerMs = producerLingerMs;
            return this;
        }

        public Builder producerLingerMs(Integer producerLingerMs) {
            return producerLingerMs(Output.of(producerLingerMs));
        }

        public Builder producerMaxRequestSize(@Nullable Output<Integer> producerMaxRequestSize) {
            $.producerMaxRequestSize = producerMaxRequestSize;
            return this;
        }

        public Builder producerMaxRequestSize(Integer producerMaxRequestSize) {
            return producerMaxRequestSize(Output.of(producerMaxRequestSize));
        }

        public Builder sessionTimeoutMs(@Nullable Output<Integer> sessionTimeoutMs) {
            $.sessionTimeoutMs = sessionTimeoutMs;
            return this;
        }

        public Builder sessionTimeoutMs(Integer sessionTimeoutMs) {
            return sessionTimeoutMs(Output.of(sessionTimeoutMs));
        }

        public KafkaConnectKafkaConnectUserConfigKafkaConnectArgs build() {
            return $;
        }
    }

}
