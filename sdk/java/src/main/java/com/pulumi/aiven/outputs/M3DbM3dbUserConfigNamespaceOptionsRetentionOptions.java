// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class M3DbM3dbUserConfigNamespaceOptionsRetentionOptions {
    /**
     * @return Controls how long we wait before expiring stale data.
     * 
     */
    private @Nullable String blockDataExpiryDuration;
    /**
     * @return Controls how long to keep a block in memory before flushing to a fileset on disk.
     * 
     */
    private @Nullable String blocksizeDuration;
    /**
     * @return Controls how far into the future writes to the namespace will be accepted.
     * 
     */
    private @Nullable String bufferFutureDuration;
    /**
     * @return Controls how far into the past writes to the namespace will be accepted.
     * 
     */
    private @Nullable String bufferPastDuration;
    /**
     * @return Controls the duration of time that M3DB will retain data for the namespace.
     * 
     */
    private @Nullable String retentionPeriodDuration;

    private M3DbM3dbUserConfigNamespaceOptionsRetentionOptions() {}
    /**
     * @return Controls how long we wait before expiring stale data.
     * 
     */
    public Optional<String> blockDataExpiryDuration() {
        return Optional.ofNullable(this.blockDataExpiryDuration);
    }
    /**
     * @return Controls how long to keep a block in memory before flushing to a fileset on disk.
     * 
     */
    public Optional<String> blocksizeDuration() {
        return Optional.ofNullable(this.blocksizeDuration);
    }
    /**
     * @return Controls how far into the future writes to the namespace will be accepted.
     * 
     */
    public Optional<String> bufferFutureDuration() {
        return Optional.ofNullable(this.bufferFutureDuration);
    }
    /**
     * @return Controls how far into the past writes to the namespace will be accepted.
     * 
     */
    public Optional<String> bufferPastDuration() {
        return Optional.ofNullable(this.bufferPastDuration);
    }
    /**
     * @return Controls the duration of time that M3DB will retain data for the namespace.
     * 
     */
    public Optional<String> retentionPeriodDuration() {
        return Optional.ofNullable(this.retentionPeriodDuration);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(M3DbM3dbUserConfigNamespaceOptionsRetentionOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String blockDataExpiryDuration;
        private @Nullable String blocksizeDuration;
        private @Nullable String bufferFutureDuration;
        private @Nullable String bufferPastDuration;
        private @Nullable String retentionPeriodDuration;
        public Builder() {}
        public Builder(M3DbM3dbUserConfigNamespaceOptionsRetentionOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blockDataExpiryDuration = defaults.blockDataExpiryDuration;
    	      this.blocksizeDuration = defaults.blocksizeDuration;
    	      this.bufferFutureDuration = defaults.bufferFutureDuration;
    	      this.bufferPastDuration = defaults.bufferPastDuration;
    	      this.retentionPeriodDuration = defaults.retentionPeriodDuration;
        }

        @CustomType.Setter
        public Builder blockDataExpiryDuration(@Nullable String blockDataExpiryDuration) {

            this.blockDataExpiryDuration = blockDataExpiryDuration;
            return this;
        }
        @CustomType.Setter
        public Builder blocksizeDuration(@Nullable String blocksizeDuration) {

            this.blocksizeDuration = blocksizeDuration;
            return this;
        }
        @CustomType.Setter
        public Builder bufferFutureDuration(@Nullable String bufferFutureDuration) {

            this.bufferFutureDuration = bufferFutureDuration;
            return this;
        }
        @CustomType.Setter
        public Builder bufferPastDuration(@Nullable String bufferPastDuration) {

            this.bufferPastDuration = bufferPastDuration;
            return this;
        }
        @CustomType.Setter
        public Builder retentionPeriodDuration(@Nullable String retentionPeriodDuration) {

            this.retentionPeriodDuration = retentionPeriodDuration;
            return this;
        }
        public M3DbM3dbUserConfigNamespaceOptionsRetentionOptions build() {
            final var _resultValue = new M3DbM3dbUserConfigNamespaceOptionsRetentionOptions();
            _resultValue.blockDataExpiryDuration = blockDataExpiryDuration;
            _resultValue.blocksizeDuration = blocksizeDuration;
            _resultValue.bufferFutureDuration = bufferFutureDuration;
            _resultValue.bufferPastDuration = bufferPastDuration;
            _resultValue.retentionPeriodDuration = retentionPeriodDuration;
            return _resultValue;
        }
    }
}
