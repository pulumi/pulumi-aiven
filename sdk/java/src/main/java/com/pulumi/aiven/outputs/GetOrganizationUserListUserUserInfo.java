// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetOrganizationUserListUserUserInfo {
    /**
     * @return City
     * 
     */
    private String city;
    /**
     * @return Country
     * 
     */
    private String country;
    /**
     * @return Creation time
     * 
     */
    private String createTime;
    /**
     * @return Department
     * 
     */
    private String department;
    /**
     * @return Is Application User
     * 
     */
    private Boolean isApplicationUser;
    /**
     * @return Job Title
     * 
     */
    private String jobTitle;
    /**
     * @return Managed By Scim
     * 
     */
    private Boolean managedByScim;
    /**
     * @return Managing Organization ID
     * 
     */
    private String managingOrganizationId;
    /**
     * @return Real Name
     * 
     */
    private String realName;
    /**
     * @return State
     * 
     */
    private String state;
    /**
     * @return User Email
     * 
     */
    private String userEmail;

    private GetOrganizationUserListUserUserInfo() {}
    /**
     * @return City
     * 
     */
    public String city() {
        return this.city;
    }
    /**
     * @return Country
     * 
     */
    public String country() {
        return this.country;
    }
    /**
     * @return Creation time
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Department
     * 
     */
    public String department() {
        return this.department;
    }
    /**
     * @return Is Application User
     * 
     */
    public Boolean isApplicationUser() {
        return this.isApplicationUser;
    }
    /**
     * @return Job Title
     * 
     */
    public String jobTitle() {
        return this.jobTitle;
    }
    /**
     * @return Managed By Scim
     * 
     */
    public Boolean managedByScim() {
        return this.managedByScim;
    }
    /**
     * @return Managing Organization ID
     * 
     */
    public String managingOrganizationId() {
        return this.managingOrganizationId;
    }
    /**
     * @return Real Name
     * 
     */
    public String realName() {
        return this.realName;
    }
    /**
     * @return State
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return User Email
     * 
     */
    public String userEmail() {
        return this.userEmail;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOrganizationUserListUserUserInfo defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String city;
        private String country;
        private String createTime;
        private String department;
        private Boolean isApplicationUser;
        private String jobTitle;
        private Boolean managedByScim;
        private String managingOrganizationId;
        private String realName;
        private String state;
        private String userEmail;
        public Builder() {}
        public Builder(GetOrganizationUserListUserUserInfo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.city = defaults.city;
    	      this.country = defaults.country;
    	      this.createTime = defaults.createTime;
    	      this.department = defaults.department;
    	      this.isApplicationUser = defaults.isApplicationUser;
    	      this.jobTitle = defaults.jobTitle;
    	      this.managedByScim = defaults.managedByScim;
    	      this.managingOrganizationId = defaults.managingOrganizationId;
    	      this.realName = defaults.realName;
    	      this.state = defaults.state;
    	      this.userEmail = defaults.userEmail;
        }

        @CustomType.Setter
        public Builder city(String city) {
            if (city == null) {
              throw new MissingRequiredPropertyException("GetOrganizationUserListUserUserInfo", "city");
            }
            this.city = city;
            return this;
        }
        @CustomType.Setter
        public Builder country(String country) {
            if (country == null) {
              throw new MissingRequiredPropertyException("GetOrganizationUserListUserUserInfo", "country");
            }
            this.country = country;
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetOrganizationUserListUserUserInfo", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder department(String department) {
            if (department == null) {
              throw new MissingRequiredPropertyException("GetOrganizationUserListUserUserInfo", "department");
            }
            this.department = department;
            return this;
        }
        @CustomType.Setter
        public Builder isApplicationUser(Boolean isApplicationUser) {
            if (isApplicationUser == null) {
              throw new MissingRequiredPropertyException("GetOrganizationUserListUserUserInfo", "isApplicationUser");
            }
            this.isApplicationUser = isApplicationUser;
            return this;
        }
        @CustomType.Setter
        public Builder jobTitle(String jobTitle) {
            if (jobTitle == null) {
              throw new MissingRequiredPropertyException("GetOrganizationUserListUserUserInfo", "jobTitle");
            }
            this.jobTitle = jobTitle;
            return this;
        }
        @CustomType.Setter
        public Builder managedByScim(Boolean managedByScim) {
            if (managedByScim == null) {
              throw new MissingRequiredPropertyException("GetOrganizationUserListUserUserInfo", "managedByScim");
            }
            this.managedByScim = managedByScim;
            return this;
        }
        @CustomType.Setter
        public Builder managingOrganizationId(String managingOrganizationId) {
            if (managingOrganizationId == null) {
              throw new MissingRequiredPropertyException("GetOrganizationUserListUserUserInfo", "managingOrganizationId");
            }
            this.managingOrganizationId = managingOrganizationId;
            return this;
        }
        @CustomType.Setter
        public Builder realName(String realName) {
            if (realName == null) {
              throw new MissingRequiredPropertyException("GetOrganizationUserListUserUserInfo", "realName");
            }
            this.realName = realName;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetOrganizationUserListUserUserInfo", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder userEmail(String userEmail) {
            if (userEmail == null) {
              throw new MissingRequiredPropertyException("GetOrganizationUserListUserUserInfo", "userEmail");
            }
            this.userEmail = userEmail;
            return this;
        }
        public GetOrganizationUserListUserUserInfo build() {
            final var _resultValue = new GetOrganizationUserListUserUserInfo();
            _resultValue.city = city;
            _resultValue.country = country;
            _resultValue.createTime = createTime;
            _resultValue.department = department;
            _resultValue.isApplicationUser = isApplicationUser;
            _resultValue.jobTitle = jobTitle;
            _resultValue.managedByScim = managedByScim;
            _resultValue.managingOrganizationId = managingOrganizationId;
            _resultValue.realName = realName;
            _resultValue.state = state;
            _resultValue.userEmail = userEmail;
            return _resultValue;
        }
    }
}
