// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class RedisServiceIntegrationArgs extends com.pulumi.resources.ResourceArgs {

    public static final RedisServiceIntegrationArgs Empty = new RedisServiceIntegrationArgs();

    @Import(name="integrationType", required=true)
    private Output<String> integrationType;

    public Output<String> integrationType() {
        return this.integrationType;
    }

    @Import(name="sourceServiceName", required=true)
    private Output<String> sourceServiceName;

    public Output<String> sourceServiceName() {
        return this.sourceServiceName;
    }

    private RedisServiceIntegrationArgs() {}

    private RedisServiceIntegrationArgs(RedisServiceIntegrationArgs $) {
        this.integrationType = $.integrationType;
        this.sourceServiceName = $.sourceServiceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RedisServiceIntegrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RedisServiceIntegrationArgs $;

        public Builder() {
            $ = new RedisServiceIntegrationArgs();
        }

        public Builder(RedisServiceIntegrationArgs defaults) {
            $ = new RedisServiceIntegrationArgs(Objects.requireNonNull(defaults));
        }

        public Builder integrationType(Output<String> integrationType) {
            $.integrationType = integrationType;
            return this;
        }

        public Builder integrationType(String integrationType) {
            return integrationType(Output.of(integrationType));
        }

        public Builder sourceServiceName(Output<String> sourceServiceName) {
            $.sourceServiceName = sourceServiceName;
            return this;
        }

        public Builder sourceServiceName(String sourceServiceName) {
            return sourceServiceName(Output.of(sourceServiceName));
        }

        public RedisServiceIntegrationArgs build() {
            if ($.integrationType == null) {
                throw new MissingRequiredPropertyException("RedisServiceIntegrationArgs", "integrationType");
            }
            if ($.sourceServiceName == null) {
                throw new MissingRequiredPropertyException("RedisServiceIntegrationArgs", "sourceServiceName");
            }
            return $;
        }
    }

}
