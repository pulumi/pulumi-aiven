// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.aiven.outputs.GetKafkaConnectorTask;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetKafkaConnectorResult {
    /**
     * @return The Kafka Connector configuration parameters.
     * 
     */
    private Map<String,String> config;
    /**
     * @return The kafka connector name. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    private String connectorName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The Kafka connector author.
     * 
     */
    private String pluginAuthor;
    /**
     * @return The Kafka connector Java class.
     * 
     */
    private String pluginClass;
    /**
     * @return The Kafka connector documentation URL.
     * 
     */
    private String pluginDocUrl;
    /**
     * @return The Kafka connector title.
     * 
     */
    private String pluginTitle;
    /**
     * @return The Kafka connector type.
     * 
     */
    private String pluginType;
    /**
     * @return The version of the kafka connector.
     * 
     */
    private String pluginVersion;
    /**
     * @return Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    private String project;
    /**
     * @return Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    private String serviceName;
    /**
     * @return List of tasks of a connector.
     * 
     */
    private List<GetKafkaConnectorTask> tasks;

    private GetKafkaConnectorResult() {}
    /**
     * @return The Kafka Connector configuration parameters.
     * 
     */
    public Map<String,String> config() {
        return this.config;
    }
    /**
     * @return The kafka connector name. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public String connectorName() {
        return this.connectorName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Kafka connector author.
     * 
     */
    public String pluginAuthor() {
        return this.pluginAuthor;
    }
    /**
     * @return The Kafka connector Java class.
     * 
     */
    public String pluginClass() {
        return this.pluginClass;
    }
    /**
     * @return The Kafka connector documentation URL.
     * 
     */
    public String pluginDocUrl() {
        return this.pluginDocUrl;
    }
    /**
     * @return The Kafka connector title.
     * 
     */
    public String pluginTitle() {
        return this.pluginTitle;
    }
    /**
     * @return The Kafka connector type.
     * 
     */
    public String pluginType() {
        return this.pluginType;
    }
    /**
     * @return The version of the kafka connector.
     * 
     */
    public String pluginVersion() {
        return this.pluginVersion;
    }
    /**
     * @return Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public String project() {
        return this.project;
    }
    /**
     * @return Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return List of tasks of a connector.
     * 
     */
    public List<GetKafkaConnectorTask> tasks() {
        return this.tasks;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKafkaConnectorResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,String> config;
        private String connectorName;
        private String id;
        private String pluginAuthor;
        private String pluginClass;
        private String pluginDocUrl;
        private String pluginTitle;
        private String pluginType;
        private String pluginVersion;
        private String project;
        private String serviceName;
        private List<GetKafkaConnectorTask> tasks;
        public Builder() {}
        public Builder(GetKafkaConnectorResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.config = defaults.config;
    	      this.connectorName = defaults.connectorName;
    	      this.id = defaults.id;
    	      this.pluginAuthor = defaults.pluginAuthor;
    	      this.pluginClass = defaults.pluginClass;
    	      this.pluginDocUrl = defaults.pluginDocUrl;
    	      this.pluginTitle = defaults.pluginTitle;
    	      this.pluginType = defaults.pluginType;
    	      this.pluginVersion = defaults.pluginVersion;
    	      this.project = defaults.project;
    	      this.serviceName = defaults.serviceName;
    	      this.tasks = defaults.tasks;
        }

        @CustomType.Setter
        public Builder config(Map<String,String> config) {
            if (config == null) {
              throw new MissingRequiredPropertyException("GetKafkaConnectorResult", "config");
            }
            this.config = config;
            return this;
        }
        @CustomType.Setter
        public Builder connectorName(String connectorName) {
            if (connectorName == null) {
              throw new MissingRequiredPropertyException("GetKafkaConnectorResult", "connectorName");
            }
            this.connectorName = connectorName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetKafkaConnectorResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder pluginAuthor(String pluginAuthor) {
            if (pluginAuthor == null) {
              throw new MissingRequiredPropertyException("GetKafkaConnectorResult", "pluginAuthor");
            }
            this.pluginAuthor = pluginAuthor;
            return this;
        }
        @CustomType.Setter
        public Builder pluginClass(String pluginClass) {
            if (pluginClass == null) {
              throw new MissingRequiredPropertyException("GetKafkaConnectorResult", "pluginClass");
            }
            this.pluginClass = pluginClass;
            return this;
        }
        @CustomType.Setter
        public Builder pluginDocUrl(String pluginDocUrl) {
            if (pluginDocUrl == null) {
              throw new MissingRequiredPropertyException("GetKafkaConnectorResult", "pluginDocUrl");
            }
            this.pluginDocUrl = pluginDocUrl;
            return this;
        }
        @CustomType.Setter
        public Builder pluginTitle(String pluginTitle) {
            if (pluginTitle == null) {
              throw new MissingRequiredPropertyException("GetKafkaConnectorResult", "pluginTitle");
            }
            this.pluginTitle = pluginTitle;
            return this;
        }
        @CustomType.Setter
        public Builder pluginType(String pluginType) {
            if (pluginType == null) {
              throw new MissingRequiredPropertyException("GetKafkaConnectorResult", "pluginType");
            }
            this.pluginType = pluginType;
            return this;
        }
        @CustomType.Setter
        public Builder pluginVersion(String pluginVersion) {
            if (pluginVersion == null) {
              throw new MissingRequiredPropertyException("GetKafkaConnectorResult", "pluginVersion");
            }
            this.pluginVersion = pluginVersion;
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            if (project == null) {
              throw new MissingRequiredPropertyException("GetKafkaConnectorResult", "project");
            }
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            if (serviceName == null) {
              throw new MissingRequiredPropertyException("GetKafkaConnectorResult", "serviceName");
            }
            this.serviceName = serviceName;
            return this;
        }
        @CustomType.Setter
        public Builder tasks(List<GetKafkaConnectorTask> tasks) {
            if (tasks == null) {
              throw new MissingRequiredPropertyException("GetKafkaConnectorResult", "tasks");
            }
            this.tasks = tasks;
            return this;
        }
        public Builder tasks(GetKafkaConnectorTask... tasks) {
            return tasks(List.of(tasks));
        }
        public GetKafkaConnectorResult build() {
            final var _resultValue = new GetKafkaConnectorResult();
            _resultValue.config = config;
            _resultValue.connectorName = connectorName;
            _resultValue.id = id;
            _resultValue.pluginAuthor = pluginAuthor;
            _resultValue.pluginClass = pluginClass;
            _resultValue.pluginDocUrl = pluginDocUrl;
            _resultValue.pluginTitle = pluginTitle;
            _resultValue.pluginType = pluginType;
            _resultValue.pluginVersion = pluginVersion;
            _resultValue.project = project;
            _resultValue.serviceName = serviceName;
            _resultValue.tasks = tasks;
            return _resultValue;
        }
    }
}
