// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class FlinkJarApplicationVersionArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlinkJarApplicationVersionArgs Empty = new FlinkJarApplicationVersionArgs();

    /**
     * Application Id. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="applicationId", required=true)
    private Output<String> applicationId;

    /**
     * @return Application Id. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> applicationId() {
        return this.applicationId;
    }

    /**
     * Project name. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="project", required=true)
    private Output<String> project;

    /**
     * @return Project name. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    /**
     * Service name. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return Service name. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    /**
     * The path to the jar file to upload.
     * 
     */
    @Import(name="source", required=true)
    private Output<String> source;

    /**
     * @return The path to the jar file to upload.
     * 
     */
    public Output<String> source() {
        return this.source;
    }

    private FlinkJarApplicationVersionArgs() {}

    private FlinkJarApplicationVersionArgs(FlinkJarApplicationVersionArgs $) {
        this.applicationId = $.applicationId;
        this.project = $.project;
        this.serviceName = $.serviceName;
        this.source = $.source;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlinkJarApplicationVersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlinkJarApplicationVersionArgs $;

        public Builder() {
            $ = new FlinkJarApplicationVersionArgs();
        }

        public Builder(FlinkJarApplicationVersionArgs defaults) {
            $ = new FlinkJarApplicationVersionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationId Application Id. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(Output<String> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        /**
         * @param applicationId Application Id. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(String applicationId) {
            return applicationId(Output.of(applicationId));
        }

        /**
         * @param project Project name. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project Project name. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param serviceName Service name. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName Service name. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param source The path to the jar file to upload.
         * 
         * @return builder
         * 
         */
        public Builder source(Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source The path to the jar file to upload.
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        public FlinkJarApplicationVersionArgs build() {
            if ($.applicationId == null) {
                throw new MissingRequiredPropertyException("FlinkJarApplicationVersionArgs", "applicationId");
            }
            if ($.project == null) {
                throw new MissingRequiredPropertyException("FlinkJarApplicationVersionArgs", "project");
            }
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("FlinkJarApplicationVersionArgs", "serviceName");
            }
            if ($.source == null) {
                throw new MissingRequiredPropertyException("FlinkJarApplicationVersionArgs", "source");
            }
            return $;
        }
    }

}
