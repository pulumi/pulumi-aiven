// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetServiceIntegrationEndpointExternalSchemaRegistryUserConfig {
    /**
     * @return Enum: `basic`, `none`. Authentication method.
     * 
     */
    private String authentication;
    /**
     * @return Basic authentication password. Example: `Zm9vYg==`.
     * 
     */
    private @Nullable String basicAuthPassword;
    /**
     * @return Basic authentication user name. Example: `avnadmin`.
     * 
     */
    private @Nullable String basicAuthUsername;
    /**
     * @return Schema Registry URL. Example: `https://schema-registry.kafka.company.com:28419`.
     * 
     */
    private String url;

    private GetServiceIntegrationEndpointExternalSchemaRegistryUserConfig() {}
    /**
     * @return Enum: `basic`, `none`. Authentication method.
     * 
     */
    public String authentication() {
        return this.authentication;
    }
    /**
     * @return Basic authentication password. Example: `Zm9vYg==`.
     * 
     */
    public Optional<String> basicAuthPassword() {
        return Optional.ofNullable(this.basicAuthPassword);
    }
    /**
     * @return Basic authentication user name. Example: `avnadmin`.
     * 
     */
    public Optional<String> basicAuthUsername() {
        return Optional.ofNullable(this.basicAuthUsername);
    }
    /**
     * @return Schema Registry URL. Example: `https://schema-registry.kafka.company.com:28419`.
     * 
     */
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceIntegrationEndpointExternalSchemaRegistryUserConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String authentication;
        private @Nullable String basicAuthPassword;
        private @Nullable String basicAuthUsername;
        private String url;
        public Builder() {}
        public Builder(GetServiceIntegrationEndpointExternalSchemaRegistryUserConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authentication = defaults.authentication;
    	      this.basicAuthPassword = defaults.basicAuthPassword;
    	      this.basicAuthUsername = defaults.basicAuthUsername;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder authentication(String authentication) {
            if (authentication == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointExternalSchemaRegistryUserConfig", "authentication");
            }
            this.authentication = authentication;
            return this;
        }
        @CustomType.Setter
        public Builder basicAuthPassword(@Nullable String basicAuthPassword) {

            this.basicAuthPassword = basicAuthPassword;
            return this;
        }
        @CustomType.Setter
        public Builder basicAuthUsername(@Nullable String basicAuthUsername) {

            this.basicAuthUsername = basicAuthUsername;
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            if (url == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationEndpointExternalSchemaRegistryUserConfig", "url");
            }
            this.url = url;
            return this;
        }
        public GetServiceIntegrationEndpointExternalSchemaRegistryUserConfig build() {
            final var _resultValue = new GetServiceIntegrationEndpointExternalSchemaRegistryUserConfig();
            _resultValue.authentication = authentication;
            _resultValue.basicAuthPassword = basicAuthPassword;
            _resultValue.basicAuthUsername = basicAuthUsername;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
