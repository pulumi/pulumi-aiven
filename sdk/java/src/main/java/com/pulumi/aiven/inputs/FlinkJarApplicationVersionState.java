// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.aiven.inputs.FlinkJarApplicationVersionFileInfoArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlinkJarApplicationVersionState extends com.pulumi.resources.ResourceArgs {

    public static final FlinkJarApplicationVersionState Empty = new FlinkJarApplicationVersionState();

    /**
     * Application Id. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="applicationId")
    private @Nullable Output<String> applicationId;

    /**
     * @return Application Id. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> applicationId() {
        return Optional.ofNullable(this.applicationId);
    }

    /**
     * ApplicationVersion ID.
     * 
     */
    @Import(name="applicationVersionId")
    private @Nullable Output<String> applicationVersionId;

    /**
     * @return ApplicationVersion ID.
     * 
     */
    public Optional<Output<String>> applicationVersionId() {
        return Optional.ofNullable(this.applicationVersionId);
    }

    /**
     * The creation timestamp of this entity in ISO 8601 format, always in UTC.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return The creation timestamp of this entity in ISO 8601 format, always in UTC.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * The creator of this entity.
     * 
     */
    @Import(name="createdBy")
    private @Nullable Output<String> createdBy;

    /**
     * @return The creator of this entity.
     * 
     */
    public Optional<Output<String>> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    /**
     * Flink JarApplicationVersion FileInfo.
     * 
     */
    @Import(name="fileInfos")
    private @Nullable Output<List<FlinkJarApplicationVersionFileInfoArgs>> fileInfos;

    /**
     * @return Flink JarApplicationVersion FileInfo.
     * 
     */
    public Optional<Output<List<FlinkJarApplicationVersionFileInfoArgs>>> fileInfos() {
        return Optional.ofNullable(this.fileInfos);
    }

    /**
     * Project name. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return Project name. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Service name. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return Service name. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * The path to the jar file to upload.
     * 
     */
    @Import(name="source")
    private @Nullable Output<String> source;

    /**
     * @return The path to the jar file to upload.
     * 
     */
    public Optional<Output<String>> source() {
        return Optional.ofNullable(this.source);
    }

    /**
     * The sha256 checksum of the jar file to upload.
     * 
     */
    @Import(name="sourceChecksum")
    private @Nullable Output<String> sourceChecksum;

    /**
     * @return The sha256 checksum of the jar file to upload.
     * 
     */
    public Optional<Output<String>> sourceChecksum() {
        return Optional.ofNullable(this.sourceChecksum);
    }

    /**
     * Version number.
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return Version number.
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private FlinkJarApplicationVersionState() {}

    private FlinkJarApplicationVersionState(FlinkJarApplicationVersionState $) {
        this.applicationId = $.applicationId;
        this.applicationVersionId = $.applicationVersionId;
        this.createdAt = $.createdAt;
        this.createdBy = $.createdBy;
        this.fileInfos = $.fileInfos;
        this.project = $.project;
        this.serviceName = $.serviceName;
        this.source = $.source;
        this.sourceChecksum = $.sourceChecksum;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlinkJarApplicationVersionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlinkJarApplicationVersionState $;

        public Builder() {
            $ = new FlinkJarApplicationVersionState();
        }

        public Builder(FlinkJarApplicationVersionState defaults) {
            $ = new FlinkJarApplicationVersionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationId Application Id. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(@Nullable Output<String> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        /**
         * @param applicationId Application Id. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(String applicationId) {
            return applicationId(Output.of(applicationId));
        }

        /**
         * @param applicationVersionId ApplicationVersion ID.
         * 
         * @return builder
         * 
         */
        public Builder applicationVersionId(@Nullable Output<String> applicationVersionId) {
            $.applicationVersionId = applicationVersionId;
            return this;
        }

        /**
         * @param applicationVersionId ApplicationVersion ID.
         * 
         * @return builder
         * 
         */
        public Builder applicationVersionId(String applicationVersionId) {
            return applicationVersionId(Output.of(applicationVersionId));
        }

        /**
         * @param createdAt The creation timestamp of this entity in ISO 8601 format, always in UTC.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt The creation timestamp of this entity in ISO 8601 format, always in UTC.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param createdBy The creator of this entity.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(@Nullable Output<String> createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        /**
         * @param createdBy The creator of this entity.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(String createdBy) {
            return createdBy(Output.of(createdBy));
        }

        /**
         * @param fileInfos Flink JarApplicationVersion FileInfo.
         * 
         * @return builder
         * 
         */
        public Builder fileInfos(@Nullable Output<List<FlinkJarApplicationVersionFileInfoArgs>> fileInfos) {
            $.fileInfos = fileInfos;
            return this;
        }

        /**
         * @param fileInfos Flink JarApplicationVersion FileInfo.
         * 
         * @return builder
         * 
         */
        public Builder fileInfos(List<FlinkJarApplicationVersionFileInfoArgs> fileInfos) {
            return fileInfos(Output.of(fileInfos));
        }

        /**
         * @param fileInfos Flink JarApplicationVersion FileInfo.
         * 
         * @return builder
         * 
         */
        public Builder fileInfos(FlinkJarApplicationVersionFileInfoArgs... fileInfos) {
            return fileInfos(List.of(fileInfos));
        }

        /**
         * @param project Project name. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project Project name. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param serviceName Service name. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName Service name. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param source The path to the jar file to upload.
         * 
         * @return builder
         * 
         */
        public Builder source(@Nullable Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source The path to the jar file to upload.
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        /**
         * @param sourceChecksum The sha256 checksum of the jar file to upload.
         * 
         * @return builder
         * 
         */
        public Builder sourceChecksum(@Nullable Output<String> sourceChecksum) {
            $.sourceChecksum = sourceChecksum;
            return this;
        }

        /**
         * @param sourceChecksum The sha256 checksum of the jar file to upload.
         * 
         * @return builder
         * 
         */
        public Builder sourceChecksum(String sourceChecksum) {
            return sourceChecksum(Output.of(sourceChecksum));
        }

        /**
         * @param version Version number.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Version number.
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public FlinkJarApplicationVersionState build() {
            return $;
        }
    }

}
