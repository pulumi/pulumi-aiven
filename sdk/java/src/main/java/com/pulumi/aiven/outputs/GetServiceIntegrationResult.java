// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.aiven.outputs.GetServiceIntegrationClickhouseCredentialsUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationClickhouseKafkaUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationClickhousePostgresqlUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationDatadogUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationExternalAwsCloudwatchLogsUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationExternalElasticsearchLogsUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationExternalOpensearchLogsUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationFlinkExternalPostgresqlUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationKafkaConnectUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationKafkaLogsUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationKafkaMirrormakerUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationLogsUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationMetricsUserConfig;
import com.pulumi.aiven.outputs.GetServiceIntegrationPrometheusUserConfig;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceIntegrationResult {
    /**
     * @return ClickhouseCredentials user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationClickhouseCredentialsUserConfig> clickhouseCredentialsUserConfigs;
    /**
     * @return ClickhouseKafka user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationClickhouseKafkaUserConfig> clickhouseKafkaUserConfigs;
    /**
     * @return ClickhousePostgresql user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationClickhousePostgresqlUserConfig> clickhousePostgresqlUserConfigs;
    /**
     * @return Datadog user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationDatadogUserConfig> datadogUserConfigs;
    /**
     * @return Destination endpoint for the integration.
     * 
     */
    private String destinationEndpointId;
    /**
     * @return Destination service for the integration.
     * 
     */
    private String destinationServiceName;
    /**
     * @return Destination service project name
     * 
     */
    private String destinationServiceProject;
    /**
     * @return ExternalAwsCloudwatchLogs user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationExternalAwsCloudwatchLogsUserConfig> externalAwsCloudwatchLogsUserConfigs;
    /**
     * @return ExternalAwsCloudwatchMetrics user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfig> externalAwsCloudwatchMetricsUserConfigs;
    /**
     * @return ExternalElasticsearchLogs user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationExternalElasticsearchLogsUserConfig> externalElasticsearchLogsUserConfigs;
    /**
     * @return ExternalOpensearchLogs user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationExternalOpensearchLogsUserConfig> externalOpensearchLogsUserConfigs;
    /**
     * @return FlinkExternalPostgresql user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationFlinkExternalPostgresqlUserConfig> flinkExternalPostgresqlUserConfigs;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The ID of the Aiven service integration.
     * 
     */
    private String integrationId;
    /**
     * @return Type of the service integration. The possible values are `alertmanager`, `autoscaler`, `caching`, `cassandra_cross_service_cluster`, `clickhouse_credentials`, `clickhouse_kafka`, `clickhouse_postgresql`, `dashboard`, `datadog`, `datasource`, `disaster_recovery`, `external_aws_cloudwatch_logs`, `external_aws_cloudwatch_metrics`, `external_elasticsearch_logs`, `external_google_cloud_logging`, `external_opensearch_logs`, `flink`, `flink_external_bigquery`, `flink_external_kafka`, `flink_external_postgresql`, `internal_connectivity`, `jolokia`, `kafka_connect`, `kafka_connect_postgresql`, `kafka_logs`, `kafka_mirrormaker`, `logs`, `m3aggregator`, `m3coordinator`, `metrics`, `opensearch_cross_cluster_replication`, `opensearch_cross_cluster_search`, `prometheus`, `read_replica`, `rsyslog`, `schema_registry_proxy`, `stresstester`, `thanos_distributed_query`, `thanos_migrate`, `thanoscompactor`, `thanosquery`, `thanosruler`, `thanosstore`, `vector` and `vmalert`.
     * 
     */
    private String integrationType;
    /**
     * @return KafkaConnect user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationKafkaConnectUserConfig> kafkaConnectUserConfigs;
    /**
     * @return KafkaLogs user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationKafkaLogsUserConfig> kafkaLogsUserConfigs;
    /**
     * @return KafkaMirrormaker user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationKafkaMirrormakerUserConfig> kafkaMirrormakerUserConfigs;
    /**
     * @return Logs user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationLogsUserConfig> logsUserConfigs;
    /**
     * @return Metrics user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationMetricsUserConfig> metricsUserConfigs;
    /**
     * @return Project the integration belongs to.
     * 
     */
    private String project;
    /**
     * @return Prometheus user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    private List<GetServiceIntegrationPrometheusUserConfig> prometheusUserConfigs;
    /**
     * @return Source endpoint for the integration.
     * 
     */
    private String sourceEndpointId;
    /**
     * @return Source service for the integration (if any)
     * 
     */
    private String sourceServiceName;
    /**
     * @return Source service project name
     * 
     */
    private String sourceServiceProject;

    private GetServiceIntegrationResult() {}
    /**
     * @return ClickhouseCredentials user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationClickhouseCredentialsUserConfig> clickhouseCredentialsUserConfigs() {
        return this.clickhouseCredentialsUserConfigs;
    }
    /**
     * @return ClickhouseKafka user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationClickhouseKafkaUserConfig> clickhouseKafkaUserConfigs() {
        return this.clickhouseKafkaUserConfigs;
    }
    /**
     * @return ClickhousePostgresql user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationClickhousePostgresqlUserConfig> clickhousePostgresqlUserConfigs() {
        return this.clickhousePostgresqlUserConfigs;
    }
    /**
     * @return Datadog user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationDatadogUserConfig> datadogUserConfigs() {
        return this.datadogUserConfigs;
    }
    /**
     * @return Destination endpoint for the integration.
     * 
     */
    public String destinationEndpointId() {
        return this.destinationEndpointId;
    }
    /**
     * @return Destination service for the integration.
     * 
     */
    public String destinationServiceName() {
        return this.destinationServiceName;
    }
    /**
     * @return Destination service project name
     * 
     */
    public String destinationServiceProject() {
        return this.destinationServiceProject;
    }
    /**
     * @return ExternalAwsCloudwatchLogs user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationExternalAwsCloudwatchLogsUserConfig> externalAwsCloudwatchLogsUserConfigs() {
        return this.externalAwsCloudwatchLogsUserConfigs;
    }
    /**
     * @return ExternalAwsCloudwatchMetrics user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfig> externalAwsCloudwatchMetricsUserConfigs() {
        return this.externalAwsCloudwatchMetricsUserConfigs;
    }
    /**
     * @return ExternalElasticsearchLogs user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationExternalElasticsearchLogsUserConfig> externalElasticsearchLogsUserConfigs() {
        return this.externalElasticsearchLogsUserConfigs;
    }
    /**
     * @return ExternalOpensearchLogs user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationExternalOpensearchLogsUserConfig> externalOpensearchLogsUserConfigs() {
        return this.externalOpensearchLogsUserConfigs;
    }
    /**
     * @return FlinkExternalPostgresql user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationFlinkExternalPostgresqlUserConfig> flinkExternalPostgresqlUserConfigs() {
        return this.flinkExternalPostgresqlUserConfigs;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ID of the Aiven service integration.
     * 
     */
    public String integrationId() {
        return this.integrationId;
    }
    /**
     * @return Type of the service integration. The possible values are `alertmanager`, `autoscaler`, `caching`, `cassandra_cross_service_cluster`, `clickhouse_credentials`, `clickhouse_kafka`, `clickhouse_postgresql`, `dashboard`, `datadog`, `datasource`, `disaster_recovery`, `external_aws_cloudwatch_logs`, `external_aws_cloudwatch_metrics`, `external_elasticsearch_logs`, `external_google_cloud_logging`, `external_opensearch_logs`, `flink`, `flink_external_bigquery`, `flink_external_kafka`, `flink_external_postgresql`, `internal_connectivity`, `jolokia`, `kafka_connect`, `kafka_connect_postgresql`, `kafka_logs`, `kafka_mirrormaker`, `logs`, `m3aggregator`, `m3coordinator`, `metrics`, `opensearch_cross_cluster_replication`, `opensearch_cross_cluster_search`, `prometheus`, `read_replica`, `rsyslog`, `schema_registry_proxy`, `stresstester`, `thanos_distributed_query`, `thanos_migrate`, `thanoscompactor`, `thanosquery`, `thanosruler`, `thanosstore`, `vector` and `vmalert`.
     * 
     */
    public String integrationType() {
        return this.integrationType;
    }
    /**
     * @return KafkaConnect user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationKafkaConnectUserConfig> kafkaConnectUserConfigs() {
        return this.kafkaConnectUserConfigs;
    }
    /**
     * @return KafkaLogs user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationKafkaLogsUserConfig> kafkaLogsUserConfigs() {
        return this.kafkaLogsUserConfigs;
    }
    /**
     * @return KafkaMirrormaker user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationKafkaMirrormakerUserConfig> kafkaMirrormakerUserConfigs() {
        return this.kafkaMirrormakerUserConfigs;
    }
    /**
     * @return Logs user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationLogsUserConfig> logsUserConfigs() {
        return this.logsUserConfigs;
    }
    /**
     * @return Metrics user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationMetricsUserConfig> metricsUserConfigs() {
        return this.metricsUserConfigs;
    }
    /**
     * @return Project the integration belongs to.
     * 
     */
    public String project() {
        return this.project;
    }
    /**
     * @return Prometheus user configurable settings. **Warning:** There&#39;s no way to reset advanced configuration options to default. Options that you add cannot be removed later
     * 
     */
    public List<GetServiceIntegrationPrometheusUserConfig> prometheusUserConfigs() {
        return this.prometheusUserConfigs;
    }
    /**
     * @return Source endpoint for the integration.
     * 
     */
    public String sourceEndpointId() {
        return this.sourceEndpointId;
    }
    /**
     * @return Source service for the integration (if any)
     * 
     */
    public String sourceServiceName() {
        return this.sourceServiceName;
    }
    /**
     * @return Source service project name
     * 
     */
    public String sourceServiceProject() {
        return this.sourceServiceProject;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceIntegrationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetServiceIntegrationClickhouseCredentialsUserConfig> clickhouseCredentialsUserConfigs;
        private List<GetServiceIntegrationClickhouseKafkaUserConfig> clickhouseKafkaUserConfigs;
        private List<GetServiceIntegrationClickhousePostgresqlUserConfig> clickhousePostgresqlUserConfigs;
        private List<GetServiceIntegrationDatadogUserConfig> datadogUserConfigs;
        private String destinationEndpointId;
        private String destinationServiceName;
        private String destinationServiceProject;
        private List<GetServiceIntegrationExternalAwsCloudwatchLogsUserConfig> externalAwsCloudwatchLogsUserConfigs;
        private List<GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfig> externalAwsCloudwatchMetricsUserConfigs;
        private List<GetServiceIntegrationExternalElasticsearchLogsUserConfig> externalElasticsearchLogsUserConfigs;
        private List<GetServiceIntegrationExternalOpensearchLogsUserConfig> externalOpensearchLogsUserConfigs;
        private List<GetServiceIntegrationFlinkExternalPostgresqlUserConfig> flinkExternalPostgresqlUserConfigs;
        private String id;
        private String integrationId;
        private String integrationType;
        private List<GetServiceIntegrationKafkaConnectUserConfig> kafkaConnectUserConfigs;
        private List<GetServiceIntegrationKafkaLogsUserConfig> kafkaLogsUserConfigs;
        private List<GetServiceIntegrationKafkaMirrormakerUserConfig> kafkaMirrormakerUserConfigs;
        private List<GetServiceIntegrationLogsUserConfig> logsUserConfigs;
        private List<GetServiceIntegrationMetricsUserConfig> metricsUserConfigs;
        private String project;
        private List<GetServiceIntegrationPrometheusUserConfig> prometheusUserConfigs;
        private String sourceEndpointId;
        private String sourceServiceName;
        private String sourceServiceProject;
        public Builder() {}
        public Builder(GetServiceIntegrationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clickhouseCredentialsUserConfigs = defaults.clickhouseCredentialsUserConfigs;
    	      this.clickhouseKafkaUserConfigs = defaults.clickhouseKafkaUserConfigs;
    	      this.clickhousePostgresqlUserConfigs = defaults.clickhousePostgresqlUserConfigs;
    	      this.datadogUserConfigs = defaults.datadogUserConfigs;
    	      this.destinationEndpointId = defaults.destinationEndpointId;
    	      this.destinationServiceName = defaults.destinationServiceName;
    	      this.destinationServiceProject = defaults.destinationServiceProject;
    	      this.externalAwsCloudwatchLogsUserConfigs = defaults.externalAwsCloudwatchLogsUserConfigs;
    	      this.externalAwsCloudwatchMetricsUserConfigs = defaults.externalAwsCloudwatchMetricsUserConfigs;
    	      this.externalElasticsearchLogsUserConfigs = defaults.externalElasticsearchLogsUserConfigs;
    	      this.externalOpensearchLogsUserConfigs = defaults.externalOpensearchLogsUserConfigs;
    	      this.flinkExternalPostgresqlUserConfigs = defaults.flinkExternalPostgresqlUserConfigs;
    	      this.id = defaults.id;
    	      this.integrationId = defaults.integrationId;
    	      this.integrationType = defaults.integrationType;
    	      this.kafkaConnectUserConfigs = defaults.kafkaConnectUserConfigs;
    	      this.kafkaLogsUserConfigs = defaults.kafkaLogsUserConfigs;
    	      this.kafkaMirrormakerUserConfigs = defaults.kafkaMirrormakerUserConfigs;
    	      this.logsUserConfigs = defaults.logsUserConfigs;
    	      this.metricsUserConfigs = defaults.metricsUserConfigs;
    	      this.project = defaults.project;
    	      this.prometheusUserConfigs = defaults.prometheusUserConfigs;
    	      this.sourceEndpointId = defaults.sourceEndpointId;
    	      this.sourceServiceName = defaults.sourceServiceName;
    	      this.sourceServiceProject = defaults.sourceServiceProject;
        }

        @CustomType.Setter
        public Builder clickhouseCredentialsUserConfigs(List<GetServiceIntegrationClickhouseCredentialsUserConfig> clickhouseCredentialsUserConfigs) {
            if (clickhouseCredentialsUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "clickhouseCredentialsUserConfigs");
            }
            this.clickhouseCredentialsUserConfigs = clickhouseCredentialsUserConfigs;
            return this;
        }
        public Builder clickhouseCredentialsUserConfigs(GetServiceIntegrationClickhouseCredentialsUserConfig... clickhouseCredentialsUserConfigs) {
            return clickhouseCredentialsUserConfigs(List.of(clickhouseCredentialsUserConfigs));
        }
        @CustomType.Setter
        public Builder clickhouseKafkaUserConfigs(List<GetServiceIntegrationClickhouseKafkaUserConfig> clickhouseKafkaUserConfigs) {
            if (clickhouseKafkaUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "clickhouseKafkaUserConfigs");
            }
            this.clickhouseKafkaUserConfigs = clickhouseKafkaUserConfigs;
            return this;
        }
        public Builder clickhouseKafkaUserConfigs(GetServiceIntegrationClickhouseKafkaUserConfig... clickhouseKafkaUserConfigs) {
            return clickhouseKafkaUserConfigs(List.of(clickhouseKafkaUserConfigs));
        }
        @CustomType.Setter
        public Builder clickhousePostgresqlUserConfigs(List<GetServiceIntegrationClickhousePostgresqlUserConfig> clickhousePostgresqlUserConfigs) {
            if (clickhousePostgresqlUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "clickhousePostgresqlUserConfigs");
            }
            this.clickhousePostgresqlUserConfigs = clickhousePostgresqlUserConfigs;
            return this;
        }
        public Builder clickhousePostgresqlUserConfigs(GetServiceIntegrationClickhousePostgresqlUserConfig... clickhousePostgresqlUserConfigs) {
            return clickhousePostgresqlUserConfigs(List.of(clickhousePostgresqlUserConfigs));
        }
        @CustomType.Setter
        public Builder datadogUserConfigs(List<GetServiceIntegrationDatadogUserConfig> datadogUserConfigs) {
            if (datadogUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "datadogUserConfigs");
            }
            this.datadogUserConfigs = datadogUserConfigs;
            return this;
        }
        public Builder datadogUserConfigs(GetServiceIntegrationDatadogUserConfig... datadogUserConfigs) {
            return datadogUserConfigs(List.of(datadogUserConfigs));
        }
        @CustomType.Setter
        public Builder destinationEndpointId(String destinationEndpointId) {
            if (destinationEndpointId == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "destinationEndpointId");
            }
            this.destinationEndpointId = destinationEndpointId;
            return this;
        }
        @CustomType.Setter
        public Builder destinationServiceName(String destinationServiceName) {
            if (destinationServiceName == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "destinationServiceName");
            }
            this.destinationServiceName = destinationServiceName;
            return this;
        }
        @CustomType.Setter
        public Builder destinationServiceProject(String destinationServiceProject) {
            if (destinationServiceProject == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "destinationServiceProject");
            }
            this.destinationServiceProject = destinationServiceProject;
            return this;
        }
        @CustomType.Setter
        public Builder externalAwsCloudwatchLogsUserConfigs(List<GetServiceIntegrationExternalAwsCloudwatchLogsUserConfig> externalAwsCloudwatchLogsUserConfigs) {
            if (externalAwsCloudwatchLogsUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "externalAwsCloudwatchLogsUserConfigs");
            }
            this.externalAwsCloudwatchLogsUserConfigs = externalAwsCloudwatchLogsUserConfigs;
            return this;
        }
        public Builder externalAwsCloudwatchLogsUserConfigs(GetServiceIntegrationExternalAwsCloudwatchLogsUserConfig... externalAwsCloudwatchLogsUserConfigs) {
            return externalAwsCloudwatchLogsUserConfigs(List.of(externalAwsCloudwatchLogsUserConfigs));
        }
        @CustomType.Setter
        public Builder externalAwsCloudwatchMetricsUserConfigs(List<GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfig> externalAwsCloudwatchMetricsUserConfigs) {
            if (externalAwsCloudwatchMetricsUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "externalAwsCloudwatchMetricsUserConfigs");
            }
            this.externalAwsCloudwatchMetricsUserConfigs = externalAwsCloudwatchMetricsUserConfigs;
            return this;
        }
        public Builder externalAwsCloudwatchMetricsUserConfigs(GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfig... externalAwsCloudwatchMetricsUserConfigs) {
            return externalAwsCloudwatchMetricsUserConfigs(List.of(externalAwsCloudwatchMetricsUserConfigs));
        }
        @CustomType.Setter
        public Builder externalElasticsearchLogsUserConfigs(List<GetServiceIntegrationExternalElasticsearchLogsUserConfig> externalElasticsearchLogsUserConfigs) {
            if (externalElasticsearchLogsUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "externalElasticsearchLogsUserConfigs");
            }
            this.externalElasticsearchLogsUserConfigs = externalElasticsearchLogsUserConfigs;
            return this;
        }
        public Builder externalElasticsearchLogsUserConfigs(GetServiceIntegrationExternalElasticsearchLogsUserConfig... externalElasticsearchLogsUserConfigs) {
            return externalElasticsearchLogsUserConfigs(List.of(externalElasticsearchLogsUserConfigs));
        }
        @CustomType.Setter
        public Builder externalOpensearchLogsUserConfigs(List<GetServiceIntegrationExternalOpensearchLogsUserConfig> externalOpensearchLogsUserConfigs) {
            if (externalOpensearchLogsUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "externalOpensearchLogsUserConfigs");
            }
            this.externalOpensearchLogsUserConfigs = externalOpensearchLogsUserConfigs;
            return this;
        }
        public Builder externalOpensearchLogsUserConfigs(GetServiceIntegrationExternalOpensearchLogsUserConfig... externalOpensearchLogsUserConfigs) {
            return externalOpensearchLogsUserConfigs(List.of(externalOpensearchLogsUserConfigs));
        }
        @CustomType.Setter
        public Builder flinkExternalPostgresqlUserConfigs(List<GetServiceIntegrationFlinkExternalPostgresqlUserConfig> flinkExternalPostgresqlUserConfigs) {
            if (flinkExternalPostgresqlUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "flinkExternalPostgresqlUserConfigs");
            }
            this.flinkExternalPostgresqlUserConfigs = flinkExternalPostgresqlUserConfigs;
            return this;
        }
        public Builder flinkExternalPostgresqlUserConfigs(GetServiceIntegrationFlinkExternalPostgresqlUserConfig... flinkExternalPostgresqlUserConfigs) {
            return flinkExternalPostgresqlUserConfigs(List.of(flinkExternalPostgresqlUserConfigs));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder integrationId(String integrationId) {
            if (integrationId == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "integrationId");
            }
            this.integrationId = integrationId;
            return this;
        }
        @CustomType.Setter
        public Builder integrationType(String integrationType) {
            if (integrationType == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "integrationType");
            }
            this.integrationType = integrationType;
            return this;
        }
        @CustomType.Setter
        public Builder kafkaConnectUserConfigs(List<GetServiceIntegrationKafkaConnectUserConfig> kafkaConnectUserConfigs) {
            if (kafkaConnectUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "kafkaConnectUserConfigs");
            }
            this.kafkaConnectUserConfigs = kafkaConnectUserConfigs;
            return this;
        }
        public Builder kafkaConnectUserConfigs(GetServiceIntegrationKafkaConnectUserConfig... kafkaConnectUserConfigs) {
            return kafkaConnectUserConfigs(List.of(kafkaConnectUserConfigs));
        }
        @CustomType.Setter
        public Builder kafkaLogsUserConfigs(List<GetServiceIntegrationKafkaLogsUserConfig> kafkaLogsUserConfigs) {
            if (kafkaLogsUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "kafkaLogsUserConfigs");
            }
            this.kafkaLogsUserConfigs = kafkaLogsUserConfigs;
            return this;
        }
        public Builder kafkaLogsUserConfigs(GetServiceIntegrationKafkaLogsUserConfig... kafkaLogsUserConfigs) {
            return kafkaLogsUserConfigs(List.of(kafkaLogsUserConfigs));
        }
        @CustomType.Setter
        public Builder kafkaMirrormakerUserConfigs(List<GetServiceIntegrationKafkaMirrormakerUserConfig> kafkaMirrormakerUserConfigs) {
            if (kafkaMirrormakerUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "kafkaMirrormakerUserConfigs");
            }
            this.kafkaMirrormakerUserConfigs = kafkaMirrormakerUserConfigs;
            return this;
        }
        public Builder kafkaMirrormakerUserConfigs(GetServiceIntegrationKafkaMirrormakerUserConfig... kafkaMirrormakerUserConfigs) {
            return kafkaMirrormakerUserConfigs(List.of(kafkaMirrormakerUserConfigs));
        }
        @CustomType.Setter
        public Builder logsUserConfigs(List<GetServiceIntegrationLogsUserConfig> logsUserConfigs) {
            if (logsUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "logsUserConfigs");
            }
            this.logsUserConfigs = logsUserConfigs;
            return this;
        }
        public Builder logsUserConfigs(GetServiceIntegrationLogsUserConfig... logsUserConfigs) {
            return logsUserConfigs(List.of(logsUserConfigs));
        }
        @CustomType.Setter
        public Builder metricsUserConfigs(List<GetServiceIntegrationMetricsUserConfig> metricsUserConfigs) {
            if (metricsUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "metricsUserConfigs");
            }
            this.metricsUserConfigs = metricsUserConfigs;
            return this;
        }
        public Builder metricsUserConfigs(GetServiceIntegrationMetricsUserConfig... metricsUserConfigs) {
            return metricsUserConfigs(List.of(metricsUserConfigs));
        }
        @CustomType.Setter
        public Builder project(String project) {
            if (project == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "project");
            }
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder prometheusUserConfigs(List<GetServiceIntegrationPrometheusUserConfig> prometheusUserConfigs) {
            if (prometheusUserConfigs == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "prometheusUserConfigs");
            }
            this.prometheusUserConfigs = prometheusUserConfigs;
            return this;
        }
        public Builder prometheusUserConfigs(GetServiceIntegrationPrometheusUserConfig... prometheusUserConfigs) {
            return prometheusUserConfigs(List.of(prometheusUserConfigs));
        }
        @CustomType.Setter
        public Builder sourceEndpointId(String sourceEndpointId) {
            if (sourceEndpointId == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "sourceEndpointId");
            }
            this.sourceEndpointId = sourceEndpointId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceServiceName(String sourceServiceName) {
            if (sourceServiceName == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "sourceServiceName");
            }
            this.sourceServiceName = sourceServiceName;
            return this;
        }
        @CustomType.Setter
        public Builder sourceServiceProject(String sourceServiceProject) {
            if (sourceServiceProject == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "sourceServiceProject");
            }
            this.sourceServiceProject = sourceServiceProject;
            return this;
        }
        public GetServiceIntegrationResult build() {
            final var _resultValue = new GetServiceIntegrationResult();
            _resultValue.clickhouseCredentialsUserConfigs = clickhouseCredentialsUserConfigs;
            _resultValue.clickhouseKafkaUserConfigs = clickhouseKafkaUserConfigs;
            _resultValue.clickhousePostgresqlUserConfigs = clickhousePostgresqlUserConfigs;
            _resultValue.datadogUserConfigs = datadogUserConfigs;
            _resultValue.destinationEndpointId = destinationEndpointId;
            _resultValue.destinationServiceName = destinationServiceName;
            _resultValue.destinationServiceProject = destinationServiceProject;
            _resultValue.externalAwsCloudwatchLogsUserConfigs = externalAwsCloudwatchLogsUserConfigs;
            _resultValue.externalAwsCloudwatchMetricsUserConfigs = externalAwsCloudwatchMetricsUserConfigs;
            _resultValue.externalElasticsearchLogsUserConfigs = externalElasticsearchLogsUserConfigs;
            _resultValue.externalOpensearchLogsUserConfigs = externalOpensearchLogsUserConfigs;
            _resultValue.flinkExternalPostgresqlUserConfigs = flinkExternalPostgresqlUserConfigs;
            _resultValue.id = id;
            _resultValue.integrationId = integrationId;
            _resultValue.integrationType = integrationType;
            _resultValue.kafkaConnectUserConfigs = kafkaConnectUserConfigs;
            _resultValue.kafkaLogsUserConfigs = kafkaLogsUserConfigs;
            _resultValue.kafkaMirrormakerUserConfigs = kafkaMirrormakerUserConfigs;
            _resultValue.logsUserConfigs = logsUserConfigs;
            _resultValue.metricsUserConfigs = metricsUserConfigs;
            _resultValue.project = project;
            _resultValue.prometheusUserConfigs = prometheusUserConfigs;
            _resultValue.sourceEndpointId = sourceEndpointId;
            _resultValue.sourceServiceName = sourceServiceName;
            _resultValue.sourceServiceProject = sourceServiceProject;
            return _resultValue;
        }
    }
}
