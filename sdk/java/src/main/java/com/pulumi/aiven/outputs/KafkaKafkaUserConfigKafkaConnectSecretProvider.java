// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.aiven.outputs.KafkaKafkaUserConfigKafkaConnectSecretProviderAws;
import com.pulumi.aiven.outputs.KafkaKafkaUserConfigKafkaConnectSecretProviderVault;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class KafkaKafkaUserConfigKafkaConnectSecretProvider {
    /**
     * @return AWS config for Secret Provider
     * 
     */
    private @Nullable KafkaKafkaUserConfigKafkaConnectSecretProviderAws aws;
    /**
     * @return Name of the secret provider. Used to reference secrets in connector config.
     * 
     */
    private String name;
    /**
     * @return Vault Config for Secret Provider
     * 
     */
    private @Nullable KafkaKafkaUserConfigKafkaConnectSecretProviderVault vault;

    private KafkaKafkaUserConfigKafkaConnectSecretProvider() {}
    /**
     * @return AWS config for Secret Provider
     * 
     */
    public Optional<KafkaKafkaUserConfigKafkaConnectSecretProviderAws> aws() {
        return Optional.ofNullable(this.aws);
    }
    /**
     * @return Name of the secret provider. Used to reference secrets in connector config.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Vault Config for Secret Provider
     * 
     */
    public Optional<KafkaKafkaUserConfigKafkaConnectSecretProviderVault> vault() {
        return Optional.ofNullable(this.vault);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KafkaKafkaUserConfigKafkaConnectSecretProvider defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable KafkaKafkaUserConfigKafkaConnectSecretProviderAws aws;
        private String name;
        private @Nullable KafkaKafkaUserConfigKafkaConnectSecretProviderVault vault;
        public Builder() {}
        public Builder(KafkaKafkaUserConfigKafkaConnectSecretProvider defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aws = defaults.aws;
    	      this.name = defaults.name;
    	      this.vault = defaults.vault;
        }

        @CustomType.Setter
        public Builder aws(@Nullable KafkaKafkaUserConfigKafkaConnectSecretProviderAws aws) {

            this.aws = aws;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("KafkaKafkaUserConfigKafkaConnectSecretProvider", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder vault(@Nullable KafkaKafkaUserConfigKafkaConnectSecretProviderVault vault) {

            this.vault = vault;
            return this;
        }
        public KafkaKafkaUserConfigKafkaConnectSecretProvider build() {
            final var _resultValue = new KafkaKafkaUserConfigKafkaConnectSecretProvider();
            _resultValue.aws = aws;
            _resultValue.name = name;
            _resultValue.vault = vault;
            return _resultValue;
        }
    }
}
