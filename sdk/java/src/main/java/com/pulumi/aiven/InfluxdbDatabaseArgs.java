// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InfluxdbDatabaseArgs extends com.pulumi.resources.ResourceArgs {

    public static final InfluxdbDatabaseArgs Empty = new InfluxdbDatabaseArgs();

    /**
     * The name of the service database. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="databaseName", required=true)
    private Output<String> databaseName;

    /**
     * @return The name of the service database. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> databaseName() {
        return this.databaseName;
    }

    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="project", required=true)
    private Output<String> project;

    /**
     * @return The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    /**
     * The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    @Import(name="terminationProtection")
    private @Nullable Output<Boolean> terminationProtection;

    public Optional<Output<Boolean>> terminationProtection() {
        return Optional.ofNullable(this.terminationProtection);
    }

    private InfluxdbDatabaseArgs() {}

    private InfluxdbDatabaseArgs(InfluxdbDatabaseArgs $) {
        this.databaseName = $.databaseName;
        this.project = $.project;
        this.serviceName = $.serviceName;
        this.terminationProtection = $.terminationProtection;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InfluxdbDatabaseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InfluxdbDatabaseArgs $;

        public Builder() {
            $ = new InfluxdbDatabaseArgs();
        }

        public Builder(InfluxdbDatabaseArgs defaults) {
            $ = new InfluxdbDatabaseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param databaseName The name of the service database. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(Output<String> databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        /**
         * @param databaseName The name of the service database. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(String databaseName) {
            return databaseName(Output.of(databaseName));
        }

        /**
         * @param project The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param serviceName The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public Builder terminationProtection(@Nullable Output<Boolean> terminationProtection) {
            $.terminationProtection = terminationProtection;
            return this;
        }

        public Builder terminationProtection(Boolean terminationProtection) {
            return terminationProtection(Output.of(terminationProtection));
        }

        public InfluxdbDatabaseArgs build() {
            if ($.databaseName == null) {
                throw new MissingRequiredPropertyException("InfluxdbDatabaseArgs", "databaseName");
            }
            if ($.project == null) {
                throw new MissingRequiredPropertyException("InfluxdbDatabaseArgs", "project");
            }
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("InfluxdbDatabaseArgs", "serviceName");
            }
            return $;
        }
    }

}
