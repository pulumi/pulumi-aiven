// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ThanosThanosUserConfigQuery {
    /**
     * @return Set the default evaluation interval for subqueries. Default: `1m`.
     * 
     */
    private @Nullable String queryDefaultEvaluationInterval;
    /**
     * @return The maximum lookback duration for retrieving metrics during expression evaluations in PromQL. PromQL always evaluates the query for a certain timestamp, and it looks back for the given amount of time to get the latest sample. If it exceeds the maximum lookback delta, it assumes the series is stale and returns none (a gap). The lookback delta should be set to at least 2 times the slowest scrape interval. If unset, it will use the promql default of 5m. Default: `5m`.
     * 
     */
    private @Nullable String queryLookbackDelta;
    /**
     * @return The default metadata time range duration for retrieving labels through Labels and Series API when the range parameters are not specified. The zero value means the range covers the time since the beginning. Default: `0s`.
     * 
     */
    private @Nullable String queryMetadataDefaultTimeRange;
    /**
     * @return Maximum time to process a query by the query node. Default: `2m`.
     * 
     */
    private @Nullable String queryTimeout;

    private ThanosThanosUserConfigQuery() {}
    /**
     * @return Set the default evaluation interval for subqueries. Default: `1m`.
     * 
     */
    public Optional<String> queryDefaultEvaluationInterval() {
        return Optional.ofNullable(this.queryDefaultEvaluationInterval);
    }
    /**
     * @return The maximum lookback duration for retrieving metrics during expression evaluations in PromQL. PromQL always evaluates the query for a certain timestamp, and it looks back for the given amount of time to get the latest sample. If it exceeds the maximum lookback delta, it assumes the series is stale and returns none (a gap). The lookback delta should be set to at least 2 times the slowest scrape interval. If unset, it will use the promql default of 5m. Default: `5m`.
     * 
     */
    public Optional<String> queryLookbackDelta() {
        return Optional.ofNullable(this.queryLookbackDelta);
    }
    /**
     * @return The default metadata time range duration for retrieving labels through Labels and Series API when the range parameters are not specified. The zero value means the range covers the time since the beginning. Default: `0s`.
     * 
     */
    public Optional<String> queryMetadataDefaultTimeRange() {
        return Optional.ofNullable(this.queryMetadataDefaultTimeRange);
    }
    /**
     * @return Maximum time to process a query by the query node. Default: `2m`.
     * 
     */
    public Optional<String> queryTimeout() {
        return Optional.ofNullable(this.queryTimeout);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ThanosThanosUserConfigQuery defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String queryDefaultEvaluationInterval;
        private @Nullable String queryLookbackDelta;
        private @Nullable String queryMetadataDefaultTimeRange;
        private @Nullable String queryTimeout;
        public Builder() {}
        public Builder(ThanosThanosUserConfigQuery defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.queryDefaultEvaluationInterval = defaults.queryDefaultEvaluationInterval;
    	      this.queryLookbackDelta = defaults.queryLookbackDelta;
    	      this.queryMetadataDefaultTimeRange = defaults.queryMetadataDefaultTimeRange;
    	      this.queryTimeout = defaults.queryTimeout;
        }

        @CustomType.Setter
        public Builder queryDefaultEvaluationInterval(@Nullable String queryDefaultEvaluationInterval) {

            this.queryDefaultEvaluationInterval = queryDefaultEvaluationInterval;
            return this;
        }
        @CustomType.Setter
        public Builder queryLookbackDelta(@Nullable String queryLookbackDelta) {

            this.queryLookbackDelta = queryLookbackDelta;
            return this;
        }
        @CustomType.Setter
        public Builder queryMetadataDefaultTimeRange(@Nullable String queryMetadataDefaultTimeRange) {

            this.queryMetadataDefaultTimeRange = queryMetadataDefaultTimeRange;
            return this;
        }
        @CustomType.Setter
        public Builder queryTimeout(@Nullable String queryTimeout) {

            this.queryTimeout = queryTimeout;
            return this;
        }
        public ThanosThanosUserConfigQuery build() {
            final var _resultValue = new ThanosThanosUserConfigQuery();
            _resultValue.queryDefaultEvaluationInterval = queryDefaultEvaluationInterval;
            _resultValue.queryLookbackDelta = queryLookbackDelta;
            _resultValue.queryMetadataDefaultTimeRange = queryMetadataDefaultTimeRange;
            _resultValue.queryTimeout = queryTimeout;
            return _resultValue;
        }
    }
}
