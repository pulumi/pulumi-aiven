// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.aiven.outputs.GrafanaGrafanaUserConfigAuthAzuread;
import com.pulumi.aiven.outputs.GrafanaGrafanaUserConfigAuthGenericOauth;
import com.pulumi.aiven.outputs.GrafanaGrafanaUserConfigAuthGithub;
import com.pulumi.aiven.outputs.GrafanaGrafanaUserConfigAuthGitlab;
import com.pulumi.aiven.outputs.GrafanaGrafanaUserConfigAuthGoogle;
import com.pulumi.aiven.outputs.GrafanaGrafanaUserConfigDateFormats;
import com.pulumi.aiven.outputs.GrafanaGrafanaUserConfigExternalImageStorage;
import com.pulumi.aiven.outputs.GrafanaGrafanaUserConfigIpFilterObject;
import com.pulumi.aiven.outputs.GrafanaGrafanaUserConfigPrivateAccess;
import com.pulumi.aiven.outputs.GrafanaGrafanaUserConfigPrivatelinkAccess;
import com.pulumi.aiven.outputs.GrafanaGrafanaUserConfigPublicAccess;
import com.pulumi.aiven.outputs.GrafanaGrafanaUserConfigSmtpServer;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GrafanaGrafanaUserConfig {
    private @Nullable String additionalBackupRegions;
    private @Nullable Boolean alertingEnabled;
    private @Nullable String alertingErrorOrTimeout;
    private @Nullable Integer alertingMaxAnnotationsToKeep;
    private @Nullable String alertingNodataOrNullvalues;
    private @Nullable Boolean allowEmbedding;
    private @Nullable GrafanaGrafanaUserConfigAuthAzuread authAzuread;
    private @Nullable Boolean authBasicEnabled;
    private @Nullable GrafanaGrafanaUserConfigAuthGenericOauth authGenericOauth;
    private @Nullable GrafanaGrafanaUserConfigAuthGithub authGithub;
    private @Nullable GrafanaGrafanaUserConfigAuthGitlab authGitlab;
    private @Nullable GrafanaGrafanaUserConfigAuthGoogle authGoogle;
    private @Nullable String cookieSamesite;
    private @Nullable String customDomain;
    private @Nullable Boolean dashboardPreviewsEnabled;
    private @Nullable String dashboardsMinRefreshInterval;
    private @Nullable Integer dashboardsVersionsToKeep;
    private @Nullable Boolean dataproxySendUserHeader;
    private @Nullable Integer dataproxyTimeout;
    private @Nullable GrafanaGrafanaUserConfigDateFormats dateFormats;
    private @Nullable Boolean disableGravatar;
    private @Nullable Boolean editorsCanAdmin;
    private @Nullable GrafanaGrafanaUserConfigExternalImageStorage externalImageStorage;
    private @Nullable String googleAnalyticsUaId;
    private @Nullable List<GrafanaGrafanaUserConfigIpFilterObject> ipFilterObjects;
    private @Nullable List<String> ipFilterStrings;
    /**
     * @deprecated
     * This will be removed in v5.0.0 and replaced with ip_filter_string instead.
     * 
     */
    @Deprecated /* This will be removed in v5.0.0 and replaced with ip_filter_string instead. */
    private @Nullable List<String> ipFilters;
    private @Nullable Boolean metricsEnabled;
    private @Nullable GrafanaGrafanaUserConfigPrivateAccess privateAccess;
    private @Nullable GrafanaGrafanaUserConfigPrivatelinkAccess privatelinkAccess;
    private @Nullable String projectToForkFrom;
    private @Nullable GrafanaGrafanaUserConfigPublicAccess publicAccess;
    private @Nullable String recoveryBasebackupName;
    private @Nullable String serviceToForkFrom;
    private @Nullable GrafanaGrafanaUserConfigSmtpServer smtpServer;
    private @Nullable Boolean staticIps;
    private @Nullable Boolean userAutoAssignOrg;
    private @Nullable String userAutoAssignOrgRole;
    private @Nullable Boolean viewersCanEdit;

    private GrafanaGrafanaUserConfig() {}
    public Optional<String> additionalBackupRegions() {
        return Optional.ofNullable(this.additionalBackupRegions);
    }
    public Optional<Boolean> alertingEnabled() {
        return Optional.ofNullable(this.alertingEnabled);
    }
    public Optional<String> alertingErrorOrTimeout() {
        return Optional.ofNullable(this.alertingErrorOrTimeout);
    }
    public Optional<Integer> alertingMaxAnnotationsToKeep() {
        return Optional.ofNullable(this.alertingMaxAnnotationsToKeep);
    }
    public Optional<String> alertingNodataOrNullvalues() {
        return Optional.ofNullable(this.alertingNodataOrNullvalues);
    }
    public Optional<Boolean> allowEmbedding() {
        return Optional.ofNullable(this.allowEmbedding);
    }
    public Optional<GrafanaGrafanaUserConfigAuthAzuread> authAzuread() {
        return Optional.ofNullable(this.authAzuread);
    }
    public Optional<Boolean> authBasicEnabled() {
        return Optional.ofNullable(this.authBasicEnabled);
    }
    public Optional<GrafanaGrafanaUserConfigAuthGenericOauth> authGenericOauth() {
        return Optional.ofNullable(this.authGenericOauth);
    }
    public Optional<GrafanaGrafanaUserConfigAuthGithub> authGithub() {
        return Optional.ofNullable(this.authGithub);
    }
    public Optional<GrafanaGrafanaUserConfigAuthGitlab> authGitlab() {
        return Optional.ofNullable(this.authGitlab);
    }
    public Optional<GrafanaGrafanaUserConfigAuthGoogle> authGoogle() {
        return Optional.ofNullable(this.authGoogle);
    }
    public Optional<String> cookieSamesite() {
        return Optional.ofNullable(this.cookieSamesite);
    }
    public Optional<String> customDomain() {
        return Optional.ofNullable(this.customDomain);
    }
    public Optional<Boolean> dashboardPreviewsEnabled() {
        return Optional.ofNullable(this.dashboardPreviewsEnabled);
    }
    public Optional<String> dashboardsMinRefreshInterval() {
        return Optional.ofNullable(this.dashboardsMinRefreshInterval);
    }
    public Optional<Integer> dashboardsVersionsToKeep() {
        return Optional.ofNullable(this.dashboardsVersionsToKeep);
    }
    public Optional<Boolean> dataproxySendUserHeader() {
        return Optional.ofNullable(this.dataproxySendUserHeader);
    }
    public Optional<Integer> dataproxyTimeout() {
        return Optional.ofNullable(this.dataproxyTimeout);
    }
    public Optional<GrafanaGrafanaUserConfigDateFormats> dateFormats() {
        return Optional.ofNullable(this.dateFormats);
    }
    public Optional<Boolean> disableGravatar() {
        return Optional.ofNullable(this.disableGravatar);
    }
    public Optional<Boolean> editorsCanAdmin() {
        return Optional.ofNullable(this.editorsCanAdmin);
    }
    public Optional<GrafanaGrafanaUserConfigExternalImageStorage> externalImageStorage() {
        return Optional.ofNullable(this.externalImageStorage);
    }
    public Optional<String> googleAnalyticsUaId() {
        return Optional.ofNullable(this.googleAnalyticsUaId);
    }
    public List<GrafanaGrafanaUserConfigIpFilterObject> ipFilterObjects() {
        return this.ipFilterObjects == null ? List.of() : this.ipFilterObjects;
    }
    public List<String> ipFilterStrings() {
        return this.ipFilterStrings == null ? List.of() : this.ipFilterStrings;
    }
    /**
     * @deprecated
     * This will be removed in v5.0.0 and replaced with ip_filter_string instead.
     * 
     */
    @Deprecated /* This will be removed in v5.0.0 and replaced with ip_filter_string instead. */
    public List<String> ipFilters() {
        return this.ipFilters == null ? List.of() : this.ipFilters;
    }
    public Optional<Boolean> metricsEnabled() {
        return Optional.ofNullable(this.metricsEnabled);
    }
    public Optional<GrafanaGrafanaUserConfigPrivateAccess> privateAccess() {
        return Optional.ofNullable(this.privateAccess);
    }
    public Optional<GrafanaGrafanaUserConfigPrivatelinkAccess> privatelinkAccess() {
        return Optional.ofNullable(this.privatelinkAccess);
    }
    public Optional<String> projectToForkFrom() {
        return Optional.ofNullable(this.projectToForkFrom);
    }
    public Optional<GrafanaGrafanaUserConfigPublicAccess> publicAccess() {
        return Optional.ofNullable(this.publicAccess);
    }
    public Optional<String> recoveryBasebackupName() {
        return Optional.ofNullable(this.recoveryBasebackupName);
    }
    public Optional<String> serviceToForkFrom() {
        return Optional.ofNullable(this.serviceToForkFrom);
    }
    public Optional<GrafanaGrafanaUserConfigSmtpServer> smtpServer() {
        return Optional.ofNullable(this.smtpServer);
    }
    public Optional<Boolean> staticIps() {
        return Optional.ofNullable(this.staticIps);
    }
    public Optional<Boolean> userAutoAssignOrg() {
        return Optional.ofNullable(this.userAutoAssignOrg);
    }
    public Optional<String> userAutoAssignOrgRole() {
        return Optional.ofNullable(this.userAutoAssignOrgRole);
    }
    public Optional<Boolean> viewersCanEdit() {
        return Optional.ofNullable(this.viewersCanEdit);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GrafanaGrafanaUserConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String additionalBackupRegions;
        private @Nullable Boolean alertingEnabled;
        private @Nullable String alertingErrorOrTimeout;
        private @Nullable Integer alertingMaxAnnotationsToKeep;
        private @Nullable String alertingNodataOrNullvalues;
        private @Nullable Boolean allowEmbedding;
        private @Nullable GrafanaGrafanaUserConfigAuthAzuread authAzuread;
        private @Nullable Boolean authBasicEnabled;
        private @Nullable GrafanaGrafanaUserConfigAuthGenericOauth authGenericOauth;
        private @Nullable GrafanaGrafanaUserConfigAuthGithub authGithub;
        private @Nullable GrafanaGrafanaUserConfigAuthGitlab authGitlab;
        private @Nullable GrafanaGrafanaUserConfigAuthGoogle authGoogle;
        private @Nullable String cookieSamesite;
        private @Nullable String customDomain;
        private @Nullable Boolean dashboardPreviewsEnabled;
        private @Nullable String dashboardsMinRefreshInterval;
        private @Nullable Integer dashboardsVersionsToKeep;
        private @Nullable Boolean dataproxySendUserHeader;
        private @Nullable Integer dataproxyTimeout;
        private @Nullable GrafanaGrafanaUserConfigDateFormats dateFormats;
        private @Nullable Boolean disableGravatar;
        private @Nullable Boolean editorsCanAdmin;
        private @Nullable GrafanaGrafanaUserConfigExternalImageStorage externalImageStorage;
        private @Nullable String googleAnalyticsUaId;
        private @Nullable List<GrafanaGrafanaUserConfigIpFilterObject> ipFilterObjects;
        private @Nullable List<String> ipFilterStrings;
        private @Nullable List<String> ipFilters;
        private @Nullable Boolean metricsEnabled;
        private @Nullable GrafanaGrafanaUserConfigPrivateAccess privateAccess;
        private @Nullable GrafanaGrafanaUserConfigPrivatelinkAccess privatelinkAccess;
        private @Nullable String projectToForkFrom;
        private @Nullable GrafanaGrafanaUserConfigPublicAccess publicAccess;
        private @Nullable String recoveryBasebackupName;
        private @Nullable String serviceToForkFrom;
        private @Nullable GrafanaGrafanaUserConfigSmtpServer smtpServer;
        private @Nullable Boolean staticIps;
        private @Nullable Boolean userAutoAssignOrg;
        private @Nullable String userAutoAssignOrgRole;
        private @Nullable Boolean viewersCanEdit;
        public Builder() {}
        public Builder(GrafanaGrafanaUserConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalBackupRegions = defaults.additionalBackupRegions;
    	      this.alertingEnabled = defaults.alertingEnabled;
    	      this.alertingErrorOrTimeout = defaults.alertingErrorOrTimeout;
    	      this.alertingMaxAnnotationsToKeep = defaults.alertingMaxAnnotationsToKeep;
    	      this.alertingNodataOrNullvalues = defaults.alertingNodataOrNullvalues;
    	      this.allowEmbedding = defaults.allowEmbedding;
    	      this.authAzuread = defaults.authAzuread;
    	      this.authBasicEnabled = defaults.authBasicEnabled;
    	      this.authGenericOauth = defaults.authGenericOauth;
    	      this.authGithub = defaults.authGithub;
    	      this.authGitlab = defaults.authGitlab;
    	      this.authGoogle = defaults.authGoogle;
    	      this.cookieSamesite = defaults.cookieSamesite;
    	      this.customDomain = defaults.customDomain;
    	      this.dashboardPreviewsEnabled = defaults.dashboardPreviewsEnabled;
    	      this.dashboardsMinRefreshInterval = defaults.dashboardsMinRefreshInterval;
    	      this.dashboardsVersionsToKeep = defaults.dashboardsVersionsToKeep;
    	      this.dataproxySendUserHeader = defaults.dataproxySendUserHeader;
    	      this.dataproxyTimeout = defaults.dataproxyTimeout;
    	      this.dateFormats = defaults.dateFormats;
    	      this.disableGravatar = defaults.disableGravatar;
    	      this.editorsCanAdmin = defaults.editorsCanAdmin;
    	      this.externalImageStorage = defaults.externalImageStorage;
    	      this.googleAnalyticsUaId = defaults.googleAnalyticsUaId;
    	      this.ipFilterObjects = defaults.ipFilterObjects;
    	      this.ipFilterStrings = defaults.ipFilterStrings;
    	      this.ipFilters = defaults.ipFilters;
    	      this.metricsEnabled = defaults.metricsEnabled;
    	      this.privateAccess = defaults.privateAccess;
    	      this.privatelinkAccess = defaults.privatelinkAccess;
    	      this.projectToForkFrom = defaults.projectToForkFrom;
    	      this.publicAccess = defaults.publicAccess;
    	      this.recoveryBasebackupName = defaults.recoveryBasebackupName;
    	      this.serviceToForkFrom = defaults.serviceToForkFrom;
    	      this.smtpServer = defaults.smtpServer;
    	      this.staticIps = defaults.staticIps;
    	      this.userAutoAssignOrg = defaults.userAutoAssignOrg;
    	      this.userAutoAssignOrgRole = defaults.userAutoAssignOrgRole;
    	      this.viewersCanEdit = defaults.viewersCanEdit;
        }

        @CustomType.Setter
        public Builder additionalBackupRegions(@Nullable String additionalBackupRegions) {
            this.additionalBackupRegions = additionalBackupRegions;
            return this;
        }
        @CustomType.Setter
        public Builder alertingEnabled(@Nullable Boolean alertingEnabled) {
            this.alertingEnabled = alertingEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder alertingErrorOrTimeout(@Nullable String alertingErrorOrTimeout) {
            this.alertingErrorOrTimeout = alertingErrorOrTimeout;
            return this;
        }
        @CustomType.Setter
        public Builder alertingMaxAnnotationsToKeep(@Nullable Integer alertingMaxAnnotationsToKeep) {
            this.alertingMaxAnnotationsToKeep = alertingMaxAnnotationsToKeep;
            return this;
        }
        @CustomType.Setter
        public Builder alertingNodataOrNullvalues(@Nullable String alertingNodataOrNullvalues) {
            this.alertingNodataOrNullvalues = alertingNodataOrNullvalues;
            return this;
        }
        @CustomType.Setter
        public Builder allowEmbedding(@Nullable Boolean allowEmbedding) {
            this.allowEmbedding = allowEmbedding;
            return this;
        }
        @CustomType.Setter
        public Builder authAzuread(@Nullable GrafanaGrafanaUserConfigAuthAzuread authAzuread) {
            this.authAzuread = authAzuread;
            return this;
        }
        @CustomType.Setter
        public Builder authBasicEnabled(@Nullable Boolean authBasicEnabled) {
            this.authBasicEnabled = authBasicEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder authGenericOauth(@Nullable GrafanaGrafanaUserConfigAuthGenericOauth authGenericOauth) {
            this.authGenericOauth = authGenericOauth;
            return this;
        }
        @CustomType.Setter
        public Builder authGithub(@Nullable GrafanaGrafanaUserConfigAuthGithub authGithub) {
            this.authGithub = authGithub;
            return this;
        }
        @CustomType.Setter
        public Builder authGitlab(@Nullable GrafanaGrafanaUserConfigAuthGitlab authGitlab) {
            this.authGitlab = authGitlab;
            return this;
        }
        @CustomType.Setter
        public Builder authGoogle(@Nullable GrafanaGrafanaUserConfigAuthGoogle authGoogle) {
            this.authGoogle = authGoogle;
            return this;
        }
        @CustomType.Setter
        public Builder cookieSamesite(@Nullable String cookieSamesite) {
            this.cookieSamesite = cookieSamesite;
            return this;
        }
        @CustomType.Setter
        public Builder customDomain(@Nullable String customDomain) {
            this.customDomain = customDomain;
            return this;
        }
        @CustomType.Setter
        public Builder dashboardPreviewsEnabled(@Nullable Boolean dashboardPreviewsEnabled) {
            this.dashboardPreviewsEnabled = dashboardPreviewsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder dashboardsMinRefreshInterval(@Nullable String dashboardsMinRefreshInterval) {
            this.dashboardsMinRefreshInterval = dashboardsMinRefreshInterval;
            return this;
        }
        @CustomType.Setter
        public Builder dashboardsVersionsToKeep(@Nullable Integer dashboardsVersionsToKeep) {
            this.dashboardsVersionsToKeep = dashboardsVersionsToKeep;
            return this;
        }
        @CustomType.Setter
        public Builder dataproxySendUserHeader(@Nullable Boolean dataproxySendUserHeader) {
            this.dataproxySendUserHeader = dataproxySendUserHeader;
            return this;
        }
        @CustomType.Setter
        public Builder dataproxyTimeout(@Nullable Integer dataproxyTimeout) {
            this.dataproxyTimeout = dataproxyTimeout;
            return this;
        }
        @CustomType.Setter
        public Builder dateFormats(@Nullable GrafanaGrafanaUserConfigDateFormats dateFormats) {
            this.dateFormats = dateFormats;
            return this;
        }
        @CustomType.Setter
        public Builder disableGravatar(@Nullable Boolean disableGravatar) {
            this.disableGravatar = disableGravatar;
            return this;
        }
        @CustomType.Setter
        public Builder editorsCanAdmin(@Nullable Boolean editorsCanAdmin) {
            this.editorsCanAdmin = editorsCanAdmin;
            return this;
        }
        @CustomType.Setter
        public Builder externalImageStorage(@Nullable GrafanaGrafanaUserConfigExternalImageStorage externalImageStorage) {
            this.externalImageStorage = externalImageStorage;
            return this;
        }
        @CustomType.Setter
        public Builder googleAnalyticsUaId(@Nullable String googleAnalyticsUaId) {
            this.googleAnalyticsUaId = googleAnalyticsUaId;
            return this;
        }
        @CustomType.Setter
        public Builder ipFilterObjects(@Nullable List<GrafanaGrafanaUserConfigIpFilterObject> ipFilterObjects) {
            this.ipFilterObjects = ipFilterObjects;
            return this;
        }
        public Builder ipFilterObjects(GrafanaGrafanaUserConfigIpFilterObject... ipFilterObjects) {
            return ipFilterObjects(List.of(ipFilterObjects));
        }
        @CustomType.Setter
        public Builder ipFilterStrings(@Nullable List<String> ipFilterStrings) {
            this.ipFilterStrings = ipFilterStrings;
            return this;
        }
        public Builder ipFilterStrings(String... ipFilterStrings) {
            return ipFilterStrings(List.of(ipFilterStrings));
        }
        @CustomType.Setter
        public Builder ipFilters(@Nullable List<String> ipFilters) {
            this.ipFilters = ipFilters;
            return this;
        }
        public Builder ipFilters(String... ipFilters) {
            return ipFilters(List.of(ipFilters));
        }
        @CustomType.Setter
        public Builder metricsEnabled(@Nullable Boolean metricsEnabled) {
            this.metricsEnabled = metricsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder privateAccess(@Nullable GrafanaGrafanaUserConfigPrivateAccess privateAccess) {
            this.privateAccess = privateAccess;
            return this;
        }
        @CustomType.Setter
        public Builder privatelinkAccess(@Nullable GrafanaGrafanaUserConfigPrivatelinkAccess privatelinkAccess) {
            this.privatelinkAccess = privatelinkAccess;
            return this;
        }
        @CustomType.Setter
        public Builder projectToForkFrom(@Nullable String projectToForkFrom) {
            this.projectToForkFrom = projectToForkFrom;
            return this;
        }
        @CustomType.Setter
        public Builder publicAccess(@Nullable GrafanaGrafanaUserConfigPublicAccess publicAccess) {
            this.publicAccess = publicAccess;
            return this;
        }
        @CustomType.Setter
        public Builder recoveryBasebackupName(@Nullable String recoveryBasebackupName) {
            this.recoveryBasebackupName = recoveryBasebackupName;
            return this;
        }
        @CustomType.Setter
        public Builder serviceToForkFrom(@Nullable String serviceToForkFrom) {
            this.serviceToForkFrom = serviceToForkFrom;
            return this;
        }
        @CustomType.Setter
        public Builder smtpServer(@Nullable GrafanaGrafanaUserConfigSmtpServer smtpServer) {
            this.smtpServer = smtpServer;
            return this;
        }
        @CustomType.Setter
        public Builder staticIps(@Nullable Boolean staticIps) {
            this.staticIps = staticIps;
            return this;
        }
        @CustomType.Setter
        public Builder userAutoAssignOrg(@Nullable Boolean userAutoAssignOrg) {
            this.userAutoAssignOrg = userAutoAssignOrg;
            return this;
        }
        @CustomType.Setter
        public Builder userAutoAssignOrgRole(@Nullable String userAutoAssignOrgRole) {
            this.userAutoAssignOrgRole = userAutoAssignOrgRole;
            return this;
        }
        @CustomType.Setter
        public Builder viewersCanEdit(@Nullable Boolean viewersCanEdit) {
            this.viewersCanEdit = viewersCanEdit;
            return this;
        }
        public GrafanaGrafanaUserConfig build() {
            final var o = new GrafanaGrafanaUserConfig();
            o.additionalBackupRegions = additionalBackupRegions;
            o.alertingEnabled = alertingEnabled;
            o.alertingErrorOrTimeout = alertingErrorOrTimeout;
            o.alertingMaxAnnotationsToKeep = alertingMaxAnnotationsToKeep;
            o.alertingNodataOrNullvalues = alertingNodataOrNullvalues;
            o.allowEmbedding = allowEmbedding;
            o.authAzuread = authAzuread;
            o.authBasicEnabled = authBasicEnabled;
            o.authGenericOauth = authGenericOauth;
            o.authGithub = authGithub;
            o.authGitlab = authGitlab;
            o.authGoogle = authGoogle;
            o.cookieSamesite = cookieSamesite;
            o.customDomain = customDomain;
            o.dashboardPreviewsEnabled = dashboardPreviewsEnabled;
            o.dashboardsMinRefreshInterval = dashboardsMinRefreshInterval;
            o.dashboardsVersionsToKeep = dashboardsVersionsToKeep;
            o.dataproxySendUserHeader = dataproxySendUserHeader;
            o.dataproxyTimeout = dataproxyTimeout;
            o.dateFormats = dateFormats;
            o.disableGravatar = disableGravatar;
            o.editorsCanAdmin = editorsCanAdmin;
            o.externalImageStorage = externalImageStorage;
            o.googleAnalyticsUaId = googleAnalyticsUaId;
            o.ipFilterObjects = ipFilterObjects;
            o.ipFilterStrings = ipFilterStrings;
            o.ipFilters = ipFilters;
            o.metricsEnabled = metricsEnabled;
            o.privateAccess = privateAccess;
            o.privatelinkAccess = privatelinkAccess;
            o.projectToForkFrom = projectToForkFrom;
            o.publicAccess = publicAccess;
            o.recoveryBasebackupName = recoveryBasebackupName;
            o.serviceToForkFrom = serviceToForkFrom;
            o.smtpServer = smtpServer;
            o.staticIps = staticIps;
            o.userAutoAssignOrg = userAutoAssignOrg;
            o.userAutoAssignOrgRole = userAutoAssignOrgRole;
            o.viewersCanEdit = viewersCanEdit;
            return o;
        }
    }
}
