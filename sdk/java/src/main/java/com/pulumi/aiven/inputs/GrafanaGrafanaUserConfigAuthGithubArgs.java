// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GrafanaGrafanaUserConfigAuthGithubArgs extends com.pulumi.resources.ResourceArgs {

    public static final GrafanaGrafanaUserConfigAuthGithubArgs Empty = new GrafanaGrafanaUserConfigAuthGithubArgs();

    @Import(name="allowSignUp")
    private @Nullable Output<Boolean> allowSignUp;

    public Optional<Output<Boolean>> allowSignUp() {
        return Optional.ofNullable(this.allowSignUp);
    }

    @Import(name="allowedOrganizations")
    private @Nullable Output<List<String>> allowedOrganizations;

    public Optional<Output<List<String>>> allowedOrganizations() {
        return Optional.ofNullable(this.allowedOrganizations);
    }

    @Import(name="autoLogin")
    private @Nullable Output<Boolean> autoLogin;

    public Optional<Output<Boolean>> autoLogin() {
        return Optional.ofNullable(this.autoLogin);
    }

    @Import(name="clientId", required=true)
    private Output<String> clientId;

    public Output<String> clientId() {
        return this.clientId;
    }

    @Import(name="clientSecret", required=true)
    private Output<String> clientSecret;

    public Output<String> clientSecret() {
        return this.clientSecret;
    }

    @Import(name="skipOrgRoleSync")
    private @Nullable Output<Boolean> skipOrgRoleSync;

    public Optional<Output<Boolean>> skipOrgRoleSync() {
        return Optional.ofNullable(this.skipOrgRoleSync);
    }

    @Import(name="teamIds")
    private @Nullable Output<List<Integer>> teamIds;

    public Optional<Output<List<Integer>>> teamIds() {
        return Optional.ofNullable(this.teamIds);
    }

    private GrafanaGrafanaUserConfigAuthGithubArgs() {}

    private GrafanaGrafanaUserConfigAuthGithubArgs(GrafanaGrafanaUserConfigAuthGithubArgs $) {
        this.allowSignUp = $.allowSignUp;
        this.allowedOrganizations = $.allowedOrganizations;
        this.autoLogin = $.autoLogin;
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.skipOrgRoleSync = $.skipOrgRoleSync;
        this.teamIds = $.teamIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GrafanaGrafanaUserConfigAuthGithubArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GrafanaGrafanaUserConfigAuthGithubArgs $;

        public Builder() {
            $ = new GrafanaGrafanaUserConfigAuthGithubArgs();
        }

        public Builder(GrafanaGrafanaUserConfigAuthGithubArgs defaults) {
            $ = new GrafanaGrafanaUserConfigAuthGithubArgs(Objects.requireNonNull(defaults));
        }

        public Builder allowSignUp(@Nullable Output<Boolean> allowSignUp) {
            $.allowSignUp = allowSignUp;
            return this;
        }

        public Builder allowSignUp(Boolean allowSignUp) {
            return allowSignUp(Output.of(allowSignUp));
        }

        public Builder allowedOrganizations(@Nullable Output<List<String>> allowedOrganizations) {
            $.allowedOrganizations = allowedOrganizations;
            return this;
        }

        public Builder allowedOrganizations(List<String> allowedOrganizations) {
            return allowedOrganizations(Output.of(allowedOrganizations));
        }

        public Builder allowedOrganizations(String... allowedOrganizations) {
            return allowedOrganizations(List.of(allowedOrganizations));
        }

        public Builder autoLogin(@Nullable Output<Boolean> autoLogin) {
            $.autoLogin = autoLogin;
            return this;
        }

        public Builder autoLogin(Boolean autoLogin) {
            return autoLogin(Output.of(autoLogin));
        }

        public Builder clientId(Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        public Builder clientSecret(Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        public Builder skipOrgRoleSync(@Nullable Output<Boolean> skipOrgRoleSync) {
            $.skipOrgRoleSync = skipOrgRoleSync;
            return this;
        }

        public Builder skipOrgRoleSync(Boolean skipOrgRoleSync) {
            return skipOrgRoleSync(Output.of(skipOrgRoleSync));
        }

        public Builder teamIds(@Nullable Output<List<Integer>> teamIds) {
            $.teamIds = teamIds;
            return this;
        }

        public Builder teamIds(List<Integer> teamIds) {
            return teamIds(Output.of(teamIds));
        }

        public Builder teamIds(Integer... teamIds) {
            return teamIds(List.of(teamIds));
        }

        public GrafanaGrafanaUserConfigAuthGithubArgs build() {
            if ($.clientId == null) {
                throw new MissingRequiredPropertyException("GrafanaGrafanaUserConfigAuthGithubArgs", "clientId");
            }
            if ($.clientSecret == null) {
                throw new MissingRequiredPropertyException("GrafanaGrafanaUserConfigAuthGithubArgs", "clientSecret");
            }
            return $;
        }
    }

}
