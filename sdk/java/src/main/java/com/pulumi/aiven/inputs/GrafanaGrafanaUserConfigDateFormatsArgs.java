// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GrafanaGrafanaUserConfigDateFormatsArgs extends com.pulumi.resources.ResourceArgs {

    public static final GrafanaGrafanaUserConfigDateFormatsArgs Empty = new GrafanaGrafanaUserConfigDateFormatsArgs();

    @Import(name="defaultTimezone")
    private @Nullable Output<String> defaultTimezone;

    public Optional<Output<String>> defaultTimezone() {
        return Optional.ofNullable(this.defaultTimezone);
    }

    @Import(name="fullDate")
    private @Nullable Output<String> fullDate;

    public Optional<Output<String>> fullDate() {
        return Optional.ofNullable(this.fullDate);
    }

    @Import(name="intervalDay")
    private @Nullable Output<String> intervalDay;

    public Optional<Output<String>> intervalDay() {
        return Optional.ofNullable(this.intervalDay);
    }

    @Import(name="intervalHour")
    private @Nullable Output<String> intervalHour;

    public Optional<Output<String>> intervalHour() {
        return Optional.ofNullable(this.intervalHour);
    }

    @Import(name="intervalMinute")
    private @Nullable Output<String> intervalMinute;

    public Optional<Output<String>> intervalMinute() {
        return Optional.ofNullable(this.intervalMinute);
    }

    @Import(name="intervalMonth")
    private @Nullable Output<String> intervalMonth;

    public Optional<Output<String>> intervalMonth() {
        return Optional.ofNullable(this.intervalMonth);
    }

    @Import(name="intervalSecond")
    private @Nullable Output<String> intervalSecond;

    public Optional<Output<String>> intervalSecond() {
        return Optional.ofNullable(this.intervalSecond);
    }

    @Import(name="intervalYear")
    private @Nullable Output<String> intervalYear;

    public Optional<Output<String>> intervalYear() {
        return Optional.ofNullable(this.intervalYear);
    }

    private GrafanaGrafanaUserConfigDateFormatsArgs() {}

    private GrafanaGrafanaUserConfigDateFormatsArgs(GrafanaGrafanaUserConfigDateFormatsArgs $) {
        this.defaultTimezone = $.defaultTimezone;
        this.fullDate = $.fullDate;
        this.intervalDay = $.intervalDay;
        this.intervalHour = $.intervalHour;
        this.intervalMinute = $.intervalMinute;
        this.intervalMonth = $.intervalMonth;
        this.intervalSecond = $.intervalSecond;
        this.intervalYear = $.intervalYear;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GrafanaGrafanaUserConfigDateFormatsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GrafanaGrafanaUserConfigDateFormatsArgs $;

        public Builder() {
            $ = new GrafanaGrafanaUserConfigDateFormatsArgs();
        }

        public Builder(GrafanaGrafanaUserConfigDateFormatsArgs defaults) {
            $ = new GrafanaGrafanaUserConfigDateFormatsArgs(Objects.requireNonNull(defaults));
        }

        public Builder defaultTimezone(@Nullable Output<String> defaultTimezone) {
            $.defaultTimezone = defaultTimezone;
            return this;
        }

        public Builder defaultTimezone(String defaultTimezone) {
            return defaultTimezone(Output.of(defaultTimezone));
        }

        public Builder fullDate(@Nullable Output<String> fullDate) {
            $.fullDate = fullDate;
            return this;
        }

        public Builder fullDate(String fullDate) {
            return fullDate(Output.of(fullDate));
        }

        public Builder intervalDay(@Nullable Output<String> intervalDay) {
            $.intervalDay = intervalDay;
            return this;
        }

        public Builder intervalDay(String intervalDay) {
            return intervalDay(Output.of(intervalDay));
        }

        public Builder intervalHour(@Nullable Output<String> intervalHour) {
            $.intervalHour = intervalHour;
            return this;
        }

        public Builder intervalHour(String intervalHour) {
            return intervalHour(Output.of(intervalHour));
        }

        public Builder intervalMinute(@Nullable Output<String> intervalMinute) {
            $.intervalMinute = intervalMinute;
            return this;
        }

        public Builder intervalMinute(String intervalMinute) {
            return intervalMinute(Output.of(intervalMinute));
        }

        public Builder intervalMonth(@Nullable Output<String> intervalMonth) {
            $.intervalMonth = intervalMonth;
            return this;
        }

        public Builder intervalMonth(String intervalMonth) {
            return intervalMonth(Output.of(intervalMonth));
        }

        public Builder intervalSecond(@Nullable Output<String> intervalSecond) {
            $.intervalSecond = intervalSecond;
            return this;
        }

        public Builder intervalSecond(String intervalSecond) {
            return intervalSecond(Output.of(intervalSecond));
        }

        public Builder intervalYear(@Nullable Output<String> intervalYear) {
            $.intervalYear = intervalYear;
            return this;
        }

        public Builder intervalYear(String intervalYear) {
            return intervalYear(Output.of(intervalYear));
        }

        public GrafanaGrafanaUserConfigDateFormatsArgs build() {
            return $;
        }
    }

}
