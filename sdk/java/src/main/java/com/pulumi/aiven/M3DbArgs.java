// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.aiven.inputs.M3DbM3dbUserConfigArgs;
import com.pulumi.aiven.inputs.M3DbServiceIntegrationArgs;
import com.pulumi.aiven.inputs.M3DbTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class M3DbArgs extends com.pulumi.resources.ResourceArgs {

    public static final M3DbArgs Empty = new M3DbArgs();

    /**
     * Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is
     * created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud
     * provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These
     * are documented on each Cloud provider&#39;s own support articles, like [here for
     * Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for
     * AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).
     * 
     */
    @Import(name="cloudName")
    private @Nullable Output<String> cloudName;

    /**
     * @return Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is
     * created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud
     * provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These
     * are documented on each Cloud provider&#39;s own support articles, like [here for
     * Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for
     * AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).
     * 
     */
    public Optional<Output<String>> cloudName() {
        return Optional.ofNullable(this.cloudName);
    }

    /**
     * The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing
     * will result in the service rebalancing.
     * 
     */
    @Import(name="diskSpace")
    private @Nullable Output<String> diskSpace;

    /**
     * @return The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing
     * will result in the service rebalancing.
     * 
     */
    public Optional<Output<String>> diskSpace() {
        return Optional.ofNullable(this.diskSpace);
    }

    /**
     * M3db user configurable settings
     * 
     */
    @Import(name="m3dbUserConfig")
    private @Nullable Output<M3DbM3dbUserConfigArgs> m3dbUserConfig;

    /**
     * @return M3db user configurable settings
     * 
     */
    public Optional<Output<M3DbM3dbUserConfigArgs>> m3dbUserConfig() {
        return Optional.ofNullable(this.m3dbUserConfig);
    }

    /**
     * Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
     * 
     */
    @Import(name="maintenanceWindowDow")
    private @Nullable Output<String> maintenanceWindowDow;

    /**
     * @return Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
     * 
     */
    public Optional<Output<String>> maintenanceWindowDow() {
        return Optional.ofNullable(this.maintenanceWindowDow);
    }

    /**
     * Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
     * 
     */
    @Import(name="maintenanceWindowTime")
    private @Nullable Output<String> maintenanceWindowTime;

    /**
     * @return Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
     * 
     */
    public Optional<Output<String>> maintenanceWindowTime() {
        return Optional.ofNullable(this.maintenanceWindowTime);
    }

    /**
     * Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there
     * are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to
     * store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are
     * `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also
     * other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available
     * options can be seem from the [Aiven pricing page](https://aiven.io/pricing).
     * 
     */
    @Import(name="plan")
    private @Nullable Output<String> plan;

    /**
     * @return Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there
     * are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to
     * store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are
     * `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also
     * other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available
     * options can be seem from the [Aiven pricing page](https://aiven.io/pricing).
     * 
     */
    public Optional<Output<String>> plan() {
        return Optional.ofNullable(this.plan);
    }

    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
     * reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    @Import(name="project", required=true)
    private Output<String> project;

    /**
     * @return Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
     * reference. This property cannot be changed, doing so forces recreation of the resource.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    /**
     * Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the
     * value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region
     * as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new
     * servers so the operation can take significant amount of time to complete if the service has a lot of data.
     * 
     */
    @Import(name="projectVpcId")
    private @Nullable Output<String> projectVpcId;

    /**
     * @return Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the
     * value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region
     * as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new
     * servers so the operation can take significant amount of time to complete if the service has a lot of data.
     * 
     */
    public Optional<Output<String>> projectVpcId() {
        return Optional.ofNullable(this.projectVpcId);
    }

    /**
     * Service integrations to specify when creating a service. Not applied after initial service creation
     * 
     */
    @Import(name="serviceIntegrations")
    private @Nullable Output<List<M3DbServiceIntegrationArgs>> serviceIntegrations;

    /**
     * @return Service integrations to specify when creating a service. Not applied after initial service creation
     * 
     */
    public Optional<Output<List<M3DbServiceIntegrationArgs>>> serviceIntegrations() {
        return Optional.ofNullable(this.serviceIntegrations);
    }

    /**
     * Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the
     * service so name should be picked based on intended service usage rather than current attributes.
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the
     * service so name should be picked based on intended service usage rather than current attributes.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    /**
     * Static IPs that are going to be associated with this service. Please assign a value using the &#39;toset&#39; function. Once a
     * static ip resource is in the &#39;assigned&#39; state it cannot be unbound from the node again
     * 
     */
    @Import(name="staticIps")
    private @Nullable Output<List<String>> staticIps;

    /**
     * @return Static IPs that are going to be associated with this service. Please assign a value using the &#39;toset&#39; function. Once a
     * static ip resource is in the &#39;assigned&#39; state it cannot be unbound from the node again
     * 
     */
    public Optional<Output<List<String>>> staticIps() {
        return Optional.ofNullable(this.staticIps);
    }

    /**
     * Tags are key-value pairs that allow you to categorize services.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<M3DbTagArgs>> tags;

    /**
     * @return Tags are key-value pairs that allow you to categorize services.
     * 
     */
    public Optional<Output<List<M3DbTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent
     * unintentional service deletion. This does not shield against deleting databases or topics but for services with backups
     * much of the content can at least be restored from backup in case accidental deletion is done.
     * 
     */
    @Import(name="terminationProtection")
    private @Nullable Output<Boolean> terminationProtection;

    /**
     * @return Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent
     * unintentional service deletion. This does not shield against deleting databases or topics but for services with backups
     * much of the content can at least be restored from backup in case accidental deletion is done.
     * 
     */
    public Optional<Output<Boolean>> terminationProtection() {
        return Optional.ofNullable(this.terminationProtection);
    }

    private M3DbArgs() {}

    private M3DbArgs(M3DbArgs $) {
        this.cloudName = $.cloudName;
        this.diskSpace = $.diskSpace;
        this.m3dbUserConfig = $.m3dbUserConfig;
        this.maintenanceWindowDow = $.maintenanceWindowDow;
        this.maintenanceWindowTime = $.maintenanceWindowTime;
        this.plan = $.plan;
        this.project = $.project;
        this.projectVpcId = $.projectVpcId;
        this.serviceIntegrations = $.serviceIntegrations;
        this.serviceName = $.serviceName;
        this.staticIps = $.staticIps;
        this.tags = $.tags;
        this.terminationProtection = $.terminationProtection;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(M3DbArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private M3DbArgs $;

        public Builder() {
            $ = new M3DbArgs();
        }

        public Builder(M3DbArgs defaults) {
            $ = new M3DbArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudName Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is
         * created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud
         * provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These
         * are documented on each Cloud provider&#39;s own support articles, like [here for
         * Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for
         * AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).
         * 
         * @return builder
         * 
         */
        public Builder cloudName(@Nullable Output<String> cloudName) {
            $.cloudName = cloudName;
            return this;
        }

        /**
         * @param cloudName Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is
         * created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud
         * provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These
         * are documented on each Cloud provider&#39;s own support articles, like [here for
         * Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for
         * AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).
         * 
         * @return builder
         * 
         */
        public Builder cloudName(String cloudName) {
            return cloudName(Output.of(cloudName));
        }

        /**
         * @param diskSpace The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing
         * will result in the service rebalancing.
         * 
         * @return builder
         * 
         */
        public Builder diskSpace(@Nullable Output<String> diskSpace) {
            $.diskSpace = diskSpace;
            return this;
        }

        /**
         * @param diskSpace The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing
         * will result in the service rebalancing.
         * 
         * @return builder
         * 
         */
        public Builder diskSpace(String diskSpace) {
            return diskSpace(Output.of(diskSpace));
        }

        /**
         * @param m3dbUserConfig M3db user configurable settings
         * 
         * @return builder
         * 
         */
        public Builder m3dbUserConfig(@Nullable Output<M3DbM3dbUserConfigArgs> m3dbUserConfig) {
            $.m3dbUserConfig = m3dbUserConfig;
            return this;
        }

        /**
         * @param m3dbUserConfig M3db user configurable settings
         * 
         * @return builder
         * 
         */
        public Builder m3dbUserConfig(M3DbM3dbUserConfigArgs m3dbUserConfig) {
            return m3dbUserConfig(Output.of(m3dbUserConfig));
        }

        /**
         * @param maintenanceWindowDow Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindowDow(@Nullable Output<String> maintenanceWindowDow) {
            $.maintenanceWindowDow = maintenanceWindowDow;
            return this;
        }

        /**
         * @param maintenanceWindowDow Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindowDow(String maintenanceWindowDow) {
            return maintenanceWindowDow(Output.of(maintenanceWindowDow));
        }

        /**
         * @param maintenanceWindowTime Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindowTime(@Nullable Output<String> maintenanceWindowTime) {
            $.maintenanceWindowTime = maintenanceWindowTime;
            return this;
        }

        /**
         * @param maintenanceWindowTime Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindowTime(String maintenanceWindowTime) {
            return maintenanceWindowTime(Output.of(maintenanceWindowTime));
        }

        /**
         * @param plan Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there
         * are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to
         * store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are
         * `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also
         * other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available
         * options can be seem from the [Aiven pricing page](https://aiven.io/pricing).
         * 
         * @return builder
         * 
         */
        public Builder plan(@Nullable Output<String> plan) {
            $.plan = plan;
            return this;
        }

        /**
         * @param plan Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there
         * are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to
         * store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are
         * `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also
         * other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available
         * options can be seem from the [Aiven pricing page](https://aiven.io/pricing).
         * 
         * @return builder
         * 
         */
        public Builder plan(String plan) {
            return plan(Output.of(plan));
        }

        /**
         * @param project Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
         * reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a
         * reference. This property cannot be changed, doing so forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param projectVpcId Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the
         * value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region
         * as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new
         * servers so the operation can take significant amount of time to complete if the service has a lot of data.
         * 
         * @return builder
         * 
         */
        public Builder projectVpcId(@Nullable Output<String> projectVpcId) {
            $.projectVpcId = projectVpcId;
            return this;
        }

        /**
         * @param projectVpcId Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the
         * value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region
         * as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new
         * servers so the operation can take significant amount of time to complete if the service has a lot of data.
         * 
         * @return builder
         * 
         */
        public Builder projectVpcId(String projectVpcId) {
            return projectVpcId(Output.of(projectVpcId));
        }

        /**
         * @param serviceIntegrations Service integrations to specify when creating a service. Not applied after initial service creation
         * 
         * @return builder
         * 
         */
        public Builder serviceIntegrations(@Nullable Output<List<M3DbServiceIntegrationArgs>> serviceIntegrations) {
            $.serviceIntegrations = serviceIntegrations;
            return this;
        }

        /**
         * @param serviceIntegrations Service integrations to specify when creating a service. Not applied after initial service creation
         * 
         * @return builder
         * 
         */
        public Builder serviceIntegrations(List<M3DbServiceIntegrationArgs> serviceIntegrations) {
            return serviceIntegrations(Output.of(serviceIntegrations));
        }

        /**
         * @param serviceIntegrations Service integrations to specify when creating a service. Not applied after initial service creation
         * 
         * @return builder
         * 
         */
        public Builder serviceIntegrations(M3DbServiceIntegrationArgs... serviceIntegrations) {
            return serviceIntegrations(List.of(serviceIntegrations));
        }

        /**
         * @param serviceName Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the
         * service so name should be picked based on intended service usage rather than current attributes.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the
         * service so name should be picked based on intended service usage rather than current attributes.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param staticIps Static IPs that are going to be associated with this service. Please assign a value using the &#39;toset&#39; function. Once a
         * static ip resource is in the &#39;assigned&#39; state it cannot be unbound from the node again
         * 
         * @return builder
         * 
         */
        public Builder staticIps(@Nullable Output<List<String>> staticIps) {
            $.staticIps = staticIps;
            return this;
        }

        /**
         * @param staticIps Static IPs that are going to be associated with this service. Please assign a value using the &#39;toset&#39; function. Once a
         * static ip resource is in the &#39;assigned&#39; state it cannot be unbound from the node again
         * 
         * @return builder
         * 
         */
        public Builder staticIps(List<String> staticIps) {
            return staticIps(Output.of(staticIps));
        }

        /**
         * @param staticIps Static IPs that are going to be associated with this service. Please assign a value using the &#39;toset&#39; function. Once a
         * static ip resource is in the &#39;assigned&#39; state it cannot be unbound from the node again
         * 
         * @return builder
         * 
         */
        public Builder staticIps(String... staticIps) {
            return staticIps(List.of(staticIps));
        }

        /**
         * @param tags Tags are key-value pairs that allow you to categorize services.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<M3DbTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Tags are key-value pairs that allow you to categorize services.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<M3DbTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags Tags are key-value pairs that allow you to categorize services.
         * 
         * @return builder
         * 
         */
        public Builder tags(M3DbTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param terminationProtection Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent
         * unintentional service deletion. This does not shield against deleting databases or topics but for services with backups
         * much of the content can at least be restored from backup in case accidental deletion is done.
         * 
         * @return builder
         * 
         */
        public Builder terminationProtection(@Nullable Output<Boolean> terminationProtection) {
            $.terminationProtection = terminationProtection;
            return this;
        }

        /**
         * @param terminationProtection Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent
         * unintentional service deletion. This does not shield against deleting databases or topics but for services with backups
         * much of the content can at least be restored from backup in case accidental deletion is done.
         * 
         * @return builder
         * 
         */
        public Builder terminationProtection(Boolean terminationProtection) {
            return terminationProtection(Output.of(terminationProtection));
        }

        public M3DbArgs build() {
            $.project = Objects.requireNonNull($.project, "expected parameter 'project' to be non-null");
            $.serviceName = Objects.requireNonNull($.serviceName, "expected parameter 'serviceName' to be non-null");
            return $;
        }
    }

}
