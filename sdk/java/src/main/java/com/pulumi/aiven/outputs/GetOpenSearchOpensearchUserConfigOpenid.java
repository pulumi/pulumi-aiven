// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetOpenSearchOpensearchUserConfigOpenid {
    private String clientId;
    private String clientSecret;
    private String connectUrl;
    private @Nullable Boolean enabled;
    private @Nullable String header;
    private @Nullable String jwtHeader;
    private @Nullable String jwtUrlParameter;
    private @Nullable Integer refreshRateLimitCount;
    private @Nullable Integer refreshRateLimitTimeWindowMs;
    private @Nullable String rolesKey;
    private @Nullable String scope;
    private @Nullable String subjectKey;

    private GetOpenSearchOpensearchUserConfigOpenid() {}
    public String clientId() {
        return this.clientId;
    }
    public String clientSecret() {
        return this.clientSecret;
    }
    public String connectUrl() {
        return this.connectUrl;
    }
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    public Optional<String> header() {
        return Optional.ofNullable(this.header);
    }
    public Optional<String> jwtHeader() {
        return Optional.ofNullable(this.jwtHeader);
    }
    public Optional<String> jwtUrlParameter() {
        return Optional.ofNullable(this.jwtUrlParameter);
    }
    public Optional<Integer> refreshRateLimitCount() {
        return Optional.ofNullable(this.refreshRateLimitCount);
    }
    public Optional<Integer> refreshRateLimitTimeWindowMs() {
        return Optional.ofNullable(this.refreshRateLimitTimeWindowMs);
    }
    public Optional<String> rolesKey() {
        return Optional.ofNullable(this.rolesKey);
    }
    public Optional<String> scope() {
        return Optional.ofNullable(this.scope);
    }
    public Optional<String> subjectKey() {
        return Optional.ofNullable(this.subjectKey);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOpenSearchOpensearchUserConfigOpenid defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clientId;
        private String clientSecret;
        private String connectUrl;
        private @Nullable Boolean enabled;
        private @Nullable String header;
        private @Nullable String jwtHeader;
        private @Nullable String jwtUrlParameter;
        private @Nullable Integer refreshRateLimitCount;
        private @Nullable Integer refreshRateLimitTimeWindowMs;
        private @Nullable String rolesKey;
        private @Nullable String scope;
        private @Nullable String subjectKey;
        public Builder() {}
        public Builder(GetOpenSearchOpensearchUserConfigOpenid defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientId = defaults.clientId;
    	      this.clientSecret = defaults.clientSecret;
    	      this.connectUrl = defaults.connectUrl;
    	      this.enabled = defaults.enabled;
    	      this.header = defaults.header;
    	      this.jwtHeader = defaults.jwtHeader;
    	      this.jwtUrlParameter = defaults.jwtUrlParameter;
    	      this.refreshRateLimitCount = defaults.refreshRateLimitCount;
    	      this.refreshRateLimitTimeWindowMs = defaults.refreshRateLimitTimeWindowMs;
    	      this.rolesKey = defaults.rolesKey;
    	      this.scope = defaults.scope;
    	      this.subjectKey = defaults.subjectKey;
        }

        @CustomType.Setter
        public Builder clientId(String clientId) {
            this.clientId = Objects.requireNonNull(clientId);
            return this;
        }
        @CustomType.Setter
        public Builder clientSecret(String clientSecret) {
            this.clientSecret = Objects.requireNonNull(clientSecret);
            return this;
        }
        @CustomType.Setter
        public Builder connectUrl(String connectUrl) {
            this.connectUrl = Objects.requireNonNull(connectUrl);
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder header(@Nullable String header) {
            this.header = header;
            return this;
        }
        @CustomType.Setter
        public Builder jwtHeader(@Nullable String jwtHeader) {
            this.jwtHeader = jwtHeader;
            return this;
        }
        @CustomType.Setter
        public Builder jwtUrlParameter(@Nullable String jwtUrlParameter) {
            this.jwtUrlParameter = jwtUrlParameter;
            return this;
        }
        @CustomType.Setter
        public Builder refreshRateLimitCount(@Nullable Integer refreshRateLimitCount) {
            this.refreshRateLimitCount = refreshRateLimitCount;
            return this;
        }
        @CustomType.Setter
        public Builder refreshRateLimitTimeWindowMs(@Nullable Integer refreshRateLimitTimeWindowMs) {
            this.refreshRateLimitTimeWindowMs = refreshRateLimitTimeWindowMs;
            return this;
        }
        @CustomType.Setter
        public Builder rolesKey(@Nullable String rolesKey) {
            this.rolesKey = rolesKey;
            return this;
        }
        @CustomType.Setter
        public Builder scope(@Nullable String scope) {
            this.scope = scope;
            return this;
        }
        @CustomType.Setter
        public Builder subjectKey(@Nullable String subjectKey) {
            this.subjectKey = subjectKey;
            return this;
        }
        public GetOpenSearchOpensearchUserConfigOpenid build() {
            final var _resultValue = new GetOpenSearchOpensearchUserConfigOpenid();
            _resultValue.clientId = clientId;
            _resultValue.clientSecret = clientSecret;
            _resultValue.connectUrl = connectUrl;
            _resultValue.enabled = enabled;
            _resultValue.header = header;
            _resultValue.jwtHeader = jwtHeader;
            _resultValue.jwtUrlParameter = jwtUrlParameter;
            _resultValue.refreshRateLimitCount = refreshRateLimitCount;
            _resultValue.refreshRateLimitTimeWindowMs = refreshRateLimitTimeWindowMs;
            _resultValue.rolesKey = rolesKey;
            _resultValue.scope = scope;
            _resultValue.subjectKey = subjectKey;
            return _resultValue;
        }
    }
}
