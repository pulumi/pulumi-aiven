// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.aiven.inputs.OrganizationPermissionPermissionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class OrganizationPermissionArgs extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationPermissionArgs Empty = new OrganizationPermissionArgs();

    /**
     * Organization ID.
     * 
     */
    @Import(name="organizationId", required=true)
    private Output<String> organizationId;

    /**
     * @return Organization ID.
     * 
     */
    public Output<String> organizationId() {
        return this.organizationId;
    }

    /**
     * Permissions to grant to principals.
     * 
     */
    @Import(name="permissions", required=true)
    private Output<List<OrganizationPermissionPermissionArgs>> permissions;

    /**
     * @return Permissions to grant to principals.
     * 
     */
    public Output<List<OrganizationPermissionPermissionArgs>> permissions() {
        return this.permissions;
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="resourceId", required=true)
    private Output<String> resourceId;

    /**
     * @return Resource ID.
     * 
     */
    public Output<String> resourceId() {
        return this.resourceId;
    }

    /**
     * Resource type. The possible values are `organization`, `organization_unit` and `project`.
     * 
     */
    @Import(name="resourceType", required=true)
    private Output<String> resourceType;

    /**
     * @return Resource type. The possible values are `organization`, `organization_unit` and `project`.
     * 
     */
    public Output<String> resourceType() {
        return this.resourceType;
    }

    private OrganizationPermissionArgs() {}

    private OrganizationPermissionArgs(OrganizationPermissionArgs $) {
        this.organizationId = $.organizationId;
        this.permissions = $.permissions;
        this.resourceId = $.resourceId;
        this.resourceType = $.resourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationPermissionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationPermissionArgs $;

        public Builder() {
            $ = new OrganizationPermissionArgs();
        }

        public Builder(OrganizationPermissionArgs defaults) {
            $ = new OrganizationPermissionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param organizationId Organization ID.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId Organization ID.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        /**
         * @param permissions Permissions to grant to principals.
         * 
         * @return builder
         * 
         */
        public Builder permissions(Output<List<OrganizationPermissionPermissionArgs>> permissions) {
            $.permissions = permissions;
            return this;
        }

        /**
         * @param permissions Permissions to grant to principals.
         * 
         * @return builder
         * 
         */
        public Builder permissions(List<OrganizationPermissionPermissionArgs> permissions) {
            return permissions(Output.of(permissions));
        }

        /**
         * @param permissions Permissions to grant to principals.
         * 
         * @return builder
         * 
         */
        public Builder permissions(OrganizationPermissionPermissionArgs... permissions) {
            return permissions(List.of(permissions));
        }

        /**
         * @param resourceId Resource ID.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId Resource ID.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        /**
         * @param resourceType Resource type. The possible values are `organization`, `organization_unit` and `project`.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType Resource type. The possible values are `organization`, `organization_unit` and `project`.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        public OrganizationPermissionArgs build() {
            if ($.organizationId == null) {
                throw new MissingRequiredPropertyException("OrganizationPermissionArgs", "organizationId");
            }
            if ($.permissions == null) {
                throw new MissingRequiredPropertyException("OrganizationPermissionArgs", "permissions");
            }
            if ($.resourceId == null) {
                throw new MissingRequiredPropertyException("OrganizationPermissionArgs", "resourceId");
            }
            if ($.resourceType == null) {
                throw new MissingRequiredPropertyException("OrganizationPermissionArgs", "resourceType");
            }
            return $;
        }
    }

}
