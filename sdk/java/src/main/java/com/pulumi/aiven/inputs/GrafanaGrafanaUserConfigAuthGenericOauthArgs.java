// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GrafanaGrafanaUserConfigAuthGenericOauthArgs extends com.pulumi.resources.ResourceArgs {

    public static final GrafanaGrafanaUserConfigAuthGenericOauthArgs Empty = new GrafanaGrafanaUserConfigAuthGenericOauthArgs();

    @Import(name="allowSignUp")
    private @Nullable Output<String> allowSignUp;

    public Optional<Output<String>> allowSignUp() {
        return Optional.ofNullable(this.allowSignUp);
    }

    @Import(name="allowedDomains")
    private @Nullable Output<List<String>> allowedDomains;

    public Optional<Output<List<String>>> allowedDomains() {
        return Optional.ofNullable(this.allowedDomains);
    }

    @Import(name="allowedOrganizations")
    private @Nullable Output<List<String>> allowedOrganizations;

    public Optional<Output<List<String>>> allowedOrganizations() {
        return Optional.ofNullable(this.allowedOrganizations);
    }

    @Import(name="apiUrl")
    private @Nullable Output<String> apiUrl;

    public Optional<Output<String>> apiUrl() {
        return Optional.ofNullable(this.apiUrl);
    }

    @Import(name="authUrl")
    private @Nullable Output<String> authUrl;

    public Optional<Output<String>> authUrl() {
        return Optional.ofNullable(this.authUrl);
    }

    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    @Import(name="clientSecret")
    private @Nullable Output<String> clientSecret;

    public Optional<Output<String>> clientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="scopes")
    private @Nullable Output<List<String>> scopes;

    public Optional<Output<List<String>>> scopes() {
        return Optional.ofNullable(this.scopes);
    }

    @Import(name="tokenUrl")
    private @Nullable Output<String> tokenUrl;

    public Optional<Output<String>> tokenUrl() {
        return Optional.ofNullable(this.tokenUrl);
    }

    private GrafanaGrafanaUserConfigAuthGenericOauthArgs() {}

    private GrafanaGrafanaUserConfigAuthGenericOauthArgs(GrafanaGrafanaUserConfigAuthGenericOauthArgs $) {
        this.allowSignUp = $.allowSignUp;
        this.allowedDomains = $.allowedDomains;
        this.allowedOrganizations = $.allowedOrganizations;
        this.apiUrl = $.apiUrl;
        this.authUrl = $.authUrl;
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.name = $.name;
        this.scopes = $.scopes;
        this.tokenUrl = $.tokenUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GrafanaGrafanaUserConfigAuthGenericOauthArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GrafanaGrafanaUserConfigAuthGenericOauthArgs $;

        public Builder() {
            $ = new GrafanaGrafanaUserConfigAuthGenericOauthArgs();
        }

        public Builder(GrafanaGrafanaUserConfigAuthGenericOauthArgs defaults) {
            $ = new GrafanaGrafanaUserConfigAuthGenericOauthArgs(Objects.requireNonNull(defaults));
        }

        public Builder allowSignUp(@Nullable Output<String> allowSignUp) {
            $.allowSignUp = allowSignUp;
            return this;
        }

        public Builder allowSignUp(String allowSignUp) {
            return allowSignUp(Output.of(allowSignUp));
        }

        public Builder allowedDomains(@Nullable Output<List<String>> allowedDomains) {
            $.allowedDomains = allowedDomains;
            return this;
        }

        public Builder allowedDomains(List<String> allowedDomains) {
            return allowedDomains(Output.of(allowedDomains));
        }

        public Builder allowedDomains(String... allowedDomains) {
            return allowedDomains(List.of(allowedDomains));
        }

        public Builder allowedOrganizations(@Nullable Output<List<String>> allowedOrganizations) {
            $.allowedOrganizations = allowedOrganizations;
            return this;
        }

        public Builder allowedOrganizations(List<String> allowedOrganizations) {
            return allowedOrganizations(Output.of(allowedOrganizations));
        }

        public Builder allowedOrganizations(String... allowedOrganizations) {
            return allowedOrganizations(List.of(allowedOrganizations));
        }

        public Builder apiUrl(@Nullable Output<String> apiUrl) {
            $.apiUrl = apiUrl;
            return this;
        }

        public Builder apiUrl(String apiUrl) {
            return apiUrl(Output.of(apiUrl));
        }

        public Builder authUrl(@Nullable Output<String> authUrl) {
            $.authUrl = authUrl;
            return this;
        }

        public Builder authUrl(String authUrl) {
            return authUrl(Output.of(authUrl));
        }

        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        public Builder clientSecret(@Nullable Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder scopes(@Nullable Output<List<String>> scopes) {
            $.scopes = scopes;
            return this;
        }

        public Builder scopes(List<String> scopes) {
            return scopes(Output.of(scopes));
        }

        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }

        public Builder tokenUrl(@Nullable Output<String> tokenUrl) {
            $.tokenUrl = tokenUrl;
            return this;
        }

        public Builder tokenUrl(String tokenUrl) {
            return tokenUrl(Output.of(tokenUrl));
        }

        public GrafanaGrafanaUserConfigAuthGenericOauthArgs build() {
            return $;
        }
    }

}
