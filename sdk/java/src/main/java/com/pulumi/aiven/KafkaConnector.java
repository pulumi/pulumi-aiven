// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven;

import com.pulumi.aiven.KafkaConnectorArgs;
import com.pulumi.aiven.Utilities;
import com.pulumi.aiven.inputs.KafkaConnectorState;
import com.pulumi.aiven.outputs.KafkaConnectorTask;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Creates and manages Aiven for Apache Kafka® [connectors](https://aiven.io/docs/products/kafka/kafka-connect/concepts/list-of-connector-plugins).
 * Source connectors let you import data from an external system into a Kafka topic. Sink connectors let you export data from a topic to an external system.
 * 
 * You can use connectors with any Aiven for Apache Kafka® service that is integrated with an Aiven for Apache Kafka® Connect service.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aiven.KafkaConnector;
 * import com.pulumi.aiven.KafkaConnectorArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var kafka_os_connector = new KafkaConnector("kafka-os-connector", KafkaConnectorArgs.builder()
 *             .project(exampleProject.project())
 *             .serviceName(exampleKafka.serviceName())
 *             .connectorName("kafka-opensearch-connector")
 *             .config(Map.ofEntries(
 *                 Map.entry("name", "kafka-opensearch-connector"),
 *                 Map.entry("topics", exampleTopic.topicName()),
 *                 Map.entry("connector.class", "io.aiven.kafka.connect.opensearch.OpensearchSinkConnector"),
 *                 Map.entry("type.name", "os-connector"),
 *                 Map.entry("connection.url", exampleOs.serviceUri()),
 *                 Map.entry("connection.username", exampleOs.serviceUsername()),
 *                 Map.entry("connection.password", exampleOs.servicePassword())
 *             ))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import aiven:index/kafkaConnector:KafkaConnector kafka-os-connector PROJECT/SERVICE_NAME/CONNECTOR_NAME
 * ```
 * 
 */
@ResourceType(type="aiven:index/kafkaConnector:KafkaConnector")
public class KafkaConnector extends com.pulumi.resources.CustomResource {
    /**
     * The Kafka connector configuration parameters.
     * 
     */
    @Export(name="config", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> config;

    /**
     * @return The Kafka connector configuration parameters.
     * 
     */
    public Output<Map<String,String>> config() {
        return this.config;
    }
    /**
     * The Kafka connector name. Changing this property forces recreation of the resource.
     * 
     */
    @Export(name="connectorName", refs={String.class}, tree="[0]")
    private Output<String> connectorName;

    /**
     * @return The Kafka connector name. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> connectorName() {
        return this.connectorName;
    }
    /**
     * The Kafka connector author.
     * 
     */
    @Export(name="pluginAuthor", refs={String.class}, tree="[0]")
    private Output<String> pluginAuthor;

    /**
     * @return The Kafka connector author.
     * 
     */
    public Output<String> pluginAuthor() {
        return this.pluginAuthor;
    }
    /**
     * The Kafka connector Java class.
     * 
     */
    @Export(name="pluginClass", refs={String.class}, tree="[0]")
    private Output<String> pluginClass;

    /**
     * @return The Kafka connector Java class.
     * 
     */
    public Output<String> pluginClass() {
        return this.pluginClass;
    }
    /**
     * The Kafka connector documentation URL.
     * 
     */
    @Export(name="pluginDocUrl", refs={String.class}, tree="[0]")
    private Output<String> pluginDocUrl;

    /**
     * @return The Kafka connector documentation URL.
     * 
     */
    public Output<String> pluginDocUrl() {
        return this.pluginDocUrl;
    }
    /**
     * The Kafka connector title.
     * 
     */
    @Export(name="pluginTitle", refs={String.class}, tree="[0]")
    private Output<String> pluginTitle;

    /**
     * @return The Kafka connector title.
     * 
     */
    public Output<String> pluginTitle() {
        return this.pluginTitle;
    }
    /**
     * The Kafka connector type.
     * 
     */
    @Export(name="pluginType", refs={String.class}, tree="[0]")
    private Output<String> pluginType;

    /**
     * @return The Kafka connector type.
     * 
     */
    public Output<String> pluginType() {
        return this.pluginType;
    }
    /**
     * The version of the Kafka connector.
     * 
     */
    @Export(name="pluginVersion", refs={String.class}, tree="[0]")
    private Output<String> pluginVersion;

    /**
     * @return The version of the Kafka connector.
     * 
     */
    public Output<String> pluginVersion() {
        return this.pluginVersion;
    }
    /**
     * The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    @Export(name="serviceName", refs={String.class}, tree="[0]")
    private Output<String> serviceName;

    /**
     * @return The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }
    /**
     * List of tasks of a connector.
     * 
     */
    @Export(name="tasks", refs={List.class,KafkaConnectorTask.class}, tree="[0,1]")
    private Output<List<KafkaConnectorTask>> tasks;

    /**
     * @return List of tasks of a connector.
     * 
     */
    public Output<List<KafkaConnectorTask>> tasks() {
        return this.tasks;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public KafkaConnector(java.lang.String name) {
        this(name, KafkaConnectorArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public KafkaConnector(java.lang.String name, KafkaConnectorArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public KafkaConnector(java.lang.String name, KafkaConnectorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aiven:index/kafkaConnector:KafkaConnector", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private KafkaConnector(java.lang.String name, Output<java.lang.String> id, @Nullable KafkaConnectorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aiven:index/kafkaConnector:KafkaConnector", name, state, makeResourceOptions(options, id), false);
    }

    private static KafkaConnectorArgs makeArgs(KafkaConnectorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? KafkaConnectorArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static KafkaConnector get(java.lang.String name, Output<java.lang.String> id, @Nullable KafkaConnectorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new KafkaConnector(name, id, state, options);
    }
}
