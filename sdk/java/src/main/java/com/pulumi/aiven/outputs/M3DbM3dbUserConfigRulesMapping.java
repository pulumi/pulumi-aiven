// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.aiven.outputs.M3DbM3dbUserConfigRulesMappingTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class M3DbM3dbUserConfigRulesMapping {
    private final @Nullable List<String> aggregations;
    private final @Nullable String drop;
    private final @Nullable String filter;
    private final @Nullable String name;
    private final @Nullable List<String> namespaces;
    private final @Nullable List<M3DbM3dbUserConfigRulesMappingTag> tags;

    @CustomType.Constructor
    private M3DbM3dbUserConfigRulesMapping(
        @CustomType.Parameter("aggregations") @Nullable List<String> aggregations,
        @CustomType.Parameter("drop") @Nullable String drop,
        @CustomType.Parameter("filter") @Nullable String filter,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("namespaces") @Nullable List<String> namespaces,
        @CustomType.Parameter("tags") @Nullable List<M3DbM3dbUserConfigRulesMappingTag> tags) {
        this.aggregations = aggregations;
        this.drop = drop;
        this.filter = filter;
        this.name = name;
        this.namespaces = namespaces;
        this.tags = tags;
    }

    public List<String> aggregations() {
        return this.aggregations == null ? List.of() : this.aggregations;
    }
    public Optional<String> drop() {
        return Optional.ofNullable(this.drop);
    }
    public Optional<String> filter() {
        return Optional.ofNullable(this.filter);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public List<String> namespaces() {
        return this.namespaces == null ? List.of() : this.namespaces;
    }
    public List<M3DbM3dbUserConfigRulesMappingTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(M3DbM3dbUserConfigRulesMapping defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> aggregations;
        private @Nullable String drop;
        private @Nullable String filter;
        private @Nullable String name;
        private @Nullable List<String> namespaces;
        private @Nullable List<M3DbM3dbUserConfigRulesMappingTag> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(M3DbM3dbUserConfigRulesMapping defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregations = defaults.aggregations;
    	      this.drop = defaults.drop;
    	      this.filter = defaults.filter;
    	      this.name = defaults.name;
    	      this.namespaces = defaults.namespaces;
    	      this.tags = defaults.tags;
        }

        public Builder aggregations(@Nullable List<String> aggregations) {
            this.aggregations = aggregations;
            return this;
        }
        public Builder aggregations(String... aggregations) {
            return aggregations(List.of(aggregations));
        }
        public Builder drop(@Nullable String drop) {
            this.drop = drop;
            return this;
        }
        public Builder filter(@Nullable String filter) {
            this.filter = filter;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder namespaces(@Nullable List<String> namespaces) {
            this.namespaces = namespaces;
            return this;
        }
        public Builder namespaces(String... namespaces) {
            return namespaces(List.of(namespaces));
        }
        public Builder tags(@Nullable List<M3DbM3dbUserConfigRulesMappingTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(M3DbM3dbUserConfigRulesMappingTag... tags) {
            return tags(List.of(tags));
        }        public M3DbM3dbUserConfigRulesMapping build() {
            return new M3DbM3dbUserConfigRulesMapping(aggregations, drop, filter, name, namespaces, tags);
        }
    }
}
