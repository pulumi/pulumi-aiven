// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.aiven.outputs.M3DbM3dbUserConfigRulesMappingNamespacesObject;
import com.pulumi.aiven.outputs.M3DbM3dbUserConfigRulesMappingTag;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class M3DbM3dbUserConfigRulesMapping {
    private @Nullable List<String> aggregations;
    private @Nullable Boolean drop;
    private String filter;
    private @Nullable String name;
    /**
     * @deprecated
     * This will be removed in v5.0.0 and replaced with namespaces_string instead.
     * 
     */
    @Deprecated /* This will be removed in v5.0.0 and replaced with namespaces_string instead. */
    private @Nullable List<String> namespaces;
    private @Nullable List<M3DbM3dbUserConfigRulesMappingNamespacesObject> namespacesObjects;
    private @Nullable List<String> namespacesStrings;
    private @Nullable List<M3DbM3dbUserConfigRulesMappingTag> tags;

    private M3DbM3dbUserConfigRulesMapping() {}
    public List<String> aggregations() {
        return this.aggregations == null ? List.of() : this.aggregations;
    }
    public Optional<Boolean> drop() {
        return Optional.ofNullable(this.drop);
    }
    public String filter() {
        return this.filter;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @deprecated
     * This will be removed in v5.0.0 and replaced with namespaces_string instead.
     * 
     */
    @Deprecated /* This will be removed in v5.0.0 and replaced with namespaces_string instead. */
    public List<String> namespaces() {
        return this.namespaces == null ? List.of() : this.namespaces;
    }
    public List<M3DbM3dbUserConfigRulesMappingNamespacesObject> namespacesObjects() {
        return this.namespacesObjects == null ? List.of() : this.namespacesObjects;
    }
    public List<String> namespacesStrings() {
        return this.namespacesStrings == null ? List.of() : this.namespacesStrings;
    }
    public List<M3DbM3dbUserConfigRulesMappingTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(M3DbM3dbUserConfigRulesMapping defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> aggregations;
        private @Nullable Boolean drop;
        private String filter;
        private @Nullable String name;
        private @Nullable List<String> namespaces;
        private @Nullable List<M3DbM3dbUserConfigRulesMappingNamespacesObject> namespacesObjects;
        private @Nullable List<String> namespacesStrings;
        private @Nullable List<M3DbM3dbUserConfigRulesMappingTag> tags;
        public Builder() {}
        public Builder(M3DbM3dbUserConfigRulesMapping defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregations = defaults.aggregations;
    	      this.drop = defaults.drop;
    	      this.filter = defaults.filter;
    	      this.name = defaults.name;
    	      this.namespaces = defaults.namespaces;
    	      this.namespacesObjects = defaults.namespacesObjects;
    	      this.namespacesStrings = defaults.namespacesStrings;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder aggregations(@Nullable List<String> aggregations) {

            this.aggregations = aggregations;
            return this;
        }
        public Builder aggregations(String... aggregations) {
            return aggregations(List.of(aggregations));
        }
        @CustomType.Setter
        public Builder drop(@Nullable Boolean drop) {

            this.drop = drop;
            return this;
        }
        @CustomType.Setter
        public Builder filter(String filter) {
            if (filter == null) {
              throw new MissingRequiredPropertyException("M3DbM3dbUserConfigRulesMapping", "filter");
            }
            this.filter = filter;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder namespaces(@Nullable List<String> namespaces) {

            this.namespaces = namespaces;
            return this;
        }
        public Builder namespaces(String... namespaces) {
            return namespaces(List.of(namespaces));
        }
        @CustomType.Setter
        public Builder namespacesObjects(@Nullable List<M3DbM3dbUserConfigRulesMappingNamespacesObject> namespacesObjects) {

            this.namespacesObjects = namespacesObjects;
            return this;
        }
        public Builder namespacesObjects(M3DbM3dbUserConfigRulesMappingNamespacesObject... namespacesObjects) {
            return namespacesObjects(List.of(namespacesObjects));
        }
        @CustomType.Setter
        public Builder namespacesStrings(@Nullable List<String> namespacesStrings) {

            this.namespacesStrings = namespacesStrings;
            return this;
        }
        public Builder namespacesStrings(String... namespacesStrings) {
            return namespacesStrings(List.of(namespacesStrings));
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<M3DbM3dbUserConfigRulesMappingTag> tags) {

            this.tags = tags;
            return this;
        }
        public Builder tags(M3DbM3dbUserConfigRulesMappingTag... tags) {
            return tags(List.of(tags));
        }
        public M3DbM3dbUserConfigRulesMapping build() {
            final var _resultValue = new M3DbM3dbUserConfigRulesMapping();
            _resultValue.aggregations = aggregations;
            _resultValue.drop = drop;
            _resultValue.filter = filter;
            _resultValue.name = name;
            _resultValue.namespaces = namespaces;
            _resultValue.namespacesObjects = namespacesObjects;
            _resultValue.namespacesStrings = namespacesStrings;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
