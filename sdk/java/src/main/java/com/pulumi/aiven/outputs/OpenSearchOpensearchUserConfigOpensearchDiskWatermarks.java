// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class OpenSearchOpensearchUserConfigOpensearchDiskWatermarks {
    /**
     * @return The flood stage watermark for disk usage. Example: `95`.
     * 
     */
    private Integer floodStage;
    /**
     * @return The high watermark for disk usage. Example: `90`.
     * 
     */
    private Integer high;
    /**
     * @return The low watermark for disk usage. Example: `85`.
     * 
     */
    private Integer low;

    private OpenSearchOpensearchUserConfigOpensearchDiskWatermarks() {}
    /**
     * @return The flood stage watermark for disk usage. Example: `95`.
     * 
     */
    public Integer floodStage() {
        return this.floodStage;
    }
    /**
     * @return The high watermark for disk usage. Example: `90`.
     * 
     */
    public Integer high() {
        return this.high;
    }
    /**
     * @return The low watermark for disk usage. Example: `85`.
     * 
     */
    public Integer low() {
        return this.low;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OpenSearchOpensearchUserConfigOpensearchDiskWatermarks defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer floodStage;
        private Integer high;
        private Integer low;
        public Builder() {}
        public Builder(OpenSearchOpensearchUserConfigOpensearchDiskWatermarks defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.floodStage = defaults.floodStage;
    	      this.high = defaults.high;
    	      this.low = defaults.low;
        }

        @CustomType.Setter
        public Builder floodStage(Integer floodStage) {
            if (floodStage == null) {
              throw new MissingRequiredPropertyException("OpenSearchOpensearchUserConfigOpensearchDiskWatermarks", "floodStage");
            }
            this.floodStage = floodStage;
            return this;
        }
        @CustomType.Setter
        public Builder high(Integer high) {
            if (high == null) {
              throw new MissingRequiredPropertyException("OpenSearchOpensearchUserConfigOpensearchDiskWatermarks", "high");
            }
            this.high = high;
            return this;
        }
        @CustomType.Setter
        public Builder low(Integer low) {
            if (low == null) {
              throw new MissingRequiredPropertyException("OpenSearchOpensearchUserConfigOpensearchDiskWatermarks", "low");
            }
            this.low = low;
            return this;
        }
        public OpenSearchOpensearchUserConfigOpensearchDiskWatermarks build() {
            final var _resultValue = new OpenSearchOpensearchUserConfigOpensearchDiskWatermarks();
            _resultValue.floodStage = floodStage;
            _resultValue.high = high;
            _resultValue.low = low;
            return _resultValue;
        }
    }
}
