// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPgPgUserConfigTimescaledb {
    /**
     * @return The number of background workers for timescaledb operations. You should configure this setting to the sum of your number of databases and the total number of concurrent background workers you want running at any given point in time. Default: `16`.
     * 
     */
    private @Nullable Integer maxBackgroundWorkers;

    private GetPgPgUserConfigTimescaledb() {}
    /**
     * @return The number of background workers for timescaledb operations. You should configure this setting to the sum of your number of databases and the total number of concurrent background workers you want running at any given point in time. Default: `16`.
     * 
     */
    public Optional<Integer> maxBackgroundWorkers() {
        return Optional.ofNullable(this.maxBackgroundWorkers);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPgPgUserConfigTimescaledb defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer maxBackgroundWorkers;
        public Builder() {}
        public Builder(GetPgPgUserConfigTimescaledb defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxBackgroundWorkers = defaults.maxBackgroundWorkers;
        }

        @CustomType.Setter
        public Builder maxBackgroundWorkers(@Nullable Integer maxBackgroundWorkers) {

            this.maxBackgroundWorkers = maxBackgroundWorkers;
            return this;
        }
        public GetPgPgUserConfigTimescaledb build() {
            final var _resultValue = new GetPgPgUserConfigTimescaledb();
            _resultValue.maxBackgroundWorkers = maxBackgroundWorkers;
            return _resultValue;
        }
    }
}
