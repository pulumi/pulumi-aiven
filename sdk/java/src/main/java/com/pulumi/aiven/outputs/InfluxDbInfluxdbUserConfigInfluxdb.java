// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InfluxDbInfluxdbUserConfigInfluxdb {
    private final @Nullable String logQueriesAfter;
    private final @Nullable String maxConnectionLimit;
    private final @Nullable String maxRowLimit;
    private final @Nullable String maxSelectBuckets;
    private final @Nullable String maxSelectPoint;
    private final @Nullable String queryTimeout;

    @CustomType.Constructor
    private InfluxDbInfluxdbUserConfigInfluxdb(
        @CustomType.Parameter("logQueriesAfter") @Nullable String logQueriesAfter,
        @CustomType.Parameter("maxConnectionLimit") @Nullable String maxConnectionLimit,
        @CustomType.Parameter("maxRowLimit") @Nullable String maxRowLimit,
        @CustomType.Parameter("maxSelectBuckets") @Nullable String maxSelectBuckets,
        @CustomType.Parameter("maxSelectPoint") @Nullable String maxSelectPoint,
        @CustomType.Parameter("queryTimeout") @Nullable String queryTimeout) {
        this.logQueriesAfter = logQueriesAfter;
        this.maxConnectionLimit = maxConnectionLimit;
        this.maxRowLimit = maxRowLimit;
        this.maxSelectBuckets = maxSelectBuckets;
        this.maxSelectPoint = maxSelectPoint;
        this.queryTimeout = queryTimeout;
    }

    public Optional<String> logQueriesAfter() {
        return Optional.ofNullable(this.logQueriesAfter);
    }
    public Optional<String> maxConnectionLimit() {
        return Optional.ofNullable(this.maxConnectionLimit);
    }
    public Optional<String> maxRowLimit() {
        return Optional.ofNullable(this.maxRowLimit);
    }
    public Optional<String> maxSelectBuckets() {
        return Optional.ofNullable(this.maxSelectBuckets);
    }
    public Optional<String> maxSelectPoint() {
        return Optional.ofNullable(this.maxSelectPoint);
    }
    public Optional<String> queryTimeout() {
        return Optional.ofNullable(this.queryTimeout);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InfluxDbInfluxdbUserConfigInfluxdb defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String logQueriesAfter;
        private @Nullable String maxConnectionLimit;
        private @Nullable String maxRowLimit;
        private @Nullable String maxSelectBuckets;
        private @Nullable String maxSelectPoint;
        private @Nullable String queryTimeout;

        public Builder() {
    	      // Empty
        }

        public Builder(InfluxDbInfluxdbUserConfigInfluxdb defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.logQueriesAfter = defaults.logQueriesAfter;
    	      this.maxConnectionLimit = defaults.maxConnectionLimit;
    	      this.maxRowLimit = defaults.maxRowLimit;
    	      this.maxSelectBuckets = defaults.maxSelectBuckets;
    	      this.maxSelectPoint = defaults.maxSelectPoint;
    	      this.queryTimeout = defaults.queryTimeout;
        }

        public Builder logQueriesAfter(@Nullable String logQueriesAfter) {
            this.logQueriesAfter = logQueriesAfter;
            return this;
        }
        public Builder maxConnectionLimit(@Nullable String maxConnectionLimit) {
            this.maxConnectionLimit = maxConnectionLimit;
            return this;
        }
        public Builder maxRowLimit(@Nullable String maxRowLimit) {
            this.maxRowLimit = maxRowLimit;
            return this;
        }
        public Builder maxSelectBuckets(@Nullable String maxSelectBuckets) {
            this.maxSelectBuckets = maxSelectBuckets;
            return this;
        }
        public Builder maxSelectPoint(@Nullable String maxSelectPoint) {
            this.maxSelectPoint = maxSelectPoint;
            return this;
        }
        public Builder queryTimeout(@Nullable String queryTimeout) {
            this.queryTimeout = queryTimeout;
            return this;
        }        public InfluxDbInfluxdbUserConfigInfluxdb build() {
            return new InfluxDbInfluxdbUserConfigInfluxdb(logQueriesAfter, maxConnectionLimit, maxRowLimit, maxSelectBuckets, maxSelectPoint, queryTimeout);
        }
    }
}
