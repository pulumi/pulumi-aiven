// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.aiven.inputs.OrganizationAddressTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OrganizationAddressState extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationAddressState Empty = new OrganizationAddressState();

    /**
     * Address ID.
     * 
     */
    @Import(name="addressId")
    private @Nullable Output<String> addressId;

    /**
     * @return Address ID.
     * 
     */
    public Optional<Output<String>> addressId() {
        return Optional.ofNullable(this.addressId);
    }

    /**
     * Address Lines.
     * 
     */
    @Import(name="addressLines")
    private @Nullable Output<List<String>> addressLines;

    /**
     * @return Address Lines.
     * 
     */
    public Optional<Output<List<String>>> addressLines() {
        return Optional.ofNullable(this.addressLines);
    }

    /**
     * City.
     * 
     */
    @Import(name="city")
    private @Nullable Output<String> city;

    /**
     * @return City.
     * 
     */
    public Optional<Output<String>> city() {
        return Optional.ofNullable(this.city);
    }

    /**
     * Country Code.
     * 
     */
    @Import(name="countryCode")
    private @Nullable Output<String> countryCode;

    /**
     * @return Country Code.
     * 
     */
    public Optional<Output<String>> countryCode() {
        return Optional.ofNullable(this.countryCode);
    }

    /**
     * Create Time.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return Create Time.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * Name of a company. Maximum length: `128`.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of a company. Maximum length: `128`.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * ID of an organization. Maximum length: `36`. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="organizationId")
    private @Nullable Output<String> organizationId;

    /**
     * @return ID of an organization. Maximum length: `36`. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }

    /**
     * State. Maximum length: `128`.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return State. Maximum length: `128`.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    @Import(name="timeouts")
    private @Nullable Output<OrganizationAddressTimeoutsArgs> timeouts;

    public Optional<Output<OrganizationAddressTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    /**
     * Update Time.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return Update Time.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    /**
     * Zip Code. Maximum length: `32`.
     * 
     */
    @Import(name="zipCode")
    private @Nullable Output<String> zipCode;

    /**
     * @return Zip Code. Maximum length: `32`.
     * 
     */
    public Optional<Output<String>> zipCode() {
        return Optional.ofNullable(this.zipCode);
    }

    private OrganizationAddressState() {}

    private OrganizationAddressState(OrganizationAddressState $) {
        this.addressId = $.addressId;
        this.addressLines = $.addressLines;
        this.city = $.city;
        this.countryCode = $.countryCode;
        this.createTime = $.createTime;
        this.name = $.name;
        this.organizationId = $.organizationId;
        this.state = $.state;
        this.timeouts = $.timeouts;
        this.updateTime = $.updateTime;
        this.zipCode = $.zipCode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationAddressState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationAddressState $;

        public Builder() {
            $ = new OrganizationAddressState();
        }

        public Builder(OrganizationAddressState defaults) {
            $ = new OrganizationAddressState(Objects.requireNonNull(defaults));
        }

        /**
         * @param addressId Address ID.
         * 
         * @return builder
         * 
         */
        public Builder addressId(@Nullable Output<String> addressId) {
            $.addressId = addressId;
            return this;
        }

        /**
         * @param addressId Address ID.
         * 
         * @return builder
         * 
         */
        public Builder addressId(String addressId) {
            return addressId(Output.of(addressId));
        }

        /**
         * @param addressLines Address Lines.
         * 
         * @return builder
         * 
         */
        public Builder addressLines(@Nullable Output<List<String>> addressLines) {
            $.addressLines = addressLines;
            return this;
        }

        /**
         * @param addressLines Address Lines.
         * 
         * @return builder
         * 
         */
        public Builder addressLines(List<String> addressLines) {
            return addressLines(Output.of(addressLines));
        }

        /**
         * @param addressLines Address Lines.
         * 
         * @return builder
         * 
         */
        public Builder addressLines(String... addressLines) {
            return addressLines(List.of(addressLines));
        }

        /**
         * @param city City.
         * 
         * @return builder
         * 
         */
        public Builder city(@Nullable Output<String> city) {
            $.city = city;
            return this;
        }

        /**
         * @param city City.
         * 
         * @return builder
         * 
         */
        public Builder city(String city) {
            return city(Output.of(city));
        }

        /**
         * @param countryCode Country Code.
         * 
         * @return builder
         * 
         */
        public Builder countryCode(@Nullable Output<String> countryCode) {
            $.countryCode = countryCode;
            return this;
        }

        /**
         * @param countryCode Country Code.
         * 
         * @return builder
         * 
         */
        public Builder countryCode(String countryCode) {
            return countryCode(Output.of(countryCode));
        }

        /**
         * @param createTime Create Time.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime Create Time.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param name Name of a company. Maximum length: `128`.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of a company. Maximum length: `128`.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param organizationId ID of an organization. Maximum length: `36`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(@Nullable Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId ID of an organization. Maximum length: `36`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        /**
         * @param state State. Maximum length: `128`.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state State. Maximum length: `128`.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        public Builder timeouts(@Nullable Output<OrganizationAddressTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(OrganizationAddressTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        /**
         * @param updateTime Update Time.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime Update Time.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        /**
         * @param zipCode Zip Code. Maximum length: `32`.
         * 
         * @return builder
         * 
         */
        public Builder zipCode(@Nullable Output<String> zipCode) {
            $.zipCode = zipCode;
            return this;
        }

        /**
         * @param zipCode Zip Code. Maximum length: `32`.
         * 
         * @return builder
         * 
         */
        public Builder zipCode(String zipCode) {
            return zipCode(Output.of(zipCode));
        }

        public OrganizationAddressState build() {
            return $;
        }
    }

}
