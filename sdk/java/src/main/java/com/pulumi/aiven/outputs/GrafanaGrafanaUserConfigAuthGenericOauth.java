// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GrafanaGrafanaUserConfigAuthGenericOauth {
    private @Nullable Boolean allowSignUp;
    private @Nullable List<String> allowedDomains;
    private @Nullable List<String> allowedOrganizations;
    private String apiUrl;
    private String authUrl;
    private @Nullable Boolean autoLogin;
    private String clientId;
    private String clientSecret;
    private @Nullable String name;
    private @Nullable List<String> scopes;
    private String tokenUrl;

    private GrafanaGrafanaUserConfigAuthGenericOauth() {}
    public Optional<Boolean> allowSignUp() {
        return Optional.ofNullable(this.allowSignUp);
    }
    public List<String> allowedDomains() {
        return this.allowedDomains == null ? List.of() : this.allowedDomains;
    }
    public List<String> allowedOrganizations() {
        return this.allowedOrganizations == null ? List.of() : this.allowedOrganizations;
    }
    public String apiUrl() {
        return this.apiUrl;
    }
    public String authUrl() {
        return this.authUrl;
    }
    public Optional<Boolean> autoLogin() {
        return Optional.ofNullable(this.autoLogin);
    }
    public String clientId() {
        return this.clientId;
    }
    public String clientSecret() {
        return this.clientSecret;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public List<String> scopes() {
        return this.scopes == null ? List.of() : this.scopes;
    }
    public String tokenUrl() {
        return this.tokenUrl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GrafanaGrafanaUserConfigAuthGenericOauth defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean allowSignUp;
        private @Nullable List<String> allowedDomains;
        private @Nullable List<String> allowedOrganizations;
        private String apiUrl;
        private String authUrl;
        private @Nullable Boolean autoLogin;
        private String clientId;
        private String clientSecret;
        private @Nullable String name;
        private @Nullable List<String> scopes;
        private String tokenUrl;
        public Builder() {}
        public Builder(GrafanaGrafanaUserConfigAuthGenericOauth defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowSignUp = defaults.allowSignUp;
    	      this.allowedDomains = defaults.allowedDomains;
    	      this.allowedOrganizations = defaults.allowedOrganizations;
    	      this.apiUrl = defaults.apiUrl;
    	      this.authUrl = defaults.authUrl;
    	      this.autoLogin = defaults.autoLogin;
    	      this.clientId = defaults.clientId;
    	      this.clientSecret = defaults.clientSecret;
    	      this.name = defaults.name;
    	      this.scopes = defaults.scopes;
    	      this.tokenUrl = defaults.tokenUrl;
        }

        @CustomType.Setter
        public Builder allowSignUp(@Nullable Boolean allowSignUp) {
            this.allowSignUp = allowSignUp;
            return this;
        }
        @CustomType.Setter
        public Builder allowedDomains(@Nullable List<String> allowedDomains) {
            this.allowedDomains = allowedDomains;
            return this;
        }
        public Builder allowedDomains(String... allowedDomains) {
            return allowedDomains(List.of(allowedDomains));
        }
        @CustomType.Setter
        public Builder allowedOrganizations(@Nullable List<String> allowedOrganizations) {
            this.allowedOrganizations = allowedOrganizations;
            return this;
        }
        public Builder allowedOrganizations(String... allowedOrganizations) {
            return allowedOrganizations(List.of(allowedOrganizations));
        }
        @CustomType.Setter
        public Builder apiUrl(String apiUrl) {
            this.apiUrl = Objects.requireNonNull(apiUrl);
            return this;
        }
        @CustomType.Setter
        public Builder authUrl(String authUrl) {
            this.authUrl = Objects.requireNonNull(authUrl);
            return this;
        }
        @CustomType.Setter
        public Builder autoLogin(@Nullable Boolean autoLogin) {
            this.autoLogin = autoLogin;
            return this;
        }
        @CustomType.Setter
        public Builder clientId(String clientId) {
            this.clientId = Objects.requireNonNull(clientId);
            return this;
        }
        @CustomType.Setter
        public Builder clientSecret(String clientSecret) {
            this.clientSecret = Objects.requireNonNull(clientSecret);
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder scopes(@Nullable List<String> scopes) {
            this.scopes = scopes;
            return this;
        }
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }
        @CustomType.Setter
        public Builder tokenUrl(String tokenUrl) {
            this.tokenUrl = Objects.requireNonNull(tokenUrl);
            return this;
        }
        public GrafanaGrafanaUserConfigAuthGenericOauth build() {
            final var _resultValue = new GrafanaGrafanaUserConfigAuthGenericOauth();
            _resultValue.allowSignUp = allowSignUp;
            _resultValue.allowedDomains = allowedDomains;
            _resultValue.allowedOrganizations = allowedOrganizations;
            _resultValue.apiUrl = apiUrl;
            _resultValue.authUrl = authUrl;
            _resultValue.autoLogin = autoLogin;
            _resultValue.clientId = clientId;
            _resultValue.clientSecret = clientSecret;
            _resultValue.name = name;
            _resultValue.scopes = scopes;
            _resultValue.tokenUrl = tokenUrl;
            return _resultValue;
        }
    }
}
