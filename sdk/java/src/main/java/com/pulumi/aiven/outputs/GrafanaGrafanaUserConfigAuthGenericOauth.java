// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GrafanaGrafanaUserConfigAuthGenericOauth {
    private final @Nullable String allowSignUp;
    private final @Nullable List<String> allowedDomains;
    private final @Nullable List<String> allowedOrganizations;
    private final @Nullable String apiUrl;
    private final @Nullable String authUrl;
    private final @Nullable String clientId;
    private final @Nullable String clientSecret;
    private final @Nullable String name;
    private final @Nullable List<String> scopes;
    private final @Nullable String tokenUrl;

    @CustomType.Constructor
    private GrafanaGrafanaUserConfigAuthGenericOauth(
        @CustomType.Parameter("allowSignUp") @Nullable String allowSignUp,
        @CustomType.Parameter("allowedDomains") @Nullable List<String> allowedDomains,
        @CustomType.Parameter("allowedOrganizations") @Nullable List<String> allowedOrganizations,
        @CustomType.Parameter("apiUrl") @Nullable String apiUrl,
        @CustomType.Parameter("authUrl") @Nullable String authUrl,
        @CustomType.Parameter("clientId") @Nullable String clientId,
        @CustomType.Parameter("clientSecret") @Nullable String clientSecret,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("scopes") @Nullable List<String> scopes,
        @CustomType.Parameter("tokenUrl") @Nullable String tokenUrl) {
        this.allowSignUp = allowSignUp;
        this.allowedDomains = allowedDomains;
        this.allowedOrganizations = allowedOrganizations;
        this.apiUrl = apiUrl;
        this.authUrl = authUrl;
        this.clientId = clientId;
        this.clientSecret = clientSecret;
        this.name = name;
        this.scopes = scopes;
        this.tokenUrl = tokenUrl;
    }

    public Optional<String> allowSignUp() {
        return Optional.ofNullable(this.allowSignUp);
    }
    public List<String> allowedDomains() {
        return this.allowedDomains == null ? List.of() : this.allowedDomains;
    }
    public List<String> allowedOrganizations() {
        return this.allowedOrganizations == null ? List.of() : this.allowedOrganizations;
    }
    public Optional<String> apiUrl() {
        return Optional.ofNullable(this.apiUrl);
    }
    public Optional<String> authUrl() {
        return Optional.ofNullable(this.authUrl);
    }
    public Optional<String> clientId() {
        return Optional.ofNullable(this.clientId);
    }
    public Optional<String> clientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public List<String> scopes() {
        return this.scopes == null ? List.of() : this.scopes;
    }
    public Optional<String> tokenUrl() {
        return Optional.ofNullable(this.tokenUrl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GrafanaGrafanaUserConfigAuthGenericOauth defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String allowSignUp;
        private @Nullable List<String> allowedDomains;
        private @Nullable List<String> allowedOrganizations;
        private @Nullable String apiUrl;
        private @Nullable String authUrl;
        private @Nullable String clientId;
        private @Nullable String clientSecret;
        private @Nullable String name;
        private @Nullable List<String> scopes;
        private @Nullable String tokenUrl;

        public Builder() {
    	      // Empty
        }

        public Builder(GrafanaGrafanaUserConfigAuthGenericOauth defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowSignUp = defaults.allowSignUp;
    	      this.allowedDomains = defaults.allowedDomains;
    	      this.allowedOrganizations = defaults.allowedOrganizations;
    	      this.apiUrl = defaults.apiUrl;
    	      this.authUrl = defaults.authUrl;
    	      this.clientId = defaults.clientId;
    	      this.clientSecret = defaults.clientSecret;
    	      this.name = defaults.name;
    	      this.scopes = defaults.scopes;
    	      this.tokenUrl = defaults.tokenUrl;
        }

        public Builder allowSignUp(@Nullable String allowSignUp) {
            this.allowSignUp = allowSignUp;
            return this;
        }
        public Builder allowedDomains(@Nullable List<String> allowedDomains) {
            this.allowedDomains = allowedDomains;
            return this;
        }
        public Builder allowedDomains(String... allowedDomains) {
            return allowedDomains(List.of(allowedDomains));
        }
        public Builder allowedOrganizations(@Nullable List<String> allowedOrganizations) {
            this.allowedOrganizations = allowedOrganizations;
            return this;
        }
        public Builder allowedOrganizations(String... allowedOrganizations) {
            return allowedOrganizations(List.of(allowedOrganizations));
        }
        public Builder apiUrl(@Nullable String apiUrl) {
            this.apiUrl = apiUrl;
            return this;
        }
        public Builder authUrl(@Nullable String authUrl) {
            this.authUrl = authUrl;
            return this;
        }
        public Builder clientId(@Nullable String clientId) {
            this.clientId = clientId;
            return this;
        }
        public Builder clientSecret(@Nullable String clientSecret) {
            this.clientSecret = clientSecret;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder scopes(@Nullable List<String> scopes) {
            this.scopes = scopes;
            return this;
        }
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }
        public Builder tokenUrl(@Nullable String tokenUrl) {
            this.tokenUrl = tokenUrl;
            return this;
        }        public GrafanaGrafanaUserConfigAuthGenericOauth build() {
            return new GrafanaGrafanaUserConfigAuthGenericOauth(allowSignUp, allowedDomains, allowedOrganizations, apiUrl, authUrl, clientId, clientSecret, name, scopes, tokenUrl);
        }
    }
}
