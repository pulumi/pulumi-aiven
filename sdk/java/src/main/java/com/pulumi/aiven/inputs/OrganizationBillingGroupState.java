// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.aiven.inputs.OrganizationBillingGroupTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OrganizationBillingGroupState extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationBillingGroupState Empty = new OrganizationBillingGroupState();

    /**
     * ID of the billing address.
     * 
     */
    @Import(name="billingAddressId")
    private @Nullable Output<String> billingAddressId;

    /**
     * @return ID of the billing address.
     * 
     */
    public Optional<Output<String>> billingAddressId() {
        return Optional.ofNullable(this.billingAddressId);
    }

    /**
     * List of billing contact emails.
     * 
     */
    @Import(name="billingContactEmails")
    private @Nullable Output<List<String>> billingContactEmails;

    /**
     * @return List of billing contact emails.
     * 
     */
    public Optional<Output<List<String>>> billingContactEmails() {
        return Optional.ofNullable(this.billingContactEmails);
    }

    /**
     * Billing currency.
     * 
     */
    @Import(name="billingCurrency")
    private @Nullable Output<String> billingCurrency;

    /**
     * @return Billing currency.
     * 
     */
    public Optional<Output<String>> billingCurrency() {
        return Optional.ofNullable(this.billingCurrency);
    }

    /**
     * List of billing emails.
     * 
     */
    @Import(name="billingEmails")
    private @Nullable Output<List<String>> billingEmails;

    /**
     * @return List of billing emails.
     * 
     */
    public Optional<Output<List<String>>> billingEmails() {
        return Optional.ofNullable(this.billingEmails);
    }

    /**
     * ID of the billing group.
     * 
     */
    @Import(name="billingGroupId")
    private @Nullable Output<String> billingGroupId;

    /**
     * @return ID of the billing group.
     * 
     */
    public Optional<Output<String>> billingGroupId() {
        return Optional.ofNullable(this.billingGroupId);
    }

    /**
     * Name of the billing group.
     * 
     */
    @Import(name="billingGroupName")
    private @Nullable Output<String> billingGroupName;

    /**
     * @return Name of the billing group.
     * 
     */
    public Optional<Output<String>> billingGroupName() {
        return Optional.ofNullable(this.billingGroupName);
    }

    /**
     * Custom invoice text.
     * 
     */
    @Import(name="customInvoiceText")
    private @Nullable Output<String> customInvoiceText;

    /**
     * @return Custom invoice text.
     * 
     */
    public Optional<Output<String>> customInvoiceText() {
        return Optional.ofNullable(this.customInvoiceText);
    }

    /**
     * ID of the organization.
     * 
     */
    @Import(name="organizationId")
    private @Nullable Output<String> organizationId;

    /**
     * @return ID of the organization.
     * 
     */
    public Optional<Output<String>> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }

    /**
     * ID of the payment method.
     * 
     */
    @Import(name="paymentMethodId")
    private @Nullable Output<String> paymentMethodId;

    /**
     * @return ID of the payment method.
     * 
     */
    public Optional<Output<String>> paymentMethodId() {
        return Optional.ofNullable(this.paymentMethodId);
    }

    /**
     * ID of the shipping address.
     * 
     */
    @Import(name="shippingAddressId")
    private @Nullable Output<String> shippingAddressId;

    /**
     * @return ID of the shipping address.
     * 
     */
    public Optional<Output<String>> shippingAddressId() {
        return Optional.ofNullable(this.shippingAddressId);
    }

    @Import(name="timeouts")
    private @Nullable Output<OrganizationBillingGroupTimeoutsArgs> timeouts;

    public Optional<Output<OrganizationBillingGroupTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    /**
     * VAT ID.
     * 
     */
    @Import(name="vatId")
    private @Nullable Output<String> vatId;

    /**
     * @return VAT ID.
     * 
     */
    public Optional<Output<String>> vatId() {
        return Optional.ofNullable(this.vatId);
    }

    private OrganizationBillingGroupState() {}

    private OrganizationBillingGroupState(OrganizationBillingGroupState $) {
        this.billingAddressId = $.billingAddressId;
        this.billingContactEmails = $.billingContactEmails;
        this.billingCurrency = $.billingCurrency;
        this.billingEmails = $.billingEmails;
        this.billingGroupId = $.billingGroupId;
        this.billingGroupName = $.billingGroupName;
        this.customInvoiceText = $.customInvoiceText;
        this.organizationId = $.organizationId;
        this.paymentMethodId = $.paymentMethodId;
        this.shippingAddressId = $.shippingAddressId;
        this.timeouts = $.timeouts;
        this.vatId = $.vatId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationBillingGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationBillingGroupState $;

        public Builder() {
            $ = new OrganizationBillingGroupState();
        }

        public Builder(OrganizationBillingGroupState defaults) {
            $ = new OrganizationBillingGroupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param billingAddressId ID of the billing address.
         * 
         * @return builder
         * 
         */
        public Builder billingAddressId(@Nullable Output<String> billingAddressId) {
            $.billingAddressId = billingAddressId;
            return this;
        }

        /**
         * @param billingAddressId ID of the billing address.
         * 
         * @return builder
         * 
         */
        public Builder billingAddressId(String billingAddressId) {
            return billingAddressId(Output.of(billingAddressId));
        }

        /**
         * @param billingContactEmails List of billing contact emails.
         * 
         * @return builder
         * 
         */
        public Builder billingContactEmails(@Nullable Output<List<String>> billingContactEmails) {
            $.billingContactEmails = billingContactEmails;
            return this;
        }

        /**
         * @param billingContactEmails List of billing contact emails.
         * 
         * @return builder
         * 
         */
        public Builder billingContactEmails(List<String> billingContactEmails) {
            return billingContactEmails(Output.of(billingContactEmails));
        }

        /**
         * @param billingContactEmails List of billing contact emails.
         * 
         * @return builder
         * 
         */
        public Builder billingContactEmails(String... billingContactEmails) {
            return billingContactEmails(List.of(billingContactEmails));
        }

        /**
         * @param billingCurrency Billing currency.
         * 
         * @return builder
         * 
         */
        public Builder billingCurrency(@Nullable Output<String> billingCurrency) {
            $.billingCurrency = billingCurrency;
            return this;
        }

        /**
         * @param billingCurrency Billing currency.
         * 
         * @return builder
         * 
         */
        public Builder billingCurrency(String billingCurrency) {
            return billingCurrency(Output.of(billingCurrency));
        }

        /**
         * @param billingEmails List of billing emails.
         * 
         * @return builder
         * 
         */
        public Builder billingEmails(@Nullable Output<List<String>> billingEmails) {
            $.billingEmails = billingEmails;
            return this;
        }

        /**
         * @param billingEmails List of billing emails.
         * 
         * @return builder
         * 
         */
        public Builder billingEmails(List<String> billingEmails) {
            return billingEmails(Output.of(billingEmails));
        }

        /**
         * @param billingEmails List of billing emails.
         * 
         * @return builder
         * 
         */
        public Builder billingEmails(String... billingEmails) {
            return billingEmails(List.of(billingEmails));
        }

        /**
         * @param billingGroupId ID of the billing group.
         * 
         * @return builder
         * 
         */
        public Builder billingGroupId(@Nullable Output<String> billingGroupId) {
            $.billingGroupId = billingGroupId;
            return this;
        }

        /**
         * @param billingGroupId ID of the billing group.
         * 
         * @return builder
         * 
         */
        public Builder billingGroupId(String billingGroupId) {
            return billingGroupId(Output.of(billingGroupId));
        }

        /**
         * @param billingGroupName Name of the billing group.
         * 
         * @return builder
         * 
         */
        public Builder billingGroupName(@Nullable Output<String> billingGroupName) {
            $.billingGroupName = billingGroupName;
            return this;
        }

        /**
         * @param billingGroupName Name of the billing group.
         * 
         * @return builder
         * 
         */
        public Builder billingGroupName(String billingGroupName) {
            return billingGroupName(Output.of(billingGroupName));
        }

        /**
         * @param customInvoiceText Custom invoice text.
         * 
         * @return builder
         * 
         */
        public Builder customInvoiceText(@Nullable Output<String> customInvoiceText) {
            $.customInvoiceText = customInvoiceText;
            return this;
        }

        /**
         * @param customInvoiceText Custom invoice text.
         * 
         * @return builder
         * 
         */
        public Builder customInvoiceText(String customInvoiceText) {
            return customInvoiceText(Output.of(customInvoiceText));
        }

        /**
         * @param organizationId ID of the organization.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(@Nullable Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId ID of the organization.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        /**
         * @param paymentMethodId ID of the payment method.
         * 
         * @return builder
         * 
         */
        public Builder paymentMethodId(@Nullable Output<String> paymentMethodId) {
            $.paymentMethodId = paymentMethodId;
            return this;
        }

        /**
         * @param paymentMethodId ID of the payment method.
         * 
         * @return builder
         * 
         */
        public Builder paymentMethodId(String paymentMethodId) {
            return paymentMethodId(Output.of(paymentMethodId));
        }

        /**
         * @param shippingAddressId ID of the shipping address.
         * 
         * @return builder
         * 
         */
        public Builder shippingAddressId(@Nullable Output<String> shippingAddressId) {
            $.shippingAddressId = shippingAddressId;
            return this;
        }

        /**
         * @param shippingAddressId ID of the shipping address.
         * 
         * @return builder
         * 
         */
        public Builder shippingAddressId(String shippingAddressId) {
            return shippingAddressId(Output.of(shippingAddressId));
        }

        public Builder timeouts(@Nullable Output<OrganizationBillingGroupTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(OrganizationBillingGroupTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        /**
         * @param vatId VAT ID.
         * 
         * @return builder
         * 
         */
        public Builder vatId(@Nullable Output<String> vatId) {
            $.vatId = vatId;
            return this;
        }

        /**
         * @param vatId VAT ID.
         * 
         * @return builder
         * 
         */
        public Builder vatId(String vatId) {
            return vatId(Output.of(vatId));
        }

        public OrganizationBillingGroupState build() {
            return $;
        }
    }

}
