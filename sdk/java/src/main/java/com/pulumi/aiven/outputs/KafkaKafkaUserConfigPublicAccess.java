// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class KafkaKafkaUserConfigPublicAccess {
    /**
     * @return Kafka server provided values
     * 
     */
    private final @Nullable String kafka;
    private final @Nullable String kafkaConnect;
    private final @Nullable String kafkaRest;
    private final @Nullable String prometheus;
    private final @Nullable String schemaRegistry;

    @CustomType.Constructor
    private KafkaKafkaUserConfigPublicAccess(
        @CustomType.Parameter("kafka") @Nullable String kafka,
        @CustomType.Parameter("kafkaConnect") @Nullable String kafkaConnect,
        @CustomType.Parameter("kafkaRest") @Nullable String kafkaRest,
        @CustomType.Parameter("prometheus") @Nullable String prometheus,
        @CustomType.Parameter("schemaRegistry") @Nullable String schemaRegistry) {
        this.kafka = kafka;
        this.kafkaConnect = kafkaConnect;
        this.kafkaRest = kafkaRest;
        this.prometheus = prometheus;
        this.schemaRegistry = schemaRegistry;
    }

    /**
     * @return Kafka server provided values
     * 
     */
    public Optional<String> kafka() {
        return Optional.ofNullable(this.kafka);
    }
    public Optional<String> kafkaConnect() {
        return Optional.ofNullable(this.kafkaConnect);
    }
    public Optional<String> kafkaRest() {
        return Optional.ofNullable(this.kafkaRest);
    }
    public Optional<String> prometheus() {
        return Optional.ofNullable(this.prometheus);
    }
    public Optional<String> schemaRegistry() {
        return Optional.ofNullable(this.schemaRegistry);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KafkaKafkaUserConfigPublicAccess defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String kafka;
        private @Nullable String kafkaConnect;
        private @Nullable String kafkaRest;
        private @Nullable String prometheus;
        private @Nullable String schemaRegistry;

        public Builder() {
    	      // Empty
        }

        public Builder(KafkaKafkaUserConfigPublicAccess defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.kafka = defaults.kafka;
    	      this.kafkaConnect = defaults.kafkaConnect;
    	      this.kafkaRest = defaults.kafkaRest;
    	      this.prometheus = defaults.prometheus;
    	      this.schemaRegistry = defaults.schemaRegistry;
        }

        public Builder kafka(@Nullable String kafka) {
            this.kafka = kafka;
            return this;
        }
        public Builder kafkaConnect(@Nullable String kafkaConnect) {
            this.kafkaConnect = kafkaConnect;
            return this;
        }
        public Builder kafkaRest(@Nullable String kafkaRest) {
            this.kafkaRest = kafkaRest;
            return this;
        }
        public Builder prometheus(@Nullable String prometheus) {
            this.prometheus = prometheus;
            return this;
        }
        public Builder schemaRegistry(@Nullable String schemaRegistry) {
            this.schemaRegistry = schemaRegistry;
            return this;
        }        public KafkaKafkaUserConfigPublicAccess build() {
            return new KafkaKafkaUserConfigPublicAccess(kafka, kafkaConnect, kafkaRest, prometheus, schemaRegistry);
        }
    }
}
