// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OpenSearchOpensearchUserConfigOpensearchAuthFailureListenersIpRateLimitingArgs extends com.pulumi.resources.ResourceArgs {

    public static final OpenSearchOpensearchUserConfigOpensearchAuthFailureListenersIpRateLimitingArgs Empty = new OpenSearchOpensearchUserConfigOpensearchAuthFailureListenersIpRateLimitingArgs();

    /**
     * The number of login attempts allowed before login is blocked.
     * 
     */
    @Import(name="allowedTries")
    private @Nullable Output<Integer> allowedTries;

    /**
     * @return The number of login attempts allowed before login is blocked.
     * 
     */
    public Optional<Output<Integer>> allowedTries() {
        return Optional.ofNullable(this.allowedTries);
    }

    /**
     * The duration of time that login remains blocked after a failed login.
     * 
     */
    @Import(name="blockExpirySeconds")
    private @Nullable Output<Integer> blockExpirySeconds;

    /**
     * @return The duration of time that login remains blocked after a failed login.
     * 
     */
    public Optional<Output<Integer>> blockExpirySeconds() {
        return Optional.ofNullable(this.blockExpirySeconds);
    }

    /**
     * The maximum number of blocked IP addresses.
     * 
     */
    @Import(name="maxBlockedClients")
    private @Nullable Output<Integer> maxBlockedClients;

    /**
     * @return The maximum number of blocked IP addresses.
     * 
     */
    public Optional<Output<Integer>> maxBlockedClients() {
        return Optional.ofNullable(this.maxBlockedClients);
    }

    /**
     * The maximum number of tracked IP addresses that have failed login.
     * 
     */
    @Import(name="maxTrackedClients")
    private @Nullable Output<Integer> maxTrackedClients;

    /**
     * @return The maximum number of tracked IP addresses that have failed login.
     * 
     */
    public Optional<Output<Integer>> maxTrackedClients() {
        return Optional.ofNullable(this.maxTrackedClients);
    }

    /**
     * The window of time in which the value for `allowed_tries` is enforced.
     * 
     */
    @Import(name="timeWindowSeconds")
    private @Nullable Output<Integer> timeWindowSeconds;

    /**
     * @return The window of time in which the value for `allowed_tries` is enforced.
     * 
     */
    public Optional<Output<Integer>> timeWindowSeconds() {
        return Optional.ofNullable(this.timeWindowSeconds);
    }

    /**
     * The type of rate limiting.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of rate limiting.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private OpenSearchOpensearchUserConfigOpensearchAuthFailureListenersIpRateLimitingArgs() {}

    private OpenSearchOpensearchUserConfigOpensearchAuthFailureListenersIpRateLimitingArgs(OpenSearchOpensearchUserConfigOpensearchAuthFailureListenersIpRateLimitingArgs $) {
        this.allowedTries = $.allowedTries;
        this.blockExpirySeconds = $.blockExpirySeconds;
        this.maxBlockedClients = $.maxBlockedClients;
        this.maxTrackedClients = $.maxTrackedClients;
        this.timeWindowSeconds = $.timeWindowSeconds;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OpenSearchOpensearchUserConfigOpensearchAuthFailureListenersIpRateLimitingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OpenSearchOpensearchUserConfigOpensearchAuthFailureListenersIpRateLimitingArgs $;

        public Builder() {
            $ = new OpenSearchOpensearchUserConfigOpensearchAuthFailureListenersIpRateLimitingArgs();
        }

        public Builder(OpenSearchOpensearchUserConfigOpensearchAuthFailureListenersIpRateLimitingArgs defaults) {
            $ = new OpenSearchOpensearchUserConfigOpensearchAuthFailureListenersIpRateLimitingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedTries The number of login attempts allowed before login is blocked.
         * 
         * @return builder
         * 
         */
        public Builder allowedTries(@Nullable Output<Integer> allowedTries) {
            $.allowedTries = allowedTries;
            return this;
        }

        /**
         * @param allowedTries The number of login attempts allowed before login is blocked.
         * 
         * @return builder
         * 
         */
        public Builder allowedTries(Integer allowedTries) {
            return allowedTries(Output.of(allowedTries));
        }

        /**
         * @param blockExpirySeconds The duration of time that login remains blocked after a failed login.
         * 
         * @return builder
         * 
         */
        public Builder blockExpirySeconds(@Nullable Output<Integer> blockExpirySeconds) {
            $.blockExpirySeconds = blockExpirySeconds;
            return this;
        }

        /**
         * @param blockExpirySeconds The duration of time that login remains blocked after a failed login.
         * 
         * @return builder
         * 
         */
        public Builder blockExpirySeconds(Integer blockExpirySeconds) {
            return blockExpirySeconds(Output.of(blockExpirySeconds));
        }

        /**
         * @param maxBlockedClients The maximum number of blocked IP addresses.
         * 
         * @return builder
         * 
         */
        public Builder maxBlockedClients(@Nullable Output<Integer> maxBlockedClients) {
            $.maxBlockedClients = maxBlockedClients;
            return this;
        }

        /**
         * @param maxBlockedClients The maximum number of blocked IP addresses.
         * 
         * @return builder
         * 
         */
        public Builder maxBlockedClients(Integer maxBlockedClients) {
            return maxBlockedClients(Output.of(maxBlockedClients));
        }

        /**
         * @param maxTrackedClients The maximum number of tracked IP addresses that have failed login.
         * 
         * @return builder
         * 
         */
        public Builder maxTrackedClients(@Nullable Output<Integer> maxTrackedClients) {
            $.maxTrackedClients = maxTrackedClients;
            return this;
        }

        /**
         * @param maxTrackedClients The maximum number of tracked IP addresses that have failed login.
         * 
         * @return builder
         * 
         */
        public Builder maxTrackedClients(Integer maxTrackedClients) {
            return maxTrackedClients(Output.of(maxTrackedClients));
        }

        /**
         * @param timeWindowSeconds The window of time in which the value for `allowed_tries` is enforced.
         * 
         * @return builder
         * 
         */
        public Builder timeWindowSeconds(@Nullable Output<Integer> timeWindowSeconds) {
            $.timeWindowSeconds = timeWindowSeconds;
            return this;
        }

        /**
         * @param timeWindowSeconds The window of time in which the value for `allowed_tries` is enforced.
         * 
         * @return builder
         * 
         */
        public Builder timeWindowSeconds(Integer timeWindowSeconds) {
            return timeWindowSeconds(Output.of(timeWindowSeconds));
        }

        /**
         * @param type The type of rate limiting.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of rate limiting.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public OpenSearchOpensearchUserConfigOpensearchAuthFailureListenersIpRateLimitingArgs build() {
            return $;
        }
    }

}
