// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.aiven.inputs.OrganizationApplicationUserTokenTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OrganizationApplicationUserTokenState extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationApplicationUserTokenState Empty = new OrganizationApplicationUserTokenState();

    /**
     * Create Time.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return Create Time.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * True for tokens explicitly created via the access_tokens API, false for tokens created via login.
     * 
     */
    @Import(name="createdManually")
    private @Nullable Output<Boolean> createdManually;

    /**
     * @return True for tokens explicitly created via the access_tokens API, false for tokens created via login.
     * 
     */
    public Optional<Output<Boolean>> createdManually() {
        return Optional.ofNullable(this.createdManually);
    }

    /**
     * true if API request was made with this access token.
     * 
     */
    @Import(name="currentlyActive")
    private @Nullable Output<Boolean> currentlyActive;

    /**
     * @return true if API request was made with this access token.
     * 
     */
    public Optional<Output<Boolean>> currentlyActive() {
        return Optional.ofNullable(this.currentlyActive);
    }

    /**
     * Description. Maximum length: `1000`. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description. Maximum length: `1000`. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Timestamp when the access token will expire unless extended, if ever.
     * 
     */
    @Import(name="expiryTime")
    private @Nullable Output<String> expiryTime;

    /**
     * @return Timestamp when the access token will expire unless extended, if ever.
     * 
     */
    public Optional<Output<String>> expiryTime() {
        return Optional.ofNullable(this.expiryTime);
    }

    /**
     * Extend token expiration time when token is used. Only applicable if max*age*seconds is specified. The default value is `false`. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="extendWhenUsed")
    private @Nullable Output<Boolean> extendWhenUsed;

    /**
     * @return Extend token expiration time when token is used. Only applicable if max*age*seconds is specified. The default value is `false`. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<Boolean>> extendWhenUsed() {
        return Optional.ofNullable(this.extendWhenUsed);
    }

    /**
     * Full Token.
     * 
     */
    @Import(name="fullToken")
    private @Nullable Output<String> fullToken;

    /**
     * @return Full Token.
     * 
     */
    public Optional<Output<String>> fullToken() {
        return Optional.ofNullable(this.fullToken);
    }

    /**
     * List of allowed IP ranges. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="ipAllowlists")
    private @Nullable Output<List<String>> ipAllowlists;

    /**
     * @return List of allowed IP ranges. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<List<String>>> ipAllowlists() {
        return Optional.ofNullable(this.ipAllowlists);
    }

    /**
     * IP address the access token was last used from in case it has ever been used.
     * 
     */
    @Import(name="lastIp")
    private @Nullable Output<String> lastIp;

    /**
     * @return IP address the access token was last used from in case it has ever been used.
     * 
     */
    public Optional<Output<String>> lastIp() {
        return Optional.ofNullable(this.lastIp);
    }

    /**
     * Timestamp when the access token was last used, if ever.
     * 
     */
    @Import(name="lastUsedTime")
    private @Nullable Output<String> lastUsedTime;

    /**
     * @return Timestamp when the access token was last used, if ever.
     * 
     */
    public Optional<Output<String>> lastUsedTime() {
        return Optional.ofNullable(this.lastUsedTime);
    }

    /**
     * User agent string of the client that last used the token in case it has ever been used.
     * 
     */
    @Import(name="lastUserAgent")
    private @Nullable Output<String> lastUserAgent;

    /**
     * @return User agent string of the client that last used the token in case it has ever been used.
     * 
     */
    public Optional<Output<String>> lastUserAgent() {
        return Optional.ofNullable(this.lastUserAgent);
    }

    /**
     * Human readable user agent string of the client that last used the token in case user agent is known.
     * 
     */
    @Import(name="lastUserAgentHumanReadable")
    private @Nullable Output<String> lastUserAgentHumanReadable;

    /**
     * @return Human readable user agent string of the client that last used the token in case user agent is known.
     * 
     */
    public Optional<Output<String>> lastUserAgentHumanReadable() {
        return Optional.ofNullable(this.lastUserAgentHumanReadable);
    }

    /**
     * Time the token remains valid since creation (or since last use if extend*when*used is true). Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="maxAgeSeconds")
    private @Nullable Output<Integer> maxAgeSeconds;

    /**
     * @return Time the token remains valid since creation (or since last use if extend*when*used is true). Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<Integer>> maxAgeSeconds() {
        return Optional.ofNullable(this.maxAgeSeconds);
    }

    /**
     * ID of an organization. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="organizationId")
    private @Nullable Output<String> organizationId;

    /**
     * @return ID of an organization. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }

    /**
     * Scopes this token is restricted to if specified. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="scopes")
    private @Nullable Output<List<String>> scopes;

    /**
     * @return Scopes this token is restricted to if specified. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<List<String>>> scopes() {
        return Optional.ofNullable(this.scopes);
    }

    @Import(name="timeouts")
    private @Nullable Output<OrganizationApplicationUserTokenTimeoutsArgs> timeouts;

    public Optional<Output<OrganizationApplicationUserTokenTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    /**
     * First characters of the actual token value. Full value is only exposed after creation. This value is used when updating or revoking tokens. Note that the value may contain /, + and = characters and must be URL encoded when used (/ =&amp;gt; %2F, + =&amp;gt; %2B, = =&amp;gt; %3D).
     * 
     */
    @Import(name="tokenPrefix")
    private @Nullable Output<String> tokenPrefix;

    /**
     * @return First characters of the actual token value. Full value is only exposed after creation. This value is used when updating or revoking tokens. Note that the value may contain /, + and = characters and must be URL encoded when used (/ =&amp;gt; %2F, + =&amp;gt; %2B, = =&amp;gt; %3D).
     * 
     */
    public Optional<Output<String>> tokenPrefix() {
        return Optional.ofNullable(this.tokenPrefix);
    }

    /**
     * User ID. Changing this property forces recreation of the resource.
     * 
     */
    @Import(name="userId")
    private @Nullable Output<String> userId;

    /**
     * @return User ID. Changing this property forces recreation of the resource.
     * 
     */
    public Optional<Output<String>> userId() {
        return Optional.ofNullable(this.userId);
    }

    private OrganizationApplicationUserTokenState() {}

    private OrganizationApplicationUserTokenState(OrganizationApplicationUserTokenState $) {
        this.createTime = $.createTime;
        this.createdManually = $.createdManually;
        this.currentlyActive = $.currentlyActive;
        this.description = $.description;
        this.expiryTime = $.expiryTime;
        this.extendWhenUsed = $.extendWhenUsed;
        this.fullToken = $.fullToken;
        this.ipAllowlists = $.ipAllowlists;
        this.lastIp = $.lastIp;
        this.lastUsedTime = $.lastUsedTime;
        this.lastUserAgent = $.lastUserAgent;
        this.lastUserAgentHumanReadable = $.lastUserAgentHumanReadable;
        this.maxAgeSeconds = $.maxAgeSeconds;
        this.organizationId = $.organizationId;
        this.scopes = $.scopes;
        this.timeouts = $.timeouts;
        this.tokenPrefix = $.tokenPrefix;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationApplicationUserTokenState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationApplicationUserTokenState $;

        public Builder() {
            $ = new OrganizationApplicationUserTokenState();
        }

        public Builder(OrganizationApplicationUserTokenState defaults) {
            $ = new OrganizationApplicationUserTokenState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createTime Create Time.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime Create Time.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param createdManually True for tokens explicitly created via the access_tokens API, false for tokens created via login.
         * 
         * @return builder
         * 
         */
        public Builder createdManually(@Nullable Output<Boolean> createdManually) {
            $.createdManually = createdManually;
            return this;
        }

        /**
         * @param createdManually True for tokens explicitly created via the access_tokens API, false for tokens created via login.
         * 
         * @return builder
         * 
         */
        public Builder createdManually(Boolean createdManually) {
            return createdManually(Output.of(createdManually));
        }

        /**
         * @param currentlyActive true if API request was made with this access token.
         * 
         * @return builder
         * 
         */
        public Builder currentlyActive(@Nullable Output<Boolean> currentlyActive) {
            $.currentlyActive = currentlyActive;
            return this;
        }

        /**
         * @param currentlyActive true if API request was made with this access token.
         * 
         * @return builder
         * 
         */
        public Builder currentlyActive(Boolean currentlyActive) {
            return currentlyActive(Output.of(currentlyActive));
        }

        /**
         * @param description Description. Maximum length: `1000`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description. Maximum length: `1000`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param expiryTime Timestamp when the access token will expire unless extended, if ever.
         * 
         * @return builder
         * 
         */
        public Builder expiryTime(@Nullable Output<String> expiryTime) {
            $.expiryTime = expiryTime;
            return this;
        }

        /**
         * @param expiryTime Timestamp when the access token will expire unless extended, if ever.
         * 
         * @return builder
         * 
         */
        public Builder expiryTime(String expiryTime) {
            return expiryTime(Output.of(expiryTime));
        }

        /**
         * @param extendWhenUsed Extend token expiration time when token is used. Only applicable if max*age*seconds is specified. The default value is `false`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder extendWhenUsed(@Nullable Output<Boolean> extendWhenUsed) {
            $.extendWhenUsed = extendWhenUsed;
            return this;
        }

        /**
         * @param extendWhenUsed Extend token expiration time when token is used. Only applicable if max*age*seconds is specified. The default value is `false`. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder extendWhenUsed(Boolean extendWhenUsed) {
            return extendWhenUsed(Output.of(extendWhenUsed));
        }

        /**
         * @param fullToken Full Token.
         * 
         * @return builder
         * 
         */
        public Builder fullToken(@Nullable Output<String> fullToken) {
            $.fullToken = fullToken;
            return this;
        }

        /**
         * @param fullToken Full Token.
         * 
         * @return builder
         * 
         */
        public Builder fullToken(String fullToken) {
            return fullToken(Output.of(fullToken));
        }

        /**
         * @param ipAllowlists List of allowed IP ranges. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder ipAllowlists(@Nullable Output<List<String>> ipAllowlists) {
            $.ipAllowlists = ipAllowlists;
            return this;
        }

        /**
         * @param ipAllowlists List of allowed IP ranges. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder ipAllowlists(List<String> ipAllowlists) {
            return ipAllowlists(Output.of(ipAllowlists));
        }

        /**
         * @param ipAllowlists List of allowed IP ranges. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder ipAllowlists(String... ipAllowlists) {
            return ipAllowlists(List.of(ipAllowlists));
        }

        /**
         * @param lastIp IP address the access token was last used from in case it has ever been used.
         * 
         * @return builder
         * 
         */
        public Builder lastIp(@Nullable Output<String> lastIp) {
            $.lastIp = lastIp;
            return this;
        }

        /**
         * @param lastIp IP address the access token was last used from in case it has ever been used.
         * 
         * @return builder
         * 
         */
        public Builder lastIp(String lastIp) {
            return lastIp(Output.of(lastIp));
        }

        /**
         * @param lastUsedTime Timestamp when the access token was last used, if ever.
         * 
         * @return builder
         * 
         */
        public Builder lastUsedTime(@Nullable Output<String> lastUsedTime) {
            $.lastUsedTime = lastUsedTime;
            return this;
        }

        /**
         * @param lastUsedTime Timestamp when the access token was last used, if ever.
         * 
         * @return builder
         * 
         */
        public Builder lastUsedTime(String lastUsedTime) {
            return lastUsedTime(Output.of(lastUsedTime));
        }

        /**
         * @param lastUserAgent User agent string of the client that last used the token in case it has ever been used.
         * 
         * @return builder
         * 
         */
        public Builder lastUserAgent(@Nullable Output<String> lastUserAgent) {
            $.lastUserAgent = lastUserAgent;
            return this;
        }

        /**
         * @param lastUserAgent User agent string of the client that last used the token in case it has ever been used.
         * 
         * @return builder
         * 
         */
        public Builder lastUserAgent(String lastUserAgent) {
            return lastUserAgent(Output.of(lastUserAgent));
        }

        /**
         * @param lastUserAgentHumanReadable Human readable user agent string of the client that last used the token in case user agent is known.
         * 
         * @return builder
         * 
         */
        public Builder lastUserAgentHumanReadable(@Nullable Output<String> lastUserAgentHumanReadable) {
            $.lastUserAgentHumanReadable = lastUserAgentHumanReadable;
            return this;
        }

        /**
         * @param lastUserAgentHumanReadable Human readable user agent string of the client that last used the token in case user agent is known.
         * 
         * @return builder
         * 
         */
        public Builder lastUserAgentHumanReadable(String lastUserAgentHumanReadable) {
            return lastUserAgentHumanReadable(Output.of(lastUserAgentHumanReadable));
        }

        /**
         * @param maxAgeSeconds Time the token remains valid since creation (or since last use if extend*when*used is true). Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder maxAgeSeconds(@Nullable Output<Integer> maxAgeSeconds) {
            $.maxAgeSeconds = maxAgeSeconds;
            return this;
        }

        /**
         * @param maxAgeSeconds Time the token remains valid since creation (or since last use if extend*when*used is true). Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder maxAgeSeconds(Integer maxAgeSeconds) {
            return maxAgeSeconds(Output.of(maxAgeSeconds));
        }

        /**
         * @param organizationId ID of an organization. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(@Nullable Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId ID of an organization. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        /**
         * @param scopes Scopes this token is restricted to if specified. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder scopes(@Nullable Output<List<String>> scopes) {
            $.scopes = scopes;
            return this;
        }

        /**
         * @param scopes Scopes this token is restricted to if specified. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder scopes(List<String> scopes) {
            return scopes(Output.of(scopes));
        }

        /**
         * @param scopes Scopes this token is restricted to if specified. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }

        public Builder timeouts(@Nullable Output<OrganizationApplicationUserTokenTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(OrganizationApplicationUserTokenTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        /**
         * @param tokenPrefix First characters of the actual token value. Full value is only exposed after creation. This value is used when updating or revoking tokens. Note that the value may contain /, + and = characters and must be URL encoded when used (/ =&amp;gt; %2F, + =&amp;gt; %2B, = =&amp;gt; %3D).
         * 
         * @return builder
         * 
         */
        public Builder tokenPrefix(@Nullable Output<String> tokenPrefix) {
            $.tokenPrefix = tokenPrefix;
            return this;
        }

        /**
         * @param tokenPrefix First characters of the actual token value. Full value is only exposed after creation. This value is used when updating or revoking tokens. Note that the value may contain /, + and = characters and must be URL encoded when used (/ =&amp;gt; %2F, + =&amp;gt; %2B, = =&amp;gt; %3D).
         * 
         * @return builder
         * 
         */
        public Builder tokenPrefix(String tokenPrefix) {
            return tokenPrefix(Output.of(tokenPrefix));
        }

        /**
         * @param userId User ID. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder userId(@Nullable Output<String> userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param userId User ID. Changing this property forces recreation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder userId(String userId) {
            return userId(Output.of(userId));
        }

        public OrganizationApplicationUserTokenState build() {
            return $;
        }
    }

}
