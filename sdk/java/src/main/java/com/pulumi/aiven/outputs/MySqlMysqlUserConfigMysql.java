// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MySqlMysqlUserConfigMysql {
    private @Nullable String connectTimeout;
    private @Nullable String defaultTimeZone;
    private @Nullable String groupConcatMaxLen;
    private @Nullable String informationSchemaStatsExpiry;
    private @Nullable String innodbChangeBufferMaxSize;
    private @Nullable String innodbFlushNeighbors;
    private @Nullable String innodbFtMinTokenSize;
    private @Nullable String innodbFtServerStopwordTable;
    private @Nullable String innodbLockWaitTimeout;
    private @Nullable String innodbLogBufferSize;
    private @Nullable String innodbOnlineAlterLogMaxSize;
    private @Nullable String innodbPrintAllDeadlocks;
    private @Nullable String innodbReadIoThreads;
    private @Nullable String innodbRollbackOnTimeout;
    private @Nullable String innodbThreadConcurrency;
    private @Nullable String innodbWriteIoThreads;
    private @Nullable String interactiveTimeout;
    private @Nullable String internalTmpMemStorageEngine;
    private @Nullable String longQueryTime;
    private @Nullable String maxAllowedPacket;
    private @Nullable String maxHeapTableSize;
    private @Nullable String netBufferLength;
    private @Nullable String netReadTimeout;
    private @Nullable String netWriteTimeout;
    private @Nullable String slowQueryLog;
    private @Nullable String sortBufferSize;
    private @Nullable String sqlMode;
    private @Nullable String sqlRequirePrimaryKey;
    private @Nullable String tmpTableSize;
    private @Nullable String waitTimeout;

    private MySqlMysqlUserConfigMysql() {}
    public Optional<String> connectTimeout() {
        return Optional.ofNullable(this.connectTimeout);
    }
    public Optional<String> defaultTimeZone() {
        return Optional.ofNullable(this.defaultTimeZone);
    }
    public Optional<String> groupConcatMaxLen() {
        return Optional.ofNullable(this.groupConcatMaxLen);
    }
    public Optional<String> informationSchemaStatsExpiry() {
        return Optional.ofNullable(this.informationSchemaStatsExpiry);
    }
    public Optional<String> innodbChangeBufferMaxSize() {
        return Optional.ofNullable(this.innodbChangeBufferMaxSize);
    }
    public Optional<String> innodbFlushNeighbors() {
        return Optional.ofNullable(this.innodbFlushNeighbors);
    }
    public Optional<String> innodbFtMinTokenSize() {
        return Optional.ofNullable(this.innodbFtMinTokenSize);
    }
    public Optional<String> innodbFtServerStopwordTable() {
        return Optional.ofNullable(this.innodbFtServerStopwordTable);
    }
    public Optional<String> innodbLockWaitTimeout() {
        return Optional.ofNullable(this.innodbLockWaitTimeout);
    }
    public Optional<String> innodbLogBufferSize() {
        return Optional.ofNullable(this.innodbLogBufferSize);
    }
    public Optional<String> innodbOnlineAlterLogMaxSize() {
        return Optional.ofNullable(this.innodbOnlineAlterLogMaxSize);
    }
    public Optional<String> innodbPrintAllDeadlocks() {
        return Optional.ofNullable(this.innodbPrintAllDeadlocks);
    }
    public Optional<String> innodbReadIoThreads() {
        return Optional.ofNullable(this.innodbReadIoThreads);
    }
    public Optional<String> innodbRollbackOnTimeout() {
        return Optional.ofNullable(this.innodbRollbackOnTimeout);
    }
    public Optional<String> innodbThreadConcurrency() {
        return Optional.ofNullable(this.innodbThreadConcurrency);
    }
    public Optional<String> innodbWriteIoThreads() {
        return Optional.ofNullable(this.innodbWriteIoThreads);
    }
    public Optional<String> interactiveTimeout() {
        return Optional.ofNullable(this.interactiveTimeout);
    }
    public Optional<String> internalTmpMemStorageEngine() {
        return Optional.ofNullable(this.internalTmpMemStorageEngine);
    }
    public Optional<String> longQueryTime() {
        return Optional.ofNullable(this.longQueryTime);
    }
    public Optional<String> maxAllowedPacket() {
        return Optional.ofNullable(this.maxAllowedPacket);
    }
    public Optional<String> maxHeapTableSize() {
        return Optional.ofNullable(this.maxHeapTableSize);
    }
    public Optional<String> netBufferLength() {
        return Optional.ofNullable(this.netBufferLength);
    }
    public Optional<String> netReadTimeout() {
        return Optional.ofNullable(this.netReadTimeout);
    }
    public Optional<String> netWriteTimeout() {
        return Optional.ofNullable(this.netWriteTimeout);
    }
    public Optional<String> slowQueryLog() {
        return Optional.ofNullable(this.slowQueryLog);
    }
    public Optional<String> sortBufferSize() {
        return Optional.ofNullable(this.sortBufferSize);
    }
    public Optional<String> sqlMode() {
        return Optional.ofNullable(this.sqlMode);
    }
    public Optional<String> sqlRequirePrimaryKey() {
        return Optional.ofNullable(this.sqlRequirePrimaryKey);
    }
    public Optional<String> tmpTableSize() {
        return Optional.ofNullable(this.tmpTableSize);
    }
    public Optional<String> waitTimeout() {
        return Optional.ofNullable(this.waitTimeout);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MySqlMysqlUserConfigMysql defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String connectTimeout;
        private @Nullable String defaultTimeZone;
        private @Nullable String groupConcatMaxLen;
        private @Nullable String informationSchemaStatsExpiry;
        private @Nullable String innodbChangeBufferMaxSize;
        private @Nullable String innodbFlushNeighbors;
        private @Nullable String innodbFtMinTokenSize;
        private @Nullable String innodbFtServerStopwordTable;
        private @Nullable String innodbLockWaitTimeout;
        private @Nullable String innodbLogBufferSize;
        private @Nullable String innodbOnlineAlterLogMaxSize;
        private @Nullable String innodbPrintAllDeadlocks;
        private @Nullable String innodbReadIoThreads;
        private @Nullable String innodbRollbackOnTimeout;
        private @Nullable String innodbThreadConcurrency;
        private @Nullable String innodbWriteIoThreads;
        private @Nullable String interactiveTimeout;
        private @Nullable String internalTmpMemStorageEngine;
        private @Nullable String longQueryTime;
        private @Nullable String maxAllowedPacket;
        private @Nullable String maxHeapTableSize;
        private @Nullable String netBufferLength;
        private @Nullable String netReadTimeout;
        private @Nullable String netWriteTimeout;
        private @Nullable String slowQueryLog;
        private @Nullable String sortBufferSize;
        private @Nullable String sqlMode;
        private @Nullable String sqlRequirePrimaryKey;
        private @Nullable String tmpTableSize;
        private @Nullable String waitTimeout;
        public Builder() {}
        public Builder(MySqlMysqlUserConfigMysql defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectTimeout = defaults.connectTimeout;
    	      this.defaultTimeZone = defaults.defaultTimeZone;
    	      this.groupConcatMaxLen = defaults.groupConcatMaxLen;
    	      this.informationSchemaStatsExpiry = defaults.informationSchemaStatsExpiry;
    	      this.innodbChangeBufferMaxSize = defaults.innodbChangeBufferMaxSize;
    	      this.innodbFlushNeighbors = defaults.innodbFlushNeighbors;
    	      this.innodbFtMinTokenSize = defaults.innodbFtMinTokenSize;
    	      this.innodbFtServerStopwordTable = defaults.innodbFtServerStopwordTable;
    	      this.innodbLockWaitTimeout = defaults.innodbLockWaitTimeout;
    	      this.innodbLogBufferSize = defaults.innodbLogBufferSize;
    	      this.innodbOnlineAlterLogMaxSize = defaults.innodbOnlineAlterLogMaxSize;
    	      this.innodbPrintAllDeadlocks = defaults.innodbPrintAllDeadlocks;
    	      this.innodbReadIoThreads = defaults.innodbReadIoThreads;
    	      this.innodbRollbackOnTimeout = defaults.innodbRollbackOnTimeout;
    	      this.innodbThreadConcurrency = defaults.innodbThreadConcurrency;
    	      this.innodbWriteIoThreads = defaults.innodbWriteIoThreads;
    	      this.interactiveTimeout = defaults.interactiveTimeout;
    	      this.internalTmpMemStorageEngine = defaults.internalTmpMemStorageEngine;
    	      this.longQueryTime = defaults.longQueryTime;
    	      this.maxAllowedPacket = defaults.maxAllowedPacket;
    	      this.maxHeapTableSize = defaults.maxHeapTableSize;
    	      this.netBufferLength = defaults.netBufferLength;
    	      this.netReadTimeout = defaults.netReadTimeout;
    	      this.netWriteTimeout = defaults.netWriteTimeout;
    	      this.slowQueryLog = defaults.slowQueryLog;
    	      this.sortBufferSize = defaults.sortBufferSize;
    	      this.sqlMode = defaults.sqlMode;
    	      this.sqlRequirePrimaryKey = defaults.sqlRequirePrimaryKey;
    	      this.tmpTableSize = defaults.tmpTableSize;
    	      this.waitTimeout = defaults.waitTimeout;
        }

        @CustomType.Setter
        public Builder connectTimeout(@Nullable String connectTimeout) {
            this.connectTimeout = connectTimeout;
            return this;
        }
        @CustomType.Setter
        public Builder defaultTimeZone(@Nullable String defaultTimeZone) {
            this.defaultTimeZone = defaultTimeZone;
            return this;
        }
        @CustomType.Setter
        public Builder groupConcatMaxLen(@Nullable String groupConcatMaxLen) {
            this.groupConcatMaxLen = groupConcatMaxLen;
            return this;
        }
        @CustomType.Setter
        public Builder informationSchemaStatsExpiry(@Nullable String informationSchemaStatsExpiry) {
            this.informationSchemaStatsExpiry = informationSchemaStatsExpiry;
            return this;
        }
        @CustomType.Setter
        public Builder innodbChangeBufferMaxSize(@Nullable String innodbChangeBufferMaxSize) {
            this.innodbChangeBufferMaxSize = innodbChangeBufferMaxSize;
            return this;
        }
        @CustomType.Setter
        public Builder innodbFlushNeighbors(@Nullable String innodbFlushNeighbors) {
            this.innodbFlushNeighbors = innodbFlushNeighbors;
            return this;
        }
        @CustomType.Setter
        public Builder innodbFtMinTokenSize(@Nullable String innodbFtMinTokenSize) {
            this.innodbFtMinTokenSize = innodbFtMinTokenSize;
            return this;
        }
        @CustomType.Setter
        public Builder innodbFtServerStopwordTable(@Nullable String innodbFtServerStopwordTable) {
            this.innodbFtServerStopwordTable = innodbFtServerStopwordTable;
            return this;
        }
        @CustomType.Setter
        public Builder innodbLockWaitTimeout(@Nullable String innodbLockWaitTimeout) {
            this.innodbLockWaitTimeout = innodbLockWaitTimeout;
            return this;
        }
        @CustomType.Setter
        public Builder innodbLogBufferSize(@Nullable String innodbLogBufferSize) {
            this.innodbLogBufferSize = innodbLogBufferSize;
            return this;
        }
        @CustomType.Setter
        public Builder innodbOnlineAlterLogMaxSize(@Nullable String innodbOnlineAlterLogMaxSize) {
            this.innodbOnlineAlterLogMaxSize = innodbOnlineAlterLogMaxSize;
            return this;
        }
        @CustomType.Setter
        public Builder innodbPrintAllDeadlocks(@Nullable String innodbPrintAllDeadlocks) {
            this.innodbPrintAllDeadlocks = innodbPrintAllDeadlocks;
            return this;
        }
        @CustomType.Setter
        public Builder innodbReadIoThreads(@Nullable String innodbReadIoThreads) {
            this.innodbReadIoThreads = innodbReadIoThreads;
            return this;
        }
        @CustomType.Setter
        public Builder innodbRollbackOnTimeout(@Nullable String innodbRollbackOnTimeout) {
            this.innodbRollbackOnTimeout = innodbRollbackOnTimeout;
            return this;
        }
        @CustomType.Setter
        public Builder innodbThreadConcurrency(@Nullable String innodbThreadConcurrency) {
            this.innodbThreadConcurrency = innodbThreadConcurrency;
            return this;
        }
        @CustomType.Setter
        public Builder innodbWriteIoThreads(@Nullable String innodbWriteIoThreads) {
            this.innodbWriteIoThreads = innodbWriteIoThreads;
            return this;
        }
        @CustomType.Setter
        public Builder interactiveTimeout(@Nullable String interactiveTimeout) {
            this.interactiveTimeout = interactiveTimeout;
            return this;
        }
        @CustomType.Setter
        public Builder internalTmpMemStorageEngine(@Nullable String internalTmpMemStorageEngine) {
            this.internalTmpMemStorageEngine = internalTmpMemStorageEngine;
            return this;
        }
        @CustomType.Setter
        public Builder longQueryTime(@Nullable String longQueryTime) {
            this.longQueryTime = longQueryTime;
            return this;
        }
        @CustomType.Setter
        public Builder maxAllowedPacket(@Nullable String maxAllowedPacket) {
            this.maxAllowedPacket = maxAllowedPacket;
            return this;
        }
        @CustomType.Setter
        public Builder maxHeapTableSize(@Nullable String maxHeapTableSize) {
            this.maxHeapTableSize = maxHeapTableSize;
            return this;
        }
        @CustomType.Setter
        public Builder netBufferLength(@Nullable String netBufferLength) {
            this.netBufferLength = netBufferLength;
            return this;
        }
        @CustomType.Setter
        public Builder netReadTimeout(@Nullable String netReadTimeout) {
            this.netReadTimeout = netReadTimeout;
            return this;
        }
        @CustomType.Setter
        public Builder netWriteTimeout(@Nullable String netWriteTimeout) {
            this.netWriteTimeout = netWriteTimeout;
            return this;
        }
        @CustomType.Setter
        public Builder slowQueryLog(@Nullable String slowQueryLog) {
            this.slowQueryLog = slowQueryLog;
            return this;
        }
        @CustomType.Setter
        public Builder sortBufferSize(@Nullable String sortBufferSize) {
            this.sortBufferSize = sortBufferSize;
            return this;
        }
        @CustomType.Setter
        public Builder sqlMode(@Nullable String sqlMode) {
            this.sqlMode = sqlMode;
            return this;
        }
        @CustomType.Setter
        public Builder sqlRequirePrimaryKey(@Nullable String sqlRequirePrimaryKey) {
            this.sqlRequirePrimaryKey = sqlRequirePrimaryKey;
            return this;
        }
        @CustomType.Setter
        public Builder tmpTableSize(@Nullable String tmpTableSize) {
            this.tmpTableSize = tmpTableSize;
            return this;
        }
        @CustomType.Setter
        public Builder waitTimeout(@Nullable String waitTimeout) {
            this.waitTimeout = waitTimeout;
            return this;
        }
        public MySqlMysqlUserConfigMysql build() {
            final var o = new MySqlMysqlUserConfigMysql();
            o.connectTimeout = connectTimeout;
            o.defaultTimeZone = defaultTimeZone;
            o.groupConcatMaxLen = groupConcatMaxLen;
            o.informationSchemaStatsExpiry = informationSchemaStatsExpiry;
            o.innodbChangeBufferMaxSize = innodbChangeBufferMaxSize;
            o.innodbFlushNeighbors = innodbFlushNeighbors;
            o.innodbFtMinTokenSize = innodbFtMinTokenSize;
            o.innodbFtServerStopwordTable = innodbFtServerStopwordTable;
            o.innodbLockWaitTimeout = innodbLockWaitTimeout;
            o.innodbLogBufferSize = innodbLogBufferSize;
            o.innodbOnlineAlterLogMaxSize = innodbOnlineAlterLogMaxSize;
            o.innodbPrintAllDeadlocks = innodbPrintAllDeadlocks;
            o.innodbReadIoThreads = innodbReadIoThreads;
            o.innodbRollbackOnTimeout = innodbRollbackOnTimeout;
            o.innodbThreadConcurrency = innodbThreadConcurrency;
            o.innodbWriteIoThreads = innodbWriteIoThreads;
            o.interactiveTimeout = interactiveTimeout;
            o.internalTmpMemStorageEngine = internalTmpMemStorageEngine;
            o.longQueryTime = longQueryTime;
            o.maxAllowedPacket = maxAllowedPacket;
            o.maxHeapTableSize = maxHeapTableSize;
            o.netBufferLength = netBufferLength;
            o.netReadTimeout = netReadTimeout;
            o.netWriteTimeout = netWriteTimeout;
            o.slowQueryLog = slowQueryLog;
            o.sortBufferSize = sortBufferSize;
            o.sqlMode = sqlMode;
            o.sqlRequirePrimaryKey = sqlRequirePrimaryKey;
            o.tmpTableSize = tmpTableSize;
            o.waitTimeout = waitTimeout;
            return o;
        }
    }
}
