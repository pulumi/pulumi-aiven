// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MySqlMysqlUserConfigMysql {
    private final @Nullable String connectTimeout;
    private final @Nullable String defaultTimeZone;
    private final @Nullable String groupConcatMaxLen;
    private final @Nullable String informationSchemaStatsExpiry;
    private final @Nullable String innodbChangeBufferMaxSize;
    private final @Nullable String innodbFlushNeighbors;
    private final @Nullable String innodbFtMinTokenSize;
    private final @Nullable String innodbFtServerStopwordTable;
    private final @Nullable String innodbLockWaitTimeout;
    private final @Nullable String innodbLogBufferSize;
    private final @Nullable String innodbOnlineAlterLogMaxSize;
    private final @Nullable String innodbPrintAllDeadlocks;
    private final @Nullable String innodbReadIoThreads;
    private final @Nullable String innodbRollbackOnTimeout;
    private final @Nullable String innodbThreadConcurrency;
    private final @Nullable String innodbWriteIoThreads;
    private final @Nullable String interactiveTimeout;
    private final @Nullable String internalTmpMemStorageEngine;
    private final @Nullable String longQueryTime;
    private final @Nullable String maxAllowedPacket;
    private final @Nullable String maxHeapTableSize;
    private final @Nullable String netBufferLength;
    private final @Nullable String netReadTimeout;
    private final @Nullable String netWriteTimeout;
    private final @Nullable String slowQueryLog;
    private final @Nullable String sortBufferSize;
    private final @Nullable String sqlMode;
    private final @Nullable String sqlRequirePrimaryKey;
    private final @Nullable String tmpTableSize;
    private final @Nullable String waitTimeout;

    @CustomType.Constructor
    private MySqlMysqlUserConfigMysql(
        @CustomType.Parameter("connectTimeout") @Nullable String connectTimeout,
        @CustomType.Parameter("defaultTimeZone") @Nullable String defaultTimeZone,
        @CustomType.Parameter("groupConcatMaxLen") @Nullable String groupConcatMaxLen,
        @CustomType.Parameter("informationSchemaStatsExpiry") @Nullable String informationSchemaStatsExpiry,
        @CustomType.Parameter("innodbChangeBufferMaxSize") @Nullable String innodbChangeBufferMaxSize,
        @CustomType.Parameter("innodbFlushNeighbors") @Nullable String innodbFlushNeighbors,
        @CustomType.Parameter("innodbFtMinTokenSize") @Nullable String innodbFtMinTokenSize,
        @CustomType.Parameter("innodbFtServerStopwordTable") @Nullable String innodbFtServerStopwordTable,
        @CustomType.Parameter("innodbLockWaitTimeout") @Nullable String innodbLockWaitTimeout,
        @CustomType.Parameter("innodbLogBufferSize") @Nullable String innodbLogBufferSize,
        @CustomType.Parameter("innodbOnlineAlterLogMaxSize") @Nullable String innodbOnlineAlterLogMaxSize,
        @CustomType.Parameter("innodbPrintAllDeadlocks") @Nullable String innodbPrintAllDeadlocks,
        @CustomType.Parameter("innodbReadIoThreads") @Nullable String innodbReadIoThreads,
        @CustomType.Parameter("innodbRollbackOnTimeout") @Nullable String innodbRollbackOnTimeout,
        @CustomType.Parameter("innodbThreadConcurrency") @Nullable String innodbThreadConcurrency,
        @CustomType.Parameter("innodbWriteIoThreads") @Nullable String innodbWriteIoThreads,
        @CustomType.Parameter("interactiveTimeout") @Nullable String interactiveTimeout,
        @CustomType.Parameter("internalTmpMemStorageEngine") @Nullable String internalTmpMemStorageEngine,
        @CustomType.Parameter("longQueryTime") @Nullable String longQueryTime,
        @CustomType.Parameter("maxAllowedPacket") @Nullable String maxAllowedPacket,
        @CustomType.Parameter("maxHeapTableSize") @Nullable String maxHeapTableSize,
        @CustomType.Parameter("netBufferLength") @Nullable String netBufferLength,
        @CustomType.Parameter("netReadTimeout") @Nullable String netReadTimeout,
        @CustomType.Parameter("netWriteTimeout") @Nullable String netWriteTimeout,
        @CustomType.Parameter("slowQueryLog") @Nullable String slowQueryLog,
        @CustomType.Parameter("sortBufferSize") @Nullable String sortBufferSize,
        @CustomType.Parameter("sqlMode") @Nullable String sqlMode,
        @CustomType.Parameter("sqlRequirePrimaryKey") @Nullable String sqlRequirePrimaryKey,
        @CustomType.Parameter("tmpTableSize") @Nullable String tmpTableSize,
        @CustomType.Parameter("waitTimeout") @Nullable String waitTimeout) {
        this.connectTimeout = connectTimeout;
        this.defaultTimeZone = defaultTimeZone;
        this.groupConcatMaxLen = groupConcatMaxLen;
        this.informationSchemaStatsExpiry = informationSchemaStatsExpiry;
        this.innodbChangeBufferMaxSize = innodbChangeBufferMaxSize;
        this.innodbFlushNeighbors = innodbFlushNeighbors;
        this.innodbFtMinTokenSize = innodbFtMinTokenSize;
        this.innodbFtServerStopwordTable = innodbFtServerStopwordTable;
        this.innodbLockWaitTimeout = innodbLockWaitTimeout;
        this.innodbLogBufferSize = innodbLogBufferSize;
        this.innodbOnlineAlterLogMaxSize = innodbOnlineAlterLogMaxSize;
        this.innodbPrintAllDeadlocks = innodbPrintAllDeadlocks;
        this.innodbReadIoThreads = innodbReadIoThreads;
        this.innodbRollbackOnTimeout = innodbRollbackOnTimeout;
        this.innodbThreadConcurrency = innodbThreadConcurrency;
        this.innodbWriteIoThreads = innodbWriteIoThreads;
        this.interactiveTimeout = interactiveTimeout;
        this.internalTmpMemStorageEngine = internalTmpMemStorageEngine;
        this.longQueryTime = longQueryTime;
        this.maxAllowedPacket = maxAllowedPacket;
        this.maxHeapTableSize = maxHeapTableSize;
        this.netBufferLength = netBufferLength;
        this.netReadTimeout = netReadTimeout;
        this.netWriteTimeout = netWriteTimeout;
        this.slowQueryLog = slowQueryLog;
        this.sortBufferSize = sortBufferSize;
        this.sqlMode = sqlMode;
        this.sqlRequirePrimaryKey = sqlRequirePrimaryKey;
        this.tmpTableSize = tmpTableSize;
        this.waitTimeout = waitTimeout;
    }

    public Optional<String> connectTimeout() {
        return Optional.ofNullable(this.connectTimeout);
    }
    public Optional<String> defaultTimeZone() {
        return Optional.ofNullable(this.defaultTimeZone);
    }
    public Optional<String> groupConcatMaxLen() {
        return Optional.ofNullable(this.groupConcatMaxLen);
    }
    public Optional<String> informationSchemaStatsExpiry() {
        return Optional.ofNullable(this.informationSchemaStatsExpiry);
    }
    public Optional<String> innodbChangeBufferMaxSize() {
        return Optional.ofNullable(this.innodbChangeBufferMaxSize);
    }
    public Optional<String> innodbFlushNeighbors() {
        return Optional.ofNullable(this.innodbFlushNeighbors);
    }
    public Optional<String> innodbFtMinTokenSize() {
        return Optional.ofNullable(this.innodbFtMinTokenSize);
    }
    public Optional<String> innodbFtServerStopwordTable() {
        return Optional.ofNullable(this.innodbFtServerStopwordTable);
    }
    public Optional<String> innodbLockWaitTimeout() {
        return Optional.ofNullable(this.innodbLockWaitTimeout);
    }
    public Optional<String> innodbLogBufferSize() {
        return Optional.ofNullable(this.innodbLogBufferSize);
    }
    public Optional<String> innodbOnlineAlterLogMaxSize() {
        return Optional.ofNullable(this.innodbOnlineAlterLogMaxSize);
    }
    public Optional<String> innodbPrintAllDeadlocks() {
        return Optional.ofNullable(this.innodbPrintAllDeadlocks);
    }
    public Optional<String> innodbReadIoThreads() {
        return Optional.ofNullable(this.innodbReadIoThreads);
    }
    public Optional<String> innodbRollbackOnTimeout() {
        return Optional.ofNullable(this.innodbRollbackOnTimeout);
    }
    public Optional<String> innodbThreadConcurrency() {
        return Optional.ofNullable(this.innodbThreadConcurrency);
    }
    public Optional<String> innodbWriteIoThreads() {
        return Optional.ofNullable(this.innodbWriteIoThreads);
    }
    public Optional<String> interactiveTimeout() {
        return Optional.ofNullable(this.interactiveTimeout);
    }
    public Optional<String> internalTmpMemStorageEngine() {
        return Optional.ofNullable(this.internalTmpMemStorageEngine);
    }
    public Optional<String> longQueryTime() {
        return Optional.ofNullable(this.longQueryTime);
    }
    public Optional<String> maxAllowedPacket() {
        return Optional.ofNullable(this.maxAllowedPacket);
    }
    public Optional<String> maxHeapTableSize() {
        return Optional.ofNullable(this.maxHeapTableSize);
    }
    public Optional<String> netBufferLength() {
        return Optional.ofNullable(this.netBufferLength);
    }
    public Optional<String> netReadTimeout() {
        return Optional.ofNullable(this.netReadTimeout);
    }
    public Optional<String> netWriteTimeout() {
        return Optional.ofNullable(this.netWriteTimeout);
    }
    public Optional<String> slowQueryLog() {
        return Optional.ofNullable(this.slowQueryLog);
    }
    public Optional<String> sortBufferSize() {
        return Optional.ofNullable(this.sortBufferSize);
    }
    public Optional<String> sqlMode() {
        return Optional.ofNullable(this.sqlMode);
    }
    public Optional<String> sqlRequirePrimaryKey() {
        return Optional.ofNullable(this.sqlRequirePrimaryKey);
    }
    public Optional<String> tmpTableSize() {
        return Optional.ofNullable(this.tmpTableSize);
    }
    public Optional<String> waitTimeout() {
        return Optional.ofNullable(this.waitTimeout);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MySqlMysqlUserConfigMysql defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String connectTimeout;
        private @Nullable String defaultTimeZone;
        private @Nullable String groupConcatMaxLen;
        private @Nullable String informationSchemaStatsExpiry;
        private @Nullable String innodbChangeBufferMaxSize;
        private @Nullable String innodbFlushNeighbors;
        private @Nullable String innodbFtMinTokenSize;
        private @Nullable String innodbFtServerStopwordTable;
        private @Nullable String innodbLockWaitTimeout;
        private @Nullable String innodbLogBufferSize;
        private @Nullable String innodbOnlineAlterLogMaxSize;
        private @Nullable String innodbPrintAllDeadlocks;
        private @Nullable String innodbReadIoThreads;
        private @Nullable String innodbRollbackOnTimeout;
        private @Nullable String innodbThreadConcurrency;
        private @Nullable String innodbWriteIoThreads;
        private @Nullable String interactiveTimeout;
        private @Nullable String internalTmpMemStorageEngine;
        private @Nullable String longQueryTime;
        private @Nullable String maxAllowedPacket;
        private @Nullable String maxHeapTableSize;
        private @Nullable String netBufferLength;
        private @Nullable String netReadTimeout;
        private @Nullable String netWriteTimeout;
        private @Nullable String slowQueryLog;
        private @Nullable String sortBufferSize;
        private @Nullable String sqlMode;
        private @Nullable String sqlRequirePrimaryKey;
        private @Nullable String tmpTableSize;
        private @Nullable String waitTimeout;

        public Builder() {
    	      // Empty
        }

        public Builder(MySqlMysqlUserConfigMysql defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectTimeout = defaults.connectTimeout;
    	      this.defaultTimeZone = defaults.defaultTimeZone;
    	      this.groupConcatMaxLen = defaults.groupConcatMaxLen;
    	      this.informationSchemaStatsExpiry = defaults.informationSchemaStatsExpiry;
    	      this.innodbChangeBufferMaxSize = defaults.innodbChangeBufferMaxSize;
    	      this.innodbFlushNeighbors = defaults.innodbFlushNeighbors;
    	      this.innodbFtMinTokenSize = defaults.innodbFtMinTokenSize;
    	      this.innodbFtServerStopwordTable = defaults.innodbFtServerStopwordTable;
    	      this.innodbLockWaitTimeout = defaults.innodbLockWaitTimeout;
    	      this.innodbLogBufferSize = defaults.innodbLogBufferSize;
    	      this.innodbOnlineAlterLogMaxSize = defaults.innodbOnlineAlterLogMaxSize;
    	      this.innodbPrintAllDeadlocks = defaults.innodbPrintAllDeadlocks;
    	      this.innodbReadIoThreads = defaults.innodbReadIoThreads;
    	      this.innodbRollbackOnTimeout = defaults.innodbRollbackOnTimeout;
    	      this.innodbThreadConcurrency = defaults.innodbThreadConcurrency;
    	      this.innodbWriteIoThreads = defaults.innodbWriteIoThreads;
    	      this.interactiveTimeout = defaults.interactiveTimeout;
    	      this.internalTmpMemStorageEngine = defaults.internalTmpMemStorageEngine;
    	      this.longQueryTime = defaults.longQueryTime;
    	      this.maxAllowedPacket = defaults.maxAllowedPacket;
    	      this.maxHeapTableSize = defaults.maxHeapTableSize;
    	      this.netBufferLength = defaults.netBufferLength;
    	      this.netReadTimeout = defaults.netReadTimeout;
    	      this.netWriteTimeout = defaults.netWriteTimeout;
    	      this.slowQueryLog = defaults.slowQueryLog;
    	      this.sortBufferSize = defaults.sortBufferSize;
    	      this.sqlMode = defaults.sqlMode;
    	      this.sqlRequirePrimaryKey = defaults.sqlRequirePrimaryKey;
    	      this.tmpTableSize = defaults.tmpTableSize;
    	      this.waitTimeout = defaults.waitTimeout;
        }

        public Builder connectTimeout(@Nullable String connectTimeout) {
            this.connectTimeout = connectTimeout;
            return this;
        }
        public Builder defaultTimeZone(@Nullable String defaultTimeZone) {
            this.defaultTimeZone = defaultTimeZone;
            return this;
        }
        public Builder groupConcatMaxLen(@Nullable String groupConcatMaxLen) {
            this.groupConcatMaxLen = groupConcatMaxLen;
            return this;
        }
        public Builder informationSchemaStatsExpiry(@Nullable String informationSchemaStatsExpiry) {
            this.informationSchemaStatsExpiry = informationSchemaStatsExpiry;
            return this;
        }
        public Builder innodbChangeBufferMaxSize(@Nullable String innodbChangeBufferMaxSize) {
            this.innodbChangeBufferMaxSize = innodbChangeBufferMaxSize;
            return this;
        }
        public Builder innodbFlushNeighbors(@Nullable String innodbFlushNeighbors) {
            this.innodbFlushNeighbors = innodbFlushNeighbors;
            return this;
        }
        public Builder innodbFtMinTokenSize(@Nullable String innodbFtMinTokenSize) {
            this.innodbFtMinTokenSize = innodbFtMinTokenSize;
            return this;
        }
        public Builder innodbFtServerStopwordTable(@Nullable String innodbFtServerStopwordTable) {
            this.innodbFtServerStopwordTable = innodbFtServerStopwordTable;
            return this;
        }
        public Builder innodbLockWaitTimeout(@Nullable String innodbLockWaitTimeout) {
            this.innodbLockWaitTimeout = innodbLockWaitTimeout;
            return this;
        }
        public Builder innodbLogBufferSize(@Nullable String innodbLogBufferSize) {
            this.innodbLogBufferSize = innodbLogBufferSize;
            return this;
        }
        public Builder innodbOnlineAlterLogMaxSize(@Nullable String innodbOnlineAlterLogMaxSize) {
            this.innodbOnlineAlterLogMaxSize = innodbOnlineAlterLogMaxSize;
            return this;
        }
        public Builder innodbPrintAllDeadlocks(@Nullable String innodbPrintAllDeadlocks) {
            this.innodbPrintAllDeadlocks = innodbPrintAllDeadlocks;
            return this;
        }
        public Builder innodbReadIoThreads(@Nullable String innodbReadIoThreads) {
            this.innodbReadIoThreads = innodbReadIoThreads;
            return this;
        }
        public Builder innodbRollbackOnTimeout(@Nullable String innodbRollbackOnTimeout) {
            this.innodbRollbackOnTimeout = innodbRollbackOnTimeout;
            return this;
        }
        public Builder innodbThreadConcurrency(@Nullable String innodbThreadConcurrency) {
            this.innodbThreadConcurrency = innodbThreadConcurrency;
            return this;
        }
        public Builder innodbWriteIoThreads(@Nullable String innodbWriteIoThreads) {
            this.innodbWriteIoThreads = innodbWriteIoThreads;
            return this;
        }
        public Builder interactiveTimeout(@Nullable String interactiveTimeout) {
            this.interactiveTimeout = interactiveTimeout;
            return this;
        }
        public Builder internalTmpMemStorageEngine(@Nullable String internalTmpMemStorageEngine) {
            this.internalTmpMemStorageEngine = internalTmpMemStorageEngine;
            return this;
        }
        public Builder longQueryTime(@Nullable String longQueryTime) {
            this.longQueryTime = longQueryTime;
            return this;
        }
        public Builder maxAllowedPacket(@Nullable String maxAllowedPacket) {
            this.maxAllowedPacket = maxAllowedPacket;
            return this;
        }
        public Builder maxHeapTableSize(@Nullable String maxHeapTableSize) {
            this.maxHeapTableSize = maxHeapTableSize;
            return this;
        }
        public Builder netBufferLength(@Nullable String netBufferLength) {
            this.netBufferLength = netBufferLength;
            return this;
        }
        public Builder netReadTimeout(@Nullable String netReadTimeout) {
            this.netReadTimeout = netReadTimeout;
            return this;
        }
        public Builder netWriteTimeout(@Nullable String netWriteTimeout) {
            this.netWriteTimeout = netWriteTimeout;
            return this;
        }
        public Builder slowQueryLog(@Nullable String slowQueryLog) {
            this.slowQueryLog = slowQueryLog;
            return this;
        }
        public Builder sortBufferSize(@Nullable String sortBufferSize) {
            this.sortBufferSize = sortBufferSize;
            return this;
        }
        public Builder sqlMode(@Nullable String sqlMode) {
            this.sqlMode = sqlMode;
            return this;
        }
        public Builder sqlRequirePrimaryKey(@Nullable String sqlRequirePrimaryKey) {
            this.sqlRequirePrimaryKey = sqlRequirePrimaryKey;
            return this;
        }
        public Builder tmpTableSize(@Nullable String tmpTableSize) {
            this.tmpTableSize = tmpTableSize;
            return this;
        }
        public Builder waitTimeout(@Nullable String waitTimeout) {
            this.waitTimeout = waitTimeout;
            return this;
        }        public MySqlMysqlUserConfigMysql build() {
            return new MySqlMysqlUserConfigMysql(connectTimeout, defaultTimeZone, groupConcatMaxLen, informationSchemaStatsExpiry, innodbChangeBufferMaxSize, innodbFlushNeighbors, innodbFtMinTokenSize, innodbFtServerStopwordTable, innodbLockWaitTimeout, innodbLogBufferSize, innodbOnlineAlterLogMaxSize, innodbPrintAllDeadlocks, innodbReadIoThreads, innodbRollbackOnTimeout, innodbThreadConcurrency, innodbWriteIoThreads, interactiveTimeout, internalTmpMemStorageEngine, longQueryTime, maxAllowedPacket, maxHeapTableSize, netBufferLength, netReadTimeout, netWriteTimeout, slowQueryLog, sortBufferSize, sqlMode, sqlRequirePrimaryKey, tmpTableSize, waitTimeout);
        }
    }
}
