// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPgPgUserConfigPg {
    private @Nullable Double autovacuumAnalyzeScaleFactor;
    private @Nullable Integer autovacuumAnalyzeThreshold;
    private @Nullable Integer autovacuumFreezeMaxAge;
    private @Nullable Integer autovacuumMaxWorkers;
    private @Nullable Integer autovacuumNaptime;
    private @Nullable Integer autovacuumVacuumCostDelay;
    private @Nullable Integer autovacuumVacuumCostLimit;
    private @Nullable Double autovacuumVacuumScaleFactor;
    private @Nullable Integer autovacuumVacuumThreshold;
    private @Nullable Integer bgwriterDelay;
    private @Nullable Integer bgwriterFlushAfter;
    private @Nullable Integer bgwriterLruMaxpages;
    private @Nullable Double bgwriterLruMultiplier;
    private @Nullable Integer deadlockTimeout;
    private @Nullable String defaultToastCompression;
    private @Nullable Integer idleInTransactionSessionTimeout;
    private @Nullable Boolean jit;
    private @Nullable Integer logAutovacuumMinDuration;
    private @Nullable String logErrorVerbosity;
    private @Nullable String logLinePrefix;
    private @Nullable Integer logMinDurationStatement;
    private @Nullable Integer logTempFiles;
    private @Nullable Integer maxFilesPerProcess;
    private @Nullable Integer maxLocksPerTransaction;
    private @Nullable Integer maxLogicalReplicationWorkers;
    private @Nullable Integer maxParallelWorkers;
    private @Nullable Integer maxParallelWorkersPerGather;
    private @Nullable Integer maxPredLocksPerTransaction;
    private @Nullable Integer maxPreparedTransactions;
    private @Nullable Integer maxReplicationSlots;
    private @Nullable Integer maxSlotWalKeepSize;
    private @Nullable Integer maxStackDepth;
    private @Nullable Integer maxStandbyArchiveDelay;
    private @Nullable Integer maxStandbyStreamingDelay;
    private @Nullable Integer maxWalSenders;
    private @Nullable Integer maxWorkerProcesses;
    private @Nullable Integer pgPartmanBgwDotInterval;
    private @Nullable String pgPartmanBgwDotRole;
    private @Nullable Boolean pgStatMonitorDotPgsmEnableQueryPlan;
    private @Nullable Integer pgStatMonitorDotPgsmMaxBuckets;
    private @Nullable String pgStatStatementsDotTrack;
    private @Nullable Integer tempFileLimit;
    private @Nullable String timezone;
    private @Nullable Integer trackActivityQuerySize;
    private @Nullable String trackCommitTimestamp;
    private @Nullable String trackFunctions;
    private @Nullable String trackIoTiming;
    private @Nullable Integer walSenderTimeout;
    private @Nullable Integer walWriterDelay;

    private GetPgPgUserConfigPg() {}
    public Optional<Double> autovacuumAnalyzeScaleFactor() {
        return Optional.ofNullable(this.autovacuumAnalyzeScaleFactor);
    }
    public Optional<Integer> autovacuumAnalyzeThreshold() {
        return Optional.ofNullable(this.autovacuumAnalyzeThreshold);
    }
    public Optional<Integer> autovacuumFreezeMaxAge() {
        return Optional.ofNullable(this.autovacuumFreezeMaxAge);
    }
    public Optional<Integer> autovacuumMaxWorkers() {
        return Optional.ofNullable(this.autovacuumMaxWorkers);
    }
    public Optional<Integer> autovacuumNaptime() {
        return Optional.ofNullable(this.autovacuumNaptime);
    }
    public Optional<Integer> autovacuumVacuumCostDelay() {
        return Optional.ofNullable(this.autovacuumVacuumCostDelay);
    }
    public Optional<Integer> autovacuumVacuumCostLimit() {
        return Optional.ofNullable(this.autovacuumVacuumCostLimit);
    }
    public Optional<Double> autovacuumVacuumScaleFactor() {
        return Optional.ofNullable(this.autovacuumVacuumScaleFactor);
    }
    public Optional<Integer> autovacuumVacuumThreshold() {
        return Optional.ofNullable(this.autovacuumVacuumThreshold);
    }
    public Optional<Integer> bgwriterDelay() {
        return Optional.ofNullable(this.bgwriterDelay);
    }
    public Optional<Integer> bgwriterFlushAfter() {
        return Optional.ofNullable(this.bgwriterFlushAfter);
    }
    public Optional<Integer> bgwriterLruMaxpages() {
        return Optional.ofNullable(this.bgwriterLruMaxpages);
    }
    public Optional<Double> bgwriterLruMultiplier() {
        return Optional.ofNullable(this.bgwriterLruMultiplier);
    }
    public Optional<Integer> deadlockTimeout() {
        return Optional.ofNullable(this.deadlockTimeout);
    }
    public Optional<String> defaultToastCompression() {
        return Optional.ofNullable(this.defaultToastCompression);
    }
    public Optional<Integer> idleInTransactionSessionTimeout() {
        return Optional.ofNullable(this.idleInTransactionSessionTimeout);
    }
    public Optional<Boolean> jit() {
        return Optional.ofNullable(this.jit);
    }
    public Optional<Integer> logAutovacuumMinDuration() {
        return Optional.ofNullable(this.logAutovacuumMinDuration);
    }
    public Optional<String> logErrorVerbosity() {
        return Optional.ofNullable(this.logErrorVerbosity);
    }
    public Optional<String> logLinePrefix() {
        return Optional.ofNullable(this.logLinePrefix);
    }
    public Optional<Integer> logMinDurationStatement() {
        return Optional.ofNullable(this.logMinDurationStatement);
    }
    public Optional<Integer> logTempFiles() {
        return Optional.ofNullable(this.logTempFiles);
    }
    public Optional<Integer> maxFilesPerProcess() {
        return Optional.ofNullable(this.maxFilesPerProcess);
    }
    public Optional<Integer> maxLocksPerTransaction() {
        return Optional.ofNullable(this.maxLocksPerTransaction);
    }
    public Optional<Integer> maxLogicalReplicationWorkers() {
        return Optional.ofNullable(this.maxLogicalReplicationWorkers);
    }
    public Optional<Integer> maxParallelWorkers() {
        return Optional.ofNullable(this.maxParallelWorkers);
    }
    public Optional<Integer> maxParallelWorkersPerGather() {
        return Optional.ofNullable(this.maxParallelWorkersPerGather);
    }
    public Optional<Integer> maxPredLocksPerTransaction() {
        return Optional.ofNullable(this.maxPredLocksPerTransaction);
    }
    public Optional<Integer> maxPreparedTransactions() {
        return Optional.ofNullable(this.maxPreparedTransactions);
    }
    public Optional<Integer> maxReplicationSlots() {
        return Optional.ofNullable(this.maxReplicationSlots);
    }
    public Optional<Integer> maxSlotWalKeepSize() {
        return Optional.ofNullable(this.maxSlotWalKeepSize);
    }
    public Optional<Integer> maxStackDepth() {
        return Optional.ofNullable(this.maxStackDepth);
    }
    public Optional<Integer> maxStandbyArchiveDelay() {
        return Optional.ofNullable(this.maxStandbyArchiveDelay);
    }
    public Optional<Integer> maxStandbyStreamingDelay() {
        return Optional.ofNullable(this.maxStandbyStreamingDelay);
    }
    public Optional<Integer> maxWalSenders() {
        return Optional.ofNullable(this.maxWalSenders);
    }
    public Optional<Integer> maxWorkerProcesses() {
        return Optional.ofNullable(this.maxWorkerProcesses);
    }
    public Optional<Integer> pgPartmanBgwDotInterval() {
        return Optional.ofNullable(this.pgPartmanBgwDotInterval);
    }
    public Optional<String> pgPartmanBgwDotRole() {
        return Optional.ofNullable(this.pgPartmanBgwDotRole);
    }
    public Optional<Boolean> pgStatMonitorDotPgsmEnableQueryPlan() {
        return Optional.ofNullable(this.pgStatMonitorDotPgsmEnableQueryPlan);
    }
    public Optional<Integer> pgStatMonitorDotPgsmMaxBuckets() {
        return Optional.ofNullable(this.pgStatMonitorDotPgsmMaxBuckets);
    }
    public Optional<String> pgStatStatementsDotTrack() {
        return Optional.ofNullable(this.pgStatStatementsDotTrack);
    }
    public Optional<Integer> tempFileLimit() {
        return Optional.ofNullable(this.tempFileLimit);
    }
    public Optional<String> timezone() {
        return Optional.ofNullable(this.timezone);
    }
    public Optional<Integer> trackActivityQuerySize() {
        return Optional.ofNullable(this.trackActivityQuerySize);
    }
    public Optional<String> trackCommitTimestamp() {
        return Optional.ofNullable(this.trackCommitTimestamp);
    }
    public Optional<String> trackFunctions() {
        return Optional.ofNullable(this.trackFunctions);
    }
    public Optional<String> trackIoTiming() {
        return Optional.ofNullable(this.trackIoTiming);
    }
    public Optional<Integer> walSenderTimeout() {
        return Optional.ofNullable(this.walSenderTimeout);
    }
    public Optional<Integer> walWriterDelay() {
        return Optional.ofNullable(this.walWriterDelay);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPgPgUserConfigPg defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double autovacuumAnalyzeScaleFactor;
        private @Nullable Integer autovacuumAnalyzeThreshold;
        private @Nullable Integer autovacuumFreezeMaxAge;
        private @Nullable Integer autovacuumMaxWorkers;
        private @Nullable Integer autovacuumNaptime;
        private @Nullable Integer autovacuumVacuumCostDelay;
        private @Nullable Integer autovacuumVacuumCostLimit;
        private @Nullable Double autovacuumVacuumScaleFactor;
        private @Nullable Integer autovacuumVacuumThreshold;
        private @Nullable Integer bgwriterDelay;
        private @Nullable Integer bgwriterFlushAfter;
        private @Nullable Integer bgwriterLruMaxpages;
        private @Nullable Double bgwriterLruMultiplier;
        private @Nullable Integer deadlockTimeout;
        private @Nullable String defaultToastCompression;
        private @Nullable Integer idleInTransactionSessionTimeout;
        private @Nullable Boolean jit;
        private @Nullable Integer logAutovacuumMinDuration;
        private @Nullable String logErrorVerbosity;
        private @Nullable String logLinePrefix;
        private @Nullable Integer logMinDurationStatement;
        private @Nullable Integer logTempFiles;
        private @Nullable Integer maxFilesPerProcess;
        private @Nullable Integer maxLocksPerTransaction;
        private @Nullable Integer maxLogicalReplicationWorkers;
        private @Nullable Integer maxParallelWorkers;
        private @Nullable Integer maxParallelWorkersPerGather;
        private @Nullable Integer maxPredLocksPerTransaction;
        private @Nullable Integer maxPreparedTransactions;
        private @Nullable Integer maxReplicationSlots;
        private @Nullable Integer maxSlotWalKeepSize;
        private @Nullable Integer maxStackDepth;
        private @Nullable Integer maxStandbyArchiveDelay;
        private @Nullable Integer maxStandbyStreamingDelay;
        private @Nullable Integer maxWalSenders;
        private @Nullable Integer maxWorkerProcesses;
        private @Nullable Integer pgPartmanBgwDotInterval;
        private @Nullable String pgPartmanBgwDotRole;
        private @Nullable Boolean pgStatMonitorDotPgsmEnableQueryPlan;
        private @Nullable Integer pgStatMonitorDotPgsmMaxBuckets;
        private @Nullable String pgStatStatementsDotTrack;
        private @Nullable Integer tempFileLimit;
        private @Nullable String timezone;
        private @Nullable Integer trackActivityQuerySize;
        private @Nullable String trackCommitTimestamp;
        private @Nullable String trackFunctions;
        private @Nullable String trackIoTiming;
        private @Nullable Integer walSenderTimeout;
        private @Nullable Integer walWriterDelay;
        public Builder() {}
        public Builder(GetPgPgUserConfigPg defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autovacuumAnalyzeScaleFactor = defaults.autovacuumAnalyzeScaleFactor;
    	      this.autovacuumAnalyzeThreshold = defaults.autovacuumAnalyzeThreshold;
    	      this.autovacuumFreezeMaxAge = defaults.autovacuumFreezeMaxAge;
    	      this.autovacuumMaxWorkers = defaults.autovacuumMaxWorkers;
    	      this.autovacuumNaptime = defaults.autovacuumNaptime;
    	      this.autovacuumVacuumCostDelay = defaults.autovacuumVacuumCostDelay;
    	      this.autovacuumVacuumCostLimit = defaults.autovacuumVacuumCostLimit;
    	      this.autovacuumVacuumScaleFactor = defaults.autovacuumVacuumScaleFactor;
    	      this.autovacuumVacuumThreshold = defaults.autovacuumVacuumThreshold;
    	      this.bgwriterDelay = defaults.bgwriterDelay;
    	      this.bgwriterFlushAfter = defaults.bgwriterFlushAfter;
    	      this.bgwriterLruMaxpages = defaults.bgwriterLruMaxpages;
    	      this.bgwriterLruMultiplier = defaults.bgwriterLruMultiplier;
    	      this.deadlockTimeout = defaults.deadlockTimeout;
    	      this.defaultToastCompression = defaults.defaultToastCompression;
    	      this.idleInTransactionSessionTimeout = defaults.idleInTransactionSessionTimeout;
    	      this.jit = defaults.jit;
    	      this.logAutovacuumMinDuration = defaults.logAutovacuumMinDuration;
    	      this.logErrorVerbosity = defaults.logErrorVerbosity;
    	      this.logLinePrefix = defaults.logLinePrefix;
    	      this.logMinDurationStatement = defaults.logMinDurationStatement;
    	      this.logTempFiles = defaults.logTempFiles;
    	      this.maxFilesPerProcess = defaults.maxFilesPerProcess;
    	      this.maxLocksPerTransaction = defaults.maxLocksPerTransaction;
    	      this.maxLogicalReplicationWorkers = defaults.maxLogicalReplicationWorkers;
    	      this.maxParallelWorkers = defaults.maxParallelWorkers;
    	      this.maxParallelWorkersPerGather = defaults.maxParallelWorkersPerGather;
    	      this.maxPredLocksPerTransaction = defaults.maxPredLocksPerTransaction;
    	      this.maxPreparedTransactions = defaults.maxPreparedTransactions;
    	      this.maxReplicationSlots = defaults.maxReplicationSlots;
    	      this.maxSlotWalKeepSize = defaults.maxSlotWalKeepSize;
    	      this.maxStackDepth = defaults.maxStackDepth;
    	      this.maxStandbyArchiveDelay = defaults.maxStandbyArchiveDelay;
    	      this.maxStandbyStreamingDelay = defaults.maxStandbyStreamingDelay;
    	      this.maxWalSenders = defaults.maxWalSenders;
    	      this.maxWorkerProcesses = defaults.maxWorkerProcesses;
    	      this.pgPartmanBgwDotInterval = defaults.pgPartmanBgwDotInterval;
    	      this.pgPartmanBgwDotRole = defaults.pgPartmanBgwDotRole;
    	      this.pgStatMonitorDotPgsmEnableQueryPlan = defaults.pgStatMonitorDotPgsmEnableQueryPlan;
    	      this.pgStatMonitorDotPgsmMaxBuckets = defaults.pgStatMonitorDotPgsmMaxBuckets;
    	      this.pgStatStatementsDotTrack = defaults.pgStatStatementsDotTrack;
    	      this.tempFileLimit = defaults.tempFileLimit;
    	      this.timezone = defaults.timezone;
    	      this.trackActivityQuerySize = defaults.trackActivityQuerySize;
    	      this.trackCommitTimestamp = defaults.trackCommitTimestamp;
    	      this.trackFunctions = defaults.trackFunctions;
    	      this.trackIoTiming = defaults.trackIoTiming;
    	      this.walSenderTimeout = defaults.walSenderTimeout;
    	      this.walWriterDelay = defaults.walWriterDelay;
        }

        @CustomType.Setter
        public Builder autovacuumAnalyzeScaleFactor(@Nullable Double autovacuumAnalyzeScaleFactor) {
            this.autovacuumAnalyzeScaleFactor = autovacuumAnalyzeScaleFactor;
            return this;
        }
        @CustomType.Setter
        public Builder autovacuumAnalyzeThreshold(@Nullable Integer autovacuumAnalyzeThreshold) {
            this.autovacuumAnalyzeThreshold = autovacuumAnalyzeThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder autovacuumFreezeMaxAge(@Nullable Integer autovacuumFreezeMaxAge) {
            this.autovacuumFreezeMaxAge = autovacuumFreezeMaxAge;
            return this;
        }
        @CustomType.Setter
        public Builder autovacuumMaxWorkers(@Nullable Integer autovacuumMaxWorkers) {
            this.autovacuumMaxWorkers = autovacuumMaxWorkers;
            return this;
        }
        @CustomType.Setter
        public Builder autovacuumNaptime(@Nullable Integer autovacuumNaptime) {
            this.autovacuumNaptime = autovacuumNaptime;
            return this;
        }
        @CustomType.Setter
        public Builder autovacuumVacuumCostDelay(@Nullable Integer autovacuumVacuumCostDelay) {
            this.autovacuumVacuumCostDelay = autovacuumVacuumCostDelay;
            return this;
        }
        @CustomType.Setter
        public Builder autovacuumVacuumCostLimit(@Nullable Integer autovacuumVacuumCostLimit) {
            this.autovacuumVacuumCostLimit = autovacuumVacuumCostLimit;
            return this;
        }
        @CustomType.Setter
        public Builder autovacuumVacuumScaleFactor(@Nullable Double autovacuumVacuumScaleFactor) {
            this.autovacuumVacuumScaleFactor = autovacuumVacuumScaleFactor;
            return this;
        }
        @CustomType.Setter
        public Builder autovacuumVacuumThreshold(@Nullable Integer autovacuumVacuumThreshold) {
            this.autovacuumVacuumThreshold = autovacuumVacuumThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder bgwriterDelay(@Nullable Integer bgwriterDelay) {
            this.bgwriterDelay = bgwriterDelay;
            return this;
        }
        @CustomType.Setter
        public Builder bgwriterFlushAfter(@Nullable Integer bgwriterFlushAfter) {
            this.bgwriterFlushAfter = bgwriterFlushAfter;
            return this;
        }
        @CustomType.Setter
        public Builder bgwriterLruMaxpages(@Nullable Integer bgwriterLruMaxpages) {
            this.bgwriterLruMaxpages = bgwriterLruMaxpages;
            return this;
        }
        @CustomType.Setter
        public Builder bgwriterLruMultiplier(@Nullable Double bgwriterLruMultiplier) {
            this.bgwriterLruMultiplier = bgwriterLruMultiplier;
            return this;
        }
        @CustomType.Setter
        public Builder deadlockTimeout(@Nullable Integer deadlockTimeout) {
            this.deadlockTimeout = deadlockTimeout;
            return this;
        }
        @CustomType.Setter
        public Builder defaultToastCompression(@Nullable String defaultToastCompression) {
            this.defaultToastCompression = defaultToastCompression;
            return this;
        }
        @CustomType.Setter
        public Builder idleInTransactionSessionTimeout(@Nullable Integer idleInTransactionSessionTimeout) {
            this.idleInTransactionSessionTimeout = idleInTransactionSessionTimeout;
            return this;
        }
        @CustomType.Setter
        public Builder jit(@Nullable Boolean jit) {
            this.jit = jit;
            return this;
        }
        @CustomType.Setter
        public Builder logAutovacuumMinDuration(@Nullable Integer logAutovacuumMinDuration) {
            this.logAutovacuumMinDuration = logAutovacuumMinDuration;
            return this;
        }
        @CustomType.Setter
        public Builder logErrorVerbosity(@Nullable String logErrorVerbosity) {
            this.logErrorVerbosity = logErrorVerbosity;
            return this;
        }
        @CustomType.Setter
        public Builder logLinePrefix(@Nullable String logLinePrefix) {
            this.logLinePrefix = logLinePrefix;
            return this;
        }
        @CustomType.Setter
        public Builder logMinDurationStatement(@Nullable Integer logMinDurationStatement) {
            this.logMinDurationStatement = logMinDurationStatement;
            return this;
        }
        @CustomType.Setter
        public Builder logTempFiles(@Nullable Integer logTempFiles) {
            this.logTempFiles = logTempFiles;
            return this;
        }
        @CustomType.Setter
        public Builder maxFilesPerProcess(@Nullable Integer maxFilesPerProcess) {
            this.maxFilesPerProcess = maxFilesPerProcess;
            return this;
        }
        @CustomType.Setter
        public Builder maxLocksPerTransaction(@Nullable Integer maxLocksPerTransaction) {
            this.maxLocksPerTransaction = maxLocksPerTransaction;
            return this;
        }
        @CustomType.Setter
        public Builder maxLogicalReplicationWorkers(@Nullable Integer maxLogicalReplicationWorkers) {
            this.maxLogicalReplicationWorkers = maxLogicalReplicationWorkers;
            return this;
        }
        @CustomType.Setter
        public Builder maxParallelWorkers(@Nullable Integer maxParallelWorkers) {
            this.maxParallelWorkers = maxParallelWorkers;
            return this;
        }
        @CustomType.Setter
        public Builder maxParallelWorkersPerGather(@Nullable Integer maxParallelWorkersPerGather) {
            this.maxParallelWorkersPerGather = maxParallelWorkersPerGather;
            return this;
        }
        @CustomType.Setter
        public Builder maxPredLocksPerTransaction(@Nullable Integer maxPredLocksPerTransaction) {
            this.maxPredLocksPerTransaction = maxPredLocksPerTransaction;
            return this;
        }
        @CustomType.Setter
        public Builder maxPreparedTransactions(@Nullable Integer maxPreparedTransactions) {
            this.maxPreparedTransactions = maxPreparedTransactions;
            return this;
        }
        @CustomType.Setter
        public Builder maxReplicationSlots(@Nullable Integer maxReplicationSlots) {
            this.maxReplicationSlots = maxReplicationSlots;
            return this;
        }
        @CustomType.Setter
        public Builder maxSlotWalKeepSize(@Nullable Integer maxSlotWalKeepSize) {
            this.maxSlotWalKeepSize = maxSlotWalKeepSize;
            return this;
        }
        @CustomType.Setter
        public Builder maxStackDepth(@Nullable Integer maxStackDepth) {
            this.maxStackDepth = maxStackDepth;
            return this;
        }
        @CustomType.Setter
        public Builder maxStandbyArchiveDelay(@Nullable Integer maxStandbyArchiveDelay) {
            this.maxStandbyArchiveDelay = maxStandbyArchiveDelay;
            return this;
        }
        @CustomType.Setter
        public Builder maxStandbyStreamingDelay(@Nullable Integer maxStandbyStreamingDelay) {
            this.maxStandbyStreamingDelay = maxStandbyStreamingDelay;
            return this;
        }
        @CustomType.Setter
        public Builder maxWalSenders(@Nullable Integer maxWalSenders) {
            this.maxWalSenders = maxWalSenders;
            return this;
        }
        @CustomType.Setter
        public Builder maxWorkerProcesses(@Nullable Integer maxWorkerProcesses) {
            this.maxWorkerProcesses = maxWorkerProcesses;
            return this;
        }
        @CustomType.Setter
        public Builder pgPartmanBgwDotInterval(@Nullable Integer pgPartmanBgwDotInterval) {
            this.pgPartmanBgwDotInterval = pgPartmanBgwDotInterval;
            return this;
        }
        @CustomType.Setter
        public Builder pgPartmanBgwDotRole(@Nullable String pgPartmanBgwDotRole) {
            this.pgPartmanBgwDotRole = pgPartmanBgwDotRole;
            return this;
        }
        @CustomType.Setter
        public Builder pgStatMonitorDotPgsmEnableQueryPlan(@Nullable Boolean pgStatMonitorDotPgsmEnableQueryPlan) {
            this.pgStatMonitorDotPgsmEnableQueryPlan = pgStatMonitorDotPgsmEnableQueryPlan;
            return this;
        }
        @CustomType.Setter
        public Builder pgStatMonitorDotPgsmMaxBuckets(@Nullable Integer pgStatMonitorDotPgsmMaxBuckets) {
            this.pgStatMonitorDotPgsmMaxBuckets = pgStatMonitorDotPgsmMaxBuckets;
            return this;
        }
        @CustomType.Setter
        public Builder pgStatStatementsDotTrack(@Nullable String pgStatStatementsDotTrack) {
            this.pgStatStatementsDotTrack = pgStatStatementsDotTrack;
            return this;
        }
        @CustomType.Setter
        public Builder tempFileLimit(@Nullable Integer tempFileLimit) {
            this.tempFileLimit = tempFileLimit;
            return this;
        }
        @CustomType.Setter
        public Builder timezone(@Nullable String timezone) {
            this.timezone = timezone;
            return this;
        }
        @CustomType.Setter
        public Builder trackActivityQuerySize(@Nullable Integer trackActivityQuerySize) {
            this.trackActivityQuerySize = trackActivityQuerySize;
            return this;
        }
        @CustomType.Setter
        public Builder trackCommitTimestamp(@Nullable String trackCommitTimestamp) {
            this.trackCommitTimestamp = trackCommitTimestamp;
            return this;
        }
        @CustomType.Setter
        public Builder trackFunctions(@Nullable String trackFunctions) {
            this.trackFunctions = trackFunctions;
            return this;
        }
        @CustomType.Setter
        public Builder trackIoTiming(@Nullable String trackIoTiming) {
            this.trackIoTiming = trackIoTiming;
            return this;
        }
        @CustomType.Setter
        public Builder walSenderTimeout(@Nullable Integer walSenderTimeout) {
            this.walSenderTimeout = walSenderTimeout;
            return this;
        }
        @CustomType.Setter
        public Builder walWriterDelay(@Nullable Integer walWriterDelay) {
            this.walWriterDelay = walWriterDelay;
            return this;
        }
        public GetPgPgUserConfigPg build() {
            final var o = new GetPgPgUserConfigPg();
            o.autovacuumAnalyzeScaleFactor = autovacuumAnalyzeScaleFactor;
            o.autovacuumAnalyzeThreshold = autovacuumAnalyzeThreshold;
            o.autovacuumFreezeMaxAge = autovacuumFreezeMaxAge;
            o.autovacuumMaxWorkers = autovacuumMaxWorkers;
            o.autovacuumNaptime = autovacuumNaptime;
            o.autovacuumVacuumCostDelay = autovacuumVacuumCostDelay;
            o.autovacuumVacuumCostLimit = autovacuumVacuumCostLimit;
            o.autovacuumVacuumScaleFactor = autovacuumVacuumScaleFactor;
            o.autovacuumVacuumThreshold = autovacuumVacuumThreshold;
            o.bgwriterDelay = bgwriterDelay;
            o.bgwriterFlushAfter = bgwriterFlushAfter;
            o.bgwriterLruMaxpages = bgwriterLruMaxpages;
            o.bgwriterLruMultiplier = bgwriterLruMultiplier;
            o.deadlockTimeout = deadlockTimeout;
            o.defaultToastCompression = defaultToastCompression;
            o.idleInTransactionSessionTimeout = idleInTransactionSessionTimeout;
            o.jit = jit;
            o.logAutovacuumMinDuration = logAutovacuumMinDuration;
            o.logErrorVerbosity = logErrorVerbosity;
            o.logLinePrefix = logLinePrefix;
            o.logMinDurationStatement = logMinDurationStatement;
            o.logTempFiles = logTempFiles;
            o.maxFilesPerProcess = maxFilesPerProcess;
            o.maxLocksPerTransaction = maxLocksPerTransaction;
            o.maxLogicalReplicationWorkers = maxLogicalReplicationWorkers;
            o.maxParallelWorkers = maxParallelWorkers;
            o.maxParallelWorkersPerGather = maxParallelWorkersPerGather;
            o.maxPredLocksPerTransaction = maxPredLocksPerTransaction;
            o.maxPreparedTransactions = maxPreparedTransactions;
            o.maxReplicationSlots = maxReplicationSlots;
            o.maxSlotWalKeepSize = maxSlotWalKeepSize;
            o.maxStackDepth = maxStackDepth;
            o.maxStandbyArchiveDelay = maxStandbyArchiveDelay;
            o.maxStandbyStreamingDelay = maxStandbyStreamingDelay;
            o.maxWalSenders = maxWalSenders;
            o.maxWorkerProcesses = maxWorkerProcesses;
            o.pgPartmanBgwDotInterval = pgPartmanBgwDotInterval;
            o.pgPartmanBgwDotRole = pgPartmanBgwDotRole;
            o.pgStatMonitorDotPgsmEnableQueryPlan = pgStatMonitorDotPgsmEnableQueryPlan;
            o.pgStatMonitorDotPgsmMaxBuckets = pgStatMonitorDotPgsmMaxBuckets;
            o.pgStatStatementsDotTrack = pgStatStatementsDotTrack;
            o.tempFileLimit = tempFileLimit;
            o.timezone = timezone;
            o.trackActivityQuerySize = trackActivityQuerySize;
            o.trackCommitTimestamp = trackCommitTimestamp;
            o.trackFunctions = trackFunctions;
            o.trackIoTiming = trackIoTiming;
            o.walSenderTimeout = walSenderTimeout;
            o.walWriterDelay = walWriterDelay;
            return o;
        }
    }
}
