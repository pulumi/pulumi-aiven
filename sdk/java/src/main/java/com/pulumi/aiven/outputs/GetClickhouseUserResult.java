// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetClickhouseUserResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final String password;
    private final String project;
    private final Boolean required;
    private final String serviceName;
    private final String username;
    private final String uuid;

    @CustomType.Constructor
    private GetClickhouseUserResult(
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("password") String password,
        @CustomType.Parameter("project") String project,
        @CustomType.Parameter("required") Boolean required,
        @CustomType.Parameter("serviceName") String serviceName,
        @CustomType.Parameter("username") String username,
        @CustomType.Parameter("uuid") String uuid) {
        this.id = id;
        this.password = password;
        this.project = project;
        this.required = required;
        this.serviceName = serviceName;
        this.username = username;
        this.uuid = uuid;
    }

    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String password() {
        return this.password;
    }
    public String project() {
        return this.project;
    }
    public Boolean required() {
        return this.required;
    }
    public String serviceName() {
        return this.serviceName;
    }
    public String username() {
        return this.username;
    }
    public String uuid() {
        return this.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClickhouseUserResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String id;
        private String password;
        private String project;
        private Boolean required;
        private String serviceName;
        private String username;
        private String uuid;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClickhouseUserResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.password = defaults.password;
    	      this.project = defaults.project;
    	      this.required = defaults.required;
    	      this.serviceName = defaults.serviceName;
    	      this.username = defaults.username;
    	      this.uuid = defaults.uuid;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder password(String password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }
        public Builder project(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }
        public Builder required(Boolean required) {
            this.required = Objects.requireNonNull(required);
            return this;
        }
        public Builder serviceName(String serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }
        public Builder username(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }
        public Builder uuid(String uuid) {
            this.uuid = Objects.requireNonNull(uuid);
            return this;
        }        public GetClickhouseUserResult build() {
            return new GetClickhouseUserResult(id, password, project, required, serviceName, username, uuid);
        }
    }
}
