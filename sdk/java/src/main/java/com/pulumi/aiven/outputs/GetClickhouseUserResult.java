// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetClickhouseUserResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The password of the clickhouse user.
     * 
     */
    private String password;
    /**
     * @return The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    private String project;
    /**
     * @return Indicates if a clickhouse user is required
     * 
     */
    private Boolean required;
    /**
     * @return The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    private String serviceName;
    /**
     * @return The actual name of the Clickhouse user. Changing this property forces recreation of the resource.
     * 
     */
    private String username;
    /**
     * @return UUID of the clickhouse user.
     * 
     */
    private String uuid;

    private GetClickhouseUserResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The password of the clickhouse user.
     * 
     */
    public String password() {
        return this.password;
    }
    /**
     * @return The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public String project() {
        return this.project;
    }
    /**
     * @return Indicates if a clickhouse user is required
     * 
     */
    public Boolean required() {
        return this.required;
    }
    /**
     * @return The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return The actual name of the Clickhouse user. Changing this property forces recreation of the resource.
     * 
     */
    public String username() {
        return this.username;
    }
    /**
     * @return UUID of the clickhouse user.
     * 
     */
    public String uuid() {
        return this.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClickhouseUserResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String password;
        private String project;
        private Boolean required;
        private String serviceName;
        private String username;
        private String uuid;
        public Builder() {}
        public Builder(GetClickhouseUserResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.password = defaults.password;
    	      this.project = defaults.project;
    	      this.required = defaults.required;
    	      this.serviceName = defaults.serviceName;
    	      this.username = defaults.username;
    	      this.uuid = defaults.uuid;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetClickhouseUserResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            if (password == null) {
              throw new MissingRequiredPropertyException("GetClickhouseUserResult", "password");
            }
            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            if (project == null) {
              throw new MissingRequiredPropertyException("GetClickhouseUserResult", "project");
            }
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder required(Boolean required) {
            if (required == null) {
              throw new MissingRequiredPropertyException("GetClickhouseUserResult", "required");
            }
            this.required = required;
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            if (serviceName == null) {
              throw new MissingRequiredPropertyException("GetClickhouseUserResult", "serviceName");
            }
            this.serviceName = serviceName;
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            if (username == null) {
              throw new MissingRequiredPropertyException("GetClickhouseUserResult", "username");
            }
            this.username = username;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(String uuid) {
            if (uuid == null) {
              throw new MissingRequiredPropertyException("GetClickhouseUserResult", "uuid");
            }
            this.uuid = uuid;
            return this;
        }
        public GetClickhouseUserResult build() {
            final var _resultValue = new GetClickhouseUserResult();
            _resultValue.id = id;
            _resultValue.password = password;
            _resultValue.project = project;
            _resultValue.required = required;
            _resultValue.serviceName = serviceName;
            _resultValue.username = username;
            _resultValue.uuid = uuid;
            return _resultValue;
        }
    }
}
