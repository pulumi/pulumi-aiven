// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.inputs;

import com.pulumi.aiven.inputs.KafkaMirrorMakerKafkaMirrormakerUserConfigIpFilterObjectArgs;
import com.pulumi.aiven.inputs.KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KafkaMirrorMakerKafkaMirrormakerUserConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final KafkaMirrorMakerKafkaMirrormakerUserConfigArgs Empty = new KafkaMirrorMakerKafkaMirrormakerUserConfigArgs();

    @Import(name="additionalBackupRegions")
    private @Nullable Output<String> additionalBackupRegions;

    public Optional<Output<String>> additionalBackupRegions() {
        return Optional.ofNullable(this.additionalBackupRegions);
    }

    @Import(name="ipFilterObjects")
    private @Nullable Output<List<KafkaMirrorMakerKafkaMirrormakerUserConfigIpFilterObjectArgs>> ipFilterObjects;

    public Optional<Output<List<KafkaMirrorMakerKafkaMirrormakerUserConfigIpFilterObjectArgs>>> ipFilterObjects() {
        return Optional.ofNullable(this.ipFilterObjects);
    }

    @Import(name="ipFilterStrings")
    private @Nullable Output<List<String>> ipFilterStrings;

    public Optional<Output<List<String>>> ipFilterStrings() {
        return Optional.ofNullable(this.ipFilterStrings);
    }

    /**
     * @deprecated
     * This will be removed in v5.0.0 and replaced with ip_filter_string instead. When switching to ip_filter_string, please apply the changes twice due to technical limitations.
     * 
     */
    @Deprecated /* This will be removed in v5.0.0 and replaced with ip_filter_string instead. When switching to ip_filter_string, please apply the changes twice due to technical limitations. */
    @Import(name="ipFilters")
    private @Nullable Output<List<String>> ipFilters;

    /**
     * @deprecated
     * This will be removed in v5.0.0 and replaced with ip_filter_string instead. When switching to ip_filter_string, please apply the changes twice due to technical limitations.
     * 
     */
    @Deprecated /* This will be removed in v5.0.0 and replaced with ip_filter_string instead. When switching to ip_filter_string, please apply the changes twice due to technical limitations. */
    public Optional<Output<List<String>>> ipFilters() {
        return Optional.ofNullable(this.ipFilters);
    }

    @Import(name="kafkaMirrormaker")
    private @Nullable Output<KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs> kafkaMirrormaker;

    public Optional<Output<KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs>> kafkaMirrormaker() {
        return Optional.ofNullable(this.kafkaMirrormaker);
    }

    @Import(name="staticIps")
    private @Nullable Output<Boolean> staticIps;

    public Optional<Output<Boolean>> staticIps() {
        return Optional.ofNullable(this.staticIps);
    }

    private KafkaMirrorMakerKafkaMirrormakerUserConfigArgs() {}

    private KafkaMirrorMakerKafkaMirrormakerUserConfigArgs(KafkaMirrorMakerKafkaMirrormakerUserConfigArgs $) {
        this.additionalBackupRegions = $.additionalBackupRegions;
        this.ipFilterObjects = $.ipFilterObjects;
        this.ipFilterStrings = $.ipFilterStrings;
        this.ipFilters = $.ipFilters;
        this.kafkaMirrormaker = $.kafkaMirrormaker;
        this.staticIps = $.staticIps;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KafkaMirrorMakerKafkaMirrormakerUserConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KafkaMirrorMakerKafkaMirrormakerUserConfigArgs $;

        public Builder() {
            $ = new KafkaMirrorMakerKafkaMirrormakerUserConfigArgs();
        }

        public Builder(KafkaMirrorMakerKafkaMirrormakerUserConfigArgs defaults) {
            $ = new KafkaMirrorMakerKafkaMirrormakerUserConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder additionalBackupRegions(@Nullable Output<String> additionalBackupRegions) {
            $.additionalBackupRegions = additionalBackupRegions;
            return this;
        }

        public Builder additionalBackupRegions(String additionalBackupRegions) {
            return additionalBackupRegions(Output.of(additionalBackupRegions));
        }

        public Builder ipFilterObjects(@Nullable Output<List<KafkaMirrorMakerKafkaMirrormakerUserConfigIpFilterObjectArgs>> ipFilterObjects) {
            $.ipFilterObjects = ipFilterObjects;
            return this;
        }

        public Builder ipFilterObjects(List<KafkaMirrorMakerKafkaMirrormakerUserConfigIpFilterObjectArgs> ipFilterObjects) {
            return ipFilterObjects(Output.of(ipFilterObjects));
        }

        public Builder ipFilterObjects(KafkaMirrorMakerKafkaMirrormakerUserConfigIpFilterObjectArgs... ipFilterObjects) {
            return ipFilterObjects(List.of(ipFilterObjects));
        }

        public Builder ipFilterStrings(@Nullable Output<List<String>> ipFilterStrings) {
            $.ipFilterStrings = ipFilterStrings;
            return this;
        }

        public Builder ipFilterStrings(List<String> ipFilterStrings) {
            return ipFilterStrings(Output.of(ipFilterStrings));
        }

        public Builder ipFilterStrings(String... ipFilterStrings) {
            return ipFilterStrings(List.of(ipFilterStrings));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * This will be removed in v5.0.0 and replaced with ip_filter_string instead. When switching to ip_filter_string, please apply the changes twice due to technical limitations.
         * 
         */
        @Deprecated /* This will be removed in v5.0.0 and replaced with ip_filter_string instead. When switching to ip_filter_string, please apply the changes twice due to technical limitations. */
        public Builder ipFilters(@Nullable Output<List<String>> ipFilters) {
            $.ipFilters = ipFilters;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * This will be removed in v5.0.0 and replaced with ip_filter_string instead. When switching to ip_filter_string, please apply the changes twice due to technical limitations.
         * 
         */
        @Deprecated /* This will be removed in v5.0.0 and replaced with ip_filter_string instead. When switching to ip_filter_string, please apply the changes twice due to technical limitations. */
        public Builder ipFilters(List<String> ipFilters) {
            return ipFilters(Output.of(ipFilters));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * This will be removed in v5.0.0 and replaced with ip_filter_string instead. When switching to ip_filter_string, please apply the changes twice due to technical limitations.
         * 
         */
        @Deprecated /* This will be removed in v5.0.0 and replaced with ip_filter_string instead. When switching to ip_filter_string, please apply the changes twice due to technical limitations. */
        public Builder ipFilters(String... ipFilters) {
            return ipFilters(List.of(ipFilters));
        }

        public Builder kafkaMirrormaker(@Nullable Output<KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs> kafkaMirrormaker) {
            $.kafkaMirrormaker = kafkaMirrormaker;
            return this;
        }

        public Builder kafkaMirrormaker(KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormakerArgs kafkaMirrormaker) {
            return kafkaMirrormaker(Output.of(kafkaMirrormaker));
        }

        public Builder staticIps(@Nullable Output<Boolean> staticIps) {
            $.staticIps = staticIps;
            return this;
        }

        public Builder staticIps(Boolean staticIps) {
            return staticIps(Output.of(staticIps));
        }

        public KafkaMirrorMakerKafkaMirrormakerUserConfigArgs build() {
            return $;
        }
    }

}
