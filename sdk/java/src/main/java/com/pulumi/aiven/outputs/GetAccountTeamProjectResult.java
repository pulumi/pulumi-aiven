// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aiven.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAccountTeamProjectResult {
    /**
     * @return The unique account id
     * 
     */
    private String accountId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The name of an already existing project
     * 
     */
    private String projectName;
    /**
     * @return An account team id
     * 
     */
    private String teamId;
    /**
     * @return The Account team project type. The possible values are `admin`, `developer`, `operator` and `read_only`.
     * 
     */
    private String teamType;

    private GetAccountTeamProjectResult() {}
    /**
     * @return The unique account id
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of an already existing project
     * 
     */
    public String projectName() {
        return this.projectName;
    }
    /**
     * @return An account team id
     * 
     */
    public String teamId() {
        return this.teamId;
    }
    /**
     * @return The Account team project type. The possible values are `admin`, `developer`, `operator` and `read_only`.
     * 
     */
    public String teamType() {
        return this.teamType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountTeamProjectResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private String id;
        private String projectName;
        private String teamId;
        private String teamType;
        public Builder() {}
        public Builder(GetAccountTeamProjectResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.id = defaults.id;
    	      this.projectName = defaults.projectName;
    	      this.teamId = defaults.teamId;
    	      this.teamType = defaults.teamType;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            this.accountId = Objects.requireNonNull(accountId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder projectName(String projectName) {
            this.projectName = Objects.requireNonNull(projectName);
            return this;
        }
        @CustomType.Setter
        public Builder teamId(String teamId) {
            this.teamId = Objects.requireNonNull(teamId);
            return this;
        }
        @CustomType.Setter
        public Builder teamType(String teamType) {
            this.teamType = Objects.requireNonNull(teamType);
            return this;
        }
        public GetAccountTeamProjectResult build() {
            final var o = new GetAccountTeamProjectResult();
            o.accountId = accountId;
            o.id = id;
            o.projectName = projectName;
            o.teamId = teamId;
            o.teamType = teamType;
            return o;
        }
    }
}
