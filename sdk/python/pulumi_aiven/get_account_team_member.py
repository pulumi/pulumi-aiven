# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class GetAccountTeamMemberResult:
    """
    A collection of values returned by getAccountTeamMember.
    """
    def __init__(__self__, accepted=None, account_id=None, create_time=None, id=None, invited_by_user_email=None, team_id=None, user_email=None):
        if accepted and not isinstance(accepted, bool):
            raise TypeError("Expected argument 'accepted' to be a bool")
        __self__.accepted = accepted
        if account_id and not isinstance(account_id, str):
            raise TypeError("Expected argument 'account_id' to be a str")
        __self__.account_id = account_id
        if create_time and not isinstance(create_time, str):
            raise TypeError("Expected argument 'create_time' to be a str")
        __self__.create_time = create_time
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        The provider-assigned unique ID for this managed resource.
        """
        if invited_by_user_email and not isinstance(invited_by_user_email, str):
            raise TypeError("Expected argument 'invited_by_user_email' to be a str")
        __self__.invited_by_user_email = invited_by_user_email
        if team_id and not isinstance(team_id, str):
            raise TypeError("Expected argument 'team_id' to be a str")
        __self__.team_id = team_id
        if user_email and not isinstance(user_email, str):
            raise TypeError("Expected argument 'user_email' to be a str")
        __self__.user_email = user_email
class AwaitableGetAccountTeamMemberResult(GetAccountTeamMemberResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAccountTeamMemberResult(
            accepted=self.accepted,
            account_id=self.account_id,
            create_time=self.create_time,
            id=self.id,
            invited_by_user_email=self.invited_by_user_email,
            team_id=self.team_id,
            user_email=self.user_email)

def get_account_team_member(accepted=None,account_id=None,create_time=None,invited_by_user_email=None,team_id=None,user_email=None,opts=None):
    """
    ## Example Usage



    ```python
    import pulumi
    import pulumi_aiven as aiven

    foo = aiven.get_account_team_member(account_id=aiven_account["developers"]["account_id"],
        team_id=aiven_account["developers"]["account_id"],
        user_email="user+1@example.com")
    ```
    """
    __args__ = dict()


    __args__['accepted'] = accepted
    __args__['accountId'] = account_id
    __args__['createTime'] = create_time
    __args__['invitedByUserEmail'] = invited_by_user_email
    __args__['teamId'] = team_id
    __args__['userEmail'] = user_email
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('aiven:index/getAccountTeamMember:getAccountTeamMember', __args__, opts=opts).value

    return AwaitableGetAccountTeamMemberResult(
        accepted=__ret__.get('accepted'),
        account_id=__ret__.get('accountId'),
        create_time=__ret__.get('createTime'),
        id=__ret__.get('id'),
        invited_by_user_email=__ret__.get('invitedByUserEmail'),
        team_id=__ret__.get('teamId'),
        user_email=__ret__.get('userEmail'))
