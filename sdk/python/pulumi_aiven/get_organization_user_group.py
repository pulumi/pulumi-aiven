# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetOrganizationUserGroupResult',
    'AwaitableGetOrganizationUserGroupResult',
    'get_organization_user_group',
    'get_organization_user_group_output',
]

@pulumi.output_type
class GetOrganizationUserGroupResult:
    """
    A collection of values returned by getOrganizationUserGroup.
    """
    def __init__(__self__, create_time=None, description=None, id=None, name=None, organization_id=None, update_time=None):
        if create_time and not isinstance(create_time, str):
            raise TypeError("Expected argument 'create_time' to be a str")
        pulumi.set(__self__, "create_time", create_time)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if organization_id and not isinstance(organization_id, str):
            raise TypeError("Expected argument 'organization_id' to be a str")
        pulumi.set(__self__, "organization_id", organization_id)
        if update_time and not isinstance(update_time, str):
            raise TypeError("Expected argument 'update_time' to be a str")
        pulumi.set(__self__, "update_time", update_time)

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        """
        Time of creation
        """
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        The organization user group description. This property cannot be changed, doing so forces recreation of the resource.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The organization user group name. This property cannot be changed, doing so forces recreation of the resource.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="organizationId")
    def organization_id(self) -> str:
        """
        The unique organization ID. This property cannot be changed, doing so forces recreation of the resource.
        """
        return pulumi.get(self, "organization_id")

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> str:
        """
        Time of last update
        """
        return pulumi.get(self, "update_time")


class AwaitableGetOrganizationUserGroupResult(GetOrganizationUserGroupResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOrganizationUserGroupResult(
            create_time=self.create_time,
            description=self.description,
            id=self.id,
            name=self.name,
            organization_id=self.organization_id,
            update_time=self.update_time)


def get_organization_user_group(name: Optional[str] = None,
                                organization_id: Optional[str] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetOrganizationUserGroupResult:
    """
    The Organization User Groupe data source provides information about the existing Aiven Organization User Group.


    :param str name: The organization user group name. This property cannot be changed, doing so forces recreation of the resource.
    :param str organization_id: The unique organization ID. This property cannot be changed, doing so forces recreation of the resource.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['organizationId'] = organization_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aiven:index/getOrganizationUserGroup:getOrganizationUserGroup', __args__, opts=opts, typ=GetOrganizationUserGroupResult).value

    return AwaitableGetOrganizationUserGroupResult(
        create_time=pulumi.get(__ret__, 'create_time'),
        description=pulumi.get(__ret__, 'description'),
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        organization_id=pulumi.get(__ret__, 'organization_id'),
        update_time=pulumi.get(__ret__, 'update_time'))


@_utilities.lift_output_func(get_organization_user_group)
def get_organization_user_group_output(name: Optional[pulumi.Input[str]] = None,
                                       organization_id: Optional[pulumi.Input[str]] = None,
                                       opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetOrganizationUserGroupResult]:
    """
    The Organization User Groupe data source provides information about the existing Aiven Organization User Group.


    :param str name: The organization user group name. This property cannot be changed, doing so forces recreation of the resource.
    :param str organization_id: The unique organization ID. This property cannot be changed, doing so forces recreation of the resource.
    """
    ...
