# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class GetKafkaAclResult:
    """
    A collection of values returned by getKafkaAcl.
    """
    def __init__(__self__, id=None, permission=None, project=None, service_name=None, topic=None, username=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        The provider-assigned unique ID for this managed resource.
        """
        if permission and not isinstance(permission, str):
            raise TypeError("Expected argument 'permission' to be a str")
        __self__.permission = permission
        if project and not isinstance(project, str):
            raise TypeError("Expected argument 'project' to be a str")
        __self__.project = project
        if service_name and not isinstance(service_name, str):
            raise TypeError("Expected argument 'service_name' to be a str")
        __self__.service_name = service_name
        if topic and not isinstance(topic, str):
            raise TypeError("Expected argument 'topic' to be a str")
        __self__.topic = topic
        if username and not isinstance(username, str):
            raise TypeError("Expected argument 'username' to be a str")
        __self__.username = username
class AwaitableGetKafkaAclResult(GetKafkaAclResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetKafkaAclResult(
            id=self.id,
            permission=self.permission,
            project=self.project,
            service_name=self.service_name,
            topic=self.topic,
            username=self.username)

def get_kafka_acl(permission=None,project=None,service_name=None,topic=None,username=None,opts=None):
    """
    ## Example Usage



    ```python
    import pulumi
    import pulumi_aiven as aiven

    mytestacl = aiven.get_kafka_acl(project=data[".Service"]["myservice"]["project"],
        service_name=data[".Service"]["myservice"]["service_name"],
        topic="<TOPIC_NAME_PATTERN>",
        username="<USERNAME_PATTERN>")
    ```
    """
    __args__ = dict()


    __args__['permission'] = permission
    __args__['project'] = project
    __args__['serviceName'] = service_name
    __args__['topic'] = topic
    __args__['username'] = username
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('aiven:index/getKafkaAcl:getKafkaAcl', __args__, opts=opts).value

    return AwaitableGetKafkaAclResult(
        id=__ret__.get('id'),
        permission=__ret__.get('permission'),
        project=__ret__.get('project'),
        service_name=__ret__.get('serviceName'),
        topic=__ret__.get('topic'),
        username=__ret__.get('username'))
