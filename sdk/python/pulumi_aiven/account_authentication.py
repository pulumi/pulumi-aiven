# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import _utilities, _tables


class AccountAuthentication(pulumi.CustomResource):
    account_id: pulumi.Output[str]
    """
    Account id
    """
    authentication_id: pulumi.Output[str]
    """
    Account authentication id
    """
    create_time: pulumi.Output[str]
    """
    Time of creation
    """
    enabled: pulumi.Output[bool]
    """
    Status of account authentication method
    """
    name: pulumi.Output[str]
    """
    Account team name
    """
    saml_acs_url: pulumi.Output[str]
    """
    SAML Assertion Consumer Service URL
    """
    saml_certificate: pulumi.Output[str]
    """
    SAML Certificate
    """
    saml_entity_id: pulumi.Output[str]
    """
    SAML Entity id
    """
    saml_idp_url: pulumi.Output[str]
    """
    SAML Idp URL
    """
    saml_metadata_url: pulumi.Output[str]
    """
    SAML Metadata URL
    """
    type: pulumi.Output[str]
    """
    Account authentication id
    """
    update_time: pulumi.Output[str]
    """
    Time of last update
    """
    def __init__(__self__, resource_name, opts=None, account_id=None, authentication_id=None, create_time=None, enabled=None, name=None, saml_acs_url=None, saml_certificate=None, saml_entity_id=None, saml_idp_url=None, saml_metadata_url=None, type=None, update_time=None, __props__=None, __name__=None, __opts__=None):
        """
        Create a AccountAuthentication resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] account_id: Account id
        :param pulumi.Input[str] authentication_id: Account authentication id
        :param pulumi.Input[str] create_time: Time of creation
        :param pulumi.Input[bool] enabled: Status of account authentication method
        :param pulumi.Input[str] name: Account team name
        :param pulumi.Input[str] saml_acs_url: SAML Assertion Consumer Service URL
        :param pulumi.Input[str] saml_certificate: SAML Certificate
        :param pulumi.Input[str] saml_entity_id: SAML Entity id
        :param pulumi.Input[str] saml_idp_url: SAML Idp URL
        :param pulumi.Input[str] saml_metadata_url: SAML Metadata URL
        :param pulumi.Input[str] type: Account authentication id
        :param pulumi.Input[str] update_time: Time of last update
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if account_id is None:
                raise TypeError("Missing required property 'account_id'")
            __props__['account_id'] = account_id
            __props__['authentication_id'] = authentication_id
            __props__['create_time'] = create_time
            __props__['enabled'] = enabled
            __props__['name'] = name
            __props__['saml_acs_url'] = saml_acs_url
            __props__['saml_certificate'] = saml_certificate
            __props__['saml_entity_id'] = saml_entity_id
            __props__['saml_idp_url'] = saml_idp_url
            __props__['saml_metadata_url'] = saml_metadata_url
            if type is None:
                raise TypeError("Missing required property 'type'")
            __props__['type'] = type
            __props__['update_time'] = update_time
        super(AccountAuthentication, __self__).__init__(
            'aiven:index/accountAuthentication:AccountAuthentication',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, account_id=None, authentication_id=None, create_time=None, enabled=None, name=None, saml_acs_url=None, saml_certificate=None, saml_entity_id=None, saml_idp_url=None, saml_metadata_url=None, type=None, update_time=None):
        """
        Get an existing AccountAuthentication resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] account_id: Account id
        :param pulumi.Input[str] authentication_id: Account authentication id
        :param pulumi.Input[str] create_time: Time of creation
        :param pulumi.Input[bool] enabled: Status of account authentication method
        :param pulumi.Input[str] name: Account team name
        :param pulumi.Input[str] saml_acs_url: SAML Assertion Consumer Service URL
        :param pulumi.Input[str] saml_certificate: SAML Certificate
        :param pulumi.Input[str] saml_entity_id: SAML Entity id
        :param pulumi.Input[str] saml_idp_url: SAML Idp URL
        :param pulumi.Input[str] saml_metadata_url: SAML Metadata URL
        :param pulumi.Input[str] type: Account authentication id
        :param pulumi.Input[str] update_time: Time of last update
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["account_id"] = account_id
        __props__["authentication_id"] = authentication_id
        __props__["create_time"] = create_time
        __props__["enabled"] = enabled
        __props__["name"] = name
        __props__["saml_acs_url"] = saml_acs_url
        __props__["saml_certificate"] = saml_certificate
        __props__["saml_entity_id"] = saml_entity_id
        __props__["saml_idp_url"] = saml_idp_url
        __props__["saml_metadata_url"] = saml_metadata_url
        __props__["type"] = type
        __props__["update_time"] = update_time
        return AccountAuthentication(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
