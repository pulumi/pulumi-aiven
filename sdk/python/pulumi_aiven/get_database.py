# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class GetDatabaseResult:
    """
    A collection of values returned by getDatabase.
    """
    def __init__(__self__, database_name=None, id=None, lc_collate=None, lc_ctype=None, project=None, service_name=None, termination_protection=None):
        if database_name and not isinstance(database_name, str):
            raise TypeError("Expected argument 'database_name' to be a str")
        __self__.database_name = database_name
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        The provider-assigned unique ID for this managed resource.
        """
        if lc_collate and not isinstance(lc_collate, str):
            raise TypeError("Expected argument 'lc_collate' to be a str")
        __self__.lc_collate = lc_collate
        if lc_ctype and not isinstance(lc_ctype, str):
            raise TypeError("Expected argument 'lc_ctype' to be a str")
        __self__.lc_ctype = lc_ctype
        if project and not isinstance(project, str):
            raise TypeError("Expected argument 'project' to be a str")
        __self__.project = project
        if service_name and not isinstance(service_name, str):
            raise TypeError("Expected argument 'service_name' to be a str")
        __self__.service_name = service_name
        if termination_protection and not isinstance(termination_protection, bool):
            raise TypeError("Expected argument 'termination_protection' to be a bool")
        __self__.termination_protection = termination_protection
class AwaitableGetDatabaseResult(GetDatabaseResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDatabaseResult(
            database_name=self.database_name,
            id=self.id,
            lc_collate=self.lc_collate,
            lc_ctype=self.lc_ctype,
            project=self.project,
            service_name=self.service_name,
            termination_protection=self.termination_protection)

def get_database(database_name=None,lc_collate=None,lc_ctype=None,project=None,service_name=None,termination_protection=None,opts=None):
    """
    ## Example Usage



    ```python
    import pulumi
    import pulumi_aiven as aiven

    mydatabase = aiven.get_database(project=data[".Service"]["myservice"]["project"],
        service_name=data[".Service"]["myservice"]["service_name"],
        database_name="<DATABASE_NAME>")
    ```
    """
    __args__ = dict()


    __args__['databaseName'] = database_name
    __args__['lcCollate'] = lc_collate
    __args__['lcCtype'] = lc_ctype
    __args__['project'] = project
    __args__['serviceName'] = service_name
    __args__['terminationProtection'] = termination_protection
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('aiven:index/getDatabase:getDatabase', __args__, opts=opts).value

    return AwaitableGetDatabaseResult(
        database_name=__ret__.get('databaseName'),
        id=__ret__.get('id'),
        lc_collate=__ret__.get('lcCollate'),
        lc_ctype=__ret__.get('lcCtype'),
        project=__ret__.get('project'),
        service_name=__ret__.get('serviceName'),
        termination_protection=__ret__.get('terminationProtection'))
