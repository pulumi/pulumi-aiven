# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class GetProjectVpcResult:
    """
    A collection of values returned by getProjectVpc.
    """
    def __init__(__self__, cloud_name=None, id=None, network_cidr=None, project=None, state=None):
        if cloud_name and not isinstance(cloud_name, str):
            raise TypeError("Expected argument 'cloud_name' to be a str")
        __self__.cloud_name = cloud_name
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        The provider-assigned unique ID for this managed resource.
        """
        if network_cidr and not isinstance(network_cidr, str):
            raise TypeError("Expected argument 'network_cidr' to be a str")
        __self__.network_cidr = network_cidr
        if project and not isinstance(project, str):
            raise TypeError("Expected argument 'project' to be a str")
        __self__.project = project
        if state and not isinstance(state, str):
            raise TypeError("Expected argument 'state' to be a str")
        __self__.state = state
class AwaitableGetProjectVpcResult(GetProjectVpcResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetProjectVpcResult(
            cloud_name=self.cloud_name,
            id=self.id,
            network_cidr=self.network_cidr,
            project=self.project,
            state=self.state)

def get_project_vpc(cloud_name=None,network_cidr=None,project=None,state=None,opts=None):
    """
    ## Example Usage



    ```python
    import pulumi
    import pulumi_aiven as aiven

    myvpc = aiven.get_project_vpc(project=data[".Project"]["myproject"]["project"],
        cloud_name="google-europe-west1")
    ```
    """
    __args__ = dict()


    __args__['cloudName'] = cloud_name
    __args__['networkCidr'] = network_cidr
    __args__['project'] = project
    __args__['state'] = state
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('aiven:index/getProjectVpc:getProjectVpc', __args__, opts=opts).value

    return AwaitableGetProjectVpcResult(
        cloud_name=__ret__.get('cloudName'),
        id=__ret__.get('id'),
        network_cidr=__ret__.get('networkCidr'),
        project=__ret__.get('project'),
        state=__ret__.get('state'))
