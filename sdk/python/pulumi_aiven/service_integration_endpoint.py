# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class ServiceIntegrationEndpoint(pulumi.CustomResource):
    datadog_user_config: pulumi.Output[dict]
    endpoint_config: pulumi.Output[dict]
    endpoint_name: pulumi.Output[str]
    endpoint_type: pulumi.Output[str]
    external_elasticsearch_logs_user_config: pulumi.Output[dict]
    project: pulumi.Output[str]
    prometheus_user_config: pulumi.Output[dict]
    rsyslog_user_config: pulumi.Output[dict]
    def __init__(__self__, resource_name, opts=None, datadog_user_config=None, endpoint_name=None, endpoint_type=None, external_elasticsearch_logs_user_config=None, project=None, prometheus_user_config=None, rsyslog_user_config=None, __props__=None, __name__=None, __opts__=None):
        """
        Create a ServiceIntegrationEndpoint resource with the given unique name, props, and options.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        
        The **datadog_user_config** object supports the following:
        
          * `datadogApiKey` (`pulumi.Input[str]`)
          * `disableConsumerStats` (`pulumi.Input[str]`)
          * `maxPartitionContexts` (`pulumi.Input[float]`)
          * `site` (`pulumi.Input[str]`)
        
        The **external_elasticsearch_logs_user_config** object supports the following:
        
          * `ca` (`pulumi.Input[str]`)
          * `indexDaysMax` (`pulumi.Input[float]`)
          * `indexPrefix` (`pulumi.Input[str]`)
          * `timeout` (`pulumi.Input[float]`)
          * `url` (`pulumi.Input[str]`)
        
        The **prometheus_user_config** object supports the following:
        
          * `basicAuthPassword` (`pulumi.Input[str]`)
          * `basicAuthUsername` (`pulumi.Input[str]`)
        
        The **rsyslog_user_config** object supports the following:
        
          * `ca` (`pulumi.Input[str]`)
          * `cert` (`pulumi.Input[str]`)
          * `format` (`pulumi.Input[str]`)
          * `key` (`pulumi.Input[str]`)
          * `logline` (`pulumi.Input[str]`)
          * `port` (`pulumi.Input[float]`)
          * `sd` (`pulumi.Input[str]`)
          * `server` (`pulumi.Input[str]`)
          * `tls` (`pulumi.Input[bool]`)

        > This content is derived from https://github.com/aiven/terraform-provider-aiven/blob/master/website/docs/r/service_integration_endpoint.html.markdown.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['datadog_user_config'] = datadog_user_config
            if endpoint_name is None:
                raise TypeError("Missing required property 'endpoint_name'")
            __props__['endpoint_name'] = endpoint_name
            if endpoint_type is None:
                raise TypeError("Missing required property 'endpoint_type'")
            __props__['endpoint_type'] = endpoint_type
            __props__['external_elasticsearch_logs_user_config'] = external_elasticsearch_logs_user_config
            if project is None:
                raise TypeError("Missing required property 'project'")
            __props__['project'] = project
            __props__['prometheus_user_config'] = prometheus_user_config
            __props__['rsyslog_user_config'] = rsyslog_user_config
            __props__['endpoint_config'] = None
        super(ServiceIntegrationEndpoint, __self__).__init__(
            'aiven:index/serviceIntegrationEndpoint:ServiceIntegrationEndpoint',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, datadog_user_config=None, endpoint_config=None, endpoint_name=None, endpoint_type=None, external_elasticsearch_logs_user_config=None, project=None, prometheus_user_config=None, rsyslog_user_config=None):
        """
        Get an existing ServiceIntegrationEndpoint resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.
        
        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        
        The **datadog_user_config** object supports the following:
        
          * `datadogApiKey` (`pulumi.Input[str]`)
          * `disableConsumerStats` (`pulumi.Input[str]`)
          * `maxPartitionContexts` (`pulumi.Input[float]`)
          * `site` (`pulumi.Input[str]`)
        
        The **external_elasticsearch_logs_user_config** object supports the following:
        
          * `ca` (`pulumi.Input[str]`)
          * `indexDaysMax` (`pulumi.Input[float]`)
          * `indexPrefix` (`pulumi.Input[str]`)
          * `timeout` (`pulumi.Input[float]`)
          * `url` (`pulumi.Input[str]`)
        
        The **prometheus_user_config** object supports the following:
        
          * `basicAuthPassword` (`pulumi.Input[str]`)
          * `basicAuthUsername` (`pulumi.Input[str]`)
        
        The **rsyslog_user_config** object supports the following:
        
          * `ca` (`pulumi.Input[str]`)
          * `cert` (`pulumi.Input[str]`)
          * `format` (`pulumi.Input[str]`)
          * `key` (`pulumi.Input[str]`)
          * `logline` (`pulumi.Input[str]`)
          * `port` (`pulumi.Input[float]`)
          * `sd` (`pulumi.Input[str]`)
          * `server` (`pulumi.Input[str]`)
          * `tls` (`pulumi.Input[bool]`)

        > This content is derived from https://github.com/aiven/terraform-provider-aiven/blob/master/website/docs/r/service_integration_endpoint.html.markdown.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()
        __props__["datadog_user_config"] = datadog_user_config
        __props__["endpoint_config"] = endpoint_config
        __props__["endpoint_name"] = endpoint_name
        __props__["endpoint_type"] = endpoint_type
        __props__["external_elasticsearch_logs_user_config"] = external_elasticsearch_logs_user_config
        __props__["project"] = project
        __props__["prometheus_user_config"] = prometheus_user_config
        __props__["rsyslog_user_config"] = rsyslog_user_config
        return ServiceIntegrationEndpoint(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

