# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class GetProjectResult:
    """
    A collection of values returned by getProject.
    """
    def __init__(__self__, account_id=None, billing_address=None, billing_emails=None, ca_cert=None, card_id=None, copy_from_project=None, country_code=None, id=None, project=None, technical_emails=None):
        if account_id and not isinstance(account_id, str):
            raise TypeError("Expected argument 'account_id' to be a str")
        __self__.account_id = account_id
        if billing_address and not isinstance(billing_address, str):
            raise TypeError("Expected argument 'billing_address' to be a str")
        __self__.billing_address = billing_address
        if billing_emails and not isinstance(billing_emails, list):
            raise TypeError("Expected argument 'billing_emails' to be a list")
        __self__.billing_emails = billing_emails
        if ca_cert and not isinstance(ca_cert, str):
            raise TypeError("Expected argument 'ca_cert' to be a str")
        __self__.ca_cert = ca_cert
        if card_id and not isinstance(card_id, str):
            raise TypeError("Expected argument 'card_id' to be a str")
        __self__.card_id = card_id
        if copy_from_project and not isinstance(copy_from_project, str):
            raise TypeError("Expected argument 'copy_from_project' to be a str")
        __self__.copy_from_project = copy_from_project
        if country_code and not isinstance(country_code, str):
            raise TypeError("Expected argument 'country_code' to be a str")
        __self__.country_code = country_code
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        The provider-assigned unique ID for this managed resource.
        """
        if project and not isinstance(project, str):
            raise TypeError("Expected argument 'project' to be a str")
        __self__.project = project
        if technical_emails and not isinstance(technical_emails, list):
            raise TypeError("Expected argument 'technical_emails' to be a list")
        __self__.technical_emails = technical_emails
class AwaitableGetProjectResult(GetProjectResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetProjectResult(
            account_id=self.account_id,
            billing_address=self.billing_address,
            billing_emails=self.billing_emails,
            ca_cert=self.ca_cert,
            card_id=self.card_id,
            copy_from_project=self.copy_from_project,
            country_code=self.country_code,
            id=self.id,
            project=self.project,
            technical_emails=self.technical_emails)

def get_project(account_id=None,billing_address=None,billing_emails=None,ca_cert=None,card_id=None,copy_from_project=None,country_code=None,project=None,technical_emails=None,opts=None):
    """
    ## Example Usage



    ```python
    import pulumi
    import pulumi_aiven as aiven

    myproject = aiven.get_project(project="<PROJECT_NAME>")
    ```
    """
    __args__ = dict()


    __args__['accountId'] = account_id
    __args__['billingAddress'] = billing_address
    __args__['billingEmails'] = billing_emails
    __args__['caCert'] = ca_cert
    __args__['cardId'] = card_id
    __args__['copyFromProject'] = copy_from_project
    __args__['countryCode'] = country_code
    __args__['project'] = project
    __args__['technicalEmails'] = technical_emails
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('aiven:index/getProject:getProject', __args__, opts=opts).value

    return AwaitableGetProjectResult(
        account_id=__ret__.get('accountId'),
        billing_address=__ret__.get('billingAddress'),
        billing_emails=__ret__.get('billingEmails'),
        ca_cert=__ret__.get('caCert'),
        card_id=__ret__.get('cardId'),
        copy_from_project=__ret__.get('copyFromProject'),
        country_code=__ret__.get('countryCode'),
        id=__ret__.get('id'),
        project=__ret__.get('project'),
        technical_emails=__ret__.get('technicalEmails'))
