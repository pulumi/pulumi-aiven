// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    /// <summary>
    /// Creates and manages ClickHouse grants to give users and roles privileges to a ClickHouse service.
    /// 
    /// **Note:**
    /// * Users cannot have the same name as roles.
    /// * To grant a privilege on all tables of a database, omit the table and only keep the database. Don't use `table="*"`.
    /// * Changes first revoke all grants and then reissue the remaining grants for convergence.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aiven = Pulumi.Aiven;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleRole = new Aiven.ClickhouseRole("example_role", new()
    ///     {
    ///         Project = exampleProject.Project,
    ///         ServiceName = exampleClickhouse.ServiceName,
    ///         Role = "example-role",
    ///     });
    /// 
    ///     // Grant privileges to the example role.
    ///     var rolePrivileges = new Aiven.ClickhouseGrant("role_privileges", new()
    ///     {
    ///         Project = exampleProject.Project,
    ///         ServiceName = exampleClickhouse.ServiceName,
    ///         Role = exampleRole.Role,
    ///         PrivilegeGrants = new[]
    ///         {
    ///             new Aiven.Inputs.ClickhouseGrantPrivilegeGrantArgs
    ///             {
    ///                 Privilege = "INSERT",
    ///                 Database = exampleDb.Name,
    ///                 Table = "example-table",
    ///             },
    ///             new Aiven.Inputs.ClickhouseGrantPrivilegeGrantArgs
    ///             {
    ///                 Privilege = "SELECT",
    ///                 Database = exampleDb.Name,
    ///             },
    ///         },
    ///     });
    /// 
    ///     // Grant the role to the user.
    ///     var exampleUser = new Aiven.ClickhouseUser("example_user", new()
    ///     {
    ///         Project = exampleProject.Project,
    ///         ServiceName = exampleClickhouse.ServiceName,
    ///         Username = "example-user",
    ///     });
    /// 
    ///     var userRoleAssignment = new Aiven.ClickhouseGrant("user_role_assignment", new()
    ///     {
    ///         Project = exampleProject.Project,
    ///         ServiceName = exampleClickhouse.ServiceName,
    ///         User = exampleUser.Username,
    ///         RoleGrants = new[]
    ///         {
    ///             new Aiven.Inputs.ClickhouseGrantRoleGrantArgs
    ///             {
    ///                 Role = exampleRole.Role,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import aiven:index/clickhouseGrant:ClickhouseGrant example_grant PROJECT/SERVICE_NAME/ID
    /// ```
    /// </summary>
    [AivenResourceType("aiven:index/clickhouseGrant:ClickhouseGrant")]
    public partial class ClickhouseGrant : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Grant privileges. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("privilegeGrants")]
        public Output<ImmutableArray<Outputs.ClickhouseGrantPrivilegeGrant>> PrivilegeGrants { get; private set; } = null!;

        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The role to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("role")]
        public Output<string?> Role { get; private set; } = null!;

        /// <summary>
        /// Grant roles. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("roleGrants")]
        public Output<ImmutableArray<Outputs.ClickhouseGrantRoleGrant>> RoleGrants { get; private set; } = null!;

        /// <summary>
        /// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// The user to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("user")]
        public Output<string?> User { get; private set; } = null!;


        /// <summary>
        /// Create a ClickhouseGrant resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ClickhouseGrant(string name, ClickhouseGrantArgs args, CustomResourceOptions? options = null)
            : base("aiven:index/clickhouseGrant:ClickhouseGrant", name, args ?? new ClickhouseGrantArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ClickhouseGrant(string name, Input<string> id, ClickhouseGrantState? state = null, CustomResourceOptions? options = null)
            : base("aiven:index/clickhouseGrant:ClickhouseGrant", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ClickhouseGrant resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ClickhouseGrant Get(string name, Input<string> id, ClickhouseGrantState? state = null, CustomResourceOptions? options = null)
        {
            return new ClickhouseGrant(name, id, state, options);
        }
    }

    public sealed class ClickhouseGrantArgs : global::Pulumi.ResourceArgs
    {
        [Input("privilegeGrants")]
        private InputList<Inputs.ClickhouseGrantPrivilegeGrantArgs>? _privilegeGrants;

        /// <summary>
        /// Grant privileges. Changing this property forces recreation of the resource.
        /// </summary>
        public InputList<Inputs.ClickhouseGrantPrivilegeGrantArgs> PrivilegeGrants
        {
            get => _privilegeGrants ?? (_privilegeGrants = new InputList<Inputs.ClickhouseGrantPrivilegeGrantArgs>());
            set => _privilegeGrants = value;
        }

        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// The role to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        [Input("roleGrants")]
        private InputList<Inputs.ClickhouseGrantRoleGrantArgs>? _roleGrants;

        /// <summary>
        /// Grant roles. Changing this property forces recreation of the resource.
        /// </summary>
        public InputList<Inputs.ClickhouseGrantRoleGrantArgs> RoleGrants
        {
            get => _roleGrants ?? (_roleGrants = new InputList<Inputs.ClickhouseGrantRoleGrantArgs>());
            set => _roleGrants = value;
        }

        /// <summary>
        /// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// The user to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("user")]
        public Input<string>? User { get; set; }

        public ClickhouseGrantArgs()
        {
        }
        public static new ClickhouseGrantArgs Empty => new ClickhouseGrantArgs();
    }

    public sealed class ClickhouseGrantState : global::Pulumi.ResourceArgs
    {
        [Input("privilegeGrants")]
        private InputList<Inputs.ClickhouseGrantPrivilegeGrantGetArgs>? _privilegeGrants;

        /// <summary>
        /// Grant privileges. Changing this property forces recreation of the resource.
        /// </summary>
        public InputList<Inputs.ClickhouseGrantPrivilegeGrantGetArgs> PrivilegeGrants
        {
            get => _privilegeGrants ?? (_privilegeGrants = new InputList<Inputs.ClickhouseGrantPrivilegeGrantGetArgs>());
            set => _privilegeGrants = value;
        }

        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The role to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        [Input("roleGrants")]
        private InputList<Inputs.ClickhouseGrantRoleGrantGetArgs>? _roleGrants;

        /// <summary>
        /// Grant roles. Changing this property forces recreation of the resource.
        /// </summary>
        public InputList<Inputs.ClickhouseGrantRoleGrantGetArgs> RoleGrants
        {
            get => _roleGrants ?? (_roleGrants = new InputList<Inputs.ClickhouseGrantRoleGrantGetArgs>());
            set => _roleGrants = value;
        }

        /// <summary>
        /// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// The user to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("user")]
        public Input<string>? User { get; set; }

        public ClickhouseGrantState()
        {
        }
        public static new ClickhouseGrantState Empty => new ClickhouseGrantState();
    }
}
