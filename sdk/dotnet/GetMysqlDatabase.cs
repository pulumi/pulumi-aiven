// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetMysqlDatabase
    {
        /// <summary>
        /// The MySQL Database data source provides information about the existing Aiven MySQL Database.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var mydatabase = Output.Create(Aiven.GetMysqlDatabase.InvokeAsync(new Aiven.GetMysqlDatabaseArgs
        ///         {
        ///             Project = aiven_project.Myproject.Project,
        ///             ServiceName = aiven_service.Myservice.Service_name,
        ///             DatabaseName = "&lt;DATABASE_NAME&gt;",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetMysqlDatabaseResult> InvokeAsync(GetMysqlDatabaseArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMysqlDatabaseResult>("aiven:index/getMysqlDatabase:getMysqlDatabase", args ?? new GetMysqlDatabaseArgs(), options.WithDefaults());

        /// <summary>
        /// The MySQL Database data source provides information about the existing Aiven MySQL Database.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var mydatabase = Output.Create(Aiven.GetMysqlDatabase.InvokeAsync(new Aiven.GetMysqlDatabaseArgs
        ///         {
        ///             Project = aiven_project.Myproject.Project,
        ///             ServiceName = aiven_service.Myservice.Service_name,
        ///             DatabaseName = "&lt;DATABASE_NAME&gt;",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetMysqlDatabaseResult> Invoke(GetMysqlDatabaseInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetMysqlDatabaseResult>("aiven:index/getMysqlDatabase:getMysqlDatabase", args ?? new GetMysqlDatabaseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMysqlDatabaseArgs : Pulumi.InvokeArgs
    {
        [Input("databaseName", required: true)]
        public string DatabaseName { get; set; } = null!;

        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetMysqlDatabaseArgs()
        {
        }
    }

    public sealed class GetMysqlDatabaseInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("databaseName", required: true)]
        public Input<string> DatabaseName { get; set; } = null!;

        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public GetMysqlDatabaseInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetMysqlDatabaseResult
    {
        public readonly string DatabaseName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Project;
        public readonly string ServiceName;
        public readonly bool TerminationProtection;

        [OutputConstructor]
        private GetMysqlDatabaseResult(
            string databaseName,

            string id,

            string project,

            string serviceName,

            bool terminationProtection)
        {
            DatabaseName = databaseName;
            Id = id;
            Project = project;
            ServiceName = serviceName;
            TerminationProtection = terminationProtection;
        }
    }
}
