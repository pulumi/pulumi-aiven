// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetAwsPrivatelink
    {
        /// <summary>
        /// The AWS Privatelink resource allows the creation and management of Aiven AWS Privatelink for a services.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var foo = Output.Create(Aiven.GetAwsPrivatelink.InvokeAsync(new Aiven.GetAwsPrivatelinkArgs
        ///         {
        ///             Project = data.Aiven_project.Foo.Project,
        ///             ServiceName = aiven_kafka.Bar.Service_name,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAwsPrivatelinkResult> InvokeAsync(GetAwsPrivatelinkArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAwsPrivatelinkResult>("aiven:index/getAwsPrivatelink:getAwsPrivatelink", args ?? new GetAwsPrivatelinkArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS Privatelink resource allows the creation and management of Aiven AWS Privatelink for a services.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var foo = Output.Create(Aiven.GetAwsPrivatelink.InvokeAsync(new Aiven.GetAwsPrivatelinkArgs
        ///         {
        ///             Project = data.Aiven_project.Foo.Project,
        ///             ServiceName = aiven_kafka.Bar.Service_name,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAwsPrivatelinkResult> Invoke(GetAwsPrivatelinkInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAwsPrivatelinkResult>("aiven:index/getAwsPrivatelink:getAwsPrivatelink", args ?? new GetAwsPrivatelinkInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAwsPrivatelinkArgs : Pulumi.InvokeArgs
    {
        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetAwsPrivatelinkArgs()
        {
        }
    }

    public sealed class GetAwsPrivatelinkInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public GetAwsPrivatelinkInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAwsPrivatelinkResult
    {
        public readonly string AwsServiceId;
        public readonly string AwsServiceName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Principals;
        public readonly string Project;
        public readonly string ServiceName;

        [OutputConstructor]
        private GetAwsPrivatelinkResult(
            string awsServiceId,

            string awsServiceName,

            string id,

            ImmutableArray<string> principals,

            string project,

            string serviceName)
        {
            AwsServiceId = awsServiceId;
            AwsServiceName = awsServiceName;
            Id = id;
            Principals = principals;
            Project = project;
            ServiceName = serviceName;
        }
    }
}
