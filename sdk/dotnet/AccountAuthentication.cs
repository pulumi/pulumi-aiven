// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    /// <summary>
    /// **This resource is deprecated**.
    /// 
    /// Creates and manages an authentication method.
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import aiven:index/accountAuthentication:AccountAuthentication foo account_id/authentication_id
    /// ```
    /// </summary>
    [AivenResourceType("aiven:index/accountAuthentication:AccountAuthentication")]
    public partial class AccountAuthentication : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The unique id of the account.
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// Account authentication id
        /// </summary>
        [Output("authenticationId")]
        public Output<string> AuthenticationId { get; private set; } = null!;

        /// <summary>
        /// Team ID
        /// </summary>
        [Output("autoJoinTeamId")]
        public Output<string?> AutoJoinTeamId { get; private set; } = null!;

        /// <summary>
        /// Time of creation
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Status of account authentication method. The default value is `false`.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// The name of the account authentication.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// SAML Assertion Consumer Service URL
        /// </summary>
        [Output("samlAcsUrl")]
        public Output<string> SamlAcsUrl { get; private set; } = null!;

        /// <summary>
        /// SAML Certificate
        /// </summary>
        [Output("samlCertificate")]
        public Output<string?> SamlCertificate { get; private set; } = null!;

        /// <summary>
        /// Digest algorithm. This is an advanced option that typically does not need to be set.
        /// </summary>
        [Output("samlDigestAlgorithm")]
        public Output<string?> SamlDigestAlgorithm { get; private set; } = null!;

        /// <summary>
        /// SAML Entity id
        /// </summary>
        [Output("samlEntityId")]
        public Output<string?> SamlEntityId { get; private set; } = null!;

        /// <summary>
        /// Map IdP fields
        /// </summary>
        [Output("samlFieldMapping")]
        public Output<Outputs.AccountAuthenticationSamlFieldMapping?> SamlFieldMapping { get; private set; } = null!;

        /// <summary>
        /// Set to 'true' to enable IdP initiated login
        /// </summary>
        [Output("samlIdpLoginAllowed")]
        public Output<bool?> SamlIdpLoginAllowed { get; private set; } = null!;

        /// <summary>
        /// SAML Idp URL
        /// </summary>
        [Output("samlIdpUrl")]
        public Output<string?> SamlIdpUrl { get; private set; } = null!;

        /// <summary>
        /// SAML Metadata URL
        /// </summary>
        [Output("samlMetadataUrl")]
        public Output<string> SamlMetadataUrl { get; private set; } = null!;

        /// <summary>
        /// Signature algorithm. This is an advanced option that typically does not need to be set.
        /// </summary>
        [Output("samlSignatureAlgorithm")]
        public Output<string?> SamlSignatureAlgorithm { get; private set; } = null!;

        /// <summary>
        /// SAML server variant
        /// </summary>
        [Output("samlVariant")]
        public Output<string?> SamlVariant { get; private set; } = null!;

        /// <summary>
        /// The account authentication type. The possible values are `internal` and `saml`.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Time of last update
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a AccountAuthentication resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AccountAuthentication(string name, AccountAuthenticationArgs args, CustomResourceOptions? options = null)
            : base("aiven:index/accountAuthentication:AccountAuthentication", name, args ?? new AccountAuthenticationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AccountAuthentication(string name, Input<string> id, AccountAuthenticationState? state = null, CustomResourceOptions? options = null)
            : base("aiven:index/accountAuthentication:AccountAuthentication", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AccountAuthentication resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AccountAuthentication Get(string name, Input<string> id, AccountAuthenticationState? state = null, CustomResourceOptions? options = null)
        {
            return new AccountAuthentication(name, id, state, options);
        }
    }

    public sealed class AccountAuthenticationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The unique id of the account.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// Team ID
        /// </summary>
        [Input("autoJoinTeamId")]
        public Input<string>? AutoJoinTeamId { get; set; }

        /// <summary>
        /// Status of account authentication method. The default value is `false`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The name of the account authentication.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// SAML Certificate
        /// </summary>
        [Input("samlCertificate")]
        public Input<string>? SamlCertificate { get; set; }

        /// <summary>
        /// Digest algorithm. This is an advanced option that typically does not need to be set.
        /// </summary>
        [Input("samlDigestAlgorithm")]
        public Input<string>? SamlDigestAlgorithm { get; set; }

        /// <summary>
        /// SAML Entity id
        /// </summary>
        [Input("samlEntityId")]
        public Input<string>? SamlEntityId { get; set; }

        /// <summary>
        /// Map IdP fields
        /// </summary>
        [Input("samlFieldMapping")]
        public Input<Inputs.AccountAuthenticationSamlFieldMappingArgs>? SamlFieldMapping { get; set; }

        /// <summary>
        /// Set to 'true' to enable IdP initiated login
        /// </summary>
        [Input("samlIdpLoginAllowed")]
        public Input<bool>? SamlIdpLoginAllowed { get; set; }

        /// <summary>
        /// SAML Idp URL
        /// </summary>
        [Input("samlIdpUrl")]
        public Input<string>? SamlIdpUrl { get; set; }

        /// <summary>
        /// Signature algorithm. This is an advanced option that typically does not need to be set.
        /// </summary>
        [Input("samlSignatureAlgorithm")]
        public Input<string>? SamlSignatureAlgorithm { get; set; }

        /// <summary>
        /// SAML server variant
        /// </summary>
        [Input("samlVariant")]
        public Input<string>? SamlVariant { get; set; }

        /// <summary>
        /// The account authentication type. The possible values are `internal` and `saml`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public AccountAuthenticationArgs()
        {
        }
        public static new AccountAuthenticationArgs Empty => new AccountAuthenticationArgs();
    }

    public sealed class AccountAuthenticationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The unique id of the account.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Account authentication id
        /// </summary>
        [Input("authenticationId")]
        public Input<string>? AuthenticationId { get; set; }

        /// <summary>
        /// Team ID
        /// </summary>
        [Input("autoJoinTeamId")]
        public Input<string>? AutoJoinTeamId { get; set; }

        /// <summary>
        /// Time of creation
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Status of account authentication method. The default value is `false`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The name of the account authentication.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// SAML Assertion Consumer Service URL
        /// </summary>
        [Input("samlAcsUrl")]
        public Input<string>? SamlAcsUrl { get; set; }

        /// <summary>
        /// SAML Certificate
        /// </summary>
        [Input("samlCertificate")]
        public Input<string>? SamlCertificate { get; set; }

        /// <summary>
        /// Digest algorithm. This is an advanced option that typically does not need to be set.
        /// </summary>
        [Input("samlDigestAlgorithm")]
        public Input<string>? SamlDigestAlgorithm { get; set; }

        /// <summary>
        /// SAML Entity id
        /// </summary>
        [Input("samlEntityId")]
        public Input<string>? SamlEntityId { get; set; }

        /// <summary>
        /// Map IdP fields
        /// </summary>
        [Input("samlFieldMapping")]
        public Input<Inputs.AccountAuthenticationSamlFieldMappingGetArgs>? SamlFieldMapping { get; set; }

        /// <summary>
        /// Set to 'true' to enable IdP initiated login
        /// </summary>
        [Input("samlIdpLoginAllowed")]
        public Input<bool>? SamlIdpLoginAllowed { get; set; }

        /// <summary>
        /// SAML Idp URL
        /// </summary>
        [Input("samlIdpUrl")]
        public Input<string>? SamlIdpUrl { get; set; }

        /// <summary>
        /// SAML Metadata URL
        /// </summary>
        [Input("samlMetadataUrl")]
        public Input<string>? SamlMetadataUrl { get; set; }

        /// <summary>
        /// Signature algorithm. This is an advanced option that typically does not need to be set.
        /// </summary>
        [Input("samlSignatureAlgorithm")]
        public Input<string>? SamlSignatureAlgorithm { get; set; }

        /// <summary>
        /// SAML server variant
        /// </summary>
        [Input("samlVariant")]
        public Input<string>? SamlVariant { get; set; }

        /// <summary>
        /// The account authentication type. The possible values are `internal` and `saml`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// Time of last update
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public AccountAuthenticationState()
        {
        }
        public static new AccountAuthenticationState Empty => new AccountAuthenticationState();
    }
}
