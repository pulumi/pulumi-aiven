// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetServiceIntegrationEndpoint
    {
        /// <summary>
        /// The Service Integration Endpoint data source provides information about the existing Aiven Service Integration Endpoint.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var myendpoint = Output.Create(Aiven.GetServiceIntegrationEndpoint.InvokeAsync(new Aiven.GetServiceIntegrationEndpointArgs
        ///         {
        ///             Project = aiven_project.Myproject.Project,
        ///             EndpointName = "&lt;ENDPOINT_NAME&gt;",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetServiceIntegrationEndpointResult> InvokeAsync(GetServiceIntegrationEndpointArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServiceIntegrationEndpointResult>("aiven:index/getServiceIntegrationEndpoint:getServiceIntegrationEndpoint", args ?? new GetServiceIntegrationEndpointArgs(), options.WithDefaults());

        /// <summary>
        /// The Service Integration Endpoint data source provides information about the existing Aiven Service Integration Endpoint.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var myendpoint = Output.Create(Aiven.GetServiceIntegrationEndpoint.InvokeAsync(new Aiven.GetServiceIntegrationEndpointArgs
        ///         {
        ///             Project = aiven_project.Myproject.Project,
        ///             EndpointName = "&lt;ENDPOINT_NAME&gt;",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetServiceIntegrationEndpointResult> Invoke(GetServiceIntegrationEndpointInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetServiceIntegrationEndpointResult>("aiven:index/getServiceIntegrationEndpoint:getServiceIntegrationEndpoint", args ?? new GetServiceIntegrationEndpointInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceIntegrationEndpointArgs : Pulumi.InvokeArgs
    {
        [Input("endpointName", required: true)]
        public string EndpointName { get; set; } = null!;

        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        public GetServiceIntegrationEndpointArgs()
        {
        }
    }

    public sealed class GetServiceIntegrationEndpointInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("endpointName", required: true)]
        public Input<string> EndpointName { get; set; } = null!;

        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        public GetServiceIntegrationEndpointInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetServiceIntegrationEndpointResult
    {
        public readonly ImmutableArray<Outputs.GetServiceIntegrationEndpointDatadogUserConfigResult> DatadogUserConfigs;
        public readonly ImmutableDictionary<string, string> EndpointConfig;
        public readonly string EndpointName;
        public readonly string EndpointType;
        public readonly ImmutableArray<Outputs.GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigResult> ExternalAwsCloudwatchLogsUserConfigs;
        public readonly ImmutableArray<Outputs.GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigResult> ExternalAwsCloudwatchMetricsUserConfigs;
        public readonly ImmutableArray<Outputs.GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigResult> ExternalElasticsearchLogsUserConfigs;
        public readonly ImmutableArray<Outputs.GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigResult> ExternalGoogleCloudLoggingUserConfigs;
        public readonly ImmutableArray<Outputs.GetServiceIntegrationEndpointExternalKafkaUserConfigResult> ExternalKafkaUserConfigs;
        public readonly ImmutableArray<Outputs.GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigResult> ExternalSchemaRegistryUserConfigs;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetServiceIntegrationEndpointJolokiaUserConfigResult> JolokiaUserConfigs;
        public readonly string Project;
        public readonly ImmutableArray<Outputs.GetServiceIntegrationEndpointPrometheusUserConfigResult> PrometheusUserConfigs;
        public readonly ImmutableArray<Outputs.GetServiceIntegrationEndpointRsyslogUserConfigResult> RsyslogUserConfigs;
        public readonly ImmutableArray<Outputs.GetServiceIntegrationEndpointSignalfxUserConfigResult> SignalfxUserConfigs;

        [OutputConstructor]
        private GetServiceIntegrationEndpointResult(
            ImmutableArray<Outputs.GetServiceIntegrationEndpointDatadogUserConfigResult> datadogUserConfigs,

            ImmutableDictionary<string, string> endpointConfig,

            string endpointName,

            string endpointType,

            ImmutableArray<Outputs.GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigResult> externalAwsCloudwatchLogsUserConfigs,

            ImmutableArray<Outputs.GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigResult> externalAwsCloudwatchMetricsUserConfigs,

            ImmutableArray<Outputs.GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigResult> externalElasticsearchLogsUserConfigs,

            ImmutableArray<Outputs.GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigResult> externalGoogleCloudLoggingUserConfigs,

            ImmutableArray<Outputs.GetServiceIntegrationEndpointExternalKafkaUserConfigResult> externalKafkaUserConfigs,

            ImmutableArray<Outputs.GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigResult> externalSchemaRegistryUserConfigs,

            string id,

            ImmutableArray<Outputs.GetServiceIntegrationEndpointJolokiaUserConfigResult> jolokiaUserConfigs,

            string project,

            ImmutableArray<Outputs.GetServiceIntegrationEndpointPrometheusUserConfigResult> prometheusUserConfigs,

            ImmutableArray<Outputs.GetServiceIntegrationEndpointRsyslogUserConfigResult> rsyslogUserConfigs,

            ImmutableArray<Outputs.GetServiceIntegrationEndpointSignalfxUserConfigResult> signalfxUserConfigs)
        {
            DatadogUserConfigs = datadogUserConfigs;
            EndpointConfig = endpointConfig;
            EndpointName = endpointName;
            EndpointType = endpointType;
            ExternalAwsCloudwatchLogsUserConfigs = externalAwsCloudwatchLogsUserConfigs;
            ExternalAwsCloudwatchMetricsUserConfigs = externalAwsCloudwatchMetricsUserConfigs;
            ExternalElasticsearchLogsUserConfigs = externalElasticsearchLogsUserConfigs;
            ExternalGoogleCloudLoggingUserConfigs = externalGoogleCloudLoggingUserConfigs;
            ExternalKafkaUserConfigs = externalKafkaUserConfigs;
            ExternalSchemaRegistryUserConfigs = externalSchemaRegistryUserConfigs;
            Id = id;
            JolokiaUserConfigs = jolokiaUserConfigs;
            Project = project;
            PrometheusUserConfigs = prometheusUserConfigs;
            RsyslogUserConfigs = rsyslogUserConfigs;
            SignalfxUserConfigs = signalfxUserConfigs;
        }
    }
}
