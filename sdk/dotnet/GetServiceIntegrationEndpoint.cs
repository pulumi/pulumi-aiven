// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetServiceIntegrationEndpoint
    {
        /// <summary>
        /// ## # Service Integration Endpoint Data Source
        /// 
        /// The Service Integration Endpoint data source provides information about the existing 
        /// Aiven Service Integration Endpoint.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var myendpoint = Output.Create(Aiven.GetServiceIntegrationEndpoint.InvokeAsync(new Aiven.GetServiceIntegrationEndpointArgs
        ///         {
        ///             Project = aiven_project.Myproject.Project,
        ///             EndpointName = "&lt;ENDPOINT_NAME&gt;",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetServiceIntegrationEndpointResult> InvokeAsync(GetServiceIntegrationEndpointArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServiceIntegrationEndpointResult>("aiven:index/getServiceIntegrationEndpoint:getServiceIntegrationEndpoint", args ?? new GetServiceIntegrationEndpointArgs(), options.WithDefaults());

        /// <summary>
        /// ## # Service Integration Endpoint Data Source
        /// 
        /// The Service Integration Endpoint data source provides information about the existing 
        /// Aiven Service Integration Endpoint.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var myendpoint = Output.Create(Aiven.GetServiceIntegrationEndpoint.InvokeAsync(new Aiven.GetServiceIntegrationEndpointArgs
        ///         {
        ///             Project = aiven_project.Myproject.Project,
        ///             EndpointName = "&lt;ENDPOINT_NAME&gt;",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetServiceIntegrationEndpointResult> Invoke(GetServiceIntegrationEndpointInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetServiceIntegrationEndpointResult>("aiven:index/getServiceIntegrationEndpoint:getServiceIntegrationEndpoint", args ?? new GetServiceIntegrationEndpointInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceIntegrationEndpointArgs : Pulumi.InvokeArgs
    {
        [Input("datadogUserConfig")]
        public Inputs.GetServiceIntegrationEndpointDatadogUserConfigArgs? DatadogUserConfig { get; set; }

        [Input("endpointConfig")]
        private Dictionary<string, string>? _endpointConfig;
        public Dictionary<string, string> EndpointConfig
        {
            get => _endpointConfig ?? (_endpointConfig = new Dictionary<string, string>());
            set => _endpointConfig = value;
        }

        /// <summary>
        /// is the name of the endpoint. This value has no effect beyond being used
        /// to identify different integration endpoints.
        /// </summary>
        [Input("endpointName", required: true)]
        public string EndpointName { get; set; } = null!;

        /// <summary>
        /// is the type of the external service this endpoint is associated with.
        /// By the time of writing the only available option is `datadog`.
        /// </summary>
        [Input("endpointType")]
        public string? EndpointType { get; set; }

        [Input("externalAwsCloudwatchLogsUserConfig")]
        public Inputs.GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigArgs? ExternalAwsCloudwatchLogsUserConfig { get; set; }

        [Input("externalAwsCloudwatchMetricsUserConfig")]
        public Inputs.GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs? ExternalAwsCloudwatchMetricsUserConfig { get; set; }

        [Input("externalElasticsearchLogsUserConfig")]
        public Inputs.GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigArgs? ExternalElasticsearchLogsUserConfig { get; set; }

        [Input("externalGoogleCloudLoggingUserConfig")]
        public Inputs.GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigArgs? ExternalGoogleCloudLoggingUserConfig { get; set; }

        [Input("externalKafkaUserConfig")]
        public Inputs.GetServiceIntegrationEndpointExternalKafkaUserConfigArgs? ExternalKafkaUserConfig { get; set; }

        [Input("externalSchemaRegistryUserConfig")]
        public Inputs.GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigArgs? ExternalSchemaRegistryUserConfig { get; set; }

        [Input("jolokiaUserConfig")]
        public Inputs.GetServiceIntegrationEndpointJolokiaUserConfigArgs? JolokiaUserConfig { get; set; }

        /// <summary>
        /// defines the project the endpoint is associated with.
        /// </summary>
        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        [Input("prometheusUserConfig")]
        public Inputs.GetServiceIntegrationEndpointPrometheusUserConfigArgs? PrometheusUserConfig { get; set; }

        [Input("rsyslogUserConfig")]
        public Inputs.GetServiceIntegrationEndpointRsyslogUserConfigArgs? RsyslogUserConfig { get; set; }

        [Input("signalfxUserConfig")]
        public Inputs.GetServiceIntegrationEndpointSignalfxUserConfigArgs? SignalfxUserConfig { get; set; }

        public GetServiceIntegrationEndpointArgs()
        {
        }
    }

    public sealed class GetServiceIntegrationEndpointInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("datadogUserConfig")]
        public Input<Inputs.GetServiceIntegrationEndpointDatadogUserConfigInputArgs>? DatadogUserConfig { get; set; }

        [Input("endpointConfig")]
        private InputMap<string>? _endpointConfig;
        public InputMap<string> EndpointConfig
        {
            get => _endpointConfig ?? (_endpointConfig = new InputMap<string>());
            set => _endpointConfig = value;
        }

        /// <summary>
        /// is the name of the endpoint. This value has no effect beyond being used
        /// to identify different integration endpoints.
        /// </summary>
        [Input("endpointName", required: true)]
        public Input<string> EndpointName { get; set; } = null!;

        /// <summary>
        /// is the type of the external service this endpoint is associated with.
        /// By the time of writing the only available option is `datadog`.
        /// </summary>
        [Input("endpointType")]
        public Input<string>? EndpointType { get; set; }

        [Input("externalAwsCloudwatchLogsUserConfig")]
        public Input<Inputs.GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigInputArgs>? ExternalAwsCloudwatchLogsUserConfig { get; set; }

        [Input("externalAwsCloudwatchMetricsUserConfig")]
        public Input<Inputs.GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigInputArgs>? ExternalAwsCloudwatchMetricsUserConfig { get; set; }

        [Input("externalElasticsearchLogsUserConfig")]
        public Input<Inputs.GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigInputArgs>? ExternalElasticsearchLogsUserConfig { get; set; }

        [Input("externalGoogleCloudLoggingUserConfig")]
        public Input<Inputs.GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigInputArgs>? ExternalGoogleCloudLoggingUserConfig { get; set; }

        [Input("externalKafkaUserConfig")]
        public Input<Inputs.GetServiceIntegrationEndpointExternalKafkaUserConfigInputArgs>? ExternalKafkaUserConfig { get; set; }

        [Input("externalSchemaRegistryUserConfig")]
        public Input<Inputs.GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigInputArgs>? ExternalSchemaRegistryUserConfig { get; set; }

        [Input("jolokiaUserConfig")]
        public Input<Inputs.GetServiceIntegrationEndpointJolokiaUserConfigInputArgs>? JolokiaUserConfig { get; set; }

        /// <summary>
        /// defines the project the endpoint is associated with.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        [Input("prometheusUserConfig")]
        public Input<Inputs.GetServiceIntegrationEndpointPrometheusUserConfigInputArgs>? PrometheusUserConfig { get; set; }

        [Input("rsyslogUserConfig")]
        public Input<Inputs.GetServiceIntegrationEndpointRsyslogUserConfigInputArgs>? RsyslogUserConfig { get; set; }

        [Input("signalfxUserConfig")]
        public Input<Inputs.GetServiceIntegrationEndpointSignalfxUserConfigInputArgs>? SignalfxUserConfig { get; set; }

        public GetServiceIntegrationEndpointInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetServiceIntegrationEndpointResult
    {
        public readonly Outputs.GetServiceIntegrationEndpointDatadogUserConfigResult? DatadogUserConfig;
        public readonly ImmutableDictionary<string, string> EndpointConfig;
        public readonly string EndpointName;
        /// <summary>
        /// is the type of the external service this endpoint is associated with.
        /// By the time of writing the only available option is `datadog`.
        /// </summary>
        public readonly string? EndpointType;
        public readonly Outputs.GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigResult? ExternalAwsCloudwatchLogsUserConfig;
        public readonly Outputs.GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigResult? ExternalAwsCloudwatchMetricsUserConfig;
        public readonly Outputs.GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigResult? ExternalElasticsearchLogsUserConfig;
        public readonly Outputs.GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigResult? ExternalGoogleCloudLoggingUserConfig;
        public readonly Outputs.GetServiceIntegrationEndpointExternalKafkaUserConfigResult? ExternalKafkaUserConfig;
        public readonly Outputs.GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigResult? ExternalSchemaRegistryUserConfig;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetServiceIntegrationEndpointJolokiaUserConfigResult? JolokiaUserConfig;
        public readonly string Project;
        public readonly Outputs.GetServiceIntegrationEndpointPrometheusUserConfigResult? PrometheusUserConfig;
        public readonly Outputs.GetServiceIntegrationEndpointRsyslogUserConfigResult? RsyslogUserConfig;
        public readonly Outputs.GetServiceIntegrationEndpointSignalfxUserConfigResult? SignalfxUserConfig;

        [OutputConstructor]
        private GetServiceIntegrationEndpointResult(
            Outputs.GetServiceIntegrationEndpointDatadogUserConfigResult? datadogUserConfig,

            ImmutableDictionary<string, string> endpointConfig,

            string endpointName,

            string? endpointType,

            Outputs.GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigResult? externalAwsCloudwatchLogsUserConfig,

            Outputs.GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigResult? externalAwsCloudwatchMetricsUserConfig,

            Outputs.GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfigResult? externalElasticsearchLogsUserConfig,

            Outputs.GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigResult? externalGoogleCloudLoggingUserConfig,

            Outputs.GetServiceIntegrationEndpointExternalKafkaUserConfigResult? externalKafkaUserConfig,

            Outputs.GetServiceIntegrationEndpointExternalSchemaRegistryUserConfigResult? externalSchemaRegistryUserConfig,

            string id,

            Outputs.GetServiceIntegrationEndpointJolokiaUserConfigResult? jolokiaUserConfig,

            string project,

            Outputs.GetServiceIntegrationEndpointPrometheusUserConfigResult? prometheusUserConfig,

            Outputs.GetServiceIntegrationEndpointRsyslogUserConfigResult? rsyslogUserConfig,

            Outputs.GetServiceIntegrationEndpointSignalfxUserConfigResult? signalfxUserConfig)
        {
            DatadogUserConfig = datadogUserConfig;
            EndpointConfig = endpointConfig;
            EndpointName = endpointName;
            EndpointType = endpointType;
            ExternalAwsCloudwatchLogsUserConfig = externalAwsCloudwatchLogsUserConfig;
            ExternalAwsCloudwatchMetricsUserConfig = externalAwsCloudwatchMetricsUserConfig;
            ExternalElasticsearchLogsUserConfig = externalElasticsearchLogsUserConfig;
            ExternalGoogleCloudLoggingUserConfig = externalGoogleCloudLoggingUserConfig;
            ExternalKafkaUserConfig = externalKafkaUserConfig;
            ExternalSchemaRegistryUserConfig = externalSchemaRegistryUserConfig;
            Id = id;
            JolokiaUserConfig = jolokiaUserConfig;
            Project = project;
            PrometheusUserConfig = prometheusUserConfig;
            RsyslogUserConfig = rsyslogUserConfig;
            SignalfxUserConfig = signalfxUserConfig;
        }
    }
}
