// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    /// <summary>
    /// The aiven.StaticIp resource allows the creation and deletion of static ips. Please not that once a static ip is in the 'assigned' state it is bound to the node it is assigned to and cannot be deleted or disassociated until the node is recycled. Plans that would delete static ips that are in the assigned state will be blocked.
    /// </summary>
    [AivenResourceType("aiven:index/staticIp:StaticIp")]
    public partial class StaticIp : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the cloud that the static ip belongs to. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("cloudName")]
        public Output<string> CloudName { get; private set; } = null!;

        /// <summary>
        /// The address of the static ip.
        /// </summary>
        [Output("ipAddress")]
        public Output<string> IpAddress { get; private set; } = null!;

        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The service name the static ip is associated with.
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// The state the static ip is in.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The static ip id of the resource. Should be used as a reference elsewhere.
        /// </summary>
        [Output("staticIpAddressId")]
        public Output<string> StaticIpAddressId { get; private set; } = null!;


        /// <summary>
        /// Create a StaticIp resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StaticIp(string name, StaticIpArgs args, CustomResourceOptions? options = null)
            : base("aiven:index/staticIp:StaticIp", name, args ?? new StaticIpArgs(), MakeResourceOptions(options, ""))
        {
        }

        private StaticIp(string name, Input<string> id, StaticIpState? state = null, CustomResourceOptions? options = null)
            : base("aiven:index/staticIp:StaticIp", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StaticIp resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StaticIp Get(string name, Input<string> id, StaticIpState? state = null, CustomResourceOptions? options = null)
        {
            return new StaticIp(name, id, state, options);
        }
    }

    public sealed class StaticIpArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the cloud that the static ip belongs to. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("cloudName", required: true)]
        public Input<string> CloudName { get; set; } = null!;

        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        public StaticIpArgs()
        {
        }
        public static new StaticIpArgs Empty => new StaticIpArgs();
    }

    public sealed class StaticIpState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the cloud that the static ip belongs to. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("cloudName")]
        public Input<string>? CloudName { get; set; }

        /// <summary>
        /// The address of the static ip.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The service name the static ip is associated with.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// The state the static ip is in.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The static ip id of the resource. Should be used as a reference elsewhere.
        /// </summary>
        [Input("staticIpAddressId")]
        public Input<string>? StaticIpAddressId { get; set; }

        public StaticIpState()
        {
        }
        public static new StaticIpState Empty => new StaticIpState();
    }
}
