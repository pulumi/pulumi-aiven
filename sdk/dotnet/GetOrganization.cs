// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetOrganization
    {
        /// <summary>
        /// Retrieves information about an organization from Aiven.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var organization1 = Aiven.GetOrganization.Invoke(new()
        ///     {
        ///         Name = "&lt;ORGANIZATION_NAME&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetOrganizationResult> InvokeAsync(GetOrganizationArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationResult>("aiven:index/getOrganization:getOrganization", args ?? new GetOrganizationArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves information about an organization from Aiven.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var organization1 = Aiven.GetOrganization.Invoke(new()
        ///     {
        ///         Name = "&lt;ORGANIZATION_NAME&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetOrganizationResult> Invoke(GetOrganizationInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationResult>("aiven:index/getOrganization:getOrganization", args ?? new GetOrganizationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrganizationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier of the organization.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Name of the organization.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetOrganizationArgs()
        {
        }
        public static new GetOrganizationArgs Empty => new GetOrganizationArgs();
    }

    public sealed class GetOrganizationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier of the organization.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Name of the organization.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetOrganizationInvokeArgs()
        {
        }
        public static new GetOrganizationInvokeArgs Empty => new GetOrganizationInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrganizationResult
    {
        /// <summary>
        /// Timestamp of the creation of the organization.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Identifier of the organization.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Name of the organization.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Tenant identifier of the organization.
        /// </summary>
        public readonly string TenantId;
        /// <summary>
        /// Timestamp of the last update of the organization.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetOrganizationResult(
            string createTime,

            string? id,

            string? name,

            string tenantId,

            string updateTime)
        {
            CreateTime = createTime;
            Id = id;
            Name = name;
            TenantId = tenantId;
            UpdateTime = updateTime;
        }
    }
}
