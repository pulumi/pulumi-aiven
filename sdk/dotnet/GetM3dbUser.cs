// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetM3dbUser
    {
        /// <summary>
        /// The M3DB User data source provides information about the existing Aiven M3DB User.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var user = Output.Create(Aiven.GetM3dbUser.InvokeAsync(new Aiven.GetM3dbUserArgs
        ///         {
        ///             Project = "my-project",
        ///             ServiceName = "my-service",
        ///             Username = "user1",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetM3dbUserResult> InvokeAsync(GetM3dbUserArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetM3dbUserResult>("aiven:index/getM3dbUser:getM3dbUser", args ?? new GetM3dbUserArgs(), options.WithDefaults());

        /// <summary>
        /// The M3DB User data source provides information about the existing Aiven M3DB User.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var user = Output.Create(Aiven.GetM3dbUser.InvokeAsync(new Aiven.GetM3dbUserArgs
        ///         {
        ///             Project = "my-project",
        ///             ServiceName = "my-service",
        ///             Username = "user1",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetM3dbUserResult> Invoke(GetM3dbUserInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetM3dbUserResult>("aiven:index/getM3dbUser:getM3dbUser", args ?? new GetM3dbUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetM3dbUserArgs : Pulumi.InvokeArgs
    {
        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        [Input("username", required: true)]
        public string Username { get; set; } = null!;

        public GetM3dbUserArgs()
        {
        }
    }

    public sealed class GetM3dbUserInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public GetM3dbUserInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetM3dbUserResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Password;
        public readonly string Project;
        public readonly string ServiceName;
        public readonly string Type;
        public readonly string Username;

        [OutputConstructor]
        private GetM3dbUserResult(
            string id,

            string password,

            string project,

            string serviceName,

            string type,

            string username)
        {
            Id = id;
            Password = password;
            Project = project;
            ServiceName = serviceName;
            Type = type;
            Username = username;
        }
    }
}
