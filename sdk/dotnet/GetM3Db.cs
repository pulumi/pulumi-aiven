// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetM3Db
    {
        /// <summary>
        /// Gets information about an Aiven for M3DB service.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleM3db = Aiven.GetM3Db.Invoke(new()
        ///     {
        ///         Project = exampleProject.Project,
        ///         ServiceName = "example-m3db-service",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetM3DbResult> InvokeAsync(GetM3DbArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetM3DbResult>("aiven:index/getM3Db:getM3Db", args ?? new GetM3DbArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about an Aiven for M3DB service.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleM3db = Aiven.GetM3Db.Invoke(new()
        ///     {
        ///         Project = exampleProject.Project,
        ///         ServiceName = "example-m3db-service",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetM3DbResult> Invoke(GetM3DbInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetM3DbResult>("aiven:index/getM3Db:getM3Db", args ?? new GetM3DbInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about an Aiven for M3DB service.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleM3db = Aiven.GetM3Db.Invoke(new()
        ///     {
        ///         Project = exampleProject.Project,
        ///         ServiceName = "example-m3db-service",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetM3DbResult> Invoke(GetM3DbInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetM3DbResult>("aiven:index/getM3Db:getM3Db", args ?? new GetM3DbInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetM3DbArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        /// <summary>
        /// Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetM3DbArgs()
        {
        }
        public static new GetM3DbArgs Empty => new GetM3DbArgs();
    }

    public sealed class GetM3DbInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public GetM3DbInvokeArgs()
        {
        }
        public static new GetM3DbInvokeArgs Empty => new GetM3DbInvokeArgs();
    }


    [OutputType]
    public sealed class GetM3DbResult
    {
        /// <summary>
        /// Add [disk storage](https://aiven.io/docs/platform/howto/add-storage-space) in increments of 30  GiB to scale your service. The maximum value depends on the service type and cloud provider. Removing additional storage causes the service nodes to go through a rolling restart and there might be a short downtime for services with no HA capabilities.
        /// </summary>
        public readonly string AdditionalDiskSpace;
        /// <summary>
        /// Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like [here for Google](https://cloud.google.com/compute/docs/regions-zones/) and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).
        /// </summary>
        public readonly string CloudName;
        /// <summary>
        /// Service component information objects
        /// </summary>
        public readonly ImmutableArray<Outputs.GetM3DbComponentResult> Components;
        /// <summary>
        /// Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
        /// </summary>
        public readonly string DiskSpace;
        /// <summary>
        /// The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
        /// </summary>
        public readonly string DiskSpaceCap;
        /// <summary>
        /// The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for `disk_space`
        /// </summary>
        public readonly string DiskSpaceDefault;
        /// <summary>
        /// The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. `disk_space` needs to increment from `disk_space_default` by increments of this size.
        /// </summary>
        public readonly string DiskSpaceStep;
        /// <summary>
        /// Disk space that service is currently using
        /// </summary>
        public readonly string DiskSpaceUsed;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// M3db user configurable settings. **Warning:** There's no way to reset advanced configuration options to default. Options that you add cannot be removed later
        /// </summary>
        public readonly ImmutableArray<Outputs.GetM3DbM3dbUserConfigResult> M3dbUserConfigs;
        /// <summary>
        /// Values provided by the M3DB server.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetM3DbM3dbResult> M3dbs;
        /// <summary>
        /// Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
        /// </summary>
        public readonly string MaintenanceWindowDow;
        /// <summary>
        /// Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
        /// </summary>
        public readonly string MaintenanceWindowTime;
        /// <summary>
        /// Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are `hobbyist`, `startup-x`, `business-x` and `premium-x` where `x` is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seen from the [Aiven pricing page](https://aiven.io/pricing).
        /// </summary>
        public readonly string Plan;
        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        public readonly string Project;
        /// <summary>
        /// Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.
        /// </summary>
        public readonly string ProjectVpcId;
        /// <summary>
        /// The hostname of the service.
        /// </summary>
        public readonly string ServiceHost;
        /// <summary>
        /// Service integrations to specify when creating a service. Not applied after initial service creation
        /// </summary>
        public readonly ImmutableArray<Outputs.GetM3DbServiceIntegrationResult> ServiceIntegrations;
        /// <summary>
        /// Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.
        /// </summary>
        public readonly string ServiceName;
        /// <summary>
        /// Password used for connecting to the service, if applicable
        /// </summary>
        public readonly string ServicePassword;
        /// <summary>
        /// The port of the service
        /// </summary>
        public readonly int ServicePort;
        /// <summary>
        /// Aiven internal service type code
        /// </summary>
        public readonly string ServiceType;
        /// <summary>
        /// URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
        /// </summary>
        public readonly string ServiceUri;
        /// <summary>
        /// Username used for connecting to the service, if applicable
        /// </summary>
        public readonly string ServiceUsername;
        /// <summary>
        /// Service state. One of `POWEROFF`, `REBALANCING`, `REBUILDING` or `RUNNING`
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
        /// </summary>
        public readonly ImmutableArray<string> StaticIps;
        /// <summary>
        /// Tags are key-value pairs that allow you to categorize services.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetM3DbTagResult> Tags;
        /// <summary>
        /// The email addresses for [service contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive important alerts and updates about this service. You can also set email contacts at the project level.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetM3DbTechEmailResult> TechEmails;
        /// <summary>
        /// Prevents the service from being deleted. It is recommended to set this to `true` for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.
        /// </summary>
        public readonly bool TerminationProtection;

        [OutputConstructor]
        private GetM3DbResult(
            string additionalDiskSpace,

            string cloudName,

            ImmutableArray<Outputs.GetM3DbComponentResult> components,

            string diskSpace,

            string diskSpaceCap,

            string diskSpaceDefault,

            string diskSpaceStep,

            string diskSpaceUsed,

            string id,

            ImmutableArray<Outputs.GetM3DbM3dbUserConfigResult> m3dbUserConfigs,

            ImmutableArray<Outputs.GetM3DbM3dbResult> m3dbs,

            string maintenanceWindowDow,

            string maintenanceWindowTime,

            string plan,

            string project,

            string projectVpcId,

            string serviceHost,

            ImmutableArray<Outputs.GetM3DbServiceIntegrationResult> serviceIntegrations,

            string serviceName,

            string servicePassword,

            int servicePort,

            string serviceType,

            string serviceUri,

            string serviceUsername,

            string state,

            ImmutableArray<string> staticIps,

            ImmutableArray<Outputs.GetM3DbTagResult> tags,

            ImmutableArray<Outputs.GetM3DbTechEmailResult> techEmails,

            bool terminationProtection)
        {
            AdditionalDiskSpace = additionalDiskSpace;
            CloudName = cloudName;
            Components = components;
            DiskSpace = diskSpace;
            DiskSpaceCap = diskSpaceCap;
            DiskSpaceDefault = diskSpaceDefault;
            DiskSpaceStep = diskSpaceStep;
            DiskSpaceUsed = diskSpaceUsed;
            Id = id;
            M3dbUserConfigs = m3dbUserConfigs;
            M3dbs = m3dbs;
            MaintenanceWindowDow = maintenanceWindowDow;
            MaintenanceWindowTime = maintenanceWindowTime;
            Plan = plan;
            Project = project;
            ProjectVpcId = projectVpcId;
            ServiceHost = serviceHost;
            ServiceIntegrations = serviceIntegrations;
            ServiceName = serviceName;
            ServicePassword = servicePassword;
            ServicePort = servicePort;
            ServiceType = serviceType;
            ServiceUri = serviceUri;
            ServiceUsername = serviceUsername;
            State = state;
            StaticIps = staticIps;
            Tags = tags;
            TechEmails = techEmails;
            TerminationProtection = terminationProtection;
        }
    }
}
