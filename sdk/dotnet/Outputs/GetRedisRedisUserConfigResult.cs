// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Outputs
{

    [OutputType]
    public sealed class GetRedisRedisUserConfigResult
    {
        public readonly ImmutableArray<string> IpFilters;
        public readonly Outputs.GetRedisRedisUserConfigMigrationResult? Migration;
        public readonly Outputs.GetRedisRedisUserConfigPrivateAccessResult? PrivateAccess;
        public readonly Outputs.GetRedisRedisUserConfigPublicAccessResult? PublicAccess;
        public readonly string? RedisLfuDecayTime;
        public readonly string? RedisLfuLogFactor;
        public readonly string? RedisMaxmemoryPolicy;
        public readonly string? RedisNotifyKeyspaceEvents;
        public readonly string? RedisSsl;
        public readonly string? RedisTimeout;
        public readonly string? ServiceToForkFrom;

        [OutputConstructor]
        private GetRedisRedisUserConfigResult(
            ImmutableArray<string> ipFilters,

            Outputs.GetRedisRedisUserConfigMigrationResult? migration,

            Outputs.GetRedisRedisUserConfigPrivateAccessResult? privateAccess,

            Outputs.GetRedisRedisUserConfigPublicAccessResult? publicAccess,

            string? redisLfuDecayTime,

            string? redisLfuLogFactor,

            string? redisMaxmemoryPolicy,

            string? redisNotifyKeyspaceEvents,

            string? redisSsl,

            string? redisTimeout,

            string? serviceToForkFrom)
        {
            IpFilters = ipFilters;
            Migration = migration;
            PrivateAccess = privateAccess;
            PublicAccess = publicAccess;
            RedisLfuDecayTime = redisLfuDecayTime;
            RedisLfuLogFactor = redisLfuLogFactor;
            RedisMaxmemoryPolicy = redisMaxmemoryPolicy;
            RedisNotifyKeyspaceEvents = redisNotifyKeyspaceEvents;
            RedisSsl = redisSsl;
            RedisTimeout = redisTimeout;
            ServiceToForkFrom = serviceToForkFrom;
        }
    }
}
