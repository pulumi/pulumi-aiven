// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Outputs
{

    [OutputType]
    public sealed class ServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker
    {
        /// <summary>
        /// Enum: `earliest`, `latest`. Set where consumer starts to consume data. Value `earliest`: Start replication from the earliest offset. Value `latest`: Start replication from the latest offset. Default is `earliest`.
        /// </summary>
        public readonly string? ConsumerAutoOffsetReset;
        /// <summary>
        /// The minimum amount of data the server should return for a fetch request. Example: `1024`.
        /// </summary>
        public readonly int? ConsumerFetchMinBytes;
        /// <summary>
        /// Set consumer max.poll.records. The default is 500. Example: `500`.
        /// </summary>
        public readonly int? ConsumerMaxPollRecords;
        /// <summary>
        /// The batch size in bytes producer will attempt to collect before publishing to broker. Example: `1024`.
        /// </summary>
        public readonly int? ProducerBatchSize;
        /// <summary>
        /// The amount of bytes producer can use for buffering data before publishing to broker.
        /// </summary>
        public readonly int? ProducerBufferMemory;
        /// <summary>
        /// Enum: `gzip`, `lz4`, `none`, `snappy`, `zstd`. Specify the default compression type for producers. This configuration accepts the standard compression codecs (`gzip`, `snappy`, `lz4`, `zstd`). It additionally accepts `none` which is the default and equivalent to no compression.
        /// </summary>
        public readonly string? ProducerCompressionType;
        /// <summary>
        /// The linger time (ms) for waiting new data to arrive for publishing. Example: `100`.
        /// </summary>
        public readonly int? ProducerLingerMs;
        /// <summary>
        /// The maximum request size in bytes.
        /// </summary>
        public readonly int? ProducerMaxRequestSize;

        [OutputConstructor]
        private ServiceIntegrationKafkaMirrormakerUserConfigKafkaMirrormaker(
            string? consumerAutoOffsetReset,

            int? consumerFetchMinBytes,

            int? consumerMaxPollRecords,

            int? producerBatchSize,

            int? producerBufferMemory,

            string? producerCompressionType,

            int? producerLingerMs,

            int? producerMaxRequestSize)
        {
            ConsumerAutoOffsetReset = consumerAutoOffsetReset;
            ConsumerFetchMinBytes = consumerFetchMinBytes;
            ConsumerMaxPollRecords = consumerMaxPollRecords;
            ProducerBatchSize = producerBatchSize;
            ProducerBufferMemory = producerBufferMemory;
            ProducerCompressionType = producerCompressionType;
            ProducerLingerMs = producerLingerMs;
            ProducerMaxRequestSize = producerMaxRequestSize;
        }
    }
}
