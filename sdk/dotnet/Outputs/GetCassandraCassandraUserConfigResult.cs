// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Outputs
{

    [OutputType]
    public sealed class GetCassandraCassandraUserConfigResult
    {
        public readonly string? AdditionalBackupRegions;
        /// <summary>
        /// Cassandra server provided values
        /// </summary>
        public readonly Outputs.GetCassandraCassandraUserConfigCassandraResult? Cassandra;
        public readonly string? CassandraVersion;
        public readonly ImmutableArray<Outputs.GetCassandraCassandraUserConfigIpFilterObjectResult> IpFilterObjects;
        public readonly ImmutableArray<string> IpFilters;
        public readonly string? MigrateSstableloader;
        public readonly Outputs.GetCassandraCassandraUserConfigPrivateAccessResult? PrivateAccess;
        public readonly string? ProjectToForkFrom;
        public readonly Outputs.GetCassandraCassandraUserConfigPublicAccessResult? PublicAccess;
        public readonly string? ServiceToForkFrom;
        public readonly string? ServiceToJoinWith;
        /// <summary>
        /// Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
        /// </summary>
        public readonly string? StaticIps;

        [OutputConstructor]
        private GetCassandraCassandraUserConfigResult(
            string? additionalBackupRegions,

            Outputs.GetCassandraCassandraUserConfigCassandraResult? cassandra,

            string? cassandraVersion,

            ImmutableArray<Outputs.GetCassandraCassandraUserConfigIpFilterObjectResult> ipFilterObjects,

            ImmutableArray<string> ipFilters,

            string? migrateSstableloader,

            Outputs.GetCassandraCassandraUserConfigPrivateAccessResult? privateAccess,

            string? projectToForkFrom,

            Outputs.GetCassandraCassandraUserConfigPublicAccessResult? publicAccess,

            string? serviceToForkFrom,

            string? serviceToJoinWith,

            string? staticIps)
        {
            AdditionalBackupRegions = additionalBackupRegions;
            Cassandra = cassandra;
            CassandraVersion = cassandraVersion;
            IpFilterObjects = ipFilterObjects;
            IpFilters = ipFilters;
            MigrateSstableloader = migrateSstableloader;
            PrivateAccess = privateAccess;
            ProjectToForkFrom = projectToForkFrom;
            PublicAccess = publicAccess;
            ServiceToForkFrom = serviceToForkFrom;
            ServiceToJoinWith = serviceToJoinWith;
            StaticIps = staticIps;
        }
    }
}
