// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Outputs
{

    [OutputType]
    public sealed class KafkaConnectComponent
    {
        /// <summary>
        /// Service component name
        /// </summary>
        public readonly string? Component;
        /// <summary>
        /// Connection info for connecting to the service component. This is a combination of host and port.
        /// </summary>
        public readonly string? ConnectionUri;
        /// <summary>
        /// Host name for connecting to the service component
        /// </summary>
        public readonly string? Host;
        /// <summary>
        /// Kafka authentication method. This is a value specific to the 'kafka' service component
        /// </summary>
        public readonly string? KafkaAuthenticationMethod;
        /// <summary>
        /// Kafka certificate used. The possible values are `letsencrypt` and `project_ca`.
        /// </summary>
        public readonly string? KafkaSslCa;
        /// <summary>
        /// Port number for connecting to the service component
        /// </summary>
        public readonly int? Port;
        /// <summary>
        /// Network access route
        /// </summary>
        public readonly string? Route;
        /// <summary>
        /// Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted and this property is only included for service components they may disable encryption
        /// </summary>
        public readonly bool? Ssl;
        /// <summary>
        /// DNS usage name
        /// </summary>
        public readonly string? Usage;

        [OutputConstructor]
        private KafkaConnectComponent(
            string? component,

            string? connectionUri,

            string? host,

            string? kafkaAuthenticationMethod,

            string? kafkaSslCa,

            int? port,

            string? route,

            bool? ssl,

            string? usage)
        {
            Component = component;
            ConnectionUri = connectionUri;
            Host = host;
            KafkaAuthenticationMethod = kafkaAuthenticationMethod;
            KafkaSslCa = kafkaSslCa;
            Port = port;
            Route = route;
            Ssl = ssl;
            Usage = usage;
        }
    }
}
