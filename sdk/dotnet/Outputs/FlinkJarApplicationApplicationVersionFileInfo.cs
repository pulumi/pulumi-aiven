// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Outputs
{

    [OutputType]
    public sealed class FlinkJarApplicationApplicationVersionFileInfo
    {
        /// <summary>
        /// sha256 of the file if known.
        /// </summary>
        public readonly string? FileSha256;
        /// <summary>
        /// The size of the file in bytes.
        /// </summary>
        public readonly int? FileSize;
        /// <summary>
        /// Indicates whether the uploaded .jar file has been verified by the system and deployment ready. The possible values are `INITIAL`, `READY` and `FAILED`.
        /// </summary>
        public readonly string? FileStatus;
        /// <summary>
        /// The pre-signed url of the bucket where the .jar file is uploaded. Becomes null when the JarApplicationVersion is ready or failed.
        /// </summary>
        public readonly string? Url;
        /// <summary>
        /// In the case file_status is FAILED, the error code of the failure. The possible values are `1`, `2` and `3`.
        /// </summary>
        public readonly int? VerifyErrorCode;
        /// <summary>
        /// In the case file_status is FAILED, may contain details about the failure.
        /// </summary>
        public readonly string? VerifyErrorMessage;

        [OutputConstructor]
        private FlinkJarApplicationApplicationVersionFileInfo(
            string? fileSha256,

            int? fileSize,

            string? fileStatus,

            string? url,

            int? verifyErrorCode,

            string? verifyErrorMessage)
        {
            FileSha256 = fileSha256;
            FileSize = fileSize;
            FileStatus = fileStatus;
            Url = url;
            VerifyErrorCode = verifyErrorCode;
            VerifyErrorMessage = verifyErrorMessage;
        }
    }
}
