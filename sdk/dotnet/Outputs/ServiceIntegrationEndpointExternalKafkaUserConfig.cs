// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Outputs
{

    [OutputType]
    public sealed class ServiceIntegrationEndpointExternalKafkaUserConfig
    {
        /// <summary>
        /// Bootstrap servers.
        /// </summary>
        public readonly string BootstrapServers;
        /// <summary>
        /// Enum: `PLAIN`, `SCRAM-SHA-256`, `SCRAM-SHA-512`. SASL mechanism used for connections to the Kafka server.
        /// </summary>
        public readonly string? SaslMechanism;
        /// <summary>
        /// Password for SASL PLAIN mechanism in the Kafka server.
        /// </summary>
        public readonly string? SaslPlainPassword;
        /// <summary>
        /// Username for SASL PLAIN mechanism in the Kafka server.
        /// </summary>
        public readonly string? SaslPlainUsername;
        /// <summary>
        /// Enum: `PLAINTEXT`, `SSL`, `SASL_PLAINTEXT`, `SASL_SSL`. Security protocol.
        /// </summary>
        public readonly string SecurityProtocol;
        /// <summary>
        /// PEM-encoded CA certificate.
        /// </summary>
        public readonly string? SslCaCert;
        /// <summary>
        /// PEM-encoded client certificate.
        /// </summary>
        public readonly string? SslClientCert;
        /// <summary>
        /// PEM-encoded client key.
        /// </summary>
        public readonly string? SslClientKey;
        /// <summary>
        /// Enum: `https`, ``. The endpoint identification algorithm to validate server hostname using server certificate.
        /// </summary>
        public readonly string? SslEndpointIdentificationAlgorithm;

        [OutputConstructor]
        private ServiceIntegrationEndpointExternalKafkaUserConfig(
            string bootstrapServers,

            string? saslMechanism,

            string? saslPlainPassword,

            string? saslPlainUsername,

            string securityProtocol,

            string? sslCaCert,

            string? sslClientCert,

            string? sslClientKey,

            string? sslEndpointIdentificationAlgorithm)
        {
            BootstrapServers = bootstrapServers;
            SaslMechanism = saslMechanism;
            SaslPlainPassword = saslPlainPassword;
            SaslPlainUsername = saslPlainUsername;
            SecurityProtocol = securityProtocol;
            SslCaCert = sslCaCert;
            SslClientCert = sslClientCert;
            SslClientKey = sslClientKey;
            SslEndpointIdentificationAlgorithm = sslEndpointIdentificationAlgorithm;
        }
    }
}
