// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Outputs
{

    [OutputType]
    public sealed class GetOpenSearchOpensearchUserConfigOpensearchRemoteStoreResult
    {
        /// <summary>
        /// The variance factor that is used together with the moving average to calculate the dynamic bytes lag threshold for activating remote segment backpressure. Defaults to 10.
        /// </summary>
        public readonly double? SegmentPressureBytesLagVarianceFactor;
        /// <summary>
        /// The minimum consecutive failure count for activating remote segment backpressure. Defaults to 5.
        /// </summary>
        public readonly int? SegmentPressureConsecutiveFailuresLimit;
        /// <summary>
        /// Enables remote segment backpressure. Default is `True`.
        /// </summary>
        public readonly bool? SegmentPressureEnabled;
        /// <summary>
        /// The variance factor that is used together with the moving average to calculate the dynamic time lag threshold for activating remote segment backpressure. Defaults to 10.
        /// </summary>
        public readonly double? SegmentPressureTimeLagVarianceFactor;

        [OutputConstructor]
        private GetOpenSearchOpensearchUserConfigOpensearchRemoteStoreResult(
            double? segmentPressureBytesLagVarianceFactor,

            int? segmentPressureConsecutiveFailuresLimit,

            bool? segmentPressureEnabled,

            double? segmentPressureTimeLagVarianceFactor)
        {
            SegmentPressureBytesLagVarianceFactor = segmentPressureBytesLagVarianceFactor;
            SegmentPressureConsecutiveFailuresLimit = segmentPressureConsecutiveFailuresLimit;
            SegmentPressureEnabled = segmentPressureEnabled;
            SegmentPressureTimeLagVarianceFactor = segmentPressureTimeLagVarianceFactor;
        }
    }
}
