// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Outputs
{

    [OutputType]
    public sealed class GetCassandaCassandraUserConfigResult
    {
        public readonly string? AdditionalBackupRegions;
        public readonly int? BackupHour;
        public readonly int? BackupMinute;
        public readonly Outputs.GetCassandaCassandraUserConfigCassandraResult? Cassandra;
        public readonly string? CassandraVersion;
        public readonly ImmutableArray<Outputs.GetCassandaCassandraUserConfigIpFilterObjectResult> IpFilterObjects;
        public readonly ImmutableArray<string> IpFilterStrings;
        public readonly ImmutableArray<string> IpFilters;
        public readonly bool? MigrateSstableloader;
        public readonly Outputs.GetCassandaCassandraUserConfigPrivateAccessResult? PrivateAccess;
        public readonly string? ProjectToForkFrom;
        public readonly Outputs.GetCassandaCassandraUserConfigPublicAccessResult? PublicAccess;
        public readonly bool? ServiceLog;
        public readonly string? ServiceToForkFrom;
        public readonly string? ServiceToJoinWith;
        public readonly bool? StaticIps;

        [OutputConstructor]
        private GetCassandaCassandraUserConfigResult(
            string? additionalBackupRegions,

            int? backupHour,

            int? backupMinute,

            Outputs.GetCassandaCassandraUserConfigCassandraResult? cassandra,

            string? cassandraVersion,

            ImmutableArray<Outputs.GetCassandaCassandraUserConfigIpFilterObjectResult> ipFilterObjects,

            ImmutableArray<string> ipFilterStrings,

            ImmutableArray<string> ipFilters,

            bool? migrateSstableloader,

            Outputs.GetCassandaCassandraUserConfigPrivateAccessResult? privateAccess,

            string? projectToForkFrom,

            Outputs.GetCassandaCassandraUserConfigPublicAccessResult? publicAccess,

            bool? serviceLog,

            string? serviceToForkFrom,

            string? serviceToJoinWith,

            bool? staticIps)
        {
            AdditionalBackupRegions = additionalBackupRegions;
            BackupHour = backupHour;
            BackupMinute = backupMinute;
            Cassandra = cassandra;
            CassandraVersion = cassandraVersion;
            IpFilterObjects = ipFilterObjects;
            IpFilterStrings = ipFilterStrings;
            IpFilters = ipFilters;
            MigrateSstableloader = migrateSstableloader;
            PrivateAccess = privateAccess;
            ProjectToForkFrom = projectToForkFrom;
            PublicAccess = publicAccess;
            ServiceLog = serviceLog;
            ServiceToForkFrom = serviceToForkFrom;
            ServiceToJoinWith = serviceToJoinWith;
            StaticIps = staticIps;
        }
    }
}
