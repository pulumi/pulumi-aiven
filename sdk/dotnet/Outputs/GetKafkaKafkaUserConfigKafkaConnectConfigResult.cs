// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Outputs
{

    [OutputType]
    public sealed class GetKafkaKafkaUserConfigKafkaConnectConfigResult
    {
        public readonly string? ConnectorClientConfigOverridePolicy;
        public readonly string? ConsumerAutoOffsetReset;
        public readonly string? ConsumerFetchMaxBytes;
        public readonly string? ConsumerIsolationLevel;
        public readonly string? ConsumerMaxPartitionFetchBytes;
        public readonly string? ConsumerMaxPollIntervalMs;
        public readonly string? ConsumerMaxPollRecords;
        public readonly string? OffsetFlushIntervalMs;
        public readonly string? OffsetFlushTimeoutMs;
        public readonly string? ProducerMaxRequestSize;
        public readonly string? SessionTimeoutMs;

        [OutputConstructor]
        private GetKafkaKafkaUserConfigKafkaConnectConfigResult(
            string? connectorClientConfigOverridePolicy,

            string? consumerAutoOffsetReset,

            string? consumerFetchMaxBytes,

            string? consumerIsolationLevel,

            string? consumerMaxPartitionFetchBytes,

            string? consumerMaxPollIntervalMs,

            string? consumerMaxPollRecords,

            string? offsetFlushIntervalMs,

            string? offsetFlushTimeoutMs,

            string? producerMaxRequestSize,

            string? sessionTimeoutMs)
        {
            ConnectorClientConfigOverridePolicy = connectorClientConfigOverridePolicy;
            ConsumerAutoOffsetReset = consumerAutoOffsetReset;
            ConsumerFetchMaxBytes = consumerFetchMaxBytes;
            ConsumerIsolationLevel = consumerIsolationLevel;
            ConsumerMaxPartitionFetchBytes = consumerMaxPartitionFetchBytes;
            ConsumerMaxPollIntervalMs = consumerMaxPollIntervalMs;
            ConsumerMaxPollRecords = consumerMaxPollRecords;
            OffsetFlushIntervalMs = offsetFlushIntervalMs;
            OffsetFlushTimeoutMs = offsetFlushTimeoutMs;
            ProducerMaxRequestSize = producerMaxRequestSize;
            SessionTimeoutMs = sessionTimeoutMs;
        }
    }
}
