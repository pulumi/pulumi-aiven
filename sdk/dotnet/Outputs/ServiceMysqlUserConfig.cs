// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Outputs
{

    [OutputType]
    public sealed class ServiceMysqlUserConfig
    {
        public readonly string? AdminPassword;
        public readonly string? AdminUsername;
        public readonly int? BackupHour;
        public readonly int? BackupMinute;
        public readonly ImmutableArray<string> IpFilters;
        public readonly Outputs.ServiceMysqlUserConfigMysql? Mysql;
        public readonly string? MysqlVersion;
        public readonly Outputs.ServiceMysqlUserConfigPrivateAccess? PrivateAccess;
        public readonly Outputs.ServiceMysqlUserConfigPublicAccess? PublicAccess;
        public readonly string? RecoveryTargetTime;
        public readonly string? ServiceToForkFrom;

        [OutputConstructor]
        private ServiceMysqlUserConfig(
            string? adminPassword,

            string? adminUsername,

            int? backupHour,

            int? backupMinute,

            ImmutableArray<string> ipFilters,

            Outputs.ServiceMysqlUserConfigMysql? mysql,

            string? mysqlVersion,

            Outputs.ServiceMysqlUserConfigPrivateAccess? privateAccess,

            Outputs.ServiceMysqlUserConfigPublicAccess? publicAccess,

            string? recoveryTargetTime,

            string? serviceToForkFrom)
        {
            AdminPassword = adminPassword;
            AdminUsername = adminUsername;
            BackupHour = backupHour;
            BackupMinute = backupMinute;
            IpFilters = ipFilters;
            Mysql = mysql;
            MysqlVersion = mysqlVersion;
            PrivateAccess = privateAccess;
            PublicAccess = publicAccess;
            RecoveryTargetTime = recoveryTargetTime;
            ServiceToForkFrom = serviceToForkFrom;
        }
    }
}
