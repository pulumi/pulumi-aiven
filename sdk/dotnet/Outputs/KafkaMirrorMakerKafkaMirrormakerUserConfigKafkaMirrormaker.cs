// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Outputs
{

    [OutputType]
    public sealed class KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker
    {
        /// <summary>
        /// Whether to periodically write the translated offsets
        /// of replicated consumer groups (in the source cluster) to __consumer_offsets topic in target cluster,
        /// as long as no active consumers in that group are connected to the target cluster.
        /// </summary>
        public readonly string? EmitCheckpointsEnabled;
        public readonly string? EmitCheckpointsIntervalSeconds;
        /// <summary>
        /// Whether to periodically check for new consumer groups.
        /// Defaults to 'true'.
        /// </summary>
        public readonly string? RefreshGroupsEnabled;
        /// <summary>
        /// Frequency of consumer group refresh in seconds.
        /// Defaults to 600 seconds (10 minutes).
        /// </summary>
        public readonly string? RefreshGroupsIntervalSeconds;
        /// <summary>
        /// Whether to periodically check for new topics and
        /// partitions. Defaults to 'true'.
        /// </summary>
        public readonly string? RefreshTopicsEnabled;
        /// <summary>
        /// Frequency of topic and partitions refresh in
        /// seconds. Defaults to 600 seconds (10 minutes).
        /// </summary>
        public readonly string? RefreshTopicsIntervalSeconds;
        /// <summary>
        /// Whether to periodically write the translated offsets of replicated consumer groups (in the source cluster) to __consumer_offsets topic in target cluster, as long as no active consumers in that group are connected to the target cluster. Defaults to 'false'.
        /// </summary>
        public readonly string? SyncGroupOffsetsEnabled;
        /// <summary>
        /// Frequency at which consumer group offsets
        /// are synced (default: 60, every minute).
        /// </summary>
        public readonly string? SyncGroupOffsetsIntervalSeconds;

        [OutputConstructor]
        private KafkaMirrorMakerKafkaMirrormakerUserConfigKafkaMirrormaker(
            string? emitCheckpointsEnabled,

            string? emitCheckpointsIntervalSeconds,

            string? refreshGroupsEnabled,

            string? refreshGroupsIntervalSeconds,

            string? refreshTopicsEnabled,

            string? refreshTopicsIntervalSeconds,

            string? syncGroupOffsetsEnabled,

            string? syncGroupOffsetsIntervalSeconds)
        {
            EmitCheckpointsEnabled = emitCheckpointsEnabled;
            EmitCheckpointsIntervalSeconds = emitCheckpointsIntervalSeconds;
            RefreshGroupsEnabled = refreshGroupsEnabled;
            RefreshGroupsIntervalSeconds = refreshGroupsIntervalSeconds;
            RefreshTopicsEnabled = refreshTopicsEnabled;
            RefreshTopicsIntervalSeconds = refreshTopicsIntervalSeconds;
            SyncGroupOffsetsEnabled = syncGroupOffsetsEnabled;
            SyncGroupOffsetsIntervalSeconds = syncGroupOffsetsIntervalSeconds;
        }
    }
}
