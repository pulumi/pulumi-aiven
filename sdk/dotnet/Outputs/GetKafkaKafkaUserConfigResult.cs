// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Outputs
{

    [OutputType]
    public sealed class GetKafkaKafkaUserConfigResult
    {
        public readonly string? CustomDomain;
        public readonly ImmutableArray<string> IpFilters;
        public readonly Outputs.GetKafkaKafkaUserConfigKafkaResult? Kafka;
        public readonly Outputs.GetKafkaKafkaUserConfigKafkaAuthenticationMethodsResult? KafkaAuthenticationMethods;
        public readonly string? KafkaConnect;
        public readonly Outputs.GetKafkaKafkaUserConfigKafkaConnectConfigResult? KafkaConnectConfig;
        public readonly string? KafkaRest;
        public readonly Outputs.GetKafkaKafkaUserConfigKafkaRestConfigResult? KafkaRestConfig;
        public readonly string? KafkaVersion;
        public readonly Outputs.GetKafkaKafkaUserConfigPrivateAccessResult? PrivateAccess;
        public readonly Outputs.GetKafkaKafkaUserConfigPublicAccessResult? PublicAccess;
        public readonly string? SchemaRegistry;

        [OutputConstructor]
        private GetKafkaKafkaUserConfigResult(
            string? customDomain,

            ImmutableArray<string> ipFilters,

            Outputs.GetKafkaKafkaUserConfigKafkaResult? kafka,

            Outputs.GetKafkaKafkaUserConfigKafkaAuthenticationMethodsResult? kafkaAuthenticationMethods,

            string? kafkaConnect,

            Outputs.GetKafkaKafkaUserConfigKafkaConnectConfigResult? kafkaConnectConfig,

            string? kafkaRest,

            Outputs.GetKafkaKafkaUserConfigKafkaRestConfigResult? kafkaRestConfig,

            string? kafkaVersion,

            Outputs.GetKafkaKafkaUserConfigPrivateAccessResult? privateAccess,

            Outputs.GetKafkaKafkaUserConfigPublicAccessResult? publicAccess,

            string? schemaRegistry)
        {
            CustomDomain = customDomain;
            IpFilters = ipFilters;
            Kafka = kafka;
            KafkaAuthenticationMethods = kafkaAuthenticationMethods;
            KafkaConnect = kafkaConnect;
            KafkaConnectConfig = kafkaConnectConfig;
            KafkaRest = kafkaRest;
            KafkaRestConfig = kafkaRestConfig;
            KafkaVersion = kafkaVersion;
            PrivateAccess = privateAccess;
            PublicAccess = publicAccess;
            SchemaRegistry = schemaRegistry;
        }
    }
}
