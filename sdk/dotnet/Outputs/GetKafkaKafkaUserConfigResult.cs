// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Outputs
{

    [OutputType]
    public sealed class GetKafkaKafkaUserConfigResult
    {
        public readonly string? AdditionalBackupRegions;
        public readonly string? CustomDomain;
        public readonly ImmutableArray<Outputs.GetKafkaKafkaUserConfigIpFilterObjectResult> IpFilterObjects;
        public readonly ImmutableArray<string> IpFilters;
        /// <summary>
        /// Kafka server provided values
        /// </summary>
        public readonly Outputs.GetKafkaKafkaUserConfigKafkaResult? Kafka;
        public readonly Outputs.GetKafkaKafkaUserConfigKafkaAuthenticationMethodsResult? KafkaAuthenticationMethods;
        public readonly string? KafkaConnect;
        public readonly Outputs.GetKafkaKafkaUserConfigKafkaConnectConfigResult? KafkaConnectConfig;
        public readonly string? KafkaRest;
        public readonly Outputs.GetKafkaKafkaUserConfigKafkaRestConfigResult? KafkaRestConfig;
        public readonly string? KafkaVersion;
        public readonly Outputs.GetKafkaKafkaUserConfigPrivateAccessResult? PrivateAccess;
        public readonly Outputs.GetKafkaKafkaUserConfigPrivatelinkAccessResult? PrivatelinkAccess;
        public readonly Outputs.GetKafkaKafkaUserConfigPublicAccessResult? PublicAccess;
        public readonly string? SchemaRegistry;
        public readonly Outputs.GetKafkaKafkaUserConfigSchemaRegistryConfigResult? SchemaRegistryConfig;
        /// <summary>
        /// Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
        /// </summary>
        public readonly string? StaticIps;

        [OutputConstructor]
        private GetKafkaKafkaUserConfigResult(
            string? additionalBackupRegions,

            string? customDomain,

            ImmutableArray<Outputs.GetKafkaKafkaUserConfigIpFilterObjectResult> ipFilterObjects,

            ImmutableArray<string> ipFilters,

            Outputs.GetKafkaKafkaUserConfigKafkaResult? kafka,

            Outputs.GetKafkaKafkaUserConfigKafkaAuthenticationMethodsResult? kafkaAuthenticationMethods,

            string? kafkaConnect,

            Outputs.GetKafkaKafkaUserConfigKafkaConnectConfigResult? kafkaConnectConfig,

            string? kafkaRest,

            Outputs.GetKafkaKafkaUserConfigKafkaRestConfigResult? kafkaRestConfig,

            string? kafkaVersion,

            Outputs.GetKafkaKafkaUserConfigPrivateAccessResult? privateAccess,

            Outputs.GetKafkaKafkaUserConfigPrivatelinkAccessResult? privatelinkAccess,

            Outputs.GetKafkaKafkaUserConfigPublicAccessResult? publicAccess,

            string? schemaRegistry,

            Outputs.GetKafkaKafkaUserConfigSchemaRegistryConfigResult? schemaRegistryConfig,

            string? staticIps)
        {
            AdditionalBackupRegions = additionalBackupRegions;
            CustomDomain = customDomain;
            IpFilterObjects = ipFilterObjects;
            IpFilters = ipFilters;
            Kafka = kafka;
            KafkaAuthenticationMethods = kafkaAuthenticationMethods;
            KafkaConnect = kafkaConnect;
            KafkaConnectConfig = kafkaConnectConfig;
            KafkaRest = kafkaRest;
            KafkaRestConfig = kafkaRestConfig;
            KafkaVersion = kafkaVersion;
            PrivateAccess = privateAccess;
            PrivatelinkAccess = privatelinkAccess;
            PublicAccess = publicAccess;
            SchemaRegistry = schemaRegistry;
            SchemaRegistryConfig = schemaRegistryConfig;
            StaticIps = staticIps;
        }
    }
}
