// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Outputs
{

    [OutputType]
    public sealed class GetKafkaConnectKafkaConnectUserConfigResult
    {
        public readonly string? AdditionalBackupRegions;
        public readonly ImmutableArray<Outputs.GetKafkaConnectKafkaConnectUserConfigIpFilterObjectResult> IpFilterObjects;
        public readonly ImmutableArray<string> IpFilters;
        /// <summary>
        /// Kafka Connect server provided values
        /// </summary>
        public readonly Outputs.GetKafkaConnectKafkaConnectUserConfigKafkaConnectResult? KafkaConnect;
        public readonly Outputs.GetKafkaConnectKafkaConnectUserConfigPrivateAccessResult? PrivateAccess;
        public readonly Outputs.GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessResult? PrivatelinkAccess;
        public readonly Outputs.GetKafkaConnectKafkaConnectUserConfigPublicAccessResult? PublicAccess;
        /// <summary>
        /// Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
        /// </summary>
        public readonly bool? StaticIps;

        [OutputConstructor]
        private GetKafkaConnectKafkaConnectUserConfigResult(
            string? additionalBackupRegions,

            ImmutableArray<Outputs.GetKafkaConnectKafkaConnectUserConfigIpFilterObjectResult> ipFilterObjects,

            ImmutableArray<string> ipFilters,

            Outputs.GetKafkaConnectKafkaConnectUserConfigKafkaConnectResult? kafkaConnect,

            Outputs.GetKafkaConnectKafkaConnectUserConfigPrivateAccessResult? privateAccess,

            Outputs.GetKafkaConnectKafkaConnectUserConfigPrivatelinkAccessResult? privatelinkAccess,

            Outputs.GetKafkaConnectKafkaConnectUserConfigPublicAccessResult? publicAccess,

            bool? staticIps)
        {
            AdditionalBackupRegions = additionalBackupRegions;
            IpFilterObjects = ipFilterObjects;
            IpFilters = ipFilters;
            KafkaConnect = kafkaConnect;
            PrivateAccess = privateAccess;
            PrivatelinkAccess = privatelinkAccess;
            PublicAccess = publicAccess;
            StaticIps = staticIps;
        }
    }
}
