// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Outputs
{

    [OutputType]
    public sealed class GetInfluxDbInfluxdbUserConfigInfluxdbResult
    {
        /// <summary>
        /// The maximum duration in seconds before a query is logged as a slow query. Setting this to 0 (the default) will never log slow queries.
        /// </summary>
        public readonly int? LogQueriesAfter;
        /// <summary>
        /// Maximum number of connections to InfluxDB. Setting this to 0 (default) means no limit. If using max_connection_limit, it is recommended to set the value to be large enough in order to not block clients unnecessarily.
        /// </summary>
        public readonly int? MaxConnectionLimit;
        /// <summary>
        /// The maximum number of rows returned in a non-chunked query. Setting this to 0 (the default) allows an unlimited number to be returned.
        /// </summary>
        public readonly int? MaxRowLimit;
        /// <summary>
        /// The maximum number of `GROUP BY time()` buckets that can be processed in a query. Setting this to 0 (the default) allows an unlimited number to be processed.
        /// </summary>
        public readonly int? MaxSelectBuckets;
        /// <summary>
        /// The maximum number of points that can be processed in a SELECT statement. Setting this to 0 (the default) allows an unlimited number to be processed.
        /// </summary>
        public readonly int? MaxSelectPoint;
        /// <summary>
        /// Whether queries should be logged before execution. May log sensitive data contained within a query.
        /// </summary>
        public readonly bool? QueryLogEnabled;
        /// <summary>
        /// The maximum duration in seconds before a query is killed. Setting this to 0 (the default) will never kill slow queries.
        /// </summary>
        public readonly int? QueryTimeout;

        [OutputConstructor]
        private GetInfluxDbInfluxdbUserConfigInfluxdbResult(
            int? logQueriesAfter,

            int? maxConnectionLimit,

            int? maxRowLimit,

            int? maxSelectBuckets,

            int? maxSelectPoint,

            bool? queryLogEnabled,

            int? queryTimeout)
        {
            LogQueriesAfter = logQueriesAfter;
            MaxConnectionLimit = maxConnectionLimit;
            MaxRowLimit = maxRowLimit;
            MaxSelectBuckets = maxSelectBuckets;
            MaxSelectPoint = maxSelectPoint;
            QueryLogEnabled = queryLogEnabled;
            QueryTimeout = queryTimeout;
        }
    }
}
