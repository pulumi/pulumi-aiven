// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Outputs
{

    [OutputType]
    public sealed class GrafanaGrafanaUserConfigAuthGenericOauth
    {
        /// <summary>
        /// Automatically sign-up users on successful sign-in
        /// </summary>
        public readonly string? AllowSignUp;
        /// <summary>
        /// Allowed domain
        /// </summary>
        public readonly ImmutableArray<string> AllowedDomains;
        /// <summary>
        /// Must consist of alpha-numeric characters and dashes"
        /// </summary>
        public readonly ImmutableArray<string> AllowedOrganizations;
        /// <summary>
        /// API URL. This only needs to be set when using self hosted GitLab
        /// </summary>
        public readonly string? ApiUrl;
        /// <summary>
        /// Authorization URL. This only needs to be set when using self hosted GitLab
        /// </summary>
        public readonly string? AuthUrl;
        /// <summary>
        /// Client ID from provider
        /// </summary>
        public readonly string? ClientId;
        /// <summary>
        /// Client secret from provider
        /// </summary>
        public readonly string? ClientSecret;
        /// <summary>
        /// Name of the OAuth integration
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Scope must be non-empty string without whitespace
        /// </summary>
        public readonly ImmutableArray<string> Scopes;
        /// <summary>
        /// Token URL. This only needs to be set when using self hosted GitLab
        /// </summary>
        public readonly string? TokenUrl;

        [OutputConstructor]
        private GrafanaGrafanaUserConfigAuthGenericOauth(
            string? allowSignUp,

            ImmutableArray<string> allowedDomains,

            ImmutableArray<string> allowedOrganizations,

            string? apiUrl,

            string? authUrl,

            string? clientId,

            string? clientSecret,

            string? name,

            ImmutableArray<string> scopes,

            string? tokenUrl)
        {
            AllowSignUp = allowSignUp;
            AllowedDomains = allowedDomains;
            AllowedOrganizations = allowedOrganizations;
            ApiUrl = apiUrl;
            AuthUrl = authUrl;
            ClientId = clientId;
            ClientSecret = clientSecret;
            Name = name;
            Scopes = scopes;
            TokenUrl = tokenUrl;
        }
    }
}
