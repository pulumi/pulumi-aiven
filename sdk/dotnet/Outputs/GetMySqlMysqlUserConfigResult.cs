// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Outputs
{

    [OutputType]
    public sealed class GetMySqlMysqlUserConfigResult
    {
        public readonly string? AdditionalBackupRegions;
        public readonly string? AdminPassword;
        public readonly string? AdminUsername;
        public readonly int? BackupHour;
        public readonly int? BackupMinute;
        public readonly int? BinlogRetentionPeriod;
        public readonly ImmutableArray<Outputs.GetMySqlMysqlUserConfigIpFilterObjectResult> IpFilterObjects;
        public readonly ImmutableArray<string> IpFilters;
        public readonly Outputs.GetMySqlMysqlUserConfigMigrationResult? Migration;
        /// <summary>
        /// MySQL specific server provided values
        /// </summary>
        public readonly Outputs.GetMySqlMysqlUserConfigMysqlResult? Mysql;
        public readonly string? MysqlVersion;
        public readonly Outputs.GetMySqlMysqlUserConfigPrivateAccessResult? PrivateAccess;
        public readonly Outputs.GetMySqlMysqlUserConfigPrivatelinkAccessResult? PrivatelinkAccess;
        public readonly string? ProjectToForkFrom;
        public readonly Outputs.GetMySqlMysqlUserConfigPublicAccessResult? PublicAccess;
        public readonly string? RecoveryTargetTime;
        public readonly string? ServiceToForkFrom;
        /// <summary>
        /// Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
        /// </summary>
        public readonly bool? StaticIps;

        [OutputConstructor]
        private GetMySqlMysqlUserConfigResult(
            string? additionalBackupRegions,

            string? adminPassword,

            string? adminUsername,

            int? backupHour,

            int? backupMinute,

            int? binlogRetentionPeriod,

            ImmutableArray<Outputs.GetMySqlMysqlUserConfigIpFilterObjectResult> ipFilterObjects,

            ImmutableArray<string> ipFilters,

            Outputs.GetMySqlMysqlUserConfigMigrationResult? migration,

            Outputs.GetMySqlMysqlUserConfigMysqlResult? mysql,

            string? mysqlVersion,

            Outputs.GetMySqlMysqlUserConfigPrivateAccessResult? privateAccess,

            Outputs.GetMySqlMysqlUserConfigPrivatelinkAccessResult? privatelinkAccess,

            string? projectToForkFrom,

            Outputs.GetMySqlMysqlUserConfigPublicAccessResult? publicAccess,

            string? recoveryTargetTime,

            string? serviceToForkFrom,

            bool? staticIps)
        {
            AdditionalBackupRegions = additionalBackupRegions;
            AdminPassword = adminPassword;
            AdminUsername = adminUsername;
            BackupHour = backupHour;
            BackupMinute = backupMinute;
            BinlogRetentionPeriod = binlogRetentionPeriod;
            IpFilterObjects = ipFilterObjects;
            IpFilters = ipFilters;
            Migration = migration;
            Mysql = mysql;
            MysqlVersion = mysqlVersion;
            PrivateAccess = privateAccess;
            PrivatelinkAccess = privatelinkAccess;
            ProjectToForkFrom = projectToForkFrom;
            PublicAccess = publicAccess;
            RecoveryTargetTime = recoveryTargetTime;
            ServiceToForkFrom = serviceToForkFrom;
            StaticIps = staticIps;
        }
    }
}
