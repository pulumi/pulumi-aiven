// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Outputs
{

    [OutputType]
    public sealed class OpenSearchOpensearchUserConfigOpensearch
    {
        /// <summary>
        /// Explicitly allow or block automatic creation of indices. Defaults to true.
        /// </summary>
        public readonly bool? ActionAutoCreateIndexEnabled;
        /// <summary>
        /// Require explicit index names when deleting.
        /// </summary>
        public readonly bool? ActionDestructiveRequiresName;
        /// <summary>
        /// Controls the number of shards allowed in the cluster per data node.
        /// </summary>
        public readonly int? ClusterMaxShardsPerNode;
        /// <summary>
        /// How many concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen on a node. Defaults to 2.
        /// </summary>
        public readonly int? ClusterRoutingAllocationNodeConcurrentRecoveries;
        /// <summary>
        /// This should be identical to the Sender name defined in Opensearch dashboards.
        /// </summary>
        public readonly string? EmailSenderName;
        /// <summary>
        /// Sender password for Opensearch alerts to authenticate with SMTP server.
        /// </summary>
        public readonly string? EmailSenderPassword;
        /// <summary>
        /// Sender username for Opensearch alerts.
        /// </summary>
        public readonly string? EmailSenderUsername;
        /// <summary>
        /// Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes.
        /// </summary>
        public readonly int? HttpMaxContentLength;
        /// <summary>
        /// The max size of allowed headers, in bytes.
        /// </summary>
        public readonly int? HttpMaxHeaderSize;
        /// <summary>
        /// The max length of an HTTP URL, in bytes.
        /// </summary>
        public readonly int? HttpMaxInitialLineLength;
        /// <summary>
        /// Relative amount. Maximum amount of heap memory used for field data cache. This is an expert setting; decreasing the value too much will increase overhead of loading field data; too much memory used for field data cache will decrease amount of heap available for other operations.
        /// </summary>
        public readonly int? IndicesFielddataCacheSize;
        /// <summary>
        /// Percentage value. Default is 10%. Total amount of heap used for indexing buffer, before writing segments to disk. This is an expert setting. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance.
        /// </summary>
        public readonly int? IndicesMemoryIndexBufferSize;
        /// <summary>
        /// Percentage value. Default is 10%. Maximum amount of heap used for query cache. This is an expert setting. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other OpenSearch functionality.
        /// </summary>
        public readonly int? IndicesQueriesCacheSize;
        /// <summary>
        /// Maximum number of clauses Lucene BooleanQuery can have. The default value (1024) is relatively high, and increasing it may cause performance issues. Investigate other approaches first before increasing this value.
        /// </summary>
        public readonly int? IndicesQueryBoolMaxClauseCount;
        /// <summary>
        /// Limits total inbound and outbound recovery traffic for each node. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Defaults to 40mb.
        /// </summary>
        public readonly int? IndicesRecoveryMaxBytesPerSec;
        /// <summary>
        /// Number of file chunks sent in parallel for each recovery. Defaults to 2.
        /// </summary>
        public readonly int? IndicesRecoveryMaxConcurrentFileChunks;
        /// <summary>
        /// Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default is false.
        /// </summary>
        public readonly bool? OverrideMainResponseVersion;
        /// <summary>
        /// Whitelisted addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.
        /// </summary>
        public readonly ImmutableArray<string> ReindexRemoteWhitelists;
        /// <summary>
        /// Script compilation circuit breaker limits the number of inline script compilations within a period of time. Default is use-context.
        /// </summary>
        public readonly string? ScriptMaxCompilationsRate;
        /// <summary>
        /// Maximum number of aggregation buckets allowed in a single response. OpenSearch default value is used when this is not defined.
        /// </summary>
        public readonly int? SearchMaxBuckets;
        /// <summary>
        /// Size for the thread pool queue. See documentation for exact details.
        /// </summary>
        public readonly int? ThreadPoolAnalyzeQueueSize;
        /// <summary>
        /// Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
        /// </summary>
        public readonly int? ThreadPoolAnalyzeSize;
        /// <summary>
        /// Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
        /// </summary>
        public readonly int? ThreadPoolForceMergeSize;
        /// <summary>
        /// Size for the thread pool queue. See documentation for exact details.
        /// </summary>
        public readonly int? ThreadPoolGetQueueSize;
        /// <summary>
        /// Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
        /// </summary>
        public readonly int? ThreadPoolGetSize;
        /// <summary>
        /// Size for the thread pool queue. See documentation for exact details.
        /// </summary>
        public readonly int? ThreadPoolSearchQueueSize;
        /// <summary>
        /// Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
        /// </summary>
        public readonly int? ThreadPoolSearchSize;
        /// <summary>
        /// Size for the thread pool queue. See documentation for exact details.
        /// </summary>
        public readonly int? ThreadPoolSearchThrottledQueueSize;
        /// <summary>
        /// Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
        /// </summary>
        public readonly int? ThreadPoolSearchThrottledSize;
        /// <summary>
        /// Size for the thread pool queue. See documentation for exact details.
        /// </summary>
        public readonly int? ThreadPoolWriteQueueSize;
        /// <summary>
        /// Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
        /// </summary>
        public readonly int? ThreadPoolWriteSize;

        [OutputConstructor]
        private OpenSearchOpensearchUserConfigOpensearch(
            bool? actionAutoCreateIndexEnabled,

            bool? actionDestructiveRequiresName,

            int? clusterMaxShardsPerNode,

            int? clusterRoutingAllocationNodeConcurrentRecoveries,

            string? emailSenderName,

            string? emailSenderPassword,

            string? emailSenderUsername,

            int? httpMaxContentLength,

            int? httpMaxHeaderSize,

            int? httpMaxInitialLineLength,

            int? indicesFielddataCacheSize,

            int? indicesMemoryIndexBufferSize,

            int? indicesQueriesCacheSize,

            int? indicesQueryBoolMaxClauseCount,

            int? indicesRecoveryMaxBytesPerSec,

            int? indicesRecoveryMaxConcurrentFileChunks,

            bool? overrideMainResponseVersion,

            ImmutableArray<string> reindexRemoteWhitelists,

            string? scriptMaxCompilationsRate,

            int? searchMaxBuckets,

            int? threadPoolAnalyzeQueueSize,

            int? threadPoolAnalyzeSize,

            int? threadPoolForceMergeSize,

            int? threadPoolGetQueueSize,

            int? threadPoolGetSize,

            int? threadPoolSearchQueueSize,

            int? threadPoolSearchSize,

            int? threadPoolSearchThrottledQueueSize,

            int? threadPoolSearchThrottledSize,

            int? threadPoolWriteQueueSize,

            int? threadPoolWriteSize)
        {
            ActionAutoCreateIndexEnabled = actionAutoCreateIndexEnabled;
            ActionDestructiveRequiresName = actionDestructiveRequiresName;
            ClusterMaxShardsPerNode = clusterMaxShardsPerNode;
            ClusterRoutingAllocationNodeConcurrentRecoveries = clusterRoutingAllocationNodeConcurrentRecoveries;
            EmailSenderName = emailSenderName;
            EmailSenderPassword = emailSenderPassword;
            EmailSenderUsername = emailSenderUsername;
            HttpMaxContentLength = httpMaxContentLength;
            HttpMaxHeaderSize = httpMaxHeaderSize;
            HttpMaxInitialLineLength = httpMaxInitialLineLength;
            IndicesFielddataCacheSize = indicesFielddataCacheSize;
            IndicesMemoryIndexBufferSize = indicesMemoryIndexBufferSize;
            IndicesQueriesCacheSize = indicesQueriesCacheSize;
            IndicesQueryBoolMaxClauseCount = indicesQueryBoolMaxClauseCount;
            IndicesRecoveryMaxBytesPerSec = indicesRecoveryMaxBytesPerSec;
            IndicesRecoveryMaxConcurrentFileChunks = indicesRecoveryMaxConcurrentFileChunks;
            OverrideMainResponseVersion = overrideMainResponseVersion;
            ReindexRemoteWhitelists = reindexRemoteWhitelists;
            ScriptMaxCompilationsRate = scriptMaxCompilationsRate;
            SearchMaxBuckets = searchMaxBuckets;
            ThreadPoolAnalyzeQueueSize = threadPoolAnalyzeQueueSize;
            ThreadPoolAnalyzeSize = threadPoolAnalyzeSize;
            ThreadPoolForceMergeSize = threadPoolForceMergeSize;
            ThreadPoolGetQueueSize = threadPoolGetQueueSize;
            ThreadPoolGetSize = threadPoolGetSize;
            ThreadPoolSearchQueueSize = threadPoolSearchQueueSize;
            ThreadPoolSearchSize = threadPoolSearchSize;
            ThreadPoolSearchThrottledQueueSize = threadPoolSearchThrottledQueueSize;
            ThreadPoolSearchThrottledSize = threadPoolSearchThrottledSize;
            ThreadPoolWriteQueueSize = threadPoolWriteQueueSize;
            ThreadPoolWriteSize = threadPoolWriteSize;
        }
    }
}
