// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Outputs
{

    [OutputType]
    public sealed class GrafanaGrafanaUserConfigDateFormats
    {
        /// <summary>
        /// Default time zone for user preferences. Value `browser` uses browser local time zone. Example: `Europe/Helsinki`.
        /// </summary>
        public readonly string? DefaultTimezone;
        /// <summary>
        /// Moment.js style format string for cases where full date is shown. Example: `YYYY MM DD`.
        /// </summary>
        public readonly string? FullDate;
        /// <summary>
        /// Moment.js style format string used when a time requiring day accuracy is shown. Example: `MM/DD`.
        /// </summary>
        public readonly string? IntervalDay;
        /// <summary>
        /// Moment.js style format string used when a time requiring hour accuracy is shown. Example: `MM/DD HH:mm`.
        /// </summary>
        public readonly string? IntervalHour;
        /// <summary>
        /// Moment.js style format string used when a time requiring minute accuracy is shown. Example: `HH:mm`.
        /// </summary>
        public readonly string? IntervalMinute;
        /// <summary>
        /// Moment.js style format string used when a time requiring month accuracy is shown. Example: `YYYY-MM`.
        /// </summary>
        public readonly string? IntervalMonth;
        /// <summary>
        /// Moment.js style format string used when a time requiring second accuracy is shown. Example: `HH:mm:ss`.
        /// </summary>
        public readonly string? IntervalSecond;
        /// <summary>
        /// Moment.js style format string used when a time requiring year accuracy is shown. Example: `YYYY`.
        /// </summary>
        public readonly string? IntervalYear;

        [OutputConstructor]
        private GrafanaGrafanaUserConfigDateFormats(
            string? defaultTimezone,

            string? fullDate,

            string? intervalDay,

            string? intervalHour,

            string? intervalMinute,

            string? intervalMonth,

            string? intervalSecond,

            string? intervalYear)
        {
            DefaultTimezone = defaultTimezone;
            FullDate = fullDate;
            IntervalDay = intervalDay;
            IntervalHour = intervalHour;
            IntervalMinute = intervalMinute;
            IntervalMonth = intervalMonth;
            IntervalSecond = intervalSecond;
            IntervalYear = intervalYear;
        }
    }
}
