// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Outputs
{

    [OutputType]
    public sealed class ServiceRedisUserConfig
    {
        public readonly ImmutableArray<string> IpFilters;
        public readonly Outputs.ServiceRedisUserConfigMigration? Migration;
        public readonly Outputs.ServiceRedisUserConfigPrivateAccess? PrivateAccess;
        public readonly Outputs.ServiceRedisUserConfigPrivatelinkAccess? PrivatelinkAccess;
        public readonly string? ProjectToForkFrom;
        public readonly Outputs.ServiceRedisUserConfigPublicAccess? PublicAccess;
        public readonly string? RecoveryBasebackupName;
        public readonly string? RedisAclChannelsDefault;
        public readonly string? RedisIoThreads;
        public readonly string? RedisLfuDecayTime;
        public readonly string? RedisLfuLogFactor;
        public readonly string? RedisMaxmemoryPolicy;
        public readonly string? RedisNotifyKeyspaceEvents;
        public readonly string? RedisNumberOfDatabases;
        public readonly string? RedisPersistence;
        public readonly string? RedisPubsubClientOutputBufferLimit;
        public readonly string? RedisSsl;
        public readonly string? RedisTimeout;
        public readonly string? ServiceToForkFrom;
        public readonly string? StaticIps;

        [OutputConstructor]
        private ServiceRedisUserConfig(
            ImmutableArray<string> ipFilters,

            Outputs.ServiceRedisUserConfigMigration? migration,

            Outputs.ServiceRedisUserConfigPrivateAccess? privateAccess,

            Outputs.ServiceRedisUserConfigPrivatelinkAccess? privatelinkAccess,

            string? projectToForkFrom,

            Outputs.ServiceRedisUserConfigPublicAccess? publicAccess,

            string? recoveryBasebackupName,

            string? redisAclChannelsDefault,

            string? redisIoThreads,

            string? redisLfuDecayTime,

            string? redisLfuLogFactor,

            string? redisMaxmemoryPolicy,

            string? redisNotifyKeyspaceEvents,

            string? redisNumberOfDatabases,

            string? redisPersistence,

            string? redisPubsubClientOutputBufferLimit,

            string? redisSsl,

            string? redisTimeout,

            string? serviceToForkFrom,

            string? staticIps)
        {
            IpFilters = ipFilters;
            Migration = migration;
            PrivateAccess = privateAccess;
            PrivatelinkAccess = privatelinkAccess;
            ProjectToForkFrom = projectToForkFrom;
            PublicAccess = publicAccess;
            RecoveryBasebackupName = recoveryBasebackupName;
            RedisAclChannelsDefault = redisAclChannelsDefault;
            RedisIoThreads = redisIoThreads;
            RedisLfuDecayTime = redisLfuDecayTime;
            RedisLfuLogFactor = redisLfuLogFactor;
            RedisMaxmemoryPolicy = redisMaxmemoryPolicy;
            RedisNotifyKeyspaceEvents = redisNotifyKeyspaceEvents;
            RedisNumberOfDatabases = redisNumberOfDatabases;
            RedisPersistence = redisPersistence;
            RedisPubsubClientOutputBufferLimit = redisPubsubClientOutputBufferLimit;
            RedisSsl = redisSsl;
            RedisTimeout = redisTimeout;
            ServiceToForkFrom = serviceToForkFrom;
            StaticIps = staticIps;
        }
    }
}
