// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Outputs
{

    [OutputType]
    public sealed class CassandraCassandraUserConfig
    {
        /// <summary>
        /// Additional Cloud Regions for Backup Replication.
        /// </summary>
        public readonly string? AdditionalBackupRegions;
        /// <summary>
        /// The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.
        /// </summary>
        public readonly int? BackupHour;
        /// <summary>
        /// The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.
        /// </summary>
        public readonly int? BackupMinute;
        /// <summary>
        /// cassandra configuration values.
        /// </summary>
        public readonly Outputs.CassandraCassandraUserConfigCassandra? Cassandra;
        /// <summary>
        /// Cassandra major version.
        /// </summary>
        public readonly string? CassandraVersion;
        /// <summary>
        /// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
        /// </summary>
        public readonly ImmutableArray<Outputs.CassandraCassandraUserConfigIpFilterObject> IpFilterObjects;
        /// <summary>
        /// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
        /// </summary>
        public readonly ImmutableArray<string> IpFilterStrings;
        /// <summary>
        /// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
        /// </summary>
        public readonly ImmutableArray<string> IpFilters;
        /// <summary>
        /// Sets the service into migration mode enabling the sstableloader utility to be used to upload Cassandra data files. Available only on service create.
        /// </summary>
        public readonly bool? MigrateSstableloader;
        /// <summary>
        /// Allow access to selected service ports from private networks.
        /// </summary>
        public readonly Outputs.CassandraCassandraUserConfigPrivateAccess? PrivateAccess;
        /// <summary>
        /// Name of another project to fork a service from. This has effect only when a new service is being created.
        /// </summary>
        public readonly string? ProjectToForkFrom;
        /// <summary>
        /// Allow access to selected service ports from the public Internet.
        /// </summary>
        public readonly Outputs.CassandraCassandraUserConfigPublicAccess? PublicAccess;
        /// <summary>
        /// Name of another service to fork from. This has effect only when a new service is being created.
        /// </summary>
        public readonly string? ServiceToForkFrom;
        /// <summary>
        /// When bootstrapping, instead of creating a new Cassandra cluster try to join an existing one from another service. Can only be set on service creation.
        /// </summary>
        public readonly string? ServiceToJoinWith;
        /// <summary>
        /// Use static public IP addresses.
        /// </summary>
        public readonly bool? StaticIps;

        [OutputConstructor]
        private CassandraCassandraUserConfig(
            string? additionalBackupRegions,

            int? backupHour,

            int? backupMinute,

            Outputs.CassandraCassandraUserConfigCassandra? cassandra,

            string? cassandraVersion,

            ImmutableArray<Outputs.CassandraCassandraUserConfigIpFilterObject> ipFilterObjects,

            ImmutableArray<string> ipFilterStrings,

            ImmutableArray<string> ipFilters,

            bool? migrateSstableloader,

            Outputs.CassandraCassandraUserConfigPrivateAccess? privateAccess,

            string? projectToForkFrom,

            Outputs.CassandraCassandraUserConfigPublicAccess? publicAccess,

            string? serviceToForkFrom,

            string? serviceToJoinWith,

            bool? staticIps)
        {
            AdditionalBackupRegions = additionalBackupRegions;
            BackupHour = backupHour;
            BackupMinute = backupMinute;
            Cassandra = cassandra;
            CassandraVersion = cassandraVersion;
            IpFilterObjects = ipFilterObjects;
            IpFilterStrings = ipFilterStrings;
            IpFilters = ipFilters;
            MigrateSstableloader = migrateSstableloader;
            PrivateAccess = privateAccess;
            ProjectToForkFrom = projectToForkFrom;
            PublicAccess = publicAccess;
            ServiceToForkFrom = serviceToForkFrom;
            ServiceToJoinWith = serviceToJoinWith;
            StaticIps = staticIps;
        }
    }
}
