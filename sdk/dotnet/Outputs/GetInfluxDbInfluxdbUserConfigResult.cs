// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Outputs
{

    [OutputType]
    public sealed class GetInfluxDbInfluxdbUserConfigResult
    {
        public readonly string? AdditionalBackupRegions;
        public readonly string? CustomDomain;
        public readonly Outputs.GetInfluxDbInfluxdbUserConfigInfluxdbResult? Influxdb;
        public readonly ImmutableArray<Outputs.GetInfluxDbInfluxdbUserConfigIpFilterObjectResult> IpFilterObjects;
        public readonly ImmutableArray<string> IpFilterStrings;
        public readonly ImmutableArray<string> IpFilters;
        public readonly Outputs.GetInfluxDbInfluxdbUserConfigPrivateAccessResult? PrivateAccess;
        public readonly Outputs.GetInfluxDbInfluxdbUserConfigPrivatelinkAccessResult? PrivatelinkAccess;
        public readonly string? ProjectToForkFrom;
        public readonly Outputs.GetInfluxDbInfluxdbUserConfigPublicAccessResult? PublicAccess;
        public readonly string? RecoveryBasebackupName;
        public readonly string? ServiceToForkFrom;
        public readonly bool? StaticIps;

        [OutputConstructor]
        private GetInfluxDbInfluxdbUserConfigResult(
            string? additionalBackupRegions,

            string? customDomain,

            Outputs.GetInfluxDbInfluxdbUserConfigInfluxdbResult? influxdb,

            ImmutableArray<Outputs.GetInfluxDbInfluxdbUserConfigIpFilterObjectResult> ipFilterObjects,

            ImmutableArray<string> ipFilterStrings,

            ImmutableArray<string> ipFilters,

            Outputs.GetInfluxDbInfluxdbUserConfigPrivateAccessResult? privateAccess,

            Outputs.GetInfluxDbInfluxdbUserConfigPrivatelinkAccessResult? privatelinkAccess,

            string? projectToForkFrom,

            Outputs.GetInfluxDbInfluxdbUserConfigPublicAccessResult? publicAccess,

            string? recoveryBasebackupName,

            string? serviceToForkFrom,

            bool? staticIps)
        {
            AdditionalBackupRegions = additionalBackupRegions;
            CustomDomain = customDomain;
            Influxdb = influxdb;
            IpFilterObjects = ipFilterObjects;
            IpFilterStrings = ipFilterStrings;
            IpFilters = ipFilters;
            PrivateAccess = privateAccess;
            PrivatelinkAccess = privatelinkAccess;
            ProjectToForkFrom = projectToForkFrom;
            PublicAccess = publicAccess;
            RecoveryBasebackupName = recoveryBasebackupName;
            ServiceToForkFrom = serviceToForkFrom;
            StaticIps = staticIps;
        }
    }
}
