// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetMirrorMakerReplicationFlow
    {
        public static Task<GetMirrorMakerReplicationFlowResult> InvokeAsync(GetMirrorMakerReplicationFlowArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMirrorMakerReplicationFlowResult>("aiven:index/getMirrorMakerReplicationFlow:getMirrorMakerReplicationFlow", args ?? new GetMirrorMakerReplicationFlowArgs(), options.WithVersion());
    }


    public sealed class GetMirrorMakerReplicationFlowArgs : Pulumi.InvokeArgs
    {
        [Input("enable")]
        public bool? Enable { get; set; }

        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        [Input("sourceCluster", required: true)]
        public string SourceCluster { get; set; } = null!;

        [Input("targetCluster", required: true)]
        public string TargetCluster { get; set; } = null!;

        [Input("topics")]
        private List<string>? _topics;
        public List<string> Topics
        {
            get => _topics ?? (_topics = new List<string>());
            set => _topics = value;
        }

        [Input("topicsBlacklists")]
        private List<string>? _topicsBlacklists;
        public List<string> TopicsBlacklists
        {
            get => _topicsBlacklists ?? (_topicsBlacklists = new List<string>());
            set => _topicsBlacklists = value;
        }

        public GetMirrorMakerReplicationFlowArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetMirrorMakerReplicationFlowResult
    {
        public readonly bool? Enable;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Project;
        public readonly string ServiceName;
        public readonly string SourceCluster;
        public readonly string TargetCluster;
        public readonly ImmutableArray<string> Topics;
        public readonly ImmutableArray<string> TopicsBlacklists;

        [OutputConstructor]
        private GetMirrorMakerReplicationFlowResult(
            bool? enable,

            string id,

            string project,

            string serviceName,

            string sourceCluster,

            string targetCluster,

            ImmutableArray<string> topics,

            ImmutableArray<string> topicsBlacklists)
        {
            Enable = enable;
            Id = id;
            Project = project;
            ServiceName = serviceName;
            SourceCluster = sourceCluster;
            TargetCluster = targetCluster;
            Topics = topics;
            TopicsBlacklists = topicsBlacklists;
        }
    }
}
