// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    /// <summary>
    /// Creates and manages an application user token. Review the [best practices](https://aiven.io/docs/platform/concepts/application-users#security-best-practices) for securing application users and their tokens.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aiven = Pulumi.Aiven;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var tfUser = new Aiven.OrganizationApplicationUser("tf_user", new()
    ///     {
    ///         OrganizationId = main.Id,
    ///         Name = "app-terraform",
    ///     });
    /// 
    ///     var example = new Aiven.OrganizationApplicationUserToken("example", new()
    ///     {
    ///         OrganizationId = main.Id,
    ///         UserId = tfUser.UserId,
    ///         Description = "Token for TF access to Aiven.",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import aiven:index/organizationApplicationUserToken:OrganizationApplicationUserToken example ORGANIZATION_ID/USER_ID/TOKEN_PREFIX
    /// ```
    /// </summary>
    [AivenResourceType("aiven:index/organizationApplicationUserToken:OrganizationApplicationUserToken")]
    public partial class OrganizationApplicationUserToken : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Time when the token was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// True for tokens explicitly created using the `access_tokens` API. False for tokens created when a user logs in.
        /// </summary>
        [Output("createdManually")]
        public Output<bool> CreatedManually { get; private set; } = null!;

        /// <summary>
        /// True if the API request was made with this token.
        /// </summary>
        [Output("currentlyActive")]
        public Output<bool> CurrentlyActive { get; private set; } = null!;

        /// <summary>
        /// Description of the token.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Timestamp when the access token will expire unless extended.
        /// </summary>
        [Output("expiryTime")]
        public Output<string> ExpiryTime { get; private set; } = null!;

        /// <summary>
        /// Extends the token session duration when the token is used. Only applicable if a value is set for `max_age_seconds`.
        /// </summary>
        [Output("extendWhenUsed")]
        public Output<bool?> ExtendWhenUsed { get; private set; } = null!;

        /// <summary>
        /// Full token.
        /// </summary>
        [Output("fullToken")]
        public Output<string> FullToken { get; private set; } = null!;

        /// <summary>
        /// IP address of the last request made with this token.
        /// </summary>
        [Output("lastIp")]
        public Output<string> LastIp { get; private set; } = null!;

        /// <summary>
        /// Timestamp when the access token was last used.
        /// </summary>
        [Output("lastUsedTime")]
        public Output<string> LastUsedTime { get; private set; } = null!;

        /// <summary>
        /// User agent of the last request made with this token.
        /// </summary>
        [Output("lastUserAgent")]
        public Output<string> LastUserAgent { get; private set; } = null!;

        /// <summary>
        /// User agent of the last request made with this token in human-readable format.
        /// </summary>
        [Output("lastUserAgentHumanReadable")]
        public Output<string> LastUserAgentHumanReadable { get; private set; } = null!;

        /// <summary>
        /// The number of hours after which a token expires. Default session duration is 10 hours.
        /// </summary>
        [Output("maxAgeSeconds")]
        public Output<double?> MaxAgeSeconds { get; private set; } = null!;

        /// <summary>
        /// The ID of the organization the application user belongs to.
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// Restricts the scopes for this token.
        /// </summary>
        [Output("scopes")]
        public Output<ImmutableArray<string>> Scopes { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.OrganizationApplicationUserTokenTimeouts?> Timeouts { get; private set; } = null!;

        /// <summary>
        /// Prefix of the token.
        /// </summary>
        [Output("tokenPrefix")]
        public Output<string> TokenPrefix { get; private set; } = null!;

        /// <summary>
        /// The ID of the application user the token is created for.
        /// </summary>
        [Output("userId")]
        public Output<string> UserId { get; private set; } = null!;


        /// <summary>
        /// Create a OrganizationApplicationUserToken resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrganizationApplicationUserToken(string name, OrganizationApplicationUserTokenArgs args, CustomResourceOptions? options = null)
            : base("aiven:index/organizationApplicationUserToken:OrganizationApplicationUserToken", name, args ?? new OrganizationApplicationUserTokenArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrganizationApplicationUserToken(string name, Input<string> id, OrganizationApplicationUserTokenState? state = null, CustomResourceOptions? options = null)
            : base("aiven:index/organizationApplicationUserToken:OrganizationApplicationUserToken", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "fullToken",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrganizationApplicationUserToken resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrganizationApplicationUserToken Get(string name, Input<string> id, OrganizationApplicationUserTokenState? state = null, CustomResourceOptions? options = null)
        {
            return new OrganizationApplicationUserToken(name, id, state, options);
        }
    }

    public sealed class OrganizationApplicationUserTokenArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the token.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Extends the token session duration when the token is used. Only applicable if a value is set for `max_age_seconds`.
        /// </summary>
        [Input("extendWhenUsed")]
        public Input<bool>? ExtendWhenUsed { get; set; }

        /// <summary>
        /// The number of hours after which a token expires. Default session duration is 10 hours.
        /// </summary>
        [Input("maxAgeSeconds")]
        public Input<double>? MaxAgeSeconds { get; set; }

        /// <summary>
        /// The ID of the organization the application user belongs to.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        [Input("scopes")]
        private InputList<string>? _scopes;

        /// <summary>
        /// Restricts the scopes for this token.
        /// </summary>
        public InputList<string> Scopes
        {
            get => _scopes ?? (_scopes = new InputList<string>());
            set => _scopes = value;
        }

        [Input("timeouts")]
        public Input<Inputs.OrganizationApplicationUserTokenTimeoutsArgs>? Timeouts { get; set; }

        /// <summary>
        /// The ID of the application user the token is created for.
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public OrganizationApplicationUserTokenArgs()
        {
        }
        public static new OrganizationApplicationUserTokenArgs Empty => new OrganizationApplicationUserTokenArgs();
    }

    public sealed class OrganizationApplicationUserTokenState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Time when the token was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// True for tokens explicitly created using the `access_tokens` API. False for tokens created when a user logs in.
        /// </summary>
        [Input("createdManually")]
        public Input<bool>? CreatedManually { get; set; }

        /// <summary>
        /// True if the API request was made with this token.
        /// </summary>
        [Input("currentlyActive")]
        public Input<bool>? CurrentlyActive { get; set; }

        /// <summary>
        /// Description of the token.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Timestamp when the access token will expire unless extended.
        /// </summary>
        [Input("expiryTime")]
        public Input<string>? ExpiryTime { get; set; }

        /// <summary>
        /// Extends the token session duration when the token is used. Only applicable if a value is set for `max_age_seconds`.
        /// </summary>
        [Input("extendWhenUsed")]
        public Input<bool>? ExtendWhenUsed { get; set; }

        [Input("fullToken")]
        private Input<string>? _fullToken;

        /// <summary>
        /// Full token.
        /// </summary>
        public Input<string>? FullToken
        {
            get => _fullToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _fullToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// IP address of the last request made with this token.
        /// </summary>
        [Input("lastIp")]
        public Input<string>? LastIp { get; set; }

        /// <summary>
        /// Timestamp when the access token was last used.
        /// </summary>
        [Input("lastUsedTime")]
        public Input<string>? LastUsedTime { get; set; }

        /// <summary>
        /// User agent of the last request made with this token.
        /// </summary>
        [Input("lastUserAgent")]
        public Input<string>? LastUserAgent { get; set; }

        /// <summary>
        /// User agent of the last request made with this token in human-readable format.
        /// </summary>
        [Input("lastUserAgentHumanReadable")]
        public Input<string>? LastUserAgentHumanReadable { get; set; }

        /// <summary>
        /// The number of hours after which a token expires. Default session duration is 10 hours.
        /// </summary>
        [Input("maxAgeSeconds")]
        public Input<double>? MaxAgeSeconds { get; set; }

        /// <summary>
        /// The ID of the organization the application user belongs to.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        [Input("scopes")]
        private InputList<string>? _scopes;

        /// <summary>
        /// Restricts the scopes for this token.
        /// </summary>
        public InputList<string> Scopes
        {
            get => _scopes ?? (_scopes = new InputList<string>());
            set => _scopes = value;
        }

        [Input("timeouts")]
        public Input<Inputs.OrganizationApplicationUserTokenTimeoutsGetArgs>? Timeouts { get; set; }

        /// <summary>
        /// Prefix of the token.
        /// </summary>
        [Input("tokenPrefix")]
        public Input<string>? TokenPrefix { get; set; }

        /// <summary>
        /// The ID of the application user the token is created for.
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        public OrganizationApplicationUserTokenState()
        {
        }
        public static new OrganizationApplicationUserTokenState Empty => new OrganizationApplicationUserTokenState();
    }
}
