// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    /// <summary>
    /// Adds a user as a team member.
    /// 
    /// During the creation of this resource, an invite is sent to the address specified in `user_email`.
    /// The user is added to the team after they accept the invite. Deleting `aiven.AccountTeamMember`
    /// deletes the pending invite if not accepted or removes the user from the team if they already accepted the invite.
    /// 
    /// !&gt; **Teams have been deprecated and are being migrated to groups**
    /// **On 30 September 2024** the Account Owners team will transition to super admin. Super admin have full access to the organization.
    /// The Account Owners and super admin are synced, so the removal of the Account Owners team will have no impact on existing permissions.
    /// **From 4 November 2024** you won't be able to create new teams or update existing ones. Existing teams will be migrated to groups after
    /// this date. **On 2 December 2024** all teams will be deleted and the teams feature will be completely removed. View the
    /// migration guide for more information on the changes and migrating to groups.
    /// 
    /// &gt; **Important**
    /// You can't delete the Account Owners team. **Deleting all other teams in your organization will disable the teams feature.**
    /// You won't be able to create new teams or access your Account Owners team.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aiven = Pulumi.Aiven;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var main = new Aiven.AccountTeamMember("main", new()
    ///     {
    ///         AccountId = ACCOUNT_RESOURCE_NAME.AccountId,
    ///         TeamId = TEAM_RESOURCE_NAME.TeamId,
    ///         UserEmail = "user+1@example.com",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import aiven:index/accountTeamMember:AccountTeamMember foo ACCOUNT_ID/TEAM_ID/USER_EMAIL
    /// ```
    /// </summary>
    [AivenResourceType("aiven:index/accountTeamMember:AccountTeamMember")]
    public partial class AccountTeamMember : global::Pulumi.CustomResource
    {
        /// <summary>
        /// is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an account team.
        /// </summary>
        [Output("accepted")]
        public Output<bool> Accepted { get; private set; } = null!;

        /// <summary>
        /// The unique account id. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// Time of creation
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The email address that invited this user.
        /// </summary>
        [Output("invitedByUserEmail")]
        public Output<string> InvitedByUserEmail { get; private set; } = null!;

        /// <summary>
        /// An account team id. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("teamId")]
        public Output<string> TeamId { get; private set; } = null!;

        /// <summary>
        /// Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. Should be lowercase. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("userEmail")]
        public Output<string> UserEmail { get; private set; } = null!;


        /// <summary>
        /// Create a AccountTeamMember resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AccountTeamMember(string name, AccountTeamMemberArgs args, CustomResourceOptions? options = null)
            : base("aiven:index/accountTeamMember:AccountTeamMember", name, args ?? new AccountTeamMemberArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AccountTeamMember(string name, Input<string> id, AccountTeamMemberState? state = null, CustomResourceOptions? options = null)
            : base("aiven:index/accountTeamMember:AccountTeamMember", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AccountTeamMember resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AccountTeamMember Get(string name, Input<string> id, AccountTeamMemberState? state = null, CustomResourceOptions? options = null)
        {
            return new AccountTeamMember(name, id, state, options);
        }
    }

    public sealed class AccountTeamMemberArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The unique account id. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// An account team id. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("teamId", required: true)]
        public Input<string> TeamId { get; set; } = null!;

        /// <summary>
        /// Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. Should be lowercase. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("userEmail", required: true)]
        public Input<string> UserEmail { get; set; } = null!;

        public AccountTeamMemberArgs()
        {
        }
        public static new AccountTeamMemberArgs Empty => new AccountTeamMemberArgs();
    }

    public sealed class AccountTeamMemberState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// is a boolean flag that determines whether an invitation was accepted or not by the user. `false` value means that the invitation was sent to the user but not yet accepted. `true` means that the user accepted the invitation and now a member of an account team.
        /// </summary>
        [Input("accepted")]
        public Input<bool>? Accepted { get; set; }

        /// <summary>
        /// The unique account id. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Time of creation
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The email address that invited this user.
        /// </summary>
        [Input("invitedByUserEmail")]
        public Input<string>? InvitedByUserEmail { get; set; }

        /// <summary>
        /// An account team id. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        /// <summary>
        /// Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. Should be lowercase. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("userEmail")]
        public Input<string>? UserEmail { get; set; }

        public AccountTeamMemberState()
        {
        }
        public static new AccountTeamMemberState Empty => new AccountTeamMemberState();
    }
}
