// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    /// <summary>
    /// During the creation of `aiven.AccountTeamMember` resource, an email invitation will be sent
    /// to a user using `user_email` address. If the user accepts an invitation, he or she will become a member of the account team.
    /// The deletion of `aiven.AccountTeamMember` will not only delete invitation if one was sent but not yet accepted by the
    /// user, and it will also eliminate an account team member if one has accepted an invitation previously.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aiven = Pulumi.Aiven;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var foo = new Aiven.AccountTeamMember("foo", new Aiven.AccountTeamMemberArgs
    ///         {
    ///             AccountId = aiven_account.Developers.Account_id,
    ///             TeamId = aiven_account.Developers.Account_id,
    ///             UserEmail = "user+1@example.com",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    public partial class AccountTeamMember : Pulumi.CustomResource
    {
        /// <summary>
        /// Team member invitation status
        /// </summary>
        [Output("accepted")]
        public Output<bool> Accepted { get; private set; } = null!;

        /// <summary>
        /// Account id
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// Time of creation
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Team invited by user email
        /// </summary>
        [Output("invitedByUserEmail")]
        public Output<string> InvitedByUserEmail { get; private set; } = null!;

        /// <summary>
        /// Account team id
        /// </summary>
        [Output("teamId")]
        public Output<string> TeamId { get; private set; } = null!;

        /// <summary>
        /// Team invite user email
        /// </summary>
        [Output("userEmail")]
        public Output<string> UserEmail { get; private set; } = null!;


        /// <summary>
        /// Create a AccountTeamMember resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AccountTeamMember(string name, AccountTeamMemberArgs args, CustomResourceOptions? options = null)
            : base("aiven:index/accountTeamMember:AccountTeamMember", name, args ?? new AccountTeamMemberArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AccountTeamMember(string name, Input<string> id, AccountTeamMemberState? state = null, CustomResourceOptions? options = null)
            : base("aiven:index/accountTeamMember:AccountTeamMember", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AccountTeamMember resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AccountTeamMember Get(string name, Input<string> id, AccountTeamMemberState? state = null, CustomResourceOptions? options = null)
        {
            return new AccountTeamMember(name, id, state, options);
        }
    }

    public sealed class AccountTeamMemberArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Team member invitation status
        /// </summary>
        [Input("accepted")]
        public Input<bool>? Accepted { get; set; }

        /// <summary>
        /// Account id
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// Time of creation
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Team invited by user email
        /// </summary>
        [Input("invitedByUserEmail")]
        public Input<string>? InvitedByUserEmail { get; set; }

        /// <summary>
        /// Account team id
        /// </summary>
        [Input("teamId", required: true)]
        public Input<string> TeamId { get; set; } = null!;

        /// <summary>
        /// Team invite user email
        /// </summary>
        [Input("userEmail", required: true)]
        public Input<string> UserEmail { get; set; } = null!;

        public AccountTeamMemberArgs()
        {
        }
    }

    public sealed class AccountTeamMemberState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Team member invitation status
        /// </summary>
        [Input("accepted")]
        public Input<bool>? Accepted { get; set; }

        /// <summary>
        /// Account id
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Time of creation
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Team invited by user email
        /// </summary>
        [Input("invitedByUserEmail")]
        public Input<string>? InvitedByUserEmail { get; set; }

        /// <summary>
        /// Account team id
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        /// <summary>
        /// Team invite user email
        /// </summary>
        [Input("userEmail")]
        public Input<string>? UserEmail { get; set; }

        public AccountTeamMemberState()
        {
        }
    }
}
