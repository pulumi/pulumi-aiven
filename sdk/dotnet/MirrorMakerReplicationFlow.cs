// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    /// <summary>
    /// Creates and manages an [Aiven for Apache KafkaÂ® MirrorMaker 2](https://aiven.io/docs/products/kafka/kafka-mirrormaker) replication flow.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aiven = Pulumi.Aiven;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleReplicationFlow = new Aiven.MirrorMakerReplicationFlow("example_replication_flow", new()
    ///     {
    ///         Project = exampleProject.Project,
    ///         ServiceName = exampleKafka.ServiceName,
    ///         SourceCluster = source.ServiceName,
    ///         TargetCluster = target.ServiceName,
    ///         Enable = true,
    ///         Topics = new[]
    ///         {
    ///             ".*",
    ///         },
    ///         TopicsBlacklists = new[]
    ///         {
    ///             ".*[\\-\\.]internal",
    ///             ".*\\.replica",
    ///             "__.*",
    ///         },
    ///         ConfigPropertiesExcludes = new[]
    ///         {
    ///             "follower\\.replication\\.throttled\\.replicas",
    ///             "leader\\.replication\\.throttled\\.replicas",
    ///             "message\\.timestamp\\.difference\\.max\\.ms",
    ///             "message\\.timestamp\\.type",
    ///             "unclean\\.leader\\.election\\.enable",
    ///             "min\\.insync\\.replicas",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import aiven:index/mirrorMakerReplicationFlow:MirrorMakerReplicationFlow example_replication_flow PROJECT/SERVICE_NAME/SOURCE_CLUSTER/TARGET_CLUSTER
    /// ```
    /// </summary>
    [AivenResourceType("aiven:index/mirrorMakerReplicationFlow:MirrorMakerReplicationFlow")]
    public partial class MirrorMakerReplicationFlow : global::Pulumi.CustomResource
    {
        /// <summary>
        /// List of topic configuration properties and regular expressions to not replicate. The properties that are not replicated by default are: `follower.replication.throttled.replicas`, `leader.replication.throttled.replicas`, `message.timestamp.difference.max.ms`, `message.timestamp.type`, `unclean.leader.election.enable`, and `min.insync.replicas`. Setting this overrides the defaults. For example, to enable replication for 'min.insync.replicas' and 'unclean.leader.election.enable' set this to: ["follower\\.replication\\.throttled\\.replicas", "leader\\.replication\\.throttled\\.replicas", "message\\.timestamp\\.difference\\.max\\.ms",  "message\\.timestamp\\.type"]
        /// </summary>
        [Output("configPropertiesExcludes")]
        public Output<ImmutableArray<string>> ConfigPropertiesExcludes { get; private set; } = null!;

        /// <summary>
        /// Enables emitting heartbeats to the direction opposite to the flow, i.e. to the source cluster. The default value is `False`.
        /// </summary>
        [Output("emitBackwardHeartbeatsEnabled")]
        public Output<bool?> EmitBackwardHeartbeatsEnabled { get; private set; } = null!;

        /// <summary>
        /// Enables emitting heartbeats to the target cluster. The default value is `False`.
        /// </summary>
        [Output("emitHeartbeatsEnabled")]
        public Output<bool?> EmitHeartbeatsEnabled { get; private set; } = null!;

        /// <summary>
        /// Enables replication flow for a service.
        /// </summary>
        [Output("enable")]
        public Output<bool> Enable { get; private set; } = null!;

        /// <summary>
        /// Enables exactly-once message delivery. Set this to `Enabled` for new replications. The default value is `False`.
        /// </summary>
        [Output("exactlyOnceDeliveryEnabled")]
        public Output<bool?> ExactlyOnceDeliveryEnabled { get; private set; } = null!;

        /// <summary>
        /// Offset syncs topic location. The possible values are `Source` and `Target`.
        /// </summary>
        [Output("offsetSyncsTopicLocation")]
        public Output<string> OffsetSyncsTopicLocation { get; private set; } = null!;

        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Replication factor, `&gt;= 1`.
        /// </summary>
        [Output("replicationFactor")]
        public Output<int?> ReplicationFactor { get; private set; } = null!;

        /// <summary>
        /// Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.
        /// </summary>
        [Output("replicationPolicyClass")]
        public Output<string> ReplicationPolicyClass { get; private set; } = null!;

        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// Source cluster alias. Maximum length: `128`.
        /// </summary>
        [Output("sourceCluster")]
        public Output<string> SourceCluster { get; private set; } = null!;

        /// <summary>
        /// Sync consumer group offsets. The default value is `False`.
        /// </summary>
        [Output("syncGroupOffsetsEnabled")]
        public Output<bool?> SyncGroupOffsetsEnabled { get; private set; } = null!;

        /// <summary>
        /// Frequency of consumer group offset sync. The default value is `1`.
        /// </summary>
        [Output("syncGroupOffsetsIntervalSeconds")]
        public Output<int?> SyncGroupOffsetsIntervalSeconds { get; private set; } = null!;

        /// <summary>
        /// Target cluster alias. Maximum length: `128`.
        /// </summary>
        [Output("targetCluster")]
        public Output<string> TargetCluster { get; private set; } = null!;

        /// <summary>
        /// The topics to include in the replica defined by a [list of regular expressions in Java format](https://aiven.io/docs/products/kafka/kafka-mirrormaker/concepts/replication-flow-topics-regex).
        /// </summary>
        [Output("topics")]
        public Output<ImmutableArray<string>> Topics { get; private set; } = null!;

        /// <summary>
        /// The topics to exclude from the replica defined by a [list of regular expressions in Java format](https://aiven.io/docs/products/kafka/kafka-mirrormaker/concepts/replication-flow-topics-regex).
        /// </summary>
        [Output("topicsBlacklists")]
        public Output<ImmutableArray<string>> TopicsBlacklists { get; private set; } = null!;


        /// <summary>
        /// Create a MirrorMakerReplicationFlow resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MirrorMakerReplicationFlow(string name, MirrorMakerReplicationFlowArgs args, CustomResourceOptions? options = null)
            : base("aiven:index/mirrorMakerReplicationFlow:MirrorMakerReplicationFlow", name, args ?? new MirrorMakerReplicationFlowArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MirrorMakerReplicationFlow(string name, Input<string> id, MirrorMakerReplicationFlowState? state = null, CustomResourceOptions? options = null)
            : base("aiven:index/mirrorMakerReplicationFlow:MirrorMakerReplicationFlow", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MirrorMakerReplicationFlow resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MirrorMakerReplicationFlow Get(string name, Input<string> id, MirrorMakerReplicationFlowState? state = null, CustomResourceOptions? options = null)
        {
            return new MirrorMakerReplicationFlow(name, id, state, options);
        }
    }

    public sealed class MirrorMakerReplicationFlowArgs : global::Pulumi.ResourceArgs
    {
        [Input("configPropertiesExcludes")]
        private InputList<string>? _configPropertiesExcludes;

        /// <summary>
        /// List of topic configuration properties and regular expressions to not replicate. The properties that are not replicated by default are: `follower.replication.throttled.replicas`, `leader.replication.throttled.replicas`, `message.timestamp.difference.max.ms`, `message.timestamp.type`, `unclean.leader.election.enable`, and `min.insync.replicas`. Setting this overrides the defaults. For example, to enable replication for 'min.insync.replicas' and 'unclean.leader.election.enable' set this to: ["follower\\.replication\\.throttled\\.replicas", "leader\\.replication\\.throttled\\.replicas", "message\\.timestamp\\.difference\\.max\\.ms",  "message\\.timestamp\\.type"]
        /// </summary>
        public InputList<string> ConfigPropertiesExcludes
        {
            get => _configPropertiesExcludes ?? (_configPropertiesExcludes = new InputList<string>());
            set => _configPropertiesExcludes = value;
        }

        /// <summary>
        /// Enables emitting heartbeats to the direction opposite to the flow, i.e. to the source cluster. The default value is `False`.
        /// </summary>
        [Input("emitBackwardHeartbeatsEnabled")]
        public Input<bool>? EmitBackwardHeartbeatsEnabled { get; set; }

        /// <summary>
        /// Enables emitting heartbeats to the target cluster. The default value is `False`.
        /// </summary>
        [Input("emitHeartbeatsEnabled")]
        public Input<bool>? EmitHeartbeatsEnabled { get; set; }

        /// <summary>
        /// Enables replication flow for a service.
        /// </summary>
        [Input("enable", required: true)]
        public Input<bool> Enable { get; set; } = null!;

        /// <summary>
        /// Enables exactly-once message delivery. Set this to `Enabled` for new replications. The default value is `False`.
        /// </summary>
        [Input("exactlyOnceDeliveryEnabled")]
        public Input<bool>? ExactlyOnceDeliveryEnabled { get; set; }

        /// <summary>
        /// Offset syncs topic location. The possible values are `Source` and `Target`.
        /// </summary>
        [Input("offsetSyncsTopicLocation", required: true)]
        public Input<string> OffsetSyncsTopicLocation { get; set; } = null!;

        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// Replication factor, `&gt;= 1`.
        /// </summary>
        [Input("replicationFactor")]
        public Input<int>? ReplicationFactor { get; set; }

        /// <summary>
        /// Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.
        /// </summary>
        [Input("replicationPolicyClass", required: true)]
        public Input<string> ReplicationPolicyClass { get; set; } = null!;

        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// Source cluster alias. Maximum length: `128`.
        /// </summary>
        [Input("sourceCluster", required: true)]
        public Input<string> SourceCluster { get; set; } = null!;

        /// <summary>
        /// Sync consumer group offsets. The default value is `False`.
        /// </summary>
        [Input("syncGroupOffsetsEnabled")]
        public Input<bool>? SyncGroupOffsetsEnabled { get; set; }

        /// <summary>
        /// Frequency of consumer group offset sync. The default value is `1`.
        /// </summary>
        [Input("syncGroupOffsetsIntervalSeconds")]
        public Input<int>? SyncGroupOffsetsIntervalSeconds { get; set; }

        /// <summary>
        /// Target cluster alias. Maximum length: `128`.
        /// </summary>
        [Input("targetCluster", required: true)]
        public Input<string> TargetCluster { get; set; } = null!;

        [Input("topics")]
        private InputList<string>? _topics;

        /// <summary>
        /// The topics to include in the replica defined by a [list of regular expressions in Java format](https://aiven.io/docs/products/kafka/kafka-mirrormaker/concepts/replication-flow-topics-regex).
        /// </summary>
        public InputList<string> Topics
        {
            get => _topics ?? (_topics = new InputList<string>());
            set => _topics = value;
        }

        [Input("topicsBlacklists")]
        private InputList<string>? _topicsBlacklists;

        /// <summary>
        /// The topics to exclude from the replica defined by a [list of regular expressions in Java format](https://aiven.io/docs/products/kafka/kafka-mirrormaker/concepts/replication-flow-topics-regex).
        /// </summary>
        public InputList<string> TopicsBlacklists
        {
            get => _topicsBlacklists ?? (_topicsBlacklists = new InputList<string>());
            set => _topicsBlacklists = value;
        }

        public MirrorMakerReplicationFlowArgs()
        {
        }
        public static new MirrorMakerReplicationFlowArgs Empty => new MirrorMakerReplicationFlowArgs();
    }

    public sealed class MirrorMakerReplicationFlowState : global::Pulumi.ResourceArgs
    {
        [Input("configPropertiesExcludes")]
        private InputList<string>? _configPropertiesExcludes;

        /// <summary>
        /// List of topic configuration properties and regular expressions to not replicate. The properties that are not replicated by default are: `follower.replication.throttled.replicas`, `leader.replication.throttled.replicas`, `message.timestamp.difference.max.ms`, `message.timestamp.type`, `unclean.leader.election.enable`, and `min.insync.replicas`. Setting this overrides the defaults. For example, to enable replication for 'min.insync.replicas' and 'unclean.leader.election.enable' set this to: ["follower\\.replication\\.throttled\\.replicas", "leader\\.replication\\.throttled\\.replicas", "message\\.timestamp\\.difference\\.max\\.ms",  "message\\.timestamp\\.type"]
        /// </summary>
        public InputList<string> ConfigPropertiesExcludes
        {
            get => _configPropertiesExcludes ?? (_configPropertiesExcludes = new InputList<string>());
            set => _configPropertiesExcludes = value;
        }

        /// <summary>
        /// Enables emitting heartbeats to the direction opposite to the flow, i.e. to the source cluster. The default value is `False`.
        /// </summary>
        [Input("emitBackwardHeartbeatsEnabled")]
        public Input<bool>? EmitBackwardHeartbeatsEnabled { get; set; }

        /// <summary>
        /// Enables emitting heartbeats to the target cluster. The default value is `False`.
        /// </summary>
        [Input("emitHeartbeatsEnabled")]
        public Input<bool>? EmitHeartbeatsEnabled { get; set; }

        /// <summary>
        /// Enables replication flow for a service.
        /// </summary>
        [Input("enable")]
        public Input<bool>? Enable { get; set; }

        /// <summary>
        /// Enables exactly-once message delivery. Set this to `Enabled` for new replications. The default value is `False`.
        /// </summary>
        [Input("exactlyOnceDeliveryEnabled")]
        public Input<bool>? ExactlyOnceDeliveryEnabled { get; set; }

        /// <summary>
        /// Offset syncs topic location. The possible values are `Source` and `Target`.
        /// </summary>
        [Input("offsetSyncsTopicLocation")]
        public Input<string>? OffsetSyncsTopicLocation { get; set; }

        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Replication factor, `&gt;= 1`.
        /// </summary>
        [Input("replicationFactor")]
        public Input<int>? ReplicationFactor { get; set; }

        /// <summary>
        /// Replication policy class. The possible values are `org.apache.kafka.connect.mirror.DefaultReplicationPolicy` and `org.apache.kafka.connect.mirror.IdentityReplicationPolicy`. The default value is `org.apache.kafka.connect.mirror.DefaultReplicationPolicy`.
        /// </summary>
        [Input("replicationPolicyClass")]
        public Input<string>? ReplicationPolicyClass { get; set; }

        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// Source cluster alias. Maximum length: `128`.
        /// </summary>
        [Input("sourceCluster")]
        public Input<string>? SourceCluster { get; set; }

        /// <summary>
        /// Sync consumer group offsets. The default value is `False`.
        /// </summary>
        [Input("syncGroupOffsetsEnabled")]
        public Input<bool>? SyncGroupOffsetsEnabled { get; set; }

        /// <summary>
        /// Frequency of consumer group offset sync. The default value is `1`.
        /// </summary>
        [Input("syncGroupOffsetsIntervalSeconds")]
        public Input<int>? SyncGroupOffsetsIntervalSeconds { get; set; }

        /// <summary>
        /// Target cluster alias. Maximum length: `128`.
        /// </summary>
        [Input("targetCluster")]
        public Input<string>? TargetCluster { get; set; }

        [Input("topics")]
        private InputList<string>? _topics;

        /// <summary>
        /// The topics to include in the replica defined by a [list of regular expressions in Java format](https://aiven.io/docs/products/kafka/kafka-mirrormaker/concepts/replication-flow-topics-regex).
        /// </summary>
        public InputList<string> Topics
        {
            get => _topics ?? (_topics = new InputList<string>());
            set => _topics = value;
        }

        [Input("topicsBlacklists")]
        private InputList<string>? _topicsBlacklists;

        /// <summary>
        /// The topics to exclude from the replica defined by a [list of regular expressions in Java format](https://aiven.io/docs/products/kafka/kafka-mirrormaker/concepts/replication-flow-topics-regex).
        /// </summary>
        public InputList<string> TopicsBlacklists
        {
            get => _topicsBlacklists ?? (_topicsBlacklists = new InputList<string>());
            set => _topicsBlacklists = value;
        }

        public MirrorMakerReplicationFlowState()
        {
        }
        public static new MirrorMakerReplicationFlowState Empty => new MirrorMakerReplicationFlowState();
    }
}
