// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    /// <summary>
    /// ## # MirrorMaker 2 Replication Flow Resource
    /// 
    /// The MirrorMaker 2 Replication Flow resource allows the creation and management of MirrorMaker 2
    /// Replication Flows on Aiven Cloud.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aiven = Pulumi.Aiven;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var f1 = new Aiven.MirrorMakerReplicationFlow("f1", new Aiven.MirrorMakerReplicationFlowArgs
    ///         {
    ///             Project = aiven_project.Kafka_mm_project1.Project,
    ///             ServiceName = aiven_service.Mm.Service_name,
    ///             SourceCluster = aiven_service.Source.Service_name,
    ///             TargetCluster = aiven_service.Target.Service_name,
    ///             Enable = true,
    ///             Topics = 
    ///             {
    ///                 ".*",
    ///             },
    ///             TopicsBlacklists = 
    ///             {
    ///                 ".*[\\-\\.]internal",
    ///                 ".*\\.replica",
    ///                 "__.*",
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    [AivenResourceType("aiven:index/mirrorMakerReplicationFlow:MirrorMakerReplicationFlow")]
    public partial class MirrorMakerReplicationFlow : Pulumi.CustomResource
    {
        /// <summary>
        /// enable of disable replication flows for a MirrorMaker service
        /// </summary>
        [Output("enable")]
        public Output<bool> Enable { get; private set; } = null!;

        /// <summary>
        /// and `service_name` - (Required) define the project and service the Kafka MirrorMaker Replication 
        /// Flow belongs to. They should be defined using reference as shown above to set up dependencies correctly.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Service to link the kafka topic to
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// is a source cluster alias.
        /// </summary>
        [Output("sourceCluster")]
        public Output<string> SourceCluster { get; private set; } = null!;

        /// <summary>
        /// is a target cluster alias.
        /// </summary>
        [Output("targetCluster")]
        public Output<string> TargetCluster { get; private set; } = null!;

        /// <summary>
        /// is a list of topics and/or regular expressions to replicate.
        /// </summary>
        [Output("topics")]
        public Output<ImmutableArray<string>> Topics { get; private set; } = null!;

        /// <summary>
        /// is a list of topics and/or regular expressions to not replicate.
        /// </summary>
        [Output("topicsBlacklists")]
        public Output<ImmutableArray<string>> TopicsBlacklists { get; private set; } = null!;


        /// <summary>
        /// Create a MirrorMakerReplicationFlow resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MirrorMakerReplicationFlow(string name, MirrorMakerReplicationFlowArgs args, CustomResourceOptions? options = null)
            : base("aiven:index/mirrorMakerReplicationFlow:MirrorMakerReplicationFlow", name, args ?? new MirrorMakerReplicationFlowArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MirrorMakerReplicationFlow(string name, Input<string> id, MirrorMakerReplicationFlowState? state = null, CustomResourceOptions? options = null)
            : base("aiven:index/mirrorMakerReplicationFlow:MirrorMakerReplicationFlow", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MirrorMakerReplicationFlow resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MirrorMakerReplicationFlow Get(string name, Input<string> id, MirrorMakerReplicationFlowState? state = null, CustomResourceOptions? options = null)
        {
            return new MirrorMakerReplicationFlow(name, id, state, options);
        }
    }

    public sealed class MirrorMakerReplicationFlowArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// enable of disable replication flows for a MirrorMaker service
        /// </summary>
        [Input("enable", required: true)]
        public Input<bool> Enable { get; set; } = null!;

        /// <summary>
        /// and `service_name` - (Required) define the project and service the Kafka MirrorMaker Replication 
        /// Flow belongs to. They should be defined using reference as shown above to set up dependencies correctly.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// Service to link the kafka topic to
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// is a source cluster alias.
        /// </summary>
        [Input("sourceCluster", required: true)]
        public Input<string> SourceCluster { get; set; } = null!;

        /// <summary>
        /// is a target cluster alias.
        /// </summary>
        [Input("targetCluster", required: true)]
        public Input<string> TargetCluster { get; set; } = null!;

        [Input("topics")]
        private InputList<string>? _topics;

        /// <summary>
        /// is a list of topics and/or regular expressions to replicate.
        /// </summary>
        public InputList<string> Topics
        {
            get => _topics ?? (_topics = new InputList<string>());
            set => _topics = value;
        }

        [Input("topicsBlacklists")]
        private InputList<string>? _topicsBlacklists;

        /// <summary>
        /// is a list of topics and/or regular expressions to not replicate.
        /// </summary>
        public InputList<string> TopicsBlacklists
        {
            get => _topicsBlacklists ?? (_topicsBlacklists = new InputList<string>());
            set => _topicsBlacklists = value;
        }

        public MirrorMakerReplicationFlowArgs()
        {
        }
    }

    public sealed class MirrorMakerReplicationFlowState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// enable of disable replication flows for a MirrorMaker service
        /// </summary>
        [Input("enable")]
        public Input<bool>? Enable { get; set; }

        /// <summary>
        /// and `service_name` - (Required) define the project and service the Kafka MirrorMaker Replication 
        /// Flow belongs to. They should be defined using reference as shown above to set up dependencies correctly.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Service to link the kafka topic to
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// is a source cluster alias.
        /// </summary>
        [Input("sourceCluster")]
        public Input<string>? SourceCluster { get; set; }

        /// <summary>
        /// is a target cluster alias.
        /// </summary>
        [Input("targetCluster")]
        public Input<string>? TargetCluster { get; set; }

        [Input("topics")]
        private InputList<string>? _topics;

        /// <summary>
        /// is a list of topics and/or regular expressions to replicate.
        /// </summary>
        public InputList<string> Topics
        {
            get => _topics ?? (_topics = new InputList<string>());
            set => _topics = value;
        }

        [Input("topicsBlacklists")]
        private InputList<string>? _topicsBlacklists;

        /// <summary>
        /// is a list of topics and/or regular expressions to not replicate.
        /// </summary>
        public InputList<string> TopicsBlacklists
        {
            get => _topicsBlacklists ?? (_topicsBlacklists = new InputList<string>());
            set => _topicsBlacklists = value;
        }

        public MirrorMakerReplicationFlowState()
        {
        }
    }
}
