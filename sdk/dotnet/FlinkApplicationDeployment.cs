// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    /// <summary>
    /// Creates and manages the deployment of an Aiven for Apache FlinkÂ® application.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aiven = Pulumi.Aiven;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleApp = new Aiven.FlinkApplication("example_app", new()
    ///     {
    ///         Project = exampleProject.Project,
    ///         ServiceName = "example-flink-service",
    ///         Name = "example-app",
    ///     });
    /// 
    ///     var main = new Aiven.FlinkApplicationVersion("main", new()
    ///     {
    ///         Project = exampleProject.Project,
    ///         ServiceName = exampleFlink.ServiceName,
    ///         ApplicationId = exampleApp.ApplicationId,
    ///         Statement = @"    INSERT INTO kafka_known_pizza SELECT * FROM kafka_pizza WHERE shop LIKE '%Luigis Pizza%'
    /// ",
    ///         Sinks = new[]
    ///         {
    ///             new Aiven.Inputs.FlinkApplicationVersionSinkArgs
    ///             {
    ///                 CreateTable = @"      CREATE TABLE kafka_known_pizza (
    ///         shop STRING,
    ///         name STRING
    ///       ) WITH (
    ///         'connector' = 'kafka',
    ///         'properties.bootstrap.servers' = '',
    ///         'scan.startup.mode' = 'earliest-offset',
    ///         'topic' = 'sink_topic',
    ///         'value.format' = 'json'
    ///       )
    /// ",
    ///                 IntegrationId = flinkToKafka.IntegrationId,
    ///             },
    ///         },
    ///         Sources = new[]
    ///         {
    ///             new Aiven.Inputs.FlinkApplicationVersionSourceArgs
    ///             {
    ///                 CreateTable = @"      CREATE TABLE kafka_pizza (
    ///         shop STRING,
    ///         name STRING
    ///       ) WITH (
    ///         'connector' = 'kafka',
    ///         'properties.bootstrap.servers' = '',
    ///         'scan.startup.mode' = 'earliest-offset',
    ///         'topic' = 'source_topic',
    ///         'value.format' = 'json'
    ///       )
    /// ",
    ///                 IntegrationId = flinkToKafka.IntegrationId,
    ///             },
    ///         },
    ///     });
    /// 
    ///     var mainFlinkApplicationDeployment = new Aiven.FlinkApplicationDeployment("main", new()
    ///     {
    ///         Project = exampleProject.Project,
    ///         ServiceName = exampleFlink.ServiceName,
    ///         ApplicationId = exampleApp.ApplicationId,
    ///         VersionId = main.ApplicationVersionId,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import aiven:index/flinkApplicationDeployment:FlinkApplicationDeployment main PROJECT/SERVICE_NAME/APPLICATION_ID/DEPLOYMENT_ID
    /// ```
    /// </summary>
    [AivenResourceType("aiven:index/flinkApplicationDeployment:FlinkApplicationDeployment")]
    public partial class FlinkApplicationDeployment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Application ID.
        /// </summary>
        [Output("applicationId")]
        public Output<string> ApplicationId { get; private set; } = null!;

        /// <summary>
        /// Application deployment creation time.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The user who deployed the application.
        /// </summary>
        [Output("createdBy")]
        public Output<string> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// The number of parallel instances for the task.
        /// </summary>
        [Output("parallelism")]
        public Output<int?> Parallelism { get; private set; } = null!;

        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Restart a Flink job if it fails.
        /// </summary>
        [Output("restartEnabled")]
        public Output<bool?> RestartEnabled { get; private set; } = null!;

        /// <summary>
        /// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// The savepoint to deploy from.
        /// </summary>
        [Output("startingSavepoint")]
        public Output<string?> StartingSavepoint { get; private set; } = null!;

        /// <summary>
        /// Application version ID.
        /// </summary>
        [Output("versionId")]
        public Output<string> VersionId { get; private set; } = null!;


        /// <summary>
        /// Create a FlinkApplicationDeployment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FlinkApplicationDeployment(string name, FlinkApplicationDeploymentArgs args, CustomResourceOptions? options = null)
            : base("aiven:index/flinkApplicationDeployment:FlinkApplicationDeployment", name, args ?? new FlinkApplicationDeploymentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FlinkApplicationDeployment(string name, Input<string> id, FlinkApplicationDeploymentState? state = null, CustomResourceOptions? options = null)
            : base("aiven:index/flinkApplicationDeployment:FlinkApplicationDeployment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FlinkApplicationDeployment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FlinkApplicationDeployment Get(string name, Input<string> id, FlinkApplicationDeploymentState? state = null, CustomResourceOptions? options = null)
        {
            return new FlinkApplicationDeployment(name, id, state, options);
        }
    }

    public sealed class FlinkApplicationDeploymentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Application ID.
        /// </summary>
        [Input("applicationId", required: true)]
        public Input<string> ApplicationId { get; set; } = null!;

        /// <summary>
        /// The number of parallel instances for the task.
        /// </summary>
        [Input("parallelism")]
        public Input<int>? Parallelism { get; set; }

        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// Restart a Flink job if it fails.
        /// </summary>
        [Input("restartEnabled")]
        public Input<bool>? RestartEnabled { get; set; }

        /// <summary>
        /// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// The savepoint to deploy from.
        /// </summary>
        [Input("startingSavepoint")]
        public Input<string>? StartingSavepoint { get; set; }

        /// <summary>
        /// Application version ID.
        /// </summary>
        [Input("versionId", required: true)]
        public Input<string> VersionId { get; set; } = null!;

        public FlinkApplicationDeploymentArgs()
        {
        }
        public static new FlinkApplicationDeploymentArgs Empty => new FlinkApplicationDeploymentArgs();
    }

    public sealed class FlinkApplicationDeploymentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Application ID.
        /// </summary>
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        /// <summary>
        /// Application deployment creation time.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The user who deployed the application.
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// The number of parallel instances for the task.
        /// </summary>
        [Input("parallelism")]
        public Input<int>? Parallelism { get; set; }

        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Restart a Flink job if it fails.
        /// </summary>
        [Input("restartEnabled")]
        public Input<bool>? RestartEnabled { get; set; }

        /// <summary>
        /// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// The savepoint to deploy from.
        /// </summary>
        [Input("startingSavepoint")]
        public Input<string>? StartingSavepoint { get; set; }

        /// <summary>
        /// Application version ID.
        /// </summary>
        [Input("versionId")]
        public Input<string>? VersionId { get; set; }

        public FlinkApplicationDeploymentState()
        {
        }
        public static new FlinkApplicationDeploymentState Empty => new FlinkApplicationDeploymentState();
    }
}
