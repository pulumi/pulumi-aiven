// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    /// <summary>
    /// The OpenSearch Security Plugin Config resource allows the creation and management of AivenOpenSearch Security Plugin config.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aiven = Pulumi.Aiven;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = Aiven.GetProject.Invoke(new()
    ///     {
    ///         Project = "example_project",
    ///     });
    /// 
    ///     var bar = new Aiven.OpenSearch("bar", new()
    ///     {
    ///         Project = foo.Apply(getProjectResult =&gt; getProjectResult.Project),
    ///         CloudName = "google-europe-west1",
    ///         Plan = "startup-4",
    ///         ServiceName = "example_service_name",
    ///         MaintenanceWindowDow = "monday",
    ///         MaintenanceWindowTime = "10:00:00",
    ///     });
    /// 
    ///     var fooOpensearchUser = new Aiven.OpensearchUser("foo", new()
    ///     {
    ///         ServiceName = bar.ServiceName,
    ///         Project = foo.Apply(getProjectResult =&gt; getProjectResult.Project),
    ///         Username = "user-example",
    ///     });
    /// 
    ///     var fooOpensearchSecurityPluginConfig = new Aiven.OpensearchSecurityPluginConfig("foo", new()
    ///     {
    ///         Project = foo.Apply(getProjectResult =&gt; getProjectResult.Project),
    ///         ServiceName = bar.ServiceName,
    ///         AdminPassword = "ThisIsATest123^=^",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import aiven:index/opensearchSecurityPluginConfig:OpensearchSecurityPluginConfig foo project/service_name
    /// ```
    /// </summary>
    [AivenResourceType("aiven:index/opensearchSecurityPluginConfig:OpensearchSecurityPluginConfig")]
    public partial class OpensearchSecurityPluginConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether the os-sec-admin user is enabled. This indicates whether the user management with the security plugin is enabled. This is always true when the os-sec-admin password was set at least once.
        /// </summary>
        [Output("adminEnabled")]
        public Output<bool> AdminEnabled { get; private set; } = null!;

        /// <summary>
        /// The password for the os-sec-admin user.
        /// </summary>
        [Output("adminPassword")]
        public Output<string> AdminPassword { get; private set; } = null!;

        /// <summary>
        /// Whether the security plugin is available. This is always true for recently created services.
        /// </summary>
        [Output("available")]
        public Output<bool> Available { get; private set; } = null!;

        /// <summary>
        /// Whether the security plugin is enabled. This is always true for recently created services.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;


        /// <summary>
        /// Create a OpensearchSecurityPluginConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OpensearchSecurityPluginConfig(string name, OpensearchSecurityPluginConfigArgs args, CustomResourceOptions? options = null)
            : base("aiven:index/opensearchSecurityPluginConfig:OpensearchSecurityPluginConfig", name, args ?? new OpensearchSecurityPluginConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OpensearchSecurityPluginConfig(string name, Input<string> id, OpensearchSecurityPluginConfigState? state = null, CustomResourceOptions? options = null)
            : base("aiven:index/opensearchSecurityPluginConfig:OpensearchSecurityPluginConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "adminPassword",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OpensearchSecurityPluginConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OpensearchSecurityPluginConfig Get(string name, Input<string> id, OpensearchSecurityPluginConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new OpensearchSecurityPluginConfig(name, id, state, options);
        }
    }

    public sealed class OpensearchSecurityPluginConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("adminPassword", required: true)]
        private Input<string>? _adminPassword;

        /// <summary>
        /// The password for the os-sec-admin user.
        /// </summary>
        public Input<string>? AdminPassword
        {
            get => _adminPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _adminPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public OpensearchSecurityPluginConfigArgs()
        {
        }
        public static new OpensearchSecurityPluginConfigArgs Empty => new OpensearchSecurityPluginConfigArgs();
    }

    public sealed class OpensearchSecurityPluginConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether the os-sec-admin user is enabled. This indicates whether the user management with the security plugin is enabled. This is always true when the os-sec-admin password was set at least once.
        /// </summary>
        [Input("adminEnabled")]
        public Input<bool>? AdminEnabled { get; set; }

        [Input("adminPassword")]
        private Input<string>? _adminPassword;

        /// <summary>
        /// The password for the os-sec-admin user.
        /// </summary>
        public Input<string>? AdminPassword
        {
            get => _adminPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _adminPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Whether the security plugin is available. This is always true for recently created services.
        /// </summary>
        [Input("available")]
        public Input<bool>? Available { get; set; }

        /// <summary>
        /// Whether the security plugin is enabled. This is always true for recently created services.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        public OpensearchSecurityPluginConfigState()
        {
        }
        public static new OpensearchSecurityPluginConfigState Empty => new OpensearchSecurityPluginConfigState();
    }
}
