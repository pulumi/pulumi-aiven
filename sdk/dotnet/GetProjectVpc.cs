// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetProjectVpc
    {
        /// <summary>
        /// The Project VPC data source provides information about the existing Aiven Project VPC.
        /// </summary>
        public static Task<GetProjectVpcResult> InvokeAsync(GetProjectVpcArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProjectVpcResult>("aiven:index/getProjectVpc:getProjectVpc", args ?? new GetProjectVpcArgs(), options.WithDefaults());

        /// <summary>
        /// The Project VPC data source provides information about the existing Aiven Project VPC.
        /// </summary>
        public static Output<GetProjectVpcResult> Invoke(GetProjectVpcInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectVpcResult>("aiven:index/getProjectVpc:getProjectVpc", args ?? new GetProjectVpcInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProjectVpcArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Defines where the cloud provider and region where the service is hosted in. See the Service resource for additional information.
        /// </summary>
        [Input("cloudName")]
        public string? CloudName { get; set; }

        /// <summary>
        /// Identifies the project this resource belongs to.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// ID of the VPC. This can be used to filter out the specific VPC if there are more than one datasource returned.
        /// </summary>
        [Input("vpcId")]
        public string? VpcId { get; set; }

        public GetProjectVpcArgs()
        {
        }
        public static new GetProjectVpcArgs Empty => new GetProjectVpcArgs();
    }

    public sealed class GetProjectVpcInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Defines where the cloud provider and region where the service is hosted in. See the Service resource for additional information.
        /// </summary>
        [Input("cloudName")]
        public Input<string>? CloudName { get; set; }

        /// <summary>
        /// Identifies the project this resource belongs to.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// ID of the VPC. This can be used to filter out the specific VPC if there are more than one datasource returned.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public GetProjectVpcInvokeArgs()
        {
        }
        public static new GetProjectVpcInvokeArgs Empty => new GetProjectVpcInvokeArgs();
    }


    [OutputType]
    public sealed class GetProjectVpcResult
    {
        /// <summary>
        /// Defines where the cloud provider and region where the service is hosted in. See the Service resource for additional information.
        /// </summary>
        public readonly string? CloudName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Network address range used by the VPC like 192.168.0.0/24
        /// </summary>
        public readonly string NetworkCidr;
        /// <summary>
        /// Identifies the project this resource belongs to.
        /// </summary>
        public readonly string? Project;
        /// <summary>
        /// State of the VPC. The possible values are `APPROVED`, `ACTIVE`, `DELETING` and `DELETED`.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// ID of the VPC. This can be used to filter out the specific VPC if there are more than one datasource returned.
        /// </summary>
        public readonly string? VpcId;

        [OutputConstructor]
        private GetProjectVpcResult(
            string? cloudName,

            string id,

            string networkCidr,

            string? project,

            string state,

            string? vpcId)
        {
            CloudName = cloudName;
            Id = id;
            NetworkCidr = networkCidr;
            Project = project;
            State = state;
            VpcId = vpcId;
        }
    }
}
