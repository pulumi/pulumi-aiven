// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetProjectVpc
    {
        /// <summary>
        /// Gets information about the VPC for an Aiven project.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleVpc = Aiven.GetProjectVpc.Invoke(new()
        ///     {
        ///         Project = exampleProject.Project,
        ///         CloudName = "google-europe-west1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetProjectVpcResult> InvokeAsync(GetProjectVpcArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProjectVpcResult>("aiven:index/getProjectVpc:getProjectVpc", args ?? new GetProjectVpcArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about the VPC for an Aiven project.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleVpc = Aiven.GetProjectVpc.Invoke(new()
        ///     {
        ///         Project = exampleProject.Project,
        ///         CloudName = "google-europe-west1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetProjectVpcResult> Invoke(GetProjectVpcInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectVpcResult>("aiven:index/getProjectVpc:getProjectVpc", args ?? new GetProjectVpcInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProjectVpcArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The cloud provider and region where the service is hosted in the format `CLOUD_PROVIDER-REGION_NAME`. For example, `google-europe-west1` or `aws-us-east-2`.
        /// </summary>
        [Input("cloudName")]
        public string? CloudName { get; set; }

        /// <summary>
        /// Identifies the project this resource belongs to.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// The ID of the VPC. This can be used to filter out the other VPCs if there are more than one for the project and cloud.
        /// </summary>
        [Input("vpcId")]
        public string? VpcId { get; set; }

        public GetProjectVpcArgs()
        {
        }
        public static new GetProjectVpcArgs Empty => new GetProjectVpcArgs();
    }

    public sealed class GetProjectVpcInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The cloud provider and region where the service is hosted in the format `CLOUD_PROVIDER-REGION_NAME`. For example, `google-europe-west1` or `aws-us-east-2`.
        /// </summary>
        [Input("cloudName")]
        public Input<string>? CloudName { get; set; }

        /// <summary>
        /// Identifies the project this resource belongs to.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The ID of the VPC. This can be used to filter out the other VPCs if there are more than one for the project and cloud.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public GetProjectVpcInvokeArgs()
        {
        }
        public static new GetProjectVpcInvokeArgs Empty => new GetProjectVpcInvokeArgs();
    }


    [OutputType]
    public sealed class GetProjectVpcResult
    {
        /// <summary>
        /// The cloud provider and region where the service is hosted in the format `CLOUD_PROVIDER-REGION_NAME`. For example, `google-europe-west1` or `aws-us-east-2`.
        /// </summary>
        public readonly string? CloudName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Network address range used by the VPC. For example, `192.168.0.0/24`.
        /// </summary>
        public readonly string NetworkCidr;
        /// <summary>
        /// Identifies the project this resource belongs to.
        /// </summary>
        public readonly string? Project;
        /// <summary>
        /// State of the VPC. The possible values are `ACTIVE`, `APPROVED`, `DELETED` and `DELETING`.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The ID of the VPC. This can be used to filter out the other VPCs if there are more than one for the project and cloud.
        /// </summary>
        public readonly string? VpcId;

        [OutputConstructor]
        private GetProjectVpcResult(
            string? cloudName,

            string id,

            string networkCidr,

            string? project,

            string state,

            string? vpcId)
        {
            CloudName = cloudName;
            Id = id;
            NetworkCidr = networkCidr;
            Project = project;
            State = state;
            VpcId = vpcId;
        }
    }
}
