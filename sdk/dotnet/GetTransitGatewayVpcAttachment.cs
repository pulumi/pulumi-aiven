// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetTransitGatewayVpcAttachment
    {
        /// <summary>
        /// The Transit Gateway VPC Attachment resource allows the creation and management Transit Gateway VPC Attachment VPC peering connection between Aiven and AWS.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var attachment = Output.Create(Aiven.GetTransitGatewayVpcAttachment.InvokeAsync(new Aiven.GetTransitGatewayVpcAttachmentArgs
        ///         {
        ///             VpcId = aiven_project_vpc.Bar.Id,
        ///             PeerCloudAccount = "&lt;PEER_ACCOUNT_ID&gt;",
        ///             PeerVpc = "google-project1",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetTransitGatewayVpcAttachmentResult> InvokeAsync(GetTransitGatewayVpcAttachmentArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetTransitGatewayVpcAttachmentResult>("aiven:index/getTransitGatewayVpcAttachment:getTransitGatewayVpcAttachment", args ?? new GetTransitGatewayVpcAttachmentArgs(), options.WithDefaults());

        /// <summary>
        /// The Transit Gateway VPC Attachment resource allows the creation and management Transit Gateway VPC Attachment VPC peering connection between Aiven and AWS.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var attachment = Output.Create(Aiven.GetTransitGatewayVpcAttachment.InvokeAsync(new Aiven.GetTransitGatewayVpcAttachmentArgs
        ///         {
        ///             VpcId = aiven_project_vpc.Bar.Id,
        ///             PeerCloudAccount = "&lt;PEER_ACCOUNT_ID&gt;",
        ///             PeerVpc = "google-project1",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetTransitGatewayVpcAttachmentResult> Invoke(GetTransitGatewayVpcAttachmentInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetTransitGatewayVpcAttachmentResult>("aiven:index/getTransitGatewayVpcAttachment:getTransitGatewayVpcAttachment", args ?? new GetTransitGatewayVpcAttachmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTransitGatewayVpcAttachmentArgs : Pulumi.InvokeArgs
    {
        [Input("peerCloudAccount", required: true)]
        public string PeerCloudAccount { get; set; } = null!;

        [Input("peerVpc", required: true)]
        public string PeerVpc { get; set; } = null!;

        [Input("vpcId", required: true)]
        public string VpcId { get; set; } = null!;

        public GetTransitGatewayVpcAttachmentArgs()
        {
        }
    }

    public sealed class GetTransitGatewayVpcAttachmentInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("peerCloudAccount", required: true)]
        public Input<string> PeerCloudAccount { get; set; } = null!;

        [Input("peerVpc", required: true)]
        public Input<string> PeerVpc { get; set; } = null!;

        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public GetTransitGatewayVpcAttachmentInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetTransitGatewayVpcAttachmentResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string PeerCloudAccount;
        public readonly string PeerRegion;
        public readonly string PeerVpc;
        public readonly string PeeringConnectionId;
        public readonly string State;
        public readonly ImmutableDictionary<string, object> StateInfo;
        public readonly ImmutableArray<string> UserPeerNetworkCidrs;
        public readonly string VpcId;

        [OutputConstructor]
        private GetTransitGatewayVpcAttachmentResult(
            string id,

            string peerCloudAccount,

            string peerRegion,

            string peerVpc,

            string peeringConnectionId,

            string state,

            ImmutableDictionary<string, object> stateInfo,

            ImmutableArray<string> userPeerNetworkCidrs,

            string vpcId)
        {
            Id = id;
            PeerCloudAccount = peerCloudAccount;
            PeerRegion = peerRegion;
            PeerVpc = peerVpc;
            PeeringConnectionId = peeringConnectionId;
            State = state;
            StateInfo = stateInfo;
            UserPeerNetworkCidrs = userPeerNetworkCidrs;
            VpcId = vpcId;
        }
    }
}
