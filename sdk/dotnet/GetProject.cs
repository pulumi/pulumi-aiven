// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetProject
    {
        /// <summary>
        /// Gets information about an Aiven project.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleProject = Aiven.GetProject.Invoke(new()
        ///     {
        ///         Project = "example-project",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetProjectResult> InvokeAsync(GetProjectArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProjectResult>("aiven:index/getProject:getProject", args ?? new GetProjectArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about an Aiven project.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleProject = Aiven.GetProject.Invoke(new()
        ///     {
        ///         Project = "example-project",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetProjectResult> Invoke(GetProjectInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectResult>("aiven:index/getProject:getProject", args ?? new GetProjectInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about an Aiven project.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleProject = Aiven.GetProject.Invoke(new()
        ///     {
        ///         Project = "example-project",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetProjectResult> Invoke(GetProjectInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectResult>("aiven:index/getProject:getProject", args ?? new GetProjectInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProjectArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the project. Names must be globally unique among all Aiven customers and cannot be changed later without destroying and re-creating the project, including all sub-resources.
        /// </summary>
        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        public GetProjectArgs()
        {
        }
        public static new GetProjectArgs Empty => new GetProjectArgs();
    }

    public sealed class GetProjectInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the project. Names must be globally unique among all Aiven customers and cannot be changed later without destroying and re-creating the project, including all sub-resources.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        public GetProjectInvokeArgs()
        {
        }
        public static new GetProjectInvokeArgs Empty => new GetProjectInvokeArgs();
    }


    [OutputType]
    public sealed class GetProjectResult
    {
        /// <summary>
        /// Link a project to an existing account using its account ID. This field is deprecated. Use `parent_id` instead. To set up proper dependencies please refer to this variable as a reference.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// If parent_id is set, grant account owner team admin access to the new project. The default value is `true`.
        /// </summary>
        public readonly bool AddAccountOwnersAdminAccess;
        /// <summary>
        /// The number of trial or promotional credits remaining for this project.
        /// </summary>
        public readonly string AvailableCredits;
        /// <summary>
        /// The ID of the billing group this project is assigned to. To set up proper dependencies please refer to this variable as a reference.
        /// </summary>
        public readonly string BillingGroup;
        /// <summary>
        /// The CA certificate for the project. This is required for configuring clients that connect to certain services like Kafka.
        /// </summary>
        public readonly string CaCert;
        /// <summary>
        /// The name of the project to copy billing information, technical contacts, and some other project attributes from. This is most useful to set up the same billing method when you use bank transfers to pay invoices for other projects. You can only do this when creating a project. You can't set the billing over the API for an existing. To set up proper dependencies please refer to this variable as a reference.
        /// </summary>
        public readonly string CopyFromProject;
        /// <summary>
        /// Default cloud provider and region where services are hosted. This can be changed after the project is created and will not affect existing services.
        /// </summary>
        public readonly string DefaultCloud;
        /// <summary>
        /// The monthly running estimate for this project for the current billing period.
        /// </summary>
        public readonly string EstimatedBalance;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Link a project to an [organization, organizational unit,](https://aiven.io/docs/platform/concepts/orgs-units-projects) or account by using its ID. To set up proper dependencies please refer to this variable as a reference.
        /// </summary>
        public readonly string ParentId;
        /// <summary>
        /// The payment type used for this project. For example,`card`.
        /// </summary>
        public readonly string PaymentMethod;
        /// <summary>
        /// The name of the project. Names must be globally unique among all Aiven customers and cannot be changed later without destroying and re-creating the project, including all sub-resources.
        /// </summary>
        public readonly string Project;
        /// <summary>
        /// Tags are key-value pairs that allow you to categorize projects.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProjectTagResult> Tags;
        /// <summary>
        /// The email addresses for [project contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive important alerts and updates about this project and its services. You can also set email contacts at the service level. It's good practice to keep these up-to-date to be aware of any potential issues with your project.
        /// </summary>
        public readonly ImmutableArray<string> TechnicalEmails;
        /// <summary>
        /// Use the same billing group that is used in source project.
        /// </summary>
        public readonly bool UseSourceProjectBillingGroup;

        [OutputConstructor]
        private GetProjectResult(
            string accountId,

            bool addAccountOwnersAdminAccess,

            string availableCredits,

            string billingGroup,

            string caCert,

            string copyFromProject,

            string defaultCloud,

            string estimatedBalance,

            string id,

            string parentId,

            string paymentMethod,

            string project,

            ImmutableArray<Outputs.GetProjectTagResult> tags,

            ImmutableArray<string> technicalEmails,

            bool useSourceProjectBillingGroup)
        {
            AccountId = accountId;
            AddAccountOwnersAdminAccess = addAccountOwnersAdminAccess;
            AvailableCredits = availableCredits;
            BillingGroup = billingGroup;
            CaCert = caCert;
            CopyFromProject = copyFromProject;
            DefaultCloud = defaultCloud;
            EstimatedBalance = estimatedBalance;
            Id = id;
            ParentId = parentId;
            PaymentMethod = paymentMethod;
            Project = project;
            Tags = tags;
            TechnicalEmails = technicalEmails;
            UseSourceProjectBillingGroup = useSourceProjectBillingGroup;
        }
    }
}
