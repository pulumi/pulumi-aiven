// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetProject
    {
        /// <summary>
        /// ## # Project Data Source
        /// 
        /// The Project data source provides information about the existing Aiven Project.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var myproject = Output.Create(Aiven.GetProject.InvokeAsync(new Aiven.GetProjectArgs
        ///         {
        ///             Project = "&lt;PROJECT_NAME&gt;",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetProjectResult> InvokeAsync(GetProjectArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetProjectResult>("aiven:index/getProject:getProject", args ?? new GetProjectArgs(), options.WithVersion());
    }


    public sealed class GetProjectArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// is an optional property to link a project to already an existing account by 
        /// using account ID.
        /// </summary>
        [Input("accountId")]
        public string? AccountId { get; set; }

        [Input("billingAddress")]
        public string? BillingAddress { get; set; }

        [Input("billingEmails")]
        private List<string>? _billingEmails;
        public List<string> BillingEmails
        {
            get => _billingEmails ?? (_billingEmails = new List<string>());
            set => _billingEmails = value;
        }

        /// <summary>
        /// is a computed property that can be used to read the CA certificate of the
        /// project. This is required for configuring clients that connect to certain services like
        /// Kafka. This value cannot be set, only read.
        /// </summary>
        [Input("caCert")]
        public string? CaCert { get; set; }

        /// <summary>
        /// is either the full card UUID or the last 4 digits of the card. As the full
        /// UUID is not shown in the UI it is typically easier to use the last 4 digits to identify
        /// the card. This can be omitted if `copy_from_project` is used to copy billing info from
        /// another project.
        /// </summary>
        [Input("cardId")]
        public string? CardId { get; set; }

        /// <summary>
        /// is the name of another project used to copy billing information and
        /// some other project attributes like technical contacts from. This is mostly relevant when
        /// an existing project has billing type set to invoice and that needs to be copied over to a
        /// new project. (Setting billing is otherwise not allowed over the API.) This only has
        /// effect when the project is created.
        /// </summary>
        [Input("copyFromProject")]
        public string? CopyFromProject { get; set; }

        [Input("countryCode")]
        public string? CountryCode { get; set; }

        /// <summary>
        /// defines the name of the project. Name must be globally unique (between all
        /// Aiven customers) and cannot be changed later without destroying and re-creating the
        /// project, including all sub-resources.
        /// </summary>
        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        [Input("technicalEmails")]
        private List<string>? _technicalEmails;
        public List<string> TechnicalEmails
        {
            get => _technicalEmails ?? (_technicalEmails = new List<string>());
            set => _technicalEmails = value;
        }

        public GetProjectArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetProjectResult
    {
        /// <summary>
        /// is an optional property to link a project to already an existing account by 
        /// using account ID.
        /// </summary>
        public readonly string? AccountId;
        public readonly string? BillingAddress;
        public readonly ImmutableArray<string> BillingEmails;
        /// <summary>
        /// is a computed property that can be used to read the CA certificate of the
        /// project. This is required for configuring clients that connect to certain services like
        /// Kafka. This value cannot be set, only read.
        /// </summary>
        public readonly string CaCert;
        /// <summary>
        /// is either the full card UUID or the last 4 digits of the card. As the full
        /// UUID is not shown in the UI it is typically easier to use the last 4 digits to identify
        /// the card. This can be omitted if `copy_from_project` is used to copy billing info from
        /// another project.
        /// </summary>
        public readonly string? CardId;
        /// <summary>
        /// is the name of another project used to copy billing information and
        /// some other project attributes like technical contacts from. This is mostly relevant when
        /// an existing project has billing type set to invoice and that needs to be copied over to a
        /// new project. (Setting billing is otherwise not allowed over the API.) This only has
        /// effect when the project is created.
        /// </summary>
        public readonly string? CopyFromProject;
        public readonly string? CountryCode;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Project;
        public readonly ImmutableArray<string> TechnicalEmails;

        [OutputConstructor]
        private GetProjectResult(
            string? accountId,

            string? billingAddress,

            ImmutableArray<string> billingEmails,

            string caCert,

            string? cardId,

            string? copyFromProject,

            string? countryCode,

            string id,

            string project,

            ImmutableArray<string> technicalEmails)
        {
            AccountId = accountId;
            BillingAddress = billingAddress;
            BillingEmails = billingEmails;
            CaCert = caCert;
            CardId = cardId;
            CopyFromProject = copyFromProject;
            CountryCode = countryCode;
            Id = id;
            Project = project;
            TechnicalEmails = technicalEmails;
        }
    }
}
