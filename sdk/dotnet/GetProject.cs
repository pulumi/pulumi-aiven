// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetProject
    {
        /// <summary>
        /// The Project data source provides information about the existing Aiven Project.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var myproject = Output.Create(Aiven.GetProject.InvokeAsync(new Aiven.GetProjectArgs
        ///         {
        ///             Project = "&lt;PROJECT_NAME&gt;",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetProjectResult> InvokeAsync(GetProjectArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetProjectResult>("aiven:index/getProject:getProject", args ?? new GetProjectArgs(), options.WithDefaults());

        /// <summary>
        /// The Project data source provides information about the existing Aiven Project.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var myproject = Output.Create(Aiven.GetProject.InvokeAsync(new Aiven.GetProjectArgs
        ///         {
        ///             Project = "&lt;PROJECT_NAME&gt;",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetProjectResult> Invoke(GetProjectInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetProjectResult>("aiven:index/getProject:getProject", args ?? new GetProjectInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProjectArgs : Pulumi.InvokeArgs
    {
        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        public GetProjectArgs()
        {
        }
    }

    public sealed class GetProjectInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        public GetProjectInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetProjectResult
    {
        public readonly string AccountId;
        public readonly bool AddAccountOwnersAdminAccess;
        public readonly string AvailableCredits;
        public readonly string BillingGroup;
        public readonly string CaCert;
        public readonly string CopyFromProject;
        public readonly string DefaultCloud;
        public readonly string EstimatedBalance;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string PaymentMethod;
        public readonly string Project;
        public readonly ImmutableArray<Outputs.GetProjectTagResult> Tags;
        public readonly ImmutableArray<string> TechnicalEmails;
        public readonly bool UseSourceProjectBillingGroup;

        [OutputConstructor]
        private GetProjectResult(
            string accountId,

            bool addAccountOwnersAdminAccess,

            string availableCredits,

            string billingGroup,

            string caCert,

            string copyFromProject,

            string defaultCloud,

            string estimatedBalance,

            string id,

            string paymentMethod,

            string project,

            ImmutableArray<Outputs.GetProjectTagResult> tags,

            ImmutableArray<string> technicalEmails,

            bool useSourceProjectBillingGroup)
        {
            AccountId = accountId;
            AddAccountOwnersAdminAccess = addAccountOwnersAdminAccess;
            AvailableCredits = availableCredits;
            BillingGroup = billingGroup;
            CaCert = caCert;
            CopyFromProject = copyFromProject;
            DefaultCloud = defaultCloud;
            EstimatedBalance = estimatedBalance;
            Id = id;
            PaymentMethod = paymentMethod;
            Project = project;
            Tags = tags;
            TechnicalEmails = technicalEmails;
            UseSourceProjectBillingGroup = useSourceProjectBillingGroup;
        }
    }
}
