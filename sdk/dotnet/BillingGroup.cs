// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    /// <summary>
    /// Creates and manages billing groups and assigns them to projects.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aiven = Pulumi.Aiven;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var bybg1 = new Aiven.BillingGroup("bybg1", new()
    ///     {
    ///         BillingCurrency = "USD",
    ///         VatId = "123ABC",
    ///     });
    /// 
    ///     var pr1 = new Aiven.Project("pr1", new()
    ///     {
    ///         ProjectName = "pr1",
    ///         BillingGroup = bybg1.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import aiven:index/billingGroup:BillingGroup bybg1 id
    /// ```
    /// </summary>
    [AivenResourceType("aiven:index/billingGroup:BillingGroup")]
    public partial class BillingGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Account ID.
        /// </summary>
        [Output("accountId")]
        public Output<string?> AccountId { get; private set; } = null!;

        /// <summary>
        /// Address lines 1 and 2. For example, street, PO box, or building.
        /// </summary>
        [Output("addressLines")]
        public Output<ImmutableArray<string>> AddressLines { get; private set; } = null!;

        /// <summary>
        /// Billing currency for the billing group. Supported currencies are: AUD, CAD, CHF, DKK, EUR, GBP, JPY, NOK, NZD, SEK, SGD, and USD.
        /// </summary>
        [Output("billingCurrency")]
        public Output<string?> BillingCurrency { get; private set; } = null!;

        /// <summary>
        /// Email address of billing contacts. Invoices and other payment notifications are emailed to all billing contacts.
        /// </summary>
        [Output("billingEmails")]
        public Output<ImmutableArray<string>> BillingEmails { get; private set; } = null!;

        /// <summary>
        /// Additional information to include on your invoice (for example, a reference number).
        /// </summary>
        [Output("billingExtraText")]
        public Output<string?> BillingExtraText { get; private set; } = null!;

        /// <summary>
        /// Credit card ID.
        /// </summary>
        [Output("cardId")]
        public Output<string?> CardId { get; private set; } = null!;

        /// <summary>
        /// City, district, suburb, town, or village.
        /// </summary>
        [Output("city")]
        public Output<string?> City { get; private set; } = null!;

        /// <summary>
        /// Your company name.
        /// </summary>
        [Output("company")]
        public Output<string?> Company { get; private set; } = null!;

        /// <summary>
        /// ID of the billing group to copy the company name, address, currency, billing contacts, and extra text from.
        /// </summary>
        [Output("copyFromBillingGroup")]
        public Output<string?> CopyFromBillingGroup { get; private set; } = null!;

        /// <summary>
        /// Two-letter country code.
        /// </summary>
        [Output("countryCode")]
        public Output<string?> CountryCode { get; private set; } = null!;

        /// <summary>
        /// Name of the billing group.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Link a billing group to an existing organization or account by using its ID. To set up proper dependencies please refer to this variable as a reference.
        /// </summary>
        [Output("parentId")]
        public Output<string?> ParentId { get; private set; } = null!;

        /// <summary>
        /// State or province.
        /// </summary>
        [Output("state")]
        public Output<string?> State { get; private set; } = null!;

        /// <summary>
        /// The VAT identification number for your company.
        /// </summary>
        [Output("vatId")]
        public Output<string?> VatId { get; private set; } = null!;

        /// <summary>
        /// Zip or postal code.
        /// </summary>
        [Output("zipCode")]
        public Output<string?> ZipCode { get; private set; } = null!;


        /// <summary>
        /// Create a BillingGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BillingGroup(string name, BillingGroupArgs? args = null, CustomResourceOptions? options = null)
            : base("aiven:index/billingGroup:BillingGroup", name, args ?? new BillingGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BillingGroup(string name, Input<string> id, BillingGroupState? state = null, CustomResourceOptions? options = null)
            : base("aiven:index/billingGroup:BillingGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BillingGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BillingGroup Get(string name, Input<string> id, BillingGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new BillingGroup(name, id, state, options);
        }
    }

    public sealed class BillingGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Account ID.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        [Input("addressLines")]
        private InputList<string>? _addressLines;

        /// <summary>
        /// Address lines 1 and 2. For example, street, PO box, or building.
        /// </summary>
        public InputList<string> AddressLines
        {
            get => _addressLines ?? (_addressLines = new InputList<string>());
            set => _addressLines = value;
        }

        /// <summary>
        /// Billing currency for the billing group. Supported currencies are: AUD, CAD, CHF, DKK, EUR, GBP, JPY, NOK, NZD, SEK, SGD, and USD.
        /// </summary>
        [Input("billingCurrency")]
        public Input<string>? BillingCurrency { get; set; }

        [Input("billingEmails")]
        private InputList<string>? _billingEmails;

        /// <summary>
        /// Email address of billing contacts. Invoices and other payment notifications are emailed to all billing contacts.
        /// </summary>
        public InputList<string> BillingEmails
        {
            get => _billingEmails ?? (_billingEmails = new InputList<string>());
            set => _billingEmails = value;
        }

        /// <summary>
        /// Additional information to include on your invoice (for example, a reference number).
        /// </summary>
        [Input("billingExtraText")]
        public Input<string>? BillingExtraText { get; set; }

        /// <summary>
        /// Credit card ID.
        /// </summary>
        [Input("cardId")]
        public Input<string>? CardId { get; set; }

        /// <summary>
        /// City, district, suburb, town, or village.
        /// </summary>
        [Input("city")]
        public Input<string>? City { get; set; }

        /// <summary>
        /// Your company name.
        /// </summary>
        [Input("company")]
        public Input<string>? Company { get; set; }

        /// <summary>
        /// ID of the billing group to copy the company name, address, currency, billing contacts, and extra text from.
        /// </summary>
        [Input("copyFromBillingGroup")]
        public Input<string>? CopyFromBillingGroup { get; set; }

        /// <summary>
        /// Two-letter country code.
        /// </summary>
        [Input("countryCode")]
        public Input<string>? CountryCode { get; set; }

        /// <summary>
        /// Name of the billing group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Link a billing group to an existing organization or account by using its ID. To set up proper dependencies please refer to this variable as a reference.
        /// </summary>
        [Input("parentId")]
        public Input<string>? ParentId { get; set; }

        /// <summary>
        /// State or province.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The VAT identification number for your company.
        /// </summary>
        [Input("vatId")]
        public Input<string>? VatId { get; set; }

        /// <summary>
        /// Zip or postal code.
        /// </summary>
        [Input("zipCode")]
        public Input<string>? ZipCode { get; set; }

        public BillingGroupArgs()
        {
        }
        public static new BillingGroupArgs Empty => new BillingGroupArgs();
    }

    public sealed class BillingGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Account ID.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        [Input("addressLines")]
        private InputList<string>? _addressLines;

        /// <summary>
        /// Address lines 1 and 2. For example, street, PO box, or building.
        /// </summary>
        public InputList<string> AddressLines
        {
            get => _addressLines ?? (_addressLines = new InputList<string>());
            set => _addressLines = value;
        }

        /// <summary>
        /// Billing currency for the billing group. Supported currencies are: AUD, CAD, CHF, DKK, EUR, GBP, JPY, NOK, NZD, SEK, SGD, and USD.
        /// </summary>
        [Input("billingCurrency")]
        public Input<string>? BillingCurrency { get; set; }

        [Input("billingEmails")]
        private InputList<string>? _billingEmails;

        /// <summary>
        /// Email address of billing contacts. Invoices and other payment notifications are emailed to all billing contacts.
        /// </summary>
        public InputList<string> BillingEmails
        {
            get => _billingEmails ?? (_billingEmails = new InputList<string>());
            set => _billingEmails = value;
        }

        /// <summary>
        /// Additional information to include on your invoice (for example, a reference number).
        /// </summary>
        [Input("billingExtraText")]
        public Input<string>? BillingExtraText { get; set; }

        /// <summary>
        /// Credit card ID.
        /// </summary>
        [Input("cardId")]
        public Input<string>? CardId { get; set; }

        /// <summary>
        /// City, district, suburb, town, or village.
        /// </summary>
        [Input("city")]
        public Input<string>? City { get; set; }

        /// <summary>
        /// Your company name.
        /// </summary>
        [Input("company")]
        public Input<string>? Company { get; set; }

        /// <summary>
        /// ID of the billing group to copy the company name, address, currency, billing contacts, and extra text from.
        /// </summary>
        [Input("copyFromBillingGroup")]
        public Input<string>? CopyFromBillingGroup { get; set; }

        /// <summary>
        /// Two-letter country code.
        /// </summary>
        [Input("countryCode")]
        public Input<string>? CountryCode { get; set; }

        /// <summary>
        /// Name of the billing group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Link a billing group to an existing organization or account by using its ID. To set up proper dependencies please refer to this variable as a reference.
        /// </summary>
        [Input("parentId")]
        public Input<string>? ParentId { get; set; }

        /// <summary>
        /// State or province.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The VAT identification number for your company.
        /// </summary>
        [Input("vatId")]
        public Input<string>? VatId { get; set; }

        /// <summary>
        /// Zip or postal code.
        /// </summary>
        [Input("zipCode")]
        public Input<string>? ZipCode { get; set; }

        public BillingGroupState()
        {
        }
        public static new BillingGroupState Empty => new BillingGroupState();
    }
}
