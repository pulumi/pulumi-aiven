// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.Aiven
{
    public static class GetKafkaSchemaConfiguration
    {
        /// <summary>
        /// ## # Kafka Schema Configuration Data Source
        /// 
        /// The Kafka Schema Configuration data source provides information about the existing Aiven 
        /// Kafka Schema Configuration.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var config = Output.Create(Aiven.GetKafkaSchemaConfiguration.InvokeAsync(new Aiven.GetKafkaSchemaConfigurationArgs
        ///         {
        ///             Project = aiven_project.Kafka_schemas_project1.Project,
        ///             ServiceName = aiven_service.Kafka_service1.Service_name,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetKafkaSchemaConfigurationResult> InvokeAsync(GetKafkaSchemaConfigurationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetKafkaSchemaConfigurationResult>("aiven:index/getKafkaSchemaConfiguration:getKafkaSchemaConfiguration", args ?? new GetKafkaSchemaConfigurationArgs(), options.WithVersion());

        /// <summary>
        /// ## # Kafka Schema Configuration Data Source
        /// 
        /// The Kafka Schema Configuration data source provides information about the existing Aiven 
        /// Kafka Schema Configuration.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var config = Output.Create(Aiven.GetKafkaSchemaConfiguration.InvokeAsync(new Aiven.GetKafkaSchemaConfigurationArgs
        ///         {
        ///             Project = aiven_project.Kafka_schemas_project1.Project,
        ///             ServiceName = aiven_service.Kafka_service1.Service_name,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetKafkaSchemaConfigurationResult> Invoke(GetKafkaSchemaConfigurationInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetKafkaSchemaConfigurationResult>("aiven:index/getKafkaSchemaConfiguration:getKafkaSchemaConfiguration", args ?? new GetKafkaSchemaConfigurationInvokeArgs(), options.WithVersion());
    }


    public sealed class GetKafkaSchemaConfigurationArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// is the Global Kafka Schema configuration compatibility level when defined 
        /// for `aiven.KafkaSchemaConfiguration` resource. Also, Kafka Schema configuration
        /// compatibility level can be overridden for a specific subject when used in `aiven.KafkaSchema`
        /// resource. If the compatibility level not specified for the individual subject by default,
        /// it takes a global value. Allowed values: `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`,
        /// `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE`, `NONE`.
        /// </summary>
        [Input("compatibilityLevel")]
        public string? CompatibilityLevel { get; set; }

        /// <summary>
        /// and `service_name` - (Required) define the project and service the Kafka Schemas belongs to. 
        /// They should be defined using reference as shown above to set up dependencies correctly.
        /// </summary>
        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        [Input("schema")]
        public string? Schema { get; set; }

        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        [Input("subjectName")]
        public string? SubjectName { get; set; }

        [Input("version")]
        public int? Version { get; set; }

        public GetKafkaSchemaConfigurationArgs()
        {
        }
    }

    public sealed class GetKafkaSchemaConfigurationInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// is the Global Kafka Schema configuration compatibility level when defined 
        /// for `aiven.KafkaSchemaConfiguration` resource. Also, Kafka Schema configuration
        /// compatibility level can be overridden for a specific subject when used in `aiven.KafkaSchema`
        /// resource. If the compatibility level not specified for the individual subject by default,
        /// it takes a global value. Allowed values: `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`,
        /// `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE`, `NONE`.
        /// </summary>
        [Input("compatibilityLevel")]
        public Input<string>? CompatibilityLevel { get; set; }

        /// <summary>
        /// and `service_name` - (Required) define the project and service the Kafka Schemas belongs to. 
        /// They should be defined using reference as shown above to set up dependencies correctly.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        [Input("schema")]
        public Input<string>? Schema { get; set; }

        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        [Input("subjectName")]
        public Input<string>? SubjectName { get; set; }

        [Input("version")]
        public Input<int>? Version { get; set; }

        public GetKafkaSchemaConfigurationInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetKafkaSchemaConfigurationResult
    {
        /// <summary>
        /// is the Global Kafka Schema configuration compatibility level when defined 
        /// for `aiven.KafkaSchemaConfiguration` resource. Also, Kafka Schema configuration
        /// compatibility level can be overridden for a specific subject when used in `aiven.KafkaSchema`
        /// resource. If the compatibility level not specified for the individual subject by default,
        /// it takes a global value. Allowed values: `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`,
        /// `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE`, `NONE`.
        /// </summary>
        public readonly string? CompatibilityLevel;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Project;
        public readonly string? Schema;
        public readonly string ServiceName;
        public readonly string? SubjectName;
        public readonly int Version;

        [OutputConstructor]
        private GetKafkaSchemaConfigurationResult(
            string? compatibilityLevel,

            string id,

            string project,

            string? schema,

            string serviceName,

            string? subjectName,

            int version)
        {
            CompatibilityLevel = compatibilityLevel;
            Id = id;
            Project = project;
            Schema = schema;
            ServiceName = serviceName;
            SubjectName = subjectName;
            Version = version;
        }
    }
}
