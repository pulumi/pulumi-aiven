// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    /// <summary>
    /// ## # Service Integration Endpoint Resource
    /// 
    /// The Service Integration Endpoint resource allows the creation and management of Aiven Service Integration Endpoints.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aiven = Pulumi.Aiven;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var myendpoint = new Aiven.ServiceIntegrationEndpoint("myendpoint", new Aiven.ServiceIntegrationEndpointArgs
    ///         {
    ///             Project = aiven_project.Myproject.Project,
    ///             EndpointName = "&lt;ENDPOINT_NAME&gt;",
    ///             EndpointType = "datadog",
    ///             DatadogUserConfig = new Aiven.Inputs.ServiceIntegrationEndpointDatadogUserConfigArgs
    ///             {
    ///                 DatadogApiKey = "&lt;DATADOG_API_KEY&gt;",
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    [AivenResourceType("aiven:index/serviceIntegrationEndpoint:ServiceIntegrationEndpoint")]
    public partial class ServiceIntegrationEndpoint : Pulumi.CustomResource
    {
        /// <summary>
        /// Datadog specific user configurable settings
        /// </summary>
        [Output("datadogUserConfig")]
        public Output<Outputs.ServiceIntegrationEndpointDatadogUserConfig?> DatadogUserConfig { get; private set; } = null!;

        /// <summary>
        /// Integration endpoint specific backend configuration
        /// </summary>
        [Output("endpointConfig")]
        public Output<ImmutableDictionary<string, string>> EndpointConfig { get; private set; } = null!;

        /// <summary>
        /// is the name of the endpoint. This value has no effect beyond being used
        /// to identify different integration endpoints.
        /// </summary>
        [Output("endpointName")]
        public Output<string> EndpointName { get; private set; } = null!;

        /// <summary>
        /// is the type of the external service this endpoint is associated with.
        /// By the time of writing the only available option is `datadog`.
        /// </summary>
        [Output("endpointType")]
        public Output<string> EndpointType { get; private set; } = null!;

        /// <summary>
        /// external AWS CloudWatch Logs specific user configurable settings
        /// </summary>
        [Output("externalAwsCloudwatchLogsUserConfig")]
        public Output<Outputs.ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig?> ExternalAwsCloudwatchLogsUserConfig { get; private set; } = null!;

        /// <summary>
        /// External AWS cloudwatch mertrics specific user configurable settings
        /// </summary>
        [Output("externalAwsCloudwatchMetricsUserConfig")]
        public Output<Outputs.ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig?> ExternalAwsCloudwatchMetricsUserConfig { get; private set; } = null!;

        /// <summary>
        /// external elasticsearch specific user configurable settings
        /// </summary>
        [Output("externalElasticsearchLogsUserConfig")]
        public Output<Outputs.ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig?> ExternalElasticsearchLogsUserConfig { get; private set; } = null!;

        /// <summary>
        /// external Google Cloud Logginig specific user configurable settings
        /// </summary>
        [Output("externalGoogleCloudLoggingUserConfig")]
        public Output<Outputs.ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig?> ExternalGoogleCloudLoggingUserConfig { get; private set; } = null!;

        /// <summary>
        /// external Kafka specific user configurable settings
        /// </summary>
        [Output("externalKafkaUserConfig")]
        public Output<Outputs.ServiceIntegrationEndpointExternalKafkaUserConfig?> ExternalKafkaUserConfig { get; private set; } = null!;

        /// <summary>
        /// External schema registry specific user configurable settings
        /// </summary>
        [Output("externalSchemaRegistryUserConfig")]
        public Output<Outputs.ServiceIntegrationEndpointExternalSchemaRegistryUserConfig?> ExternalSchemaRegistryUserConfig { get; private set; } = null!;

        /// <summary>
        /// Jolokia specific user configurable settings
        /// </summary>
        [Output("jolokiaUserConfig")]
        public Output<Outputs.ServiceIntegrationEndpointJolokiaUserConfig?> JolokiaUserConfig { get; private set; } = null!;

        /// <summary>
        /// defines the project the endpoint is associated with.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Prometheus specific user configurable settings
        /// </summary>
        [Output("prometheusUserConfig")]
        public Output<Outputs.ServiceIntegrationEndpointPrometheusUserConfig?> PrometheusUserConfig { get; private set; } = null!;

        /// <summary>
        /// rsyslog specific user configurable settings
        /// </summary>
        [Output("rsyslogUserConfig")]
        public Output<Outputs.ServiceIntegrationEndpointRsyslogUserConfig?> RsyslogUserConfig { get; private set; } = null!;

        /// <summary>
        /// Signalfx specific user configurable settings
        /// </summary>
        [Output("signalfxUserConfig")]
        public Output<Outputs.ServiceIntegrationEndpointSignalfxUserConfig?> SignalfxUserConfig { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceIntegrationEndpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceIntegrationEndpoint(string name, ServiceIntegrationEndpointArgs args, CustomResourceOptions? options = null)
            : base("aiven:index/serviceIntegrationEndpoint:ServiceIntegrationEndpoint", name, args ?? new ServiceIntegrationEndpointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceIntegrationEndpoint(string name, Input<string> id, ServiceIntegrationEndpointState? state = null, CustomResourceOptions? options = null)
            : base("aiven:index/serviceIntegrationEndpoint:ServiceIntegrationEndpoint", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceIntegrationEndpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceIntegrationEndpoint Get(string name, Input<string> id, ServiceIntegrationEndpointState? state = null, CustomResourceOptions? options = null)
        {
            return new ServiceIntegrationEndpoint(name, id, state, options);
        }
    }

    public sealed class ServiceIntegrationEndpointArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Datadog specific user configurable settings
        /// </summary>
        [Input("datadogUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointDatadogUserConfigArgs>? DatadogUserConfig { get; set; }

        /// <summary>
        /// is the name of the endpoint. This value has no effect beyond being used
        /// to identify different integration endpoints.
        /// </summary>
        [Input("endpointName", required: true)]
        public Input<string> EndpointName { get; set; } = null!;

        /// <summary>
        /// is the type of the external service this endpoint is associated with.
        /// By the time of writing the only available option is `datadog`.
        /// </summary>
        [Input("endpointType", required: true)]
        public Input<string> EndpointType { get; set; } = null!;

        /// <summary>
        /// external AWS CloudWatch Logs specific user configurable settings
        /// </summary>
        [Input("externalAwsCloudwatchLogsUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigArgs>? ExternalAwsCloudwatchLogsUserConfig { get; set; }

        /// <summary>
        /// External AWS cloudwatch mertrics specific user configurable settings
        /// </summary>
        [Input("externalAwsCloudwatchMetricsUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigArgs>? ExternalAwsCloudwatchMetricsUserConfig { get; set; }

        /// <summary>
        /// external elasticsearch specific user configurable settings
        /// </summary>
        [Input("externalElasticsearchLogsUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigArgs>? ExternalElasticsearchLogsUserConfig { get; set; }

        /// <summary>
        /// external Google Cloud Logginig specific user configurable settings
        /// </summary>
        [Input("externalGoogleCloudLoggingUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigArgs>? ExternalGoogleCloudLoggingUserConfig { get; set; }

        /// <summary>
        /// external Kafka specific user configurable settings
        /// </summary>
        [Input("externalKafkaUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointExternalKafkaUserConfigArgs>? ExternalKafkaUserConfig { get; set; }

        /// <summary>
        /// External schema registry specific user configurable settings
        /// </summary>
        [Input("externalSchemaRegistryUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointExternalSchemaRegistryUserConfigArgs>? ExternalSchemaRegistryUserConfig { get; set; }

        /// <summary>
        /// Jolokia specific user configurable settings
        /// </summary>
        [Input("jolokiaUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointJolokiaUserConfigArgs>? JolokiaUserConfig { get; set; }

        /// <summary>
        /// defines the project the endpoint is associated with.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// Prometheus specific user configurable settings
        /// </summary>
        [Input("prometheusUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointPrometheusUserConfigArgs>? PrometheusUserConfig { get; set; }

        /// <summary>
        /// rsyslog specific user configurable settings
        /// </summary>
        [Input("rsyslogUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointRsyslogUserConfigArgs>? RsyslogUserConfig { get; set; }

        /// <summary>
        /// Signalfx specific user configurable settings
        /// </summary>
        [Input("signalfxUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointSignalfxUserConfigArgs>? SignalfxUserConfig { get; set; }

        public ServiceIntegrationEndpointArgs()
        {
        }
    }

    public sealed class ServiceIntegrationEndpointState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Datadog specific user configurable settings
        /// </summary>
        [Input("datadogUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointDatadogUserConfigGetArgs>? DatadogUserConfig { get; set; }

        [Input("endpointConfig")]
        private InputMap<string>? _endpointConfig;

        /// <summary>
        /// Integration endpoint specific backend configuration
        /// </summary>
        public InputMap<string> EndpointConfig
        {
            get => _endpointConfig ?? (_endpointConfig = new InputMap<string>());
            set => _endpointConfig = value;
        }

        /// <summary>
        /// is the name of the endpoint. This value has no effect beyond being used
        /// to identify different integration endpoints.
        /// </summary>
        [Input("endpointName")]
        public Input<string>? EndpointName { get; set; }

        /// <summary>
        /// is the type of the external service this endpoint is associated with.
        /// By the time of writing the only available option is `datadog`.
        /// </summary>
        [Input("endpointType")]
        public Input<string>? EndpointType { get; set; }

        /// <summary>
        /// external AWS CloudWatch Logs specific user configurable settings
        /// </summary>
        [Input("externalAwsCloudwatchLogsUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfigGetArgs>? ExternalAwsCloudwatchLogsUserConfig { get; set; }

        /// <summary>
        /// External AWS cloudwatch mertrics specific user configurable settings
        /// </summary>
        [Input("externalAwsCloudwatchMetricsUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfigGetArgs>? ExternalAwsCloudwatchMetricsUserConfig { get; set; }

        /// <summary>
        /// external elasticsearch specific user configurable settings
        /// </summary>
        [Input("externalElasticsearchLogsUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigGetArgs>? ExternalElasticsearchLogsUserConfig { get; set; }

        /// <summary>
        /// external Google Cloud Logginig specific user configurable settings
        /// </summary>
        [Input("externalGoogleCloudLoggingUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfigGetArgs>? ExternalGoogleCloudLoggingUserConfig { get; set; }

        /// <summary>
        /// external Kafka specific user configurable settings
        /// </summary>
        [Input("externalKafkaUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointExternalKafkaUserConfigGetArgs>? ExternalKafkaUserConfig { get; set; }

        /// <summary>
        /// External schema registry specific user configurable settings
        /// </summary>
        [Input("externalSchemaRegistryUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointExternalSchemaRegistryUserConfigGetArgs>? ExternalSchemaRegistryUserConfig { get; set; }

        /// <summary>
        /// Jolokia specific user configurable settings
        /// </summary>
        [Input("jolokiaUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointJolokiaUserConfigGetArgs>? JolokiaUserConfig { get; set; }

        /// <summary>
        /// defines the project the endpoint is associated with.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Prometheus specific user configurable settings
        /// </summary>
        [Input("prometheusUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointPrometheusUserConfigGetArgs>? PrometheusUserConfig { get; set; }

        /// <summary>
        /// rsyslog specific user configurable settings
        /// </summary>
        [Input("rsyslogUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointRsyslogUserConfigGetArgs>? RsyslogUserConfig { get; set; }

        /// <summary>
        /// Signalfx specific user configurable settings
        /// </summary>
        [Input("signalfxUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointSignalfxUserConfigGetArgs>? SignalfxUserConfig { get; set; }

        public ServiceIntegrationEndpointState()
        {
        }
    }
}
