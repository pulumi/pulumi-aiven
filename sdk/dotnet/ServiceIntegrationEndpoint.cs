// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public partial class ServiceIntegrationEndpoint : Pulumi.CustomResource
    {
        /// <summary>
        /// Datadog specific user configurable settings
        /// </summary>
        [Output("datadogUserConfig")]
        public Output<Outputs.ServiceIntegrationEndpointDatadogUserConfig?> DatadogUserConfig { get; private set; } = null!;

        /// <summary>
        /// Integration endpoint specific backend configuration
        /// </summary>
        [Output("endpointConfig")]
        public Output<ImmutableDictionary<string, string>> EndpointConfig { get; private set; } = null!;

        /// <summary>
        /// Name of the service integration endpoint
        /// </summary>
        [Output("endpointName")]
        public Output<string> EndpointName { get; private set; } = null!;

        /// <summary>
        /// Type of the service integration endpoint
        /// </summary>
        [Output("endpointType")]
        public Output<string> EndpointType { get; private set; } = null!;

        /// <summary>
        /// external elasticsearch specific user configurable settings
        /// </summary>
        [Output("externalElasticsearchLogsUserConfig")]
        public Output<Outputs.ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig?> ExternalElasticsearchLogsUserConfig { get; private set; } = null!;

        /// <summary>
        /// Project the service integration endpoint belongs to
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Prometheus specific user configurable settings
        /// </summary>
        [Output("prometheusUserConfig")]
        public Output<Outputs.ServiceIntegrationEndpointPrometheusUserConfig?> PrometheusUserConfig { get; private set; } = null!;

        /// <summary>
        /// rsyslog specific user configurable settings
        /// </summary>
        [Output("rsyslogUserConfig")]
        public Output<Outputs.ServiceIntegrationEndpointRsyslogUserConfig?> RsyslogUserConfig { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceIntegrationEndpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceIntegrationEndpoint(string name, ServiceIntegrationEndpointArgs args, CustomResourceOptions? options = null)
            : base("aiven:index/serviceIntegrationEndpoint:ServiceIntegrationEndpoint", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private ServiceIntegrationEndpoint(string name, Input<string> id, ServiceIntegrationEndpointState? state = null, CustomResourceOptions? options = null)
            : base("aiven:index/serviceIntegrationEndpoint:ServiceIntegrationEndpoint", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceIntegrationEndpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceIntegrationEndpoint Get(string name, Input<string> id, ServiceIntegrationEndpointState? state = null, CustomResourceOptions? options = null)
        {
            return new ServiceIntegrationEndpoint(name, id, state, options);
        }
    }

    public sealed class ServiceIntegrationEndpointArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Datadog specific user configurable settings
        /// </summary>
        [Input("datadogUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointDatadogUserConfigArgs>? DatadogUserConfig { get; set; }

        /// <summary>
        /// Name of the service integration endpoint
        /// </summary>
        [Input("endpointName", required: true)]
        public Input<string> EndpointName { get; set; } = null!;

        /// <summary>
        /// Type of the service integration endpoint
        /// </summary>
        [Input("endpointType", required: true)]
        public Input<string> EndpointType { get; set; } = null!;

        /// <summary>
        /// external elasticsearch specific user configurable settings
        /// </summary>
        [Input("externalElasticsearchLogsUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigArgs>? ExternalElasticsearchLogsUserConfig { get; set; }

        /// <summary>
        /// Project the service integration endpoint belongs to
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// Prometheus specific user configurable settings
        /// </summary>
        [Input("prometheusUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointPrometheusUserConfigArgs>? PrometheusUserConfig { get; set; }

        /// <summary>
        /// rsyslog specific user configurable settings
        /// </summary>
        [Input("rsyslogUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointRsyslogUserConfigArgs>? RsyslogUserConfig { get; set; }

        public ServiceIntegrationEndpointArgs()
        {
        }
    }

    public sealed class ServiceIntegrationEndpointState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Datadog specific user configurable settings
        /// </summary>
        [Input("datadogUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointDatadogUserConfigGetArgs>? DatadogUserConfig { get; set; }

        [Input("endpointConfig")]
        private InputMap<string>? _endpointConfig;

        /// <summary>
        /// Integration endpoint specific backend configuration
        /// </summary>
        public InputMap<string> EndpointConfig
        {
            get => _endpointConfig ?? (_endpointConfig = new InputMap<string>());
            set => _endpointConfig = value;
        }

        /// <summary>
        /// Name of the service integration endpoint
        /// </summary>
        [Input("endpointName")]
        public Input<string>? EndpointName { get; set; }

        /// <summary>
        /// Type of the service integration endpoint
        /// </summary>
        [Input("endpointType")]
        public Input<string>? EndpointType { get; set; }

        /// <summary>
        /// external elasticsearch specific user configurable settings
        /// </summary>
        [Input("externalElasticsearchLogsUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigGetArgs>? ExternalElasticsearchLogsUserConfig { get; set; }

        /// <summary>
        /// Project the service integration endpoint belongs to
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Prometheus specific user configurable settings
        /// </summary>
        [Input("prometheusUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointPrometheusUserConfigGetArgs>? PrometheusUserConfig { get; set; }

        /// <summary>
        /// rsyslog specific user configurable settings
        /// </summary>
        [Input("rsyslogUserConfig")]
        public Input<Inputs.ServiceIntegrationEndpointRsyslogUserConfigGetArgs>? RsyslogUserConfig { get; set; }

        public ServiceIntegrationEndpointState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class ServiceIntegrationEndpointDatadogUserConfigArgs : Pulumi.ResourceArgs
    {
        [Input("datadogApiKey")]
        public Input<string>? DatadogApiKey { get; set; }

        [Input("disableConsumerStats")]
        public Input<bool>? DisableConsumerStats { get; set; }

        [Input("maxPartitionContexts")]
        public Input<int>? MaxPartitionContexts { get; set; }

        [Input("site")]
        public Input<string>? Site { get; set; }

        public ServiceIntegrationEndpointDatadogUserConfigArgs()
        {
        }
    }

    public sealed class ServiceIntegrationEndpointDatadogUserConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("datadogApiKey")]
        public Input<string>? DatadogApiKey { get; set; }

        [Input("disableConsumerStats")]
        public Input<bool>? DisableConsumerStats { get; set; }

        [Input("maxPartitionContexts")]
        public Input<int>? MaxPartitionContexts { get; set; }

        [Input("site")]
        public Input<string>? Site { get; set; }

        public ServiceIntegrationEndpointDatadogUserConfigGetArgs()
        {
        }
    }

    public sealed class ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigArgs : Pulumi.ResourceArgs
    {
        [Input("ca")]
        public Input<string>? Ca { get; set; }

        [Input("indexDaysMax")]
        public Input<int>? IndexDaysMax { get; set; }

        [Input("indexPrefix")]
        public Input<string>? IndexPrefix { get; set; }

        [Input("timeout")]
        public Input<double>? Timeout { get; set; }

        [Input("url")]
        public Input<string>? Url { get; set; }

        public ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigArgs()
        {
        }
    }

    public sealed class ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("ca")]
        public Input<string>? Ca { get; set; }

        [Input("indexDaysMax")]
        public Input<int>? IndexDaysMax { get; set; }

        [Input("indexPrefix")]
        public Input<string>? IndexPrefix { get; set; }

        [Input("timeout")]
        public Input<double>? Timeout { get; set; }

        [Input("url")]
        public Input<string>? Url { get; set; }

        public ServiceIntegrationEndpointExternalElasticsearchLogsUserConfigGetArgs()
        {
        }
    }

    public sealed class ServiceIntegrationEndpointPrometheusUserConfigArgs : Pulumi.ResourceArgs
    {
        [Input("basicAuthPassword")]
        public Input<string>? BasicAuthPassword { get; set; }

        [Input("basicAuthUsername")]
        public Input<string>? BasicAuthUsername { get; set; }

        public ServiceIntegrationEndpointPrometheusUserConfigArgs()
        {
        }
    }

    public sealed class ServiceIntegrationEndpointPrometheusUserConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("basicAuthPassword")]
        public Input<string>? BasicAuthPassword { get; set; }

        [Input("basicAuthUsername")]
        public Input<string>? BasicAuthUsername { get; set; }

        public ServiceIntegrationEndpointPrometheusUserConfigGetArgs()
        {
        }
    }

    public sealed class ServiceIntegrationEndpointRsyslogUserConfigArgs : Pulumi.ResourceArgs
    {
        [Input("ca")]
        public Input<string>? Ca { get; set; }

        [Input("cert")]
        public Input<string>? Cert { get; set; }

        [Input("format")]
        public Input<string>? Format { get; set; }

        [Input("key")]
        public Input<string>? Key { get; set; }

        [Input("logline")]
        public Input<string>? Logline { get; set; }

        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("sd")]
        public Input<string>? Sd { get; set; }

        [Input("server")]
        public Input<string>? Server { get; set; }

        [Input("tls")]
        public Input<bool>? Tls { get; set; }

        public ServiceIntegrationEndpointRsyslogUserConfigArgs()
        {
        }
    }

    public sealed class ServiceIntegrationEndpointRsyslogUserConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("ca")]
        public Input<string>? Ca { get; set; }

        [Input("cert")]
        public Input<string>? Cert { get; set; }

        [Input("format")]
        public Input<string>? Format { get; set; }

        [Input("key")]
        public Input<string>? Key { get; set; }

        [Input("logline")]
        public Input<string>? Logline { get; set; }

        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("sd")]
        public Input<string>? Sd { get; set; }

        [Input("server")]
        public Input<string>? Server { get; set; }

        [Input("tls")]
        public Input<bool>? Tls { get; set; }

        public ServiceIntegrationEndpointRsyslogUserConfigGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class ServiceIntegrationEndpointDatadogUserConfig
    {
        public readonly string? DatadogApiKey;
        public readonly bool? DisableConsumerStats;
        public readonly int? MaxPartitionContexts;
        public readonly string? Site;

        [OutputConstructor]
        private ServiceIntegrationEndpointDatadogUserConfig(
            string? datadogApiKey,
            bool? disableConsumerStats,
            int? maxPartitionContexts,
            string? site)
        {
            DatadogApiKey = datadogApiKey;
            DisableConsumerStats = disableConsumerStats;
            MaxPartitionContexts = maxPartitionContexts;
            Site = site;
        }
    }

    [OutputType]
    public sealed class ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig
    {
        public readonly string? Ca;
        public readonly int? IndexDaysMax;
        public readonly string? IndexPrefix;
        public readonly double? Timeout;
        public readonly string? Url;

        [OutputConstructor]
        private ServiceIntegrationEndpointExternalElasticsearchLogsUserConfig(
            string? ca,
            int? indexDaysMax,
            string? indexPrefix,
            double? timeout,
            string? url)
        {
            Ca = ca;
            IndexDaysMax = indexDaysMax;
            IndexPrefix = indexPrefix;
            Timeout = timeout;
            Url = url;
        }
    }

    [OutputType]
    public sealed class ServiceIntegrationEndpointPrometheusUserConfig
    {
        public readonly string? BasicAuthPassword;
        public readonly string? BasicAuthUsername;

        [OutputConstructor]
        private ServiceIntegrationEndpointPrometheusUserConfig(
            string? basicAuthPassword,
            string? basicAuthUsername)
        {
            BasicAuthPassword = basicAuthPassword;
            BasicAuthUsername = basicAuthUsername;
        }
    }

    [OutputType]
    public sealed class ServiceIntegrationEndpointRsyslogUserConfig
    {
        public readonly string? Ca;
        public readonly string? Cert;
        public readonly string? Format;
        public readonly string? Key;
        public readonly string? Logline;
        public readonly int? Port;
        public readonly string? Sd;
        public readonly string? Server;
        public readonly bool? Tls;

        [OutputConstructor]
        private ServiceIntegrationEndpointRsyslogUserConfig(
            string? ca,
            string? cert,
            string? format,
            string? key,
            string? logline,
            int? port,
            string? sd,
            string? server,
            bool? tls)
        {
            Ca = ca;
            Cert = cert;
            Format = format;
            Key = key;
            Logline = logline;
            Port = port;
            Sd = sd;
            Server = server;
            Tls = tls;
        }
    }
    }
}
