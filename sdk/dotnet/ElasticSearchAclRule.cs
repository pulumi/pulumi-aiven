// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    /// <summary>
    /// ## # Elasticsearch ACL Rule Resource
    /// 
    /// The Elasticsearch ACL Rule resource models a single ACL Rule for an Aiven Elasticsearch service.
    /// </summary>
    [AivenResourceType("aiven:index/elasticSearchAclRule:ElasticSearchAclRule")]
    public partial class ElasticSearchAclRule : Pulumi.CustomResource
    {
        /// <summary>
        /// Elasticsearch index pattern
        /// </summary>
        [Output("index")]
        public Output<string> Index { get; private set; } = null!;

        /// <summary>
        /// is the Elasticsearch permission, list of supported permissions: 
        /// `deny`, `admin`, `read`, `readwrite`, `write`.
        /// </summary>
        [Output("permission")]
        public Output<string> Permission { get; private set; } = null!;

        /// <summary>
        /// and `service_name` - (Required) define the project and service the ACL belongs to.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Service to link the Elasticsearch ACLs to
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// and `index` - (Required) define the username and index the ACL rule should apply to.
        /// </summary>
        [Output("username")]
        public Output<string> Username { get; private set; } = null!;


        /// <summary>
        /// Create a ElasticSearchAclRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ElasticSearchAclRule(string name, ElasticSearchAclRuleArgs args, CustomResourceOptions? options = null)
            : base("aiven:index/elasticSearchAclRule:ElasticSearchAclRule", name, args ?? new ElasticSearchAclRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ElasticSearchAclRule(string name, Input<string> id, ElasticSearchAclRuleState? state = null, CustomResourceOptions? options = null)
            : base("aiven:index/elasticSearchAclRule:ElasticSearchAclRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ElasticSearchAclRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ElasticSearchAclRule Get(string name, Input<string> id, ElasticSearchAclRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new ElasticSearchAclRule(name, id, state, options);
        }
    }

    public sealed class ElasticSearchAclRuleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Elasticsearch index pattern
        /// </summary>
        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        /// <summary>
        /// is the Elasticsearch permission, list of supported permissions: 
        /// `deny`, `admin`, `read`, `readwrite`, `write`.
        /// </summary>
        [Input("permission", required: true)]
        public Input<string> Permission { get; set; } = null!;

        /// <summary>
        /// and `service_name` - (Required) define the project and service the ACL belongs to.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// Service to link the Elasticsearch ACLs to
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// and `index` - (Required) define the username and index the ACL rule should apply to.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public ElasticSearchAclRuleArgs()
        {
        }
    }

    public sealed class ElasticSearchAclRuleState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Elasticsearch index pattern
        /// </summary>
        [Input("index")]
        public Input<string>? Index { get; set; }

        /// <summary>
        /// is the Elasticsearch permission, list of supported permissions: 
        /// `deny`, `admin`, `read`, `readwrite`, `write`.
        /// </summary>
        [Input("permission")]
        public Input<string>? Permission { get; set; }

        /// <summary>
        /// and `service_name` - (Required) define the project and service the ACL belongs to.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Service to link the Elasticsearch ACLs to
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// and `index` - (Required) define the username and index the ACL rule should apply to.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public ElasticSearchAclRuleState()
        {
        }
    }
}
