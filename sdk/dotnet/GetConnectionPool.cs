// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetConnectionPool
    {
        /// <summary>
        /// The Connection Pool data source provides information about the existing Aiven Connection Pool.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var mytestpool = Output.Create(Aiven.GetConnectionPool.InvokeAsync(new Aiven.GetConnectionPoolArgs
        ///         {
        ///             Project = aiven_project.Myproject.Project,
        ///             ServiceName = aiven_service.Myservice.Service_name,
        ///             PoolName = "mypool",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetConnectionPoolResult> InvokeAsync(GetConnectionPoolArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetConnectionPoolResult>("aiven:index/getConnectionPool:getConnectionPool", args ?? new GetConnectionPoolArgs(), options.WithDefaults());

        /// <summary>
        /// The Connection Pool data source provides information about the existing Aiven Connection Pool.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var mytestpool = Output.Create(Aiven.GetConnectionPool.InvokeAsync(new Aiven.GetConnectionPoolArgs
        ///         {
        ///             Project = aiven_project.Myproject.Project,
        ///             ServiceName = aiven_service.Myservice.Service_name,
        ///             PoolName = "mypool",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetConnectionPoolResult> Invoke(GetConnectionPoolInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetConnectionPoolResult>("aiven:index/getConnectionPool:getConnectionPool", args ?? new GetConnectionPoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConnectionPoolArgs : Pulumi.InvokeArgs
    {
        [Input("poolName", required: true)]
        public string PoolName { get; set; } = null!;

        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetConnectionPoolArgs()
        {
        }
    }

    public sealed class GetConnectionPoolInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("poolName", required: true)]
        public Input<string> PoolName { get; set; } = null!;

        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public GetConnectionPoolInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetConnectionPoolResult
    {
        public readonly string ConnectionUri;
        public readonly string DatabaseName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string PoolMode;
        public readonly string PoolName;
        public readonly int PoolSize;
        public readonly string Project;
        public readonly string ServiceName;
        public readonly string Username;

        [OutputConstructor]
        private GetConnectionPoolResult(
            string connectionUri,

            string databaseName,

            string id,

            string poolMode,

            string poolName,

            int poolSize,

            string project,

            string serviceName,

            string username)
        {
            ConnectionUri = connectionUri;
            DatabaseName = databaseName;
            Id = id;
            PoolMode = poolMode;
            PoolName = poolName;
            PoolSize = poolSize;
            Project = project;
            ServiceName = serviceName;
            Username = username;
        }
    }
}
