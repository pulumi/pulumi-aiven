// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetConnectionPool
    {
        /// <summary>
        /// The Connection Pool data source provides information about the existing Aiven Connection Pool.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var mytestpool = Aiven.GetConnectionPool.Invoke(new()
        ///     {
        ///         Project = aiven_project.Myproject.Project,
        ///         ServiceName = aiven_pg.Mypg.Service_name,
        ///         PoolName = "mypool",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetConnectionPoolResult> InvokeAsync(GetConnectionPoolArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConnectionPoolResult>("aiven:index/getConnectionPool:getConnectionPool", args ?? new GetConnectionPoolArgs(), options.WithDefaults());

        /// <summary>
        /// The Connection Pool data source provides information about the existing Aiven Connection Pool.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var mytestpool = Aiven.GetConnectionPool.Invoke(new()
        ///     {
        ///         Project = aiven_project.Myproject.Project,
        ///         ServiceName = aiven_pg.Mypg.Service_name,
        ///         PoolName = "mypool",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetConnectionPoolResult> Invoke(GetConnectionPoolInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConnectionPoolResult>("aiven:index/getConnectionPool:getConnectionPool", args ?? new GetConnectionPoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConnectionPoolArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the created pool. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("poolName", required: true)]
        public string PoolName { get; set; } = null!;

        /// <summary>
        /// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetConnectionPoolArgs()
        {
        }
        public static new GetConnectionPoolArgs Empty => new GetConnectionPoolArgs();
    }

    public sealed class GetConnectionPoolInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the created pool. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("poolName", required: true)]
        public Input<string> PoolName { get; set; } = null!;

        /// <summary>
        /// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public GetConnectionPoolInvokeArgs()
        {
        }
        public static new GetConnectionPoolInvokeArgs Empty => new GetConnectionPoolInvokeArgs();
    }


    [OutputType]
    public sealed class GetConnectionPoolResult
    {
        /// <summary>
        /// The URI for connecting to the pool
        /// </summary>
        public readonly string ConnectionUri;
        /// <summary>
        /// The name of the database the pool connects to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        public readonly string DatabaseName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The mode the pool operates in. The possible values are `session`, `transaction` and `statement`. The default value is `transaction`.
        /// </summary>
        public readonly string PoolMode;
        /// <summary>
        /// The name of the created pool. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        public readonly string PoolName;
        /// <summary>
        /// The number of connections the pool may create towards the backend server. This does not affect the number of incoming connections, which is always a much larger number. The default value is `10`.
        /// </summary>
        public readonly int PoolSize;
        /// <summary>
        /// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        public readonly string Project;
        /// <summary>
        /// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        public readonly string ServiceName;
        /// <summary>
        /// The name of the service user used to connect to the database. To set up proper dependencies please refer to this variable as a reference.
        /// </summary>
        public readonly string Username;

        [OutputConstructor]
        private GetConnectionPoolResult(
            string connectionUri,

            string databaseName,

            string id,

            string poolMode,

            string poolName,

            int poolSize,

            string project,

            string serviceName,

            string username)
        {
            ConnectionUri = connectionUri;
            DatabaseName = databaseName;
            Id = id;
            PoolMode = poolMode;
            PoolName = poolName;
            PoolSize = poolSize;
            Project = project;
            ServiceName = serviceName;
            Username = username;
        }
    }
}
