// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    /// <summary>
    /// Approves an Azure Private Link connection to an Aiven service with an associated endpoint IP.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aiven = Pulumi.Aiven;
    /// using Azurerm = Pulumi.Azurerm;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var staticIps = new List&lt;Aiven.StaticIp&gt;();
    ///     for (var rangeIndex = 0; rangeIndex &lt; 2; rangeIndex++)
    ///     {
    ///         var range = new { Value = rangeIndex };
    ///         staticIps.Add(new Aiven.StaticIp($"static_ips-{range.Value}", new()
    ///         {
    ///             Project = projectId,
    ///             CloudName = region,
    ///         }));
    ///     }
    ///     var @default = new Aiven.Pg("default", new()
    ///     {
    ///         ServiceName = "postgres",
    ///         Project = aivenProjectId,
    ///         ProjectVpcId = aivenProjectVpcId,
    ///         CloudName = region,
    ///         Plan = plan,
    ///         StaticIps = staticIps.Select(sip =&gt; 
    ///         {
    ///             return sip.StaticIpAddressId;
    ///         }).ToList(),
    ///         PgUserConfig = new Aiven.Inputs.PgPgUserConfigArgs
    ///         {
    ///             PgVersion = "13",
    ///             StaticIps = true,
    ///             PrivatelinkAccess = new Aiven.Inputs.PgPgUserConfigPrivatelinkAccessArgs
    ///             {
    ///                 Pg = true,
    ///                 Pgbouncer = true,
    ///             },
    ///         },
    ///     });
    /// 
    ///     var privatelink = new Aiven.AzurePrivatelink("privatelink", new()
    ///     {
    ///         Project = aivenProjectId,
    ///         ServiceName = @default.Name,
    ///         UserSubscriptionIds = new[]
    ///         {
    ///             azureSubscriptionId,
    ///         },
    ///     });
    /// 
    ///     var endpoint = new Azurerm.Index.PrivateEndpoint("endpoint", new()
    ///     {
    ///         Name = "postgres-endpoint",
    ///         Location = region,
    ///         ResourceGroupName = azureResourceGroup.Name,
    ///         SubnetId = azureSubnetId,
    ///         PrivateServiceConnection = new[]
    ///         {
    ///             
    ///             {
    ///                 { "name", @default.Name },
    ///                 { "privateConnectionResourceId", privatelink.AzureServiceId },
    ///                 { "isManualConnection", true },
    ///                 { "requestMessage", @default.Name },
    ///             },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             privatelink,
    ///         },
    ///     });
    /// 
    ///     var approval = new Aiven.AzurePrivatelinkConnectionApproval("approval", new()
    ///     {
    ///         Project = aivenProjectId,
    ///         ServiceName = @default.ServiceName,
    ///         EndpointIpAddress = endpoint.PrivateServiceConnection[0].PrivateIpAddress,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import aiven:index/azurePrivatelinkConnectionApproval:AzurePrivatelinkConnectionApproval approval PROJECT/SERVICE_NAME
    /// ```
    /// </summary>
    [AivenResourceType("aiven:index/azurePrivatelinkConnectionApproval:AzurePrivatelinkConnectionApproval")]
    public partial class AzurePrivatelinkConnectionApproval : global::Pulumi.CustomResource
    {
        /// <summary>
        /// IP address of Azure private endpoint.
        /// </summary>
        [Output("endpointIpAddress")]
        public Output<string?> EndpointIpAddress { get; private set; } = null!;

        /// <summary>
        /// The ID of the Private Link connection.
        /// </summary>
        [Output("privatelinkConnectionId")]
        public Output<string> PrivatelinkConnectionId { get; private set; } = null!;

        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// The state of the Private Link connection.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;


        /// <summary>
        /// Create a AzurePrivatelinkConnectionApproval resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AzurePrivatelinkConnectionApproval(string name, AzurePrivatelinkConnectionApprovalArgs args, CustomResourceOptions? options = null)
            : base("aiven:index/azurePrivatelinkConnectionApproval:AzurePrivatelinkConnectionApproval", name, args ?? new AzurePrivatelinkConnectionApprovalArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AzurePrivatelinkConnectionApproval(string name, Input<string> id, AzurePrivatelinkConnectionApprovalState? state = null, CustomResourceOptions? options = null)
            : base("aiven:index/azurePrivatelinkConnectionApproval:AzurePrivatelinkConnectionApproval", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AzurePrivatelinkConnectionApproval resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AzurePrivatelinkConnectionApproval Get(string name, Input<string> id, AzurePrivatelinkConnectionApprovalState? state = null, CustomResourceOptions? options = null)
        {
            return new AzurePrivatelinkConnectionApproval(name, id, state, options);
        }
    }

    public sealed class AzurePrivatelinkConnectionApprovalArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// IP address of Azure private endpoint.
        /// </summary>
        [Input("endpointIpAddress")]
        public Input<string>? EndpointIpAddress { get; set; }

        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public AzurePrivatelinkConnectionApprovalArgs()
        {
        }
        public static new AzurePrivatelinkConnectionApprovalArgs Empty => new AzurePrivatelinkConnectionApprovalArgs();
    }

    public sealed class AzurePrivatelinkConnectionApprovalState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// IP address of Azure private endpoint.
        /// </summary>
        [Input("endpointIpAddress")]
        public Input<string>? EndpointIpAddress { get; set; }

        /// <summary>
        /// The ID of the Private Link connection.
        /// </summary>
        [Input("privatelinkConnectionId")]
        public Input<string>? PrivatelinkConnectionId { get; set; }

        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// The state of the Private Link connection.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public AzurePrivatelinkConnectionApprovalState()
        {
        }
        public static new AzurePrivatelinkConnectionApprovalState Empty => new AzurePrivatelinkConnectionApprovalState();
    }
}
