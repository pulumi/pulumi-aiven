// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    /// <summary>
    /// Creates and manages a VPC for an Aiven organization.
    /// 
    /// **This resource is in the beta stage and may change without notice.** Set
    /// the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aiven = Pulumi.Aiven;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleVpc = new Aiven.OrganizationVpc("example_vpc", new()
    ///     {
    ///         OrganizationId = example.Id,
    ///         CloudName = "aws-eu-central-1",
    ///         NetworkCidr = "10.0.0.0/24",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import aiven:index/organizationVpc:OrganizationVpc example ORGANIZATION_ID/ORGANIZATION_VPC_ID
    /// ```
    /// </summary>
    [AivenResourceType("aiven:index/organizationVpc:OrganizationVpc")]
    public partial class OrganizationVpc : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The cloud provider and region where the service is hosted in the format `CLOUD_PROVIDER-REGION_NAME`. For example, `google-europe-west1` or `aws-us-east-2`. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("cloudName")]
        public Output<string> CloudName { get; private set; } = null!;

        /// <summary>
        /// Time of creation of the VPC.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Network address range used by the VPC. For example, `192.168.0.0/24`.
        /// </summary>
        [Output("networkCidr")]
        public Output<string> NetworkCidr { get; private set; } = null!;

        /// <summary>
        /// The ID of the organization.
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// The ID of the Aiven Organization VPC.
        /// </summary>
        [Output("organizationVpcId")]
        public Output<string> OrganizationVpcId { get; private set; } = null!;

        /// <summary>
        /// State of the VPC. The possible values are `ACTIVE`, `APPROVED`, `DELETED` and `DELETING`.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Time of the last update of the VPC.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a OrganizationVpc resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrganizationVpc(string name, OrganizationVpcArgs args, CustomResourceOptions? options = null)
            : base("aiven:index/organizationVpc:OrganizationVpc", name, args ?? new OrganizationVpcArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrganizationVpc(string name, Input<string> id, OrganizationVpcState? state = null, CustomResourceOptions? options = null)
            : base("aiven:index/organizationVpc:OrganizationVpc", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrganizationVpc resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrganizationVpc Get(string name, Input<string> id, OrganizationVpcState? state = null, CustomResourceOptions? options = null)
        {
            return new OrganizationVpc(name, id, state, options);
        }
    }

    public sealed class OrganizationVpcArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The cloud provider and region where the service is hosted in the format `CLOUD_PROVIDER-REGION_NAME`. For example, `google-europe-west1` or `aws-us-east-2`. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("cloudName", required: true)]
        public Input<string> CloudName { get; set; } = null!;

        /// <summary>
        /// Network address range used by the VPC. For example, `192.168.0.0/24`.
        /// </summary>
        [Input("networkCidr", required: true)]
        public Input<string> NetworkCidr { get; set; } = null!;

        /// <summary>
        /// The ID of the organization.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        public OrganizationVpcArgs()
        {
        }
        public static new OrganizationVpcArgs Empty => new OrganizationVpcArgs();
    }

    public sealed class OrganizationVpcState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The cloud provider and region where the service is hosted in the format `CLOUD_PROVIDER-REGION_NAME`. For example, `google-europe-west1` or `aws-us-east-2`. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("cloudName")]
        public Input<string>? CloudName { get; set; }

        /// <summary>
        /// Time of creation of the VPC.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Network address range used by the VPC. For example, `192.168.0.0/24`.
        /// </summary>
        [Input("networkCidr")]
        public Input<string>? NetworkCidr { get; set; }

        /// <summary>
        /// The ID of the organization.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        /// <summary>
        /// The ID of the Aiven Organization VPC.
        /// </summary>
        [Input("organizationVpcId")]
        public Input<string>? OrganizationVpcId { get; set; }

        /// <summary>
        /// State of the VPC. The possible values are `ACTIVE`, `APPROVED`, `DELETED` and `DELETING`.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Time of the last update of the VPC.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public OrganizationVpcState()
        {
        }
        public static new OrganizationVpcState Empty => new OrganizationVpcState();
    }
}
