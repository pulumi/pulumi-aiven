// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetAccountAuthentication
    {
        /// <summary>
        /// The Account Authentication data source provides information about the existing Aiven Account Authentication.
        /// </summary>
        public static Task<GetAccountAuthenticationResult> InvokeAsync(GetAccountAuthenticationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAccountAuthenticationResult>("aiven:index/getAccountAuthentication:getAccountAuthentication", args ?? new GetAccountAuthenticationArgs(), options.WithDefaults());

        /// <summary>
        /// The Account Authentication data source provides information about the existing Aiven Account Authentication.
        /// </summary>
        public static Output<GetAccountAuthenticationResult> Invoke(GetAccountAuthenticationInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAccountAuthenticationResult>("aiven:index/getAccountAuthentication:getAccountAuthentication", args ?? new GetAccountAuthenticationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccountAuthenticationArgs : Pulumi.InvokeArgs
    {
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetAccountAuthenticationArgs()
        {
        }
    }

    public sealed class GetAccountAuthenticationInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetAccountAuthenticationInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAccountAuthenticationResult
    {
        public readonly string AccountId;
        public readonly string AuthenticationId;
        public readonly string AutoJoinTeamId;
        public readonly string CreateTime;
        public readonly bool Enabled;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string SamlAcsUrl;
        public readonly string SamlCertificate;
        public readonly string SamlDigestAlgorithm;
        public readonly string SamlEntityId;
        public readonly ImmutableArray<Outputs.GetAccountAuthenticationSamlFieldMappingResult> SamlFieldMappings;
        public readonly bool SamlIdpLoginAllowed;
        public readonly string SamlIdpUrl;
        public readonly string SamlMetadataUrl;
        public readonly string SamlSignatureAlgorithm;
        public readonly string SamlVariant;
        public readonly string Type;
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetAccountAuthenticationResult(
            string accountId,

            string authenticationId,

            string autoJoinTeamId,

            string createTime,

            bool enabled,

            string id,

            string name,

            string samlAcsUrl,

            string samlCertificate,

            string samlDigestAlgorithm,

            string samlEntityId,

            ImmutableArray<Outputs.GetAccountAuthenticationSamlFieldMappingResult> samlFieldMappings,

            bool samlIdpLoginAllowed,

            string samlIdpUrl,

            string samlMetadataUrl,

            string samlSignatureAlgorithm,

            string samlVariant,

            string type,

            string updateTime)
        {
            AccountId = accountId;
            AuthenticationId = authenticationId;
            AutoJoinTeamId = autoJoinTeamId;
            CreateTime = createTime;
            Enabled = enabled;
            Id = id;
            Name = name;
            SamlAcsUrl = samlAcsUrl;
            SamlCertificate = samlCertificate;
            SamlDigestAlgorithm = samlDigestAlgorithm;
            SamlEntityId = samlEntityId;
            SamlFieldMappings = samlFieldMappings;
            SamlIdpLoginAllowed = samlIdpLoginAllowed;
            SamlIdpUrl = samlIdpUrl;
            SamlMetadataUrl = samlMetadataUrl;
            SamlSignatureAlgorithm = samlSignatureAlgorithm;
            SamlVariant = samlVariant;
            Type = type;
            UpdateTime = updateTime;
        }
    }
}
