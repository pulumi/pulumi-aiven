// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public partial class ServiceUser : Pulumi.CustomResource
    {
        /// <summary>
        /// Access certificate for the user if applicable for the service in question
        /// </summary>
        [Output("accessCert")]
        public Output<string> AccessCert { get; private set; } = null!;

        /// <summary>
        /// Access certificate key for the user if applicable for the service in question
        /// </summary>
        [Output("accessKey")]
        public Output<string> AccessKey { get; private set; } = null!;

        /// <summary>
        /// Password of the user
        /// </summary>
        [Output("password")]
        public Output<string> Password { get; private set; } = null!;

        /// <summary>
        /// Project to link the user to
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Service to link the user to
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// Type of the user account
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Name of the user account
        /// </summary>
        [Output("username")]
        public Output<string> Username { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceUser resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceUser(string name, ServiceUserArgs args, CustomResourceOptions? options = null)
            : base("aiven:index/serviceUser:ServiceUser", name, args, MakeResourceOptions(options, ""))
        {
        }

        private ServiceUser(string name, Input<string> id, ServiceUserState? state = null, CustomResourceOptions? options = null)
            : base("aiven:index/serviceUser:ServiceUser", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceUser resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceUser Get(string name, Input<string> id, ServiceUserState? state = null, CustomResourceOptions? options = null)
        {
            return new ServiceUser(name, id, state, options);
        }
    }

    public sealed class ServiceUserArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Project to link the user to
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// Service to link the user to
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// Name of the user account
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public ServiceUserArgs()
        {
        }
    }

    public sealed class ServiceUserState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Access certificate for the user if applicable for the service in question
        /// </summary>
        [Input("accessCert")]
        public Input<string>? AccessCert { get; set; }

        /// <summary>
        /// Access certificate key for the user if applicable for the service in question
        /// </summary>
        [Input("accessKey")]
        public Input<string>? AccessKey { get; set; }

        /// <summary>
        /// Password of the user
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// Project to link the user to
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Service to link the user to
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// Type of the user account
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// Name of the user account
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public ServiceUserState()
        {
        }
    }
}
