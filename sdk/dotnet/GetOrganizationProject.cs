// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetOrganizationProject
    {
        /// <summary>
        /// Gets information about an Aiven project. 
        /// 
        /// **This resource is in the beta stage and may change without notice.** Set
        /// the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aiven.GetOrganizationProject.Invoke(new()
        ///     {
        ///         ProjectId = foo.ProjectId,
        ///         OrganizationId = foo.OrganizationId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOrganizationProjectResult> InvokeAsync(GetOrganizationProjectArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationProjectResult>("aiven:index/getOrganizationProject:getOrganizationProject", args ?? new GetOrganizationProjectArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about an Aiven project. 
        /// 
        /// **This resource is in the beta stage and may change without notice.** Set
        /// the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aiven.GetOrganizationProject.Invoke(new()
        ///     {
        ///         ProjectId = foo.ProjectId,
        ///         OrganizationId = foo.OrganizationId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOrganizationProjectResult> Invoke(GetOrganizationProjectInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationProjectResult>("aiven:index/getOrganizationProject:getOrganizationProject", args ?? new GetOrganizationProjectInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about an Aiven project. 
        /// 
        /// **This resource is in the beta stage and may change without notice.** Set
        /// the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aiven.GetOrganizationProject.Invoke(new()
        ///     {
        ///         ProjectId = foo.ProjectId,
        ///         OrganizationId = foo.OrganizationId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOrganizationProjectResult> Invoke(GetOrganizationProjectInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationProjectResult>("aiven:index/getOrganizationProject:getOrganizationProject", args ?? new GetOrganizationProjectInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrganizationProjectArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of an organization.
        /// </summary>
        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        /// <summary>
        /// The name of the project. Names must be globally unique among all Aiven customers. Names must begin with a letter (a-z), and consist of letters, numbers, and dashes. It's recommended to use a random string or your organization name as a prefix or suffix. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        [Input("tags")]
        private List<Inputs.GetOrganizationProjectTagArgs>? _tags;

        /// <summary>
        /// Tags are key-value pairs that allow you to categorize projects.
        /// </summary>
        public List<Inputs.GetOrganizationProjectTagArgs> Tags
        {
            get => _tags ?? (_tags = new List<Inputs.GetOrganizationProjectTagArgs>());
            set => _tags = value;
        }

        [Input("timeouts")]
        public Inputs.GetOrganizationProjectTimeoutsArgs? Timeouts { get; set; }

        public GetOrganizationProjectArgs()
        {
        }
        public static new GetOrganizationProjectArgs Empty => new GetOrganizationProjectArgs();
    }

    public sealed class GetOrganizationProjectInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of an organization.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        /// <summary>
        /// The name of the project. Names must be globally unique among all Aiven customers. Names must begin with a letter (a-z), and consist of letters, numbers, and dashes. It's recommended to use a random string or your organization name as a prefix or suffix. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.GetOrganizationProjectTagInputArgs>? _tags;

        /// <summary>
        /// Tags are key-value pairs that allow you to categorize projects.
        /// </summary>
        public InputList<Inputs.GetOrganizationProjectTagInputArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.GetOrganizationProjectTagInputArgs>());
            set => _tags = value;
        }

        [Input("timeouts")]
        public Input<Inputs.GetOrganizationProjectTimeoutsInputArgs>? Timeouts { get; set; }

        public GetOrganizationProjectInvokeArgs()
        {
        }
        public static new GetOrganizationProjectInvokeArgs Empty => new GetOrganizationProjectInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrganizationProjectResult
    {
        /// <summary>
        /// Valid port number (1-65535) to use as a base for service port allocation.
        /// </summary>
        public readonly int BasePort;
        /// <summary>
        /// Billing group ID to assign to the project. It's required when moving projects between organizations.
        /// </summary>
        public readonly string BillingGroupId;
        /// <summary>
        /// PEM encoded certificate.
        /// </summary>
        public readonly string CaCert;
        /// <summary>
        /// Resource ID, a composite of `organization_id` and `project_id` IDs.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// ID of an organization.
        /// </summary>
        public readonly string OrganizationId;
        /// <summary>
        /// Link a project to an [organization or organizational unit](https://aiven.io/docs/platform/concepts/orgs-units-projects) by using its ID. To set up proper dependencies please refer to this variable as a reference.
        /// </summary>
        public readonly string ParentId;
        /// <summary>
        /// The name of the project. Names must be globally unique among all Aiven customers. Names must begin with a letter (a-z), and consist of letters, numbers, and dashes. It's recommended to use a random string or your organization name as a prefix or suffix. Changing this property forces recreation of the resource.
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// Tags are key-value pairs that allow you to categorize projects.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOrganizationProjectTagResult> Tags;
        /// <summary>
        /// The email addresses for [project contacts](https://aiven.io/docs/platform/howto/technical-emails), who will receive important alerts and updates about this project and its services. You can also set email contacts at the service level. It's good practice to keep these up-to-date to be aware of any potential issues with your project.
        /// </summary>
        public readonly ImmutableArray<string> TechnicalEmails;
        public readonly Outputs.GetOrganizationProjectTimeoutsResult? Timeouts;

        [OutputConstructor]
        private GetOrganizationProjectResult(
            int basePort,

            string billingGroupId,

            string caCert,

            string id,

            string organizationId,

            string parentId,

            string projectId,

            ImmutableArray<Outputs.GetOrganizationProjectTagResult> tags,

            ImmutableArray<string> technicalEmails,

            Outputs.GetOrganizationProjectTimeoutsResult? timeouts)
        {
            BasePort = basePort;
            BillingGroupId = billingGroupId;
            CaCert = caCert;
            Id = id;
            OrganizationId = organizationId;
            ParentId = parentId;
            ProjectId = projectId;
            Tags = tags;
            TechnicalEmails = technicalEmails;
            Timeouts = timeouts;
        }
    }
}
