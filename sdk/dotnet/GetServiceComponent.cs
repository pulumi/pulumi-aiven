// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetServiceComponent
    {
        public static Task<GetServiceComponentResult> InvokeAsync(GetServiceComponentArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServiceComponentResult>("aiven:index/getServiceComponent:getServiceComponent", args ?? new GetServiceComponentArgs(), options.WithVersion());
    }


    public sealed class GetServiceComponentArgs : Pulumi.InvokeArgs
    {
        [Input("component", required: true)]
        public string Component { get; set; } = null!;

        [Input("kafkaAuthenticationMethod")]
        public string? KafkaAuthenticationMethod { get; set; }

        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        [Input("route")]
        public string? Route { get; set; }

        [Input("serviceName")]
        public string? ServiceName { get; set; }

        [Input("ssl")]
        public bool? Ssl { get; set; }

        [Input("usage")]
        public string? Usage { get; set; }

        public GetServiceComponentArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetServiceComponentResult
    {
        public readonly string Component;
        public readonly string Host;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? KafkaAuthenticationMethod;
        public readonly int Port;
        public readonly string Project;
        public readonly string? Route;
        public readonly string? ServiceName;
        public readonly bool? Ssl;
        public readonly string? Usage;

        [OutputConstructor]
        private GetServiceComponentResult(
            string component,

            string host,

            string id,

            string? kafkaAuthenticationMethod,

            int port,

            string project,

            string? route,

            string? serviceName,

            bool? ssl,

            string? usage)
        {
            Component = component;
            Host = host;
            Id = id;
            KafkaAuthenticationMethod = kafkaAuthenticationMethod;
            Port = port;
            Project = project;
            Route = route;
            ServiceName = serviceName;
            Ssl = ssl;
            Usage = usage;
        }
    }
}
