// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetOrganizationApplicationUser
    {
        /// <summary>
        /// Gets information about an application user.
        /// </summary>
        public static Task<GetOrganizationApplicationUserResult> InvokeAsync(GetOrganizationApplicationUserArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationApplicationUserResult>("aiven:index/getOrganizationApplicationUser:getOrganizationApplicationUser", args ?? new GetOrganizationApplicationUserArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about an application user.
        /// </summary>
        public static Output<GetOrganizationApplicationUserResult> Invoke(GetOrganizationApplicationUserInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationApplicationUserResult>("aiven:index/getOrganizationApplicationUser:getOrganizationApplicationUser", args ?? new GetOrganizationApplicationUserInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about an application user.
        /// </summary>
        public static Output<GetOrganizationApplicationUserResult> Invoke(GetOrganizationApplicationUserInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationApplicationUserResult>("aiven:index/getOrganizationApplicationUser:getOrganizationApplicationUser", args ?? new GetOrganizationApplicationUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrganizationApplicationUserArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of an organization.
        /// </summary>
        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        [Input("timeouts")]
        public Inputs.GetOrganizationApplicationUserTimeoutsArgs? Timeouts { get; set; }

        /// <summary>
        /// User ID.
        /// </summary>
        [Input("userId", required: true)]
        public string UserId { get; set; } = null!;

        public GetOrganizationApplicationUserArgs()
        {
        }
        public static new GetOrganizationApplicationUserArgs Empty => new GetOrganizationApplicationUserArgs();
    }

    public sealed class GetOrganizationApplicationUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of an organization.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        [Input("timeouts")]
        public Input<Inputs.GetOrganizationApplicationUserTimeoutsInputArgs>? Timeouts { get; set; }

        /// <summary>
        /// User ID.
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public GetOrganizationApplicationUserInvokeArgs()
        {
        }
        public static new GetOrganizationApplicationUserInvokeArgs Empty => new GetOrganizationApplicationUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrganizationApplicationUserResult
    {
        /// <summary>
        /// User Email.
        /// </summary>
        public readonly string Email;
        /// <summary>
        /// Resource ID, a composite of `OrganizationId` and `UserId` IDs.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Alters super admin state of the organization application user. The default value is `False`.
        /// </summary>
        public readonly bool IsSuperAdmin;
        /// <summary>
        /// Name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// ID of an organization.
        /// </summary>
        public readonly string OrganizationId;
        public readonly Outputs.GetOrganizationApplicationUserTimeoutsResult? Timeouts;
        /// <summary>
        /// User ID.
        /// </summary>
        public readonly string UserId;

        [OutputConstructor]
        private GetOrganizationApplicationUserResult(
            string email,

            string id,

            bool isSuperAdmin,

            string name,

            string organizationId,

            Outputs.GetOrganizationApplicationUserTimeoutsResult? timeouts,

            string userId)
        {
            Email = email;
            Id = id;
            IsSuperAdmin = isSuperAdmin;
            Name = name;
            OrganizationId = organizationId;
            Timeouts = timeouts;
            UserId = userId;
        }
    }
}
