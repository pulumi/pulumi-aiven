// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    /// <summary>
    /// Create an access control list (ACL) rule for indexes in an Aiven for OpenSearchÂ® service. ACLs apply only to indexes and don't control access to other OpenSearch APIs such as OpenSearch Dashboards.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aiven = Pulumi.Aiven;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var osUser1 = new Aiven.OpensearchUser("os_user_1", new()
    ///     {
    ///         Project = exampleProject.Project,
    ///         ServiceName = exampleOpensearch.ServiceName,
    ///         Username = "documentation-user-1",
    ///     });
    /// 
    ///     var osUser2 = new Aiven.OpensearchUser("os_user_2", new()
    ///     {
    ///         Project = exampleProject.Project,
    ///         ServiceName = exampleOpensearch.ServiceName,
    ///         Username = "documentation-user-2",
    ///     });
    /// 
    ///     var osAclsConfig = new Aiven.OpenSearchAclConfig("os_acls_config", new()
    ///     {
    ///         Project = exampleProject.Project,
    ///         ServiceName = exampleOpensearch.ServiceName,
    ///         Enabled = true,
    ///         ExtendedAcl = false,
    ///     });
    /// 
    ///     var aclRules = new[]
    ///     {
    ///         
    ///         {
    ///             { "username", osUser1.Username },
    ///             { "index", "index2" },
    ///             { "permission", "readwrite" },
    ///         },
    ///         
    ///         {
    ///             { "username", osUser1.Username },
    ///             { "index", "index3" },
    ///             { "permission", "read" },
    ///         },
    ///         
    ///         {
    ///             { "username", osUser1.Username },
    ///             { "index", "index5" },
    ///             { "permission", "deny" },
    ///         },
    ///         
    ///         {
    ///             { "username", osUser2.Username },
    ///             { "index", "index3" },
    ///             { "permission", "write" },
    ///         },
    ///         
    ///         {
    ///             { "username", osUser2.Username },
    ///             { "index", "index7" },
    ///             { "permission", "readwrite" },
    ///         },
    ///     };
    /// 
    ///     var osAclRule = new List&lt;Aiven.OpenSearchAclRule&gt;();
    ///     foreach (var range in aclRules.Select((value, i) =&gt; new { Key = i.ToString(), Value = pair.Value }).Select(pair =&gt; new { pair.Key, pair.Value }))
    ///     {
    ///         osAclRule.Add(new Aiven.OpenSearchAclRule($"os_acl_rule-{range.Key}", new()
    ///         {
    ///             Project = exampleProject.Project,
    ///             ServiceName = exampleOpensearch.ServiceName,
    ///             Username = range.Value.Username,
    ///             Index = range.Value.Index,
    ///             Permission = range.Value.Permission,
    ///         }));
    ///     }
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import aiven:index/openSearchAclRule:OpenSearchAclRule os_acl_rule PROJECT/SERVICE_NAME/USERNAME/INDEX
    /// ```
    /// </summary>
    [AivenResourceType("aiven:index/openSearchAclRule:OpenSearchAclRule")]
    public partial class OpenSearchAclRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The index pattern for this ACL rule. Maximum length: `249`. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("index")]
        public Output<string> Index { get; private set; } = null!;

        /// <summary>
        /// The permissions for this ACL rule. The possible values are `admin`, `deny`, `read`, `readwrite` and `write`.
        /// </summary>
        [Output("permission")]
        public Output<string> Permission { get; private set; } = null!;

        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// The username for the OpenSearch user this ACL rule applies to. Maximum length: `40`. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("username")]
        public Output<string> Username { get; private set; } = null!;


        /// <summary>
        /// Create a OpenSearchAclRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OpenSearchAclRule(string name, OpenSearchAclRuleArgs args, CustomResourceOptions? options = null)
            : base("aiven:index/openSearchAclRule:OpenSearchAclRule", name, args ?? new OpenSearchAclRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OpenSearchAclRule(string name, Input<string> id, OpenSearchAclRuleState? state = null, CustomResourceOptions? options = null)
            : base("aiven:index/openSearchAclRule:OpenSearchAclRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OpenSearchAclRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OpenSearchAclRule Get(string name, Input<string> id, OpenSearchAclRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new OpenSearchAclRule(name, id, state, options);
        }
    }

    public sealed class OpenSearchAclRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The index pattern for this ACL rule. Maximum length: `249`. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        /// <summary>
        /// The permissions for this ACL rule. The possible values are `admin`, `deny`, `read`, `readwrite` and `write`.
        /// </summary>
        [Input("permission", required: true)]
        public Input<string> Permission { get; set; } = null!;

        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// The username for the OpenSearch user this ACL rule applies to. Maximum length: `40`. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public OpenSearchAclRuleArgs()
        {
        }
        public static new OpenSearchAclRuleArgs Empty => new OpenSearchAclRuleArgs();
    }

    public sealed class OpenSearchAclRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The index pattern for this ACL rule. Maximum length: `249`. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("index")]
        public Input<string>? Index { get; set; }

        /// <summary>
        /// The permissions for this ACL rule. The possible values are `admin`, `deny`, `read`, `readwrite` and `write`.
        /// </summary>
        [Input("permission")]
        public Input<string>? Permission { get; set; }

        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// The username for the OpenSearch user this ACL rule applies to. Maximum length: `40`. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public OpenSearchAclRuleState()
        {
        }
        public static new OpenSearchAclRuleState Empty => new OpenSearchAclRuleState();
    }
}
