// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetServiceUser
    {
        /// <summary>
        /// The Service User data source provides information about the existing Aiven Service User.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myserviceuser = Aiven.GetServiceUser.Invoke(new()
        ///     {
        ///         Project = aiven_project.Myproject.Project,
        ///         ServiceName = aiven_pg.Mypg.Service_name,
        ///         Username = "&lt;USERNAME&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetServiceUserResult> InvokeAsync(GetServiceUserArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServiceUserResult>("aiven:index/getServiceUser:getServiceUser", args ?? new GetServiceUserArgs(), options.WithDefaults());

        /// <summary>
        /// The Service User data source provides information about the existing Aiven Service User.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myserviceuser = Aiven.GetServiceUser.Invoke(new()
        ///     {
        ///         Project = aiven_project.Myproject.Project,
        ///         ServiceName = aiven_pg.Mypg.Service_name,
        ///         Username = "&lt;USERNAME&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetServiceUserResult> Invoke(GetServiceUserInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceUserResult>("aiven:index/getServiceUser:getServiceUser", args ?? new GetServiceUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceUserArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        /// <summary>
        /// The actual name of the service user. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("username", required: true)]
        public string Username { get; set; } = null!;

        public GetServiceUserArgs()
        {
        }
        public static new GetServiceUserArgs Empty => new GetServiceUserArgs();
    }

    public sealed class GetServiceUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// The actual name of the service user. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public GetServiceUserInvokeArgs()
        {
        }
        public static new GetServiceUserInvokeArgs Empty => new GetServiceUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceUserResult
    {
        /// <summary>
        /// Access certificate for the user if applicable for the service in question
        /// </summary>
        public readonly string AccessCert;
        /// <summary>
        /// Access certificate key for the user if applicable for the service in question
        /// </summary>
        public readonly string AccessKey;
        /// <summary>
        /// Authentication details. The possible values are `caching_sha2_password` and `mysql_native_password`.
        /// </summary>
        public readonly string Authentication;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The password of the service user ( not applicable for all services ).
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// Postgres specific field, defines whether replication is allowed. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        public readonly bool PgAllowReplication;
        /// <summary>
        /// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        public readonly string Project;
        /// <summary>
        /// Redis specific field, defines command category rules. The field is required with`redis_acl_commands` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        public readonly ImmutableArray<string> RedisAclCategories;
        /// <summary>
        /// Redis specific field, defines the permitted pub/sub channel patterns. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        public readonly ImmutableArray<string> RedisAclChannels;
        /// <summary>
        /// Redis specific field, defines rules for individual commands. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        public readonly ImmutableArray<string> RedisAclCommands;
        /// <summary>
        /// Redis specific field, defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        public readonly ImmutableArray<string> RedisAclKeys;
        /// <summary>
        /// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        public readonly string ServiceName;
        /// <summary>
        /// Type of the user account. Tells wether the user is the primary account or a regular account.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The actual name of the service user. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        public readonly string Username;

        [OutputConstructor]
        private GetServiceUserResult(
            string accessCert,

            string accessKey,

            string authentication,

            string id,

            string password,

            bool pgAllowReplication,

            string project,

            ImmutableArray<string> redisAclCategories,

            ImmutableArray<string> redisAclChannels,

            ImmutableArray<string> redisAclCommands,

            ImmutableArray<string> redisAclKeys,

            string serviceName,

            string type,

            string username)
        {
            AccessCert = accessCert;
            AccessKey = accessKey;
            Authentication = authentication;
            Id = id;
            Password = password;
            PgAllowReplication = pgAllowReplication;
            Project = project;
            RedisAclCategories = redisAclCategories;
            RedisAclChannels = redisAclChannels;
            RedisAclCommands = redisAclCommands;
            RedisAclKeys = redisAclKeys;
            ServiceName = serviceName;
            Type = type;
            Username = username;
        }
    }
}
