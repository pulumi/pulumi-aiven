// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetAwsVpcPeeringConnection
    {
        /// <summary>
        /// The AWS VPC Peering Connection data source provides information about the existing Aiven VPC Peering Connection.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Aiven.GetAwsVpcPeeringConnection.Invoke(new()
        ///     {
        ///         VpcId = data.Aiven_project_vpc.Vpc.Id,
        ///         AwsAccountId = "XXXXX",
        ///         AwsVpcId = "XXXXX",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAwsVpcPeeringConnectionResult> InvokeAsync(GetAwsVpcPeeringConnectionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAwsVpcPeeringConnectionResult>("aiven:index/getAwsVpcPeeringConnection:getAwsVpcPeeringConnection", args ?? new GetAwsVpcPeeringConnectionArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS VPC Peering Connection data source provides information about the existing Aiven VPC Peering Connection.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Aiven.GetAwsVpcPeeringConnection.Invoke(new()
        ///     {
        ///         VpcId = data.Aiven_project_vpc.Vpc.Id,
        ///         AwsAccountId = "XXXXX",
        ///         AwsVpcId = "XXXXX",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAwsVpcPeeringConnectionResult> Invoke(GetAwsVpcPeeringConnectionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAwsVpcPeeringConnectionResult>("aiven:index/getAwsVpcPeeringConnection:getAwsVpcPeeringConnection", args ?? new GetAwsVpcPeeringConnectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAwsVpcPeeringConnectionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// AWS account ID. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("awsAccountId", required: true)]
        public string AwsAccountId { get; set; } = null!;

        /// <summary>
        /// AWS VPC ID. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("awsVpcId", required: true)]
        public string AwsVpcId { get; set; } = null!;

        /// <summary>
        /// AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("awsVpcRegion", required: true)]
        public string AwsVpcRegion { get; set; } = null!;

        /// <summary>
        /// The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("vpcId", required: true)]
        public string VpcId { get; set; } = null!;

        public GetAwsVpcPeeringConnectionArgs()
        {
        }
        public static new GetAwsVpcPeeringConnectionArgs Empty => new GetAwsVpcPeeringConnectionArgs();
    }

    public sealed class GetAwsVpcPeeringConnectionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// AWS account ID. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("awsAccountId", required: true)]
        public Input<string> AwsAccountId { get; set; } = null!;

        /// <summary>
        /// AWS VPC ID. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("awsVpcId", required: true)]
        public Input<string> AwsVpcId { get; set; } = null!;

        /// <summary>
        /// AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("awsVpcRegion", required: true)]
        public Input<string> AwsVpcRegion { get; set; } = null!;

        /// <summary>
        /// The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public GetAwsVpcPeeringConnectionInvokeArgs()
        {
        }
        public static new GetAwsVpcPeeringConnectionInvokeArgs Empty => new GetAwsVpcPeeringConnectionInvokeArgs();
    }


    [OutputType]
    public sealed class GetAwsVpcPeeringConnectionResult
    {
        /// <summary>
        /// AWS account ID. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        public readonly string AwsAccountId;
        /// <summary>
        /// AWS VPC ID. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        public readonly string AwsVpcId;
        /// <summary>
        /// AWS VPC peering connection ID
        /// </summary>
        public readonly string AwsVpcPeeringConnectionId;
        /// <summary>
        /// AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        public readonly string AwsVpcRegion;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// State of the peering connection
        /// </summary>
        public readonly string State;
        /// <summary>
        /// State-specific help or error information
        /// </summary>
        public readonly ImmutableDictionary<string, object> StateInfo;
        /// <summary>
        /// The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        public readonly string VpcId;

        [OutputConstructor]
        private GetAwsVpcPeeringConnectionResult(
            string awsAccountId,

            string awsVpcId,

            string awsVpcPeeringConnectionId,

            string awsVpcRegion,

            string id,

            string state,

            ImmutableDictionary<string, object> stateInfo,

            string vpcId)
        {
            AwsAccountId = awsAccountId;
            AwsVpcId = awsVpcId;
            AwsVpcPeeringConnectionId = awsVpcPeeringConnectionId;
            AwsVpcRegion = awsVpcRegion;
            Id = id;
            State = state;
            StateInfo = stateInfo;
            VpcId = vpcId;
        }
    }
}
