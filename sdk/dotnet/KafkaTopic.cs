// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    /// <summary>
    /// The Kafka Topic resource allows the creation and management of Aiven Kafka Topics.
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import aiven:index/kafkaTopic:KafkaTopic mytesttopic project/service_name/topic_name
    /// ```
    /// </summary>
    [AivenResourceType("aiven:index/kafkaTopic:KafkaTopic")]
    public partial class KafkaTopic : Pulumi.CustomResource
    {
        /// <summary>
        /// Kafka topic configuration
        /// </summary>
        [Output("config")]
        public Output<Outputs.KafkaTopicConfig?> Config { get; private set; } = null!;

        /// <summary>
        /// The number of partitions to create in the topic.
        /// </summary>
        [Output("partitions")]
        public Output<int> Partitions { get; private set; } = null!;

        /// <summary>
        /// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The replication factor for the topic.
        /// </summary>
        [Output("replication")]
        public Output<int> Replication { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// Kafka Topic tag.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.KafkaTopicTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// It is a Terraform client-side deletion protection, which prevents a Kafka topic from being deleted. It is recommended to
        /// enable this for any production Kafka topic containing critical data.
        /// </summary>
        [Output("terminationProtection")]
        public Output<bool?> TerminationProtection { get; private set; } = null!;

        /// <summary>
        /// The name of the topic. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Output("topicName")]
        public Output<string> TopicName { get; private set; } = null!;


        /// <summary>
        /// Create a KafkaTopic resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KafkaTopic(string name, KafkaTopicArgs args, CustomResourceOptions? options = null)
            : base("aiven:index/kafkaTopic:KafkaTopic", name, args ?? new KafkaTopicArgs(), MakeResourceOptions(options, ""))
        {
        }

        private KafkaTopic(string name, Input<string> id, KafkaTopicState? state = null, CustomResourceOptions? options = null)
            : base("aiven:index/kafkaTopic:KafkaTopic", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing KafkaTopic resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static KafkaTopic Get(string name, Input<string> id, KafkaTopicState? state = null, CustomResourceOptions? options = null)
        {
            return new KafkaTopic(name, id, state, options);
        }
    }

    public sealed class KafkaTopicArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Kafka topic configuration
        /// </summary>
        [Input("config")]
        public Input<Inputs.KafkaTopicConfigArgs>? Config { get; set; }

        /// <summary>
        /// The number of partitions to create in the topic.
        /// </summary>
        [Input("partitions", required: true)]
        public Input<int> Partitions { get; set; } = null!;

        /// <summary>
        /// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// The replication factor for the topic.
        /// </summary>
        [Input("replication", required: true)]
        public Input<int> Replication { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.KafkaTopicTagArgs>? _tags;

        /// <summary>
        /// Kafka Topic tag.
        /// </summary>
        public InputList<Inputs.KafkaTopicTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.KafkaTopicTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// It is a Terraform client-side deletion protection, which prevents a Kafka topic from being deleted. It is recommended to
        /// enable this for any production Kafka topic containing critical data.
        /// </summary>
        [Input("terminationProtection")]
        public Input<bool>? TerminationProtection { get; set; }

        /// <summary>
        /// The name of the topic. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("topicName", required: true)]
        public Input<string> TopicName { get; set; } = null!;

        public KafkaTopicArgs()
        {
        }
    }

    public sealed class KafkaTopicState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Kafka topic configuration
        /// </summary>
        [Input("config")]
        public Input<Inputs.KafkaTopicConfigGetArgs>? Config { get; set; }

        /// <summary>
        /// The number of partitions to create in the topic.
        /// </summary>
        [Input("partitions")]
        public Input<int>? Partitions { get; set; }

        /// <summary>
        /// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The replication factor for the topic.
        /// </summary>
        [Input("replication")]
        public Input<int>? Replication { get; set; }

        /// <summary>
        /// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        [Input("tags")]
        private InputList<Inputs.KafkaTopicTagGetArgs>? _tags;

        /// <summary>
        /// Kafka Topic tag.
        /// </summary>
        public InputList<Inputs.KafkaTopicTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.KafkaTopicTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// It is a Terraform client-side deletion protection, which prevents a Kafka topic from being deleted. It is recommended to
        /// enable this for any production Kafka topic containing critical data.
        /// </summary>
        [Input("terminationProtection")]
        public Input<bool>? TerminationProtection { get; set; }

        /// <summary>
        /// The name of the topic. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("topicName")]
        public Input<string>? TopicName { get; set; }

        public KafkaTopicState()
        {
        }
    }
}
