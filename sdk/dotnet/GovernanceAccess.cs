// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aiven = Pulumi.Aiven;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleAccess = new Aiven.GovernanceAccess("example_access", new()
    ///     {
    ///         OrganizationId = main.Id,
    ///         AccessName = "example-topic-access",
    ///         AccessType = "KAFKA",
    ///         AccessData = new Aiven.Inputs.GovernanceAccessAccessDataArgs
    ///         {
    ///             Project = exampleProject.Project,
    ///             ServiceName = exampleKafka.ServiceName,
    ///             Acls = new[]
    ///             {
    ///                 new Aiven.Inputs.GovernanceAccessAccessDataAclArgs
    ///                 {
    ///                     ResourceName = "example-topic",
    ///                     ResourceType = "Topic",
    ///                     Operation = "Read",
    ///                     PermissionType = "ALLOW",
    ///                     Host = "*",
    ///                 },
    ///             },
    ///         },
    ///         OwnerUserGroupId = example.GroupId,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [AivenResourceType("aiven:index/governanceAccess:GovernanceAccess")]
    public partial class GovernanceAccess : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Required property. access type specific data. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("accessData")]
        public Output<Outputs.GovernanceAccessAccessData?> AccessData { get; private set; } = null!;

        /// <summary>
        /// Label to describe the access. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("accessName")]
        public Output<string> AccessName { get; private set; } = null!;

        /// <summary>
        /// An enumeration. The possible value is `KAFKA`. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("accessType")]
        public Output<string> AccessType { get; private set; } = null!;

        /// <summary>
        /// ID of an organization. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// The ID of the group that will own the access. Maximum length: `36`. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("ownerUserGroupId")]
        public Output<string?> OwnerUserGroupId { get; private set; } = null!;

        /// <summary>
        /// The ID of the access.
        /// </summary>
        [Output("susbcriptionId")]
        public Output<string> SusbcriptionId { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.GovernanceAccessTimeouts?> Timeouts { get; private set; } = null!;


        /// <summary>
        /// Create a GovernanceAccess resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GovernanceAccess(string name, GovernanceAccessArgs args, CustomResourceOptions? options = null)
            : base("aiven:index/governanceAccess:GovernanceAccess", name, args ?? new GovernanceAccessArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GovernanceAccess(string name, Input<string> id, GovernanceAccessState? state = null, CustomResourceOptions? options = null)
            : base("aiven:index/governanceAccess:GovernanceAccess", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GovernanceAccess resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GovernanceAccess Get(string name, Input<string> id, GovernanceAccessState? state = null, CustomResourceOptions? options = null)
        {
            return new GovernanceAccess(name, id, state, options);
        }
    }

    public sealed class GovernanceAccessArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Required property. access type specific data. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("accessData")]
        public Input<Inputs.GovernanceAccessAccessDataArgs>? AccessData { get; set; }

        /// <summary>
        /// Label to describe the access. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("accessName", required: true)]
        public Input<string> AccessName { get; set; } = null!;

        /// <summary>
        /// An enumeration. The possible value is `KAFKA`. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("accessType", required: true)]
        public Input<string> AccessType { get; set; } = null!;

        /// <summary>
        /// ID of an organization. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        /// <summary>
        /// The ID of the group that will own the access. Maximum length: `36`. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("ownerUserGroupId")]
        public Input<string>? OwnerUserGroupId { get; set; }

        [Input("timeouts")]
        public Input<Inputs.GovernanceAccessTimeoutsArgs>? Timeouts { get; set; }

        public GovernanceAccessArgs()
        {
        }
        public static new GovernanceAccessArgs Empty => new GovernanceAccessArgs();
    }

    public sealed class GovernanceAccessState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Required property. access type specific data. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("accessData")]
        public Input<Inputs.GovernanceAccessAccessDataGetArgs>? AccessData { get; set; }

        /// <summary>
        /// Label to describe the access. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("accessName")]
        public Input<string>? AccessName { get; set; }

        /// <summary>
        /// An enumeration. The possible value is `KAFKA`. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("accessType")]
        public Input<string>? AccessType { get; set; }

        /// <summary>
        /// ID of an organization. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        /// <summary>
        /// The ID of the group that will own the access. Maximum length: `36`. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("ownerUserGroupId")]
        public Input<string>? OwnerUserGroupId { get; set; }

        /// <summary>
        /// The ID of the access.
        /// </summary>
        [Input("susbcriptionId")]
        public Input<string>? SusbcriptionId { get; set; }

        [Input("timeouts")]
        public Input<Inputs.GovernanceAccessTimeoutsGetArgs>? Timeouts { get; set; }

        public GovernanceAccessState()
        {
        }
        public static new GovernanceAccessState Empty => new GovernanceAccessState();
    }
}
