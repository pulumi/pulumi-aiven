// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetOrganizationBillingGroup
    {
        /// <summary>
        /// Gets information about a billing group.
        /// 
        /// **This resource is in the beta stage and may change without notice.** Set
        /// the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
        /// </summary>
        public static Task<GetOrganizationBillingGroupResult> InvokeAsync(GetOrganizationBillingGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationBillingGroupResult>("aiven:index/getOrganizationBillingGroup:getOrganizationBillingGroup", args ?? new GetOrganizationBillingGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about a billing group.
        /// 
        /// **This resource is in the beta stage and may change without notice.** Set
        /// the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
        /// </summary>
        public static Output<GetOrganizationBillingGroupResult> Invoke(GetOrganizationBillingGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationBillingGroupResult>("aiven:index/getOrganizationBillingGroup:getOrganizationBillingGroup", args ?? new GetOrganizationBillingGroupInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about a billing group.
        /// 
        /// **This resource is in the beta stage and may change without notice.** Set
        /// the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
        /// </summary>
        public static Output<GetOrganizationBillingGroupResult> Invoke(GetOrganizationBillingGroupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationBillingGroupResult>("aiven:index/getOrganizationBillingGroup:getOrganizationBillingGroup", args ?? new GetOrganizationBillingGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrganizationBillingGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Billing group ID.
        /// </summary>
        [Input("billingGroupId", required: true)]
        public string BillingGroupId { get; set; } = null!;

        /// <summary>
        /// ID of an organization.
        /// </summary>
        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        [Input("timeouts")]
        public Inputs.GetOrganizationBillingGroupTimeoutsArgs? Timeouts { get; set; }

        public GetOrganizationBillingGroupArgs()
        {
        }
        public static new GetOrganizationBillingGroupArgs Empty => new GetOrganizationBillingGroupArgs();
    }

    public sealed class GetOrganizationBillingGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Billing group ID.
        /// </summary>
        [Input("billingGroupId", required: true)]
        public Input<string> BillingGroupId { get; set; } = null!;

        /// <summary>
        /// ID of an organization.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        [Input("timeouts")]
        public Input<Inputs.GetOrganizationBillingGroupTimeoutsInputArgs>? Timeouts { get; set; }

        public GetOrganizationBillingGroupInvokeArgs()
        {
        }
        public static new GetOrganizationBillingGroupInvokeArgs Empty => new GetOrganizationBillingGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrganizationBillingGroupResult
    {
        /// <summary>
        /// Billing address ID.
        /// </summary>
        public readonly string BillingAddressId;
        /// <summary>
        /// List of billing contact emails.
        /// </summary>
        public readonly ImmutableArray<string> BillingContactEmails;
        /// <summary>
        /// List of billing contact emails.
        /// </summary>
        public readonly ImmutableArray<string> BillingEmails;
        /// <summary>
        /// Billing group ID.
        /// </summary>
        public readonly string BillingGroupId;
        /// <summary>
        /// Billing Group Name.
        /// </summary>
        public readonly string BillingGroupName;
        /// <summary>
        /// Acceptable currencies for a billing group. The possible values are `AUD`, `CAD`, `CHF`, `DKK`, `EUR`, `GBP`, `JPY`, `NOK`, `NZD`, `SEK`, `SGD` and `USD`.
        /// </summary>
        public readonly string Currency;
        /// <summary>
        /// Extra billing text.
        /// </summary>
        public readonly string CustomInvoiceText;
        /// <summary>
        /// Resource ID, a composite of `organization_id` and `billing_group_id` IDs.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// ID of an organization.
        /// </summary>
        public readonly string OrganizationId;
        /// <summary>
        /// Payment method ID.
        /// </summary>
        public readonly string PaymentMethodId;
        /// <summary>
        /// Shipping address ID.
        /// </summary>
        public readonly string ShippingAddressId;
        public readonly Outputs.GetOrganizationBillingGroupTimeoutsResult? Timeouts;
        /// <summary>
        /// VAT ID.
        /// </summary>
        public readonly string VatId;

        [OutputConstructor]
        private GetOrganizationBillingGroupResult(
            string billingAddressId,

            ImmutableArray<string> billingContactEmails,

            ImmutableArray<string> billingEmails,

            string billingGroupId,

            string billingGroupName,

            string currency,

            string customInvoiceText,

            string id,

            string organizationId,

            string paymentMethodId,

            string shippingAddressId,

            Outputs.GetOrganizationBillingGroupTimeoutsResult? timeouts,

            string vatId)
        {
            BillingAddressId = billingAddressId;
            BillingContactEmails = billingContactEmails;
            BillingEmails = billingEmails;
            BillingGroupId = billingGroupId;
            BillingGroupName = billingGroupName;
            Currency = currency;
            CustomInvoiceText = customInvoiceText;
            Id = id;
            OrganizationId = organizationId;
            PaymentMethodId = paymentMethodId;
            ShippingAddressId = shippingAddressId;
            Timeouts = timeouts;
            VatId = vatId;
        }
    }
}
