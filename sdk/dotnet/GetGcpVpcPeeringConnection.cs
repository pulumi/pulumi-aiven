// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetGcpVpcPeeringConnection
    {
        /// <summary>
        /// The GCP VPC Peering Connection data source provides information about the existing Aiven VPC Peering Connection.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var foo = Output.Create(Aiven.GetGcpVpcPeeringConnection.InvokeAsync(new Aiven.GetGcpVpcPeeringConnectionArgs
        ///         {
        ///             VpcId = data.Aiven_project_vpc.Vpc.Id,
        ///             GcpProjectId = "xxxx",
        ///             PeerVpc = "xxxx",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetGcpVpcPeeringConnectionResult> InvokeAsync(GetGcpVpcPeeringConnectionArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetGcpVpcPeeringConnectionResult>("aiven:index/getGcpVpcPeeringConnection:getGcpVpcPeeringConnection", args ?? new GetGcpVpcPeeringConnectionArgs(), options.WithDefaults());

        /// <summary>
        /// The GCP VPC Peering Connection data source provides information about the existing Aiven VPC Peering Connection.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var foo = Output.Create(Aiven.GetGcpVpcPeeringConnection.InvokeAsync(new Aiven.GetGcpVpcPeeringConnectionArgs
        ///         {
        ///             VpcId = data.Aiven_project_vpc.Vpc.Id,
        ///             GcpProjectId = "xxxx",
        ///             PeerVpc = "xxxx",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetGcpVpcPeeringConnectionResult> Invoke(GetGcpVpcPeeringConnectionInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetGcpVpcPeeringConnectionResult>("aiven:index/getGcpVpcPeeringConnection:getGcpVpcPeeringConnection", args ?? new GetGcpVpcPeeringConnectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGcpVpcPeeringConnectionArgs : Pulumi.InvokeArgs
    {
        [Input("gcpProjectId", required: true)]
        public string GcpProjectId { get; set; } = null!;

        [Input("peerVpc", required: true)]
        public string PeerVpc { get; set; } = null!;

        [Input("vpcId", required: true)]
        public string VpcId { get; set; } = null!;

        public GetGcpVpcPeeringConnectionArgs()
        {
        }
    }

    public sealed class GetGcpVpcPeeringConnectionInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("gcpProjectId", required: true)]
        public Input<string> GcpProjectId { get; set; } = null!;

        [Input("peerVpc", required: true)]
        public Input<string> PeerVpc { get; set; } = null!;

        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public GetGcpVpcPeeringConnectionInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetGcpVpcPeeringConnectionResult
    {
        public readonly string GcpProjectId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string PeerVpc;
        public readonly string State;
        public readonly ImmutableDictionary<string, object> StateInfo;
        public readonly string VpcId;

        [OutputConstructor]
        private GetGcpVpcPeeringConnectionResult(
            string gcpProjectId,

            string id,

            string peerVpc,

            string state,

            ImmutableDictionary<string, object> stateInfo,

            string vpcId)
        {
            GcpProjectId = gcpProjectId;
            Id = id;
            PeerVpc = peerVpc;
            State = state;
            StateInfo = stateInfo;
            VpcId = vpcId;
        }
    }
}
