// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetElasticSearchAcl
    {
        public static Task<GetElasticSearchAclResult> InvokeAsync(GetElasticSearchAclArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetElasticSearchAclResult>("aiven:index/getElasticSearchAcl:getElasticSearchAcl", args ?? new GetElasticSearchAclArgs(), options.WithVersion());
    }


    public sealed class GetElasticSearchAclArgs : Pulumi.InvokeArgs
    {
        [Input("acls")]
        private List<Inputs.GetElasticSearchAclAclArgs>? _acls;
        public List<Inputs.GetElasticSearchAclAclArgs> Acls
        {
            get => _acls ?? (_acls = new List<Inputs.GetElasticSearchAclAclArgs>());
            set => _acls = value;
        }

        [Input("enabled")]
        public bool? Enabled { get; set; }

        [Input("extendedAcl")]
        public bool? ExtendedAcl { get; set; }

        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetElasticSearchAclArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetElasticSearchAclResult
    {
        public readonly ImmutableArray<Outputs.GetElasticSearchAclAclResult> Acls;
        public readonly bool? Enabled;
        public readonly bool? ExtendedAcl;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Project;
        public readonly string ServiceName;

        [OutputConstructor]
        private GetElasticSearchAclResult(
            ImmutableArray<Outputs.GetElasticSearchAclAclResult> acls,

            bool? enabled,

            bool? extendedAcl,

            string id,

            string project,

            string serviceName)
        {
            Acls = acls;
            Enabled = enabled;
            ExtendedAcl = extendedAcl;
            Id = id;
            Project = project;
            ServiceName = serviceName;
        }
    }
}
