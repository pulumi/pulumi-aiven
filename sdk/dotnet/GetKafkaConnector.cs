// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetKafkaConnector
    {
        /// <summary>
        /// ## # Kafka connector Data Source
        /// 
        /// The Kafka connector data source provides information about the existing Aiven Kafka connector.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var kafka_es_con1 = Output.Create(Aiven.GetKafkaConnector.InvokeAsync(new Aiven.GetKafkaConnectorArgs
        ///         {
        ///             Project = aiven_project.Kafka_con_project1.Project,
        ///             ServiceName = aiven_service.Kafka_service1.Service_name,
        ///             ConnectorName = "kafka-es-con1",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// 
        /// 
        /// * `project` and `service_name`- (Required) define the project and service the Kafka Connectors belongs to. 
        /// They should be defined using reference as shown above to set up dependencies correctly.
        /// 
        /// * `connector_name`- (Required) is the Kafka connector name.
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetKafkaConnectorResult> InvokeAsync(GetKafkaConnectorArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetKafkaConnectorResult>("aiven:index/getKafkaConnector:getKafkaConnector", args ?? new GetKafkaConnectorArgs(), options.WithVersion());
    }


    public sealed class GetKafkaConnectorArgs : Pulumi.InvokeArgs
    {
        [Input("config")]
        private Dictionary<string, string>? _config;
        public Dictionary<string, string> Config
        {
            get => _config ?? (_config = new Dictionary<string, string>());
            set => _config = value;
        }

        [Input("connectorName", required: true)]
        public string ConnectorName { get; set; } = null!;

        /// <summary>
        /// Kafka connector author.
        /// </summary>
        [Input("pluginAuthor")]
        public string? PluginAuthor { get; set; }

        /// <summary>
        /// Kafka connector Java class.
        /// </summary>
        [Input("pluginClass")]
        public string? PluginClass { get; set; }

        /// <summary>
        /// Kafka connector documentation URL.
        /// </summary>
        [Input("pluginDocUrl")]
        public string? PluginDocUrl { get; set; }

        /// <summary>
        /// Kafka connector title.
        /// </summary>
        [Input("pluginTitle")]
        public string? PluginTitle { get; set; }

        /// <summary>
        /// Kafka connector type.
        /// </summary>
        [Input("pluginType")]
        public string? PluginType { get; set; }

        /// <summary>
        /// Kafka connector version.
        /// </summary>
        [Input("pluginVersion")]
        public string? PluginVersion { get; set; }

        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        [Input("tasks")]
        private List<Inputs.GetKafkaConnectorTaskArgs>? _tasks;

        /// <summary>
        /// List of tasks of a connector, each element contains `connector` 
        /// (Related connector name) and `task` (Task id / number).
        /// </summary>
        public List<Inputs.GetKafkaConnectorTaskArgs> Tasks
        {
            get => _tasks ?? (_tasks = new List<Inputs.GetKafkaConnectorTaskArgs>());
            set => _tasks = value;
        }

        public GetKafkaConnectorArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetKafkaConnectorResult
    {
        public readonly ImmutableDictionary<string, string>? Config;
        public readonly string ConnectorName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Kafka connector author.
        /// </summary>
        public readonly string PluginAuthor;
        /// <summary>
        /// Kafka connector Java class.
        /// </summary>
        public readonly string PluginClass;
        /// <summary>
        /// Kafka connector documentation URL.
        /// </summary>
        public readonly string PluginDocUrl;
        /// <summary>
        /// Kafka connector title.
        /// </summary>
        public readonly string PluginTitle;
        /// <summary>
        /// Kafka connector type.
        /// </summary>
        public readonly string PluginType;
        /// <summary>
        /// Kafka connector version.
        /// </summary>
        public readonly string PluginVersion;
        public readonly string Project;
        public readonly string ServiceName;
        /// <summary>
        /// List of tasks of a connector, each element contains `connector` 
        /// (Related connector name) and `task` (Task id / number).
        /// </summary>
        public readonly ImmutableArray<Outputs.GetKafkaConnectorTaskResult> Tasks;

        [OutputConstructor]
        private GetKafkaConnectorResult(
            ImmutableDictionary<string, string>? config,

            string connectorName,

            string id,

            string pluginAuthor,

            string pluginClass,

            string pluginDocUrl,

            string pluginTitle,

            string pluginType,

            string pluginVersion,

            string project,

            string serviceName,

            ImmutableArray<Outputs.GetKafkaConnectorTaskResult> tasks)
        {
            Config = config;
            ConnectorName = connectorName;
            Id = id;
            PluginAuthor = pluginAuthor;
            PluginClass = pluginClass;
            PluginDocUrl = pluginDocUrl;
            PluginTitle = pluginTitle;
            PluginType = pluginType;
            PluginVersion = pluginVersion;
            Project = project;
            ServiceName = serviceName;
            Tasks = tasks;
        }
    }
}
