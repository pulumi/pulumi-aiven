// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetKafkaConnector
    {
        /// <summary>
        /// The Kafka connector data source provides information about the existing Aiven Kafka connector.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var kafka_es_con1 = Output.Create(Aiven.GetKafkaConnector.InvokeAsync(new Aiven.GetKafkaConnectorArgs
        ///         {
        ///             Project = aiven_project.Kafka_con_project1.Project,
        ///             ServiceName = aiven_service.Kafka_service1.Service_name,
        ///             ConnectorName = "kafka-es-con1",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetKafkaConnectorResult> InvokeAsync(GetKafkaConnectorArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetKafkaConnectorResult>("aiven:index/getKafkaConnector:getKafkaConnector", args ?? new GetKafkaConnectorArgs(), options.WithDefaults());

        /// <summary>
        /// The Kafka connector data source provides information about the existing Aiven Kafka connector.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var kafka_es_con1 = Output.Create(Aiven.GetKafkaConnector.InvokeAsync(new Aiven.GetKafkaConnectorArgs
        ///         {
        ///             Project = aiven_project.Kafka_con_project1.Project,
        ///             ServiceName = aiven_service.Kafka_service1.Service_name,
        ///             ConnectorName = "kafka-es-con1",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetKafkaConnectorResult> Invoke(GetKafkaConnectorInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetKafkaConnectorResult>("aiven:index/getKafkaConnector:getKafkaConnector", args ?? new GetKafkaConnectorInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKafkaConnectorArgs : Pulumi.InvokeArgs
    {
        [Input("connectorName", required: true)]
        public string ConnectorName { get; set; } = null!;

        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetKafkaConnectorArgs()
        {
        }
    }

    public sealed class GetKafkaConnectorInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("connectorName", required: true)]
        public Input<string> ConnectorName { get; set; } = null!;

        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public GetKafkaConnectorInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetKafkaConnectorResult
    {
        public readonly ImmutableDictionary<string, string> Config;
        public readonly string ConnectorName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string PluginAuthor;
        public readonly string PluginClass;
        public readonly string PluginDocUrl;
        public readonly string PluginTitle;
        public readonly string PluginType;
        public readonly string PluginVersion;
        public readonly string Project;
        public readonly string ServiceName;
        public readonly ImmutableArray<Outputs.GetKafkaConnectorTaskResult> Tasks;

        [OutputConstructor]
        private GetKafkaConnectorResult(
            ImmutableDictionary<string, string> config,

            string connectorName,

            string id,

            string pluginAuthor,

            string pluginClass,

            string pluginDocUrl,

            string pluginTitle,

            string pluginType,

            string pluginVersion,

            string project,

            string serviceName,

            ImmutableArray<Outputs.GetKafkaConnectorTaskResult> tasks)
        {
            Config = config;
            ConnectorName = connectorName;
            Id = id;
            PluginAuthor = pluginAuthor;
            PluginClass = pluginClass;
            PluginDocUrl = pluginDocUrl;
            PluginTitle = pluginTitle;
            PluginType = pluginType;
            PluginVersion = pluginVersion;
            Project = project;
            ServiceName = serviceName;
            Tasks = tasks;
        }
    }
}
