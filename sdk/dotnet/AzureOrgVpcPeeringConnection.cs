// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    /// <summary>
    /// Creates and manages an Azure VPC peering connection with an Aiven VPC.
    /// 
    /// **This resource is in the beta stage and may change without notice.** Set
    /// the `PROVIDER_AIVEN_ENABLE_BETA` environment variable to use the resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aiven = Pulumi.Aiven;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleVpc = new Aiven.OrganizationVpc("example_vpc", new()
    ///     {
    ///         OrganizationId = example.Id,
    ///         CloudName = "azure-germany-westcentral",
    ///         NetworkCidr = "10.0.0.0/24",
    ///     });
    /// 
    ///     var examplePeering = new Aiven.AzureOrgVpcPeeringConnection("example_peering", new()
    ///     {
    ///         OrganizationId = exampleVpc.OrganizationId,
    ///         OrganizationVpcId = exampleVpc.OrganizationVpcId,
    ///         AzureSubscriptionId = "12345678-1234-1234-1234-123456789012",
    ///         VnetName = "my-vnet",
    ///         PeerResourceGroup = "my-resource-group",
    ///         PeerAzureAppId = "87654321-4321-4321-4321-210987654321",
    ///         PeerAzureTenantId = "11111111-2222-3333-4444-555555555555",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import aiven:index/azureOrgVpcPeeringConnection:AzureOrgVpcPeeringConnection example ORGANIZATION_ID/ORGANIZATION_VPC_ID/AZURE_SUBSCRIPTION_ID/VNET_NAME/RESOURCE_GROUP
    /// ```
    /// </summary>
    [AivenResourceType("aiven:index/azureOrgVpcPeeringConnection:AzureOrgVpcPeeringConnection")]
    public partial class AzureOrgVpcPeeringConnection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("azureSubscriptionId")]
        public Output<string> AzureSubscriptionId { get; private set; } = null!;

        /// <summary>
        /// Identifier of the organization.
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// Identifier of the organization VPC.
        /// </summary>
        [Output("organizationVpcId")]
        public Output<string> OrganizationVpcId { get; private set; } = null!;

        /// <summary>
        /// The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("peerAzureAppId")]
        public Output<string> PeerAzureAppId { get; private set; } = null!;

        /// <summary>
        /// The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("peerAzureTenantId")]
        public Output<string> PeerAzureTenantId { get; private set; } = null!;

        /// <summary>
        /// The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("peerResourceGroup")]
        public Output<string> PeerResourceGroup { get; private set; } = null!;

        /// <summary>
        /// The ID of the cloud provider for the peering connection.
        /// </summary>
        [Output("peeringConnectionId")]
        public Output<string> PeeringConnectionId { get; private set; } = null!;

        /// <summary>
        /// State of the peering connection
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The name of the Azure VNet. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("vnetName")]
        public Output<string> VnetName { get; private set; } = null!;


        /// <summary>
        /// Create a AzureOrgVpcPeeringConnection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AzureOrgVpcPeeringConnection(string name, AzureOrgVpcPeeringConnectionArgs args, CustomResourceOptions? options = null)
            : base("aiven:index/azureOrgVpcPeeringConnection:AzureOrgVpcPeeringConnection", name, args ?? new AzureOrgVpcPeeringConnectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AzureOrgVpcPeeringConnection(string name, Input<string> id, AzureOrgVpcPeeringConnectionState? state = null, CustomResourceOptions? options = null)
            : base("aiven:index/azureOrgVpcPeeringConnection:AzureOrgVpcPeeringConnection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AzureOrgVpcPeeringConnection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AzureOrgVpcPeeringConnection Get(string name, Input<string> id, AzureOrgVpcPeeringConnectionState? state = null, CustomResourceOptions? options = null)
        {
            return new AzureOrgVpcPeeringConnection(name, id, state, options);
        }
    }

    public sealed class AzureOrgVpcPeeringConnectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("azureSubscriptionId", required: true)]
        public Input<string> AzureSubscriptionId { get; set; } = null!;

        /// <summary>
        /// Identifier of the organization.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        /// <summary>
        /// Identifier of the organization VPC.
        /// </summary>
        [Input("organizationVpcId", required: true)]
        public Input<string> OrganizationVpcId { get; set; } = null!;

        /// <summary>
        /// The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("peerAzureAppId", required: true)]
        public Input<string> PeerAzureAppId { get; set; } = null!;

        /// <summary>
        /// The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("peerAzureTenantId", required: true)]
        public Input<string> PeerAzureTenantId { get; set; } = null!;

        /// <summary>
        /// The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("peerResourceGroup", required: true)]
        public Input<string> PeerResourceGroup { get; set; } = null!;

        /// <summary>
        /// The name of the Azure VNet. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("vnetName", required: true)]
        public Input<string> VnetName { get; set; } = null!;

        public AzureOrgVpcPeeringConnectionArgs()
        {
        }
        public static new AzureOrgVpcPeeringConnectionArgs Empty => new AzureOrgVpcPeeringConnectionArgs();
    }

    public sealed class AzureOrgVpcPeeringConnectionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Azure subscription in UUID4 format. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("azureSubscriptionId")]
        public Input<string>? AzureSubscriptionId { get; set; }

        /// <summary>
        /// Identifier of the organization.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        /// <summary>
        /// Identifier of the organization VPC.
        /// </summary>
        [Input("organizationVpcId")]
        public Input<string>? OrganizationVpcId { get; set; }

        /// <summary>
        /// The ID of the Azure app that is allowed to create a peering to the Azure Virtual Network (VNet) in UUID4 format. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("peerAzureAppId")]
        public Input<string>? PeerAzureAppId { get; set; }

        /// <summary>
        /// The Azure tenant ID in UUID4 format. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("peerAzureTenantId")]
        public Input<string>? PeerAzureTenantId { get; set; }

        /// <summary>
        /// The name of the Azure resource group associated with the VNet. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("peerResourceGroup")]
        public Input<string>? PeerResourceGroup { get; set; }

        /// <summary>
        /// The ID of the cloud provider for the peering connection.
        /// </summary>
        [Input("peeringConnectionId")]
        public Input<string>? PeeringConnectionId { get; set; }

        /// <summary>
        /// State of the peering connection
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The name of the Azure VNet. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("vnetName")]
        public Input<string>? VnetName { get; set; }

        public AzureOrgVpcPeeringConnectionState()
        {
        }
        public static new AzureOrgVpcPeeringConnectionState Empty => new AzureOrgVpcPeeringConnectionState();
    }
}
