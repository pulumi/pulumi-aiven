// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetClickhouseDatabase
    {
        /// <summary>
        /// The Clickhouse database data source provides information about the existing Aiven Clickhouse Database.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var clickhouseDb = Output.Create(Aiven.GetClickhouseDatabase.InvokeAsync(new Aiven.GetClickhouseDatabaseArgs
        ///         {
        ///             Project = aiven_clickhouse.Ch.Project,
        ///             ServiceName = aiven_clickhouse.Ch.Service_name,
        ///             Name = "my-ch-db",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetClickhouseDatabaseResult> InvokeAsync(GetClickhouseDatabaseArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetClickhouseDatabaseResult>("aiven:index/getClickhouseDatabase:getClickhouseDatabase", args ?? new GetClickhouseDatabaseArgs(), options.WithDefaults());

        /// <summary>
        /// The Clickhouse database data source provides information about the existing Aiven Clickhouse Database.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var clickhouseDb = Output.Create(Aiven.GetClickhouseDatabase.InvokeAsync(new Aiven.GetClickhouseDatabaseArgs
        ///         {
        ///             Project = aiven_clickhouse.Ch.Project,
        ///             ServiceName = aiven_clickhouse.Ch.Service_name,
        ///             Name = "my-ch-db",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetClickhouseDatabaseResult> Invoke(GetClickhouseDatabaseInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetClickhouseDatabaseResult>("aiven:index/getClickhouseDatabase:getClickhouseDatabase", args ?? new GetClickhouseDatabaseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClickhouseDatabaseArgs : Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetClickhouseDatabaseArgs()
        {
        }
    }

    public sealed class GetClickhouseDatabaseInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public GetClickhouseDatabaseInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetClickhouseDatabaseResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string Project;
        public readonly string ServiceName;
        public readonly bool TerminationProtection;

        [OutputConstructor]
        private GetClickhouseDatabaseResult(
            string id,

            string name,

            string project,

            string serviceName,

            bool terminationProtection)
        {
            Id = id;
            Name = name;
            Project = project;
            ServiceName = serviceName;
            TerminationProtection = terminationProtection;
        }
    }
}
