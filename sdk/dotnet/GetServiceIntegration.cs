// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetServiceIntegration
    {
        /// <summary>
        /// Gets information about an Aiven service integration.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleIntegration = Aiven.GetServiceIntegration.Invoke(new()
        ///     {
        ///         Project = exampleProject.Project,
        ///         DestinationServiceName = exampleThanos.ServiceName,
        ///         IntegrationType = "metrics",
        ///         SourceServiceName = exampleKafka.ServiceName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetServiceIntegrationResult> InvokeAsync(GetServiceIntegrationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServiceIntegrationResult>("aiven:index/getServiceIntegration:getServiceIntegration", args ?? new GetServiceIntegrationArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about an Aiven service integration.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleIntegration = Aiven.GetServiceIntegration.Invoke(new()
        ///     {
        ///         Project = exampleProject.Project,
        ///         DestinationServiceName = exampleThanos.ServiceName,
        ///         IntegrationType = "metrics",
        ///         SourceServiceName = exampleKafka.ServiceName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetServiceIntegrationResult> Invoke(GetServiceIntegrationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceIntegrationResult>("aiven:index/getServiceIntegration:getServiceIntegration", args ?? new GetServiceIntegrationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about an Aiven service integration.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleIntegration = Aiven.GetServiceIntegration.Invoke(new()
        ///     {
        ///         Project = exampleProject.Project,
        ///         DestinationServiceName = exampleThanos.ServiceName,
        ///         IntegrationType = "metrics",
        ///         SourceServiceName = exampleKafka.ServiceName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetServiceIntegrationResult> Invoke(GetServiceIntegrationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceIntegrationResult>("aiven:index/getServiceIntegration:getServiceIntegration", args ?? new GetServiceIntegrationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceIntegrationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Destination service for the integration.
        /// </summary>
        [Input("destinationServiceName", required: true)]
        public string DestinationServiceName { get; set; } = null!;

        /// <summary>
        /// Type of the service integration. The possible values are `alertmanager`, `autoscaler`, `caching`, `cassandra_cross_service_cluster`, `clickhouse_credentials`, `clickhouse_kafka`, `clickhouse_postgresql`, `dashboard`, `datadog`, `datasource`, `disaster_recovery`, `external_aws_cloudwatch_logs`, `external_aws_cloudwatch_metrics`, `external_elasticsearch_logs`, `external_google_cloud_logging`, `external_opensearch_logs`, `flink`, `flink_external_bigquery`, `flink_external_kafka`, `flink_external_postgresql`, `internal_connectivity`, `jolokia`, `kafka_connect`, `kafka_connect_postgresql`, `kafka_logs`, `kafka_mirrormaker`, `logs`, `m3aggregator`, `m3coordinator`, `metrics`, `opensearch_cross_cluster_replication`, `opensearch_cross_cluster_search`, `prometheus`, `read_replica`, `rsyslog`, `schema_registry_proxy`, `stresstester`, `thanos_distributed_query`, `thanos_migrate`, `thanoscompactor`, `thanosquery`, `thanosruler`, `thanosstore`, `vector` and `vmalert`.
        /// </summary>
        [Input("integrationType", required: true)]
        public string IntegrationType { get; set; } = null!;

        /// <summary>
        /// Project the integration belongs to.
        /// </summary>
        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        /// <summary>
        /// Source service for the integration (if any)
        /// </summary>
        [Input("sourceServiceName", required: true)]
        public string SourceServiceName { get; set; } = null!;

        public GetServiceIntegrationArgs()
        {
        }
        public static new GetServiceIntegrationArgs Empty => new GetServiceIntegrationArgs();
    }

    public sealed class GetServiceIntegrationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Destination service for the integration.
        /// </summary>
        [Input("destinationServiceName", required: true)]
        public Input<string> DestinationServiceName { get; set; } = null!;

        /// <summary>
        /// Type of the service integration. The possible values are `alertmanager`, `autoscaler`, `caching`, `cassandra_cross_service_cluster`, `clickhouse_credentials`, `clickhouse_kafka`, `clickhouse_postgresql`, `dashboard`, `datadog`, `datasource`, `disaster_recovery`, `external_aws_cloudwatch_logs`, `external_aws_cloudwatch_metrics`, `external_elasticsearch_logs`, `external_google_cloud_logging`, `external_opensearch_logs`, `flink`, `flink_external_bigquery`, `flink_external_kafka`, `flink_external_postgresql`, `internal_connectivity`, `jolokia`, `kafka_connect`, `kafka_connect_postgresql`, `kafka_logs`, `kafka_mirrormaker`, `logs`, `m3aggregator`, `m3coordinator`, `metrics`, `opensearch_cross_cluster_replication`, `opensearch_cross_cluster_search`, `prometheus`, `read_replica`, `rsyslog`, `schema_registry_proxy`, `stresstester`, `thanos_distributed_query`, `thanos_migrate`, `thanoscompactor`, `thanosquery`, `thanosruler`, `thanosstore`, `vector` and `vmalert`.
        /// </summary>
        [Input("integrationType", required: true)]
        public Input<string> IntegrationType { get; set; } = null!;

        /// <summary>
        /// Project the integration belongs to.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// Source service for the integration (if any)
        /// </summary>
        [Input("sourceServiceName", required: true)]
        public Input<string> SourceServiceName { get; set; } = null!;

        public GetServiceIntegrationInvokeArgs()
        {
        }
        public static new GetServiceIntegrationInvokeArgs Empty => new GetServiceIntegrationInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceIntegrationResult
    {
        /// <summary>
        /// ClickhouseKafka user configurable settings. **Warning:** There's no way to reset advanced configuration options to default. Options that you add cannot be removed later
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceIntegrationClickhouseKafkaUserConfigResult> ClickhouseKafkaUserConfigs;
        /// <summary>
        /// ClickhousePostgresql user configurable settings. **Warning:** There's no way to reset advanced configuration options to default. Options that you add cannot be removed later
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceIntegrationClickhousePostgresqlUserConfigResult> ClickhousePostgresqlUserConfigs;
        /// <summary>
        /// Datadog user configurable settings. **Warning:** There's no way to reset advanced configuration options to default. Options that you add cannot be removed later
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceIntegrationDatadogUserConfigResult> DatadogUserConfigs;
        /// <summary>
        /// Destination endpoint for the integration.
        /// </summary>
        public readonly string DestinationEndpointId;
        /// <summary>
        /// Destination service for the integration.
        /// </summary>
        public readonly string DestinationServiceName;
        /// <summary>
        /// Destination service project name
        /// </summary>
        public readonly string DestinationServiceProject;
        /// <summary>
        /// ExternalAwsCloudwatchLogs user configurable settings. **Warning:** There's no way to reset advanced configuration options to default. Options that you add cannot be removed later
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigResult> ExternalAwsCloudwatchLogsUserConfigs;
        /// <summary>
        /// ExternalAwsCloudwatchMetrics user configurable settings. **Warning:** There's no way to reset advanced configuration options to default. Options that you add cannot be removed later
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigResult> ExternalAwsCloudwatchMetricsUserConfigs;
        /// <summary>
        /// ExternalElasticsearchLogs user configurable settings. **Warning:** There's no way to reset advanced configuration options to default. Options that you add cannot be removed later
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceIntegrationExternalElasticsearchLogsUserConfigResult> ExternalElasticsearchLogsUserConfigs;
        /// <summary>
        /// ExternalOpensearchLogs user configurable settings. **Warning:** There's no way to reset advanced configuration options to default. Options that you add cannot be removed later
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceIntegrationExternalOpensearchLogsUserConfigResult> ExternalOpensearchLogsUserConfigs;
        /// <summary>
        /// FlinkExternalPostgresql user configurable settings. **Warning:** There's no way to reset advanced configuration options to default. Options that you add cannot be removed later
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceIntegrationFlinkExternalPostgresqlUserConfigResult> FlinkExternalPostgresqlUserConfigs;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The ID of the Aiven service integration.
        /// </summary>
        public readonly string IntegrationId;
        /// <summary>
        /// Type of the service integration. The possible values are `alertmanager`, `autoscaler`, `caching`, `cassandra_cross_service_cluster`, `clickhouse_credentials`, `clickhouse_kafka`, `clickhouse_postgresql`, `dashboard`, `datadog`, `datasource`, `disaster_recovery`, `external_aws_cloudwatch_logs`, `external_aws_cloudwatch_metrics`, `external_elasticsearch_logs`, `external_google_cloud_logging`, `external_opensearch_logs`, `flink`, `flink_external_bigquery`, `flink_external_kafka`, `flink_external_postgresql`, `internal_connectivity`, `jolokia`, `kafka_connect`, `kafka_connect_postgresql`, `kafka_logs`, `kafka_mirrormaker`, `logs`, `m3aggregator`, `m3coordinator`, `metrics`, `opensearch_cross_cluster_replication`, `opensearch_cross_cluster_search`, `prometheus`, `read_replica`, `rsyslog`, `schema_registry_proxy`, `stresstester`, `thanos_distributed_query`, `thanos_migrate`, `thanoscompactor`, `thanosquery`, `thanosruler`, `thanosstore`, `vector` and `vmalert`.
        /// </summary>
        public readonly string IntegrationType;
        /// <summary>
        /// KafkaConnect user configurable settings. **Warning:** There's no way to reset advanced configuration options to default. Options that you add cannot be removed later
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceIntegrationKafkaConnectUserConfigResult> KafkaConnectUserConfigs;
        /// <summary>
        /// KafkaLogs user configurable settings. **Warning:** There's no way to reset advanced configuration options to default. Options that you add cannot be removed later
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceIntegrationKafkaLogsUserConfigResult> KafkaLogsUserConfigs;
        /// <summary>
        /// KafkaMirrormaker user configurable settings. **Warning:** There's no way to reset advanced configuration options to default. Options that you add cannot be removed later
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceIntegrationKafkaMirrormakerUserConfigResult> KafkaMirrormakerUserConfigs;
        /// <summary>
        /// Logs user configurable settings. **Warning:** There's no way to reset advanced configuration options to default. Options that you add cannot be removed later
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceIntegrationLogsUserConfigResult> LogsUserConfigs;
        /// <summary>
        /// Metrics user configurable settings. **Warning:** There's no way to reset advanced configuration options to default. Options that you add cannot be removed later
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceIntegrationMetricsUserConfigResult> MetricsUserConfigs;
        /// <summary>
        /// Project the integration belongs to.
        /// </summary>
        public readonly string Project;
        /// <summary>
        /// Prometheus user configurable settings. **Warning:** There's no way to reset advanced configuration options to default. Options that you add cannot be removed later
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceIntegrationPrometheusUserConfigResult> PrometheusUserConfigs;
        /// <summary>
        /// Source endpoint for the integration.
        /// </summary>
        public readonly string SourceEndpointId;
        /// <summary>
        /// Source service for the integration (if any)
        /// </summary>
        public readonly string SourceServiceName;
        /// <summary>
        /// Source service project name
        /// </summary>
        public readonly string SourceServiceProject;

        [OutputConstructor]
        private GetServiceIntegrationResult(
            ImmutableArray<Outputs.GetServiceIntegrationClickhouseKafkaUserConfigResult> clickhouseKafkaUserConfigs,

            ImmutableArray<Outputs.GetServiceIntegrationClickhousePostgresqlUserConfigResult> clickhousePostgresqlUserConfigs,

            ImmutableArray<Outputs.GetServiceIntegrationDatadogUserConfigResult> datadogUserConfigs,

            string destinationEndpointId,

            string destinationServiceName,

            string destinationServiceProject,

            ImmutableArray<Outputs.GetServiceIntegrationExternalAwsCloudwatchLogsUserConfigResult> externalAwsCloudwatchLogsUserConfigs,

            ImmutableArray<Outputs.GetServiceIntegrationExternalAwsCloudwatchMetricsUserConfigResult> externalAwsCloudwatchMetricsUserConfigs,

            ImmutableArray<Outputs.GetServiceIntegrationExternalElasticsearchLogsUserConfigResult> externalElasticsearchLogsUserConfigs,

            ImmutableArray<Outputs.GetServiceIntegrationExternalOpensearchLogsUserConfigResult> externalOpensearchLogsUserConfigs,

            ImmutableArray<Outputs.GetServiceIntegrationFlinkExternalPostgresqlUserConfigResult> flinkExternalPostgresqlUserConfigs,

            string id,

            string integrationId,

            string integrationType,

            ImmutableArray<Outputs.GetServiceIntegrationKafkaConnectUserConfigResult> kafkaConnectUserConfigs,

            ImmutableArray<Outputs.GetServiceIntegrationKafkaLogsUserConfigResult> kafkaLogsUserConfigs,

            ImmutableArray<Outputs.GetServiceIntegrationKafkaMirrormakerUserConfigResult> kafkaMirrormakerUserConfigs,

            ImmutableArray<Outputs.GetServiceIntegrationLogsUserConfigResult> logsUserConfigs,

            ImmutableArray<Outputs.GetServiceIntegrationMetricsUserConfigResult> metricsUserConfigs,

            string project,

            ImmutableArray<Outputs.GetServiceIntegrationPrometheusUserConfigResult> prometheusUserConfigs,

            string sourceEndpointId,

            string sourceServiceName,

            string sourceServiceProject)
        {
            ClickhouseKafkaUserConfigs = clickhouseKafkaUserConfigs;
            ClickhousePostgresqlUserConfigs = clickhousePostgresqlUserConfigs;
            DatadogUserConfigs = datadogUserConfigs;
            DestinationEndpointId = destinationEndpointId;
            DestinationServiceName = destinationServiceName;
            DestinationServiceProject = destinationServiceProject;
            ExternalAwsCloudwatchLogsUserConfigs = externalAwsCloudwatchLogsUserConfigs;
            ExternalAwsCloudwatchMetricsUserConfigs = externalAwsCloudwatchMetricsUserConfigs;
            ExternalElasticsearchLogsUserConfigs = externalElasticsearchLogsUserConfigs;
            ExternalOpensearchLogsUserConfigs = externalOpensearchLogsUserConfigs;
            FlinkExternalPostgresqlUserConfigs = flinkExternalPostgresqlUserConfigs;
            Id = id;
            IntegrationId = integrationId;
            IntegrationType = integrationType;
            KafkaConnectUserConfigs = kafkaConnectUserConfigs;
            KafkaLogsUserConfigs = kafkaLogsUserConfigs;
            KafkaMirrormakerUserConfigs = kafkaMirrormakerUserConfigs;
            LogsUserConfigs = logsUserConfigs;
            MetricsUserConfigs = metricsUserConfigs;
            Project = project;
            PrometheusUserConfigs = prometheusUserConfigs;
            SourceEndpointId = sourceEndpointId;
            SourceServiceName = sourceServiceName;
            SourceServiceProject = sourceServiceProject;
        }
    }
}
