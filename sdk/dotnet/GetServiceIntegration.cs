// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetServiceIntegration
    {
        public static Task<GetServiceIntegrationResult> InvokeAsync(GetServiceIntegrationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServiceIntegrationResult>("aiven:index/getServiceIntegration:getServiceIntegration", args ?? new GetServiceIntegrationArgs(), options.WithVersion());
    }


    public sealed class GetServiceIntegrationArgs : Pulumi.InvokeArgs
    {
        [Input("destinationEndpointId")]
        public string? DestinationEndpointId { get; set; }

        [Input("destinationServiceName", required: true)]
        public string DestinationServiceName { get; set; } = null!;

        [Input("integrationType", required: true)]
        public string IntegrationType { get; set; } = null!;

        [Input("kafkaConnectUserConfig")]
        public Inputs.GetServiceIntegrationKafkaConnectUserConfigArgs? KafkaConnectUserConfig { get; set; }

        [Input("kafkaMirrormakerUserConfig")]
        public Inputs.GetServiceIntegrationKafkaMirrormakerUserConfigArgs? KafkaMirrormakerUserConfig { get; set; }

        [Input("logsUserConfig")]
        public Inputs.GetServiceIntegrationLogsUserConfigArgs? LogsUserConfig { get; set; }

        [Input("mirrormakerUserConfig")]
        public Inputs.GetServiceIntegrationMirrormakerUserConfigArgs? MirrormakerUserConfig { get; set; }

        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        [Input("sourceEndpointId")]
        public string? SourceEndpointId { get; set; }

        [Input("sourceServiceName", required: true)]
        public string SourceServiceName { get; set; } = null!;

        public GetServiceIntegrationArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetServiceIntegrationResult
    {
        public readonly string? DestinationEndpointId;
        public readonly string DestinationServiceName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string IntegrationType;
        public readonly Outputs.GetServiceIntegrationKafkaConnectUserConfigResult? KafkaConnectUserConfig;
        public readonly Outputs.GetServiceIntegrationKafkaMirrormakerUserConfigResult? KafkaMirrormakerUserConfig;
        public readonly Outputs.GetServiceIntegrationLogsUserConfigResult? LogsUserConfig;
        public readonly Outputs.GetServiceIntegrationMirrormakerUserConfigResult? MirrormakerUserConfig;
        public readonly string Project;
        public readonly string? SourceEndpointId;
        public readonly string SourceServiceName;

        [OutputConstructor]
        private GetServiceIntegrationResult(
            string? destinationEndpointId,

            string destinationServiceName,

            string id,

            string integrationType,

            Outputs.GetServiceIntegrationKafkaConnectUserConfigResult? kafkaConnectUserConfig,

            Outputs.GetServiceIntegrationKafkaMirrormakerUserConfigResult? kafkaMirrormakerUserConfig,

            Outputs.GetServiceIntegrationLogsUserConfigResult? logsUserConfig,

            Outputs.GetServiceIntegrationMirrormakerUserConfigResult? mirrormakerUserConfig,

            string project,

            string? sourceEndpointId,

            string sourceServiceName)
        {
            DestinationEndpointId = destinationEndpointId;
            DestinationServiceName = destinationServiceName;
            Id = id;
            IntegrationType = integrationType;
            KafkaConnectUserConfig = kafkaConnectUserConfig;
            KafkaMirrormakerUserConfig = kafkaMirrormakerUserConfig;
            LogsUserConfig = logsUserConfig;
            MirrormakerUserConfig = mirrormakerUserConfig;
            Project = project;
            SourceEndpointId = sourceEndpointId;
            SourceServiceName = sourceServiceName;
        }
    }
}
