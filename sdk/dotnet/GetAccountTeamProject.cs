// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetAccountTeamProject
    {
        /// <summary>
        /// The Account Team Project data source provides information about the existing Account Team Project.
        /// 
        /// !&gt; **Teams have been deprecated and are being migrated to groups**
        /// **On 30 September 2024** the Account Owners team will transition to super admin. Super admin have full access to the organization.
        /// The Account Owners and super admin are synced, so the removal of the Account Owners team will have no impact on existing permissions.
        /// **From 4 November 2024** you won't be able to create new teams or update existing ones. Existing teams will be migrated to groups after
        /// this date. **On 2 December 2024** all teams will be deleted and the teams feature will be completely removed. View the
        /// migration guide for more information on the changes and migrating to groups.
        /// 
        /// &gt; **Important**
        /// You can't delete the Account Owners team. **Deleting all other teams in your organization will disable the teams feature.**
        /// You won't be able to create new teams or access your Account Owners team.
        /// </summary>
        public static Task<GetAccountTeamProjectResult> InvokeAsync(GetAccountTeamProjectArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAccountTeamProjectResult>("aiven:index/getAccountTeamProject:getAccountTeamProject", args ?? new GetAccountTeamProjectArgs(), options.WithDefaults());

        /// <summary>
        /// The Account Team Project data source provides information about the existing Account Team Project.
        /// 
        /// !&gt; **Teams have been deprecated and are being migrated to groups**
        /// **On 30 September 2024** the Account Owners team will transition to super admin. Super admin have full access to the organization.
        /// The Account Owners and super admin are synced, so the removal of the Account Owners team will have no impact on existing permissions.
        /// **From 4 November 2024** you won't be able to create new teams or update existing ones. Existing teams will be migrated to groups after
        /// this date. **On 2 December 2024** all teams will be deleted and the teams feature will be completely removed. View the
        /// migration guide for more information on the changes and migrating to groups.
        /// 
        /// &gt; **Important**
        /// You can't delete the Account Owners team. **Deleting all other teams in your organization will disable the teams feature.**
        /// You won't be able to create new teams or access your Account Owners team.
        /// </summary>
        public static Output<GetAccountTeamProjectResult> Invoke(GetAccountTeamProjectInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccountTeamProjectResult>("aiven:index/getAccountTeamProject:getAccountTeamProject", args ?? new GetAccountTeamProjectInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The Account Team Project data source provides information about the existing Account Team Project.
        /// 
        /// !&gt; **Teams have been deprecated and are being migrated to groups**
        /// **On 30 September 2024** the Account Owners team will transition to super admin. Super admin have full access to the organization.
        /// The Account Owners and super admin are synced, so the removal of the Account Owners team will have no impact on existing permissions.
        /// **From 4 November 2024** you won't be able to create new teams or update existing ones. Existing teams will be migrated to groups after
        /// this date. **On 2 December 2024** all teams will be deleted and the teams feature will be completely removed. View the
        /// migration guide for more information on the changes and migrating to groups.
        /// 
        /// &gt; **Important**
        /// You can't delete the Account Owners team. **Deleting all other teams in your organization will disable the teams feature.**
        /// You won't be able to create new teams or access your Account Owners team.
        /// </summary>
        public static Output<GetAccountTeamProjectResult> Invoke(GetAccountTeamProjectInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccountTeamProjectResult>("aiven:index/getAccountTeamProject:getAccountTeamProject", args ?? new GetAccountTeamProjectInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccountTeamProjectArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique account id
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        /// <summary>
        /// The name of an already existing project
        /// </summary>
        [Input("projectName", required: true)]
        public string ProjectName { get; set; } = null!;

        /// <summary>
        /// An account team id
        /// </summary>
        [Input("teamId", required: true)]
        public string TeamId { get; set; } = null!;

        public GetAccountTeamProjectArgs()
        {
        }
        public static new GetAccountTeamProjectArgs Empty => new GetAccountTeamProjectArgs();
    }

    public sealed class GetAccountTeamProjectInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique account id
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// The name of an already existing project
        /// </summary>
        [Input("projectName", required: true)]
        public Input<string> ProjectName { get; set; } = null!;

        /// <summary>
        /// An account team id
        /// </summary>
        [Input("teamId", required: true)]
        public Input<string> TeamId { get; set; } = null!;

        public GetAccountTeamProjectInvokeArgs()
        {
        }
        public static new GetAccountTeamProjectInvokeArgs Empty => new GetAccountTeamProjectInvokeArgs();
    }


    [OutputType]
    public sealed class GetAccountTeamProjectResult
    {
        /// <summary>
        /// The unique account id
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of an already existing project
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// An account team id
        /// </summary>
        public readonly string TeamId;
        /// <summary>
        /// The Account team project type. The possible values are `admin`, `developer`, `operator`, `organization:app_users:write`, `organization:audit_logs:read`, `organization:billing:read`, `organization:billing:write`, `organization:domains:write`, `organization:groups:write`, `organization:idps:write`, `organization:networking:read`, `organization:networking:write`, `organization:projects:write`, `organization:users:write`, `project:audit_logs:read`, `project:integrations:read`, `project:integrations:write`, `project:networking:read`, `project:networking:write`, `project:permissions:read`, `project:services:read`, `project:services:write`, `read_only`, `role:organization:admin`, `role:services:maintenance`, `role:services:recover`, `service:configuration:write`, `service:data:write`, `service:logs:read`, `service:secrets:read` and `service:users:write`.
        /// </summary>
        public readonly string TeamType;

        [OutputConstructor]
        private GetAccountTeamProjectResult(
            string accountId,

            string id,

            string projectName,

            string teamId,

            string teamType)
        {
            AccountId = accountId;
            Id = id;
            ProjectName = projectName;
            TeamId = teamId;
            TeamType = teamType;
        }
    }
}
