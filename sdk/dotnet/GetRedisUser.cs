// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetRedisUser
    {
        /// <summary>
        /// The Redis User data source provides information about the existing Aiven Redis User.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var user = Aiven.GetRedisUser.Invoke(new()
        ///     {
        ///         ServiceName = "my-service",
        ///         Project = "my-project",
        ///         Username = "user1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetRedisUserResult> InvokeAsync(GetRedisUserArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRedisUserResult>("aiven:index/getRedisUser:getRedisUser", args ?? new GetRedisUserArgs(), options.WithDefaults());

        /// <summary>
        /// The Redis User data source provides information about the existing Aiven Redis User.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var user = Aiven.GetRedisUser.Invoke(new()
        ///     {
        ///         ServiceName = "my-service",
        ///         Project = "my-project",
        ///         Username = "user1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRedisUserResult> Invoke(GetRedisUserInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRedisUserResult>("aiven:index/getRedisUser:getRedisUser", args ?? new GetRedisUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRedisUserArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        /// <summary>
        /// The actual name of the Redis User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("username", required: true)]
        public string Username { get; set; } = null!;

        public GetRedisUserArgs()
        {
        }
        public static new GetRedisUserArgs Empty => new GetRedisUserArgs();
    }

    public sealed class GetRedisUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// The actual name of the Redis User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public GetRedisUserInvokeArgs()
        {
        }
        public static new GetRedisUserInvokeArgs Empty => new GetRedisUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetRedisUserResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The password of the Redis User.
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        public readonly string Project;
        /// <summary>
        /// Defines command category rules. The field is required with`redis_acl_commands` and `redis_acl_keys`. Changing this property forces recreation of the resource.
        /// </summary>
        public readonly ImmutableArray<string> RedisAclCategories;
        /// <summary>
        /// Defines the permitted pub/sub channel patterns. Changing this property forces recreation of the resource.
        /// </summary>
        public readonly ImmutableArray<string> RedisAclChannels;
        /// <summary>
        /// Defines rules for individual commands. The field is required with`redis_acl_categories` and `redis_acl_keys`. Changing this property forces recreation of the resource.
        /// </summary>
        public readonly ImmutableArray<string> RedisAclCommands;
        /// <summary>
        /// Defines key access rules. The field is required with`redis_acl_categories` and `redis_acl_keys`. Changing this property forces recreation of the resource.
        /// </summary>
        public readonly ImmutableArray<string> RedisAclKeys;
        /// <summary>
        /// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        public readonly string ServiceName;
        /// <summary>
        /// Type of the user account. Tells whether the user is the primary account or a regular account.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The actual name of the Redis User. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        public readonly string Username;

        [OutputConstructor]
        private GetRedisUserResult(
            string id,

            string password,

            string project,

            ImmutableArray<string> redisAclCategories,

            ImmutableArray<string> redisAclChannels,

            ImmutableArray<string> redisAclCommands,

            ImmutableArray<string> redisAclKeys,

            string serviceName,

            string type,

            string username)
        {
            Id = id;
            Password = password;
            Project = project;
            RedisAclCategories = redisAclCategories;
            RedisAclChannels = redisAclChannels;
            RedisAclCommands = redisAclCommands;
            RedisAclKeys = redisAclKeys;
            ServiceName = serviceName;
            Type = type;
            Username = username;
        }
    }
}
