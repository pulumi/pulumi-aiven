// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    /// <summary>
    /// The OpenSearch ACL Config resource allows the creation and management of Aiven OpenSearch ACLs.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aiven = Pulumi.Aiven;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = Aiven.GetProject.Invoke(new()
    ///     {
    ///         Project = "example_project",
    ///     });
    /// 
    ///     var bar = new Aiven.OpenSearch("bar", new()
    ///     {
    ///         Project = foo.Apply(getProjectResult =&gt; getProjectResult.Project),
    ///         CloudName = "google-europe-west1",
    ///         Plan = "startup-4",
    ///         ServiceName = "example_service_name",
    ///         MaintenanceWindowDow = "monday",
    ///         MaintenanceWindowTime = "10:00:00",
    ///     });
    /// 
    ///     var fooOpensearchUser = new Aiven.OpensearchUser("foo", new()
    ///     {
    ///         ServiceName = bar.ServiceName,
    ///         Project = foo.Apply(getProjectResult =&gt; getProjectResult.Project),
    ///         Username = "user-example",
    ///     });
    /// 
    ///     var fooOpenSearchAclConfig = new Aiven.OpenSearchAclConfig("foo", new()
    ///     {
    ///         Project = foo.Apply(getProjectResult =&gt; getProjectResult.Project),
    ///         ServiceName = bar.ServiceName,
    ///         Enabled = true,
    ///         ExtendedAcl = false,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import aiven:index/openSearchAclConfig:OpenSearchAclConfig foo project/service_name
    /// ```
    /// </summary>
    [AivenResourceType("aiven:index/openSearchAclConfig:OpenSearchAclConfig")]
    public partial class OpenSearchAclConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Enable OpenSearch ACLs. When disabled authenticated service users have unrestricted access. The default value is `true`.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to. The default value is `true`.
        /// </summary>
        [Output("extendedAcl")]
        public Output<bool?> ExtendedAcl { get; private set; } = null!;

        /// <summary>
        /// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;


        /// <summary>
        /// Create a OpenSearchAclConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OpenSearchAclConfig(string name, OpenSearchAclConfigArgs args, CustomResourceOptions? options = null)
            : base("aiven:index/openSearchAclConfig:OpenSearchAclConfig", name, args ?? new OpenSearchAclConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OpenSearchAclConfig(string name, Input<string> id, OpenSearchAclConfigState? state = null, CustomResourceOptions? options = null)
            : base("aiven:index/openSearchAclConfig:OpenSearchAclConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OpenSearchAclConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OpenSearchAclConfig Get(string name, Input<string> id, OpenSearchAclConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new OpenSearchAclConfig(name, id, state, options);
        }
    }

    public sealed class OpenSearchAclConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable OpenSearch ACLs. When disabled authenticated service users have unrestricted access. The default value is `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to. The default value is `true`.
        /// </summary>
        [Input("extendedAcl")]
        public Input<bool>? ExtendedAcl { get; set; }

        /// <summary>
        /// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public OpenSearchAclConfigArgs()
        {
        }
        public static new OpenSearchAclConfigArgs Empty => new OpenSearchAclConfigArgs();
    }

    public sealed class OpenSearchAclConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable OpenSearch ACLs. When disabled authenticated service users have unrestricted access. The default value is `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to. The default value is `true`.
        /// </summary>
        [Input("extendedAcl")]
        public Input<bool>? ExtendedAcl { get; set; }

        /// <summary>
        /// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        public OpenSearchAclConfigState()
        {
        }
        public static new OpenSearchAclConfigState Empty => new OpenSearchAclConfigState();
    }
}
