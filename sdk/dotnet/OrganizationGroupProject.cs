// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    /// <summary>
    /// Adds and manages a [group](https://aiven.io/docs/platform/concepts/projects_accounts_access#groups) of users as [members of a project](https://aiven.io/docs/platform/reference/project-member-privileges).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aiven = Pulumi.Aiven;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleProject = new Aiven.Project("example_project", new()
    ///     {
    ///         ProjectName = "example-project",
    ///         ParentId = main.Id,
    ///     });
    /// 
    ///     var example = new Aiven.OrganizationUserGroup("example", new()
    ///     {
    ///         Description = "Example group of users.",
    ///         OrganizationId = main.Id,
    ///         Name = "Example group",
    ///     });
    /// 
    ///     var projectAdmin = new Aiven.OrganizationUserGroupMember("project_admin", new()
    ///     {
    ///         GroupId = example.GroupId,
    ///         OrganizationId = main.Id,
    ///         UserId = "u123a456b7890c",
    ///     });
    /// 
    ///     var exampleOrganizationGroupProject = new Aiven.OrganizationGroupProject("example", new()
    ///     {
    ///         GroupId = example.GroupId,
    ///         Project = exampleProjectAivenProject.Project,
    ///         Role = "admin",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import aiven:index/organizationGroupProject:OrganizationGroupProject example PROJECT/USER_GROUP_ID
    /// ```
    /// </summary>
    [AivenResourceType("aiven:index/organizationGroupProject:OrganizationGroupProject")]
    public partial class OrganizationGroupProject : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the user group.
        /// </summary>
        [Output("groupId")]
        public Output<string> GroupId { get; private set; } = null!;

        /// <summary>
        /// The project that the users in the group are members of.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Role assigned to all users in the group for the project.
        /// </summary>
        [Output("role")]
        public Output<string> Role { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.OrganizationGroupProjectTimeouts?> Timeouts { get; private set; } = null!;


        /// <summary>
        /// Create a OrganizationGroupProject resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrganizationGroupProject(string name, OrganizationGroupProjectArgs args, CustomResourceOptions? options = null)
            : base("aiven:index/organizationGroupProject:OrganizationGroupProject", name, args ?? new OrganizationGroupProjectArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrganizationGroupProject(string name, Input<string> id, OrganizationGroupProjectState? state = null, CustomResourceOptions? options = null)
            : base("aiven:index/organizationGroupProject:OrganizationGroupProject", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrganizationGroupProject resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrganizationGroupProject Get(string name, Input<string> id, OrganizationGroupProjectState? state = null, CustomResourceOptions? options = null)
        {
            return new OrganizationGroupProject(name, id, state, options);
        }
    }

    public sealed class OrganizationGroupProjectArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the user group.
        /// </summary>
        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        /// <summary>
        /// The project that the users in the group are members of.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// Role assigned to all users in the group for the project.
        /// </summary>
        [Input("role", required: true)]
        public Input<string> Role { get; set; } = null!;

        [Input("timeouts")]
        public Input<Inputs.OrganizationGroupProjectTimeoutsArgs>? Timeouts { get; set; }

        public OrganizationGroupProjectArgs()
        {
        }
        public static new OrganizationGroupProjectArgs Empty => new OrganizationGroupProjectArgs();
    }

    public sealed class OrganizationGroupProjectState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the user group.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// The project that the users in the group are members of.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Role assigned to all users in the group for the project.
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        [Input("timeouts")]
        public Input<Inputs.OrganizationGroupProjectTimeoutsGetArgs>? Timeouts { get; set; }

        public OrganizationGroupProjectState()
        {
        }
        public static new OrganizationGroupProjectState Empty => new OrganizationGroupProjectState();
    }
}
