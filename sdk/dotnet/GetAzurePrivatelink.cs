// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetAzurePrivatelink
    {
        /// <summary>
        /// Gets information about an Azure Private Link connection for an Aiven service.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var main = Aiven.GetAzurePrivatelink.Invoke(new()
        ///     {
        ///         Project = exampleProject.Project,
        ///         ServiceName = exampleKafka.ServiceName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAzurePrivatelinkResult> InvokeAsync(GetAzurePrivatelinkArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAzurePrivatelinkResult>("aiven:index/getAzurePrivatelink:getAzurePrivatelink", args ?? new GetAzurePrivatelinkArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about an Azure Private Link connection for an Aiven service.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var main = Aiven.GetAzurePrivatelink.Invoke(new()
        ///     {
        ///         Project = exampleProject.Project,
        ///         ServiceName = exampleKafka.ServiceName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAzurePrivatelinkResult> Invoke(GetAzurePrivatelinkInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAzurePrivatelinkResult>("aiven:index/getAzurePrivatelink:getAzurePrivatelink", args ?? new GetAzurePrivatelinkInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAzurePrivatelinkArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        /// <summary>
        /// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetAzurePrivatelinkArgs()
        {
        }
        public static new GetAzurePrivatelinkArgs Empty => new GetAzurePrivatelinkArgs();
    }

    public sealed class GetAzurePrivatelinkInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public GetAzurePrivatelinkInvokeArgs()
        {
        }
        public static new GetAzurePrivatelinkInvokeArgs Empty => new GetAzurePrivatelinkInvokeArgs();
    }


    [OutputType]
    public sealed class GetAzurePrivatelinkResult
    {
        /// <summary>
        /// The Azure Private Link service alias.
        /// </summary>
        public readonly string AzureServiceAlias;
        /// <summary>
        /// The Azure Private Link service ID.
        /// </summary>
        public readonly string AzureServiceId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Printable result of the Azure Private Link request.
        /// </summary>
        public readonly string Message;
        /// <summary>
        /// The name of the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        public readonly string Project;
        /// <summary>
        /// The name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. Changing this property forces recreation of the resource.
        /// </summary>
        public readonly string ServiceName;
        /// <summary>
        /// The state of the Private Link resource.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// A list of allowed subscription IDs. Maximum length: `16`.
        /// </summary>
        public readonly ImmutableArray<string> UserSubscriptionIds;

        [OutputConstructor]
        private GetAzurePrivatelinkResult(
            string azureServiceAlias,

            string azureServiceId,

            string id,

            string message,

            string project,

            string serviceName,

            string state,

            ImmutableArray<string> userSubscriptionIds)
        {
            AzureServiceAlias = azureServiceAlias;
            AzureServiceId = azureServiceId;
            Id = id;
            Message = message;
            Project = project;
            ServiceName = serviceName;
            State = state;
            UserSubscriptionIds = userSubscriptionIds;
        }
    }
}
