// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Inputs
{

    public sealed class GetServicePgUserConfigPgArgs : Pulumi.InvokeArgs
    {
        [Input("autovacuumAnalyzeScaleFactor")]
        public string? AutovacuumAnalyzeScaleFactor { get; set; }

        [Input("autovacuumAnalyzeThreshold")]
        public string? AutovacuumAnalyzeThreshold { get; set; }

        [Input("autovacuumFreezeMaxAge")]
        public string? AutovacuumFreezeMaxAge { get; set; }

        [Input("autovacuumMaxWorkers")]
        public string? AutovacuumMaxWorkers { get; set; }

        [Input("autovacuumNaptime")]
        public string? AutovacuumNaptime { get; set; }

        [Input("autovacuumVacuumCostDelay")]
        public string? AutovacuumVacuumCostDelay { get; set; }

        [Input("autovacuumVacuumCostLimit")]
        public string? AutovacuumVacuumCostLimit { get; set; }

        [Input("autovacuumVacuumScaleFactor")]
        public string? AutovacuumVacuumScaleFactor { get; set; }

        [Input("autovacuumVacuumThreshold")]
        public string? AutovacuumVacuumThreshold { get; set; }

        [Input("deadlockTimeout")]
        public string? DeadlockTimeout { get; set; }

        [Input("idleInTransactionSessionTimeout")]
        public string? IdleInTransactionSessionTimeout { get; set; }

        [Input("jit")]
        public string? Jit { get; set; }

        [Input("logAutovacuumMinDuration")]
        public string? LogAutovacuumMinDuration { get; set; }

        [Input("logErrorVerbosity")]
        public string? LogErrorVerbosity { get; set; }

        [Input("logMinDurationStatement")]
        public string? LogMinDurationStatement { get; set; }

        [Input("maxFilesPerProcess")]
        public string? MaxFilesPerProcess { get; set; }

        [Input("maxLocksPerTransaction")]
        public string? MaxLocksPerTransaction { get; set; }

        [Input("maxLogicalReplicationWorkers")]
        public string? MaxLogicalReplicationWorkers { get; set; }

        [Input("maxParallelWorkers")]
        public string? MaxParallelWorkers { get; set; }

        [Input("maxParallelWorkersPerGather")]
        public string? MaxParallelWorkersPerGather { get; set; }

        [Input("maxPredLocksPerTransaction")]
        public string? MaxPredLocksPerTransaction { get; set; }

        [Input("maxPreparedTransactions")]
        public string? MaxPreparedTransactions { get; set; }

        [Input("maxReplicationSlots")]
        public string? MaxReplicationSlots { get; set; }

        [Input("maxStackDepth")]
        public string? MaxStackDepth { get; set; }

        [Input("maxStandbyArchiveDelay")]
        public string? MaxStandbyArchiveDelay { get; set; }

        [Input("maxStandbyStreamingDelay")]
        public string? MaxStandbyStreamingDelay { get; set; }

        [Input("maxWalSenders")]
        public string? MaxWalSenders { get; set; }

        [Input("maxWorkerProcesses")]
        public string? MaxWorkerProcesses { get; set; }

        [Input("pgPartmanBgwDotInterval")]
        public string? PgPartmanBgwDotInterval { get; set; }

        [Input("pgPartmanBgwDotRole")]
        public string? PgPartmanBgwDotRole { get; set; }

        [Input("pgStatStatementsTrack")]
        public string? PgStatStatementsTrack { get; set; }

        [Input("tempFileLimit")]
        public string? TempFileLimit { get; set; }

        [Input("timezone")]
        public string? Timezone { get; set; }

        [Input("trackActivityQuerySize")]
        public string? TrackActivityQuerySize { get; set; }

        [Input("trackCommitTimestamp")]
        public string? TrackCommitTimestamp { get; set; }

        [Input("trackFunctions")]
        public string? TrackFunctions { get; set; }

        [Input("walSenderTimeout")]
        public string? WalSenderTimeout { get; set; }

        [Input("walWriterDelay")]
        public string? WalWriterDelay { get; set; }

        public GetServicePgUserConfigPgArgs()
        {
        }
    }
}
