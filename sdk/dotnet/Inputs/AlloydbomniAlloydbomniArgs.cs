// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Inputs
{

    public sealed class AlloydbomniAlloydbomniArgs : global::Pulumi.ResourceArgs
    {
        [Input("bouncer")]
        private Input<string>? _bouncer;

        /// <summary>
        /// PgBouncer connection details for [connection pooling](https://aiven.io/docs/products/postgresql/concepts/pg-connection-pooling).
        /// </summary>
        [Obsolete(@"This field was added by mistake and has never worked. It will be removed in future versions.")]
        public Input<string>? Bouncer
        {
            get => _bouncer;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _bouncer = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("dbname")]
        private Input<string>? _dbname;

        /// <summary>
        /// Primary AlloyDB Omni database name.
        /// </summary>
        public Input<string>? Dbname
        {
            get => _dbname;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _dbname = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("host")]
        private Input<string>? _host;

        /// <summary>
        /// AlloyDB Omni primary node host IP or name.
        /// </summary>
        public Input<string>? Host
        {
            get => _host;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _host = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("maxConnections")]
        private Input<int>? _maxConnections;

        /// <summary>
        /// The [number of allowed connections](https://aiven.io/docs/products/postgresql/reference/pg-connection-limits). Varies based on the service plan.
        /// </summary>
        public Input<int>? MaxConnections
        {
            get => _maxConnections;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _maxConnections = Output.Tuple<Input<int>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("params")]
        private InputList<Inputs.AlloydbomniAlloydbomniParamArgs>? _params;

        /// <summary>
        /// AlloyDB Omni connection parameters.
        /// </summary>
        public InputList<Inputs.AlloydbomniAlloydbomniParamArgs> Params
        {
            get => _params ?? (_params = new InputList<Inputs.AlloydbomniAlloydbomniParamArgs>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableArray.Create<Inputs.AlloydbomniAlloydbomniParamArgs>());
                _params = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// AlloyDB Omni admin user password.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("port")]
        private Input<int>? _port;

        /// <summary>
        /// AlloyDB Omni port.
        /// </summary>
        public Input<int>? Port
        {
            get => _port;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _port = Output.Tuple<Input<int>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("replicaUri")]
        private Input<string>? _replicaUri;

        /// <summary>
        /// AlloyDB Omni replica URI for services with a replica.
        /// </summary>
        public Input<string>? ReplicaUri
        {
            get => _replicaUri;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _replicaUri = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("sslmode")]
        private Input<string>? _sslmode;

        /// <summary>
        /// AlloyDB Omni SSL mode setting.
        /// </summary>
        public Input<string>? Sslmode
        {
            get => _sslmode;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sslmode = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("standbyUris")]
        private InputList<string>? _standbyUris;

        /// <summary>
        /// AlloyDB Omni standby connection URIs.
        /// </summary>
        public InputList<string> StandbyUris
        {
            get => _standbyUris ?? (_standbyUris = new InputList<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableArray.Create<string>());
                _standbyUris = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        [Input("syncingUris")]
        private InputList<string>? _syncingUris;

        /// <summary>
        /// AlloyDB Omni syncing connection URIs.
        /// </summary>
        public InputList<string> SyncingUris
        {
            get => _syncingUris ?? (_syncingUris = new InputList<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableArray.Create<string>());
                _syncingUris = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        [Input("uri")]
        private Input<string>? _uri;

        /// <summary>
        /// AlloyDB Omni primary connection URI.
        /// </summary>
        public Input<string>? Uri
        {
            get => _uri;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _uri = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("uris")]
        private InputList<string>? _uris;

        /// <summary>
        /// AlloyDB Omni primary connection URIs.
        /// </summary>
        public InputList<string> Uris
        {
            get => _uris ?? (_uris = new InputList<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableArray.Create<string>());
                _uris = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        [Input("user")]
        private Input<string>? _user;

        /// <summary>
        /// AlloyDB Omni admin user name.
        /// </summary>
        public Input<string>? User
        {
            get => _user;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _user = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public AlloydbomniAlloydbomniArgs()
        {
        }
        public static new AlloydbomniAlloydbomniArgs Empty => new AlloydbomniAlloydbomniArgs();
    }
}
