// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Inputs
{

    public sealed class ThanosThanosGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("queryFrontendUri")]
        private Input<string>? _queryFrontendUri;

        /// <summary>
        /// Query frontend URI.
        /// </summary>
        public Input<string>? QueryFrontendUri
        {
            get => _queryFrontendUri;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _queryFrontendUri = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("queryUri")]
        private Input<string>? _queryUri;

        /// <summary>
        /// Query URI.
        /// </summary>
        public Input<string>? QueryUri
        {
            get => _queryUri;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _queryUri = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("receiverIngestingRemoteWriteUri")]
        private Input<string>? _receiverIngestingRemoteWriteUri;

        /// <summary>
        /// Receiver ingesting remote write URI.
        /// </summary>
        public Input<string>? ReceiverIngestingRemoteWriteUri
        {
            get => _receiverIngestingRemoteWriteUri;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _receiverIngestingRemoteWriteUri = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("receiverRemoteWriteUri")]
        private Input<string>? _receiverRemoteWriteUri;

        /// <summary>
        /// Receiver remote write URI.
        /// </summary>
        public Input<string>? ReceiverRemoteWriteUri
        {
            get => _receiverRemoteWriteUri;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _receiverRemoteWriteUri = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("storeUri")]
        private Input<string>? _storeUri;

        /// <summary>
        /// Store URI.
        /// </summary>
        public Input<string>? StoreUri
        {
            get => _storeUri;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _storeUri = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("uris")]
        private InputList<string>? _uris;

        /// <summary>
        /// Thanos server URIs.
        /// </summary>
        public InputList<string> Uris
        {
            get => _uris ?? (_uris = new InputList<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableArray.Create<string>());
                _uris = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        public ThanosThanosGetArgs()
        {
        }
        public static new ThanosThanosGetArgs Empty => new ThanosThanosGetArgs();
    }
}
