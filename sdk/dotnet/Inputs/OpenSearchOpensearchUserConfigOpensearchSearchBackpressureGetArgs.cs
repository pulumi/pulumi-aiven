// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Inputs
{

    public sealed class OpenSearchOpensearchUserConfigOpensearchSearchBackpressureGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enum: `Disabled`, `Enforced`, `MonitorOnly`. The search backpressure mode. Valid values are monitor*only, enforced, or disabled. Default is monitor*only.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// Node duress settings
        /// </summary>
        [Input("nodeDuress")]
        public Input<Inputs.OpenSearchOpensearchUserConfigOpensearchSearchBackpressureNodeDuressGetArgs>? NodeDuress { get; set; }

        /// <summary>
        /// Search shard settings
        /// </summary>
        [Input("searchShardTask")]
        public Input<Inputs.OpenSearchOpensearchUserConfigOpensearchSearchBackpressureSearchShardTaskGetArgs>? SearchShardTask { get; set; }

        /// <summary>
        /// Search task settings
        /// </summary>
        [Input("searchTask")]
        public Input<Inputs.OpenSearchOpensearchUserConfigOpensearchSearchBackpressureSearchTaskGetArgs>? SearchTask { get; set; }

        public OpenSearchOpensearchUserConfigOpensearchSearchBackpressureGetArgs()
        {
        }
        public static new OpenSearchOpensearchUserConfigOpensearchSearchBackpressureGetArgs Empty => new OpenSearchOpensearchUserConfigOpensearchSearchBackpressureGetArgs();
    }
}
