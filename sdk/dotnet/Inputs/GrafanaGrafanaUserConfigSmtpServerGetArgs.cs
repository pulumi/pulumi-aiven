// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Inputs
{

    public sealed class GrafanaGrafanaUserConfigSmtpServerGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Address used for sending emails. Example: `yourgrafanauser@yourdomain.example.com`.
        /// </summary>
        [Input("fromAddress", required: true)]
        public Input<string> FromAddress { get; set; } = null!;

        /// <summary>
        /// Name used in outgoing emails, defaults to Grafana.
        /// </summary>
        [Input("fromName")]
        public Input<string>? FromName { get; set; }

        /// <summary>
        /// Server hostname or IP. Example: `smtp.example.com`.
        /// </summary>
        [Input("host", required: true)]
        public Input<string> Host { get; set; } = null!;

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// Password for SMTP authentication. Example: `ein0eemeev5eeth3Ahfu`.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// SMTP server port. Example: `25`.
        /// </summary>
        [Input("port", required: true)]
        public Input<int> Port { get; set; } = null!;

        /// <summary>
        /// Skip verifying server certificate. Defaults to false.
        /// </summary>
        [Input("skipVerify")]
        public Input<bool>? SkipVerify { get; set; }

        /// <summary>
        /// Enum: `MandatoryStartTLS`, `NoStartTLS`, `OpportunisticStartTLS`. Either OpportunisticStartTLS, MandatoryStartTLS or NoStartTLS. Default is OpportunisticStartTLS.
        /// </summary>
        [Input("starttlsPolicy")]
        public Input<string>? StarttlsPolicy { get; set; }

        /// <summary>
        /// Username for SMTP authentication. Example: `smtpuser`.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public GrafanaGrafanaUserConfigSmtpServerGetArgs()
        {
        }
        public static new GrafanaGrafanaUserConfigSmtpServerGetArgs Empty => new GrafanaGrafanaUserConfigSmtpServerGetArgs();
    }
}
