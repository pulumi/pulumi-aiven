// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Inputs
{

    public sealed class AlloydbomniAlloydbomniUserConfigGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Additional Cloud Regions for Backup Replication.
        /// </summary>
        [Input("additionalBackupRegions")]
        public Input<string>? AdditionalBackupRegions { get; set; }

        [Input("adminPassword")]
        private Input<string>? _adminPassword;

        /// <summary>
        /// Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.
        /// </summary>
        public Input<string>? AdminPassword
        {
            get => _adminPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _adminPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Custom username for admin user. This must be set only when a new service is being created. Example: `avnadmin`.
        /// </summary>
        [Input("adminUsername")]
        public Input<string>? AdminUsername { get; set; }

        /// <summary>
        /// Enum: `15`, and newer. PostgreSQL major version.
        /// </summary>
        [Input("alloydbomniVersion")]
        public Input<string>? AlloydbomniVersion { get; set; }

        /// <summary>
        /// The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed. Example: `3`.
        /// </summary>
        [Input("backupHour")]
        public Input<int>? BackupHour { get; set; }

        /// <summary>
        /// The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed. Example: `30`.
        /// </summary>
        [Input("backupMinute")]
        public Input<int>? BackupMinute { get; set; }

        /// <summary>
        /// Register AAAA DNS records for the service, and allow IPv6 packets to service ports.
        /// </summary>
        [Input("enableIpv6")]
        public Input<bool>? EnableIpv6 { get; set; }

        /// <summary>
        /// Enables or disables the columnar engine. When enabled, it accelerates SQL query processing. Default: `true`.
        /// </summary>
        [Input("googleColumnarEngineEnabled")]
        public Input<bool>? GoogleColumnarEngineEnabled { get; set; }

        /// <summary>
        /// Allocate the amount of RAM to store columnar data. Default: `10`.
        /// </summary>
        [Input("googleColumnarEngineMemorySizePercentage")]
        public Input<int>? GoogleColumnarEngineMemorySizePercentage { get; set; }

        [Input("ipFilterObjects")]
        private InputList<Inputs.AlloydbomniAlloydbomniUserConfigIpFilterObjectGetArgs>? _ipFilterObjects;

        /// <summary>
        /// Allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`
        /// </summary>
        public InputList<Inputs.AlloydbomniAlloydbomniUserConfigIpFilterObjectGetArgs> IpFilterObjects
        {
            get => _ipFilterObjects ?? (_ipFilterObjects = new InputList<Inputs.AlloydbomniAlloydbomniUserConfigIpFilterObjectGetArgs>());
            set => _ipFilterObjects = value;
        }

        [Input("ipFilterStrings")]
        private InputList<string>? _ipFilterStrings;

        /// <summary>
        /// Allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`.
        /// </summary>
        public InputList<string> IpFilterStrings
        {
            get => _ipFilterStrings ?? (_ipFilterStrings = new InputList<string>());
            set => _ipFilterStrings = value;
        }

        [Input("ipFilters")]
        private InputList<string>? _ipFilters;

        /// <summary>
        /// Allow incoming connections from CIDR address block, e.g. `10.20.0.0/16`.
        /// </summary>
        [Obsolete(@"Deprecated. Use `ip_filter_string` instead.")]
        public InputList<string> IpFilters
        {
            get => _ipFilters ?? (_ipFilters = new InputList<string>());
            set => _ipFilters = value;
        }

        /// <summary>
        /// postgresql.conf configuration values
        /// </summary>
        [Input("pg")]
        public Input<Inputs.AlloydbomniAlloydbomniUserConfigPgGetArgs>? Pg { get; set; }

        /// <summary>
        /// Should the service which is being forked be a read replica (deprecated, use read_replica service integration instead).
        /// </summary>
        [Input("pgReadReplica")]
        public Input<bool>? PgReadReplica { get; set; }

        /// <summary>
        /// Name of the PG Service from which to fork (deprecated, use service*to*fork_from). This has effect only when a new service is being created. Example: `anotherservicename`.
        /// </summary>
        [Input("pgServiceToForkFrom")]
        public Input<string>? PgServiceToForkFrom { get; set; }

        /// <summary>
        /// Enum: `15`, and newer. PostgreSQL major version.
        /// </summary>
        [Input("pgVersion")]
        public Input<string>? PgVersion { get; set; }

        /// <summary>
        /// System-wide settings for the pgaudit extension
        /// </summary>
        [Input("pgaudit")]
        public Input<Inputs.AlloydbomniAlloydbomniUserConfigPgauditGetArgs>? Pgaudit { get; set; }

        /// <summary>
        /// PGBouncer connection pooling settings
        /// </summary>
        [Input("pgbouncer")]
        public Input<Inputs.AlloydbomniAlloydbomniUserConfigPgbouncerGetArgs>? Pgbouncer { get; set; }

        /// <summary>
        /// System-wide settings for pglookout
        /// </summary>
        [Input("pglookout")]
        public Input<Inputs.AlloydbomniAlloydbomniUserConfigPglookoutGetArgs>? Pglookout { get; set; }

        /// <summary>
        /// Allow access to selected service ports from private networks
        /// </summary>
        [Input("privateAccess")]
        public Input<Inputs.AlloydbomniAlloydbomniUserConfigPrivateAccessGetArgs>? PrivateAccess { get; set; }

        /// <summary>
        /// Allow access to selected service components through Privatelink
        /// </summary>
        [Input("privatelinkAccess")]
        public Input<Inputs.AlloydbomniAlloydbomniUserConfigPrivatelinkAccessGetArgs>? PrivatelinkAccess { get; set; }

        /// <summary>
        /// Name of another project to fork a service from. This has effect only when a new service is being created. Example: `anotherprojectname`.
        /// </summary>
        [Input("projectToForkFrom")]
        public Input<string>? ProjectToForkFrom { get; set; }

        /// <summary>
        /// Allow access to selected service ports from the public Internet
        /// </summary>
        [Input("publicAccess")]
        public Input<Inputs.AlloydbomniAlloydbomniUserConfigPublicAccessGetArgs>? PublicAccess { get; set; }

        /// <summary>
        /// Recovery target time when forking a service. This has effect only when a new service is being created. Example: `2019-01-01 23:34:45`.
        /// </summary>
        [Input("recoveryTargetTime")]
        public Input<string>? RecoveryTargetTime { get; set; }

        /// <summary>
        /// Store logs for the service so that they are available in the HTTP API and console.
        /// </summary>
        [Input("serviceLog")]
        public Input<bool>? ServiceLog { get; set; }

        /// <summary>
        /// Name of another service to fork from. This has effect only when a new service is being created. Example: `anotherservicename`.
        /// </summary>
        [Input("serviceToForkFrom")]
        public Input<string>? ServiceToForkFrom { get; set; }

        /// <summary>
        /// Percentage of total RAM that the database server uses for shared memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts the shared_buffers configuration value. Changing this parameter causes a service restart. Example: `41.5`.
        /// </summary>
        [Input("sharedBuffersPercentage")]
        public Input<double>? SharedBuffersPercentage { get; set; }

        /// <summary>
        /// Use static public IP addresses.
        /// </summary>
        [Input("staticIps")]
        public Input<bool>? StaticIps { get; set; }

        /// <summary>
        /// Enum: `off`, `quorum`. Synchronous replication type. Note that the service plan also needs to support synchronous replication.
        /// </summary>
        [Input("synchronousReplication")]
        public Input<string>? SynchronousReplication { get; set; }

        /// <summary>
        /// Enum: `aiven`, `timescale`. Variant of the PostgreSQL service, may affect the features that are exposed by default.
        /// </summary>
        [Input("variant")]
        public Input<string>? Variant { get; set; }

        /// <summary>
        /// Sets the maximum amount of memory to be used by a query operation (such as a sort or hash table) before writing to temporary disk files, in MB. The default is 1MB + 0.075% of total RAM (up to 32MB). Example: `4`.
        /// </summary>
        [Input("workMem")]
        public Input<int>? WorkMem { get; set; }

        public AlloydbomniAlloydbomniUserConfigGetArgs()
        {
        }
        public static new AlloydbomniAlloydbomniUserConfigGetArgs Empty => new AlloydbomniAlloydbomniUserConfigGetArgs();
    }
}
