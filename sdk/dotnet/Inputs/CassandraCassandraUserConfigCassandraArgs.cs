// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Inputs
{

    public sealed class CassandraCassandraUserConfigCassandraArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Fail any multiple-partition batch exceeding this value. 50kb (10x warn threshold) by default. Example: `50`.
        /// </summary>
        [Input("batchSizeFailThresholdInKb")]
        public Input<int>? BatchSizeFailThresholdInKb { get; set; }

        /// <summary>
        /// Log a warning message on any multiple-partition batch size exceeding this value.5kb per batch by default.Caution should be taken on increasing the size of this thresholdas it can lead to node instability. Example: `5`.
        /// </summary>
        [Input("batchSizeWarnThresholdInKb")]
        public Input<int>? BatchSizeWarnThresholdInKb { get; set; }

        /// <summary>
        /// Name of the datacenter to which nodes of this service belong. Can be set only when creating the service. Example: `my-service-google-west1`.
        /// </summary>
        [Input("datacenter")]
        public Input<string>? Datacenter { get; set; }

        /// <summary>
        /// How long the coordinator waits for read operations to complete before timing it out. 5 seconds by default. Example: `5000`.
        /// </summary>
        [Input("readRequestTimeoutInMs")]
        public Input<int>? ReadRequestTimeoutInMs { get; set; }

        /// <summary>
        /// How long the coordinator waits for write requests to complete with at least one node in the local datacenter. 2 seconds by default. Example: `2000`.
        /// </summary>
        [Input("writeRequestTimeoutInMs")]
        public Input<int>? WriteRequestTimeoutInMs { get; set; }

        public CassandraCassandraUserConfigCassandraArgs()
        {
        }
        public static new CassandraCassandraUserConfigCassandraArgs Empty => new CassandraCassandraUserConfigCassandraArgs();
    }
}
