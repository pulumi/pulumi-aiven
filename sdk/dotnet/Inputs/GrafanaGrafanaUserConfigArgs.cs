// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Inputs
{

    public sealed class GrafanaGrafanaUserConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("additionalBackupRegions")]
        public Input<string>? AdditionalBackupRegions { get; set; }

        [Input("alertingEnabled")]
        public Input<bool>? AlertingEnabled { get; set; }

        [Input("alertingErrorOrTimeout")]
        public Input<string>? AlertingErrorOrTimeout { get; set; }

        [Input("alertingMaxAnnotationsToKeep")]
        public Input<int>? AlertingMaxAnnotationsToKeep { get; set; }

        [Input("alertingNodataOrNullvalues")]
        public Input<string>? AlertingNodataOrNullvalues { get; set; }

        [Input("allowEmbedding")]
        public Input<bool>? AllowEmbedding { get; set; }

        [Input("authAzuread")]
        public Input<Inputs.GrafanaGrafanaUserConfigAuthAzureadArgs>? AuthAzuread { get; set; }

        [Input("authBasicEnabled")]
        public Input<bool>? AuthBasicEnabled { get; set; }

        [Input("authGenericOauth")]
        public Input<Inputs.GrafanaGrafanaUserConfigAuthGenericOauthArgs>? AuthGenericOauth { get; set; }

        [Input("authGithub")]
        public Input<Inputs.GrafanaGrafanaUserConfigAuthGithubArgs>? AuthGithub { get; set; }

        [Input("authGitlab")]
        public Input<Inputs.GrafanaGrafanaUserConfigAuthGitlabArgs>? AuthGitlab { get; set; }

        [Input("authGoogle")]
        public Input<Inputs.GrafanaGrafanaUserConfigAuthGoogleArgs>? AuthGoogle { get; set; }

        [Input("cookieSamesite")]
        public Input<string>? CookieSamesite { get; set; }

        [Input("customDomain")]
        public Input<string>? CustomDomain { get; set; }

        [Input("dashboardPreviewsEnabled")]
        public Input<bool>? DashboardPreviewsEnabled { get; set; }

        [Input("dashboardsMinRefreshInterval")]
        public Input<string>? DashboardsMinRefreshInterval { get; set; }

        [Input("dashboardsVersionsToKeep")]
        public Input<int>? DashboardsVersionsToKeep { get; set; }

        [Input("dataproxySendUserHeader")]
        public Input<bool>? DataproxySendUserHeader { get; set; }

        [Input("dataproxyTimeout")]
        public Input<int>? DataproxyTimeout { get; set; }

        [Input("dateFormats")]
        public Input<Inputs.GrafanaGrafanaUserConfigDateFormatsArgs>? DateFormats { get; set; }

        [Input("disableGravatar")]
        public Input<bool>? DisableGravatar { get; set; }

        [Input("editorsCanAdmin")]
        public Input<bool>? EditorsCanAdmin { get; set; }

        [Input("externalImageStorage")]
        public Input<Inputs.GrafanaGrafanaUserConfigExternalImageStorageArgs>? ExternalImageStorage { get; set; }

        [Input("googleAnalyticsUaId")]
        public Input<string>? GoogleAnalyticsUaId { get; set; }

        [Input("ipFilterObjects")]
        private InputList<Inputs.GrafanaGrafanaUserConfigIpFilterObjectArgs>? _ipFilterObjects;
        public InputList<Inputs.GrafanaGrafanaUserConfigIpFilterObjectArgs> IpFilterObjects
        {
            get => _ipFilterObjects ?? (_ipFilterObjects = new InputList<Inputs.GrafanaGrafanaUserConfigIpFilterObjectArgs>());
            set => _ipFilterObjects = value;
        }

        [Input("ipFilterStrings")]
        private InputList<string>? _ipFilterStrings;
        public InputList<string> IpFilterStrings
        {
            get => _ipFilterStrings ?? (_ipFilterStrings = new InputList<string>());
            set => _ipFilterStrings = value;
        }

        [Input("ipFilters")]
        private InputList<string>? _ipFilters;
        [Obsolete(@"This will be removed in v5.0.0 and replaced with ip_filter_string instead.")]
        public InputList<string> IpFilters
        {
            get => _ipFilters ?? (_ipFilters = new InputList<string>());
            set => _ipFilters = value;
        }

        [Input("metricsEnabled")]
        public Input<bool>? MetricsEnabled { get; set; }

        [Input("oauthAllowInsecureEmailLookup")]
        public Input<bool>? OauthAllowInsecureEmailLookup { get; set; }

        [Input("privateAccess")]
        public Input<Inputs.GrafanaGrafanaUserConfigPrivateAccessArgs>? PrivateAccess { get; set; }

        [Input("privatelinkAccess")]
        public Input<Inputs.GrafanaGrafanaUserConfigPrivatelinkAccessArgs>? PrivatelinkAccess { get; set; }

        [Input("projectToForkFrom")]
        public Input<string>? ProjectToForkFrom { get; set; }

        [Input("publicAccess")]
        public Input<Inputs.GrafanaGrafanaUserConfigPublicAccessArgs>? PublicAccess { get; set; }

        [Input("recoveryBasebackupName")]
        public Input<string>? RecoveryBasebackupName { get; set; }

        [Input("serviceLog")]
        public Input<bool>? ServiceLog { get; set; }

        [Input("serviceToForkFrom")]
        public Input<string>? ServiceToForkFrom { get; set; }

        [Input("smtpServer")]
        public Input<Inputs.GrafanaGrafanaUserConfigSmtpServerArgs>? SmtpServer { get; set; }

        [Input("staticIps")]
        public Input<bool>? StaticIps { get; set; }

        [Input("unifiedAlertingEnabled")]
        public Input<bool>? UnifiedAlertingEnabled { get; set; }

        [Input("userAutoAssignOrg")]
        public Input<bool>? UserAutoAssignOrg { get; set; }

        [Input("userAutoAssignOrgRole")]
        public Input<string>? UserAutoAssignOrgRole { get; set; }

        [Input("viewersCanEdit")]
        public Input<bool>? ViewersCanEdit { get; set; }

        public GrafanaGrafanaUserConfigArgs()
        {
        }
        public static new GrafanaGrafanaUserConfigArgs Empty => new GrafanaGrafanaUserConfigArgs();
    }
}
