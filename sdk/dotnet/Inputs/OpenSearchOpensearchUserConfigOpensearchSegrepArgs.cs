// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Inputs
{

    public sealed class OpenSearchOpensearchUserConfigOpensearchSegrepArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The maximum number of indexing checkpoints that a replica shard can fall behind when copying from primary. Once `segrep.pressure.checkpoint.limit` is breached along with `segrep.pressure.time.limit`, the segment replication backpressure mechanism is initiated. Default is 4 checkpoints. Default: `4`.
        /// </summary>
        [Input("pressureCheckpointLimit")]
        public Input<int>? PressureCheckpointLimit { get; set; }

        /// <summary>
        /// Enables the segment replication backpressure mechanism. Default is false. Default: `False`.
        /// </summary>
        [Input("pressureEnabled")]
        public Input<bool>? PressureEnabled { get; set; }

        /// <summary>
        /// The maximum number of stale replica shards that can exist in a replication group. Once `segrep.pressure.replica.stale.limit` is breached, the segment replication backpressure mechanism is initiated. Default is .5, which is 50% of a replication group. Default: `0.5`.
        /// </summary>
        [Input("pressureReplicaStaleLimit")]
        public Input<double>? PressureReplicaStaleLimit { get; set; }

        /// <summary>
        /// The maximum amount of time that a replica shard can take to copy from the primary shard. Once segrep.pressure.time.limit is breached along with segrep.pressure.checkpoint.limit, the segment replication backpressure mechanism is initiated. Default is 5 minutes. Default: `5m`.
        /// </summary>
        [Input("pressureTimeLimit")]
        public Input<string>? PressureTimeLimit { get; set; }

        public OpenSearchOpensearchUserConfigOpensearchSegrepArgs()
        {
        }
        public static new OpenSearchOpensearchUserConfigOpensearchSegrepArgs Empty => new OpenSearchOpensearchUserConfigOpensearchSegrepArgs();
    }
}
