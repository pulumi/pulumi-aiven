// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Inputs
{

    public sealed class ServiceIntegrationEndpointExternalKafkaUserConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Bootstrap servers. Example: `10.0.0.1:9092,10.0.0.2:9092`.
        /// </summary>
        [Input("bootstrapServers", required: true)]
        public Input<string> BootstrapServers { get; set; } = null!;

        /// <summary>
        /// Enum: `PLAIN`, `SCRAM-SHA-256`, `SCRAM-SHA-512`. SASL mechanism used for connections to the Kafka server.
        /// </summary>
        [Input("saslMechanism")]
        public Input<string>? SaslMechanism { get; set; }

        [Input("saslPlainPassword")]
        private Input<string>? _saslPlainPassword;

        /// <summary>
        /// Password for SASL PLAIN mechanism in the Kafka server. Example: `admin`.
        /// </summary>
        public Input<string>? SaslPlainPassword
        {
            get => _saslPlainPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _saslPlainPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Username for SASL PLAIN mechanism in the Kafka server. Example: `admin`.
        /// </summary>
        [Input("saslPlainUsername")]
        public Input<string>? SaslPlainUsername { get; set; }

        /// <summary>
        /// Enum: `PLAINTEXT`, `SASL_PLAINTEXT`, `SASL_SSL`, `SSL`. Security protocol.
        /// </summary>
        [Input("securityProtocol", required: true)]
        public Input<string> SecurityProtocol { get; set; } = null!;

        /// <summary>
        /// PEM-encoded CA certificate. Example: `-----BEGIN CERTIFICATE-----
        /// ...
        /// -----END CERTIFICATE-----
        /// `.
        /// </summary>
        [Input("sslCaCert")]
        public Input<string>? SslCaCert { get; set; }

        /// <summary>
        /// PEM-encoded client certificate. Example: `-----BEGIN CERTIFICATE-----
        /// ...
        /// -----END CERTIFICATE-----
        /// `.
        /// </summary>
        [Input("sslClientCert")]
        public Input<string>? SslClientCert { get; set; }

        [Input("sslClientKey")]
        private Input<string>? _sslClientKey;

        /// <summary>
        /// PEM-encoded client key. Example: `-----BEGIN PRIVATE KEY-----
        /// ...
        /// -----END PRIVATE KEY-----
        /// `.
        /// </summary>
        public Input<string>? SslClientKey
        {
            get => _sslClientKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sslClientKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Enum: `https`. The endpoint identification algorithm to validate server hostname using server certificate.
        /// </summary>
        [Input("sslEndpointIdentificationAlgorithm")]
        public Input<string>? SslEndpointIdentificationAlgorithm { get; set; }

        public ServiceIntegrationEndpointExternalKafkaUserConfigArgs()
        {
        }
        public static new ServiceIntegrationEndpointExternalKafkaUserConfigArgs Empty => new ServiceIntegrationEndpointExternalKafkaUserConfigArgs();
    }
}
