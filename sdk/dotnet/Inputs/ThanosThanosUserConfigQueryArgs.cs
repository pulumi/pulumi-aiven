// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Inputs
{

    public sealed class ThanosThanosUserConfigQueryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Set the default evaluation interval for subqueries. Default: `1m`.
        /// </summary>
        [Input("queryDefaultEvaluationInterval")]
        public Input<string>? QueryDefaultEvaluationInterval { get; set; }

        /// <summary>
        /// The maximum lookback duration for retrieving metrics during expression evaluations in PromQL. PromQL always evaluates the query for a certain timestamp, and it looks back for the given amount of time to get the latest sample. If it exceeds the maximum lookback delta, it assumes the series is stale and returns none (a gap). The lookback delta should be set to at least 2 times the slowest scrape interval. If unset, it will use the promql default of 5m. Default: `5m`.
        /// </summary>
        [Input("queryLookbackDelta")]
        public Input<string>? QueryLookbackDelta { get; set; }

        /// <summary>
        /// The default metadata time range duration for retrieving labels through Labels and Series API when the range parameters are not specified. The zero value means the range covers the time since the beginning. Default: `0s`.
        /// </summary>
        [Input("queryMetadataDefaultTimeRange")]
        public Input<string>? QueryMetadataDefaultTimeRange { get; set; }

        /// <summary>
        /// Maximum time to process a query by the query node. Default: `2m`.
        /// </summary>
        [Input("queryTimeout")]
        public Input<string>? QueryTimeout { get; set; }

        public ThanosThanosUserConfigQueryArgs()
        {
        }
        public static new ThanosThanosUserConfigQueryArgs Empty => new ThanosThanosUserConfigQueryArgs();
    }
}
