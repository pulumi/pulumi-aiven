// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Inputs
{

    public sealed class GetPgPgUserConfigPgbouncerInputArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the automatically created database pools have been unused this 
        /// many seconds, they are freed. If 0 then timeout is disabled.
        /// </summary>
        [Input("autodbIdleTimeout")]
        public Input<string>? AutodbIdleTimeout { get; set; }

        /// <summary>
        /// Do not allow more than this many server connections per database 
        /// (regardless of user). Setting it to 0 means unlimited.
        /// </summary>
        [Input("autodbMaxDbConnections")]
        public Input<string>? AutodbMaxDbConnections { get; set; }

        /// <summary>
        /// PGBouncer pool mode
        /// </summary>
        [Input("autodbPoolMode")]
        public Input<string>? AutodbPoolMode { get; set; }

        /// <summary>
        /// If non-zero then create automatically a pool of that size per user 
        /// when a pool doesn't exist.
        /// </summary>
        [Input("autodbPoolSize")]
        public Input<string>? AutodbPoolSize { get; set; }

        [Input("ignoreStartupParameters")]
        private InputList<string>? _ignoreStartupParameters;

        /// <summary>
        /// Enum of parameters to ignore when given in startup packet.
        /// </summary>
        public InputList<string> IgnoreStartupParameters
        {
            get => _ignoreStartupParameters ?? (_ignoreStartupParameters = new InputList<string>());
            set => _ignoreStartupParameters = value;
        }

        /// <summary>
        /// Add more server connections to pool if below this number. Improves 
        /// behavior when usual load comes suddenly back after period of total inactivity. The value is
        /// effectively capped at the pool size.
        /// </summary>
        [Input("minPoolSize")]
        public Input<string>? MinPoolSize { get; set; }

        /// <summary>
        /// If a server connection has been idle more than this many seconds 
        /// it will be dropped. If 0 then timeout is disabled.
        /// </summary>
        [Input("serverIdleTimeout")]
        public Input<string>? ServerIdleTimeout { get; set; }

        /// <summary>
        /// The pooler will close an unused server connection that has been connected 
        /// longer than this.
        /// </summary>
        [Input("serverLifetime")]
        public Input<string>? ServerLifetime { get; set; }

        /// <summary>
        /// Run server_reset_query (DISCARD ALL) in all pooling modes.
        /// </summary>
        [Input("serverResetQueryAlways")]
        public Input<string>? ServerResetQueryAlways { get; set; }

        public GetPgPgUserConfigPgbouncerInputArgs()
        {
        }
    }
}
