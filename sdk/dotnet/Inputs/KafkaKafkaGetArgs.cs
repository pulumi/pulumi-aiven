// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Inputs
{

    public sealed class KafkaKafkaGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessCert")]
        private Input<string>? _accessCert;
        public Input<string>? AccessCert
        {
            get => _accessCert;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accessCert = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("accessKey")]
        private Input<string>? _accessKey;
        public Input<string>? AccessKey
        {
            get => _accessKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accessKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("connectUri")]
        private Input<string>? _connectUri;
        public Input<string>? ConnectUri
        {
            get => _connectUri;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _connectUri = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("restUri")]
        private Input<string>? _restUri;
        public Input<string>? RestUri
        {
            get => _restUri;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _restUri = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("schemaRegistryUri")]
        private Input<string>? _schemaRegistryUri;
        public Input<string>? SchemaRegistryUri
        {
            get => _schemaRegistryUri;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _schemaRegistryUri = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public KafkaKafkaGetArgs()
        {
        }
        public static new KafkaKafkaGetArgs Empty => new KafkaKafkaGetArgs();
    }
}
