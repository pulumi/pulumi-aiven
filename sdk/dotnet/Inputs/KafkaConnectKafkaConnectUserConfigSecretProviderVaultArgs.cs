// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Inputs
{

    public sealed class KafkaConnectKafkaConnectUserConfigSecretProviderVaultArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Address of the Vault server.
        /// </summary>
        [Input("address", required: true)]
        public Input<string> Address { get; set; } = null!;

        /// <summary>
        /// Enum: `token`. Auth method of the vault secret provider.
        /// </summary>
        [Input("authMethod", required: true)]
        public Input<string> AuthMethod { get; set; } = null!;

        /// <summary>
        /// Enum: `1`, `2`, and newer. KV Secrets Engine version of the Vault server instance.
        /// </summary>
        [Input("engineVersion")]
        public Input<int>? EngineVersion { get; set; }

        /// <summary>
        /// Prefix path depth of the secrets Engine. Default is 1. If the secrets engine path has more than one segment it has to be increased to the number of segments.
        /// </summary>
        [Input("prefixPathDepth")]
        public Input<int>? PrefixPathDepth { get; set; }

        [Input("token")]
        private Input<string>? _token;

        /// <summary>
        /// Token used to authenticate with vault and auth method `token`.
        /// </summary>
        public Input<string>? Token
        {
            get => _token;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _token = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public KafkaConnectKafkaConnectUserConfigSecretProviderVaultArgs()
        {
        }
        public static new KafkaConnectKafkaConnectUserConfigSecretProviderVaultArgs Empty => new KafkaConnectKafkaConnectUserConfigSecretProviderVaultArgs();
    }
}
