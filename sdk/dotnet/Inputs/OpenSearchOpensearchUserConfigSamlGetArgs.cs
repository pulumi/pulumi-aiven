// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven.Inputs
{

    public sealed class OpenSearchOpensearchUserConfigSamlGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enables or disables SAML-based authentication for OpenSearch. When enabled, users can authenticate using SAML with an Identity Provider. Default: `True`.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// The unique identifier for the Identity Provider (IdP) entity that is used for SAML authentication. This value is typically provided by the IdP. Example: `test-idp-entity-id`.
        /// </summary>
        [Input("idpEntityId", required: true)]
        public Input<string> IdpEntityId { get; set; } = null!;

        /// <summary>
        /// The URL of the SAML metadata for the Identity Provider (IdP). This is used to configure SAML-based authentication with the IdP. Example: `https://test-account.okta.com/app/exk491jujcVc83LEX697/sso/saml/metadata`.
        /// </summary>
        [Input("idpMetadataUrl", required: true)]
        public Input<string> IdpMetadataUrl { get; set; } = null!;

        /// <summary>
        /// This parameter specifies the PEM-encoded root certificate authority (CA) content for the SAML identity provider (IdP) server verification. The root CA content is used to verify the SSL/TLS certificate presented by the server. Example: `-----BEGIN CERTIFICATE-----
        /// ...
        /// -----END CERTIFICATE-----
        /// `.
        /// </summary>
        [Input("idpPemtrustedcasContent")]
        public Input<string>? IdpPemtrustedcasContent { get; set; }

        /// <summary>
        /// Optional. Specifies the attribute in the SAML response where role information is stored, if available. Role attributes are not required for SAML authentication, but can be included in SAML assertions by most Identity Providers (IdPs) to determine user access levels or permissions. Example: `RoleName`.
        /// </summary>
        [Input("rolesKey")]
        public Input<string>? RolesKey { get; set; }

        /// <summary>
        /// The unique identifier for the Service Provider (SP) entity that is used for SAML authentication. This value is typically provided by the SP. Example: `test-sp-entity-id`.
        /// </summary>
        [Input("spEntityId", required: true)]
        public Input<string> SpEntityId { get; set; } = null!;

        /// <summary>
        /// Optional. Specifies the attribute in the SAML response where the subject identifier is stored. If not configured, the NameID attribute is used by default. Example: `NameID`.
        /// </summary>
        [Input("subjectKey")]
        public Input<string>? SubjectKey { get; set; }

        public OpenSearchOpensearchUserConfigSamlGetArgs()
        {
        }
        public static new OpenSearchOpensearchUserConfigSamlGetArgs Empty => new OpenSearchOpensearchUserConfigSamlGetArgs();
    }
}
