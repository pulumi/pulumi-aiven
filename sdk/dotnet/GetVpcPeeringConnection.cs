// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetVpcPeeringConnection
    {
        /// <summary>
        /// The VPC Peering Connection data source provides information about the existing Aiven VPC Peering Connection.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var mypeeringconnection = Aiven.GetVpcPeeringConnection.Invoke(new()
        ///     {
        ///         VpcId = aiven_project_vpc.Myvpc.Id,
        ///         PeerCloudAccount = "&lt;PEER_ACCOUNT_ID&gt;",
        ///         PeerVpc = "&lt;PEER_VPC_ID/NAME&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetVpcPeeringConnectionResult> InvokeAsync(GetVpcPeeringConnectionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVpcPeeringConnectionResult>("aiven:index/getVpcPeeringConnection:getVpcPeeringConnection", args ?? new GetVpcPeeringConnectionArgs(), options.WithDefaults());

        /// <summary>
        /// The VPC Peering Connection data source provides information about the existing Aiven VPC Peering Connection.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var mypeeringconnection = Aiven.GetVpcPeeringConnection.Invoke(new()
        ///     {
        ///         VpcId = aiven_project_vpc.Myvpc.Id,
        ///         PeerCloudAccount = "&lt;PEER_ACCOUNT_ID&gt;",
        ///         PeerVpc = "&lt;PEER_VPC_ID/NAME&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetVpcPeeringConnectionResult> Invoke(GetVpcPeeringConnectionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcPeeringConnectionResult>("aiven:index/getVpcPeeringConnection:getVpcPeeringConnection", args ?? new GetVpcPeeringConnectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVpcPeeringConnectionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// AWS account ID or GCP project ID of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("peerCloudAccount", required: true)]
        public string PeerCloudAccount { get; set; } = null!;

        /// <summary>
        /// AWS VPC ID or GCP VPC network name of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("peerVpc", required: true)]
        public string PeerVpc { get; set; } = null!;

        /// <summary>
        /// The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("vpcId", required: true)]
        public string VpcId { get; set; } = null!;

        public GetVpcPeeringConnectionArgs()
        {
        }
        public static new GetVpcPeeringConnectionArgs Empty => new GetVpcPeeringConnectionArgs();
    }

    public sealed class GetVpcPeeringConnectionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// AWS account ID or GCP project ID of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("peerCloudAccount", required: true)]
        public Input<string> PeerCloudAccount { get; set; } = null!;

        /// <summary>
        /// AWS VPC ID or GCP VPC network name of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("peerVpc", required: true)]
        public Input<string> PeerVpc { get; set; } = null!;

        /// <summary>
        /// The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public GetVpcPeeringConnectionInvokeArgs()
        {
        }
        public static new GetVpcPeeringConnectionInvokeArgs Empty => new GetVpcPeeringConnectionInvokeArgs();
    }


    [OutputType]
    public sealed class GetVpcPeeringConnectionResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        public readonly string PeerAzureAppId;
        /// <summary>
        /// Azure tenant id in UUID4 form. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        public readonly string PeerAzureTenantId;
        /// <summary>
        /// AWS account ID or GCP project ID of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        public readonly string PeerCloudAccount;
        /// <summary>
        /// AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        public readonly string PeerRegion;
        /// <summary>
        /// Azure resource group name of the peered VPC This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        public readonly string PeerResourceGroup;
        /// <summary>
        /// AWS VPC ID or GCP VPC network name of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        public readonly string PeerVpc;
        /// <summary>
        /// Cloud provider identifier for the peering connection if available
        /// </summary>
        public readonly string PeeringConnectionId;
        /// <summary>
        /// State of the peering connection
        /// </summary>
        public readonly string State;
        /// <summary>
        /// State-specific help or error information
        /// </summary>
        public readonly ImmutableDictionary<string, object> StateInfo;
        /// <summary>
        /// The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        public readonly string VpcId;

        [OutputConstructor]
        private GetVpcPeeringConnectionResult(
            string id,

            string peerAzureAppId,

            string peerAzureTenantId,

            string peerCloudAccount,

            string peerRegion,

            string peerResourceGroup,

            string peerVpc,

            string peeringConnectionId,

            string state,

            ImmutableDictionary<string, object> stateInfo,

            string vpcId)
        {
            Id = id;
            PeerAzureAppId = peerAzureAppId;
            PeerAzureTenantId = peerAzureTenantId;
            PeerCloudAccount = peerCloudAccount;
            PeerRegion = peerRegion;
            PeerResourceGroup = peerResourceGroup;
            PeerVpc = peerVpc;
            PeeringConnectionId = peeringConnectionId;
            State = state;
            StateInfo = stateInfo;
            VpcId = vpcId;
        }
    }
}
