// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetBillingGroup
    {
        /// <summary>
        /// Gets information about a billing group.
        /// </summary>
        public static Task<GetBillingGroupResult> InvokeAsync(GetBillingGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBillingGroupResult>("aiven:index/getBillingGroup:getBillingGroup", args ?? new GetBillingGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about a billing group.
        /// </summary>
        public static Output<GetBillingGroupResult> Invoke(GetBillingGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBillingGroupResult>("aiven:index/getBillingGroup:getBillingGroup", args ?? new GetBillingGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBillingGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the billing group. To set up proper dependencies please refer to this variable as a reference.
        /// </summary>
        [Input("billingGroupId", required: true)]
        public string BillingGroupId { get; set; } = null!;

        public GetBillingGroupArgs()
        {
        }
        public static new GetBillingGroupArgs Empty => new GetBillingGroupArgs();
    }

    public sealed class GetBillingGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the billing group. To set up proper dependencies please refer to this variable as a reference.
        /// </summary>
        [Input("billingGroupId", required: true)]
        public Input<string> BillingGroupId { get; set; } = null!;

        public GetBillingGroupInvokeArgs()
        {
        }
        public static new GetBillingGroupInvokeArgs Empty => new GetBillingGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetBillingGroupResult
    {
        /// <summary>
        /// Account ID.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// Address lines 1 and 2. For example, street, PO box, or building.
        /// </summary>
        public readonly ImmutableArray<string> AddressLines;
        /// <summary>
        /// Billing currency for the billing group. Supported currencies are: AUD, CAD, CHF, DKK, EUR, GBP, JPY, NOK, NZD, SEK, SGD, and USD.
        /// </summary>
        public readonly string BillingCurrency;
        /// <summary>
        /// Email address of billing contacts. Invoices and other payment notifications are emailed to all billing contacts.
        /// </summary>
        public readonly ImmutableArray<string> BillingEmails;
        /// <summary>
        /// Additional information to include on your invoice (for example, a reference number).
        /// </summary>
        public readonly string BillingExtraText;
        /// <summary>
        /// The ID of the billing group. To set up proper dependencies please refer to this variable as a reference.
        /// </summary>
        public readonly string BillingGroupId;
        /// <summary>
        /// Credit card ID.
        /// </summary>
        public readonly string CardId;
        /// <summary>
        /// City, district, suburb, town, or village.
        /// </summary>
        public readonly string City;
        /// <summary>
        /// Your company name.
        /// </summary>
        public readonly string Company;
        /// <summary>
        /// ID of the billing group to copy the company name, address, currency, billing contacts, and extra text from.
        /// </summary>
        public readonly string CopyFromBillingGroup;
        /// <summary>
        /// Two-letter country code.
        /// </summary>
        public readonly string CountryCode;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the billing group.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Link a billing group to an existing organization or account by using its ID. To set up proper dependencies please refer to this variable as a reference.
        /// </summary>
        public readonly string ParentId;
        /// <summary>
        /// State or province.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The VAT identification number for your company.
        /// </summary>
        public readonly string VatId;
        /// <summary>
        /// Zip or postal code.
        /// </summary>
        public readonly string ZipCode;

        [OutputConstructor]
        private GetBillingGroupResult(
            string accountId,

            ImmutableArray<string> addressLines,

            string billingCurrency,

            ImmutableArray<string> billingEmails,

            string billingExtraText,

            string billingGroupId,

            string cardId,

            string city,

            string company,

            string copyFromBillingGroup,

            string countryCode,

            string id,

            string name,

            string parentId,

            string state,

            string vatId,

            string zipCode)
        {
            AccountId = accountId;
            AddressLines = addressLines;
            BillingCurrency = billingCurrency;
            BillingEmails = billingEmails;
            BillingExtraText = billingExtraText;
            BillingGroupId = billingGroupId;
            CardId = cardId;
            City = city;
            Company = company;
            CopyFromBillingGroup = copyFromBillingGroup;
            CountryCode = countryCode;
            Id = id;
            Name = name;
            ParentId = parentId;
            State = state;
            VatId = vatId;
            ZipCode = zipCode;
        }
    }
}
