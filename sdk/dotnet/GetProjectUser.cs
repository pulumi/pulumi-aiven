// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aiven
{
    public static class GetProjectUser
    {
        /// <summary>
        /// The Project User data source provides information about the existing Aiven Project User.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var mytestuser = Aiven.GetProjectUser.Invoke(new()
        ///     {
        ///         Project = aiven_project.Myproject.Project,
        ///         Email = "john.doe@example.com",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetProjectUserResult> InvokeAsync(GetProjectUserArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProjectUserResult>("aiven:index/getProjectUser:getProjectUser", args ?? new GetProjectUserArgs(), options.WithDefaults());

        /// <summary>
        /// The Project User data source provides information about the existing Aiven Project User.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aiven = Pulumi.Aiven;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var mytestuser = Aiven.GetProjectUser.Invoke(new()
        ///     {
        ///         Project = aiven_project.Myproject.Project,
        ///         Email = "john.doe@example.com",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetProjectUserResult> Invoke(GetProjectUserInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectUserResult>("aiven:index/getProjectUser:getProjectUser", args ?? new GetProjectUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProjectUserArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Email address of the user. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("email", required: true)]
        public string Email { get; set; } = null!;

        /// <summary>
        /// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        public GetProjectUserArgs()
        {
        }
        public static new GetProjectUserArgs Empty => new GetProjectUserArgs();
    }

    public sealed class GetProjectUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Email address of the user. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("email", required: true)]
        public Input<string> Email { get; set; } = null!;

        /// <summary>
        /// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        public GetProjectUserInvokeArgs()
        {
        }
        public static new GetProjectUserInvokeArgs Empty => new GetProjectUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetProjectUserResult
    {
        /// <summary>
        /// Whether the user has accepted the request to join the project; adding user to a project sends an invitation to the target user and the actual membership is only created once the user accepts the invitation.
        /// </summary>
        public readonly bool Accepted;
        /// <summary>
        /// Email address of the user. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        public readonly string Email;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Project membership type. The possible values are `admin`, `developer` and `operator`.
        /// </summary>
        public readonly string MemberType;
        /// <summary>
        /// Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        /// </summary>
        public readonly string Project;

        [OutputConstructor]
        private GetProjectUserResult(
            bool accepted,

            string email,

            string id,

            string memberType,

            string project)
        {
            Accepted = accepted;
            Email = email;
            Id = id;
            MemberType = memberType;
            Project = project;
        }
    }
}
